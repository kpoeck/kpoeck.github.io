<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="4886" onload="init(evt)" viewBox="0 0 1200 4886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="4886.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="4869" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="4869" > </text>
<g id="frames">
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (3 samples, 0.02%)</title><rect x="652.8" y="3557" width="0.2" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="655.81" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1589" width="1.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="623.86" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.1" y="1589" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="627.15" y="1599.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.88 (28 samples, 0.18%)</title><rect x="1186.9" y="1813" width="2.1" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="1189.87" y="1823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1957" width="0.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="629.16" y="1967.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.26 (14 samples, 0.09%)</title><rect x="1187.5" y="661" width="1.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="1190.54" y="671.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.1" y="789" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="626.10" y="799.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Vaslist&gt;::smart_ptr(core::Vaslist*) (3 samples, 0.02%)</title><rect x="867.0" y="3653" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="869.95" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1733" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="626.70" y="1743.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="649.0" y="3429" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="652.00" y="3439.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="625.3" y="741" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="628.27" y="751.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1845" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="635.43" y="1855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="517" width="0.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="622.44" y="527.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3157" width="284.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="13.00" y="3167.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`combineInstructionsOverFunction(llvm::Function&amp;, llvm::InstCombineWorklist&amp;, llvm::AAResults*, llvm::AssumptionCache&amp;, llvm::TargetLibraryInfo&amp;, llvm::DominatorTree&amp;, llvm::OptimizationRemarkEmitter&amp;, bool, llvm::LoopInfo*) (2 samples, 0.01%)</title><rect x="636.5" y="2997" width="0.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="639.54" y="3007.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="604.1" y="4293" width="0.2" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="607.14" y="4303.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="624.1" y="1797" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="627.15" y="1807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="627.5" y="1765" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="630.51" y="1775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="627.7" y="725" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="630.73" y="735.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.14 (7 samples, 0.04%)</title><rect x="874.9" y="2965" width="0.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="877.94" y="2975.5" ></text>
</g>
<g >
<title>`llvm::MCAssembler::Finish() (3 samples, 0.02%)</title><rect x="572.7" y="4389" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="575.72" y="4399.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="628.2" y="709" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="631.18" y="719.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (4 samples, 0.03%)</title><rect x="141.9" y="149" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="144.89" y="159.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="624.3" y="1717" width="1.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="627.30" y="1727.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.293 (5 samples, 0.03%)</title><rect x="1156.6" y="3717" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1159.64" y="3727.5" ></text>
</g>
<g >
<title>0x1110a5456 (10 samples, 0.06%)</title><rect x="622.4" y="1557" width="0.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="625.35" y="1567.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGBuilder::getValue(llvm::Value const*) (3 samples, 0.02%)</title><rect x="582.3" y="4293" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="585.27" y="4303.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (3 samples, 0.02%)</title><rect x="1184.2" y="2389" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="1187.18" y="2399.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.65 (19 samples, 0.12%)</title><rect x="1187.3" y="1093" width="1.4" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="1190.31" y="1103.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (12 samples, 0.08%)</title><rect x="626.2" y="181" width="0.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="629.16" y="191.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::smart_ptr&lt;core::T_O&gt;, void*) (3 samples, 0.02%)</title><rect x="921.1" y="3669" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="924.07" y="3679.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.7 (21 samples, 0.13%)</title><rect x="656.7" y="2981" width="1.6" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="659.69" y="2991.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (6 samples, 0.04%)</title><rect x="629.4" y="2629" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="632.45" y="2639.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="623.1" y="629" width="0.2" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="626.10" y="639.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="622.1" y="229" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="625.13" y="239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="373" width="1.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="627.30" y="383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="181" width="0.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="622.44" y="191.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="533" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="626.33" y="543.5" ></text>
</g>
<g >
<title>0x1501b4cfb (64 samples, 0.40%)</title><rect x="282.0" y="181" width="4.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="284.99" y="191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.3" y="1989" width="0.1" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="623.27" y="1999.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (435 samples, 2.75%)</title><rect x="240.9" y="485" width="32.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="243.86" y="495.5" >`C..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="645" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="633.64" y="655.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="627.7" y="741" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="630.73" y="751.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.60 (6 samples, 0.04%)</title><rect x="823.3" y="2885" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="826.29" y="2895.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.20 (20 samples, 0.13%)</title><rect x="876.3" y="2917" width="1.5" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="879.28" y="2927.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="624.3" y="1141" width="1.0" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="627.30" y="1151.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="655.9" y="3445" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="658.94" y="3455.5" ></text>
</g>
<g >
<title>`cc_fdefinition (12 samples, 0.08%)</title><rect x="932.3" y="3733" width="0.9" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="935.26" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.04%)</title><rect x="620.3" y="2837" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="623.27" y="2847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="1269" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="628.94" y="1279.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch(llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt;&amp;, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::BatchUpdateInfo*) (2 samples, 0.01%)</title><rect x="600.1" y="4389" width="0.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="603.11" y="4399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="2613" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="622.15" y="2623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.05%)</title><rect x="627.9" y="1973" width="0.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="630.88" y="1983.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^714^TOP-COMPILE-FILE.490 (192 samples, 1.21%)</title><rect x="619.1" y="3781" width="14.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="622.07" y="3791.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (3 samples, 0.02%)</title><rect x="646.8" y="3269" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="649.76" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1141" width="0.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="629.16" y="1151.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (435 samples, 2.75%)</title><rect x="240.9" y="597" width="32.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="243.86" y="607.5" >`C..</text>
</g>
<g >
<title>`llvm::MachineFunctionPass::runOnFunction(llvm::Function&amp;) (5 samples, 0.03%)</title><rect x="620.9" y="389" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="623.86" y="399.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (52 samples, 0.33%)</title><rect x="917.9" y="3717" width="3.9" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="920.93" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.8" y="1701" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="628.79" y="1711.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (7 samples, 0.04%)</title><rect x="659.5" y="3317" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="662.45" y="3327.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (20 samples, 0.13%)</title><rect x="876.3" y="2869" width="1.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="879.28" y="2879.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (27 samples, 0.17%)</title><rect x="630.3" y="2693" width="2.1" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="633.34" y="2703.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="650.4" y="3477" width="0.3" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="653.42" y="3487.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^494^TOP-COMPILE-FILE.54 (3 samples, 0.02%)</title><rect x="823.5" y="1461" width="0.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="826.51" y="1471.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="101" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="622.15" y="111.5" ></text>
</g>
<g >
<title>`read-common.lisp-read-common192^53^TOP-COMPILE-FILE.25 (96 samples, 0.61%)</title><rect x="286.9" y="901" width="7.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="289.92" y="911.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (20 samples, 0.13%)</title><rect x="776.4" y="3589" width="1.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="779.41" y="3599.5" ></text>
</g>
<g >
<title>0x110d5d13e (6 samples, 0.04%)</title><rect x="967.3" y="3717" width="0.4" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="970.27" y="3727.5" ></text>
</g>
<g >
<title>`llvmo::ClaspJIT_O::addModule(gctools::smart_ptr&lt;llvmo::Module_O&gt;) (3 samples, 0.02%)</title><rect x="997.7" y="3029" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1000.65" y="3039.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (33 samples, 0.21%)</title><rect x="948.8" y="3541" width="2.4" height="15.0" fill="rgb(219,79,79)" rx="2" ry="2" />
<text  x="951.76" y="3551.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="626.2" y="1237" width="0.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="629.16" y="1247.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (44 samples, 0.28%)</title><rect x="1086.8" y="3653" width="3.3" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="1089.85" y="3663.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METHOD^^.74 (829 samples, 5.24%)</title><rect x="174.3" y="197" width="61.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="177.28" y="207.5" >`CONVE..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (10 samples, 0.06%)</title><rect x="622.4" y="357" width="0.7" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="625.35" y="367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.5" y="1365" width="0.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="623.49" y="1375.5" ></text>
</g>
<g >
<title>0x114007367 (2 samples, 0.01%)</title><rect x="14.9" y="469" width="0.1" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="17.85" y="479.5" ></text>
</g>
<g >
<title>0x1110a5456 (2 samples, 0.01%)</title><rect x="620.6" y="1205" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="623.64" y="1215.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="658.5" y="3301" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="661.48" y="3311.5" ></text>
</g>
<g >
<title>0x123710cb8 (47 samples, 0.30%)</title><rect x="10.0" y="629" width="3.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.90 (28 samples, 0.18%)</title><rect x="1186.9" y="1797" width="2.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="1189.87" y="1807.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (7 samples, 0.04%)</title><rect x="656.9" y="2421" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="659.91" y="2431.5" ></text>
</g>
<g >
<title>`llvm::gvn::GVNLegacyPass::runOnFunction(llvm::Function&amp;) (19 samples, 0.12%)</title><rect x="606.4" y="4405" width="1.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="609.38" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (21 samples, 0.13%)</title><rect x="630.8" y="1205" width="1.6" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="633.79" y="1215.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (6 samples, 0.04%)</title><rect x="619.4" y="2389" width="0.4" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="622.37" y="2399.5" ></text>
</g>
<g >
<title>0x1110a5456 (2 samples, 0.01%)</title><rect x="630.4" y="1301" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="633.42" y="1311.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (7 samples, 0.04%)</title><rect x="1052.7" y="3717" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="1055.66" y="3727.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (3 samples, 0.02%)</title><rect x="901.1" y="3573" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="904.14" y="3583.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (2 samples, 0.01%)</title><rect x="240.7" y="341" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="243.72" y="351.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (20 samples, 0.13%)</title><rect x="630.8" y="709" width="1.5" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="633.79" y="719.5" ></text>
</g>
<g >
<title>`llvm::JumpThreadingPass::ProcessBlock(llvm::BasicBlock*) (5 samples, 0.03%)</title><rect x="598.3" y="4373" width="0.4" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="601.32" y="4383.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (4 samples, 0.03%)</title><rect x="1170.8" y="3541" width="0.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="1173.82" y="3551.5" ></text>
</g>
<g >
<title>`llvm::TargetLoweringBase::getTypeConversion(llvm::LLVMContext&amp;, llvm::EVT) const (2 samples, 0.01%)</title><rect x="580.6" y="4309" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="583.63" y="4319.5" ></text>
</g>
<g >
<title>`CONSP^COMMON-LISP^FN^^ (7 samples, 0.04%)</title><rect x="982.1" y="3717" width="0.5" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="985.12" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (6 samples, 0.04%)</title><rect x="629.4" y="2501" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="632.45" y="2511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1525" width="0.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="623.49" y="1535.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.203 (7,680 samples, 48.58%)</title><rect x="616.3" y="4149" width="573.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="619.31" y="4159.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.203</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="622.1" y="1205" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="625.13" y="1215.5" ></text>
</g>
<g >
<title>`ast-interpreter.lisp-ast-interpreter424^491^TOP-COMPILE-FILE.659 (5 samples, 0.03%)</title><rect x="14.5" y="37" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="17.48" y="47.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::CodeGenAndEmitDAG() (52 samples, 0.33%)</title><rect x="577.9" y="4357" width="3.9" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="580.94" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="2021" width="1.2" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="623.86" y="2031.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (7 samples, 0.04%)</title><rect x="620.3" y="2821" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="623.27" y="2831.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="641.1" y="3365" width="0.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="644.09" y="3375.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="620.5" y="1797" width="0.1" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="623.49" y="1807.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="517" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="635.43" y="527.5" ></text>
</g>
<g >
<title>0x110f802a0 (12 samples, 0.08%)</title><rect x="738.1" y="3653" width="0.9" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="741.12" y="3663.5" ></text>
</g>
<g >
<title>`llvm::LiveRangeCalc::calculate(llvm::LiveInterval&amp;, bool) (2 samples, 0.01%)</title><rect x="584.0" y="4357" width="0.1" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="586.99" y="4367.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (21 samples, 0.13%)</title><rect x="656.7" y="3237" width="1.6" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="659.69" y="3247.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="902.4" y="3589" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="905.41" y="3599.5" ></text>
</g>
<g >
<title>0x15011c6a5 (21 samples, 0.13%)</title><rect x="650.7" y="3685" width="1.6" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="653.72" y="3695.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.5" y="2341" width="0.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="623.49" y="2351.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'MACROLET) T T T))^METHOD^^ (47 samples, 0.30%)</title><rect x="10.0" y="565" width="3.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.9" y="949" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="628.94" y="959.5" ></text>
</g>
<g >
<title>`COMPUTE-LOCATION-OWNERS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (4 samples, 0.03%)</title><rect x="1178.9" y="3797" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="1181.88" y="3807.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (10 samples, 0.06%)</title><rect x="622.4" y="421" width="0.7" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="625.35" y="431.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (12 samples, 0.08%)</title><rect x="243.4" y="117" width="0.9" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="246.40" y="127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="309" width="1.0" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="627.30" y="319.5" ></text>
</g>
<g >
<title>`REMOVE-USELESS-INSTRUCTIONS-WITH-WORKLIST^CLEAVIR-REMOVE-USELESS-INSTRUCTIONS^FN^^ (22 samples, 0.14%)</title><rect x="635.1" y="3781" width="1.7" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="638.12" y="3791.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.24 (16 samples, 0.10%)</title><rect x="635.6" y="3397" width="1.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="638.57" y="3407.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (39 samples, 0.25%)</title><rect x="986.7" y="3717" width="2.9" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="989.68" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1989" width="0.9" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="629.16" y="1999.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (88 samples, 0.56%)</title><rect x="802.0" y="3637" width="6.6" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="805.02" y="3647.5" ></text>
</g>
<g >
<title>`core::load_stream(gctools::smart_ptr&lt;core::T_O&gt;, bool) (3,806 samples, 24.07%)</title><rect x="10.0" y="4133" width="284.1" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="13.00" y="4143.5" >`core::load_stream(gctools::smart_ptr&lt;..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="149" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="622.15" y="159.5" ></text>
</g>
<g >
<title>`CST-TO-AST^CLEAVIR-CST-TO-AST^FN^^ (4 samples, 0.03%)</title><rect x="141.6" y="133" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="144.59" y="143.5" ></text>
</g>
<g >
<title>`GC_mark_some (67 samples, 0.42%)</title><rect x="852.2" y="3413" width="5.0" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="855.17" y="3423.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (19 samples, 0.12%)</title><rect x="638.8" y="3461" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="641.78" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.04%)</title><rect x="628.0" y="1461" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="630.95" y="1471.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="1156.6" y="3189" width="0.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="1159.64" y="3199.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1021.3" y="3109" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1024.31" y="3119.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (10 samples, 0.06%)</title><rect x="798.4" y="3573" width="0.8" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="801.43" y="3583.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1115.2" y="3733" width="0.2" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="1118.21" y="3743.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (2 samples, 0.01%)</title><rect x="799.3" y="3589" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="802.33" y="3599.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD^^ (3 samples, 0.02%)</title><rect x="879.3" y="3573" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="882.34" y="3583.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (6 samples, 0.04%)</title><rect x="823.3" y="2789" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="826.29" y="2799.5" ></text>
</g>
<g >
<title>`COMPILE-LAMBDA-FUNCTION^COMPILER^FN^^ (6 samples, 0.04%)</title><rect x="823.3" y="2741" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="826.29" y="2751.5" ></text>
</g>
<g >
<title>`GC_mark_local (28 samples, 0.18%)</title><rect x="949.0" y="3461" width="2.1" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="951.98" y="3471.5" ></text>
</g>
<g >
<title>0x110d5d064 (2 samples, 0.01%)</title><rect x="1066.2" y="3733" width="0.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1069.17" y="3743.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="737.5" y="3605" width="0.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="740.45" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1749" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="635.43" y="1759.5" ></text>
</g>
<g >
<title>`llvm::orc::IRTransformLayer&lt;llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;, std::__1::function&lt;std::__1::shared_ptr&lt;llvm::Module&gt; (std::__1::shared_ptr&lt;llvm::Module&gt;)&gt; &gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (5 samples, 0.03%)</title><rect x="872.5" y="2965" width="0.4" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="875.48" y="2975.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.11 (20 samples, 0.13%)</title><rect x="876.3" y="3125" width="1.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="879.28" y="3135.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="627.7" y="837" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="630.73" y="847.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.6" y="1045" width="0.1" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="632.60" y="1055.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (830 samples, 5.25%)</title><rect x="174.3" y="581" width="61.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="177.28" y="591.5" >`CONVE..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="1637" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="622.15" y="1647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (24 samples, 0.15%)</title><rect x="619.1" y="3461" width="1.8" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="622.07" y="3471.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="624.0" y="1909" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="627.00" y="1919.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*, std::__1::allocator&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*&gt;&amp;&gt;::__split_buffer(unsigned long, unsigned long, std::__1::allocator&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*&gt;&amp;) (2 samples, 0.01%)</title><rect x="610.3" y="4341" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="613.34" y="4351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (11 samples, 0.07%)</title><rect x="627.7" y="2229" width="0.8" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="630.65" y="2239.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (9 samples, 0.06%)</title><rect x="657.6" y="2517" width="0.7" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="660.59" y="2527.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (20 samples, 0.13%)</title><rect x="630.8" y="85" width="1.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="633.79" y="95.5" ></text>
</g>
<g >
<title>`clbind::Derivable&lt;clang::ASTFrontendAction&gt;::pointerToAlienWithin() (9 samples, 0.06%)</title><rect x="821.9" y="3653" width="0.7" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="824.95" y="3663.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (126 samples, 0.80%)</title><rect x="130.8" y="197" width="9.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="133.84" y="207.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (40 samples, 0.25%)</title><rect x="278.5" y="501" width="3.0" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="281.48" y="511.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="627.5" y="1941" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="630.51" y="1951.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.4" y="293" width="0.2" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="632.45" y="303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="632.4" y="2181" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="635.43" y="2191.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (50 samples, 0.32%)</title><rect x="638.6" y="3525" width="3.8" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="641.63" y="3535.5" ></text>
</g>
<g >
<title>0x1110a62f6 (3 samples, 0.02%)</title><rect x="627.1" y="1205" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="630.13" y="1215.5" ></text>
</g>
<g >
<title>`LINK-INLINE-REMOVE-BUILTINS^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="643.8" y="3045" width="0.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="646.78" y="3055.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (3 samples, 0.02%)</title><rect x="733.9" y="3637" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="736.87" y="3647.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (4 samples, 0.03%)</title><rect x="872.5" y="2885" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="875.48" y="2895.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (3 samples, 0.02%)</title><rect x="594.8" y="4421" width="0.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="597.81" y="4431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="2549" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="622.37" y="2559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="2965" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="635.43" y="2975.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (21 samples, 0.13%)</title><rect x="630.8" y="1365" width="1.6" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="633.79" y="1375.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^351^TOP-COMPILE-FILE.26 (4 samples, 0.03%)</title><rect x="823.4" y="1829" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="826.44" y="1839.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (7 samples, 0.04%)</title><rect x="620.9" y="437" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="623.86" y="447.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="640.2" y="3173" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="643.19" y="3183.5" ></text>
</g>
<g >
<title>`llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (4 samples, 0.03%)</title><rect x="643.5" y="2885" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="646.48" y="2895.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="624.0" y="773" width="0.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="627.00" y="783.5" ></text>
</g>
<g >
<title>`combineInstructionsOverFunction(llvm::Function&amp;, llvm::InstCombineWorklist&amp;, llvm::AAResults*, llvm::AssumptionCache&amp;, llvm::TargetLibraryInfo&amp;, llvm::DominatorTree&amp;, llvm::OptimizationRemarkEmitter&amp;, bool, llvm::LoopInfo*) (3 samples, 0.02%)</title><rect x="658.0" y="2421" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="660.96" y="2431.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.11 (11 samples, 0.07%)</title><rect x="643.5" y="3349" width="0.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="646.48" y="3359.5" ></text>
</g>
<g >
<title>`macro-functions.lisp-macro-functions194^329^TOP-COMPILE-FILE.75 (60 samples, 0.38%)</title><rect x="289.5" y="117" width="4.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="292.53" y="127.5" ></text>
</g>
<g >
<title>0x12914109d (2 samples, 0.01%)</title><rect x="768.0" y="3653" width="0.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="770.98" y="3663.5" ></text>
</g>
<g >
<title>`WAIT-FOR-AST-JOB^COMPILER^FN^^ (8,345 samples, 52.79%)</title><rect x="567.1" y="4693" width="622.9" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="570.12" y="4703.5" >`WAIT-FOR-AST-JOB^COMPILER^FN^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="630.8" y="357" width="1.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="633.79" y="367.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="997.9" y="3125" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="1000.87" y="3135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="2165" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="622.37" y="2175.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="630.6" y="741" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="633.64" y="751.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (36 samples, 0.23%)</title><rect x="10.0" y="181" width="2.7" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (2 samples, 0.01%)</title><rect x="173.6" y="341" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="176.61" y="351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (20 samples, 0.13%)</title><rect x="630.8" y="661" width="1.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="633.79" y="671.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (9 samples, 0.06%)</title><rect x="661.8" y="3381" width="0.6" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="664.77" y="3391.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt; (llvmo::ClaspJIT_O::*)(gctools::smart_ptr&lt;llvmo::Module_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (4 samples, 0.03%)</title><rect x="643.5" y="2949" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="646.48" y="2959.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_set_T_spintT_sp (8 samples, 0.05%)</title><rect x="1164.8" y="3605" width="0.6" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1167.77" y="3615.5" ></text>
</g>
<g >
<title>`DISPATCH-MISS^CLOS^FN^^ (5 samples, 0.03%)</title><rect x="640.2" y="3429" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="643.19" y="3439.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.11 (7 samples, 0.04%)</title><rect x="1176.9" y="3493" width="0.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1179.94" y="3503.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1525" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="623.64" y="1535.5" ></text>
</g>
<g >
<title>`read.lisp-read201^11^TOP-COMPILE-FILE.53 (96 samples, 0.61%)</title><rect x="286.9" y="629" width="7.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="289.92" y="639.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (5 samples, 0.03%)</title><rect x="635.7" y="2981" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="638.72" y="2991.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.13 (20 samples, 0.13%)</title><rect x="876.3" y="3093" width="1.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="879.28" y="3103.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="1053.3" y="3685" width="0.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1056.26" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1189" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="630.65" y="1199.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (6 samples, 0.04%)</title><rect x="985.9" y="3621" width="0.4" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="988.86" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="2149" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="622.15" y="2159.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.0" y="2101" width="0.2" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="633.04" y="2111.5" ></text>
</g>
<g >
<title>`core::Cache_O::vector_hash_key(gctools::Vec0&lt;gctools::smart_ptr&lt;core::T_O&gt; &gt;&amp;) (11 samples, 0.07%)</title><rect x="833.1" y="3621" width="0.9" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="836.14" y="3631.5" ></text>
</g>
<g >
<title>`GC_mark_local (19 samples, 0.12%)</title><rect x="1185.1" y="2069" width="1.5" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="1188.15" y="2079.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="627.5" y="1845" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="630.51" y="1855.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (2 samples, 0.01%)</title><rect x="1092.9" y="3685" width="0.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1095.89" y="3695.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (6 samples, 0.04%)</title><rect x="875.0" y="2725" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="878.01" y="2735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="501" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="626.10" y="511.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap&lt;llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo&lt;llvm::Constant*&gt;, llvm::detail::DenseMapPair&lt;llvm::Constant*, llvm::Constant*&gt; &gt;&amp;) (8 samples, 0.05%)</title><rect x="601.0" y="4341" width="0.6" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="604.01" y="4351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (21 samples, 0.13%)</title><rect x="630.8" y="789" width="1.6" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="633.79" y="799.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (10 samples, 0.06%)</title><rect x="622.4" y="1205" width="0.7" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="625.35" y="1215.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="597.8" y="4245" width="0.1" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="600.80" y="4255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="623.1" y="1381" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="626.10" y="1391.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAG::getLoad(llvm::ISD::MemIndexedMode, llvm::ISD::LoadExtType, llvm::EVT, llvm::SDLoc const&amp;, llvm::SDValue, llvm::SDValue, llvm::SDValue, llvm::MachinePointerInfo, llvm::EVT, unsigned int, llvm::MachineMemOperand::Flags, llvm::AAMDNodes const&amp;, llvm::MDNode const*) (2 samples, 0.01%)</title><rect x="583.0" y="4293" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="586.02" y="4303.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (11 samples, 0.07%)</title><rect x="643.5" y="3093" width="0.8" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="646.48" y="3103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1573" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="623.64" y="1583.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.24 (3 samples, 0.02%)</title><rect x="874.0" y="3221" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="876.97" y="3231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="629.4" y="2933" width="0.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="632.45" y="2943.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (82 samples, 0.52%)</title><rect x="15.0" y="197" width="6.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="18.00" y="207.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.01%)</title><rect x="906.4" y="3621" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="909.44" y="3631.5" ></text>
</g>
<g >
<title>0x110cd62a2 (12 samples, 0.08%)</title><rect x="13.5" y="53" width="0.9" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="16.51" y="63.5" ></text>
</g>
<g >
<title>`INLINE-FUNCTION^CLEAVIR-PARTIAL-INLINING^((T T T T))^METHOD^^.127 (254 samples, 1.61%)</title><rect x="1157.0" y="3733" width="19.0" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="1160.01" y="3743.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_lock_slow (3 samples, 0.02%)</title><rect x="570.1" y="4437" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="573.11" y="4447.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="625.9" y="517" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="628.94" y="527.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (111 samples, 0.70%)</title><rect x="278.5" y="773" width="8.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="281.48" y="783.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.6" y="1157" width="0.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="632.60" y="1167.5" ></text>
</g>
<g >
<title>0x1110a4be6 (5 samples, 0.03%)</title><rect x="625.7" y="1957" width="0.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="628.71" y="1967.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.9 (5 samples, 0.03%)</title><rect x="1156.6" y="3525" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="1159.64" y="3535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="2277" width="0.4" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="622.37" y="2287.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.8" y="1317" width="0.1" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="628.79" y="1327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1189" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="628.27" y="1199.5" ></text>
</g>
<g >
<title>0x1111fb297 (2 samples, 0.01%)</title><rect x="746.4" y="3653" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="749.41" y="3663.5" ></text>
</g>
<g >
<title>0x1110a5606 (23 samples, 0.15%)</title><rect x="619.1" y="2949" width="1.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="622.07" y="2959.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (2 samples, 0.01%)</title><rect x="1187.8" y="565" width="0.1" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="1190.76" y="575.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="591.5" y="4405" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="594.53" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="3221" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="635.43" y="3231.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.03%)</title><rect x="1079.1" y="3701" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1082.08" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-TO-MODULE-WITH-RUN-TIME-TABLE^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="823.3" y="3093" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="826.29" y="3103.5" ></text>
</g>
<g >
<title>`thread_start (12,003 samples, 75.93%)</title><rect x="294.1" y="4821" width="895.9" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="297.08" y="4831.5" >`thread_start</text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (22 samples, 0.14%)</title><rect x="656.7" y="3285" width="1.6" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="659.69" y="3295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="1397" width="0.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="632.74" y="1407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (24 samples, 0.15%)</title><rect x="619.1" y="3349" width="1.8" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="622.07" y="3359.5" ></text>
</g>
<g >
<title>`core::core__instance_ref(gctools::smart_ptr&lt;core::T_O&gt;, int) (2 samples, 0.01%)</title><rect x="725.0" y="3605" width="0.1" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="727.99" y="3615.5" ></text>
</g>
<g >
<title>`read.lisp-read201^57^TOP-COMPILE-FILE.59 (98 samples, 0.62%)</title><rect x="286.8" y="1125" width="7.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="289.77" y="1135.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^.154 (63 samples, 0.40%)</title><rect x="273.8" y="453" width="4.7" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="276.78" y="463.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.11 (12 samples, 0.08%)</title><rect x="872.5" y="3397" width="0.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="875.48" y="3407.5" ></text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^COMPILER^FN^^ (16 samples, 0.10%)</title><rect x="635.6" y="3733" width="1.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="638.57" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (24 samples, 0.15%)</title><rect x="619.1" y="3317" width="1.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="622.07" y="3327.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="949" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="626.10" y="959.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (49 samples, 0.31%)</title><rect x="944.5" y="3621" width="3.7" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="947.51" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (8 samples, 0.05%)</title><rect x="627.9" y="1829" width="0.6" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="630.88" y="1839.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="1157.7" y="3333" width="0.1" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="1160.68" y="3343.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="632.4" y="3013" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="635.43" y="3023.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (36 samples, 0.23%)</title><rect x="10.0" y="197" width="2.7" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.5" y="1637" width="0.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="626.47" y="1647.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm::Optional&lt;llvm::MemoryLocation&gt; const&amp;) (6 samples, 0.04%)</title><rect x="603.4" y="4293" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="606.40" y="4303.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^METHOD^^.35 (3,461 samples, 21.89%)</title><rect x="15.0" y="757" width="258.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="18.00" y="767.5" >`CONVERT-CST^CLEAVIR-CST-TO-AST^((..</text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (2 samples, 0.01%)</title><rect x="240.7" y="245" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="243.72" y="255.5" ></text>
</g>
<g >
<title>0x1140073e7 (17 samples, 0.11%)</title><rect x="143.5" y="37" width="1.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="146.46" y="47.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (829 samples, 5.24%)</title><rect x="174.3" y="117" width="61.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="177.28" y="127.5" >`CONVE..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="632.4" y="1189" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="635.43" y="1199.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.13 (17 samples, 0.11%)</title><rect x="620.9" y="885" width="1.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="623.86" y="895.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (5 samples, 0.03%)</title><rect x="289.2" y="117" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="292.16" y="127.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.1" y="197" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="626.10" y="207.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*, llvm::DominatorTree const*, llvm::CmpInst::Predicate, llvm::AssumptionCache*, llvm::Instruction const*, llvm::Value*, llvm::Value*) (2 samples, 0.01%)</title><rect x="590.9" y="4389" width="0.1" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="593.86" y="4399.5" ></text>
</g>
<g >
<title>0x1257602e2 (4 samples, 0.03%)</title><rect x="625.8" y="1733" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="628.79" y="1743.5" ></text>
</g>
<g >
<title>`BASIC-BLOCKS^CLEAVIR-BASIC-BLOCKS^FN^^ (8 samples, 0.05%)</title><rect x="1182.2" y="3829" width="0.6" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="1185.24" y="3839.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (19 samples, 0.12%)</title><rect x="806.3" y="3605" width="1.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="809.35" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (43 samples, 0.27%)</title><rect x="823.3" y="3125" width="3.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="826.29" y="3135.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt; (llvmo::ClaspJIT_O::*)(gctools::smart_ptr&lt;llvmo::Module_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1176.9" y="3093" width="0.2" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="1179.94" y="3103.5" ></text>
</g>
<g >
<title>`llvm::ScheduleDAGInstrs::addPhysRegDeps(llvm::SUnit*, unsigned int) (2 samples, 0.01%)</title><rect x="575.7" y="4325" width="0.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="578.70" y="4335.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (97 samples, 0.61%)</title><rect x="286.8" y="917" width="7.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="289.84" y="927.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.206 (7,680 samples, 48.58%)</title><rect x="616.3" y="4101" width="573.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="619.31" y="4111.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.206</text>
</g>
<g >
<title>0x110d5d482 (4 samples, 0.03%)</title><rect x="727.9" y="3653" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="730.90" y="3663.5" ></text>
</g>
<g >
<title>0x1257602e2 (24 samples, 0.15%)</title><rect x="619.1" y="3301" width="1.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="622.07" y="3311.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="627.7" y="1333" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="630.65" y="1343.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="625.9" y="229" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="628.94" y="239.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="628.0" y="1013" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="630.95" y="1023.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (17 samples, 0.11%)</title><rect x="1169.5" y="3525" width="1.3" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="1172.55" y="3535.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.92 (31 samples, 0.20%)</title><rect x="1186.8" y="2245" width="2.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="1189.79" y="2255.5" ></text>
</g>
<g >
<title>0x1111fb000 (2 samples, 0.01%)</title><rect x="740.4" y="3653" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="743.44" y="3663.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (3,461 samples, 21.89%)</title><rect x="15.0" y="805" width="258.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="18.00" y="815.5" >`convert.lisp-convert288^36^TOP-CO..</text>
</g>
<g >
<title>`INSTRUCTION-MAY-BE-REMOVED-P^CLEAVIR-REMOVE-USELESS-INSTRUCTIONS^((T))^METHOD^^.24 (3 samples, 0.02%)</title><rect x="635.2" y="3749" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="638.19" y="3759.5" ></text>
</g>
<g >
<title>`llvm::CloneAndPruneFunctionInto(llvm::Function*, llvm::Function const*, llvm::ValueMap&lt;llvm::Value const*, llvm::WeakTrackingVH, llvm::ValueMapConfig&lt;llvm::Value const*, llvm::sys::SmartMutex&lt;false&gt; &gt; &gt;&amp;, bool, llvm::SmallVectorImpl&lt;llvm::ReturnInst*&gt;&amp;, char const*, llvm::ClonedCodeInfo*, llvm::Instruction*) (4 samples, 0.03%)</title><rect x="608.5" y="4389" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="611.55" y="4399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.3" y="1637" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="626.33" y="1647.5" ></text>
</g>
<g >
<title>0x1110a5606 (13 samples, 0.08%)</title><rect x="624.3" y="213" width="1.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="627.30" y="223.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (7 samples, 0.04%)</title><rect x="871.8" y="3669" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="874.81" y="3679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.1" y="869" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="626.10" y="879.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.24 (12 samples, 0.08%)</title><rect x="872.5" y="3301" width="0.9" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="875.48" y="3311.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.24 (11 samples, 0.07%)</title><rect x="643.5" y="3253" width="0.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="646.48" y="3263.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE*^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="874.9" y="2741" width="0.6" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="877.94" y="2751.5" ></text>
</g>
<g >
<title>`COMPILE-FILE-TO-RESULT^COMPILER^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1413" width="284.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="13.00" y="1423.5" >`COMPILE-FILE-TO-RESULT^COMPILER^FN^^</text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (7 samples, 0.04%)</title><rect x="1184.4" y="2373" width="0.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="1187.40" y="2383.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE.5 (3,806 samples, 24.07%)</title><rect x="10.0" y="1541" width="284.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="13.00" y="1551.5" >`compile-file.lsp-compile-file52^33^TO..</text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (6 samples, 0.04%)</title><rect x="662.6" y="3429" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="665.59" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1205" width="0.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="629.16" y="1215.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="632.4" y="421" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="635.43" y="431.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (63 samples, 0.40%)</title><rect x="273.8" y="229" width="4.7" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="276.78" y="239.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.103 (3 samples, 0.02%)</title><rect x="823.5" y="597" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="826.51" y="607.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (21 samples, 0.13%)</title><rect x="935.9" y="3717" width="1.6" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="938.92" y="3727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (21 samples, 0.13%)</title><rect x="656.7" y="3189" width="1.6" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="659.69" y="3199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (12 samples, 0.08%)</title><rect x="628.5" y="2821" width="0.9" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="631.48" y="2831.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (155 samples, 0.98%)</title><rect x="620.9" y="3461" width="11.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="623.86" y="3471.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (32 samples, 0.20%)</title><rect x="1186.7" y="2341" width="2.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1189.72" y="2351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2837" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="633.04" y="2847.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((:AROUND) (T T CLASP))^METHOD^^ (4 samples, 0.03%)</title><rect x="273.3" y="885" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="276.33" y="895.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T CLASP-GLOBAL-ENVIRONMENT))^METHOD^^.229 (21 samples, 0.13%)</title><rect x="140.3" y="197" width="1.6" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="143.32" y="207.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.4" y="773" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="632.45" y="783.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (28 samples, 0.18%)</title><rect x="630.3" y="3397" width="2.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="633.34" y="3407.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.88 (77 samples, 0.49%)</title><rect x="1183.8" y="2741" width="5.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="1186.80" y="2751.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (64 samples, 0.40%)</title><rect x="620.9" y="2421" width="4.7" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="623.86" y="2431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.1" y="293" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="626.10" y="303.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="1158.1" y="3445" width="0.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1161.05" y="3455.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (829 samples, 5.24%)</title><rect x="174.3" y="165" width="61.9" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="177.28" y="175.5" >`COMBI..</text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (125 samples, 0.79%)</title><rect x="130.9" y="85" width="9.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="133.92" y="95.5" ></text>
</g>
<g >
<title>`GC_mark_local (30 samples, 0.19%)</title><rect x="1011.2" y="3445" width="2.2" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="1014.16" y="3455.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (63 samples, 0.40%)</title><rect x="273.8" y="389" width="4.7" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="276.78" y="399.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.101 (4 samples, 0.03%)</title><rect x="823.4" y="1733" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="826.44" y="1743.5" ></text>
</g>
<g >
<title>`startup(int, char**, bool&amp;, int&amp;, int&amp;) (3,806 samples, 24.07%)</title><rect x="10.0" y="4741" width="284.1" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="13.00" y="4751.5" >`startup(int, char**, bool&amp;, int&amp;, int&amp;)</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="627.1" y="1349" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="630.13" y="1359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1957" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="630.65" y="1967.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (23 samples, 0.15%)</title><rect x="874.3" y="3413" width="1.8" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="877.34" y="3423.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (30 samples, 0.19%)</title><rect x="796.0" y="3509" width="2.3" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="799.04" y="3519.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (2 samples, 0.01%)</title><rect x="1168.0" y="3621" width="0.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="1170.98" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="485" width="1.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="627.30" y="495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="1573" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="632.45" y="1583.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.24 (17 samples, 0.11%)</title><rect x="620.9" y="821" width="1.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="623.86" y="831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="629.4" y="2645" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="632.45" y="2655.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.9" y="1221" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="628.94" y="1231.5" ></text>
</g>
<g >
<title>`core::ext__class_unboundp(gctools::smart_ptr&lt;core::ClassHolder_O&gt;) (5 samples, 0.03%)</title><rect x="1079.8" y="3717" width="0.3" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="1082.76" y="3727.5" ></text>
</g>
<g >
<title>`llvm::GenericScheduler::GenericScheduler(llvm::MachineSchedContext const*) (2 samples, 0.01%)</title><rect x="576.3" y="4341" width="0.2" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="579.30" y="4351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (7 samples, 0.04%)</title><rect x="627.1" y="2229" width="0.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="630.13" y="2239.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((IF-AST T))^METHOD^^.287 (17 samples, 0.11%)</title><rect x="140.3" y="101" width="1.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="143.32" y="111.5" ></text>
</g>
<g >
<title>`llvm::LiveIntervals::runOnMachineFunction(llvm::MachineFunction&amp;) (7 samples, 0.04%)</title><rect x="583.6" y="4405" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="586.62" y="4415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (21 samples, 0.13%)</title><rect x="630.8" y="1157" width="1.6" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="633.79" y="1167.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (5 samples, 0.03%)</title><rect x="660.4" y="3333" width="0.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="663.42" y="3343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (21 samples, 0.13%)</title><rect x="630.8" y="1109" width="1.6" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="633.79" y="1119.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (21 samples, 0.13%)</title><rect x="630.8" y="869" width="1.6" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="633.79" y="879.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE^COMPILER^FN^^ (6 samples, 0.04%)</title><rect x="1021.2" y="3637" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="1024.24" y="3647.5" ></text>
</g>
<g >
<title>`llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (4 samples, 0.03%)</title><rect x="643.5" y="2901" width="0.3" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="646.48" y="2911.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (3 samples, 0.02%)</title><rect x="716.3" y="3621" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="719.25" y="3631.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (7 samples, 0.04%)</title><rect x="1172.3" y="3637" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="1175.31" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (10 samples, 0.06%)</title><rect x="622.4" y="549" width="0.7" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="625.35" y="559.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (246 samples, 1.56%)</title><rect x="998.5" y="3717" width="18.4" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="1001.55" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.4" y="1541" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="633.42" y="1551.5" ></text>
</g>
<g >
<title>0x110cd62a2 (17 samples, 0.11%)</title><rect x="143.5" y="181" width="1.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="146.46" y="191.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.30 (43 samples, 0.27%)</title><rect x="823.3" y="3541" width="3.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="826.29" y="3551.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.4" y="677" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="632.45" y="687.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.32 (5 samples, 0.03%)</title><rect x="1156.6" y="3621" width="0.4" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="1159.64" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="261" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="622.15" y="271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="1477" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="622.44" y="1487.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE*^COMPILER^FN^^ (43 samples, 0.27%)</title><rect x="823.3" y="3109" width="3.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="826.29" y="3119.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (361 samples, 2.28%)</title><rect x="244.3" y="69" width="26.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="247.30" y="79.5" >`..</text>
</g>
<g >
<title>`CODEGEN-SPECIAL-OPERATOR^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="2149" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="826.44" y="2159.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunction&amp;) (75 samples, 0.47%)</title><rect x="577.9" y="4389" width="5.6" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="580.87" y="4399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (6 samples, 0.04%)</title><rect x="629.4" y="2309" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="632.45" y="2319.5" ></text>
</g>
<g >
<title>`llvmo::optimizeModule(std::__1::shared_ptr&lt;llvm::Module&gt;) (4 samples, 0.03%)</title><rect x="824.7" y="2917" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="827.71" y="2927.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (77 samples, 0.49%)</title><rect x="802.6" y="3621" width="5.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="805.61" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="1253" width="0.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="622.44" y="1263.5" ></text>
</g>
<g >
<title>`GC_mark_thread (3,658 samples, 23.14%)</title><rect x="294.1" y="4773" width="273.0" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="297.08" y="4783.5" >`GC_mark_thread</text>
</g>
<g >
<title>0x1110a5606 (13 samples, 0.08%)</title><rect x="624.3" y="597" width="1.0" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="627.30" y="607.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (426 samples, 2.69%)</title><rect x="240.9" y="309" width="31.8" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="243.86" y="319.5" >`C..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="981" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="622.15" y="991.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.03%)</title><rect x="141.9" y="53" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="144.89" y="63.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="533" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="635.43" y="543.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (6 samples, 0.04%)</title><rect x="1171.6" y="3605" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1174.64" y="3615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (2 samples, 0.01%)</title><rect x="14.9" y="581" width="0.1" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="17.85" y="591.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="649.4" y="3429" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="652.45" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1861" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="630.65" y="1871.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::List_V&gt;) (4 samples, 0.03%)</title><rect x="667.4" y="3621" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="670.36" y="3631.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (21 samples, 0.13%)</title><rect x="656.7" y="3109" width="1.6" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="659.69" y="3119.5" ></text>
</g>
<g >
<title>`TRANSLATE-FUNCALL^CLASP-CLEAVIR^FN^^ (24 samples, 0.15%)</title><rect x="1184.9" y="2341" width="1.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="1187.92" y="2351.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (17 samples, 0.11%)</title><rect x="143.5" y="197" width="1.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="146.46" y="207.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (9 samples, 0.06%)</title><rect x="657.6" y="2549" width="0.7" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="660.59" y="2559.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (24 samples, 0.15%)</title><rect x="619.1" y="3365" width="1.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="622.07" y="3375.5" ></text>
</g>
<g >
<title>`general-purpose-asts.lisp-general-purpose-asts209^739^TOP-COMPILE-FILE.591 (2 samples, 0.01%)</title><rect x="618.4" y="3749" width="0.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="621.40" y="3759.5" ></text>
</g>
<g >
<title>`combineInstructionsOverFunction(llvm::Function&amp;, llvm::InstCombineWorklist&amp;, llvm::AAResults*, llvm::AssumptionCache&amp;, llvm::TargetLibraryInfo&amp;, llvm::DominatorTree&amp;, llvm::OptimizationRemarkEmitter&amp;, bool, llvm::LoopInfo*) (61 samples, 0.39%)</title><rect x="600.3" y="4389" width="4.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="603.26" y="4399.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.26 (6 samples, 0.04%)</title><rect x="823.3" y="2517" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="826.29" y="2527.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.10 (16 samples, 0.10%)</title><rect x="635.6" y="3509" width="1.2" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="638.57" y="3519.5" ></text>
</g>
<g >
<title>0x1258cfc3b (63 samples, 0.40%)</title><rect x="273.8" y="309" width="4.7" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="276.78" y="319.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="619.4" y="533" width="0.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="622.44" y="543.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (12 samples, 0.08%)</title><rect x="628.5" y="2805" width="0.9" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="631.48" y="2815.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (5 samples, 0.03%)</title><rect x="958.7" y="3749" width="0.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="961.69" y="3759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.8" y="453" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="626.77" y="463.5" ></text>
</g>
<g >
<title>0x1501b4cfb (71 samples, 0.45%)</title><rect x="281.5" y="581" width="5.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="284.47" y="591.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (830 samples, 5.25%)</title><rect x="174.3" y="613" width="61.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="177.28" y="623.5" >`CONVE..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="628.2" y="965" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="631.18" y="975.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (7 samples, 0.04%)</title><rect x="620.3" y="2725" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="623.27" y="2735.5" ></text>
</g>
<g >
<title>`setup.lisp-setup426^310^TOP-COMPILE-FILE.232 (6 samples, 0.04%)</title><rect x="14.4" y="69" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="17.40" y="79.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.197 (7,680 samples, 48.58%)</title><rect x="616.3" y="4245" width="573.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="619.31" y="4255.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.197</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (27 samples, 0.17%)</title><rect x="630.3" y="2661" width="2.1" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="633.34" y="2671.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (11 samples, 0.07%)</title><rect x="988.2" y="3669" width="0.8" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="991.17" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-TO-MODULE^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="656.7" y="2517" width="0.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="659.69" y="2527.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (4 samples, 0.03%)</title><rect x="625.8" y="1685" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="628.79" y="1695.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="627.7" y="1397" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="630.65" y="1407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="629.4" y="2901" width="0.8" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="632.45" y="2911.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="623.7" y="949" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="626.70" y="959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="869" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="628.27" y="879.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENCLOSE-INSTRUCTION T T T))^METHOD^^ (8 samples, 0.05%)</title><rect x="1187.9" y="501" width="0.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="1190.91" y="511.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.1" y="885" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="626.10" y="895.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="622.1" y="1029" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="625.13" y="1039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="1653" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="632.74" y="1663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="1109" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="626.33" y="1119.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (15 samples, 0.09%)</title><rect x="1187.5" y="949" width="1.1" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="1190.46" y="959.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (9 samples, 0.06%)</title><rect x="620.9" y="549" width="0.6" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="623.86" y="559.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (3 samples, 0.02%)</title><rect x="1182.9" y="3173" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="1185.91" y="3183.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (9 samples, 0.06%)</title><rect x="620.9" y="597" width="0.6" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="623.86" y="607.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (5 samples, 0.03%)</title><rect x="1180.7" y="3781" width="0.4" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="1183.74" y="3791.5" ></text>
</g>
<g >
<title>`core::cl__nthcdr(gctools::smart_ptr&lt;core::Integer_O&gt;, gctools::smart_ptr&lt;core::List_V&gt;) (2 samples, 0.01%)</title><rect x="878.3" y="3285" width="0.1" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="881.30" y="3295.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T T MULTIPLE-SUCCESSORS-MIXIN T))^METHOD^^ (8 samples, 0.05%)</title><rect x="642.5" y="3637" width="0.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="645.51" y="3647.5" ></text>
</g>
<g >
<title>`CCLASP-EVAL^CLASP-CLEAVIR^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="4117" width="284.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="13.00" y="4127.5" >`CCLASP-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METHOD^^.74 (83 samples, 0.53%)</title><rect x="15.0" y="469" width="6.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="18.00" y="479.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="629.4" y="1909" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="632.45" y="1919.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (3 samples, 0.02%)</title><rect x="1181.6" y="3749" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1184.64" y="3759.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="627.1" y="1733" width="0.4" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="630.13" y="1743.5" ></text>
</g>
<g >
<title>0x110e0012e (3 samples, 0.02%)</title><rect x="1163.9" y="3637" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1166.88" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="117" width="0.7" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="625.35" y="127.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (12 samples, 0.08%)</title><rect x="243.4" y="229" width="0.9" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="246.40" y="239.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;std::__1::__value_type&lt;llvm::Function const*, std::__1::unique_ptr&lt;llvm::CallGraphNode, std::__1::default_delete&lt;llvm::CallGraphNode&gt; &gt; &gt;, std::__1::__map_value_compare&lt;llvm::Function const*, std::__1::__value_type&lt;llvm::Function const*, std::__1::unique_ptr&lt;llvm::CallGraphNode, std::__1::default_delete&lt;llvm::CallGraphNode&gt; &gt; &gt;, std::__1::less&lt;llvm::Function const*&gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;llvm::Function const*, std::__1::unique_ptr&lt;llvm::CallGraphNode, std::__1::default_delete&lt;llvm::CallGraphNode&gt; &gt; &gt; &gt; &gt;::destroy(std::__1::__tree_node&lt;std::__1::__value_type&lt;llvm::Function const*, std::__1::unique_ptr&lt;llvm::CallGraphNode, std::__1::default_delete&lt;llvm::CallGraphNode&gt; &gt; &gt;, void*&gt;*) (2 samples, 0.01%)</title><rect x="596.8" y="4453" width="0.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="599.75" y="4463.5" ></text>
</g>
<g >
<title>0x110c56000 (2 samples, 0.01%)</title><rect x="691.3" y="3653" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="694.32" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="625.3" y="1685" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="628.27" y="1695.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="1157" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="622.15" y="1167.5" ></text>
</g>
<g >
<title>0x123716252 (3 samples, 0.02%)</title><rect x="618.3" y="3781" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="621.32" y="3791.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="626.2" y="1429" width="0.9" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="629.16" y="1439.5" ></text>
</g>
<g >
<title>0x1257602e2 (13 samples, 0.08%)</title><rect x="626.2" y="1173" width="0.9" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="629.16" y="1183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="629" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="632.45" y="639.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="619.1" y="1973" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="622.15" y="1983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (12 samples, 0.08%)</title><rect x="628.5" y="2757" width="0.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="631.48" y="2767.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (12 samples, 0.08%)</title><rect x="643.5" y="3605" width="0.9" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="646.48" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (21 samples, 0.13%)</title><rect x="630.8" y="1141" width="1.6" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="633.79" y="1151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="2053" width="0.9" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="629.16" y="2063.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::T_O&gt; (core::HashTable_O::*)(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (11 samples, 0.07%)</title><rect x="860.3" y="3621" width="0.8" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="863.31" y="3631.5" ></text>
</g>
<g >
<title>`GC_mark_local (61 samples, 0.39%)</title><rect x="1141.0" y="3461" width="4.5" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="1143.96" y="3471.5" ></text>
</g>
<g >
<title>0x1110a5606 (102 samples, 0.65%)</title><rect x="620.9" y="2565" width="7.6" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="623.86" y="2575.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (361 samples, 2.28%)</title><rect x="244.3" y="101" width="26.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="247.30" y="111.5" >`..</text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.02%)</title><rect x="1178.7" y="3701" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="1181.65" y="3711.5" ></text>
</g>
<g >
<title>0x1110a5606 (12 samples, 0.08%)</title><rect x="626.2" y="245" width="0.9" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="629.16" y="255.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (6 samples, 0.04%)</title><rect x="619.4" y="2101" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="622.37" y="2111.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="632.4" y="2325" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="635.43" y="2335.5" ></text>
</g>
<g >
<title>0x110cd62a2 (829 samples, 5.24%)</title><rect x="174.3" y="181" width="61.9" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="177.28" y="191.5" >0x110c..</text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (5 samples, 0.03%)</title><rect x="877.0" y="2661" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="880.03" y="2671.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="629.4" y="597" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="632.45" y="607.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (6 samples, 0.04%)</title><rect x="272.9" y="261" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="275.89" y="271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1669" width="0.2" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="630.65" y="1679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="623.7" y="1349" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="626.70" y="1359.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (5 samples, 0.03%)</title><rect x="625.7" y="1861" width="0.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="628.71" y="1871.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core::Cons_O&gt; &gt;::allocate_kind(gctools::Header_s::Value const&amp;, unsigned long, void const*) (40 samples, 0.25%)</title><rect x="1011.0" y="3589" width="3.0" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1014.01" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="627.1" y="1541" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="630.13" y="1551.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="1181.6" y="3717" width="0.2" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="1184.64" y="3727.5" ></text>
</g>
<g >
<title>`DO-DISPATCH-MISS^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2549" width="284.1" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="13.00" y="2559.5" >`DO-DISPATCH-MISS^CLOS^FN^^</text>
</g>
<g >
<title>`core::lambdaListHandler_createBindings(gctools::smart_ptr&lt;core::Closure_O&gt;, gctools::smart_ptr&lt;core::LambdaListHandler_O&gt;, core::DynamicScopeManager&amp;, gctools::smart_ptr&lt;core::Vaslist&gt;, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*) (6 samples, 0.04%)</title><rect x="859.8" y="3605" width="0.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="862.79" y="3615.5" ></text>
</g>
<g >
<title>0x1501b4cfb (7 samples, 0.04%)</title><rect x="173.8" y="357" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="176.76" y="367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.6" y="1445" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="623.64" y="1455.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.33 (7 samples, 0.04%)</title><rect x="874.9" y="3125" width="0.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="877.94" y="3135.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (829 samples, 5.24%)</title><rect x="174.3" y="53" width="61.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="177.28" y="63.5" >`CONVE..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (65 samples, 0.41%)</title><rect x="10.0" y="901" width="4.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="13.00" y="911.5" ></text>
</g>
<g >
<title>`LAST^COMMON-LISP^FN^^ (8 samples, 0.05%)</title><rect x="922.0" y="3733" width="0.6" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="925.04" y="3743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="625.3" y="2037" width="0.3" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="628.27" y="2047.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (24 samples, 0.15%)</title><rect x="619.1" y="3333" width="1.8" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="622.07" y="3343.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (63 samples, 0.40%)</title><rect x="273.8" y="325" width="4.7" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="276.78" y="335.5" ></text>
</g>
<g >
<title>`llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (2 samples, 0.01%)</title><rect x="1156.6" y="3045" width="0.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="1159.64" y="3055.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.4" y="981" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="632.45" y="991.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.12 (9 samples, 0.06%)</title><rect x="997.6" y="3429" width="0.6" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="1000.58" y="3439.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (90 samples, 0.57%)</title><rect x="1182.8" y="3733" width="6.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="1185.83" y="3743.5" ></text>
</g>
<g >
<title>0x1501b4cfb (2 samples, 0.01%)</title><rect x="240.7" y="293" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="243.72" y="303.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="629.4" y="2085" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="632.45" y="2095.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (21 samples, 0.13%)</title><rect x="630.8" y="965" width="1.6" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="633.79" y="975.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (62 samples, 0.39%)</title><rect x="976.9" y="3717" width="4.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="979.90" y="3727.5" ></text>
</g>
<g >
<title>0x1110a62f6 (3 samples, 0.02%)</title><rect x="627.1" y="1301" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="630.13" y="1311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (155 samples, 0.98%)</title><rect x="620.9" y="3509" width="11.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="623.86" y="3519.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="623.1" y="405" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="626.10" y="415.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1829" width="0.9" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="629.16" y="1839.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="879.3" y="3653" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="882.34" y="3663.5" ></text>
</g>
<g >
<title>`client_validate (11 samples, 0.07%)</title><rect x="716.8" y="3605" width="0.8" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="719.78" y="3615.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvmo::PassManager_O, bool (llvm::legacy::PassManager::*)(llvm::Module&amp;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (122 samples, 0.77%)</title><rect x="587.9" y="4533" width="9.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="590.95" y="4543.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (12 samples, 0.08%)</title><rect x="841.0" y="3557" width="0.9" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="843.98" y="3567.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="620.6" y="1877" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="623.64" y="1887.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="1022.4" y="3717" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="1025.36" y="3727.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="650.4" y="3429" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="653.42" y="3439.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (10 samples, 0.06%)</title><rect x="622.4" y="1413" width="0.7" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="625.35" y="1423.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="181" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="635.43" y="191.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.6" y="1429" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="623.64" y="1439.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAG::getLoad(llvm::EVT, llvm::SDLoc const&amp;, llvm::SDValue, llvm::SDValue, llvm::MachinePointerInfo, unsigned int, llvm::MachineMemOperand::Flags, llvm::AAMDNodes const&amp;, llvm::MDNode const*) (2 samples, 0.01%)</title><rect x="583.0" y="4309" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="586.02" y="4319.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.1" y="1029" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="626.10" y="1039.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.7 (17 samples, 0.11%)</title><rect x="620.9" y="981" width="1.2" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="623.86" y="991.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^METHOD^^.35 (18 samples, 0.11%)</title><rect x="13.5" y="469" width="1.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="16.51" y="479.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.4" y="1445" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="633.42" y="1455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.8" y="1493" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="628.79" y="1503.5" ></text>
</g>
<g >
<title>`UPGRADE-ASDF^ASDF/UPGRADE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3717" width="284.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="13.00" y="3727.5" >`UPGRADE-ASDF^ASDF/UPGRADE^FN^^</text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.20 (43 samples, 0.27%)</title><rect x="823.3" y="3173" width="3.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="826.29" y="3183.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="625.3" y="1925" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="628.27" y="1935.5" ></text>
</g>
<g >
<title>0x110cd62a2 (34 samples, 0.22%)</title><rect x="240.9" y="165" width="2.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="243.86" y="175.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="637.1" y="3733" width="0.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="640.06" y="3743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (20 samples, 0.13%)</title><rect x="630.8" y="389" width="1.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="633.79" y="399.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.295 (3 samples, 0.02%)</title><rect x="874.0" y="3525" width="0.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="876.97" y="3535.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.6" y="853" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="633.64" y="863.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="625.9" y="325" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="628.94" y="335.5" ></text>
</g>
<g >
<title>0x1501b4cfb (5 samples, 0.03%)</title><rect x="273.0" y="213" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="275.96" y="223.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (5 samples, 0.03%)</title><rect x="282.0" y="53" width="0.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="284.99" y="63.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1150.4" y="3717" width="0.1" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="1153.37" y="3727.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitCallInst(llvm::CallInst&amp;) (4 samples, 0.03%)</title><rect x="612.4" y="4357" width="0.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="615.35" y="4367.5" ></text>
</g>
<g >
<title>0x110cd62a2 (83 samples, 0.53%)</title><rect x="15.0" y="629" width="6.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="18.00" y="639.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (8 samples, 0.05%)</title><rect x="621.5" y="549" width="0.6" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="624.53" y="559.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="622.1" y="341" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="625.13" y="351.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3,461 samples, 21.89%)</title><rect x="15.0" y="853" width="258.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="18.00" y="863.5" >`CONVERT^CLEAVIR-CST-TO-AST^((:ARO..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (60 samples, 0.38%)</title><rect x="236.2" y="437" width="4.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="239.24" y="447.5" ></text>
</g>
<g >
<title>0x1110a5606 (24 samples, 0.15%)</title><rect x="619.1" y="3237" width="1.8" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="622.07" y="3247.5" ></text>
</g>
<g >
<title>0x1111fb16a (3 samples, 0.02%)</title><rect x="1167.2" y="3637" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1170.23" y="3647.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE*^COMPILER^FN^^ (6 samples, 0.04%)</title><rect x="1021.2" y="3189" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="1024.24" y="3199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="325" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="631.18" y="335.5" ></text>
</g>
<g >
<title>0x1140074e7 (1,469 samples, 9.29%)</title><rect x="21.2" y="37" width="109.6" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="24.20" y="47.5" >0x1140074e7</text>
</g>
<g >
<title>`llvm::orc::IRTransformLayer&lt;llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;, std::__1::function&lt;std::__1::shared_ptr&lt;llvm::Module&gt; (std::__1::shared_ptr&lt;llvm::Module&gt;)&gt; &gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (2 samples, 0.01%)</title><rect x="1176.9" y="3061" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1179.94" y="3071.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (11 samples, 0.07%)</title><rect x="797.3" y="3413" width="0.8" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="800.31" y="3423.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef&lt;llvm::Constant*&gt;, bool, llvm::Optional&lt;unsigned int&gt;, llvm::Type*) (2 samples, 0.01%)</title><rect x="589.6" y="4389" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="592.59" y="4399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1717" width="0.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="629.16" y="1727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="632.4" y="3365" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="635.43" y="3375.5" ></text>
</g>
<g >
<title>0x110cd62a2 (2 samples, 0.01%)</title><rect x="14.9" y="309" width="0.1" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="17.85" y="319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="789" width="0.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="627.00" y="799.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.24 (4 samples, 0.03%)</title><rect x="823.4" y="2085" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="826.44" y="2095.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="625.7" y="2021" width="0.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="628.71" y="2031.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (20 samples, 0.13%)</title><rect x="630.8" y="485" width="1.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="633.79" y="495.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.4" y="949" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="632.45" y="959.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (3 samples, 0.02%)</title><rect x="619.1" y="2565" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="622.15" y="2575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.8" y="1589" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="628.79" y="1599.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.61 (2 samples, 0.01%)</title><rect x="876.3" y="2613" width="0.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="879.28" y="2623.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (102 samples, 0.65%)</title><rect x="620.9" y="2533" width="7.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="623.86" y="2543.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (21 samples, 0.13%)</title><rect x="656.7" y="2757" width="1.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="659.69" y="2767.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.22 (16 samples, 0.10%)</title><rect x="635.6" y="3413" width="1.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="638.57" y="3423.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="643.5" y="3045" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="646.48" y="3055.5" ></text>
</g>
<g >
<title>`core::StackFrameDynamicScopeManager::new_binding(core::Argument const&amp;, gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.03%)</title><rect x="1014.0" y="3653" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="1017.00" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="625.3" y="1109" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="628.27" y="1119.5" ></text>
</g>
<g >
<title>0x1501b4d6b (64 samples, 0.40%)</title><rect x="282.0" y="117" width="4.8" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="284.99" y="127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.8" y="677" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="626.77" y="687.5" ></text>
</g>
<g >
<title>`llvm::AAResultsWrapperPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="610.0" y="4405" width="0.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="612.96" y="4415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (27 samples, 0.17%)</title><rect x="630.3" y="3301" width="2.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="633.34" y="3311.5" ></text>
</g>
<g >
<title>0x111337578 (23 samples, 0.15%)</title><rect x="1187.0" y="1525" width="1.7" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1190.01" y="1535.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (89 samples, 0.56%)</title><rect x="1182.9" y="3333" width="6.7" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="1185.91" y="3343.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldConstant(llvm::Constant const*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (2 samples, 0.01%)</title><rect x="594.4" y="4437" width="0.1" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="597.36" y="4447.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.20 (6 samples, 0.04%)</title><rect x="1021.2" y="3253" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="1024.24" y="3263.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (40 samples, 0.25%)</title><rect x="278.5" y="405" width="3.0" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="281.48" y="415.5" ></text>
</g>
<g >
<title>`llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="657.4" y="2421" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="660.44" y="2431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.6" y="917" width="0.1" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="632.60" y="927.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (2 samples, 0.01%)</title><rect x="1183.8" y="2597" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="1186.80" y="2607.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="630.0" y="2165" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="633.04" y="2175.5" ></text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="1176.9" y="3733" width="0.6" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="1179.94" y="3743.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.12 (17 samples, 0.11%)</title><rect x="620.9" y="901" width="1.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="623.86" y="911.5" ></text>
</g>
<g >
<title>0x1110a5606 (6 samples, 0.04%)</title><rect x="629.4" y="2357" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="632.45" y="2367.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (55 samples, 0.35%)</title><rect x="169.4" y="229" width="4.1" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="172.43" y="239.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.8 (7 samples, 0.04%)</title><rect x="874.9" y="3061" width="0.6" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="877.94" y="3071.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="827.3" y="3653" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="830.32" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (12 samples, 0.08%)</title><rect x="626.2" y="613" width="0.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="629.16" y="623.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (9 samples, 0.06%)</title><rect x="657.6" y="2485" width="0.7" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="660.59" y="2495.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="533" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="622.15" y="543.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (24 samples, 0.15%)</title><rect x="619.1" y="3013" width="1.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="622.07" y="3023.5" ></text>
</g>
<g >
<title>`AST-INTERPRETED-CLOSURE^INTERPRET-AST^FN^^.117 (59 samples, 0.37%)</title><rect x="282.4" y="69" width="4.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="285.37" y="79.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (62 samples, 0.39%)</title><rect x="236.2" y="613" width="4.7" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="239.24" y="623.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (9 samples, 0.06%)</title><rect x="173.6" y="453" width="0.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="176.61" y="463.5" ></text>
</g>
<g >
<title>`COMPILE-FILE-PARALLEL^COMPILER^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1781" width="284.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="13.00" y="1791.5" >`COMPILE-FILE-PARALLEL^COMPILER^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="623.6" y="2117" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="626.62" y="2127.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="1157.5" y="3397" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="1160.53" y="3407.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt; (llvmo::ClaspJIT_O::*)(gctools::smart_ptr&lt;llvmo::Module_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1021.3" y="3061" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1024.31" y="3071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="623.1" y="1477" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="626.10" y="1487.5" ></text>
</g>
<g >
<title>`macro-functions.lisp-macro-functions194^173^TOP-COMPILE-FILE.43 (96 samples, 0.61%)</title><rect x="286.9" y="741" width="7.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="289.92" y="751.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.56 (2 samples, 0.01%)</title><rect x="876.3" y="2693" width="0.1" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="879.28" y="2703.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (6 samples, 0.04%)</title><rect x="173.8" y="277" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="176.84" y="287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1365" width="0.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="622.15" y="1375.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.01%)</title><rect x="752.5" y="3605" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="755.53" y="3615.5" ></text>
</g>
<g >
<title>0x110c56182 (2 samples, 0.01%)</title><rect x="693.6" y="3653" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="696.64" y="3663.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (2 samples, 0.01%)</title><rect x="934.1" y="3733" width="0.1" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="937.06" y="3743.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^396^TOP-COMPILE-FILE.120 (90 samples, 0.57%)</title><rect x="1182.8" y="3829" width="6.8" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="1185.83" y="3839.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (2 samples, 0.01%)</title><rect x="240.7" y="373" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="243.72" y="383.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (82 samples, 0.52%)</title><rect x="15.0" y="373" width="6.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="18.00" y="383.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (126 samples, 0.80%)</title><rect x="130.8" y="165" width="9.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="133.84" y="175.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (7 samples, 0.04%)</title><rect x="628.0" y="1381" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="630.95" y="1391.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (34 samples, 0.22%)</title><rect x="696.0" y="3621" width="2.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="698.95" y="3631.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T T ONE-SUCCESSOR-MIXIN T))^METHOD^^ (195 samples, 1.23%)</title><rect x="652.5" y="3637" width="14.6" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="655.51" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (102 samples, 0.65%)</title><rect x="620.9" y="2629" width="7.6" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="623.86" y="2639.5" ></text>
</g>
<g >
<title>`llvmo::ClaspJIT_O::addModule(gctools::smart_ptr&lt;llvmo::Module_O&gt;) (9 samples, 0.06%)</title><rect x="620.9" y="501" width="0.6" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="623.86" y="511.5" ></text>
</g>
<g >
<title>0x1501b4c8b (40 samples, 0.25%)</title><rect x="278.5" y="85" width="3.0" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="281.48" y="95.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.18 (2 samples, 0.01%)</title><rect x="656.7" y="2117" width="0.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="659.69" y="2127.5" ></text>
</g>
<g >
<title>`core::core__instance_ref(gctools::smart_ptr&lt;core::T_O&gt;, int) (2 samples, 0.01%)</title><rect x="716.5" y="3621" width="0.1" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="719.48" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="709" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="626.33" y="719.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="389" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="622.44" y="399.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (195 samples, 1.23%)</title><rect x="652.5" y="3669" width="14.6" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="655.51" y="3679.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="1023.8" y="3749" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="1026.77" y="3759.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.6" y="949" width="0.1" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="632.60" y="959.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (32 samples, 0.20%)</title><rect x="1071.5" y="3669" width="2.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1074.47" y="3679.5" ></text>
</g>
<g >
<title>0x110cd62a2 (582 samples, 3.68%)</title><rect x="130.8" y="629" width="43.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="133.84" y="639.5" >0x11..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (2 samples, 0.01%)</title><rect x="14.9" y="757" width="0.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="17.85" y="767.5" ></text>
</g>
<g >
<title>0x1501b45fb (6 samples, 0.04%)</title><rect x="281.5" y="373" width="0.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="284.47" y="383.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="632.4" y="2757" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="635.43" y="2767.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="629.4" y="117" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="632.45" y="127.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvmo::PassManager_O, bool (llvm::legacy::PassManager::*)(llvm::Module&amp;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (7 samples, 0.04%)</title><rect x="872.9" y="2981" width="0.5" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="875.85" y="2991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="1269" width="0.7" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="625.35" y="1279.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (82 samples, 0.52%)</title><rect x="1095.5" y="3701" width="6.1" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="1098.50" y="3711.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.293 (21 samples, 0.13%)</title><rect x="656.7" y="3141" width="1.6" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="659.69" y="3151.5" ></text>
</g>
<g >
<title>`GC_mark_some (15 samples, 0.09%)</title><rect x="1169.7" y="3477" width="1.1" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="1172.70" y="3487.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="623.3" y="693" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="626.33" y="703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="245" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="628.94" y="255.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (6 samples, 0.04%)</title><rect x="985.9" y="3637" width="0.4" height="15.0" fill="rgb(250,122,122)" rx="2" ry="2" />
<text  x="988.86" y="3647.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__class_type_info::process_static_type_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int) const (4 samples, 0.03%)</title><rect x="991.2" y="3669" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="994.16" y="3679.5" ></text>
</g>
<g >
<title>`CODEGEN^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="869" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="826.51" y="879.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvmo::PassManager_O, bool (llvm::legacy::PassManager::*)(llvm::Module&amp;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="640.4" y="2773" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="643.42" y="2783.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.6" y="2133" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="623.64" y="2143.5" ></text>
</g>
<g >
<title>`COMPILE^COMMON-LISP^FN^^ (9 samples, 0.06%)</title><rect x="997.6" y="3541" width="0.6" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="1000.58" y="3551.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (33 samples, 0.21%)</title><rect x="929.5" y="3685" width="2.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="932.50" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="213" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="625.13" y="223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (24 samples, 0.15%)</title><rect x="619.1" y="3029" width="1.8" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="622.07" y="3039.5" ></text>
</g>
<g >
<title>`gctools::initializeBoehm(int (*)(int, char**, bool&amp;, int&amp;, int&amp;), int, char**, bool, int, int) (3,806 samples, 24.07%)</title><rect x="10.0" y="4757" width="284.1" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="13.00" y="4767.5" >`gctools::initializeBoehm(int (*)(int,..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="629.4" y="2549" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="632.45" y="2559.5" ></text>
</g>
<g >
<title>0x15011c819 (195 samples, 1.23%)</title><rect x="652.5" y="3685" width="14.6" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="655.51" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="741" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="630.95" y="751.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::StructType_O&gt; gctools::GCObjectAppropriatePoolAllocator&lt;llvmo::StructType_O, (gctools::GCInfo_policy)1&gt;::allocate_in_appropriate_pool_kind&lt;&gt;(gctools::Header_s::Value const&amp;, unsigned long) (23 samples, 0.15%)</title><rect x="1184.9" y="2229" width="1.7" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="1187.92" y="2239.5" ></text>
</g>
<g >
<title>`llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (4 samples, 0.03%)</title><rect x="872.5" y="2949" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="875.48" y="2959.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (5 samples, 0.03%)</title><rect x="900.7" y="3573" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="903.69" y="3583.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (21 samples, 0.13%)</title><rect x="630.8" y="757" width="1.6" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="633.79" y="767.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="901" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="625.13" y="911.5" ></text>
</g>
<g >
<title>`AST-INTERPRETED-CLOSURE^INTERPRET-AST^FN^^.117 (7 samples, 0.04%)</title><rect x="272.8" y="421" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="275.81" y="431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="625.7" y="2037" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="628.71" y="2047.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="1317" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="622.15" y="1327.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="628.0" y="757" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="630.95" y="767.5" ></text>
</g>
<g >
<title>0x1110a5606 (27 samples, 0.17%)</title><rect x="630.3" y="2357" width="2.1" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="633.34" y="2367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (6 samples, 0.04%)</title><rect x="619.4" y="1877" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="622.37" y="1887.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="622.1" y="1429" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="625.13" y="1439.5" ></text>
</g>
<g >
<title>`inline-one-instruction.lisp-inline-one-instruction395^185^TOP-COMPILE-FILE.93 (3 samples, 0.02%)</title><rect x="644.5" y="3621" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="647.52" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (7 samples, 0.04%)</title><rect x="620.3" y="2773" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="623.27" y="2783.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.7 (7 samples, 0.04%)</title><rect x="1176.9" y="3557" width="0.6" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="1179.94" y="3567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="623.3" y="1749" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="626.33" y="1759.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="630.6" y="789" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="633.64" y="799.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (3 samples, 0.02%)</title><rect x="1182.3" y="3733" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="1185.31" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (17 samples, 0.11%)</title><rect x="620.9" y="1365" width="1.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="623.86" y="1375.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (19 samples, 0.12%)</title><rect x="271.2" y="181" width="1.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="274.24" y="191.5" ></text>
</g>
<g >
<title>0x12616a77d (6 samples, 0.04%)</title><rect x="644.8" y="3621" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="647.82" y="3631.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="632.4" y="1925" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="635.43" y="1935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2053" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="633.04" y="2063.5" ></text>
</g>
<g >
<title>0x1110a5456 (2 samples, 0.01%)</title><rect x="620.3" y="2069" width="0.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="623.27" y="2079.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="656.2" y="3349" width="0.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="659.24" y="3359.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (18 samples, 0.11%)</title><rect x="13.5" y="261" width="1.4" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="16.51" y="271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="325" width="0.2" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="632.45" y="335.5" ></text>
</g>
<g >
<title>`llvm::InstructionCombiningPass::runOnFunction(llvm::Function&amp;) (54 samples, 0.34%)</title><rect x="610.6" y="4405" width="4.0" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="613.56" y="4415.5" ></text>
</g>
<g >
<title>`COMPUTE-INSTRUCTION-OWNERS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (3 samples, 0.02%)</title><rect x="634.0" y="3797" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="637.00" y="3807.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::SelectAllBasicBlocks(llvm::Function const&amp;) (2 samples, 0.01%)</title><rect x="635.9" y="2917" width="0.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="638.87" y="2927.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (6 samples, 0.04%)</title><rect x="619.4" y="2325" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="622.37" y="2335.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::removeDeadPasses(llvm::Pass*, llvm::StringRef, llvm::PassDebuggingString) (4 samples, 0.03%)</title><rect x="587.2" y="4421" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="590.20" y="4431.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (4 samples, 0.03%)</title><rect x="1091.4" y="3685" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1094.40" y="3695.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (7 samples, 0.04%)</title><rect x="636.2" y="3061" width="0.6" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="639.24" y="3071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (14 samples, 0.09%)</title><rect x="626.1" y="2085" width="1.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="629.09" y="2095.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (34 samples, 0.22%)</title><rect x="240.9" y="229" width="2.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="243.86" y="239.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="624.3" y="853" width="1.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="627.30" y="863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="627.1" y="1413" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="630.13" y="1423.5" ></text>
</g>
<g >
<title>0x1501b4cfb (5 samples, 0.03%)</title><rect x="273.0" y="101" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="275.96" y="111.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="1157.4" y="3541" width="0.1" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="1160.38" y="3551.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (37 samples, 0.23%)</title><rect x="1168.6" y="3605" width="2.7" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1171.58" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="625.8" y="1509" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="628.79" y="1519.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="632.4" y="2421" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="635.43" y="2431.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::RAGreedy::tryAssign(llvm::LiveInterval&amp;, llvm::AllocationOrder&amp;, llvm::SmallVectorImpl&lt;unsigned int&gt;&amp;) (2 samples, 0.01%)</title><rect x="576.9" y="4341" width="0.1" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="579.90" y="4351.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="453" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="635.43" y="463.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(llvm::MemoryLocation const&amp;, bool, llvm::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::Instruction, false, false, void&gt;, false, false&gt;, llvm::BasicBlock*, llvm::Instruction*, unsigned int*) (3 samples, 0.02%)</title><rect x="599.1" y="4341" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="602.07" y="4351.5" ></text>
</g>
<g >
<title>0x110cd62a2 (126 samples, 0.80%)</title><rect x="130.8" y="181" width="9.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="133.84" y="191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1189" width="0.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="629.16" y="1199.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (13 samples, 0.08%)</title><rect x="624.3" y="613" width="1.0" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="627.30" y="623.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (4 samples, 0.03%)</title><rect x="650.4" y="3605" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="653.42" y="3615.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (3 samples, 0.02%)</title><rect x="799.6" y="3605" width="0.2" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="802.55" y="3615.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (3 samples, 0.02%)</title><rect x="1053.0" y="3701" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="1055.96" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (26 samples, 0.16%)</title><rect x="630.4" y="1861" width="2.0" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="633.42" y="1871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (37 samples, 0.23%)</title><rect x="620.9" y="2181" width="2.7" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="623.86" y="2191.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="619.4" y="469" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="622.44" y="479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="117" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="622.15" y="127.5" ></text>
</g>
<g >
<title>0x110c6012c (2 samples, 0.01%)</title><rect x="1037.7" y="3733" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1040.73" y="3743.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::AssemblyWriter::printBasicBlock(llvm::BasicBlock const*) (3 samples, 0.02%)</title><rect x="572.1" y="4469" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="575.12" y="4479.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="1061" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="622.15" y="1071.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.02%)</title><rect x="620.3" y="2453" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="623.27" y="2463.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (7 samples, 0.04%)</title><rect x="620.3" y="2789" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="623.27" y="2799.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.295 (12 samples, 0.08%)</title><rect x="872.5" y="3605" width="0.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="875.48" y="3615.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (7 samples, 0.04%)</title><rect x="659.5" y="3365" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="662.45" y="3375.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (6 samples, 0.04%)</title><rect x="823.3" y="2341" width="0.4" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="826.29" y="2351.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (5 samples, 0.03%)</title><rect x="289.2" y="101" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="292.16" y="111.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="623.8" y="165" width="0.1" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="626.77" y="175.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="619.4" y="1621" width="0.4" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="622.44" y="1631.5" ></text>
</g>
<g >
<title>`CLASS-GET^EXT^FN^^ (4 samples, 0.03%)</title><rect x="879.9" y="3749" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="882.94" y="3759.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.65 (5 samples, 0.03%)</title><rect x="1188.1" y="165" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="1191.06" y="175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="622.1" y="1461" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="625.13" y="1471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="1541" width="0.7" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="625.35" y="1551.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (3 samples, 0.02%)</title><rect x="623.1" y="1509" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="626.10" y="1519.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^.14 (92 samples, 0.58%)</title><rect x="287.1" y="165" width="6.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="290.14" y="175.5" ></text>
</g>
<g >
<title>`EVALUATE-EXPRESSION^ECLECTOR.READER^((T T))^METHOD^^.16 (9 samples, 0.06%)</title><rect x="293.3" y="69" width="0.7" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="296.34" y="79.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.7 (5 samples, 0.03%)</title><rect x="1156.6" y="3557" width="0.4" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="1159.64" y="3567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (27 samples, 0.17%)</title><rect x="630.3" y="2389" width="2.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="633.34" y="2399.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.88 (86 samples, 0.54%)</title><rect x="1183.1" y="3205" width="6.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1186.13" y="3215.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="625.8" y="1365" width="0.1" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="628.79" y="1375.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.6" y="949" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="623.64" y="959.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.30 (5 samples, 0.03%)</title><rect x="640.2" y="3045" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="643.19" y="3055.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="655.9" y="3461" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="658.94" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1381" width="0.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="627.00" y="1391.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (2 samples, 0.01%)</title><rect x="907.2" y="3701" width="0.1" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="910.19" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="623.7" y="917" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="626.70" y="927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="485" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="630.95" y="495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="341" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="630.95" y="351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (10 samples, 0.06%)</title><rect x="622.4" y="1381" width="0.7" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="625.35" y="1391.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.61 (14 samples, 0.09%)</title><rect x="1187.5" y="709" width="1.1" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="1190.54" y="719.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="630.8" y="117" width="1.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="633.79" y="127.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (10 samples, 0.06%)</title><rect x="12.8" y="277" width="0.7" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="15.76" y="287.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="624.0" y="1685" width="0.1" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="627.00" y="1695.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (24 samples, 0.15%)</title><rect x="619.1" y="3253" width="1.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="622.07" y="3263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="917" width="0.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="623.64" y="927.5" ></text>
</g>
<g >
<title>`std::__1::__function::__func&lt;llvmo::ClaspJIT_O::ClaspJIT_O()::$_5, std::__1::allocator&lt;llvmo::ClaspJIT_O::ClaspJIT_O()::$_5&gt;, std::__1::shared_ptr&lt;llvm::Module&gt; (std::__1::shared_ptr&lt;llvm::Module&gt;)&gt;::operator()(std::__1::shared_ptr&lt;llvm::Module&gt;&amp;&amp;) (2 samples, 0.01%)</title><rect x="621.4" y="469" width="0.1" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="624.38" y="479.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METHOD^^.74 (2 samples, 0.01%)</title><rect x="14.9" y="629" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="17.85" y="639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2357" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="633.04" y="2367.5" ></text>
</g>
<g >
<title>`llvm::BranchFolder::OptimizeFunction(llvm::MachineFunction&amp;, llvm::TargetInstrInfo const*, llvm::TargetRegisterInfo const*, llvm::MachineModuleInfo*, llvm::MachineLoopInfo*, bool) (2 samples, 0.01%)</title><rect x="573.8" y="4389" width="0.1" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="576.76" y="4399.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (50 samples, 0.32%)</title><rect x="638.6" y="3605" width="3.8" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="641.63" y="3615.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (27 samples, 0.17%)</title><rect x="630.3" y="2725" width="2.1" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="633.34" y="2735.5" ></text>
</g>
<g >
<title>`core::cl__class_of(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="977.4" y="3701" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="980.42" y="3711.5" ></text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^COMPILER^FN^^ (6 samples, 0.04%)</title><rect x="1021.2" y="3701" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="1024.24" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="628.2" y="165" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="631.18" y="175.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.98 (7 samples, 0.04%)</title><rect x="1188.0" y="341" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="1190.98" y="351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (21 samples, 0.13%)</title><rect x="630.8" y="933" width="1.6" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="633.79" y="943.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1845" width="0.9" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="629.16" y="1855.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.101 (3 samples, 0.02%)</title><rect x="823.5" y="773" width="0.2" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="826.51" y="783.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="997.7" y="3141" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="1000.65" y="3151.5" ></text>
</g>
<g >
<title>`llvm::LiveIntervals::computeVirtRegs() (2 samples, 0.01%)</title><rect x="584.0" y="4389" width="0.1" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="586.99" y="4399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="627.7" y="1461" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="630.65" y="1471.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock, false&gt; &gt;::CalculateFromScratch(llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock, false&gt;&amp;, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock, false&gt; &gt;::BatchUpdateInfo*) (8 samples, 0.05%)</title><rect x="585.2" y="4389" width="0.6" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="588.18" y="4399.5" ></text>
</g>
<g >
<title>0x1110a4be6 (27 samples, 0.17%)</title><rect x="630.3" y="2261" width="2.1" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="633.34" y="2271.5" ></text>
</g>
<g >
<title>`core::General_O::_instanceClass() const (2 samples, 0.01%)</title><rect x="934.4" y="3733" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="937.43" y="3743.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (19 samples, 0.12%)</title><rect x="825.1" y="3061" width="1.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="828.08" y="3071.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (36 samples, 0.23%)</title><rect x="10.0" y="501" width="2.7" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="650.4" y="3461" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="653.42" y="3471.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.26 (11 samples, 0.07%)</title><rect x="643.5" y="3237" width="0.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="646.48" y="3247.5" ></text>
</g>
<g >
<title>`__dynamic_cast (25 samples, 0.16%)</title><rect x="925.0" y="3685" width="1.9" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="928.02" y="3695.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.2 (2 samples, 0.01%)</title><rect x="656.7" y="2245" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="659.69" y="2255.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="650.4" y="3397" width="0.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="653.42" y="3407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="628.2" y="933" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="631.18" y="943.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.9" y="1349" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="628.94" y="1359.5" ></text>
</g>
<g >
<title>0x1140073e7 (18 samples, 0.11%)</title><rect x="13.5" y="661" width="1.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="16.51" y="671.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="627.7" y="1429" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="630.65" y="1439.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (6 samples, 0.04%)</title><rect x="1188.0" y="309" width="0.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="1190.98" y="319.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="623.1" y="533" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="626.10" y="543.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (27 samples, 0.17%)</title><rect x="630.3" y="2117" width="2.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="633.34" y="2127.5" ></text>
</g>
<g >
<title>0x123711068 (36 samples, 0.23%)</title><rect x="10.0" y="373" width="2.7" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="623.7" y="1445" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="626.70" y="1455.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (31 samples, 0.20%)</title><rect x="1186.8" y="2133" width="2.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="1189.79" y="2143.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="627.7" y="1237" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="630.65" y="1247.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2581" width="2.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="633.34" y="2591.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (27 samples, 0.17%)</title><rect x="630.3" y="3285" width="2.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="633.34" y="3295.5" ></text>
</g>
<g >
<title>`llvm::InstructionCombiningPass::runOnFunction(llvm::Function&amp;) (26 samples, 0.16%)</title><rect x="594.3" y="4469" width="1.9" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="597.29" y="4479.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (17 samples, 0.11%)</title><rect x="140.3" y="37" width="1.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="143.32" y="47.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (24 samples, 0.15%)</title><rect x="630.6" y="1621" width="1.8" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="633.57" y="1631.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt; (llvmo::ClaspJIT_O::*)(gctools::smart_ptr&lt;llvmo::Module_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (7 samples, 0.04%)</title><rect x="635.6" y="3093" width="0.6" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="638.64" y="3103.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (73 samples, 0.46%)</title><rect x="1184.1" y="2469" width="5.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="1187.10" y="2479.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (97 samples, 0.61%)</title><rect x="811.5" y="3621" width="7.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="814.50" y="3631.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (6 samples, 0.04%)</title><rect x="875.0" y="2693" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="878.01" y="2703.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="4261" width="284.1" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="13.00" y="4271.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.3" y="613" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="626.33" y="623.5" ></text>
</g>
<g >
<title>0x1110a5606 (102 samples, 0.65%)</title><rect x="620.9" y="2661" width="7.6" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="623.86" y="2671.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="741" width="0.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="631.18" y="751.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (22 samples, 0.14%)</title><rect x="696.2" y="3589" width="1.7" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="699.25" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="622.1" y="917" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="625.13" y="927.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="1701" width="0.2" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="635.43" y="1711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (17 samples, 0.11%)</title><rect x="620.9" y="1877" width="1.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="623.86" y="1887.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (6 samples, 0.04%)</title><rect x="778.2" y="3605" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="781.21" y="3615.5" ></text>
</g>
<g >
<title>0x11171939a (4 samples, 0.03%)</title><rect x="641.7" y="3461" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="644.69" y="3471.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.7" y="1893" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="632.74" y="1903.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="619.1" y="2549" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="622.15" y="2559.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="622.1" y="1525" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="625.13" y="1535.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="651.4" y="3509" width="0.1" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="654.39" y="3519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1237" width="0.1" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="627.00" y="1247.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (6 samples, 0.04%)</title><rect x="957.9" y="3749" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="960.87" y="3759.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="53" width="109.6" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="24.20" y="63.5" >`CONVERT^CLEA..</text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.10 (6 samples, 0.04%)</title><rect x="1021.2" y="3477" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="1024.24" y="3487.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="658.5" y="3285" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="661.48" y="3295.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="1178.7" y="3669" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1181.73" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="789" width="0.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="622.44" y="799.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (4 samples, 0.03%)</title><rect x="900.7" y="3557" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="903.69" y="3567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (17 samples, 0.11%)</title><rect x="620.9" y="1813" width="1.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="623.86" y="1823.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.9" y="965" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="628.94" y="975.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::run() (2 samples, 0.01%)</title><rect x="873.2" y="2885" width="0.2" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="876.22" y="2895.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="629.4" y="1813" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="632.45" y="1823.5" ></text>
</g>
<g >
<title>0x110d5d3c5 (2 samples, 0.01%)</title><rect x="727.7" y="3653" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="730.75" y="3663.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (8 samples, 0.05%)</title><rect x="1187.9" y="549" width="0.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="1190.91" y="559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="1269" width="0.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="622.44" y="1279.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="623.7" y="1829" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="626.70" y="1839.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (23 samples, 0.15%)</title><rect x="1184.9" y="2213" width="1.7" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="1187.92" y="2223.5" ></text>
</g>
<g >
<title>`gctools::multiple_values&lt;core::T_O&gt; core::eval::applyLastArgsPLUSFirst&lt;&gt;(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::List_V&gt;) (8,345 samples, 52.79%)</title><rect x="567.1" y="4709" width="622.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="570.12" y="4719.5" >`gctools::multiple_values&lt;core::T_O&gt; core::eval::applyLastArgsPLUSFirst&lt;&gt;(gctools::sm..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.4" y="645" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="632.45" y="655.5" ></text>
</g>
<g >
<title>0x1501b4cfb (6 samples, 0.04%)</title><rect x="173.8" y="293" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="176.84" y="303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="1173" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="631.18" y="1183.5" ></text>
</g>
<g >
<title>`asdf.lisp-^7563^TOP-COMPILE-FILE.8 (3,806 samples, 24.07%)</title><rect x="10.0" y="3669" width="284.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="13.00" y="3679.5" >`asdf.lisp-^7563^TOP-COMPILE-FILE.8</text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="877.9" y="3365" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="880.93" y="3375.5" ></text>
</g>
<g >
<title>`PERFORM-OUTCOME^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="4309" width="284.1" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="13.00" y="4319.5" >`PERFORM-OUTCOME^CLOS^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="261" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="635.43" y="271.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (7 samples, 0.04%)</title><rect x="1184.4" y="2421" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1187.40" y="2431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="1941" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="622.15" y="1951.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (10 samples, 0.06%)</title><rect x="622.4" y="725" width="0.7" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="625.35" y="735.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (21 samples, 0.13%)</title><rect x="630.8" y="853" width="1.6" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="633.79" y="863.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1621" width="284.1" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^321^TOP-COMPILE-FILE.133 (3 samples, 0.02%)</title><rect x="627.7" y="1013" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="630.65" y="1023.5" ></text>
</g>
<g >
<title>0x110d5d171 (52 samples, 0.33%)</title><rect x="887.3" y="3733" width="3.9" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="890.33" y="3743.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE.13 (3,806 samples, 24.07%)</title><rect x="10.0" y="1477" width="284.1" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="13.00" y="1487.5" >`compile-file.lsp-compile-file52^33^TO..</text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (89 samples, 0.56%)</title><rect x="1182.9" y="3525" width="6.7" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="1185.91" y="3535.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (6 samples, 0.04%)</title><rect x="876.5" y="2629" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="879.51" y="2639.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (24 samples, 0.15%)</title><rect x="814.2" y="3605" width="1.8" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="817.18" y="3615.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvmo::PassManager_O, bool (llvm::legacy::PassManager::*)(llvm::Module&amp;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (4 samples, 0.03%)</title><rect x="1177.2" y="3077" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1180.16" y="3087.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1237" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="622.15" y="1247.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (10 samples, 0.06%)</title><rect x="12.8" y="293" width="0.7" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="15.76" y="303.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1,269 samples, 8.03%)</title><rect x="469.9" y="4693" width="94.7" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="472.86" y="4703.5" >`GC_push_co..</text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="620.6" y="2661" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="623.64" y="2671.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.7" y="1333" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="632.74" y="1343.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.3" y="1445" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="626.33" y="1455.5" ></text>
</g>
<g >
<title>0x123709171 (96 samples, 0.61%)</title><rect x="286.9" y="821" width="7.2" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="289.92" y="831.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.32 (21 samples, 0.13%)</title><rect x="656.7" y="3045" width="1.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="659.69" y="3055.5" ></text>
</g>
<g >
<title>0x1110a5606 (27 samples, 0.17%)</title><rect x="630.3" y="2821" width="2.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="633.34" y="2831.5" ></text>
</g>
<g >
<title>0x1110a5456 (2 samples, 0.01%)</title><rect x="623.8" y="277" width="0.1" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="626.77" y="287.5" ></text>
</g>
<g >
<title>0x1501b4cfb (6 samples, 0.04%)</title><rect x="173.8" y="325" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="176.84" y="335.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.01%)</title><rect x="1013.8" y="3573" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1016.85" y="3583.5" ></text>
</g>
<g >
<title>0x110c59ee7 (4 samples, 0.03%)</title><rect x="726.3" y="3653" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="729.33" y="3663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (60 samples, 0.38%)</title><rect x="289.5" y="101" width="4.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="292.53" y="111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (184 samples, 1.16%)</title><rect x="619.1" y="3605" width="13.7" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="622.07" y="3615.5" ></text>
</g>
<g >
<title>`GC_allocobj (17 samples, 0.11%)</title><rect x="1169.5" y="3541" width="1.3" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="1172.55" y="3551.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="624.1" y="1525" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="627.15" y="1535.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.PARSE-RESULT^FN^^ (98 samples, 0.62%)</title><rect x="286.8" y="1157" width="7.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="289.77" y="1167.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (12 samples, 0.08%)</title><rect x="626.2" y="293" width="0.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="629.16" y="303.5" ></text>
</g>
<g >
<title>`GC_mark_from (59 samples, 0.37%)</title><rect x="1141.1" y="3429" width="4.4" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="1144.11" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (126 samples, 0.80%)</title><rect x="620.9" y="3173" width="9.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="623.86" y="3183.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (82 samples, 0.52%)</title><rect x="15.0" y="437" width="6.1" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="18.00" y="447.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="648.6" y="3349" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="651.55" y="3359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1685" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="630.65" y="1695.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="85" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="622.15" y="95.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="624.1" y="1845" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="627.15" y="1855.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (7 samples, 0.04%)</title><rect x="628.0" y="1589" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="630.95" y="1599.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="998.1" y="2997" width="0.1" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="1001.10" y="3007.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (3 samples, 0.02%)</title><rect x="857.0" y="3397" width="0.2" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="859.95" y="3407.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solveBlockValueImpl(llvm::ValueLatticeElement&amp;, llvm::Value*, llvm::BasicBlock*) (3 samples, 0.02%)</title><rect x="597.7" y="4325" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="600.72" y="4335.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (1,469 samples, 9.29%)</title><rect x="21.2" y="421" width="109.6" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="24.20" y="431.5" >`convert-spec..</text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (9 samples, 0.06%)</title><rect x="645.6" y="3349" width="0.7" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="648.64" y="3359.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (197 samples, 1.25%)</title><rect x="938.9" y="3701" width="14.7" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="941.91" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (13 samples, 0.08%)</title><rect x="624.3" y="1397" width="1.0" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="627.30" y="1407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (20 samples, 0.13%)</title><rect x="622.1" y="1829" width="1.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="625.13" y="1839.5" ></text>
</g>
<g >
<title>`MAKE-ENTER-INSTRUCTION^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="651.7" y="3589" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="654.69" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="623.6" y="2181" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="626.62" y="2191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.1" y="1493" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="627.15" y="1503.5" ></text>
</g>
<g >
<title>`llvm::InstructionCombiningPass::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="658.0" y="2437" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="660.96" y="2447.5" ></text>
</g>
<g >
<title>`llvm::removeUnreachableBlocks(llvm::Function&amp;, llvm::LazyValueInfo*) (2 samples, 0.01%)</title><rect x="615.4" y="4389" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="618.41" y="4399.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (63 samples, 0.40%)</title><rect x="273.8" y="373" width="4.7" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="276.78" y="383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="622.1" y="437" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="625.13" y="447.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="69" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="635.43" y="79.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="677" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="622.15" y="687.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (21 samples, 0.13%)</title><rect x="624.0" y="2117" width="1.6" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="627.00" y="2127.5" ></text>
</g>
<g >
<title>`INSTANCE-SET^CORE^FN^^ (88 samples, 0.56%)</title><rect x="758.7" y="3637" width="6.6" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="761.72" y="3647.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^METHOD^^.35 (19 samples, 0.12%)</title><rect x="271.2" y="101" width="1.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="274.24" y="111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="2069" width="0.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="623.49" y="2079.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (22 samples, 0.14%)</title><rect x="1187.1" y="1461" width="1.6" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="1190.09" y="1471.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (7 samples, 0.04%)</title><rect x="874.9" y="3205" width="0.6" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="877.94" y="3215.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="627.1" y="1925" width="0.4" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="630.13" y="1935.5" ></text>
</g>
<g >
<title>0x110d5ddfc (39 samples, 0.25%)</title><rect x="891.6" y="3733" width="2.9" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="894.59" y="3743.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="874.0" y="3333" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="876.97" y="3343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="885" width="0.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="628.94" y="895.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1637" width="0.1" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="623.49" y="1647.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (5 samples, 0.03%)</title><rect x="952.7" y="3669" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="955.72" y="3679.5" ></text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (10 samples, 0.06%)</title><rect x="905.9" y="3701" width="0.8" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="908.92" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.02%)</title><rect x="622.1" y="997" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="625.13" y="1007.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (7 samples, 0.04%)</title><rect x="627.1" y="2133" width="0.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="630.13" y="2143.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (2 samples, 0.01%)</title><rect x="1053.3" y="3717" width="0.1" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="1056.26" y="3727.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (71 samples, 0.45%)</title><rect x="1140.6" y="3541" width="5.3" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="1143.59" y="3551.5" ></text>
</g>
<g >
<title>0x110c5609d (2 samples, 0.01%)</title><rect x="692.7" y="3653" width="0.1" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="695.67" y="3663.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (7 samples, 0.04%)</title><rect x="1145.9" y="3557" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1148.89" y="3567.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="773.2" y="3621" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="776.20" y="3631.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const*, llvm::SmallPtrSet&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const*, 8u&gt;, false, llvm::GraphTraits&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const*&gt; &gt;::po_iterator(llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const*) (2 samples, 0.01%)</title><rect x="605.1" y="4357" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="608.11" y="4367.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (18 samples, 0.11%)</title><rect x="13.5" y="245" width="1.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="16.51" y="255.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="620.6" y="2469" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="623.64" y="2479.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.26 (3 samples, 0.02%)</title><rect x="823.5" y="1205" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="826.51" y="1215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="421" width="1.0" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="627.30" y="431.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="640.2" y="2837" width="0.1" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="643.19" y="2847.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt; (llvmo::ClaspJIT_O::*)(gctools::smart_ptr&lt;llvmo::Module_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="997.7" y="3045" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1000.65" y="3055.5" ></text>
</g>
<g >
<title>`CATCH-FUNCTION^CORE^FN^^ (2 samples, 0.01%)</title><rect x="240.7" y="165" width="0.2" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="243.72" y="175.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (2 samples, 0.01%)</title><rect x="894.3" y="3717" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="897.35" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="309" width="0.7" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="625.35" y="319.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (20 samples, 0.13%)</title><rect x="630.8" y="133" width="1.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="633.79" y="143.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="619.8" y="2533" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="622.82" y="2543.5" ></text>
</g>
<g >
<title>`llvm::ScheduleDAGTopologicalSort::InitDAGTopologicalSorting() (2 samples, 0.01%)</title><rect x="576.2" y="4357" width="0.1" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="579.15" y="4367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.6" y="1045" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="623.64" y="1055.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1365" width="284.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="13.00" y="1375.5" >`DO-COMPILATION-UNIT^COMPILER^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.6" y="1269" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="623.64" y="1279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="2437" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="622.15" y="2447.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="565" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="622.15" y="575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="630.8" y="37" width="1.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="633.79" y="47.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (8 samples, 0.05%)</title><rect x="1187.9" y="533" width="0.6" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="1190.91" y="543.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitLoadInst(llvm::LoadInst&amp;) (5 samples, 0.03%)</title><rect x="613.2" y="4357" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="616.17" y="4367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="622.4" y="37" width="0.7" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="625.35" y="47.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.88 (7 samples, 0.04%)</title><rect x="823.3" y="3045" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="826.29" y="3055.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.295 (6 samples, 0.04%)</title><rect x="1021.2" y="3669" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="1024.24" y="3679.5" ></text>
</g>
<g >
<title>`__dynamic_cast (2 samples, 0.01%)</title><rect x="567.1" y="4485" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="570.12" y="4495.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (20 samples, 0.13%)</title><rect x="630.8" y="101" width="1.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="633.79" y="111.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.18 (12 samples, 0.08%)</title><rect x="872.5" y="3205" width="0.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="875.48" y="3215.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="2629" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="622.15" y="2639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1077" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="626.70" y="1087.5" ></text>
</g>
<g >
<title>0x1110a5606 (6 samples, 0.04%)</title><rect x="629.4" y="2565" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="632.45" y="2575.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (184 samples, 1.16%)</title><rect x="619.1" y="3589" width="13.7" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="622.07" y="3599.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.9 (17 samples, 0.11%)</title><rect x="620.9" y="949" width="1.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="623.86" y="959.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (17 samples, 0.11%)</title><rect x="620.9" y="1349" width="1.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="623.86" y="1359.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::MachineBlockPlacement::runOnMachineFunction(llvm::MachineFunction&amp;) (2 samples, 0.01%)</title><rect x="574.4" y="4405" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="577.44" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1653" width="0.1" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="623.49" y="1663.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Vaslist&gt;::smart_ptr(core::Vaslist*) (2 samples, 0.01%)</title><rect x="1150.2" y="3701" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1153.22" y="3711.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((ENCLOSE-INSTRUCTION T))^METHOD^^ (62 samples, 0.39%)</title><rect x="874.2" y="3525" width="4.6" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="877.19" y="3535.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="626.2" y="1253" width="0.9" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="629.16" y="1263.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="622.1" y="261" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="625.13" y="271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="421" width="0.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="632.45" y="431.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METHOD^^.74 (1,469 samples, 9.29%)</title><rect x="21.2" y="197" width="109.6" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="24.20" y="207.5" >`CONVERT-CST^..</text>
</g>
<g >
<title>0x110cd62a2 (36 samples, 0.23%)</title><rect x="10.0" y="549" width="2.7" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (4 samples, 0.03%)</title><rect x="1177.7" y="3557" width="0.3" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="1180.68" y="3567.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.03%)</title><rect x="666.7" y="3477" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="669.69" y="3487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.05%)</title><rect x="627.9" y="2005" width="0.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="630.88" y="2015.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="628.8" y="2517" width="0.1" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="631.77" y="2527.5" ></text>
</g>
<g >
<title>`llvm::MachineBlockFrequencyInfo::runOnMachineFunction(llvm::MachineFunction&amp;) (4 samples, 0.03%)</title><rect x="584.9" y="4405" width="0.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="587.89" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="149" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="628.94" y="159.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (20 samples, 0.13%)</title><rect x="625.6" y="2229" width="1.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="628.64" y="2239.5" ></text>
</g>
<g >
<title>0x110cd62a2 (65 samples, 0.41%)</title><rect x="10.0" y="805" width="4.9" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="2453" width="284.1" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="13.00" y="2463.5" >`core::FuncallableInstance_O::funcalla..</text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.33 (17 samples, 0.11%)</title><rect x="620.9" y="1029" width="1.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="623.86" y="1039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="2005" width="0.1" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="623.49" y="2015.5" ></text>
</g>
<g >
<title>`LINK-INLINE-REMOVE-BUILTINS^COMPILER^FN^^ (257 samples, 1.63%)</title><rect x="597.1" y="4581" width="19.1" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="600.05" y="4591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1413" width="0.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="629.16" y="1423.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (294 samples, 1.86%)</title><rect x="147.5" y="101" width="21.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="150.49" y="111.5" >`..</text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (7 samples, 0.04%)</title><rect x="872.9" y="3061" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="875.85" y="3071.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="619.4" y="1317" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="622.44" y="1327.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="649.0" y="3413" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="652.00" y="3423.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^545^TOP-COMPILE-FILE.146 (4 samples, 0.03%)</title><rect x="1181.9" y="3829" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="1184.94" y="3839.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (7 samples, 0.04%)</title><rect x="661.8" y="3365" width="0.6" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="664.84" y="3375.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="624.0" y="1525" width="0.1" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="627.00" y="1535.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.3" y="261" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="626.33" y="271.5" ></text>
</g>
<g >
<title>0x111981aa8 (3,806 samples, 24.07%)</title><rect x="10.0" y="3957" width="284.1" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="13.00" y="3967.5" >0x111981aa8</text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.8 (6 samples, 0.04%)</title><rect x="823.3" y="2661" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="826.29" y="2671.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="623.3" y="1093" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="626.33" y="1103.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="630.6" y="917" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="633.64" y="927.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (17 samples, 0.11%)</title><rect x="142.2" y="229" width="1.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="145.19" y="239.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (69 samples, 0.44%)</title><rect x="645.3" y="3541" width="5.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="648.27" y="3551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="549" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="626.10" y="559.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.6" y="853" width="0.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="632.60" y="863.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (11 samples, 0.07%)</title><rect x="870.2" y="3653" width="0.9" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="873.24" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (27 samples, 0.17%)</title><rect x="630.3" y="2213" width="2.1" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="633.34" y="2223.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="629.4" y="1829" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="632.45" y="1839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="501" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="631.18" y="511.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (5 samples, 0.03%)</title><rect x="997.9" y="3061" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="1000.87" y="3071.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="652.0" y="3541" width="0.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="654.99" y="3551.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (26 samples, 0.16%)</title><rect x="630.4" y="1749" width="2.0" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="633.42" y="1759.5" ></text>
</g>
<g >
<title>`core::ext__class_unboundp(gctools::smart_ptr&lt;core::ClassHolder_O&gt;) (4 samples, 0.03%)</title><rect x="783.7" y="3637" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="786.73" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="2133" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="632.74" y="2143.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="627.1" y="1237" width="0.3" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="630.13" y="1247.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (19 samples, 0.12%)</title><rect x="825.1" y="3013" width="1.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="828.08" y="3023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="627.1" y="1861" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="630.13" y="1871.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (2 samples, 0.01%)</title><rect x="1140.8" y="3477" width="0.2" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="1143.81" y="3487.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core::Cons_O&gt; &gt; &gt;::resize(unsigned long, core::Cons_O const&amp;) (51 samples, 0.32%)</title><rect x="948.2" y="3621" width="3.8" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="951.16" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="627.1" y="2021" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="630.13" y="2031.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.5" y="2117" width="0.1" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="623.49" y="2127.5" ></text>
</g>
<g >
<title>0x125851575 (4 samples, 0.03%)</title><rect x="642.6" y="3621" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="645.58" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (10 samples, 0.06%)</title><rect x="622.4" y="453" width="0.7" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="625.35" y="463.5" ></text>
</g>
<g >
<title>0x1110a5456 (2 samples, 0.01%)</title><rect x="632.4" y="213" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="635.43" y="223.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((FUNCTION-AST T))^METHOD^^.113 (5 samples, 0.03%)</title><rect x="282.0" y="69" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="284.99" y="79.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.3" y="1909" width="0.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="623.27" y="1919.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="1157.7" y="3397" width="0.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1160.68" y="3407.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (2 samples, 0.01%)</title><rect x="281.7" y="309" width="0.1" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="284.69" y="319.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^264^TOP-COMPILE-FILE.157 (3,806 samples, 24.07%)</title><rect x="10.0" y="1605" width="284.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`OPERATE^ASDF/OPERATE^((SYMBOL T))^METHOD^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3301" width="284.1" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="13.00" y="3311.5" >`OPERATE^ASDF/OPERATE^((SYMBOL T))^MET..</text>
</g>
<g >
<title>0x11171939a (9 samples, 0.06%)</title><rect x="661.8" y="3397" width="0.6" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="664.77" y="3407.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (3 samples, 0.02%)</title><rect x="1167.5" y="3605" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1170.46" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="619.8" y="2229" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="622.82" y="2239.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.103 (2 samples, 0.01%)</title><rect x="1183.8" y="2581" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="1186.80" y="2591.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="648.4" y="3413" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="651.40" y="3423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="677" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="628.94" y="687.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="628.0" y="709" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="630.95" y="719.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.62 (7,677 samples, 48.56%)</title><rect x="616.5" y="3893" width="573.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="619.53" y="3903.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.62</text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="630.6" y="725" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="633.64" y="735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1653" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="623.64" y="1663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="627.1" y="1333" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="630.13" y="1343.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.20 (17 samples, 0.11%)</title><rect x="620.9" y="709" width="1.2" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="623.86" y="719.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="627.7" y="1557" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="630.65" y="1567.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const&amp;, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*) (2 samples, 0.01%)</title><rect x="597.8" y="4309" width="0.1" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="600.80" y="4319.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.31 (43 samples, 0.27%)</title><rect x="823.3" y="3525" width="3.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="826.29" y="3535.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (63 samples, 0.40%)</title><rect x="273.8" y="261" width="4.7" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="276.78" y="271.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.4" y="1333" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="633.42" y="1343.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.14 (7 samples, 0.04%)</title><rect x="1176.9" y="3445" width="0.6" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="1179.94" y="3455.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.22 (12 samples, 0.08%)</title><rect x="872.5" y="3173" width="0.9" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="875.48" y="3183.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.7" y="1525" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="632.74" y="1535.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="620.6" y="1509" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="623.64" y="1519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1333" width="0.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="623.49" y="1343.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="627.7" y="1253" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="630.65" y="1263.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="1157.8" y="3365" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="1160.83" y="3375.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.295 (9 samples, 0.06%)</title><rect x="997.6" y="3653" width="0.6" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="1000.58" y="3663.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&amp;, llvm::OptimizationRemarkEmitter*) (2 samples, 0.01%)</title><rect x="612.7" y="4277" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="615.73" y="4287.5" ></text>
</g>
<g >
<title>`inline-one-instruction.lisp-inline-one-instruction395^185^TOP-COMPILE-FILE.91 (3 samples, 0.02%)</title><rect x="873.5" y="3573" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="876.52" y="3583.5" ></text>
</g>
<g >
<title>0x114007367 (4 samples, 0.03%)</title><rect x="141.9" y="37" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="144.89" y="47.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (7 samples, 0.04%)</title><rect x="628.0" y="1397" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="630.95" y="1407.5" ></text>
</g>
<g >
<title>`STANDARD-INSTANCE-ACCESS^CLOS^FN^^ (3 samples, 0.02%)</title><rect x="906.4" y="3685" width="0.2" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="909.36" y="3695.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (72 samples, 0.46%)</title><rect x="567.1" y="4597" width="5.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="570.12" y="4607.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="632.4" y="1173" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="635.43" y="1183.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (2 samples, 0.01%)</title><rect x="1087.2" y="3509" width="0.2" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="1090.22" y="3519.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="628.0" y="293" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="630.95" y="303.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="656.5" y="3349" width="0.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="659.54" y="3359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1221" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="630.65" y="1231.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (126 samples, 0.80%)</title><rect x="130.8" y="261" width="9.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="133.84" y="271.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'EVAL-WHEN) T T T))^METHOD^^ (435 samples, 2.75%)</title><rect x="240.9" y="661" width="32.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="243.86" y="671.5" >`C..</text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.33 (12 samples, 0.08%)</title><rect x="872.5" y="3509" width="0.9" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="875.48" y="3519.5" ></text>
</g>
<g >
<title>0x1110a4be6 (3 samples, 0.02%)</title><rect x="628.0" y="1045" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="630.95" y="1055.5" ></text>
</g>
<g >
<title>0x110d5dee7 (5 samples, 0.03%)</title><rect x="1076.7" y="3733" width="0.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1079.69" y="3743.5" ></text>
</g>
<g >
<title>0x1501b4cfb (65 samples, 0.41%)</title><rect x="281.9" y="341" width="4.9" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="284.92" y="351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (21 samples, 0.13%)</title><rect x="630.8" y="885" width="1.6" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="633.79" y="895.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGBuilder::visitGetElementPtr(llvm::User const&amp;) (2 samples, 0.01%)</title><rect x="583.2" y="4277" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="586.24" y="4287.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="632.4" y="2725" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="635.43" y="2735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="623.7" y="853" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="626.70" y="863.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.14 (12 samples, 0.08%)</title><rect x="872.5" y="3349" width="0.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="875.48" y="3359.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="1156.6" y="3013" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="1159.64" y="3023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="501" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="635.43" y="511.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="625.3" y="1125" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="628.27" y="1135.5" ></text>
</g>
<g >
<title>`GC_mark_some (40 samples, 0.25%)</title><rect x="1087.1" y="3573" width="3.0" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="1090.14" y="3583.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.8 (7 samples, 0.04%)</title><rect x="1176.9" y="3541" width="0.6" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="1179.94" y="3551.5" ></text>
</g>
<g >
<title>`GC_allochblk (2 samples, 0.01%)</title><rect x="948.6" y="3541" width="0.2" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="951.61" y="3551.5" ></text>
</g>
<g >
<title>`core::Function_O::functionName() const (8 samples, 0.05%)</title><rect x="1001.7" y="3701" width="0.6" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1004.68" y="3711.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="997.7" y="3093" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1000.65" y="3103.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="620.6" y="2245" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="623.64" y="2255.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="624.0" y="645" width="0.1" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="627.00" y="655.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1797" width="284.1" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="13.00" y="1807.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENCLOSE-INSTRUCTION T T T))^METHOD^^ (32 samples, 0.20%)</title><rect x="1186.7" y="2357" width="2.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="1189.72" y="2367.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (6 samples, 0.04%)</title><rect x="875.0" y="2581" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="878.01" y="2591.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.01%)</title><rect x="728.7" y="3589" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="731.72" y="3599.5" ></text>
</g>
<g >
<title>`GC_allocobj (32 samples, 0.20%)</title><rect x="795.9" y="3557" width="2.4" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="798.90" y="3567.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="640.6" y="3397" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="643.64" y="3407.5" ></text>
</g>
<g >
<title>0x1110a62f6 (4 samples, 0.03%)</title><rect x="632.4" y="2565" width="0.3" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="635.43" y="2575.5" ></text>
</g>
<g >
<title>0x110c59000 (4 samples, 0.03%)</title><rect x="699.4" y="3653" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="702.38" y="3663.5" ></text>
</g>
<g >
<title>`AST-INTERPRET-FORM^CLASP-CLEAVIR^FN^^ (21 samples, 0.13%)</title><rect x="140.3" y="165" width="1.6" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="143.32" y="175.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.02%)</title><rect x="1178.7" y="3685" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1181.65" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="53" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="631.18" y="63.5" ></text>
</g>
<g >
<title>`llvm::InstructionCombiningPass::runOnFunction(llvm::Function&amp;) (4 samples, 0.03%)</title><rect x="825.5" y="2901" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="828.45" y="2911.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="622.1" y="981" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="625.13" y="991.5" ></text>
</g>
<g >
<title>`llvm::LivePhysRegs::removeDefs(llvm::MachineInstr const&amp;) (2 samples, 0.01%)</title><rect x="574.1" y="4373" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="577.14" y="4383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.3" y="1605" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="623.27" y="1615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="619.4" y="165" width="0.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="622.44" y="175.5" ></text>
</g>
<g >
<title>0x1110a62f6 (12 samples, 0.08%)</title><rect x="628.5" y="2837" width="0.9" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="631.48" y="2847.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3,708 samples, 23.45%)</title><rect x="10.0" y="965" width="276.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="13.00" y="975.5" >`CONVERT^CLEAVIR-CST-TO-AST^((T T T))..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="626.2" y="757" width="0.9" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="629.16" y="767.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGBuilder::LowerCallTo(llvm::ImmutableCallSite, llvm::SDValue, bool, llvm::BasicBlock const*) (5 samples, 0.03%)</title><rect x="582.3" y="4309" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="585.27" y="4319.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENCLOSE-INSTRUCTION T T T))^METHOD^^ (28 samples, 0.18%)</title><rect x="1186.9" y="1893" width="2.1" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="1189.87" y="1903.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^192^TOP-COMPILE-FILE.17 (7,680 samples, 48.58%)</title><rect x="616.3" y="4357" width="573.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="619.31" y="4367.5" >`debuginfo.lsp-debuginfo41^192^TOP-COMPILE-FILE.17</text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&amp;, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*) (3 samples, 0.02%)</title><rect x="603.8" y="4325" width="0.3" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="606.84" y="4335.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="647.3" y="3253" width="0.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="650.29" y="3263.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (8 samples, 0.05%)</title><rect x="1024.8" y="3749" width="0.6" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="1027.82" y="3759.5" ></text>
</g>
<g >
<title>0x1140073e7 (55 samples, 0.35%)</title><rect x="169.4" y="309" width="4.1" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="172.43" y="319.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (8 samples, 0.05%)</title><rect x="618.2" y="3829" width="0.6" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="621.25" y="3839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.8" y="149" width="0.1" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="626.77" y="159.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (3,708 samples, 23.45%)</title><rect x="10.0" y="981" width="276.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="13.00" y="991.5" >`convert.lisp-convert288^36^TOP-COMPI..</text>
</g>
<g >
<title>`CODEGEN-TAGBODY^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="1477" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="826.51" y="1487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1669" width="1.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="627.30" y="1679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (27 samples, 0.17%)</title><rect x="630.3" y="2421" width="2.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="633.34" y="2431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.6" y="949" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="633.64" y="959.5" ></text>
</g>
<g >
<title>0x1111fb13b (30 samples, 0.19%)</title><rect x="741.1" y="3653" width="2.2" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="744.11" y="3663.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^492^TOP-COMPILE-FILE.139 (3,708 samples, 23.45%)</title><rect x="10.0" y="1173" width="276.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="13.00" y="1183.5" >`translate.lisp-translate434^492^TOP-..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.4" y="1477" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="633.42" y="1487.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="640.2" y="2805" width="0.1" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="643.19" y="2815.5" ></text>
</g>
<g >
<title>0x11171939a (3 samples, 0.02%)</title><rect x="666.7" y="3429" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="669.69" y="3439.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.8" y="117" width="0.1" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="626.77" y="127.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (4 samples, 0.03%)</title><rect x="766.8" y="3621" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="769.79" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.4" y="1317" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="633.42" y="1327.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="625.8" y="1477" width="0.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="628.79" y="1487.5" ></text>
</g>
<g >
<title>`CALL-WITH-SAVED-DEFERRED-WARNINGS^UIOP/LISP-BUILD^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1893" width="284.1" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="13.00" y="1903.5" >`CALL-WITH-SAVED-DEFERRED-WARNINGS^UIO..</text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (11 samples, 0.07%)</title><rect x="643.5" y="3189" width="0.8" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="646.48" y="3199.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (19 samples, 0.12%)</title><rect x="825.1" y="2997" width="1.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="828.08" y="3007.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.6" y="869" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="623.64" y="879.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="2373" width="284.1" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="13.00" y="2383.5" >`core::DtreeInterpreter_O::entry_point..</text>
</g>
<g >
<title>`CODEGEN^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="2197" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="826.44" y="2207.5" ></text>
</g>
<g >
<title>0x1110a5606 (17 samples, 0.11%)</title><rect x="620.9" y="1557" width="1.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="623.86" y="1567.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (8 samples, 0.05%)</title><rect x="642.5" y="3669" width="0.6" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="645.51" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="625.7" y="2085" width="0.4" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="628.71" y="2095.5" ></text>
</g>
<g >
<title>0x1293e92e7 (46 samples, 0.29%)</title><rect x="775.2" y="3653" width="3.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="778.22" y="3663.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (29 samples, 0.18%)</title><rect x="656.7" y="3349" width="2.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="659.69" y="3359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1269" width="1.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="623.86" y="1279.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.295 (21 samples, 0.13%)</title><rect x="656.7" y="3125" width="1.6" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="659.69" y="3135.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.5" y="2213" width="0.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="623.49" y="2223.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (5 samples, 0.03%)</title><rect x="617.1" y="3717" width="0.4" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="620.13" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (15 samples, 0.09%)</title><rect x="619.1" y="2709" width="1.2" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="622.15" y="2719.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="664.5" y="3413" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="667.53" y="3423.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (3 samples, 0.02%)</title><rect x="662.7" y="3253" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="665.74" y="3263.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (38 samples, 0.24%)</title><rect x="848.2" y="3525" width="2.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="851.22" y="3535.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="272.7" y="421" width="0.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="275.66" y="431.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (2 samples, 0.01%)</title><rect x="899.0" y="3589" width="0.2" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="902.05" y="3599.5" ></text>
</g>
<g >
<title>`llvm::orc::IRTransformLayer&lt;llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;, std::__1::function&lt;std::__1::shared_ptr&lt;llvm::Module&gt; (std::__1::shared_ptr&lt;llvm::Module&gt;)&gt; &gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (9 samples, 0.06%)</title><rect x="620.9" y="485" width="0.6" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="623.86" y="495.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAG::LegalizeTypes() (4 samples, 0.03%)</title><rect x="580.5" y="4341" width="0.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="583.48" y="4351.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="625.3" y="149" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="628.27" y="159.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.218 (2 samples, 0.01%)</title><rect x="616.3" y="3925" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="619.31" y="3935.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.18 (20 samples, 0.13%)</title><rect x="876.3" y="2933" width="1.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="879.28" y="2943.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (7 samples, 0.04%)</title><rect x="1184.4" y="2389" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="1187.40" y="2399.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (83 samples, 0.53%)</title><rect x="15.0" y="645" width="6.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="18.00" y="655.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.94 (31 samples, 0.20%)</title><rect x="1186.8" y="2229" width="2.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="1189.79" y="2239.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T))^METHOD^^ (6 samples, 0.04%)</title><rect x="644.8" y="3589" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="647.82" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="622.1" y="1589" width="1.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="625.13" y="1599.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.30 (9 samples, 0.06%)</title><rect x="997.6" y="3605" width="0.6" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1000.58" y="3615.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (2 samples, 0.01%)</title><rect x="922.9" y="3653" width="0.1" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="925.86" y="3663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (426 samples, 2.69%)</title><rect x="240.9" y="373" width="31.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="243.86" y="383.5" >`C..</text>
</g>
<g >
<title>`GC_mark_local (28 samples, 0.18%)</title><rect x="796.0" y="3461" width="2.1" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="799.04" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="620.3" y="2469" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="623.27" y="2479.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (3 samples, 0.02%)</title><rect x="922.8" y="3717" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="925.79" y="3727.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::smart_ptr&lt;core::T_O&gt;, void*) (2 samples, 0.01%)</title><rect x="1100.7" y="3669" width="0.1" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1103.65" y="3679.5" ></text>
</g>
<g >
<title>`DO-MEMORY-RAMP^CORE^FN^^ (7,677 samples, 48.56%)</title><rect x="616.5" y="3925" width="573.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="619.53" y="3935.5" >`DO-MEMORY-RAMP^CORE^FN^^</text>
</g>
<g >
<title>0x110d5d171 (45 samples, 0.28%)</title><rect x="968.0" y="3717" width="3.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="971.02" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.6" y="1461" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="623.64" y="1471.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (10 samples, 0.06%)</title><rect x="622.4" y="1029" width="0.7" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="625.35" y="1039.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (27 samples, 0.17%)</title><rect x="630.3" y="3061" width="2.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="633.34" y="3071.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (6 samples, 0.04%)</title><rect x="629.4" y="2437" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="632.45" y="2447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.3" y="1765" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="626.33" y="1775.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.6" y="581" width="0.2" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="633.64" y="591.5" ></text>
</g>
<g >
<title>`clbind::Derivable&lt;clang::ASTFrontendAction&gt;::pointerToAlienWithin() (5 samples, 0.03%)</title><rect x="1113.3" y="3733" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1116.34" y="3743.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="659.7" y="3253" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="662.68" y="3263.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.26 (74 samples, 0.47%)</title><rect x="1184.0" y="2517" width="5.6" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="1187.03" y="2527.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getPredicateAt(unsigned int, llvm::Value*, llvm::Constant*, llvm::Instruction*) (2 samples, 0.01%)</title><rect x="598.5" y="4357" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="601.54" y="4367.5" ></text>
</g>
<g >
<title>0x1110a5d56 (2 samples, 0.01%)</title><rect x="625.9" y="133" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="628.94" y="143.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (27 samples, 0.17%)</title><rect x="1186.9" y="1669" width="2.1" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="1189.94" y="1679.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (15 samples, 0.09%)</title><rect x="665.0" y="3477" width="1.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="668.05" y="3487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.3" y="2181" width="0.1" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="623.27" y="2191.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="628.0" y="1093" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="630.95" y="1103.5" ></text>
</g>
<g >
<title>0x1110a4be6 (5 samples, 0.03%)</title><rect x="619.4" y="981" width="0.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="622.44" y="991.5" ></text>
</g>
<g >
<title>`GC_mark_some (30 samples, 0.19%)</title><rect x="949.0" y="3493" width="2.2" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="951.98" y="3503.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="645.8" y="3253" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="648.79" y="3263.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (7 samples, 0.04%)</title><rect x="872.9" y="2965" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="875.85" y="2975.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="624.0" y="1093" width="0.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="627.00" y="1103.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.5" y="1237" width="0.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="623.49" y="1247.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3 samples, 0.02%)</title><rect x="640.3" y="2853" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="643.34" y="2863.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="619.8" y="2293" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="622.82" y="2303.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="655.1" y="3493" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="658.12" y="3503.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="997.7" y="2949" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1000.72" y="2959.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (13 samples, 0.08%)</title><rect x="765.4" y="3637" width="1.0" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="768.44" y="3647.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3 samples, 0.02%)</title><rect x="1188.2" y="85" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="1191.21" y="95.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1285" width="0.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="627.00" y="1295.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (4 samples, 0.03%)</title><rect x="662.7" y="3349" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="665.66" y="3359.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (41 samples, 0.26%)</title><rect x="593.6" y="4485" width="3.1" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="596.62" y="4495.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::T_O&gt; (core::HashTable_O::*)(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (295 samples, 1.87%)</title><rect x="837.7" y="3605" width="22.0" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="840.69" y="3615.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="213" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="632.45" y="223.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="623.7" y="1797" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="626.70" y="1807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (184 samples, 1.16%)</title><rect x="619.1" y="3637" width="13.7" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="622.07" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="626.2" y="2005" width="0.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="629.16" y="2015.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_set_T_spintT_sp (35 samples, 0.22%)</title><rect x="776.0" y="3621" width="2.7" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="779.04" y="3631.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (4 samples, 0.03%)</title><rect x="906.1" y="3669" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="909.07" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE^COMMON-LISP^FN^^ (43 samples, 0.27%)</title><rect x="823.3" y="3477" width="3.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="826.29" y="3487.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.4" y="309" width="0.2" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="632.45" y="319.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.5" y="1573" width="0.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="623.49" y="1583.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="640.3" y="2837" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="643.34" y="2847.5" ></text>
</g>
<g >
<title>0x12570f715 (8 samples, 0.05%)</title><rect x="642.5" y="3685" width="0.6" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="645.51" y="3695.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (24 samples, 0.15%)</title><rect x="656.7" y="3301" width="1.8" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="659.69" y="3311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="1397" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="626.33" y="1407.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="628.2" y="1189" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="631.18" y="1199.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="622.1" y="1189" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="625.13" y="1199.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="644.5" y="3557" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="647.52" y="3567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.9" y="1125" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="628.94" y="1135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (11 samples, 0.07%)</title><rect x="619.4" y="2581" width="0.8" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="622.37" y="2591.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (830 samples, 5.25%)</title><rect x="174.3" y="693" width="61.9" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="177.28" y="703.5" >`conve..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (82 samples, 0.52%)</title><rect x="15.0" y="117" width="6.1" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="18.00" y="127.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="623.7" y="2053" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="626.70" y="2063.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (6 samples, 0.04%)</title><rect x="1173.5" y="3621" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1176.50" y="3631.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="620.6" y="2085" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="623.64" y="2095.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (12 samples, 0.08%)</title><rect x="626.2" y="437" width="0.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="629.16" y="447.5" ></text>
</g>
<g >
<title>0x128fec840 (2 samples, 0.01%)</title><rect x="1168.0" y="3637" width="0.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1170.98" y="3647.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.13 (5 samples, 0.03%)</title><rect x="1156.6" y="3461" width="0.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="1159.64" y="3471.5" ></text>
</g>
<g >
<title>0x1110a4be6 (4 samples, 0.03%)</title><rect x="628.2" y="517" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="631.18" y="527.5" ></text>
</g>
<g >
<title>`llvm::X86AsmPrinter::runOnMachineFunction(llvm::MachineFunction&amp;) (13 samples, 0.08%)</title><rect x="586.0" y="4405" width="1.0" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="589.00" y="4415.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T T))^METHOD^^ (96 samples, 0.61%)</title><rect x="286.9" y="325" width="7.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="289.92" y="335.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="619.4" y="1429" width="0.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="622.44" y="1439.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="1156.6" y="3573" width="0.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="1159.64" y="3583.5" ></text>
</g>
<g >
<title>`gctools::GCRootsInModule::getTaggedIndex(char, unsigned long) (2 samples, 0.01%)</title><rect x="1151.2" y="3717" width="0.1" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="1154.19" y="3727.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="620.5" y="2181" width="0.1" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="623.49" y="2191.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.6" y="1445" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="633.64" y="1455.5" ></text>
</g>
<g >
<title>`VASLIST-LENGTH^CORE^FN^^ (4 samples, 0.03%)</title><rect x="903.7" y="3605" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="906.68" y="3615.5" ></text>
</g>
<g >
<title>0x1110a62f6 (11 samples, 0.07%)</title><rect x="628.6" y="2741" width="0.8" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="631.55" y="2751.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="632.4" y="1237" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="635.43" y="1247.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^192^TOP-COMPILE-FILE.14 (7,680 samples, 48.58%)</title><rect x="616.3" y="4389" width="573.3" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="619.31" y="4399.5" >`debuginfo.lsp-debuginfo41^192^TOP-COMPILE-FILE.14</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((THE-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="632.4" y="2389" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="635.43" y="2399.5" ></text>
</g>
<g >
<title>`llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&amp;) (4 samples, 0.03%)</title><rect x="824.7" y="2885" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="827.71" y="2895.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="629.4" y="1397" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="632.45" y="1407.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (70 samples, 0.44%)</title><rect x="873.9" y="3573" width="5.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="876.90" y="3583.5" ></text>
</g>
<g >
<title>0x1257602e2 (3 samples, 0.02%)</title><rect x="623.1" y="1557" width="0.2" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="626.10" y="1567.5" ></text>
</g>
<g >
<title>0x110c59dfc (3 samples, 0.02%)</title><rect x="966.7" y="3717" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="969.67" y="3727.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (9 samples, 0.06%)</title><rect x="657.6" y="2597" width="0.7" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="660.59" y="2607.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="624.0" y="1253" width="0.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="627.00" y="1263.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.90 (7 samples, 0.04%)</title><rect x="823.3" y="3013" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="826.29" y="3023.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (8 samples, 0.05%)</title><rect x="627.9" y="1749" width="0.6" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="630.88" y="1759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1797" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="622.15" y="1807.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.0" y="2613" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="633.04" y="2623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="622.1" y="1653" width="1.0" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="625.13" y="1663.5" ></text>
</g>
<g >
<title>`llvm::orc::IRTransformLayer&lt;llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;, std::__1::function&lt;std::__1::shared_ptr&lt;llvm::Module&gt; (std::__1::shared_ptr&lt;llvm::Module&gt;)&gt; &gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (7 samples, 0.04%)</title><rect x="635.6" y="3061" width="0.6" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="638.64" y="3071.5" ></text>
</g>
<g >
<title>0x114007367 (60 samples, 0.38%)</title><rect x="236.2" y="309" width="4.5" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="239.24" y="319.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.37 (7,938 samples, 50.21%)</title><rect x="597.1" y="4597" width="592.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="600.05" y="4607.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.37</text>
</g>
<g >
<title>0x1110a4fd6 (3 samples, 0.02%)</title><rect x="627.7" y="1765" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="630.65" y="1775.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="619.5" y="85" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="622.52" y="95.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="1156.6" y="3493" width="0.4" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="1159.64" y="3503.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.7" y="2101" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="632.74" y="2111.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getConstant(llvm::Value*, llvm::BasicBlock*, llvm::Instruction*) (3 samples, 0.02%)</title><rect x="597.7" y="4373" width="0.2" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="600.72" y="4383.5" ></text>
</g>
<g >
<title>`wrapped_core__load_source_T_spboolboolcore__T_sp (3,806 samples, 24.07%)</title><rect x="10.0" y="4469" width="284.1" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="13.00" y="4479.5" >`wrapped_core__load_source_T_spboolboo..</text>
</g>
<g >
<title>`gctools::Header_s::validate() const (97 samples, 0.61%)</title><rect x="717.7" y="3589" width="7.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="720.75" y="3599.5" ></text>
</g>
<g >
<title>`core::General_O::_instanceClass() const (8 samples, 0.05%)</title><rect x="1114.4" y="3733" width="0.6" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="1117.39" y="3743.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (50 samples, 0.32%)</title><rect x="982.9" y="3701" width="3.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="985.95" y="3711.5" ></text>
</g>
<g >
<title>`ONE-POTENTIAL-INLINE^CLEAVIR-PARTIAL-INLINING^FN^^ (843 samples, 5.33%)</title><rect x="959.1" y="3765" width="62.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="962.06" y="3775.5" >`ONE-P..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="661" width="0.1" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="627.00" y="671.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.03%)</title><rect x="141.6" y="53" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="144.59" y="63.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="620.5" y="1621" width="0.1" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="623.49" y="1631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="625.3" y="1541" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="628.27" y="1551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1541" width="1.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="623.86" y="1551.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (5 samples, 0.03%)</title><rect x="725.1" y="3605" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="728.14" y="3615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="229" width="109.6" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="24.20" y="239.5" >`CONVERT^CLEA..</text>
</g>
<g >
<title>`llvm::CloneAndPruneIntoFromInst(llvm::Function*, llvm::Function const*, llvm::Instruction const*, llvm::ValueMap&lt;llvm::Value const*, llvm::WeakTrackingVH, llvm::ValueMapConfig&lt;llvm::Value const*, llvm::sys::SmartMutex&lt;false&gt; &gt; &gt;&amp;, bool, llvm::SmallVectorImpl&lt;llvm::ReturnInst*&gt;&amp;, char const*, llvm::ClonedCodeInfo*) (4 samples, 0.03%)</title><rect x="608.5" y="4373" width="0.3" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="611.55" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (24 samples, 0.15%)</title><rect x="619.1" y="3157" width="1.8" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="622.07" y="3167.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (18 samples, 0.11%)</title><rect x="13.5" y="213" width="1.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="16.51" y="223.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (3,708 samples, 23.45%)</title><rect x="10.0" y="1061" width="276.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" >`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND..</text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (17 samples, 0.11%)</title><rect x="781.6" y="3653" width="1.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="784.64" y="3663.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="1156.8" y="3109" width="0.2" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="1159.78" y="3119.5" ></text>
</g>
<g >
<title>`llvm::ScheduleDAGInstrs::buildSchedGraph(llvm::AAResults*, llvm::RegPressureTracker*, llvm::PressureDiffs*, llvm::LiveIntervals*, bool) (2 samples, 0.01%)</title><rect x="575.3" y="4357" width="0.2" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="578.33" y="4367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="627.7" y="773" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="630.73" y="783.5" ></text>
</g>
<g >
<title>`DO-DISPATCH-MISS^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3461" width="284.1" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="13.00" y="3471.5" >`DO-DISPATCH-MISS^CLOS^FN^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="625.6" y="2357" width="1.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="628.64" y="2367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="624.0" y="837" width="0.1" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="627.00" y="847.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (5 samples, 0.03%)</title><rect x="665.5" y="3381" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="668.50" y="3391.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (9 samples, 0.06%)</title><rect x="750.5" y="3605" width="0.7" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="753.51" y="3615.5" ></text>
</g>
<g >
<title>0x1110a5606 (8 samples, 0.05%)</title><rect x="627.9" y="2085" width="0.6" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="630.88" y="2095.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (3 samples, 0.02%)</title><rect x="859.1" y="3589" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="862.12" y="3599.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^264^TOP-COMPILE-FILE.161 (3,806 samples, 24.07%)</title><rect x="10.0" y="1573" width="284.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (10 samples, 0.06%)</title><rect x="1157.5" y="3525" width="0.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="1160.53" y="3535.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (829 samples, 5.24%)</title><rect x="174.3" y="85" width="61.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="177.28" y="95.5" >`conve..</text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (6 samples, 0.04%)</title><rect x="923.7" y="3701" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="926.68" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="1045" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="622.15" y="1055.5" ></text>
</g>
<g >
<title>`AST-INTERPRETED-CLOSURE^INTERPRET-AST^FN^^.117 (2 samples, 0.01%)</title><rect x="240.7" y="37" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="243.72" y="47.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.26 (43 samples, 0.27%)</title><rect x="823.3" y="3269" width="3.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="826.29" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="627.5" y="1701" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="630.51" y="1711.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="623.1" y="917" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="626.10" y="927.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="2005" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="632.45" y="2015.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="666.7" y="3349" width="0.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="669.69" y="3359.5" ></text>
</g>
<g >
<title>`_pthread_body (12,003 samples, 75.93%)</title><rect x="294.1" y="4789" width="895.9" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="297.08" y="4799.5" >`_pthread_body</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (7 samples, 0.04%)</title><rect x="628.0" y="1509" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="630.95" y="1519.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^METHOD^^.35 (517 samples, 3.27%)</title><rect x="130.8" y="293" width="38.6" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="133.84" y="303.5" >`CO..</text>
</g>
<g >
<title>`gctools::Header_s::validate() const (3 samples, 0.02%)</title><rect x="1167.5" y="3573" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="1170.46" y="3583.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="620.3" y="2389" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="623.27" y="2399.5" ></text>
</g>
<g >
<title>`core::ext__class_unboundp(gctools::smart_ptr&lt;core::ClassHolder_O&gt;) (3 samples, 0.02%)</title><rect x="1080.3" y="3701" width="0.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="1083.28" y="3711.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (188 samples, 1.19%)</title><rect x="295.5" y="4709" width="14.0" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="298.50" y="4719.5" ></text>
</g>
<g >
<title>`llvm::InstructionCombiningPass::runOnFunction(llvm::Function&amp;) (33 samples, 0.21%)</title><rect x="589.5" y="4469" width="2.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="592.51" y="4479.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (17 samples, 0.11%)</title><rect x="140.3" y="117" width="1.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="143.32" y="127.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2293" width="284.1" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="13.00" y="2303.5" >`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="627.1" y="1525" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="630.13" y="1535.5" ></text>
</g>
<g >
<title>`READ-CHAR^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="287.2" y="117" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="290.22" y="127.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (2 samples, 0.01%)</title><rect x="748.6" y="3637" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="751.65" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.4" y="789" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="632.45" y="799.5" ></text>
</g>
<g >
<title>`CALL-WITH-MUFFLED-CONDITIONS^UIOP/UTILITY^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1861" width="284.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="13.00" y="1871.5" >`CALL-WITH-MUFFLED-CONDITIONS^UIOP/UTI..</text>
</g>
<g >
<title>`_pthread_mutex_firstfit_unlock_slow (9 samples, 0.06%)</title><rect x="569.1" y="4421" width="0.7" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="572.14" y="4431.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (572 samples, 3.62%)</title><rect x="130.8" y="421" width="42.7" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="133.84" y="431.5" >`CON..</text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, void (llvmo::TargetMachine_O::*)(gctools::smart_ptr&lt;llvmo::PassManager_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, llvm::TargetMachine::CodeGenFileType, gctools::smart_ptr&lt;llvmo::Module_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (205 samples, 1.30%)</title><rect x="572.6" y="4501" width="15.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="575.57" y="4511.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (6 samples, 0.04%)</title><rect x="1188.0" y="261" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="1190.98" y="271.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T SEQUENCE T))^METHOD^^ (2 samples, 0.01%)</title><rect x="286.9" y="229" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="289.92" y="239.5" ></text>
</g>
<g >
<title>`COMPUTE-INSTRUCTION-OWNERS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (4 samples, 0.03%)</title><rect x="1178.6" y="3797" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="1181.58" y="3807.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="620.5" y="2549" width="0.1" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="623.49" y="2559.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="277" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="635.43" y="287.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="627.1" y="1893" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="630.13" y="1903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (4 samples, 0.03%)</title><rect x="650.4" y="3621" width="0.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="653.42" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="3029" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="635.43" y="3039.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (19 samples, 0.12%)</title><rect x="1187.3" y="1253" width="1.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="1190.31" y="1263.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.56 (6 samples, 0.04%)</title><rect x="823.3" y="2949" width="0.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="826.29" y="2959.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (7 samples, 0.04%)</title><rect x="796.8" y="3413" width="0.5" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="799.79" y="3423.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE*^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="640.2" y="2917" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="643.19" y="2927.5" ></text>
</g>
<g >
<title>0x11171b476 (3 samples, 0.02%)</title><rect x="646.8" y="3285" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="649.76" y="3295.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.5" y="1557" width="0.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="623.49" y="1567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (14 samples, 0.09%)</title><rect x="626.1" y="2101" width="1.0" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="629.09" y="2111.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="645.3" y="3525" width="0.1" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="648.27" y="3535.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::CodeGenAndEmitDAG() (2 samples, 0.01%)</title><rect x="620.9" y="325" width="0.2" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="623.94" y="335.5" ></text>
</g>
<g >
<title>`llvm::MachineFunctionPass::runOnFunction(llvm::Function&amp;) (5 samples, 0.03%)</title><rect x="876.6" y="2597" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="879.58" y="2607.5" ></text>
</g>
<g >
<title>`CLASS-GET^EXT^FN^^ (12 samples, 0.08%)</title><rect x="780.7" y="3653" width="0.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="783.74" y="3663.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp;) (4 samples, 0.03%)</title><rect x="621.5" y="469" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="624.53" y="479.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="625.3" y="1013" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="628.27" y="1023.5" ></text>
</g>
<g >
<title>0x110c5605d (3 samples, 0.02%)</title><rect x="692.2" y="3653" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="695.22" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.4" y="1125" width="0.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="633.42" y="1135.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="624.3" y="469" width="1.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="627.30" y="479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.6" y="1013" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="632.60" y="1023.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (11 samples, 0.07%)</title><rect x="627.7" y="2149" width="0.8" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="630.65" y="2159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="261" width="0.2" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="632.45" y="271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1477" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="623.64" y="1487.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (43 samples, 0.27%)</title><rect x="1118.0" y="3717" width="3.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="1121.05" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.8" y="1301" width="0.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="628.79" y="1311.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.96 (77 samples, 0.49%)</title><rect x="1183.8" y="2677" width="5.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="1186.80" y="2687.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJECT STANDARD-OBJECT))^METHOD^^ (2 samples, 0.01%)</title><rect x="618.9" y="3701" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="621.92" y="3711.5" ></text>
</g>
<g >
<title>`llvm::InstructionCombiningPass::runOnFunction(llvm::Function&amp;) (62 samples, 0.39%)</title><rect x="600.3" y="4405" width="4.6" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="603.26" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="1365" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="633.64" y="1375.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (40 samples, 0.25%)</title><rect x="278.5" y="245" width="3.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="281.48" y="255.5" ></text>
</g>
<g >
<title>`CODEGEN-SPECIAL-OPERATOR^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="1061" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="826.51" y="1071.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (3 samples, 0.02%)</title><rect x="663.9" y="3365" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="666.93" y="3375.5" ></text>
</g>
<g >
<title>`INVALIDATED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2661" width="284.1" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="13.00" y="2671.5" >`INVALIDATED-DISCRIMINATING-FUNCTION^C..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="624.3" y="1429" width="1.0" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="627.30" y="1439.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="633.4" y="3797" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="636.40" y="3807.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef&lt;llvm::Constant*&gt;, bool, llvm::Optional&lt;unsigned int&gt;, llvm::Type*) (3 samples, 0.02%)</title><rect x="610.9" y="4325" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="613.86" y="4335.5" ></text>
</g>
<g >
<title>0x11171939a (14 samples, 0.09%)</title><rect x="663.4" y="3429" width="1.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="666.41" y="3439.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (3 samples, 0.02%)</title><rect x="899.0" y="3605" width="0.3" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="902.05" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="619.4" y="1685" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="622.44" y="1695.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (3,708 samples, 23.45%)</title><rect x="10.0" y="997" width="276.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" >`convert.lisp-convert288^36^TOP-COMPI..</text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.24 (7 samples, 0.04%)</title><rect x="1176.9" y="3253" width="0.6" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="1179.94" y="3263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2629" width="2.1" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="633.34" y="2639.5" ></text>
</g>
<g >
<title>`core::Cache_O::vector_hash_key(gctools::Vec0&lt;gctools::smart_ptr&lt;core::T_O&gt; &gt;&amp;) (3 samples, 0.02%)</title><rect x="834.0" y="3637" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="836.96" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2549" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="633.04" y="2559.5" ></text>
</g>
<g >
<title>`INSTANCE-SET^CORE^FN^^ (9 samples, 0.06%)</title><rect x="902.9" y="3573" width="0.7" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="905.93" y="3583.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T T ONE-SUCCESSOR-MIXIN T))^METHOD^^ (79 samples, 0.50%)</title><rect x="644.8" y="3637" width="5.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="647.82" y="3647.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="644.4" y="3573" width="0.1" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="647.37" y="3583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="69" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="625.13" y="79.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (24 samples, 0.15%)</title><rect x="287.4" y="149" width="1.8" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="290.37" y="159.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1156.6" y="3109" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1159.64" y="3119.5" ></text>
</g>
<g >
<title>0x11171939a (15 samples, 0.09%)</title><rect x="665.0" y="3461" width="1.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="668.05" y="3471.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (19 samples, 0.12%)</title><rect x="825.1" y="2981" width="1.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="828.08" y="2991.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__class_type_info::process_static_type_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int) const (2 samples, 0.01%)</title><rect x="1104.7" y="3685" width="0.1" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1107.69" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.02%)</title><rect x="619.1" y="613" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="622.15" y="623.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (6 samples, 0.04%)</title><rect x="1172.4" y="3621" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1175.38" y="3631.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="639.4" y="3301" width="0.1" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="642.37" y="3311.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="623.7" y="1157" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="626.70" y="1167.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (16 samples, 0.10%)</title><rect x="622.1" y="1717" width="1.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="625.13" y="1727.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1605" width="0.1" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="627.00" y="1615.5" ></text>
</g>
<g >
<title>0x1257b3d23 (2 samples, 0.01%)</title><rect x="616.5" y="3781" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="619.53" y="3791.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (8 samples, 0.05%)</title><rect x="876.4" y="2741" width="0.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="879.43" y="2751.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="1157.7" y="3349" width="0.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1160.68" y="3359.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (829 samples, 5.24%)</title><rect x="174.3" y="373" width="61.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="177.28" y="383.5" >`CONVE..</text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (5 samples, 0.03%)</title><rect x="901.9" y="3605" width="0.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="904.89" y="3615.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (122 samples, 0.77%)</title><rect x="587.9" y="4549" width="9.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="590.95" y="4559.5" ></text>
</g>
<g >
<title>0x129141360 (3 samples, 0.02%)</title><rect x="773.1" y="3653" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="776.13" y="3663.5" ></text>
</g>
<g >
<title>`INLINE-FUNCTION^CLEAVIR-PARTIAL-INLINING^((T T T T))^METHOD^^.127 (3,246 samples, 20.53%)</title><rect x="637.5" y="3749" width="242.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="640.51" y="3759.5" >`INLINE-FUNCTION^CLEAVIR-PARTIAL..</text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (239 samples, 1.51%)</title><rect x="840.2" y="3589" width="17.8" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="843.16" y="3599.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.9 (5 samples, 0.03%)</title><rect x="640.2" y="3221" width="0.4" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="643.19" y="3231.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (98 samples, 0.62%)</title><rect x="1182.2" y="3845" width="7.4" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="1185.24" y="3855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.3" y="1653" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="623.27" y="1663.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.03%)</title><rect x="625.3" y="1077" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="628.27" y="1087.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (7 samples, 0.04%)</title><rect x="752.2" y="3637" width="0.6" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="755.23" y="3647.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="629.7" y="1733" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="632.74" y="1743.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="656.7" y="1957" width="0.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="659.69" y="1967.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.4" y="1573" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="633.42" y="1583.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.24 (6 samples, 0.04%)</title><rect x="1021.2" y="3365" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="1024.24" y="3375.5" ></text>
</g>
<g >
<title>`INVALIDATED-DISPATCH-FUNCTION^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2645" width="284.1" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="13.00" y="2655.5" >`INVALIDATED-DISPATCH-FUNCTION^CLOS^FN^^</text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvmo::PassManager_O, bool (llvm::legacy::PassManager::*)(llvm::Module&amp;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (6 samples, 0.04%)</title><rect x="875.0" y="2597" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="878.01" y="2607.5" ></text>
</g>
<g >
<title>0x1110a4be6 (37 samples, 0.23%)</title><rect x="620.9" y="2261" width="2.7" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="623.86" y="2271.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (3 samples, 0.02%)</title><rect x="1021.5" y="3029" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="1024.46" y="3039.5" ></text>
</g>
<g >
<title>0x114007367 (407 samples, 2.57%)</title><rect x="240.9" y="293" width="30.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="243.86" y="303.5" >0x..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="517" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="622.15" y="527.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm::SimplifyQuery const&amp;, unsigned int) (5 samples, 0.03%)</title><rect x="612.7" y="4341" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="615.65" y="4351.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (19 samples, 0.12%)</title><rect x="1187.3" y="1221" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="1190.31" y="1231.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::X86DAGToDAGISel::Select(llvm::SDNode*) (12 samples, 0.08%)</title><rect x="580.9" y="4325" width="0.9" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="583.93" y="4335.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.01%)</title><rect x="818.6" y="3605" width="0.1" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="821.59" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.3" y="949" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="626.33" y="959.5" ></text>
</g>
<g >
<title>`flockfile (3 samples, 0.02%)</title><rect x="570.1" y="4453" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="573.11" y="4463.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="627.1" y="1637" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="630.13" y="1647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="613" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="628.94" y="623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="1589" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="632.74" y="1599.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (60 samples, 0.38%)</title><rect x="274.0" y="37" width="4.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="277.01" y="47.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENCLOSE-INSTRUCTION T T T))^METHOD^^ (3 samples, 0.02%)</title><rect x="1188.2" y="37" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="1191.21" y="47.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (5 samples, 0.03%)</title><rect x="900.7" y="3589" width="0.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="903.69" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (24 samples, 0.15%)</title><rect x="619.1" y="3477" width="1.8" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="622.07" y="3487.5" ></text>
</g>
<g >
<title>`cc_fdefinition (5 samples, 0.03%)</title><rect x="996.5" y="3717" width="0.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="999.53" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="624.3" y="677" width="1.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="627.30" y="687.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (25 samples, 0.16%)</title><rect x="1186.9" y="1541" width="1.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="1189.94" y="1551.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.14 (3 samples, 0.02%)</title><rect x="874.0" y="3269" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="876.97" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="630.8" y="517" width="1.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="633.79" y="527.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.7 (43 samples, 0.27%)</title><rect x="823.3" y="3445" width="3.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="826.29" y="3455.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (5 samples, 0.03%)</title><rect x="872.5" y="3061" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="875.48" y="3071.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (3 samples, 0.02%)</title><rect x="879.3" y="3621" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="882.34" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="757" width="0.1" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="627.00" y="767.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="619.8" y="2517" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="622.82" y="2527.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="623.7" y="1237" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="626.70" y="1247.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="623.8" y="645" width="0.1" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="626.77" y="655.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef&lt;llvm::Constant*&gt;, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (2 samples, 0.01%)</title><rect x="594.4" y="4405" width="0.1" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="597.36" y="4415.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((ENCLOSE-INSTRUCTION T))^METHOD^^ (50 samples, 0.32%)</title><rect x="638.6" y="3573" width="3.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="641.63" y="3583.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (37 samples, 0.23%)</title><rect x="620.9" y="2165" width="2.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="623.86" y="2175.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.88 (2 samples, 0.01%)</title><rect x="656.7" y="2581" width="0.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="659.69" y="2591.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (435 samples, 2.75%)</title><rect x="240.9" y="501" width="32.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="243.86" y="511.5" >`c..</text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (5 samples, 0.03%)</title><rect x="872.5" y="3029" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="875.48" y="3039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="789" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="625.13" y="799.5" ></text>
</g>
<g >
<title>0x1110a4be6 (3 samples, 0.02%)</title><rect x="619.1" y="2357" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="622.15" y="2367.5" ></text>
</g>
<g >
<title>`CODEGEN-IF^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="805" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="826.51" y="815.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="1101.6" y="3701" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1104.63" y="3711.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvmo::PassManager_O, bool (llvm::legacy::PassManager::*)(llvm::Module&amp;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (18 samples, 0.11%)</title><rect x="825.2" y="2965" width="1.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="828.15" y="2975.5" ></text>
</g>
<g >
<title>`core::lambdaListHandler_createBindings(gctools::smart_ptr&lt;core::Closure_O&gt;, gctools::smart_ptr&lt;core::LambdaListHandler_O&gt;, core::DynamicScopeManager&amp;, gctools::smart_ptr&lt;core::Vaslist&gt;, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*) (6 samples, 0.04%)</title><rect x="952.3" y="3669" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="955.27" y="3679.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (20 samples, 0.13%)</title><rect x="897.9" y="3669" width="1.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="900.86" y="3679.5" ></text>
</g>
<g >
<title>`llvm::legacy::FunctionPassManager::run(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="657.4" y="2437" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="660.44" y="2447.5" ></text>
</g>
<g >
<title>0x125851575 (6 samples, 0.04%)</title><rect x="638.2" y="3621" width="0.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="641.18" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="622.4" y="917" width="0.7" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="625.35" y="927.5" ></text>
</g>
<g >
<title>`core::Cache_O::vector_hash_key(gctools::Vec0&lt;gctools::smart_ptr&lt;core::T_O&gt; &gt;&amp;) (2 samples, 0.01%)</title><rect x="1121.3" y="3717" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1124.26" y="3727.5" ></text>
</g>
<g >
<title>`llvm::orc::IRTransformLayer&lt;llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;, std::__1::function&lt;std::__1::shared_ptr&lt;llvm::Module&gt; (std::__1::shared_ptr&lt;llvm::Module&gt;)&gt; &gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (2 samples, 0.01%)</title><rect x="640.2" y="2757" width="0.1" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="643.19" y="2767.5" ></text>
</g>
<g >
<title>`DO-LITERAL-TABLE^LITERAL^FN^^ (7,680 samples, 48.58%)</title><rect x="616.3" y="4293" width="573.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="619.31" y="4303.5" >`DO-LITERAL-TABLE^LITERAL^FN^^</text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="625.3" y="885" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="628.27" y="895.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (2 samples, 0.01%)</title><rect x="609.0" y="4405" width="0.1" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="611.99" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.4" y="1221" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="633.42" y="1231.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.90 (86 samples, 0.54%)</title><rect x="1183.1" y="3189" width="6.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="1186.13" y="3199.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::DAGCombiner::SimplifyDemandedBits(llvm::SDValue) (2 samples, 0.01%)</title><rect x="579.3" y="4293" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="582.29" y="4303.5" ></text>
</g>
<g >
<title>0x1110a5d56 (5 samples, 0.03%)</title><rect x="619.4" y="309" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="622.44" y="319.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.3" y="1301" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="626.33" y="1311.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="389" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="622.15" y="399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.5" y="2229" width="0.1" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="623.49" y="2239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="853" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="630.95" y="863.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (11 samples, 0.07%)</title><rect x="627.7" y="2117" width="0.8" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="630.65" y="2127.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (16 samples, 0.10%)</title><rect x="622.1" y="1733" width="1.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="625.13" y="1743.5" ></text>
</g>
<g >
<title>`GC_mark_from (27 samples, 0.17%)</title><rect x="1011.3" y="3413" width="2.0" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="1014.31" y="3423.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="651.4" y="3461" width="0.1" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="654.39" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="628.6" y="2565" width="0.7" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="631.55" y="2575.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'EVAL-WHEN) T T T))^METHOD^^ (829 samples, 5.24%)</title><rect x="174.3" y="405" width="61.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="177.28" y="415.5" >`CONVE..</text>
</g>
<g >
<title>`BCLASP-COMPILE^COMPILER^FN^^ (12 samples, 0.08%)</title><rect x="872.5" y="3573" width="0.9" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="875.48" y="3583.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (24 samples, 0.15%)</title><rect x="1184.9" y="2405" width="1.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="1187.92" y="2415.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.8 (5 samples, 0.03%)</title><rect x="640.2" y="3237" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="643.19" y="3247.5" ></text>
</g>
<g >
<title>`cst-to-ast.lisp-cst-to-ast301^3^TOP-COMPILE-FILE.1 (3,708 samples, 23.45%)</title><rect x="10.0" y="1141" width="276.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="13.00" y="1151.5" >`cst-to-ast.lisp-cst-to-ast301^3^TOP-..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="624.1" y="1509" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="627.15" y="1519.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&amp;, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*) (2 samples, 0.01%)</title><rect x="613.8" y="4325" width="0.1" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="616.77" y="4335.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (127 samples, 0.80%)</title><rect x="620.9" y="3333" width="9.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="623.86" y="3343.5" ></text>
</g>
<g >
<title>0x1110a5456 (3 samples, 0.02%)</title><rect x="627.7" y="2085" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="630.65" y="2095.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1021.0" y="3669" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1024.01" y="3679.5" ></text>
</g>
<g >
<title>`read.lisp-read201^11^TOP-COMPILE-FILE.53 (96 samples, 0.61%)</title><rect x="286.9" y="309" width="7.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="289.92" y="319.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (21 samples, 0.13%)</title><rect x="656.7" y="3253" width="1.6" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="659.69" y="3263.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::MachineSchedulerBase::scheduleRegions(llvm::ScheduleDAGInstrs&amp;, bool) (14 samples, 0.09%)</title><rect x="575.3" y="4389" width="1.0" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="578.26" y="4399.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (10 samples, 0.06%)</title><rect x="659.4" y="3381" width="0.7" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="662.38" y="3391.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="632.4" y="885" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="635.43" y="895.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="655.1" y="3477" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="658.12" y="3487.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (17 samples, 0.11%)</title><rect x="620.9" y="661" width="1.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="623.86" y="671.5" ></text>
</g>
<g >
<title>`llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (11 samples, 0.07%)</title><rect x="823.9" y="2933" width="0.8" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="826.89" y="2943.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="627.7" y="1365" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="630.65" y="1375.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^264^TOP-COMPILE-FILE.148 (3,806 samples, 24.07%)</title><rect x="10.0" y="1733" width="284.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="13.00" y="1743.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`asdf.lisp-^10341^TOP-COMPILE-FILE.46 (3,806 samples, 24.07%)</title><rect x="10.0" y="3045" width="284.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="13.00" y="3055.5" >`asdf.lisp-^10341^TOP-COMPILE-FILE.46</text>
</g>
<g >
<title>0x1110a4be6 (4 samples, 0.03%)</title><rect x="632.4" y="3045" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="635.43" y="3055.5" ></text>
</g>
<g >
<title>`CST-&gt;AST^CLASP-CLEAVIR^FN^^ (3,708 samples, 23.45%)</title><rect x="10.0" y="1189" width="276.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="13.00" y="1199.5" >`CST-&gt;AST^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="627.5" y="2037" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="630.51" y="2047.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (36 samples, 0.23%)</title><rect x="823.8" y="3093" width="2.7" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="826.81" y="3103.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.3" y="1125" width="0.2" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="626.33" y="1135.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1176.3" y="3781" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1179.34" y="3791.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (9 samples, 0.06%)</title><rect x="1162.8" y="3589" width="0.6" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="1165.76" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.1" y="309" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="626.10" y="319.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="619.8" y="2421" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="622.82" y="2431.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T))^METHOD^^ (25 samples, 0.16%)</title><rect x="653.2" y="3589" width="1.8" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="656.18" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (15 samples, 0.09%)</title><rect x="619.1" y="2677" width="1.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="622.15" y="2687.5" ></text>
</g>
<g >
<title>`llvm::legacy::FunctionPassManager::run(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="621.4" y="437" width="0.1" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="624.38" y="447.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.34 (2 samples, 0.01%)</title><rect x="656.7" y="1989" width="0.1" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="659.69" y="1999.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (21 samples, 0.13%)</title><rect x="656.7" y="3205" width="1.6" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="659.69" y="3215.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (51 samples, 0.32%)</title><rect x="289.5" y="53" width="3.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="292.53" y="63.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="629.4" y="1349" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="632.45" y="1359.5" ></text>
</g>
<g >
<title>0x1501b4c8b (40 samples, 0.25%)</title><rect x="278.5" y="197" width="3.0" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="281.48" y="207.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (83 samples, 0.53%)</title><rect x="15.0" y="549" width="6.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="18.00" y="559.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="622.1" y="1253" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="625.13" y="1263.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="624.1" y="1637" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="627.15" y="1647.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="666.7" y="3317" width="0.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="669.69" y="3327.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (82 samples, 0.52%)</title><rect x="15.0" y="229" width="6.1" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="18.00" y="239.5" ></text>
</g>
<g >
<title>`macro-functions.lisp-macro-functions194^173^TOP-COMPILE-FILE.40 (96 samples, 0.61%)</title><rect x="286.9" y="757" width="7.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="289.92" y="767.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="640.2" y="2885" width="0.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="643.19" y="2895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="1365" width="0.7" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="625.35" y="1375.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (64 samples, 0.40%)</title><rect x="282.0" y="165" width="4.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="284.99" y="175.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (65 samples, 0.41%)</title><rect x="10.0" y="885" width="4.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="13.00" y="895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1765" width="0.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="623.49" y="1775.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="874.2" y="3429" width="0.1" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="877.19" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="623.6" y="2069" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="626.62" y="2079.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (46 samples, 0.29%)</title><rect x="729.2" y="3637" width="3.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="732.24" y="3647.5" ></text>
</g>
<g >
<title>`__dynamic_cast (27 samples, 0.17%)</title><rect x="812.1" y="3605" width="2.0" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="815.09" y="3615.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (17 samples, 0.11%)</title><rect x="1009.5" y="3589" width="1.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1012.52" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-FROM-AST^COMPILER^FN^^ (8,339 samples, 52.75%)</title><rect x="567.1" y="4661" width="622.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="570.12" y="4671.5" >`COMPILE-FROM-AST^COMPILER^FN^^</text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (75 samples, 0.47%)</title><rect x="1184.0" y="2613" width="5.6" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="1186.95" y="2623.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (16 samples, 0.10%)</title><rect x="635.6" y="3429" width="1.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="638.57" y="3439.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::EarlyCSELegacyCommonPass&lt;true&gt;::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="588.5" y="4469" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="591.54" y="4479.5" ></text>
</g>
<g >
<title>`llvm::BranchProbabilityInfoWrapperPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="610.2" y="4405" width="0.1" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="613.19" y="4415.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.13 (21 samples, 0.13%)</title><rect x="656.7" y="2885" width="1.6" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="659.69" y="2895.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="623.1" y="1445" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="626.10" y="1455.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.08%)</title><rect x="243.4" y="133" width="0.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="246.40" y="143.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (16 samples, 0.10%)</title><rect x="616.9" y="3813" width="1.2" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="619.91" y="3823.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (17 samples, 0.11%)</title><rect x="143.5" y="261" width="1.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="146.46" y="271.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="666.7" y="3397" width="0.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="669.69" y="3407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.5" y="1829" width="0.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="623.49" y="1839.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (23 samples, 0.15%)</title><rect x="630.6" y="1541" width="1.8" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="633.64" y="1551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (82 samples, 0.52%)</title><rect x="15.0" y="325" width="6.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="18.00" y="335.5" ></text>
</g>
<g >
<title>0x113bf5189 (3,806 samples, 24.07%)</title><rect x="10.0" y="2213" width="284.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="13.00" y="2223.5" >0x113bf5189</text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="640.2" y="3269" width="0.4" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="643.19" y="3279.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.6" y="1173" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="623.64" y="1183.5" ></text>
</g>
<g >
<title>`llvm::Module::print(llvm::raw_ostream&amp;, llvm::AssemblyAnnotationWriter*, bool, bool) const (4 samples, 0.03%)</title><rect x="572.1" y="4501" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="575.12" y="4511.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (22 samples, 0.14%)</title><rect x="1187.1" y="1493" width="1.6" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="1190.09" y="1503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2565" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="633.04" y="2575.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (31 samples, 0.20%)</title><rect x="892.0" y="3669" width="2.3" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="895.03" y="3679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.3" y="1029" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="626.33" y="1039.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (52 samples, 0.33%)</title><rect x="977.6" y="3685" width="3.9" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="980.65" y="3695.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous namespace)::Query const&amp;) (3 samples, 0.02%)</title><rect x="607.5" y="4293" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="610.50" y="4303.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (7 samples, 0.04%)</title><rect x="272.8" y="293" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="275.81" y="303.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.13 (6 samples, 0.04%)</title><rect x="1021.2" y="3429" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="1024.24" y="3439.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="878.9" y="3509" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="881.90" y="3519.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (3 samples, 0.02%)</title><rect x="976.2" y="3701" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="979.23" y="3711.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="644.8" y="3557" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="647.82" y="3567.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T))^METHOD^^ (69 samples, 0.44%)</title><rect x="645.3" y="3589" width="5.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="648.27" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="405" width="0.7" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="625.35" y="415.5" ></text>
</g>
<g >
<title>`SEGREGATE-LEXICALS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (4 samples, 0.03%)</title><rect x="1180.2" y="3797" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="1183.22" y="3807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1509" width="0.2" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="630.65" y="1519.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (7 samples, 0.04%)</title><rect x="272.8" y="389" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="275.81" y="399.5" ></text>
</g>
<g >
<title>`llvm::GVN::processInstruction(llvm::Instruction*) (16 samples, 0.10%)</title><rect x="606.5" y="4341" width="1.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="609.53" y="4351.5" ></text>
</g>
<g >
<title>`WRITE^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="1183.3" y="2805" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="1186.28" y="2815.5" ></text>
</g>
<g >
<title>`CODEGEN-BLOCK^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="1685" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="826.44" y="1695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="632.4" y="2293" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="635.43" y="2303.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="624.0" y="1701" width="0.1" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="627.00" y="1711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="623.6" y="2085" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="626.62" y="2095.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="633.2" y="3685" width="0.1" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="636.18" y="3695.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="618.9" y="3717" width="0.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="621.92" y="3727.5" ></text>
</g>
<g >
<title>0x1110a5606 (12 samples, 0.08%)</title><rect x="626.2" y="341" width="0.9" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="629.16" y="351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="2485" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="622.37" y="2495.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (6 samples, 0.04%)</title><rect x="1021.2" y="3285" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="1024.24" y="3295.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="623.7" y="805" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="626.70" y="815.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (2 samples, 0.01%)</title><rect x="917.1" y="3669" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="920.11" y="3679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="1909" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="622.15" y="1919.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (102 samples, 0.65%)</title><rect x="620.9" y="2773" width="7.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="623.86" y="2783.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="610.3" y="4261" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="613.34" y="4271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2677" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="633.04" y="2687.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (15 samples, 0.09%)</title><rect x="1187.5" y="741" width="1.1" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="1190.46" y="751.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (2 samples, 0.01%)</title><rect x="1174.9" y="3541" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1177.92" y="3551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.4" y="1605" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="633.42" y="1615.5" ></text>
</g>
<g >
<title>0x110e000ae (2 samples, 0.01%)</title><rect x="734.5" y="3653" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="737.54" y="3663.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="659.2" y="3189" width="0.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="662.15" y="3199.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="624.3" y="1749" width="1.0" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="627.30" y="1759.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.26 (5 samples, 0.03%)</title><rect x="1156.6" y="3381" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="1159.64" y="3391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (89 samples, 0.56%)</title><rect x="872.5" y="3685" width="6.6" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="875.48" y="3695.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (28 samples, 0.18%)</title><rect x="730.3" y="3605" width="2.1" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="733.29" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1157" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="628.27" y="1167.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (3 samples, 0.02%)</title><rect x="1167.5" y="3621" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="1170.46" y="3631.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (8 samples, 0.05%)</title><rect x="876.4" y="2805" width="0.6" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="879.43" y="2815.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (84 samples, 0.53%)</title><rect x="844.8" y="3541" width="6.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="847.79" y="3551.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="630.4" y="1589" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="633.42" y="1599.5" ></text>
</g>
<g >
<title>0x110d5d987 (2 samples, 0.01%)</title><rect x="728.5" y="3653" width="0.1" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="731.49" y="3663.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="603.9" y="4245" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="606.92" y="4255.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeWrapperPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="594.1" y="4469" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="597.14" y="4479.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="1157.1" y="3525" width="0.3" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="1160.08" y="3535.5" ></text>
</g>
<g >
<title>`cc_protect_alloca (2 samples, 0.01%)</title><rect x="1074.7" y="3717" width="0.1" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="1077.68" y="3727.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (90 samples, 0.57%)</title><rect x="1103.6" y="3717" width="6.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1106.64" y="3727.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (582 samples, 3.68%)</title><rect x="130.8" y="597" width="43.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="133.84" y="607.5" >`CON..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="1605" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="635.43" y="1615.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.22 (2 samples, 0.01%)</title><rect x="656.7" y="2085" width="0.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="659.69" y="2095.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="625.9" y="901" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="628.94" y="911.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3285" width="284.1" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="13.00" y="3295.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>0x1257602e2 (6 samples, 0.04%)</title><rect x="619.4" y="1813" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="622.37" y="1823.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="625.3" y="437" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="628.27" y="447.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (7 samples, 0.04%)</title><rect x="656.9" y="2405" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="659.91" y="2415.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.26 (20 samples, 0.13%)</title><rect x="876.3" y="3013" width="1.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="879.28" y="3023.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (10 samples, 0.06%)</title><rect x="622.4" y="1237" width="0.7" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="625.35" y="1247.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&amp;) (4 samples, 0.03%)</title><rect x="824.3" y="2837" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="827.26" y="2847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1365" width="1.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="627.30" y="1375.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (11 samples, 0.07%)</title><rect x="619.4" y="2629" width="0.8" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="622.37" y="2639.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="645.8" y="3269" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="648.79" y="3279.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.22 (7 samples, 0.04%)</title><rect x="874.9" y="2789" width="0.6" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="877.94" y="2799.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.58 (2 samples, 0.01%)</title><rect x="876.3" y="2661" width="0.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="879.28" y="2671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.4" y="1077" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="633.42" y="1087.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (3 samples, 0.02%)</title><rect x="966.7" y="3701" width="0.2" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="969.67" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="1237" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="630.95" y="1247.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (1,023 samples, 6.47%)</title><rect x="881.5" y="3749" width="76.4" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="884.51" y="3759.5" >`MAP-INS..</text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.33 (7 samples, 0.04%)</title><rect x="1176.9" y="3605" width="0.6" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="1179.94" y="3615.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (17 samples, 0.11%)</title><rect x="1169.5" y="3509" width="1.3" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="1172.55" y="3519.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.58 (2 samples, 0.01%)</title><rect x="656.7" y="2453" width="0.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="659.69" y="2463.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.26 (9 samples, 0.06%)</title><rect x="997.6" y="3333" width="0.6" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="1000.58" y="3343.5" ></text>
</g>
<g >
<title>`core::Vaslist::Vaslist(core::Vaslist const&amp;) (5 samples, 0.03%)</title><rect x="861.1" y="3621" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="864.13" y="3631.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="639.5" y="3221" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="642.52" y="3231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="805" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="631.18" y="815.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.7" y="1317" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="632.74" y="1327.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::Function_O&gt;) (5 samples, 0.03%)</title><rect x="273.0" y="133" width="0.3" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="275.96" y="143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.05%)</title><rect x="627.9" y="1909" width="0.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="630.88" y="1919.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^264^TOP-COMPILE-FILE.151 (3,806 samples, 24.07%)</title><rect x="10.0" y="1685" width="284.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="13.00" y="1695.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (2 samples, 0.01%)</title><rect x="173.6" y="277" width="0.2" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="176.61" y="287.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (20 samples, 0.13%)</title><rect x="630.8" y="469" width="1.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="633.79" y="479.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (14 samples, 0.09%)</title><rect x="945.2" y="3605" width="1.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="948.18" y="3615.5" ></text>
</g>
<g >
<title>`read-common.lisp-read-common192^59^TOP-COMPILE-FILE.37 (96 samples, 0.61%)</title><rect x="286.9" y="517" width="7.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="289.92" y="527.5" ></text>
</g>
<g >
<title>`llvm::FindAvailablePtrLoadStore(llvm::Value*, llvm::Type*, bool, llvm::BasicBlock*, llvm::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::Instruction, false, false, void&gt;, false, false&gt;&amp;, unsigned int, llvm::AAResults*, bool*, unsigned int*) (2 samples, 0.01%)</title><rect x="613.2" y="4325" width="0.1" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="616.17" y="4335.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.57 (2 samples, 0.01%)</title><rect x="876.3" y="2677" width="0.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="879.28" y="2687.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (43 samples, 0.27%)</title><rect x="823.3" y="3221" width="3.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="826.29" y="3231.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (2 samples, 0.01%)</title><rect x="1086.7" y="3653" width="0.1" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="1089.70" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="630.6" y="437" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="633.64" y="447.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (435 samples, 2.75%)</title><rect x="240.9" y="533" width="32.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="243.86" y="543.5" >`c..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="622.1" y="933" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="625.13" y="943.5" ></text>
</g>
<g >
<title>0x1501b4d6b (65 samples, 0.41%)</title><rect x="281.9" y="245" width="4.9" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="284.92" y="255.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (4 samples, 0.03%)</title><rect x="621.8" y="453" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="624.83" y="463.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="626.2" y="1221" width="0.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="629.16" y="1231.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.24 (43 samples, 0.27%)</title><rect x="823.3" y="3141" width="3.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="826.29" y="3151.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="650.4" y="3413" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="653.42" y="3423.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (12 samples, 0.08%)</title><rect x="872.5" y="3109" width="0.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="875.48" y="3119.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (27 samples, 0.17%)</title><rect x="630.3" y="2085" width="2.1" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="633.34" y="2095.5" ></text>
</g>
<g >
<title>`core::core__instance_set(gctools::smart_ptr&lt;core::T_O&gt;, int, gctools::smart_ptr&lt;core::T_O&gt;) (5 samples, 0.03%)</title><rect x="764.6" y="3605" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="767.62" y="3615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="2901" width="284.1" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="13.00" y="2911.5" >`core::FuncallableInstance_O::funcalla..</text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="805" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="630.95" y="815.5" ></text>
</g>
<g >
<title>`EMF-MAYBE-COMPILE^CLOS^FN^^ (5 samples, 0.03%)</title><rect x="640.2" y="3333" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="643.19" y="3343.5" ></text>
</g>
<g >
<title>0x1110a4be6 (4 samples, 0.03%)</title><rect x="625.3" y="1173" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="628.27" y="1183.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (17 samples, 0.11%)</title><rect x="746.9" y="3589" width="1.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="749.86" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (24 samples, 0.15%)</title><rect x="619.1" y="3189" width="1.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="622.07" y="3199.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.02%)</title><rect x="1181.6" y="3733" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1184.64" y="3743.5" ></text>
</g>
<g >
<title>`llvm::GVN::processBlock(llvm::BasicBlock*) (8 samples, 0.05%)</title><rect x="592.6" y="4421" width="0.6" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="595.57" y="4431.5" ></text>
</g>
<g >
<title>`SET-PREDECESSORS^CLEAVIR-IR^FN^^ (6 samples, 0.04%)</title><rect x="1180.7" y="3797" width="0.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="1183.67" y="3807.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="669.2" y="3669" width="0.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="672.23" y="3679.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.28 (21 samples, 0.13%)</title><rect x="656.7" y="2789" width="1.6" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="659.69" y="2799.5" ></text>
</g>
<g >
<title>0x111337578 (3 samples, 0.02%)</title><rect x="1188.2" y="133" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1191.21" y="143.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (6 samples, 0.04%)</title><rect x="629.4" y="2293" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="632.45" y="2303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="3445" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="635.43" y="3455.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (91 samples, 0.58%)</title><rect x="792.8" y="3605" width="6.8" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="795.76" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="624.3" y="149" width="1.0" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="627.30" y="159.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="625.3" y="1237" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="628.27" y="1247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="309" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="622.15" y="319.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.7" y="1445" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="632.74" y="1455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (127 samples, 0.80%)</title><rect x="620.9" y="3349" width="9.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="623.86" y="3359.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.8" y="501" width="0.1" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="626.77" y="511.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (10 samples, 0.06%)</title><rect x="622.4" y="597" width="0.7" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="625.35" y="607.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (6 samples, 0.04%)</title><rect x="629.4" y="2613" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="632.45" y="2623.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="629.6" y="805" width="0.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="632.60" y="815.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="630.4" y="1397" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="633.42" y="1407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.6" y="2117" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="623.64" y="2127.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (6 samples, 0.04%)</title><rect x="173.8" y="309" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="176.84" y="319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="620.3" y="2645" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="623.27" y="2655.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (96 samples, 0.61%)</title><rect x="286.9" y="389" width="7.2" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="289.92" y="399.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.89 (2 samples, 0.01%)</title><rect x="656.7" y="2565" width="0.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="659.69" y="2575.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.8 (6 samples, 0.04%)</title><rect x="1021.2" y="3509" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="1024.24" y="3519.5" ></text>
</g>
<g >
<title>`tlv_get_addr (6 samples, 0.04%)</title><rect x="800.8" y="3605" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="803.82" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (7 samples, 0.04%)</title><rect x="627.1" y="2117" width="0.6" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="630.13" y="2127.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^124^TOP-COMPILE-FILE.325 (12 samples, 0.08%)</title><rect x="243.4" y="181" width="0.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="246.40" y="191.5" ></text>
</g>
<g >
<title>`CALL-WHILE-VISITING-ACTION^ASDF/ACTION^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2261" width="284.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="13.00" y="2271.5" >`CALL-WHILE-VISITING-ACTION^ASDF/ACTIO..</text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.96 (86 samples, 0.54%)</title><rect x="1183.1" y="3141" width="6.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="1186.13" y="3151.5" ></text>
</g>
<g >
<title>0x111521403 (5 samples, 0.03%)</title><rect x="617.1" y="3733" width="0.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="620.13" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="101" width="1.0" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="627.30" y="111.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (10 samples, 0.06%)</title><rect x="622.4" y="229" width="0.7" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="625.35" y="239.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (9 samples, 0.06%)</title><rect x="997.6" y="3285" width="0.6" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="1000.58" y="3295.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.9" y="389" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="628.94" y="399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.1" y="1765" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="627.15" y="1775.5" ></text>
</g>
<g >
<title>0x1110a4be6 (17 samples, 0.11%)</title><rect x="624.0" y="2069" width="1.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="627.00" y="2079.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="1156.8" y="3093" width="0.2" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="1159.78" y="3103.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.12 (7 samples, 0.04%)</title><rect x="874.9" y="2997" width="0.6" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="877.94" y="3007.5" ></text>
</g>
<g >
<title>`void llvm::SmallVectorImpl&lt;llvm::WeakTrackingVH&gt;::emplace_back&lt;llvm::Instruction*&amp;&gt;(llvm::Instruction*&amp;&amp;&amp;) (2 samples, 0.01%)</title><rect x="612.1" y="4325" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="615.13" y="4335.5" ></text>
</g>
<g >
<title>0x1110a5606 (21 samples, 0.13%)</title><rect x="630.8" y="917" width="1.6" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="633.79" y="927.5" ></text>
</g>
<g >
<title>0x11171939a (4 samples, 0.03%)</title><rect x="640.6" y="3429" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="643.64" y="3439.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.22 (7 samples, 0.04%)</title><rect x="1176.9" y="3413" width="0.6" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="1179.94" y="3423.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJECT STANDARD-OBJECT))^METHOD^^ (2 samples, 0.01%)</title><rect x="616.5" y="3765" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="619.53" y="3775.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.4" y="1429" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="633.42" y="1439.5" ></text>
</g>
<g >
<title>0x11bde6a98 (82 samples, 0.52%)</title><rect x="15.0" y="277" width="6.1" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="18.00" y="287.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (3 samples, 0.02%)</title><rect x="1188.2" y="53" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="1191.21" y="63.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="2389" width="0.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="622.15" y="2399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="628.0" y="1221" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="630.95" y="1231.5" ></text>
</g>
<g >
<title>0x1258cfcab (2 samples, 0.01%)</title><rect x="173.6" y="85" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="176.61" y="95.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (18 samples, 0.11%)</title><rect x="13.5" y="133" width="1.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="16.51" y="143.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="622.1" y="645" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="625.13" y="655.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (12 samples, 0.08%)</title><rect x="626.2" y="661" width="0.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="629.16" y="671.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="651.7" y="3557" width="0.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="654.69" y="3567.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="639.8" y="3429" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="642.82" y="3439.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (205 samples, 1.30%)</title><rect x="572.6" y="4549" width="15.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="575.57" y="4559.5" ></text>
</g>
<g >
<title>0x129141133 (3 samples, 0.02%)</title><rect x="768.7" y="3653" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="771.65" y="3663.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="667.8" y="3621" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="670.81" y="3631.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.64 (6 samples, 0.04%)</title><rect x="823.3" y="2853" width="0.4" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="826.29" y="2863.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.28 (7 samples, 0.04%)</title><rect x="874.9" y="2885" width="0.6" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="877.94" y="2895.5" ></text>
</g>
<g >
<title>`gctools::Vec0_impl&lt;gctools::GCVector&lt;gctools::smart_ptr&lt;core::Symbol_O&gt;, gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;gctools::smart_ptr&lt;core::Symbol_O&gt; &gt; &gt; &gt; &gt;::operator[](unsigned long) (4 samples, 0.03%)</title><rect x="1152.7" y="3733" width="0.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="1155.68" y="3743.5" ></text>
</g>
<g >
<title>`CODEGEN-IF^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="1045" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="826.51" y="1055.5" ></text>
</g>
<g >
<title>`CODEGEN-SPECIAL-OPERATOR^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="1493" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="826.51" y="1503.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (236 samples, 1.49%)</title><rect x="840.4" y="3573" width="17.6" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="843.38" y="3583.5" ></text>
</g>
<g >
<title>`asdf.lisp-^1570^TOP-COMPILE-FILE.39 (3,806 samples, 24.07%)</title><rect x="10.0" y="1845" width="284.1" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="13.00" y="1855.5" >`asdf.lisp-^1570^TOP-COMPILE-FILE.39</text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (2 samples, 0.01%)</title><rect x="914.3" y="3717" width="0.1" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="917.28" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="1077" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="626.10" y="1087.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (6 samples, 0.04%)</title><rect x="643.9" y="2949" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="646.85" y="2959.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (4 samples, 0.03%)</title><rect x="641.0" y="3381" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="644.02" y="3391.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="625.3" y="533" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="628.27" y="543.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.6" y="1461" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="633.64" y="1471.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="624.3" y="453" width="1.0" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="627.30" y="463.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (3 samples, 0.02%)</title><rect x="1157.1" y="3493" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="1160.08" y="3503.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METHOD^^.74 (10 samples, 0.06%)</title><rect x="12.8" y="213" width="0.7" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="15.76" y="223.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (20 samples, 0.13%)</title><rect x="630.8" y="373" width="1.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="633.79" y="383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="628.0" y="629" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="630.95" y="639.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="625.3" y="837" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="628.27" y="847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="117" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="628.94" y="127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="917" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="630.65" y="927.5" ></text>
</g>
<g >
<title>`GC_mark_some (31 samples, 0.20%)</title><rect x="1011.2" y="3477" width="2.3" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="1014.16" y="3487.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (64 samples, 0.40%)</title><rect x="852.2" y="3397" width="4.8" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="855.17" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="619.8" y="2277" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="622.82" y="2287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="197" width="1.0" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="627.30" y="207.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T))^METHOD^^ (6 samples, 0.04%)</title><rect x="638.2" y="3589" width="0.4" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="641.18" y="3599.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.01%)</title><rect x="898.5" y="3605" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="901.53" y="3615.5" ></text>
</g>
<g >
<title>0x111336918 (2 samples, 0.01%)</title><rect x="1187.8" y="597" width="0.1" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1190.76" y="607.5" ></text>
</g>
<g >
<title>0x111521403 (3 samples, 0.02%)</title><rect x="662.1" y="3301" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="665.06" y="3311.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (2 samples, 0.01%)</title><rect x="240.7" y="101" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="243.72" y="111.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="623.7" y="1893" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="626.70" y="1903.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.0" y="2245" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="633.04" y="2255.5" ></text>
</g>
<g >
<title>0x1110a5606 (5 samples, 0.03%)</title><rect x="619.4" y="405" width="0.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="622.44" y="415.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CodeGenPrepare::runOnFunction(llvm::Function&amp;) (5 samples, 0.03%)</title><rect x="573.1" y="4421" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="576.09" y="4431.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="619.1" y="1109" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="622.15" y="1119.5" ></text>
</g>
<g >
<title>`__dynamic_cast (10 samples, 0.06%)</title><rect x="571.3" y="4469" width="0.7" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="574.30" y="4479.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.96 (15 samples, 0.09%)</title><rect x="1187.5" y="821" width="1.1" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="1190.46" y="831.5" ></text>
</g>
<g >
<title>`iterativelySimplifyCFG(llvm::Function&amp;, llvm::TargetTransformInfo const&amp;, llvm::SimplifyCFGOptions const&amp;) (6 samples, 0.04%)</title><rect x="608.0" y="4389" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="611.02" y="4399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="1829" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="622.37" y="1839.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LOCALLY) T T T))^METHOD^^ (36 samples, 0.23%)</title><rect x="10.0" y="309" width="2.7" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>0x123ae3cf3 (2 samples, 0.01%)</title><rect x="650.3" y="3397" width="0.1" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="653.27" y="3407.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.22 (16 samples, 0.10%)</title><rect x="635.6" y="3269" width="1.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="638.57" y="3279.5" ></text>
</g>
<g >
<title>`llvm::X86Subtarget::X86Subtarget(llvm::Triple const&amp;, llvm::StringRef, llvm::StringRef, llvm::X86TargetMachine const&amp;, unsigned int) (2 samples, 0.01%)</title><rect x="572.9" y="4373" width="0.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="575.94" y="4383.5" ></text>
</g>
<g >
<title>`INSTRUCTIONS-OF-TYPE^CLEAVIR-IR^FN^^ (12 samples, 0.08%)</title><rect x="634.2" y="3781" width="0.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="637.22" y="3791.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.6" y="933" width="0.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="632.60" y="943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2293" width="0.2" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="633.04" y="2303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="965" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="625.13" y="975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.8" y="1653" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="628.79" y="1663.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (6 samples, 0.04%)</title><rect x="649.3" y="3493" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="652.30" y="3503.5" ></text>
</g>
<g >
<title>`llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (8 samples, 0.05%)</title><rect x="656.8" y="2469" width="0.6" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="659.84" y="2479.5" ></text>
</g>
<g >
<title>`combineInstructionsOverFunction(llvm::Function&amp;, llvm::InstCombineWorklist&amp;, llvm::AAResults*, llvm::AssumptionCache&amp;, llvm::TargetLibraryInfo&amp;, llvm::DominatorTree&amp;, llvm::OptimizationRemarkEmitter&amp;, bool, llvm::LoopInfo*) (2 samples, 0.01%)</title><rect x="877.2" y="2629" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="880.18" y="2639.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2101" width="284.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="13.00" y="2111.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1180.9" y="3749" width="0.1" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="1183.89" y="3759.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (9 samples, 0.06%)</title><rect x="825.2" y="2917" width="0.7" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="828.23" y="2927.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="625.3" y="469" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="628.27" y="479.5" ></text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="634.4" y="3733" width="0.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="637.37" y="3743.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (12 samples, 0.08%)</title><rect x="13.5" y="117" width="0.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="16.51" y="127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (7 samples, 0.04%)</title><rect x="628.0" y="1605" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="630.95" y="1615.5" ></text>
</g>
<g >
<title>`COMPILE-TO-MODULE^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="876.3" y="2725" width="0.1" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="879.28" y="2735.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METHOD^^.74 (55 samples, 0.35%)</title><rect x="169.4" y="293" width="4.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="172.43" y="303.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.12 (16 samples, 0.10%)</title><rect x="635.6" y="3477" width="1.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="638.57" y="3487.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAG::Combine(llvm::CombineLevel, llvm::AAResults*, llvm::CodeGenOpt::Level) (17 samples, 0.11%)</title><rect x="578.8" y="4341" width="1.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="581.84" y="4351.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="646.4" y="3285" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="649.39" y="3295.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="632.4" y="405" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="635.43" y="415.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="623.3" y="1493" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="626.33" y="1503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="213" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="622.15" y="223.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (8 samples, 0.05%)</title><rect x="876.4" y="2757" width="0.6" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="879.43" y="2767.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="1717" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="632.74" y="1727.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="1156.6" y="3237" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="1159.64" y="3247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="165" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="630.95" y="175.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="625.3" y="1477" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="628.27" y="1487.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (830 samples, 5.25%)</title><rect x="174.3" y="549" width="61.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="177.28" y="559.5" >`conve..</text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^.14 (96 samples, 0.61%)</title><rect x="286.9" y="485" width="7.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="289.92" y="495.5" ></text>
</g>
<g >
<title>0x1110a5456 (2 samples, 0.01%)</title><rect x="632.4" y="1669" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="635.43" y="1679.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getPointerDependencyFrom(llvm::MemoryLocation const&amp;, bool, llvm::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::Instruction, false, false, void&gt;, false, false&gt;, llvm::BasicBlock*, llvm::Instruction*, unsigned int*) (3 samples, 0.02%)</title><rect x="599.1" y="4373" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="602.07" y="4383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="628.0" y="421" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="630.95" y="431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (64 samples, 0.40%)</title><rect x="620.9" y="2437" width="4.7" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="623.86" y="2447.5" ></text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (12 samples, 0.08%)</title><rect x="897.9" y="3653" width="0.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="900.93" y="3663.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.92 (77 samples, 0.49%)</title><rect x="1183.8" y="2709" width="5.8" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="1186.80" y="2719.5" ></text>
</g>
<g >
<title>`optimizeGlobalsInModule(llvm::Module&amp;, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo*, llvm::function_ref&lt;llvm::DominatorTree&amp; (llvm::Function&amp;)&gt;) (4 samples, 0.03%)</title><rect x="609.3" y="4421" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="612.29" y="4431.5" ></text>
</g>
<g >
<title>0x110d5dde4 (2 samples, 0.01%)</title><rect x="891.4" y="3733" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="894.44" y="3743.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="656.7" y="1877" width="0.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="659.69" y="1887.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (2 samples, 0.01%)</title><rect x="620.6" y="1893" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="623.64" y="1903.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (2 samples, 0.01%)</title><rect x="1183.8" y="2613" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="1186.80" y="2623.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceSet(unsigned long, gctools::smart_ptr&lt;core::T_O&gt;) (24 samples, 0.15%)</title><rect x="776.1" y="3605" width="1.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="779.12" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="421" width="0.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="625.13" y="431.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3 samples, 0.02%)</title><rect x="874.0" y="3509" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="876.97" y="3519.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="389" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="626.10" y="399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="1269" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="626.33" y="1279.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="648.4" y="3365" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="651.40" y="3375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="853" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="625.13" y="863.5" ></text>
</g>
<g >
<title>`CONSP^COMMON-LISP^FN^^ (13 samples, 0.08%)</title><rect x="1080.5" y="3733" width="1.0" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="1083.50" y="3743.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="619.1" y="805" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="622.15" y="815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="1285" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="631.18" y="1295.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="624.0" y="1573" width="0.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="627.00" y="1583.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (3 samples, 0.02%)</title><rect x="625.3" y="133" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="628.27" y="143.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.196 (7,680 samples, 48.58%)</title><rect x="616.3" y="4261" width="573.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="619.31" y="4271.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.196</text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (54 samples, 0.34%)</title><rect x="982.6" y="3717" width="4.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="985.65" y="3727.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (79 samples, 0.50%)</title><rect x="1183.7" y="2789" width="5.9" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="1186.66" y="2799.5" ></text>
</g>
<g >
<title>0x1257602e2 (3 samples, 0.02%)</title><rect x="625.3" y="181" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="628.27" y="191.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^METHOD^^.35 (36 samples, 0.23%)</title><rect x="10.0" y="389" width="2.7" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="874.2" y="3445" width="0.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="877.19" y="3455.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (6 samples, 0.04%)</title><rect x="653.7" y="3461" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="656.70" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="1493" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="632.74" y="1503.5" ></text>
</g>
<g >
<title>0x110c63e86 (2 samples, 0.01%)</title><rect x="1065.3" y="3733" width="0.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1068.27" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="630.8" y="165" width="1.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="633.79" y="175.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1589" width="0.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="627.00" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.8" y="1237" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="628.79" y="1247.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1893" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="635.43" y="1903.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (2 samples, 0.01%)</title><rect x="944.4" y="3621" width="0.1" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="947.36" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="874.9" y="3093" width="0.6" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="877.94" y="3103.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.24 (4 samples, 0.03%)</title><rect x="823.4" y="1653" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="826.44" y="1663.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="620.6" y="1493" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="623.64" y="1503.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="625.3" y="1941" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="628.27" y="1951.5" ></text>
</g>
<g >
<title>`LINK-INLINE-REMOVE-BUILTINS^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="1021.5" y="3157" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="1024.46" y="3167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1493" width="0.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="623.49" y="1503.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.0" y="2805" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="633.04" y="2815.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (158 samples, 1.00%)</title><rect x="655.3" y="3525" width="11.8" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="658.27" y="3535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="2069" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="632.74" y="2079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="149" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="631.18" y="159.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LiveDebugValues::runOnMachineFunction(llvm::MachineFunction&amp;) (2 samples, 0.01%)</title><rect x="574.3" y="4405" width="0.1" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="577.29" y="4415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.3" y="277" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="626.33" y="287.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="874.0" y="2965" width="0.2" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="876.97" y="2975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1749" width="1.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="623.86" y="1759.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.3" y="1797" width="0.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="623.27" y="1807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (12 samples, 0.08%)</title><rect x="626.2" y="261" width="0.9" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="629.16" y="271.5" ></text>
</g>
<g >
<title>`combineInstructionsOverFunction(llvm::Function&amp;, llvm::InstCombineWorklist&amp;, llvm::AAResults*, llvm::AssumptionCache&amp;, llvm::TargetLibraryInfo&amp;, llvm::DominatorTree&amp;, llvm::OptimizationRemarkEmitter&amp;, bool, llvm::LoopInfo*) (54 samples, 0.34%)</title><rect x="610.6" y="4389" width="4.0" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="613.56" y="4399.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (10 samples, 0.06%)</title><rect x="656.8" y="2613" width="0.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="659.84" y="2623.5" ></text>
</g>
<g >
<title>`CST-READ^ECLECTOR.CONCRETE-SYNTAX-TREE^FN^^ (98 samples, 0.62%)</title><rect x="286.8" y="1189" width="7.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="289.77" y="1199.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.03%)</title><rect x="666.7" y="3493" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="669.69" y="3503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (20 samples, 0.13%)</title><rect x="630.8" y="629" width="1.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="633.79" y="639.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceSet(unsigned long, gctools::smart_ptr&lt;core::T_O&gt;) (60 samples, 0.38%)</title><rect x="760.1" y="3605" width="4.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="763.14" y="3615.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.101 (4 samples, 0.03%)</title><rect x="823.4" y="1957" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="826.44" y="1967.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (2 samples, 0.01%)</title><rect x="609.0" y="4373" width="0.1" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="611.99" y="4383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.7" y="1621" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="632.74" y="1631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="628.2" y="581" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="631.18" y="591.5" ></text>
</g>
<g >
<title>0x110d5de8a (2 samples, 0.01%)</title><rect x="1075.1" y="3733" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1078.13" y="3743.5" ></text>
</g>
<g >
<title>`PERFORM-WITH-RESTARTS^ASDF/ACTION^((:AROUND) (T T))^METHOD^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2501" width="284.1" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="13.00" y="2511.5" >`PERFORM-WITH-RESTARTS^ASDF/ACTION^((:..</text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (19 samples, 0.12%)</title><rect x="825.1" y="3045" width="1.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="828.08" y="3055.5" ></text>
</g>
<g >
<title>`core::cl__eval(gctools::smart_ptr&lt;core::T_O&gt;) (9 samples, 0.06%)</title><rect x="293.3" y="37" width="0.7" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="296.34" y="47.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="1285" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="626.33" y="1295.5" ></text>
</g>
<g >
<title>0x1501b4cfb (71 samples, 0.45%)</title><rect x="281.5" y="693" width="5.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="284.47" y="703.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="12.5" y="101" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="15.46" y="111.5" ></text>
</g>
<g >
<title>`llvm::raw_ostream::write(char const*, unsigned long) (2 samples, 0.01%)</title><rect x="572.7" y="4341" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="575.72" y="4351.5" ></text>
</g>
<g >
<title>`core::lisp_true() (2 samples, 0.01%)</title><rect x="1103.5" y="3717" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1106.49" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="628.2" y="565" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="631.18" y="575.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (11 samples, 0.07%)</title><rect x="823.9" y="2901" width="0.8" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="826.89" y="2911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (26 samples, 0.16%)</title><rect x="630.4" y="2053" width="2.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="633.42" y="2063.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.32 (17 samples, 0.11%)</title><rect x="620.9" y="1045" width="1.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="623.86" y="1055.5" ></text>
</g>
<g >
<title>0x123ae11b3 (3 samples, 0.02%)</title><rect x="878.3" y="3365" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="881.30" y="3375.5" ></text>
</g>
<g >
<title>`tlv_get_addr (4 samples, 0.03%)</title><rect x="1076.4" y="3685" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="1079.40" y="3695.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (55 samples, 0.35%)</title><rect x="169.4" y="197" width="4.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="172.43" y="207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1093" width="0.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="623.49" y="1103.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.0" y="2597" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="633.04" y="2607.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.6" y="1637" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="623.64" y="1647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (6 samples, 0.04%)</title><rect x="619.4" y="2085" width="0.4" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="622.37" y="2095.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (1,469 samples, 9.29%)</title><rect x="21.2" y="133" width="109.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="24.20" y="143.5" >`inline-prep...</text>
</g>
<g >
<title>`GC_clear_stack_inner (2 samples, 0.01%)</title><rect x="1086.7" y="3573" width="0.1" height="15.0" fill="rgb(213,68,68)" rx="2" ry="2" />
<text  x="1089.70" y="3583.5" ></text>
</g>
<g >
<title>`read.lisp-read201^11^TOP-COMPILE-FILE.55 (96 samples, 0.61%)</title><rect x="286.9" y="293" width="7.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="289.92" y="303.5" ></text>
</g>
<g >
<title>`COMPILE-LAMBDA-FUNCTION^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="656.7" y="2277" width="0.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="659.69" y="2287.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.84 (90 samples, 0.57%)</title><rect x="1182.8" y="3701" width="6.8" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="1185.83" y="3711.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (30 samples, 0.19%)</title><rect x="949.0" y="3509" width="2.2" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="951.98" y="3519.5" ></text>
</g>
<g >
<title>0x1140073e7 (83 samples, 0.53%)</title><rect x="15.0" y="485" width="6.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="18.00" y="495.5" ></text>
</g>
<g >
<title>`CODEGEN-PROGN^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="1557" width="0.3" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="826.44" y="1567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="2021" width="0.4" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="622.37" y="2031.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="632.4" y="2997" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="635.43" y="3007.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (10 samples, 0.06%)</title><rect x="798.4" y="3557" width="0.8" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="801.43" y="3567.5" ></text>
</g>
<g >
<title>`read-common.lisp-read-common192^53^TOP-COMPILE-FILE.26 (96 samples, 0.61%)</title><rect x="286.9" y="565" width="7.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="289.92" y="575.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (18 samples, 0.11%)</title><rect x="13.5" y="565" width="1.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="16.51" y="575.5" ></text>
</g>
<g >
<title>`read-common.lisp-read-common192^59^TOP-COMPILE-FILE.37 (92 samples, 0.58%)</title><rect x="287.1" y="197" width="6.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="290.14" y="207.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (4 samples, 0.03%)</title><rect x="900.7" y="3541" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="903.69" y="3551.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (64 samples, 0.40%)</title><rect x="620.9" y="2373" width="4.7" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="623.86" y="2383.5" ></text>
</g>
<g >
<title>0x110c59171 (84 samples, 0.53%)</title><rect x="707.1" y="3653" width="6.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="710.07" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="2421" width="0.1" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="623.49" y="2431.5" ></text>
</g>
<g >
<title>`STRUCT-TYPE-GET^LLVM-SYS^FN^^ (23 samples, 0.15%)</title><rect x="1184.9" y="2277" width="1.7" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="1187.92" y="2287.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.9" y="933" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="628.94" y="943.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (17 samples, 0.11%)</title><rect x="620.9" y="2005" width="1.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="623.86" y="2015.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^396^TOP-COMPILE-FILE.128 (90 samples, 0.57%)</title><rect x="1182.8" y="3765" width="6.8" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="1185.83" y="3775.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.31 (8,339 samples, 52.75%)</title><rect x="567.1" y="4645" width="622.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="570.12" y="4655.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.31</text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::smart_ptr&lt;core::T_O&gt;, void*) (5 samples, 0.03%)</title><rect x="921.3" y="3685" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="924.29" y="3695.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.40 (6 samples, 0.04%)</title><rect x="823.3" y="2293" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="826.29" y="2303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="677" width="0.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="622.44" y="687.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="659.2" y="3285" width="0.1" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="662.15" y="3295.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.5" y="1077" width="0.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="623.49" y="1087.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisPass(void const*) (2 samples, 0.01%)</title><rect x="609.0" y="4389" width="0.1" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="611.99" y="4399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="628.0" y="613" width="0.2" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="630.95" y="623.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="628.6" y="2485" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="631.62" y="2495.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (2,738 samples, 17.32%)</title><rect x="668.0" y="3685" width="204.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="670.96" y="3695.5" >`REINITIALIZE-DATA^CLEAVIR..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="1733" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="635.43" y="1743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="627.1" y="1557" width="0.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="630.13" y="1567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (829 samples, 5.24%)</title><rect x="174.3" y="293" width="61.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="177.28" y="303.5" >`CONVE..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1045" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="628.27" y="1055.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (8 samples, 0.05%)</title><rect x="636.2" y="3157" width="0.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="639.16" y="3167.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (11 samples, 0.07%)</title><rect x="628.6" y="2693" width="0.8" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="631.55" y="2703.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (86 samples, 0.54%)</title><rect x="1183.1" y="3045" width="6.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="1186.13" y="3055.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="625.9" y="709" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="628.94" y="719.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="1180.5" y="3797" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="1183.52" y="3807.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="628.2" y="613" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="631.18" y="623.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (7 samples, 0.04%)</title><rect x="627.1" y="2245" width="0.6" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="630.13" y="2255.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (55 samples, 0.35%)</title><rect x="169.4" y="213" width="4.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="172.43" y="223.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (8 samples, 0.05%)</title><rect x="636.2" y="3141" width="0.6" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="639.16" y="3151.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="625.9" y="1477" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="628.94" y="1487.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (275 samples, 1.74%)</title><rect x="934.8" y="3733" width="20.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="937.80" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2517" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="633.04" y="2527.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="627.7" y="2037" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="630.65" y="2047.5" ></text>
</g>
<g >
<title>0x111521403 (2 samples, 0.01%)</title><rect x="639.5" y="3237" width="0.2" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="642.52" y="3247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1093" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="628.27" y="1103.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="1178.1" y="3797" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="1181.06" y="3807.5" ></text>
</g>
<g >
<title>`inline-one-instruction.lisp-inline-one-instruction395^185^TOP-COMPILE-FILE.89 (5 samples, 0.03%)</title><rect x="651.6" y="3621" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="654.61" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="1285" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="632.45" y="1295.5" ></text>
</g>
<g >
<title>0x1501b4cfb (5 samples, 0.03%)</title><rect x="173.9" y="229" width="0.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="176.91" y="239.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="648.6" y="3333" width="0.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="651.55" y="3343.5" ></text>
</g>
<g >
<title>0x1293e90ae (2 samples, 0.01%)</title><rect x="774.0" y="3653" width="0.1" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="776.95" y="3663.5" ></text>
</g>
<g >
<title>0x123ae11b3 (2 samples, 0.01%)</title><rect x="648.4" y="3349" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="651.40" y="3359.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^.50 (12 samples, 0.08%)</title><rect x="13.5" y="69" width="0.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="16.51" y="79.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (3 samples, 0.02%)</title><rect x="1182.3" y="3781" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="1185.31" y="3791.5" ></text>
</g>
<g >
<title>0x1110a4be6 (3 samples, 0.02%)</title><rect x="623.7" y="869" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="626.70" y="879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="1701" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="632.45" y="1711.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="638.2" y="3541" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="641.18" y="3551.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="646.5" y="3269" width="0.1" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="649.46" y="3279.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE*^COMPILER^FN^^ (20 samples, 0.13%)</title><rect x="876.3" y="2853" width="1.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="879.28" y="2863.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="658.0" y="2453" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="660.96" y="2463.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3429" width="284.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="13.00" y="3439.5" >`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^..</text>
</g>
<g >
<title>0x110cd62a2 (18 samples, 0.11%)</title><rect x="13.5" y="341" width="1.4" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="16.51" y="351.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="624.0" y="1045" width="0.1" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="627.00" y="1055.5" ></text>
</g>
<g >
<title>`CHILDREN^CLEAVIR-AST^((TYPEQ-AST))^METHOD^^.614 (3 samples, 0.02%)</title><rect x="618.3" y="3797" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="621.32" y="3807.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (7 samples, 0.04%)</title><rect x="635.6" y="3141" width="0.6" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="638.64" y="3151.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="623.1" y="821" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="626.10" y="831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="627.5" y="1861" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="630.51" y="1871.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="632.4" y="3397" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="635.43" y="3407.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2229" width="284.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="13.00" y="2239.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (18 samples, 0.11%)</title><rect x="13.5" y="421" width="1.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="16.51" y="431.5" ></text>
</g>
<g >
<title>`CATCH-FUNCTION^CORE^FN^^ (5 samples, 0.03%)</title><rect x="273.0" y="149" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="275.96" y="159.5" ></text>
</g>
<g >
<title>`llvm::BlockFrequencyInfo::BlockFrequencyInfo(llvm::Function const&amp;, llvm::BranchProbabilityInfo const&amp;, llvm::LoopInfo const&amp;) (2 samples, 0.01%)</title><rect x="573.2" y="4405" width="0.1" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="576.17" y="4415.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (3 samples, 0.02%)</title><rect x="877.9" y="3285" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="880.93" y="3295.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap&lt;llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo&lt;llvm::Constant*&gt;, llvm::detail::DenseMapPair&lt;llvm::Constant*, llvm::Constant*&gt; &gt;&amp;) (3 samples, 0.02%)</title><rect x="590.1" y="4405" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="593.11" y="4415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="622.1" y="1141" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="625.13" y="1151.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::T_O&gt;::notnilp() const (2 samples, 0.01%)</title><rect x="1017.3" y="3717" width="0.1" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1020.28" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="632.4" y="2693" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="635.43" y="2703.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (4 samples, 0.03%)</title><rect x="932.0" y="3685" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="934.97" y="3695.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1381" width="284.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="13.00" y="1391.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvmo::PassManager_O, bool (llvm::legacy::PassManager::*)(llvm::Module&amp;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (9 samples, 0.06%)</title><rect x="657.6" y="2501" width="0.7" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="660.59" y="2511.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (4 samples, 0.03%)</title><rect x="141.9" y="245" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="144.89" y="255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1509" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="626.70" y="1519.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (36 samples, 0.23%)</title><rect x="1008.1" y="3605" width="2.7" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1011.10" y="3615.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE.9 (3,806 samples, 24.07%)</title><rect x="10.0" y="1509" width="284.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="13.00" y="1519.5" >`compile-file.lsp-compile-file52^33^TO..</text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (3 samples, 0.02%)</title><rect x="1165.7" y="3605" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1168.67" y="3615.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="659.2" y="3205" width="0.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="662.15" y="3215.5" ></text>
</g>
<g >
<title>`std::__1::enable_if&lt;!(std::is_array&lt;llvm::X86Subtarget&gt;::value), std::__1::unique_ptr&lt;llvm::X86Subtarget, std::__1::default_delete&lt;llvm::X86Subtarget&gt; &gt; &gt;::type llvm::make_unique&lt;llvm::X86Subtarget, llvm::Triple const&amp;, llvm::StringRef&amp;, llvm::StringRef&amp;, llvm::X86TargetMachine const&amp;, unsigned int&amp;&gt;(llvm::Triple const&amp;&amp;&amp;, llvm::StringRef&amp;&amp;&amp;, llvm::StringRef&amp;&amp;&amp;, llvm::X86TargetMachine const&amp;&amp;&amp;, unsigned int&amp;&amp;&amp;) (2 samples, 0.01%)</title><rect x="572.9" y="4389" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="575.94" y="4399.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.02%)</title><rect x="619.1" y="2261" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="622.15" y="2271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="618.9" y="3829" width="0.2" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="621.92" y="3839.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.198 (7,680 samples, 48.58%)</title><rect x="616.3" y="4229" width="573.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="619.31" y="4239.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.198</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="627.5" y="1989" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="630.51" y="1999.5" ></text>
</g>
<g >
<title>`PERFORM-OUTCOME^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3813" width="284.1" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="13.00" y="3823.5" >`PERFORM-OUTCOME^CLOS^FN^^</text>
</g>
<g >
<title>`COMPILE^COMMON-LISP^FN^^ (11 samples, 0.07%)</title><rect x="643.5" y="3445" width="0.8" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="646.48" y="3455.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="624.3" y="1253" width="1.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="627.30" y="1263.5" ></text>
</g>
<g >
<title>`INVALIDATED-DISPATCH-FUNCTION^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3877" width="284.1" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="13.00" y="3887.5" >`INVALIDATED-DISPATCH-FUNCTION^CLOS^FN^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="1157" width="0.4" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="622.44" y="1167.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (38 samples, 0.24%)</title><rect x="638.6" y="3509" width="2.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="641.63" y="3519.5" ></text>
</g>
<g >
<title>0x123710f48 (4 samples, 0.03%)</title><rect x="169.4" y="101" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="172.43" y="111.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (75 samples, 0.47%)</title><rect x="1184.0" y="2645" width="5.6" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="1186.95" y="2655.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (4 samples, 0.03%)</title><rect x="625.3" y="901" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="628.27" y="911.5" ></text>
</g>
<g >
<title>0x111521403 (2 samples, 0.01%)</title><rect x="666.7" y="3333" width="0.1" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="669.69" y="3343.5" ></text>
</g>
<g >
<title>0x110cd62a2 (1,469 samples, 9.29%)</title><rect x="21.2" y="645" width="109.6" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="24.20" y="655.5" >0x110cd62a2</text>
</g>
<g >
<title>0x123ae11b3 (2 samples, 0.01%)</title><rect x="1157.8" y="3333" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1160.83" y="3343.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (8 samples, 0.05%)</title><rect x="660.3" y="3349" width="0.6" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="663.35" y="3359.5" ></text>
</g>
<g >
<title>`MAPL^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="1397" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="826.51" y="1407.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="645.1" y="3429" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="648.12" y="3439.5" ></text>
</g>
<g >
<title>0x1110a5606 (15 samples, 0.09%)</title><rect x="619.1" y="2757" width="1.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="622.15" y="2767.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.8" y="229" width="0.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="626.77" y="239.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (2 samples, 0.01%)</title><rect x="1175.2" y="3493" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1178.22" y="3503.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.4" y="485" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="632.45" y="495.5" ></text>
</g>
<g >
<title>`gctools::startupGarbageCollectorAndSystem(int (*)(int, char**, bool&amp;, int&amp;, int&amp;), int, char**, unsigned long, bool, int, int) (3,806 samples, 24.07%)</title><rect x="10.0" y="4773" width="284.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="13.00" y="4783.5" >`gctools::startupGarbageCollectorAndSy..</text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (65 samples, 0.41%)</title><rect x="281.9" y="261" width="4.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="284.92" y="271.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.5" y="1381" width="0.1" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="623.49" y="1391.5" ></text>
</g>
<g >
<title>0x1501b4d6b (40 samples, 0.25%)</title><rect x="278.5" y="485" width="3.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="281.48" y="495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="293" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="622.44" y="303.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (10 samples, 0.06%)</title><rect x="656.8" y="2533" width="0.8" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="659.84" y="2543.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (5 samples, 0.03%)</title><rect x="714.5" y="3621" width="0.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="717.54" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1301" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="622.15" y="1311.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHOD^^ (12 samples, 0.08%)</title><rect x="13.5" y="101" width="0.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="16.51" y="111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (3 samples, 0.02%)</title><rect x="625.3" y="213" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="628.27" y="223.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^192^TOP-COMPILE-FILE.19 (6 samples, 0.04%)</title><rect x="823.3" y="2357" width="0.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="826.29" y="2367.5" ></text>
</g>
<g >
<title>`CODEGEN-IF^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="565" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="826.51" y="575.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD^^ (4 samples, 0.03%)</title><rect x="647.0" y="3269" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="649.99" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (18 samples, 0.11%)</title><rect x="627.1" y="2357" width="1.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="630.13" y="2367.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (24 samples, 0.15%)</title><rect x="746.8" y="3621" width="1.8" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="749.78" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="626.2" y="1653" width="0.9" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="629.16" y="1663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="3269" width="284.1" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="13.00" y="3279.5" >`core::FuncallableInstance_O::funcalla..</text>
</g>
<g >
<title>0x110d5de92 (3 samples, 0.02%)</title><rect x="1075.3" y="3733" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1078.28" y="3743.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (119 samples, 0.75%)</title><rect x="923.4" y="3717" width="8.9" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="926.38" y="3727.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (426 samples, 2.69%)</title><rect x="240.9" y="421" width="31.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="243.86" y="431.5" >`C..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="619.4" y="1605" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="622.44" y="1615.5" ></text>
</g>
<g >
<title>0x110cd62a2 (62 samples, 0.39%)</title><rect x="236.2" y="629" width="4.7" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="239.24" y="639.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.222 (2 samples, 0.01%)</title><rect x="616.3" y="3893" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="619.31" y="3903.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1509" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="622.15" y="1519.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core::Cons_O&gt; &gt; &gt;::resize(unsigned long, core::Cons_O const&amp;) (93 samples, 0.59%)</title><rect x="851.1" y="3541" width="6.9" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="854.06" y="3551.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (7,681 samples, 48.59%)</title><rect x="616.2" y="4517" width="573.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="619.23" y="4527.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.5" y="1653" width="0.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="626.47" y="1663.5" ></text>
</g>
<g >
<title>`CATCH-FUNCTION^CORE^FN^^ (63 samples, 0.40%)</title><rect x="273.8" y="485" width="4.7" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="276.78" y="495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="1221" width="0.7" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="625.35" y="1231.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="14.9" y="485" width="0.1" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="17.85" y="495.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (18 samples, 0.11%)</title><rect x="627.1" y="2325" width="1.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="630.13" y="2335.5" ></text>
</g>
<g >
<title>0x1110a5606 (10 samples, 0.06%)</title><rect x="622.4" y="1061" width="0.7" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="625.35" y="1071.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (12 samples, 0.08%)</title><rect x="626.2" y="309" width="0.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="629.16" y="319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="597" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="631.18" y="607.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="620.5" y="1893" width="0.1" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="623.49" y="1903.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (4 samples, 0.03%)</title><rect x="966.0" y="3653" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="969.00" y="3663.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (226 samples, 1.43%)</title><rect x="937.6" y="3717" width="16.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="940.56" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (12 samples, 0.08%)</title><rect x="626.2" y="69" width="0.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="629.16" y="79.5" ></text>
</g>
<g >
<title>`inline-function.lisp-inline-function396^44^TOP-COMPILE-FILE.133 (3,246 samples, 20.53%)</title><rect x="637.5" y="3701" width="242.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="640.51" y="3711.5" >`inline-function.lisp-inline-fun..</text>
</g>
<g >
<title>`GC_generic_malloc_many (58 samples, 0.37%)</title><rect x="795.0" y="3589" width="4.3" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="798.00" y="3599.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (121 samples, 0.77%)</title><rect x="655.6" y="3493" width="9.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="658.64" y="3503.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (10 samples, 0.06%)</title><rect x="12.8" y="261" width="0.7" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="15.76" y="271.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (12 samples, 0.08%)</title><rect x="626.2" y="389" width="0.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="629.16" y="399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="626.2" y="2037" width="0.9" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="629.16" y="2047.5" ></text>
</g>
<g >
<title>`llvm::ValueHandleBase::AddToUseList() (2 samples, 0.01%)</title><rect x="612.1" y="4309" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="615.13" y="4319.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (2 samples, 0.01%)</title><rect x="869.3" y="3653" width="0.2" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="872.34" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1077" width="0.2" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="623.64" y="1087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="613" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="633.64" y="623.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (4 samples, 0.03%)</title><rect x="1183.3" y="2869" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="1186.28" y="2879.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.22 (17 samples, 0.11%)</title><rect x="620.9" y="693" width="1.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="623.86" y="703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="2645" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="623.64" y="2655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.4" y="1509" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="633.42" y="1519.5" ></text>
</g>
<g >
<title>0x123ae3cf3 (2 samples, 0.01%)</title><rect x="659.2" y="3221" width="0.1" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="662.15" y="3231.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="623.1" y="1301" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="626.10" y="1311.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (31 samples, 0.20%)</title><rect x="892.0" y="3701" width="2.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="895.03" y="3711.5" ></text>
</g>
<g >
<title>`llvm::SROA::runImpl(llvm::Function&amp;, llvm::DominatorTree&amp;, llvm::AssumptionCache&amp;) (3 samples, 0.02%)</title><rect x="607.8" y="4389" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="610.80" y="4399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.6" y="853" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="623.64" y="863.5" ></text>
</g>
<g >
<title>0x1110a62f6 (13 samples, 0.08%)</title><rect x="626.2" y="917" width="0.9" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="629.16" y="927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="997" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="635.43" y="1007.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::T_O&gt; (core::HashTable_O::*)(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="618.6" y="3765" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="621.62" y="3775.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.9 (6 samples, 0.04%)</title><rect x="1021.2" y="3493" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="1024.24" y="3503.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="629" width="0.7" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="625.35" y="639.5" ></text>
</g>
<g >
<title>`AST-INTERPRETED-CLOSURE^INTERPRET-AST^FN^^.117 (65 samples, 0.41%)</title><rect x="281.9" y="357" width="4.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="284.92" y="367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.8" y="389" width="0.1" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="626.77" y="399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="628.2" y="197" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="631.18" y="207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2261" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="633.04" y="2271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (17 samples, 0.11%)</title><rect x="635.5" y="3765" width="1.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="638.49" y="3775.5" ></text>
</g>
<g >
<title>`core::funcall_va_list_6(gctools::smart_ptr&lt;core::Function_O&gt;, gctools::smart_ptr&lt;core::Vaslist&gt;) (2 samples, 0.01%)</title><rect x="618.9" y="3733" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="621.92" y="3743.5" ></text>
</g>
<g >
<title>0x11171939a (7 samples, 0.04%)</title><rect x="659.5" y="3333" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="662.45" y="3343.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (29 samples, 0.18%)</title><rect x="846.1" y="3525" width="2.1" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="849.05" y="3535.5" ></text>
</g>
<g >
<title>0x11171939a (3 samples, 0.02%)</title><rect x="650.8" y="3525" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="653.79" y="3535.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="626.2" y="1045" width="0.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="629.16" y="1055.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (4 samples, 0.03%)</title><rect x="905.3" y="3637" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="908.32" y="3647.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (96 samples, 0.61%)</title><rect x="286.9" y="469" width="7.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="289.92" y="479.5" ></text>
</g>
<g >
<title>`mp::start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, void*) (8,345 samples, 52.79%)</title><rect x="567.1" y="4725" width="622.9" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="570.12" y="4735.5" >`mp::start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, void*)</text>
</g>
<g >
<title>`GENERATE-LLVM-FUNCTION-FROM-CODE^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="656.7" y="2261" width="0.1" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="659.69" y="2271.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="645.3" y="3509" width="0.1" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="648.27" y="3519.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.6" y="1157" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="623.64" y="1167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.8" y="261" width="0.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="626.77" y="271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (22 samples, 0.14%)</title><rect x="624.0" y="2245" width="1.6" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="627.00" y="2255.5" ></text>
</g>
<g >
<title>`COMPILE^COMMON-LISP^FN^^ (7 samples, 0.04%)</title><rect x="874.9" y="3109" width="0.6" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="877.94" y="3119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="773" width="0.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="622.44" y="783.5" ></text>
</g>
<g >
<title>0x1501b4cfb (7 samples, 0.04%)</title><rect x="272.8" y="341" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="275.81" y="351.5" ></text>
</g>
<g >
<title>0x110f822ed (2 samples, 0.01%)</title><rect x="740.2" y="3653" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="743.21" y="3663.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="901.9" y="3573" width="0.1" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="904.89" y="3583.5" ></text>
</g>
<g >
<title>0x1501b4cfb (7 samples, 0.04%)</title><rect x="173.8" y="421" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="176.76" y="431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="2357" width="0.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="623.49" y="2367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.4" y="277" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="632.45" y="287.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (3 samples, 0.02%)</title><rect x="905.4" y="3621" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="908.39" y="3631.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (4 samples, 0.03%)</title><rect x="589.7" y="4437" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="592.74" y="4447.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENCLOSE-INSTRUCTION T T T))^METHOD^^ (80 samples, 0.51%)</title><rect x="1183.6" y="2821" width="6.0" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="1186.58" y="2831.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (203 samples, 1.28%)</title><rect x="572.7" y="4469" width="15.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="575.72" y="4479.5" ></text>
</g>
<g >
<title>0x1258cfc3b (63 samples, 0.40%)</title><rect x="273.8" y="757" width="4.7" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="276.78" y="767.5" ></text>
</g>
<g >
<title>0x1110a5606 (14 samples, 0.09%)</title><rect x="626.1" y="2165" width="1.0" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="629.09" y="2175.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1829" width="284.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="13.00" y="1839.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.11 (43 samples, 0.27%)</title><rect x="823.3" y="3381" width="3.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="826.29" y="3391.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.68 (6 samples, 0.04%)</title><rect x="823.3" y="2821" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="826.29" y="2831.5" ></text>
</g>
<g >
<title>0x1140073e7 (125 samples, 0.79%)</title><rect x="130.9" y="37" width="9.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="133.92" y="47.5" ></text>
</g>
<g >
<title>0x123ae11b3 (4 samples, 0.03%)</title><rect x="659.6" y="3285" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="662.60" y="3295.5" ></text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (37 samples, 0.23%)</title><rect x="1168.6" y="3637" width="2.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1171.58" y="3647.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (8 samples, 0.05%)</title><rect x="621.5" y="533" width="0.6" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="624.53" y="543.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (32 samples, 0.20%)</title><rect x="10.0" y="69" width="2.4" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="13.00" y="79.5" ></text>
</g>
<g >
<title>0x1293e909d (2 samples, 0.01%)</title><rect x="773.8" y="3653" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="776.80" y="3663.5" ></text>
</g>
<g >
<title>`core::cl__write(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.02%)</title><rect x="1183.3" y="2773" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1186.28" y="2783.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.24 (6 samples, 0.04%)</title><rect x="1021.2" y="3221" width="0.5" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="1024.24" y="3231.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="624.0" y="1413" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="627.00" y="1423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="1365" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="628.94" y="1375.5" ></text>
</g>
<g >
<title>`INSTANCE-SET^CORE^FN^^ (3 samples, 0.02%)</title><rect x="1045.2" y="3717" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="1048.20" y="3727.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="618.9" y="3797" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="621.92" y="3807.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^714^TOP-COMPILE-FILE.494 (192 samples, 1.21%)</title><rect x="619.1" y="3733" width="14.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="622.07" y="3743.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (61 samples, 0.39%)</title><rect x="1141.0" y="3477" width="4.5" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="1143.96" y="3487.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="621.5" y="453" width="0.3" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="624.53" y="463.5" ></text>
</g>
<g >
<title>`llvm::createGenericSchedLive(llvm::MachineSchedContext*) (2 samples, 0.01%)</title><rect x="576.3" y="4373" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="579.30" y="4383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.6" y="1029" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="623.64" y="1039.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (435 samples, 2.75%)</title><rect x="240.9" y="709" width="32.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="243.86" y="719.5" >`C..</text>
</g>
<g >
<title>0x1110a6386 (2 samples, 0.01%)</title><rect x="623.5" y="1685" width="0.1" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="626.47" y="1695.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.24 (14 samples, 0.09%)</title><rect x="1187.5" y="677" width="1.1" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="1190.54" y="687.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="622.1" y="533" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="625.13" y="543.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="650.4" y="3349" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="653.42" y="3359.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.32 (6 samples, 0.04%)</title><rect x="1021.2" y="3589" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="1024.24" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (27 samples, 0.17%)</title><rect x="630.3" y="3045" width="2.1" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="633.34" y="3055.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.9" y="661" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="628.94" y="671.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.22 (20 samples, 0.13%)</title><rect x="876.3" y="2901" width="1.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="879.28" y="2911.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (829 samples, 5.24%)</title><rect x="174.3" y="149" width="61.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="177.28" y="159.5" >`CONVE..</text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (205 samples, 1.30%)</title><rect x="572.6" y="4517" width="15.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="575.57" y="4527.5" ></text>
</g>
<g >
<title>`llvm::ReassociatePass::run(llvm::Function&amp;, llvm::AnalysisManager&lt;llvm::Function&gt;&amp;) (2 samples, 0.01%)</title><rect x="598.8" y="4389" width="0.1" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="601.77" y="4399.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (4 samples, 0.03%)</title><rect x="636.5" y="3045" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="639.46" y="3055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1909" width="0.2" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="623.64" y="1919.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="646.5" y="3205" width="0.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="649.46" y="3215.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (77 samples, 0.49%)</title><rect x="873.4" y="3637" width="5.7" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="876.37" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.02%)</title><rect x="619.1" y="1397" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="622.15" y="1407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.5" y="1941" width="0.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="623.49" y="1951.5" ></text>
</g>
<g >
<title>`wrapped_StructType_O__get_LLVMContext_spcore__T_spbool (23 samples, 0.15%)</title><rect x="1184.9" y="2261" width="1.7" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1187.92" y="2271.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="623.1" y="725" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="626.10" y="735.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="623.7" y="1925" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="626.70" y="1935.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (21 samples, 0.13%)</title><rect x="643.2" y="3669" width="1.5" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="646.18" y="3679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="933" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="635.43" y="943.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (12 samples, 0.08%)</title><rect x="643.5" y="3621" width="0.9" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="646.48" y="3631.5" ></text>
</g>
<g >
<title>`llvm::ScheduleDAGSDNodes::EmitSchedule(llvm::MachineInstrBundleIterator&lt;llvm::MachineInstr, false&gt;&amp;) (6 samples, 0.04%)</title><rect x="578.4" y="4341" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="581.39" y="4351.5" ></text>
</g>
<g >
<title>`LINK-INLINE-REMOVE-BUILTINS^COMPILER^FN^^ (8 samples, 0.05%)</title><rect x="621.5" y="613" width="0.6" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="624.53" y="623.5" ></text>
</g>
<g >
<title>0x1110a5606 (13 samples, 0.08%)</title><rect x="626.2" y="1797" width="0.9" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="629.16" y="1807.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_set_T_spintT_sp (6 samples, 0.04%)</title><rect x="1166.3" y="3605" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1169.26" y="3615.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (2 samples, 0.01%)</title><rect x="951.1" y="3477" width="0.1" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="954.07" y="3487.5" ></text>
</g>
<g >
<title>0x10fbcf2b0 (2 samples, 0.01%)</title><rect x="647.4" y="3285" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="650.43" y="3295.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (3 samples, 0.02%)</title><rect x="1014.6" y="3669" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1017.59" y="3679.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (32 samples, 0.20%)</title><rect x="987.1" y="3685" width="2.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="990.05" y="3695.5" ></text>
</g>
<g >
<title>`llvm::JumpThreadingPass::runImpl(llvm::Function&amp;, llvm::TargetLibraryInfo*, llvm::LazyValueInfo*, llvm::AAResults*, bool, std::__1::unique_ptr&lt;llvm::BlockFrequencyInfo, std::__1::default_delete&lt;llvm::BlockFrequencyInfo&gt; &gt;, std::__1::unique_ptr&lt;llvm::BranchProbabilityInfo, std::__1::default_delete&lt;llvm::BranchProbabilityInfo&gt; &gt;) (6 samples, 0.04%)</title><rect x="598.3" y="4389" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="601.32" y="4399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (27 samples, 0.17%)</title><rect x="630.3" y="2677" width="2.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="633.34" y="2687.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="821" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="635.43" y="831.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (28 samples, 0.18%)</title><rect x="1108.2" y="3685" width="2.1" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="1111.19" y="3695.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (60 samples, 0.38%)</title><rect x="236.2" y="149" width="4.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="239.24" y="159.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::SelectAllBasicBlocks(llvm::Function const&amp;) (4 samples, 0.03%)</title><rect x="824.3" y="2805" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="827.26" y="2815.5" ></text>
</g>
<g >
<title>0x110c5956b (2 samples, 0.01%)</title><rect x="714.2" y="3653" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="717.24" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="619.4" y="805" width="0.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="622.44" y="815.5" ></text>
</g>
<g >
<title>0x123ae3cf3 (4 samples, 0.03%)</title><rect x="662.7" y="3317" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="665.66" y="3327.5" ></text>
</g>
<g >
<title>`void llvm::AAResults::addAAResult&lt;llvm::ScopedNoAliasAAResult&gt;(llvm::ScopedNoAliasAAResult&amp;) (2 samples, 0.01%)</title><rect x="599.8" y="4389" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="602.81" y="4399.5" ></text>
</g>
<g >
<title>`cst-to-ast.lisp-cst-to-ast301^3^TOP-COMPILE-FILE.1 (10 samples, 0.06%)</title><rect x="12.8" y="421" width="0.7" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="15.76" y="431.5" ></text>
</g>
<g >
<title>`AST-INTERPRETED-CLOSURE^INTERPRET-AST^FN^^.117 (63 samples, 0.40%)</title><rect x="273.8" y="357" width="4.7" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="276.78" y="367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (12 samples, 0.08%)</title><rect x="626.2" y="85" width="0.9" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="629.16" y="95.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (126 samples, 0.80%)</title><rect x="130.8" y="245" width="9.4" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="133.84" y="255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2773" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="633.04" y="2783.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (435 samples, 2.75%)</title><rect x="240.9" y="549" width="32.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="243.86" y="559.5" >`C..</text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.217 (2 samples, 0.01%)</title><rect x="616.3" y="3941" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="619.31" y="3951.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="632.4" y="2213" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="635.43" y="2223.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (6 samples, 0.04%)</title><rect x="649.3" y="3477" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="652.30" y="3487.5" ></text>
</g>
<g >
<title>0x1110a5606 (28 samples, 0.18%)</title><rect x="630.3" y="3429" width="2.1" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="633.34" y="3439.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (2 samples, 0.01%)</title><rect x="1140.8" y="3493" width="0.2" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="1143.81" y="3503.5" ></text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (15 samples, 0.09%)</title><rect x="1079.4" y="3733" width="1.1" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="1082.38" y="3743.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="1022.1" y="3637" width="0.1" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="1025.06" y="3647.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CalcLiveRangeUtilBase&lt;(anonymous namespace)::CalcLiveRangeUtilSet, std::__1::__tree_const_iterator&lt;llvm::LiveRange::Segment, std::__1::__tree_node&lt;llvm::LiveRange::Segment, void*&gt;*, long&gt;, std::__1::set&lt;llvm::LiveRange::Segment, std::__1::less&lt;llvm::LiveRange::Segment&gt;, std::__1::allocator&lt;llvm::LiveRange::Segment&gt; &gt; &gt;::createDeadDef(llvm::SlotIndex, llvm::BumpPtrAllocatorImpl&lt;llvm::MallocAllocator, 4096ul, 4096ul&gt;*, llvm::VNInfo*) (2 samples, 0.01%)</title><rect x="583.6" y="4325" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="586.62" y="4335.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="625.3" y="1829" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="628.27" y="1839.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.6" y="2293" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="623.64" y="2303.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="1176.9" y="3205" width="0.6" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="1179.94" y="3215.5" ></text>
</g>
<g >
<title>0x1111fb29d (3 samples, 0.02%)</title><rect x="1167.5" y="3637" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1170.46" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.8" y="613" width="0.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="626.77" y="623.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (2 samples, 0.01%)</title><rect x="740.2" y="3637" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="743.21" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (20 samples, 0.13%)</title><rect x="630.8" y="197" width="1.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="633.79" y="207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1685" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="635.43" y="1695.5" ></text>
</g>
<g >
<title>`CODEGEN-SPECIAL-OPERATOR^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="661" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="826.51" y="671.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (60 samples, 0.38%)</title><rect x="236.2" y="53" width="4.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="239.24" y="63.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="623.3" y="1189" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="626.33" y="1199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="2101" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="623.64" y="2111.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (4 samples, 0.03%)</title><rect x="1177.2" y="3061" width="0.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="1180.16" y="3071.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.10 (7 samples, 0.04%)</title><rect x="874.9" y="3029" width="0.6" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="877.94" y="3039.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (17 samples, 0.11%)</title><rect x="855.7" y="3333" width="1.3" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="858.68" y="3343.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="620.5" y="2389" width="0.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="623.49" y="2399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.3" y="2021" width="0.1" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="623.27" y="2031.5" ></text>
</g>
<g >
<title>0x129083171 (3,246 samples, 20.53%)</title><rect x="637.5" y="3765" width="242.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="640.51" y="3775.5" >0x129083171</text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (17 samples, 0.11%)</title><rect x="143.5" y="133" width="1.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="146.46" y="143.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (4 samples, 0.03%)</title><rect x="643.5" y="3013" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="646.48" y="3023.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (102 samples, 0.65%)</title><rect x="620.9" y="2677" width="7.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="623.86" y="2687.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (23 samples, 0.15%)</title><rect x="1184.9" y="2149" width="1.7" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="1187.92" y="2159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (24 samples, 0.15%)</title><rect x="630.6" y="1605" width="1.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="633.57" y="1615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (27 samples, 0.17%)</title><rect x="630.3" y="2789" width="2.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="633.34" y="2799.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (17 samples, 0.11%)</title><rect x="143.5" y="101" width="1.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="146.46" y="111.5" ></text>
</g>
<g >
<title>0x11171939a (14 samples, 0.09%)</title><rect x="653.3" y="3525" width="1.0" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="656.26" y="3535.5" ></text>
</g>
<g >
<title>`INVALIDATED-DISPATCH-FUNCTION^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2421" width="284.1" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="13.00" y="2431.5" >`INVALIDATED-DISPATCH-FUNCTION^CLOS^FN^^</text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="638.2" y="3557" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="641.18" y="3567.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (3 samples, 0.02%)</title><rect x="1093.1" y="3701" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1096.12" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (24 samples, 0.15%)</title><rect x="630.6" y="1653" width="1.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="633.57" y="1663.5" ></text>
</g>
<g >
<title>`GC_mark_local (14 samples, 0.09%)</title><rect x="1169.7" y="3445" width="1.0" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="1172.70" y="3455.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.3" y="1701" width="0.1" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="623.27" y="1711.5" ></text>
</g>
<g >
<title>0x15011e74d (25 samples, 0.16%)</title><rect x="653.2" y="3621" width="1.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="656.18" y="3631.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.26 (4 samples, 0.03%)</title><rect x="823.4" y="2069" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="826.44" y="2079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (102 samples, 0.65%)</title><rect x="620.9" y="2549" width="7.6" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="623.86" y="2559.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitICmpInst(llvm::ICmpInst&amp;) (7 samples, 0.04%)</title><rect x="612.7" y="4357" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="615.65" y="4367.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (64 samples, 0.40%)</title><rect x="282.0" y="101" width="4.8" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="284.99" y="111.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (7 samples, 0.04%)</title><rect x="635.6" y="3109" width="0.6" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="638.64" y="3119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2917" width="2.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="633.34" y="2927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="1349" width="0.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="626.33" y="1359.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.33 (20 samples, 0.13%)</title><rect x="876.3" y="3237" width="1.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="879.28" y="3247.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (27 samples, 0.17%)</title><rect x="949.1" y="3445" width="2.0" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="952.06" y="3455.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="625.3" y="1349" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="628.27" y="1359.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt; (llvmo::ClaspJIT_O::*)(gctools::smart_ptr&lt;llvmo::Module_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (9 samples, 0.06%)</title><rect x="620.9" y="517" width="0.6" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="623.86" y="527.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.6" y="661" width="0.2" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="633.64" y="671.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (3 samples, 0.02%)</title><rect x="904.1" y="3605" width="0.2" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="907.05" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1861" width="1.0" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="627.30" y="1871.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE*^COMPILER^FN^^ (11 samples, 0.07%)</title><rect x="643.5" y="3077" width="0.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="646.48" y="3087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="309" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="628.94" y="319.5" ></text>
</g>
<g >
<title>`COMPILE^COMMON-LISP^FN^^ (7 samples, 0.04%)</title><rect x="1176.9" y="3589" width="0.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="1179.94" y="3599.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.8 (9 samples, 0.06%)</title><rect x="997.6" y="3493" width="0.6" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1000.58" y="3503.5" ></text>
</g>
<g >
<title>`core::Cache_O::vector_hash_key(gctools::Vec0&lt;gctools::smart_ptr&lt;core::T_O&gt; &gt;&amp;) (5 samples, 0.03%)</title><rect x="937.1" y="3701" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="940.12" y="3711.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch(llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt;&amp;, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::BatchUpdateInfo*) (2 samples, 0.01%)</title><rect x="573.5" y="4405" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="576.54" y="4415.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (3 samples, 0.02%)</title><rect x="1140.6" y="3509" width="0.2" height="15.0" fill="rgb(248,119,119)" rx="2" ry="2" />
<text  x="1143.59" y="3519.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (123 samples, 0.78%)</title><rect x="809.6" y="3653" width="9.1" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="812.55" y="3663.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="623.3" y="309" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="626.33" y="319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (6 samples, 0.04%)</title><rect x="14.4" y="117" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="17.40" y="127.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="626.2" y="981" width="0.9" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="629.16" y="991.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::PruningFunctionCloner::CloneBlock(llvm::BasicBlock const*, llvm::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::Instruction, false, false, void&gt;, false, true&gt;, std::__1::vector&lt;llvm::BasicBlock const*, std::__1::allocator&lt;llvm::BasicBlock const*&gt; &gt;&amp;) (4 samples, 0.03%)</title><rect x="608.5" y="4357" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="611.55" y="4367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="2117" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="635.43" y="2127.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="1022.1" y="3653" width="0.1" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="1025.06" y="3663.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="629" width="109.6" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="24.20" y="639.5" >`COMBINE-METH..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="622.4" y="1509" width="0.7" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="625.35" y="1519.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (27 samples, 0.17%)</title><rect x="1186.9" y="1701" width="2.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="1189.94" y="1711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="1141" width="0.7" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="625.35" y="1151.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="628.0" y="37" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="630.95" y="47.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="1176.9" y="2981" width="0.2" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="1179.94" y="2991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="581" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="622.44" y="591.5" ></text>
</g>
<g >
<title>0x1110a5606 (184 samples, 1.16%)</title><rect x="619.1" y="3621" width="13.7" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="622.07" y="3631.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="632.4" y="1861" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="635.43" y="1871.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitLoadInst(llvm::LoadInst&amp;) (5 samples, 0.03%)</title><rect x="595.6" y="4421" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="598.63" y="4431.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="639.5" y="3365" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="642.52" y="3375.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.31 (7 samples, 0.04%)</title><rect x="1176.9" y="3637" width="0.6" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="1179.94" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="1573" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="626.33" y="1583.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.24 (5 samples, 0.03%)</title><rect x="1188.1" y="213" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="1191.06" y="223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.3" y="2149" width="0.1" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="623.27" y="2159.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="1429" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="622.15" y="1439.5" ></text>
</g>
<g >
<title>0x1140073e7 (1,469 samples, 9.29%)</title><rect x="21.2" y="213" width="109.6" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="24.20" y="223.5" >0x1140073e7</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (24 samples, 0.15%)</title><rect x="619.1" y="3125" width="1.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="622.07" y="3135.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (9 samples, 0.06%)</title><rect x="997.6" y="3717" width="0.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1000.58" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="619.4" y="1525" width="0.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="622.44" y="1535.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="174.1" y="53" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="177.06" y="63.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="628.2" y="101" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="631.18" y="111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (21 samples, 0.13%)</title><rect x="630.8" y="1221" width="1.6" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="633.79" y="1231.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (12 samples, 0.08%)</title><rect x="626.2" y="469" width="0.9" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="629.16" y="479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1413" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="623.64" y="1423.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.6" y="1141" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="632.60" y="1151.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoWrapperPass::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="605.1" y="4405" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="608.11" y="4415.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::EarlyCSE::run() (2 samples, 0.01%)</title><rect x="588.5" y="4453" width="0.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="591.54" y="4463.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.24 (7 samples, 0.04%)</title><rect x="874.9" y="2917" width="0.6" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="877.94" y="2927.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (3 samples, 0.02%)</title><rect x="902.7" y="3573" width="0.2" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="905.71" y="3583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (17 samples, 0.11%)</title><rect x="142.2" y="245" width="1.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="145.19" y="255.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (82 samples, 0.52%)</title><rect x="15.0" y="357" width="6.1" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="18.00" y="367.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1637" width="284.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" >`DO-COMPILATION-UNIT^COMPILER^FN^^</text>
</g>
<g >
<title>0x1501b4c8b (40 samples, 0.25%)</title><rect x="278.5" y="693" width="3.0" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="281.48" y="703.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="650.8" y="3557" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="653.79" y="3567.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::freePass(llvm::Pass*, llvm::StringRef, llvm::PassDebuggingString) (2 samples, 0.01%)</title><rect x="605.9" y="4389" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="608.93" y="4399.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MachineInstr*, llvm::ScopedHashTableVal&lt;llvm::MachineInstr*, unsigned int&gt;*, llvm::MachineInstrExpressionTrait, llvm::detail::DenseMapPair&lt;llvm::MachineInstr*, llvm::ScopedHashTableVal&lt;llvm::MachineInstr*, unsigned int&gt;*&gt; &gt;, llvm::MachineInstr*, llvm::ScopedHashTableVal&lt;llvm::MachineInstr*, unsigned int&gt;*, llvm::MachineInstrExpressionTrait, llvm::detail::DenseMapPair&lt;llvm::MachineInstr*, llvm::ScopedHashTableVal&lt;llvm::MachineInstr*, unsigned int&gt;*&gt; &gt;::erase(llvm::MachineInstr* const&amp;) (2 samples, 0.01%)</title><rect x="574.7" y="4357" width="0.1" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="577.66" y="4367.5" ></text>
</g>
<g >
<title>`llvm::MCObjectWriter::write32(unsigned int) (2 samples, 0.01%)</title><rect x="572.7" y="4357" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="575.72" y="4367.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="620.5" y="2437" width="0.1" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="623.49" y="2447.5" ></text>
</g>
<g >
<title>0x1110a5456 (6 samples, 0.04%)</title><rect x="619.4" y="2565" width="0.4" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="622.37" y="2575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="245" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="622.15" y="255.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="1156.6" y="3669" width="0.4" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="1159.64" y="3679.5" ></text>
</g>
<g >
<title>`llvmo::TargetMachine_O::addPassesToEmitFileAndRunPassManager(gctools::smart_ptr&lt;llvmo::PassManager_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, llvm::TargetMachine::CodeGenFileType, gctools::smart_ptr&lt;llvmo::Module_O&gt;) (205 samples, 1.30%)</title><rect x="572.6" y="4485" width="15.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="575.57" y="4495.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (24 samples, 0.15%)</title><rect x="619.1" y="2997" width="1.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="622.07" y="3007.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (30 samples, 0.19%)</title><rect x="1011.2" y="3429" width="2.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1014.16" y="3439.5" ></text>
</g>
<g >
<title>`PERFORM-WITH-RESTARTS^ASDF/ACTION^((T T))^METHOD^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2469" width="284.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="13.00" y="2479.5" >`PERFORM-WITH-RESTARTS^ASDF/ACTION^((T..</text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.293 (20 samples, 0.13%)</title><rect x="876.3" y="3349" width="1.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="879.28" y="3359.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (6 samples, 0.04%)</title><rect x="782.5" y="3621" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="785.46" y="3631.5" ></text>
</g>
<g >
<title>0x1258cfcab (63 samples, 0.40%)</title><rect x="273.8" y="405" width="4.7" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="276.78" y="415.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (10 samples, 0.06%)</title><rect x="12.8" y="341" width="0.7" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="15.76" y="351.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="625.9" y="805" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="628.94" y="815.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="623.3" y="1477" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="626.33" y="1487.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="661.3" y="3413" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="664.32" y="3423.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (37 samples, 0.23%)</title><rect x="972.0" y="3685" width="2.7" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="974.97" y="3695.5" ></text>
</g>
<g >
<title>`llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (6 samples, 0.04%)</title><rect x="635.6" y="3029" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="638.64" y="3039.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.5" y="2485" width="0.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="623.49" y="2495.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.13 (7 samples, 0.04%)</title><rect x="874.9" y="2981" width="0.6" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="877.94" y="2991.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="655.1" y="3509" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="658.12" y="3519.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (37 samples, 0.23%)</title><rect x="144.7" y="37" width="2.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="147.73" y="47.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.8" y="581" width="0.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="626.77" y="591.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (7 samples, 0.04%)</title><rect x="874.9" y="2837" width="0.6" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="877.94" y="2847.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="625.3" y="1813" width="0.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="628.27" y="1823.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="658.6" y="3237" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="661.63" y="3247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="693" width="0.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="627.00" y="703.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.90 (20 samples, 0.13%)</title><rect x="1187.2" y="1333" width="1.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="1190.24" y="1343.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="655.9" y="3429" width="0.2" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="658.94" y="3439.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.215 (7,680 samples, 48.58%)</title><rect x="616.3" y="3957" width="573.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="619.31" y="3967.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.215</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="624.0" y="725" width="0.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="627.00" y="735.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="627.5" y="1733" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="630.51" y="1743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="933" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="622.15" y="943.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T LOCAL-MACRO-INFO T T))^METHOD^^.49 (36 samples, 0.23%)</title><rect x="10.0" y="117" width="2.7" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>`pthread_getspecific (16 samples, 0.10%)</title><rect x="1091.7" y="3685" width="1.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1094.70" y="3695.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (435 samples, 2.75%)</title><rect x="240.9" y="517" width="32.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="243.86" y="527.5" >`c..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="619.4" y="645" width="0.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="622.44" y="655.5" ></text>
</g>
<g >
<title>0x110d5d001 (3 samples, 0.02%)</title><rect x="668.3" y="3669" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="671.33" y="3679.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (2 samples, 0.01%)</title><rect x="1113.7" y="3733" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="1116.72" y="3743.5" ></text>
</g>
<g >
<title>0x110e002aa (10 samples, 0.06%)</title><rect x="1164.6" y="3637" width="0.8" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1167.62" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.6" y="485" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="633.64" y="495.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="628.2" y="1125" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="631.18" y="1135.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (40 samples, 0.25%)</title><rect x="278.5" y="533" width="3.0" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="281.48" y="543.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (21 samples, 0.13%)</title><rect x="140.3" y="229" width="1.6" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="143.32" y="239.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (102 samples, 0.65%)</title><rect x="620.9" y="2501" width="7.6" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="623.86" y="2511.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__class_type_info::process_static_type_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int) const (3 samples, 0.02%)</title><rect x="924.7" y="3685" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="927.73" y="3695.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGBuilder::getValue(llvm::Value const*) (3 samples, 0.02%)</title><rect x="583.2" y="4309" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="586.17" y="4319.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (83 samples, 0.53%)</title><rect x="15.0" y="501" width="6.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="18.00" y="511.5" ></text>
</g>
<g >
<title>`core::core__load_no_package_set(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (3,806 samples, 24.07%)</title><rect x="10.0" y="4501" width="284.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="13.00" y="4511.5" >`core::core__load_no_package_set(gctoo..</text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.02%)</title><rect x="983.1" y="3685" width="0.2" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="986.10" y="3695.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (2 samples, 0.01%)</title><rect x="852.2" y="3349" width="0.1" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="855.17" y="3359.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="1053.3" y="3701" width="0.1" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1056.26" y="3711.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (49 samples, 0.31%)</title><rect x="909.8" y="3701" width="3.7" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="912.80" y="3711.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (9 samples, 0.06%)</title><rect x="750.5" y="3589" width="0.7" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="753.51" y="3599.5" ></text>
</g>
<g >
<title>0x14e112183 (17 samples, 0.11%)</title><rect x="616.8" y="3829" width="1.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="619.83" y="3839.5" ></text>
</g>
<g >
<title>`INSERT-INSTRUCTION-BEFORE^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="642.4" y="3621" width="0.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="645.36" y="3631.5" ></text>
</g>
<g >
<title>0x123711068 (4 samples, 0.03%)</title><rect x="141.9" y="277" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="144.89" y="287.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (3 samples, 0.02%)</title><rect x="1065.4" y="3701" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1068.42" y="3711.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (64 samples, 0.40%)</title><rect x="1086.5" y="3669" width="4.7" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="1089.47" y="3679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="627.5" y="1717" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="630.51" y="1727.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (6 samples, 0.04%)</title><rect x="875.0" y="2645" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="878.01" y="2655.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (12 samples, 0.08%)</title><rect x="1174.7" y="3573" width="0.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="1177.70" y="3583.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (4 samples, 0.03%)</title><rect x="653.9" y="3413" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="656.85" y="3423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1093" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="630.65" y="1103.5" ></text>
</g>
<g >
<title>`llvm::JumpThreadingPass::runImpl(llvm::Function&amp;, llvm::TargetLibraryInfo*, llvm::LazyValueInfo*, llvm::AAResults*, bool, std::__1::unique_ptr&lt;llvm::BlockFrequencyInfo, std::__1::default_delete&lt;llvm::BlockFrequencyInfo&gt; &gt;, std::__1::unique_ptr&lt;llvm::BranchProbabilityInfo, std::__1::default_delete&lt;llvm::BranchProbabilityInfo&gt; &gt;) (2 samples, 0.01%)</title><rect x="877.0" y="2629" width="0.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="880.03" y="2639.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (16 samples, 0.10%)</title><rect x="1144.3" y="3413" width="1.2" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="1147.32" y="3423.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (10 samples, 0.06%)</title><rect x="622.4" y="757" width="0.7" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="625.35" y="767.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="549" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="630.95" y="559.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="1541" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="632.45" y="1551.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (11 samples, 0.07%)</title><rect x="619.4" y="2597" width="0.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="622.37" y="2607.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (63 samples, 0.40%)</title><rect x="273.8" y="421" width="4.7" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="276.78" y="431.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (82 samples, 0.52%)</title><rect x="15.0" y="53" width="6.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="18.00" y="63.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (21 samples, 0.13%)</title><rect x="630.8" y="1445" width="1.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="633.79" y="1455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.3" y="1845" width="0.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="623.27" y="1855.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (28 samples, 0.18%)</title><rect x="1186.9" y="1941" width="2.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="1189.87" y="1951.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (794 samples, 5.02%)</title><rect x="959.3" y="3733" width="59.2" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="962.28" y="3743.5" >`MAP-I..</text>
</g>
<g >
<title>`INVALIDATED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2949" width="284.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="13.00" y="2959.5" >`INVALIDATED-DISCRIMINATING-FUNCTION^C..</text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T))^METHOD^^ (28 samples, 0.18%)</title><rect x="1186.9" y="1973" width="2.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="1189.87" y="1983.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (82 samples, 0.52%)</title><rect x="15.0" y="101" width="6.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="18.00" y="111.5" ></text>
</g>
<g >
<title>`llvm::MachineFunction::CreateMachineInstr(llvm::MCInstrDesc const&amp;, llvm::DebugLoc const&amp;, bool) (2 samples, 0.01%)</title><rect x="578.6" y="4309" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="581.62" y="4319.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="623.7" y="821" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="626.70" y="831.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (7 samples, 0.04%)</title><rect x="635.6" y="3157" width="0.6" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="638.64" y="3167.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (3 samples, 0.02%)</title><rect x="901.1" y="3589" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="904.14" y="3599.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (9 samples, 0.06%)</title><rect x="997.6" y="3381" width="0.6" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="1000.58" y="3391.5" ></text>
</g>
<g >
<title>`llvm::MachObjectWriter::writeObject(llvm::MCAssembler&amp;, llvm::MCAsmLayout const&amp;) (3 samples, 0.02%)</title><rect x="572.7" y="4373" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="575.72" y="4383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="2005" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="622.15" y="2015.5" ></text>
</g>
<g >
<title>`core::cl__class_of(gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.03%)</title><rect x="782.0" y="3637" width="0.3" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="785.01" y="3647.5" ></text>
</g>
<g >
<title>0x1501b4cfb (7 samples, 0.04%)</title><rect x="272.8" y="405" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="275.81" y="415.5" ></text>
</g>
<g >
<title>`read-common.lisp-read-common192^53^TOP-COMPILE-FILE.27 (93 samples, 0.59%)</title><rect x="287.1" y="229" width="6.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="290.07" y="239.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::attachNewSubtree(llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt;&amp;, llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*) (2 samples, 0.01%)</title><rect x="610.3" y="4373" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="613.34" y="4383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (10 samples, 0.06%)</title><rect x="622.4" y="693" width="0.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="625.35" y="703.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="623.7" y="1317" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="626.70" y="1327.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="627.5" y="1877" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="630.51" y="1887.5" ></text>
</g>
<g >
<title>`cc_fdefinition (3 samples, 0.02%)</title><rect x="1172.8" y="3637" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1175.83" y="3647.5" ></text>
</g>
<g >
<title>`llvm::InstrEmitter::EmitMachineNode(llvm::SDNode*, bool, bool, llvm::DenseMap&lt;llvm::SDValue, unsigned int, llvm::DenseMapInfo&lt;llvm::SDValue&gt;, llvm::detail::DenseMapPair&lt;llvm::SDValue, unsigned int&gt; &gt;&amp;) (4 samples, 0.03%)</title><rect x="578.5" y="4325" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="581.47" y="4335.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (12 samples, 0.08%)</title><rect x="626.2" y="693" width="0.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="629.16" y="703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="2581" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="622.15" y="2591.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="624.0" y="1845" width="0.1" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="627.00" y="1855.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.98 (15 samples, 0.09%)</title><rect x="1187.5" y="805" width="1.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="1190.46" y="815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1397" width="0.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="623.49" y="1407.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="623.1" y="1205" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="626.10" y="1215.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (61 samples, 0.39%)</title><rect x="1141.0" y="3445" width="4.5" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="1143.96" y="3455.5" ></text>
</g>
<g >
<title>`core::funcall_va_list_5(gctools::smart_ptr&lt;core::Function_O&gt;, gctools::smart_ptr&lt;core::Vaslist&gt;) (89 samples, 0.56%)</title><rect x="872.5" y="3669" width="6.6" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="875.48" y="3679.5" ></text>
</g>
<g >
<title>0x110cd62a2 (16 samples, 0.10%)</title><rect x="142.3" y="165" width="1.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="145.26" y="175.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="624.3" y="533" width="1.0" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="627.30" y="543.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (16 samples, 0.10%)</title><rect x="770.4" y="3589" width="1.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="773.44" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1093" width="1.0" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="627.30" y="1103.5" ></text>
</g>
<g >
<title>`macro-functions.lisp-macro-functions194^173^TOP-COMPILE-FILE.43 (96 samples, 0.61%)</title><rect x="286.9" y="421" width="7.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="289.92" y="431.5" ></text>
</g>
<g >
<title>`CCLASP-EVAL-WITH-ENV^CLASP-CLEAVIR^((T T))^METHOD^^.221 (3,806 samples, 24.07%)</title><rect x="10.0" y="4277" width="284.1" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="13.00" y="4287.5" >`CCLASP-EVAL-WITH-ENV^CLASP-CLEAVIR^((..</text>
</g>
<g >
<title>`read.lisp-read201^11^TOP-COMPILE-FILE.53 (98 samples, 0.62%)</title><rect x="286.8" y="949" width="7.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="289.77" y="959.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1021.3" y="3077" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1024.31" y="3087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="628.6" y="2517" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="631.62" y="2527.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="659.2" y="3253" width="0.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="662.15" y="3263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="1349" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="631.18" y="1359.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.98 (86 samples, 0.54%)</title><rect x="1183.1" y="3125" width="6.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="1186.13" y="3135.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="878.9" y="3477" width="0.1" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="881.90" y="3487.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="625.3" y="1509" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="628.27" y="1519.5" ></text>
</g>
<g >
<title>`GC_finish_collection (2 samples, 0.01%)</title><rect x="1140.8" y="3509" width="0.2" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="1143.81" y="3519.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3,708 samples, 23.45%)</title><rect x="10.0" y="1029" width="276.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" >`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND..</text>
</g>
<g >
<title>0x111336918 (4 samples, 0.03%)</title><rect x="1183.3" y="2917" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1186.28" y="2927.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::Function_O&gt;) (40 samples, 0.25%)</title><rect x="278.5" y="37" width="3.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="281.48" y="47.5" ></text>
</g>
<g >
<title>0x111337578 (32 samples, 0.20%)</title><rect x="1186.7" y="2453" width="2.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1189.72" y="2463.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="917" width="0.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="628.27" y="927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1269" width="1.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="627.30" y="1279.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'EVAL-WHEN) T T T))^METHOD^^ (62 samples, 0.39%)</title><rect x="236.2" y="677" width="4.7" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="239.24" y="687.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="624.0" y="613" width="0.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="627.00" y="623.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (102 samples, 0.65%)</title><rect x="620.9" y="2597" width="7.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="623.86" y="2607.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^124^TOP-COMPILE-FILE.325 (435 samples, 2.75%)</title><rect x="240.9" y="645" width="32.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="243.86" y="655.5" >`c..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="623.7" y="901" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="626.70" y="911.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (174 samples, 1.10%)</title><rect x="1002.4" y="3701" width="13.0" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1005.43" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.4" y="1669" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="633.42" y="1679.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="629.4" y="1877" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="632.45" y="1887.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core::Cons_O&gt; &gt;::allocate_kind(gctools::Header_s::Value const&amp;, unsigned long, void const*) (87 samples, 0.55%)</title><rect x="1140.3" y="3605" width="6.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="1143.29" y="3615.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.92 (28 samples, 0.18%)</title><rect x="1186.9" y="1781" width="2.1" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="1189.87" y="1791.5" ></text>
</g>
<g >
<title>`combineInstructionsOverFunction(llvm::Function&amp;, llvm::InstCombineWorklist&amp;, llvm::AAResults*, llvm::AssumptionCache&amp;, llvm::TargetLibraryInfo&amp;, llvm::DominatorTree&amp;, llvm::OptimizationRemarkEmitter&amp;, bool, llvm::LoopInfo*) (26 samples, 0.16%)</title><rect x="594.3" y="4453" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="597.29" y="4463.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (19 samples, 0.12%)</title><rect x="271.2" y="37" width="1.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="274.24" y="47.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.6" y="1061" width="0.1" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="632.60" y="1071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="1461" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="626.33" y="1471.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.3" y="1717" width="0.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="623.27" y="1727.5" ></text>
</g>
<g >
<title>`HIR-&gt;MIR^CLASP-CLEAVIR^FN^^ (7,353 samples, 46.51%)</title><rect x="633.4" y="3845" width="548.8" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="636.40" y="3855.5" >`HIR-&gt;MIR^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (5 samples, 0.03%)</title><rect x="639.0" y="3349" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="642.00" y="3359.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (4 samples, 0.03%)</title><rect x="1160.3" y="3573" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="1163.29" y="3583.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.30 (17 samples, 0.11%)</title><rect x="620.9" y="773" width="1.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="623.86" y="783.5" ></text>
</g>
<g >
<title>`DUMP-MODULE^LLVM-SYS^FN^^ (71 samples, 0.45%)</title><rect x="567.1" y="4549" width="5.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="570.12" y="4559.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (14 samples, 0.09%)</title><rect x="626.1" y="2117" width="1.0" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="629.09" y="2127.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (86 samples, 0.54%)</title><rect x="1183.1" y="3077" width="6.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="1186.13" y="3087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1701" width="1.0" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="627.30" y="1711.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.26 (31 samples, 0.20%)</title><rect x="1186.8" y="2053" width="2.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="1189.79" y="2063.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (45 samples, 0.28%)</title><rect x="983.3" y="3685" width="3.4" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="986.32" y="3695.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (40 samples, 0.25%)</title><rect x="278.5" y="213" width="3.0" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="281.48" y="223.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::smart_ptr&lt;core::T_O&gt;, void*) (11 samples, 0.07%)</title><rect x="1100.8" y="3685" width="0.8" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1103.80" y="3695.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="1021.3" y="3141" width="0.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="1024.31" y="3151.5" ></text>
</g>
<g >
<title>0x1110a5456 (13 samples, 0.08%)</title><rect x="624.3" y="1493" width="1.0" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="627.30" y="1503.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (17 samples, 0.11%)</title><rect x="620.9" y="1829" width="1.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="623.86" y="1839.5" ></text>
</g>
<g >
<title>`core::Lisp_O::run() (3,806 samples, 24.07%)</title><rect x="10.0" y="4725" width="284.1" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="13.00" y="4735.5" >`core::Lisp_O::run()</text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (46 samples, 0.29%)</title><rect x="1061.8" y="3685" width="3.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1064.77" y="3695.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (6 samples, 0.04%)</title><rect x="663.5" y="3397" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="666.48" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1653" width="0.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="627.00" y="1663.5" ></text>
</g>
<g >
<title>0x110d5d13e (7 samples, 0.04%)</title><rect x="1066.8" y="3733" width="0.6" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1069.84" y="3743.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_get_ClassHolder_sp (4 samples, 0.03%)</title><rect x="1078.3" y="3717" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1081.26" y="3727.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="14.9" y="661" width="0.1" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="17.85" y="671.5" ></text>
</g>
<g >
<title>`AST-INTERPRET-FORM^CLASP-CLEAVIR^FN^^ (10 samples, 0.06%)</title><rect x="12.8" y="469" width="0.7" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="15.76" y="479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="389" width="0.2" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="626.33" y="399.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="629.4" y="533" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="632.45" y="543.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.9" y="1429" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="628.94" y="1439.5" ></text>
</g>
<g >
<title>`llvm::TargetPassConfig::addMachinePasses() (2 samples, 0.01%)</title><rect x="572.6" y="4437" width="0.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="575.57" y="4447.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="623.7" y="1333" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="626.70" y="1343.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1621" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="630.65" y="1631.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (40 samples, 0.25%)</title><rect x="278.5" y="437" width="3.0" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="281.48" y="447.5" ></text>
</g>
<g >
<title>0x1501b4cfb (64 samples, 0.40%)</title><rect x="282.0" y="149" width="4.8" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="284.99" y="159.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="2597" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="622.15" y="2607.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="619.4" y="1109" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="622.44" y="1119.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp;) (5 samples, 0.03%)</title><rect x="657.6" y="2469" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="660.59" y="2479.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (6 samples, 0.04%)</title><rect x="14.4" y="101" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="17.40" y="111.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3925" width="284.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="13.00" y="3935.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (125 samples, 0.79%)</title><rect x="620.9" y="3109" width="9.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="623.86" y="3119.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.04%)</title><rect x="644.8" y="3605" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="647.82" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (20 samples, 0.13%)</title><rect x="622.1" y="1941" width="1.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="625.13" y="1951.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.32 (16 samples, 0.10%)</title><rect x="635.6" y="3621" width="1.2" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="638.57" y="3631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="2677" width="284.1" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="13.00" y="2687.5" >`core::FuncallableInstance_O::funcalla..</text>
</g>
<g >
<title>`wrapped_core__instance_set_T_spintT_sp (19 samples, 0.12%)</title><rect x="735.8" y="3621" width="1.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="738.81" y="3631.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (59 samples, 0.37%)</title><rect x="282.4" y="37" width="4.4" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="285.37" y="47.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="3093" width="2.1" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="633.34" y="3103.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (12 samples, 0.08%)</title><rect x="626.2" y="197" width="0.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="629.16" y="207.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (11 samples, 0.07%)</title><rect x="874.9" y="3365" width="0.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="877.94" y="3375.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE^COMPILER^FN^^ (11 samples, 0.07%)</title><rect x="643.5" y="3525" width="0.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="646.48" y="3535.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (17 samples, 0.11%)</title><rect x="624.0" y="2005" width="1.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="627.00" y="2015.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="623.1" y="1541" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="626.10" y="1551.5" ></text>
</g>
<g >
<title>`llvm::AsmPrinter::EmitFunctionHeader() (3 samples, 0.02%)</title><rect x="586.1" y="4373" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="589.08" y="4383.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="639.5" y="3301" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="642.52" y="3311.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (6 samples, 0.04%)</title><rect x="619.4" y="2293" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="622.37" y="2303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="2373" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="622.15" y="2383.5" ></text>
</g>
<g >
<title>0x12913f2d2 (2 samples, 0.01%)</title><rect x="758.5" y="3653" width="0.1" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="761.50" y="3663.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.22 (11 samples, 0.07%)</title><rect x="643.5" y="3125" width="0.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="646.48" y="3135.5" ></text>
</g>
<g >
<title>0x110d5d16d (2 samples, 0.01%)</title><rect x="887.2" y="3733" width="0.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="890.18" y="3743.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::Function_O&gt;) (63 samples, 0.40%)</title><rect x="273.8" y="469" width="4.7" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="276.78" y="479.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="619.8" y="2309" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="622.82" y="2319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.04%)</title><rect x="627.1" y="2149" width="0.6" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="630.13" y="2159.5" ></text>
</g>
<g >
<title>0x1258cfc3b (2 samples, 0.01%)</title><rect x="173.6" y="421" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="176.61" y="431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="1125" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="635.43" y="1135.5" ></text>
</g>
<g >
<title>`COMPILE^COMMON-LISP^FN^^ (21 samples, 0.13%)</title><rect x="656.7" y="3013" width="1.6" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="659.69" y="3023.5" ></text>
</g>
<g >
<title>`core::Vaslist::Vaslist(core::Vaslist const&amp;) (2 samples, 0.01%)</title><rect x="1150.1" y="3701" width="0.1" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1153.07" y="3711.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (55 samples, 0.35%)</title><rect x="169.4" y="181" width="4.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="172.43" y="191.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="874.0" y="2933" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="876.97" y="2943.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="613" width="109.6" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="24.20" y="623.5" >`CONVERT^CLEA..</text>
</g>
<g >
<title>0x1110a5606 (11 samples, 0.07%)</title><rect x="627.7" y="2181" width="0.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="630.65" y="2191.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="619.4" y="357" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="622.44" y="367.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="628.0" y="661" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="630.95" y="671.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceSet(unsigned long, gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="759.5" y="3621" width="0.1" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="762.47" y="3631.5" ></text>
</g>
<g >
<title>`llvm::BlockFrequencyInfoImplBase::finalizeMetrics() (2 samples, 0.01%)</title><rect x="573.2" y="4373" width="0.1" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="576.17" y="4383.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.295 (5 samples, 0.03%)</title><rect x="1156.6" y="3701" width="0.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="1159.64" y="3711.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="1021.3" y="3173" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="1024.31" y="3183.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef&lt;llvm::Value*&gt;, bool, llvm::Optional&lt;unsigned int&gt;, llvm::Type*) (2 samples, 0.01%)</title><rect x="601.2" y="4293" width="0.2" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="604.23" y="4303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.6" y="821" width="0.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="632.60" y="831.5" ></text>
</g>
<g >
<title>`COMPILE-TO-MODULE^COMPILER^FN^^ (6 samples, 0.04%)</title><rect x="823.3" y="2981" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="826.29" y="2991.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (829 samples, 5.24%)</title><rect x="174.3" y="453" width="61.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="177.28" y="463.5" >`COMBI..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="622.1" y="709" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="625.13" y="719.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (17 samples, 0.11%)</title><rect x="1157.1" y="3653" width="1.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="1160.08" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (3 samples, 0.02%)</title><rect x="619.1" y="437" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="622.15" y="447.5" ></text>
</g>
<g >
<title>`CALL-AROUND-HOOK^UIOP/LISP-BUILD^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2021" width="284.1" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" >`CALL-AROUND-HOOK^UIOP/LISP-BUILD^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="627.1" y="1445" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="630.13" y="1455.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="627.7" y="1205" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="630.65" y="1215.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap&lt;llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo&lt;llvm::Constant*&gt;, llvm::detail::DenseMapPair&lt;llvm::Constant*, llvm::Constant*&gt; &gt;&amp;) (5 samples, 0.03%)</title><rect x="600.3" y="4357" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="603.26" y="4367.5" ></text>
</g>
<g >
<title>`core::core__instance_set(gctools::smart_ptr&lt;core::T_O&gt;, int, gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.03%)</title><rect x="759.6" y="3621" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="762.62" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="628.0" y="53" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="630.95" y="63.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (10 samples, 0.06%)</title><rect x="628.6" y="2613" width="0.7" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="631.55" y="2623.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (253 samples, 1.60%)</title><rect x="597.4" y="4453" width="18.8" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="600.35" y="4463.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (3 samples, 0.02%)</title><rect x="873.1" y="2949" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="876.15" y="2959.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (31 samples, 0.20%)</title><rect x="1186.8" y="2149" width="2.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="1189.79" y="2159.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (4 samples, 0.03%)</title><rect x="628.2" y="1205" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="631.18" y="1215.5" ></text>
</g>
<g >
<title>`core::cl__mapl(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::List_V&gt;) (3 samples, 0.02%)</title><rect x="823.5" y="1365" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="826.51" y="1375.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;std::__1::__value_type&lt;llvm::Function const*, std::__1::unique_ptr&lt;llvm::CallGraphNode, std::__1::default_delete&lt;llvm::CallGraphNode&gt; &gt; &gt;, std::__1::__map_value_compare&lt;llvm::Function const*, std::__1::__value_type&lt;llvm::Function const*, std::__1::unique_ptr&lt;llvm::CallGraphNode, std::__1::default_delete&lt;llvm::CallGraphNode&gt; &gt; &gt;, std::__1::less&lt;llvm::Function const*&gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;llvm::Function const*, std::__1::unique_ptr&lt;llvm::CallGraphNode, std::__1::default_delete&lt;llvm::CallGraphNode&gt; &gt; &gt; &gt; &gt;::destroy(std::__1::__tree_node&lt;std::__1::__value_type&lt;llvm::Function const*, std::__1::unique_ptr&lt;llvm::CallGraphNode, std::__1::default_delete&lt;llvm::CallGraphNode&gt; &gt; &gt;, void*&gt;*) (2 samples, 0.01%)</title><rect x="596.8" y="4437" width="0.1" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="599.75" y="4447.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T))^METHOD^^ (3 samples, 0.02%)</title><rect x="1189.2" y="2437" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="1192.18" y="2447.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (20 samples, 0.13%)</title><rect x="630.8" y="181" width="1.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="633.79" y="191.5" ></text>
</g>
<g >
<title>`macro-functions.lisp-macro-functions194^329^TOP-COMPILE-FILE.72 (65 samples, 0.41%)</title><rect x="289.2" y="133" width="4.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="292.16" y="143.5" ></text>
</g>
<g >
<title>`core::StackFrameDynamicScopeManager::new_binding(core::Argument const&amp;, gctools::smart_ptr&lt;core::T_O&gt;) (5 samples, 0.03%)</title><rect x="858.7" y="3573" width="0.4" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="861.74" y="3583.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.0" y="2725" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="633.04" y="2735.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (7 samples, 0.04%)</title><rect x="628.0" y="1429" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="630.95" y="1439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (82 samples, 0.52%)</title><rect x="15.0" y="421" width="6.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="18.00" y="431.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (22 samples, 0.14%)</title><rect x="140.2" y="245" width="1.7" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="143.25" y="255.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="645.1" y="3493" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="648.12" y="3503.5" ></text>
</g>
<g >
<title>`GC_malloc (2 samples, 0.01%)</title><rect x="982.9" y="3685" width="0.2" height="15.0" fill="rgb(250,122,122)" rx="2" ry="2" />
<text  x="985.95" y="3695.5" ></text>
</g>
<g >
<title>0x1110a6386 (2 samples, 0.01%)</title><rect x="629.7" y="2053" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="632.74" y="2063.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="1183.8" y="2629" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="1186.80" y="2639.5" ></text>
</g>
<g >
<title>0x1110a6386 (4 samples, 0.03%)</title><rect x="625.3" y="2069" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="628.27" y="2079.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (22 samples, 0.14%)</title><rect x="624.0" y="2213" width="1.6" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="627.00" y="2223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="2373" width="0.4" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="622.37" y="2383.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (82 samples, 0.52%)</title><rect x="15.0" y="389" width="6.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="18.00" y="399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (102 samples, 0.65%)</title><rect x="620.9" y="2613" width="7.6" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="623.86" y="2623.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="261" width="1.0" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="627.30" y="271.5" ></text>
</g>
<g >
<title>0x1110a6386 (2 samples, 0.01%)</title><rect x="620.6" y="901" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="623.64" y="911.5" ></text>
</g>
<g >
<title>`llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (6 samples, 0.04%)</title><rect x="635.6" y="3045" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="638.64" y="3055.5" ></text>
</g>
<g >
<title>0x110c59407 (2 samples, 0.01%)</title><rect x="714.0" y="3653" width="0.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="717.01" y="3663.5" ></text>
</g>
<g >
<title>`core::core__instance_ref(gctools::smart_ptr&lt;core::T_O&gt;, int) (2 samples, 0.01%)</title><rect x="770.0" y="3621" width="0.1" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="772.99" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (26 samples, 0.16%)</title><rect x="630.4" y="1893" width="2.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="633.42" y="1903.5" ></text>
</g>
<g >
<title>0x111994184 (3,806 samples, 24.07%)</title><rect x="10.0" y="3317" width="284.1" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="13.00" y="3327.5" >0x111994184</text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.8 (2 samples, 0.01%)</title><rect x="656.7" y="2197" width="0.1" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="659.69" y="2207.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.8" y="1061" width="0.1" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="628.79" y="1071.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="625.9" y="421" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="628.94" y="431.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="633.7" y="3797" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="636.70" y="3807.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="1178.7" y="3733" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="1181.65" y="3743.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.28 (12 samples, 0.08%)</title><rect x="872.5" y="3269" width="0.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="875.48" y="3279.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::MachineCSE::runOnMachineFunction(llvm::MachineFunction&amp;) (6 samples, 0.04%)</title><rect x="574.6" y="4405" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="577.58" y="4415.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (6 samples, 0.04%)</title><rect x="898.8" y="3653" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="901.83" y="3663.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.64 (31 samples, 0.20%)</title><rect x="1186.8" y="2037" width="2.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="1189.79" y="2047.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (7 samples, 0.04%)</title><rect x="628.0" y="1637" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="630.95" y="1647.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (3 samples, 0.02%)</title><rect x="639.9" y="3381" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="642.90" y="3391.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (205 samples, 1.30%)</title><rect x="572.6" y="4533" width="15.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="575.57" y="4543.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (12 samples, 0.08%)</title><rect x="626.2" y="677" width="0.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="629.16" y="687.5" ></text>
</g>
<g >
<title>0x11171939a (4 samples, 0.03%)</title><rect x="658.5" y="3269" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="661.48" y="3279.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((FUNCTION-AST T))^METHOD^^.113 (2 samples, 0.01%)</title><rect x="273.8" y="197" width="0.1" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="276.78" y="207.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="604.1" y="4309" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="607.14" y="4319.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="629.4" y="341" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="632.45" y="351.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.55 (2 samples, 0.01%)</title><rect x="876.3" y="2709" width="0.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="879.28" y="2719.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (7 samples, 0.04%)</title><rect x="1176.9" y="3685" width="0.6" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="1179.94" y="3695.5" ></text>
</g>
<g >
<title>`core::Cons_O::last(long long) const (8 samples, 0.05%)</title><rect x="922.0" y="3701" width="0.6" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="925.04" y="3711.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (16 samples, 0.10%)</title><rect x="1088.7" y="3493" width="1.2" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="1091.71" y="3503.5" ></text>
</g>
<g >
<title>0x1257602e2 (3 samples, 0.02%)</title><rect x="619.1" y="1269" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="622.15" y="1279.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="624.1" y="1669" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="627.15" y="1679.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="874.0" y="2997" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="876.97" y="3007.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (435 samples, 2.75%)</title><rect x="240.9" y="565" width="32.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="243.86" y="575.5" >`i..</text>
</g>
<g >
<title>0x1110a5d56 (10 samples, 0.06%)</title><rect x="622.4" y="197" width="0.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="625.35" y="207.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.5" y="1845" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="623.49" y="1855.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CorrelatedValuePropagation::runOnFunction(llvm::Function&amp;) (4 samples, 0.03%)</title><rect x="597.7" y="4405" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="600.72" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (20 samples, 0.13%)</title><rect x="630.8" y="565" width="1.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="633.79" y="575.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.02%)</title><rect x="698.9" y="3605" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="701.86" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (13 samples, 0.08%)</title><rect x="624.3" y="1189" width="1.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="627.30" y="1199.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (28 samples, 0.18%)</title><rect x="1186.9" y="1877" width="2.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="1189.87" y="1887.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="640.2" y="2933" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="643.19" y="2943.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="632.4" y="597" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="635.43" y="607.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt;, (anonymous namespace)::CVPLatticeVal, llvm::DenseMapInfo&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt; &gt;, llvm::detail::DenseMapPair&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt;, (anonymous namespace)::CVPLatticeVal&gt; &gt;, llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt;, (anonymous namespace)::CVPLatti? (2 samples, 0.01%)</title><rect x="615.8" y="4373" width="0.1" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="618.79" y="4383.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (3 samples, 0.02%)</title><rect x="726.4" y="3621" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="729.40" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.3" y="453" width="0.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="626.33" y="463.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="1020.4" y="3621" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="1023.42" y="3631.5" ></text>
</g>
<g >
<title>0x1258cfc3b (3 samples, 0.02%)</title><rect x="12.5" y="69" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="15.46" y="79.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="656.7" y="2165" width="0.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="659.69" y="2175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.05%)</title><rect x="627.9" y="2069" width="0.6" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="630.88" y="2079.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="619.4" y="373" width="0.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="622.44" y="383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (6 samples, 0.04%)</title><rect x="619.4" y="2309" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="622.37" y="2319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2133" width="2.1" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="633.34" y="2143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1973" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="623.64" y="1983.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm::Value const*, unsigned long long) (3 samples, 0.02%)</title><rect x="595.7" y="4373" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="598.71" y="4383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="165" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="635.43" y="175.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^351^TOP-COMPILE-FILE.30 (4 samples, 0.03%)</title><rect x="823.4" y="2021" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="826.44" y="2031.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (63 samples, 0.40%)</title><rect x="273.8" y="293" width="4.7" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="276.78" y="303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="597" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="628.94" y="607.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (6 samples, 0.04%)</title><rect x="1164.8" y="3573" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1167.85" y="3583.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (5 samples, 0.03%)</title><rect x="698.1" y="3605" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="701.12" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1413" width="1.0" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="627.30" y="1423.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous namespace)::Query const&amp;) (3 samples, 0.02%)</title><rect x="603.8" y="4309" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="606.84" y="4319.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (4 samples, 0.03%)</title><rect x="628.2" y="1365" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="631.18" y="1375.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (6 samples, 0.04%)</title><rect x="1177.5" y="3701" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1180.53" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="197" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="622.15" y="207.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="620.3" y="2629" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="623.27" y="2639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="2053" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="622.37" y="2063.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.18 (5 samples, 0.03%)</title><rect x="640.2" y="2997" width="0.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="643.19" y="3007.5" ></text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (8 samples, 0.05%)</title><rect x="981.5" y="3717" width="0.6" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="984.53" y="3727.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (4 samples, 0.03%)</title><rect x="665.6" y="3349" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="668.57" y="3359.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core::T_O&gt;) (7 samples, 0.04%)</title><rect x="1175.1" y="3541" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="1178.07" y="3551.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="625.8" y="1381" width="0.1" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="628.79" y="1391.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::X86MCCodeEmitter::encodeInstruction(llvm::MCInst const&amp;, llvm::raw_ostream&amp;, llvm::SmallVectorImpl&lt;llvm::MCFixup&gt;&amp;, llvm::MCSubtargetInfo const&amp;) const (3 samples, 0.02%)</title><rect x="586.7" y="4309" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="589.68" y="4319.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.208 (7,680 samples, 48.58%)</title><rect x="616.3" y="4069" width="573.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="619.31" y="4079.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.208</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="2165" width="0.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="623.49" y="2175.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (28 samples, 0.18%)</title><rect x="876.1" y="3429" width="2.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="879.06" y="3439.5" ></text>
</g>
<g >
<title>0x1110a4be6 (16 samples, 0.10%)</title><rect x="622.1" y="1781" width="1.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="625.13" y="1791.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="627.5" y="1813" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="630.51" y="1823.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="628.6" y="2501" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="631.62" y="2511.5" ></text>
</g>
<g >
<title>`llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (3 samples, 0.02%)</title><rect x="997.7" y="2981" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1000.65" y="2991.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="619.4" y="661" width="0.4" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="622.44" y="671.5" ></text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (3 samples, 0.02%)</title><rect x="880.3" y="3749" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="883.31" y="3759.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="622.4" y="437" width="0.7" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="625.35" y="447.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (24 samples, 0.15%)</title><rect x="630.6" y="1637" width="1.8" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="633.57" y="1647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2453" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="633.04" y="2463.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (24 samples, 0.15%)</title><rect x="619.1" y="3205" width="1.8" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="622.07" y="3215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="997" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="622.15" y="1007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1381" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="630.65" y="1391.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^METHOD^^.35 (2 samples, 0.01%)</title><rect x="14.9" y="453" width="0.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="17.85" y="463.5" ></text>
</g>
<g >
<title>`combineInstructionsOverFunction(llvm::Function&amp;, llvm::InstCombineWorklist&amp;, llvm::AAResults*, llvm::AssumptionCache&amp;, llvm::TargetLibraryInfo&amp;, llvm::DominatorTree&amp;, llvm::OptimizationRemarkEmitter&amp;, bool, llvm::LoopInfo*) (4 samples, 0.03%)</title><rect x="825.5" y="2885" width="0.3" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="828.45" y="2895.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.4" y="1269" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="633.42" y="1279.5" ></text>
</g>
<g >
<title>0x1110a5606 (18 samples, 0.11%)</title><rect x="627.1" y="2373" width="1.4" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="630.13" y="2383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="627.7" y="933" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="630.65" y="943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (37 samples, 0.23%)</title><rect x="620.9" y="2245" width="2.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="623.86" y="2255.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (13 samples, 0.08%)</title><rect x="904.8" y="3701" width="1.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="907.80" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="632.4" y="2901" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="635.43" y="2911.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.3" y="965" width="0.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="626.33" y="975.5" ></text>
</g>
<g >
<title>0x1501b4cfb (59 samples, 0.37%)</title><rect x="282.4" y="53" width="4.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="285.37" y="63.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2501" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="633.04" y="2511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="627.1" y="1605" width="0.4" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="630.13" y="1615.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="2405" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="623.49" y="2415.5" ></text>
</g>
<g >
<title>`CODEGEN-SPECIAL-OPERATOR^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="981" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="826.51" y="991.5" ></text>
</g>
<g >
<title>0x110cd62a2 (10 samples, 0.06%)</title><rect x="12.8" y="373" width="0.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="15.76" y="383.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::run() (2 samples, 0.01%)</title><rect x="657.4" y="2357" width="0.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="660.44" y="2367.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.04%)</title><rect x="638.2" y="3605" width="0.4" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="641.18" y="3615.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (44 samples, 0.28%)</title><rect x="1086.8" y="3605" width="3.3" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="1089.85" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="627.1" y="1429" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="630.13" y="1439.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="874.6" y="3285" width="0.1" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="877.57" y="3295.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::intersectAssumeOrGuardBlockValueConstantRange(llvm::Value*, llvm::ValueLatticeElement&amp;, llvm::Instruction*) (2 samples, 0.01%)</title><rect x="588.1" y="4405" width="0.1" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="591.09" y="4415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="620.3" y="2517" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="623.27" y="2527.5" ></text>
</g>
<g >
<title>`GC_finish_collection (2 samples, 0.01%)</title><rect x="1087.0" y="3589" width="0.1" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="1090.00" y="3599.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (65 samples, 0.41%)</title><rect x="273.6" y="805" width="4.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="276.63" y="815.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (20 samples, 0.13%)</title><rect x="638.7" y="3477" width="1.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="641.70" y="3487.5" ></text>
</g>
<g >
<title>`CODEGEN^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="949" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="826.51" y="959.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3845" width="284.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="13.00" y="3855.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="638.3" y="3461" width="0.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="641.25" y="3471.5" ></text>
</g>
<g >
<title>`core::utf_8_decoder(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="287.2" y="53" width="0.2" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="290.22" y="63.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (17 samples, 0.11%)</title><rect x="620.9" y="1701" width="1.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="623.86" y="1711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (17 samples, 0.11%)</title><rect x="620.9" y="1797" width="1.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="623.86" y="1807.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="725" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="635.43" y="735.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.03%)</title><rect x="649.0" y="3445" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="652.00" y="3455.5" ></text>
</g>
<g >
<title>`core::coerce::functionDesignator(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="904.6" y="3685" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="907.65" y="3695.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (3 samples, 0.02%)</title><rect x="663.9" y="3349" width="0.3" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="666.93" y="3359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="1605" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="626.33" y="1615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1957" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="622.15" y="1967.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^264^TOP-COMPILE-FILE.159 (3,806 samples, 24.07%)</title><rect x="10.0" y="1589" width="284.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (1,469 samples, 9.29%)</title><rect x="21.2" y="597" width="109.6" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="24.20" y="607.5" >`inline-prep...</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="622.1" y="245" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="625.13" y="255.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (361 samples, 2.28%)</title><rect x="244.3" y="213" width="26.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="247.30" y="223.5" >`..</text>
</g>
<g >
<title>`llvm::LiveVariables::HandlePhysRegDef(unsigned int, llvm::MachineInstr*, llvm::SmallVectorImpl&lt;unsigned int&gt;&amp;) (3 samples, 0.02%)</title><rect x="584.1" y="4373" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="587.14" y="4383.5" ></text>
</g>
<g >
<title>0x1501b4cfb (2 samples, 0.01%)</title><rect x="240.7" y="117" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="243.72" y="127.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.207 (7,680 samples, 48.58%)</title><rect x="616.3" y="4085" width="573.3" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="619.31" y="4095.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.207</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (829 samples, 5.24%)</title><rect x="174.3" y="325" width="61.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="177.28" y="335.5" >`CONVE..</text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (102 samples, 0.65%)</title><rect x="620.9" y="2709" width="7.6" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="623.86" y="2719.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="627.7" y="1061" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="630.65" y="1071.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.55 (6 samples, 0.04%)</title><rect x="823.3" y="2965" width="0.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="826.29" y="2975.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.32 (20 samples, 0.13%)</title><rect x="876.3" y="3253" width="1.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="879.28" y="3263.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.4" y="405" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="632.45" y="415.5" ></text>
</g>
<g >
<title>0x1501b4cfb (111 samples, 0.70%)</title><rect x="278.5" y="725" width="8.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="281.48" y="735.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="1158.1" y="3429" width="0.1" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="1161.05" y="3439.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.9" y="645" width="0.2" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="628.94" y="655.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="1557" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="622.15" y="1567.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (69 samples, 0.44%)</title><rect x="852.0" y="3461" width="5.2" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="855.03" y="3471.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef&lt;llvm::Constant*&gt;, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (3 samples, 0.02%)</title><rect x="610.9" y="4341" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="613.86" y="4351.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="325" width="109.6" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="24.20" y="335.5" >`CONVERT^CLEA..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (60 samples, 0.38%)</title><rect x="236.2" y="325" width="4.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="239.24" y="335.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1020.8" y="3653" width="0.1" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="1023.79" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="789" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="630.95" y="799.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.22 (20 samples, 0.13%)</title><rect x="876.3" y="3045" width="1.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="879.28" y="3055.5" ></text>
</g>
<g >
<title>`GC_mark_from (14 samples, 0.09%)</title><rect x="1169.7" y="3413" width="1.0" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="1172.70" y="3423.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (102 samples, 0.65%)</title><rect x="620.9" y="2789" width="7.6" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="623.86" y="2799.5" ></text>
</g>
<g >
<title>0x1110a5606 (12 samples, 0.08%)</title><rect x="626.2" y="725" width="0.9" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="629.16" y="735.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.94 (7 samples, 0.04%)</title><rect x="1188.0" y="373" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="1190.98" y="383.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunction&amp;) (4 samples, 0.03%)</title><rect x="824.3" y="2821" width="0.3" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="827.26" y="2831.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.65 (25 samples, 0.16%)</title><rect x="1186.9" y="1557" width="1.9" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="1189.94" y="1567.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^124^TOP-COMPILE-FILE.325 (829 samples, 5.24%)</title><rect x="174.3" y="389" width="61.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="177.28" y="399.5" >`conve..</text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (4 samples, 0.03%)</title><rect x="141.9" y="85" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="144.89" y="95.5" ></text>
</g>
<g >
<title>0x114007367 (47 samples, 0.30%)</title><rect x="10.0" y="661" width="3.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.8" y="1221" width="0.1" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="628.79" y="1231.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="1176.0" y="3797" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="1178.97" y="3807.5" ></text>
</g>
<g >
<title>0x1110a62f6 (4 samples, 0.03%)</title><rect x="625.3" y="693" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="628.27" y="703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="773" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="626.33" y="783.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (830 samples, 5.25%)</title><rect x="174.3" y="629" width="61.9" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="177.28" y="639.5" >`COMBI..</text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp;) (5 samples, 0.03%)</title><rect x="877.0" y="2677" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="880.03" y="2687.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="165" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="622.15" y="175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2805" width="2.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="633.34" y="2815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="709" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="635.43" y="719.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="607.5" y="4261" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="610.50" y="4271.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="626.2" y="1573" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="629.16" y="1583.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.7 (16 samples, 0.10%)</title><rect x="635.6" y="3557" width="1.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="638.57" y="3567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.4" y="1525" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="633.42" y="1535.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="623.3" y="1381" width="0.2" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="626.33" y="1391.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="650.2" y="3477" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="653.20" y="3487.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="623.7" y="1813" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="626.70" y="1823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="181" width="0.7" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="625.35" y="191.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (6 samples, 0.04%)</title><rect x="1021.2" y="3541" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="1024.24" y="3551.5" ></text>
</g>
<g >
<title>0x1258cfc3b (63 samples, 0.40%)</title><rect x="273.8" y="341" width="4.7" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="276.78" y="351.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="622.1" y="885" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="625.13" y="895.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (108 samples, 0.68%)</title><rect x="810.7" y="3637" width="8.0" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="813.67" y="3647.5" ></text>
</g>
<g >
<title>0x111337578 (89 samples, 0.56%)</title><rect x="1182.9" y="3381" width="6.7" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1185.91" y="3391.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.214 (7,680 samples, 48.58%)</title><rect x="616.3" y="3973" width="573.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="619.31" y="3983.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.214</text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (15 samples, 0.09%)</title><rect x="635.6" y="3205" width="1.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="638.64" y="3215.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.6 (6 samples, 0.04%)</title><rect x="823.3" y="2677" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="826.29" y="2687.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (294 samples, 1.86%)</title><rect x="147.5" y="149" width="21.9" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="150.49" y="159.5" >`..</text>
</g>
<g >
<title>`core::CxxObject_O::~CxxObject_O() (2 samples, 0.01%)</title><rect x="834.2" y="3637" width="0.1" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="837.19" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (27 samples, 0.17%)</title><rect x="630.3" y="3173" width="2.1" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="633.34" y="3183.5" ></text>
</g>
<g >
<title>`translate-instruction.lisp-translate-instruction435^183^TOP-COMPILE-FILE.726 (24 samples, 0.15%)</title><rect x="1184.9" y="2325" width="1.8" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="1187.92" y="2335.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="623.1" y="1461" width="0.2" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="626.10" y="1471.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (11 samples, 0.07%)</title><rect x="627.7" y="2133" width="0.8" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="630.65" y="2143.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="623.7" y="1989" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="626.70" y="1999.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type*, llvm::DataLayout const&amp;) (3 samples, 0.02%)</title><rect x="601.6" y="4341" width="0.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="604.60" y="4351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="2517" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="622.15" y="2527.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T))^METHOD^^ (5 samples, 0.03%)</title><rect x="638.2" y="3573" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="641.18" y="3583.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (21 samples, 0.13%)</title><rect x="656.7" y="2741" width="1.6" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="659.69" y="2751.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.65 (89 samples, 0.56%)</title><rect x="1182.9" y="3413" width="6.7" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="1185.91" y="3423.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (24 samples, 0.15%)</title><rect x="619.1" y="3493" width="1.8" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="622.07" y="3503.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="1176.9" y="3173" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="1179.94" y="3183.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.8" y="1413" width="0.1" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="628.79" y="1423.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="624.0" y="1157" width="0.1" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="627.00" y="1167.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="664.5" y="3429" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="667.53" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="309" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="631.18" y="319.5" ></text>
</g>
<g >
<title>`cc_fdefinition (21 samples, 0.13%)</title><rect x="1110.4" y="3733" width="1.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1113.36" y="3743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (8 samples, 0.05%)</title><rect x="627.9" y="1733" width="0.6" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="630.88" y="1743.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (43 samples, 0.27%)</title><rect x="823.3" y="3317" width="3.2" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="826.29" y="3327.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::DoInstructionSelection() (13 samples, 0.08%)</title><rect x="580.9" y="4341" width="0.9" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="583.85" y="4351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="628.2" y="1061" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="631.18" y="1071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="85" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="635.43" y="95.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (4 samples, 0.03%)</title><rect x="625.3" y="1061" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="628.27" y="1071.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.46 (7,680 samples, 48.58%)</title><rect x="616.3" y="4421" width="573.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="619.31" y="4431.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.46</text>
</g>
<g >
<title>`llvmo::ClaspJIT_O::addModule(gctools::smart_ptr&lt;llvmo::Module_O&gt;) (5 samples, 0.03%)</title><rect x="872.5" y="2981" width="0.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="875.48" y="2991.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (2 samples, 0.01%)</title><rect x="878.3" y="3333" width="0.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="881.30" y="3343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="627.2" y="1093" width="0.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="630.21" y="1103.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (126 samples, 0.80%)</title><rect x="620.9" y="3157" width="9.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="623.86" y="3167.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (64 samples, 0.40%)</title><rect x="273.7" y="773" width="4.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="276.71" y="783.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="626.2" y="869" width="0.9" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="629.16" y="879.5" ></text>
</g>
<g >
<title>`core::Closure_O::setf_objectFile(gctools::smart_ptr&lt;core::ObjectFile_O&gt;) (5 samples, 0.03%)</title><rect x="1113.9" y="3733" width="0.4" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="1116.94" y="3743.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (2 samples, 0.01%)</title><rect x="801.9" y="3637" width="0.1" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="804.87" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="624.0" y="1333" width="0.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="627.00" y="1343.5" ></text>
</g>
<g >
<title>0x11171939a (5 samples, 0.03%)</title><rect x="654.6" y="3509" width="0.4" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="657.60" y="3519.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (11 samples, 0.07%)</title><rect x="1090.2" y="3637" width="0.8" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="1093.20" y="3647.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceSet(unsigned long, gctools::smart_ptr&lt;core::T_O&gt;) (6 samples, 0.04%)</title><rect x="1046.5" y="3701" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1049.54" y="3711.5" ></text>
</g>
<g >
<title>0x1501b4cfb (111 samples, 0.70%)</title><rect x="278.5" y="757" width="8.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="281.48" y="767.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.3" y="2117" width="0.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="623.27" y="2127.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="640.3" y="2821" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="643.34" y="2831.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (20 samples, 0.13%)</title><rect x="622.1" y="1989" width="1.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="625.13" y="1999.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T))^METHOD^^ (3 samples, 0.02%)</title><rect x="650.8" y="3573" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="653.79" y="3583.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="645.8" y="3205" width="0.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="648.79" y="3215.5" ></text>
</g>
<g >
<title>`unsigned int llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock, false&gt; &gt;::runDFS&lt;false, bool (*)(llvm::MachineBasicBlock*, llvm::MachineBasicBlock*)&gt;(llvm::MachineBasicBlock*, unsigned int, bool (*)(llvm::MachineBasicBlock*, llvm::MachineBasicBlock*), unsigned int) (4 samples, 0.03%)</title><rect x="585.5" y="4373" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="588.48" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2597" width="2.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="633.34" y="2607.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1179.0" y="3749" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1182.03" y="3759.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.32 (3 samples, 0.02%)</title><rect x="874.0" y="3445" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="876.97" y="3455.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE.15 (3,806 samples, 24.07%)</title><rect x="10.0" y="1461" width="284.1" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="13.00" y="1471.5" >`compile-file.lsp-compile-file52^33^TO..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="624.1" y="1685" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="627.15" y="1695.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (31 samples, 0.20%)</title><rect x="1186.8" y="2181" width="2.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1189.79" y="2191.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (98 samples, 0.62%)</title><rect x="286.8" y="1045" width="7.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="289.77" y="1055.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="373" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="635.43" y="383.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (11 samples, 0.07%)</title><rect x="665.0" y="3429" width="0.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="668.05" y="3439.5" ></text>
</g>
<g >
<title>`full-inlining-pass.lisp-full-inlining-pass397^58^TOP-COMPILE-FILE.9 (7,224 samples, 45.70%)</title><rect x="636.8" y="3797" width="539.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="639.76" y="3807.5" >`full-inlining-pass.lisp-full-inlining-pass397^58^TOP-COMPILE-FILE.9</text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="628.0" y="85" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="630.95" y="95.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.42 (4 samples, 0.03%)</title><rect x="823.4" y="2277" width="0.3" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="826.44" y="2287.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (2 samples, 0.01%)</title><rect x="1141.0" y="3429" width="0.1" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="1143.96" y="3439.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (4 samples, 0.03%)</title><rect x="607.2" y="4309" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="610.20" y="4319.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD^^ (3 samples, 0.02%)</title><rect x="660.4" y="3301" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="663.42" y="3311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="805" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="626.10" y="815.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.12 (6 samples, 0.04%)</title><rect x="823.3" y="2629" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="826.29" y="2639.5" ></text>
</g>
<g >
<title>`wrapped_core__load_source_T_spboolboolcore__T_sp (3,806 samples, 24.07%)</title><rect x="10.0" y="4165" width="284.1" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="13.00" y="4175.5" >`wrapped_core__load_source_T_spboolboo..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="632.4" y="2501" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="635.43" y="2511.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="997.7" y="2965" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1000.72" y="2975.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (82 samples, 0.52%)</title><rect x="1140.3" y="3589" width="6.1" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="1143.29" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.6" y="2613" width="0.2" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="623.64" y="2623.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="3525" width="284.1" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="13.00" y="3535.5" >`core::FuncallableInstance_O::funcalla..</text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (31 samples, 0.20%)</title><rect x="1186.8" y="2117" width="2.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="1189.79" y="2127.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (71 samples, 0.45%)</title><rect x="281.5" y="421" width="5.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="284.47" y="431.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.94 (77 samples, 0.49%)</title><rect x="1183.8" y="2693" width="5.8" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="1186.80" y="2703.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (572 samples, 3.62%)</title><rect x="130.8" y="341" width="42.7" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="133.84" y="351.5" >`con..</text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="643.3" y="3573" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="646.33" y="3583.5" ></text>
</g>
<g >
<title>`REMOVE-USELESS-INSTRUCTIONS-WITH-WORKLIST^CLEAVIR-REMOVE-USELESS-INSTRUCTIONS^FN^^ (10 samples, 0.06%)</title><rect x="1022.0" y="3749" width="0.7" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="1024.98" y="3759.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.8 (16 samples, 0.10%)</title><rect x="635.6" y="3541" width="1.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="638.57" y="3551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (4 samples, 0.03%)</title><rect x="141.6" y="37" width="0.3" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="144.59" y="47.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp;) (3 samples, 0.02%)</title><rect x="875.0" y="2565" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="878.01" y="2575.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.3" y="2197" width="0.1" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="623.27" y="2207.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (12 samples, 0.08%)</title><rect x="626.2" y="485" width="0.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="629.16" y="495.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (31 samples, 0.20%)</title><rect x="1011.2" y="3493" width="2.3" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="1014.16" y="3503.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.32 (9 samples, 0.06%)</title><rect x="997.6" y="3573" width="0.6" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="1000.58" y="3583.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="1157.7" y="3365" width="0.1" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="1160.68" y="3375.5" ></text>
</g>
<g >
<title>0x111521403 (2 samples, 0.01%)</title><rect x="650.3" y="3349" width="0.1" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="653.27" y="3359.5" ></text>
</g>
<g >
<title>0x123711728 (1,469 samples, 9.29%)</title><rect x="21.2" y="469" width="109.6" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="24.20" y="479.5" >0x123711728</text>
</g>
<g >
<title>`CLASS-GET^EXT^FN^^ (6 samples, 0.04%)</title><rect x="976.5" y="3717" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="979.45" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="2037" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="626.70" y="2047.5" ></text>
</g>
<g >
<title>0x1110a4be6 (13 samples, 0.08%)</title><rect x="624.3" y="501" width="1.0" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="627.30" y="511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="3205" width="2.1" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="633.34" y="3215.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="625.3" y="1205" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="628.27" y="1215.5" ></text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="874.0" y="3557" width="0.2" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="876.97" y="3567.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef&lt;llvm::Constant*&gt;, bool, llvm::Optional&lt;unsigned int&gt;, llvm::Type*) (2 samples, 0.01%)</title><rect x="600.4" y="4325" width="0.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="603.41" y="4335.5" ></text>
</g>
<g >
<title>`core::core__load_source(gctools::smart_ptr&lt;core::T_O&gt;, bool, bool, gctools::smart_ptr&lt;core::T_O&gt;) (3,806 samples, 24.07%)</title><rect x="10.0" y="4453" width="284.1" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="13.00" y="4463.5" >`core::core__load_source(gctools::smar..</text>
</g>
<g >
<title>0x1257602e2 (4 samples, 0.03%)</title><rect x="623.7" y="1749" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="626.70" y="1759.5" ></text>
</g>
<g >
<title>0x110c6316d (2 samples, 0.01%)</title><rect x="1057.0" y="3733" width="0.1" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1059.99" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="627.1" y="1941" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="630.13" y="1951.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (7 samples, 0.04%)</title><rect x="628.0" y="1621" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="630.95" y="1631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.8" y="1285" width="0.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="628.79" y="1295.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="879.3" y="3605" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="882.34" y="3615.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::~ScalarEvolution() (2 samples, 0.01%)</title><rect x="615.0" y="4357" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="618.04" y="4367.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap&lt;llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo&lt;llvm::Constant*&gt;, llvm::detail::DenseMapPair&lt;llvm::Constant*, llvm::Constant*&gt; &gt;&amp;) (3 samples, 0.02%)</title><rect x="610.6" y="4357" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="613.64" y="4367.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="878.9" y="3461" width="0.1" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="881.90" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.8" y="1557" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="628.79" y="1567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="1973" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="635.43" y="1983.5" ></text>
</g>
<g >
<title>`GC_notify_all_builder (2 samples, 0.01%)</title><rect x="798.3" y="3573" width="0.1" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="801.28" y="3583.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="624.3" y="1125" width="1.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="627.30" y="1135.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="757" width="0.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="633.64" y="767.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (102 samples, 0.65%)</title><rect x="620.9" y="2581" width="7.6" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="623.86" y="2591.5" ></text>
</g>
<g >
<title>`STANDARD-INSTANCE-ACCESS^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="902.0" y="3589" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="905.03" y="3599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'EVAL-WHEN) T T T))^METHOD^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="405" width="109.6" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="24.20" y="415.5" >`CONVERT-SPEC..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="620.6" y="2197" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="623.64" y="2207.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (96 samples, 0.61%)</title><rect x="286.9" y="789" width="7.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="289.92" y="799.5" ></text>
</g>
<g >
<title>`runCVP(llvm::Module&amp;) (6 samples, 0.04%)</title><rect x="615.7" y="4437" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="618.71" y="4447.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (7 samples, 0.04%)</title><rect x="874.9" y="3269" width="0.6" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="877.94" y="3279.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="628.2" y="853" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="631.18" y="863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (7 samples, 0.04%)</title><rect x="628.0" y="1493" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="630.95" y="1503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="2469" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="622.15" y="2479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="2165" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="622.15" y="2175.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.74 (2 samples, 0.01%)</title><rect x="656.7" y="2293" width="0.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="659.69" y="2303.5" ></text>
</g>
<g >
<title>0x110d5d0f2 (2 samples, 0.01%)</title><rect x="727.2" y="3653" width="0.1" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="730.15" y="3663.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (6 samples, 0.04%)</title><rect x="641.0" y="3429" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="644.02" y="3439.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="632.4" y="2709" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="635.43" y="2719.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (7 samples, 0.04%)</title><rect x="628.0" y="1445" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="630.95" y="1455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.8" y="1013" width="0.1" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="628.79" y="1023.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::DAGCombiner::combine(llvm::SDNode*) (7 samples, 0.04%)</title><rect x="579.1" y="4325" width="0.6" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="582.14" y="4335.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.14 (21 samples, 0.13%)</title><rect x="656.7" y="2869" width="1.6" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="659.69" y="2879.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((BLOCK-AST T))^METHOD^^.152 (63 samples, 0.40%)</title><rect x="273.8" y="645" width="4.7" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="276.78" y="655.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (10 samples, 0.06%)</title><rect x="1012.1" y="3397" width="0.8" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="1015.13" y="3407.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.7 (5 samples, 0.03%)</title><rect x="640.2" y="3253" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="643.19" y="3263.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="624.0" y="1221" width="0.1" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="627.00" y="1231.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="1237" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="626.33" y="1247.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.20 (7 samples, 0.04%)</title><rect x="874.9" y="2805" width="0.6" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="877.94" y="2815.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (36 samples, 0.23%)</title><rect x="10.0" y="245" width="2.7" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="14.9" y="181" width="0.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="17.85" y="191.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS^CLEAVIR-PARTIAL-INLINING^FN^^ (7 samples, 0.04%)</title><rect x="654.5" y="3557" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="657.53" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.8" y="85" width="0.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="626.77" y="95.5" ></text>
</g>
<g >
<title>0x1258cfc3b (2 samples, 0.01%)</title><rect x="173.6" y="261" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="176.61" y="271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2277" width="2.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="633.34" y="2287.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="629.4" y="1605" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="632.45" y="1615.5" ></text>
</g>
<g >
<title>0x11171939a (4 samples, 0.03%)</title><rect x="667.1" y="3653" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="670.06" y="3663.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (4 samples, 0.03%)</title><rect x="878.3" y="3397" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="881.30" y="3407.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (23 samples, 0.15%)</title><rect x="287.4" y="85" width="1.7" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="290.37" y="95.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::MachineScheduler::runOnMachineFunction(llvm::MachineFunction&amp;) (17 samples, 0.11%)</title><rect x="575.3" y="4405" width="1.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="578.26" y="4415.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (32 samples, 0.20%)</title><rect x="645.5" y="3413" width="2.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="648.49" y="3423.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (20 samples, 0.13%)</title><rect x="622.1" y="2085" width="1.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="625.13" y="2095.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2389" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="633.04" y="2399.5" ></text>
</g>
<g >
<title>0x110d5d171 (3 samples, 0.02%)</title><rect x="1067.4" y="3733" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1070.44" y="3743.5" ></text>
</g>
<g >
<title>`CODEGEN-SPECIAL-OPERATOR^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="821" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="826.51" y="831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1573" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="626.70" y="1583.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (2 samples, 0.01%)</title><rect x="1175.2" y="3509" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1178.22" y="3519.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (5 samples, 0.03%)</title><rect x="620.3" y="2565" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="623.27" y="2575.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="878.3" y="3381" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="881.30" y="3391.5" ></text>
</g>
<g >
<title>0x1258cfc3b (65 samples, 0.41%)</title><rect x="273.6" y="885" width="4.9" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="276.63" y="895.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (7 samples, 0.04%)</title><rect x="1176.9" y="3749" width="0.6" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="1179.94" y="3759.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="341" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="635.43" y="351.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD^^ (2 samples, 0.01%)</title><rect x="645.8" y="3173" width="0.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="648.79" y="3183.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (6 samples, 0.04%)</title><rect x="876.5" y="2645" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="879.51" y="2655.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="624.3" y="869" width="1.0" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="627.30" y="879.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T T T T))^METHOD^^ (8 samples, 0.05%)</title><rect x="642.5" y="3653" width="0.6" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="645.51" y="3663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (361 samples, 2.28%)</title><rect x="244.3" y="261" width="26.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="247.30" y="271.5" >`..</text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (829 samples, 5.24%)</title><rect x="174.3" y="245" width="61.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="177.28" y="255.5" >`conve..</text>
</g>
<g >
<title>`asdf.lisp-^10341^TOP-COMPILE-FILE.44 (3,806 samples, 24.07%)</title><rect x="10.0" y="3381" width="284.1" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="13.00" y="3391.5" >`asdf.lisp-^10341^TOP-COMPILE-FILE.44</text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.209 (7,680 samples, 48.58%)</title><rect x="616.3" y="4053" width="573.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="619.31" y="4063.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.209</text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (18 samples, 0.11%)</title><rect x="13.5" y="357" width="1.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="16.51" y="367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="628.2" y="1045" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="631.18" y="1055.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (65 samples, 0.41%)</title><rect x="10.0" y="773" width="4.9" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>`CODEGEN-LET/LET*^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="2117" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="826.44" y="2127.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.24 (20 samples, 0.13%)</title><rect x="876.3" y="3029" width="1.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="879.28" y="3039.5" ></text>
</g>
<g >
<title>`llvm::orc::IRTransformLayer&lt;llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;, std::__1::function&lt;std::__1::shared_ptr&lt;llvm::Module&gt; (std::__1::shared_ptr&lt;llvm::Module&gt;)&gt; &gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (4 samples, 0.03%)</title><rect x="643.5" y="2917" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="646.48" y="2927.5" ></text>
</g>
<g >
<title>0x1110a5606 (13 samples, 0.08%)</title><rect x="626.2" y="1493" width="0.9" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="629.16" y="1503.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (8 samples, 0.05%)</title><rect x="621.5" y="581" width="0.6" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="624.53" y="591.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef&lt;llvm::Value*&gt;, bool, llvm::Optional&lt;unsigned int&gt;, llvm::Type*) (2 samples, 0.01%)</title><rect x="589.6" y="4373" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="592.59" y="4383.5" ></text>
</g>
<g >
<title>`llvm::GVN::runImpl(llvm::Function&amp;, llvm::AssumptionCache&amp;, llvm::DominatorTree&amp;, llvm::TargetLibraryInfo const&amp;, llvm::AAResults&amp;, llvm::MemoryDependenceResults*, llvm::LoopInfo*, llvm::OptimizationRemarkEmitter*) (9 samples, 0.06%)</title><rect x="592.5" y="4453" width="0.7" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="595.50" y="4463.5" ></text>
</g>
<g >
<title>`CODEGEN-LET*^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="2133" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="826.44" y="2143.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="623.1" y="245" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="626.10" y="255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.3" y="1877" width="0.1" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="623.27" y="1887.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="4341" width="284.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="13.00" y="4351.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="613" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="632.45" y="623.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (2 samples, 0.01%)</title><rect x="1187.8" y="533" width="0.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="1190.76" y="543.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::SelectBasicBlock(llvm::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::Instruction, false, false, void&gt;, false, true&gt;, llvm::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::Instruction, false, false, void&gt;, false, true&gt;, bool&amp;) (17 samples, 0.11%)</title><rect x="582.1" y="4357" width="1.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="585.12" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="933" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="633.64" y="943.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (572 samples, 3.62%)</title><rect x="130.8" y="437" width="42.7" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="133.84" y="447.5" >`COM..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (37 samples, 0.23%)</title><rect x="620.9" y="2197" width="2.7" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="623.86" y="2207.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (24 samples, 0.15%)</title><rect x="619.1" y="2981" width="1.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="622.07" y="2991.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (36 samples, 0.23%)</title><rect x="10.0" y="485" width="2.7" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (38 samples, 0.24%)</title><rect x="1011.0" y="3573" width="2.8" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="1014.01" y="3583.5" ></text>
</g>
<g >
<title>`combineInstructionsOverFunction(llvm::Function&amp;, llvm::InstCombineWorklist&amp;, llvm::AAResults*, llvm::AssumptionCache&amp;, llvm::TargetLibraryInfo&amp;, llvm::DominatorTree&amp;, llvm::OptimizationRemarkEmitter&amp;, bool, llvm::LoopInfo*) (3 samples, 0.02%)</title><rect x="826.1" y="2885" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="829.05" y="2895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="725" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="628.94" y="735.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (9 samples, 0.06%)</title><rect x="293.3" y="85" width="0.7" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="296.34" y="95.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (7 samples, 0.04%)</title><rect x="639.0" y="3365" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="642.00" y="3375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="3253" width="2.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="633.34" y="3263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="1669" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="622.44" y="1679.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2629" width="284.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="13.00" y="2639.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="628.9" y="2533" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="631.92" y="2543.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (17 samples, 0.11%)</title><rect x="143.5" y="69" width="1.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="146.46" y="79.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&amp;, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*) (3 samples, 0.02%)</title><rect x="607.5" y="4309" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="610.50" y="4319.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="627.7" y="1045" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="630.65" y="1055.5" ></text>
</g>
<g >
<title>0x1110a5456 (13 samples, 0.08%)</title><rect x="626.2" y="1605" width="0.9" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="629.16" y="1615.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (31 samples, 0.20%)</title><rect x="972.1" y="3653" width="2.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="975.12" y="3663.5" ></text>
</g>
<g >
<title>0x1257602e2 (13 samples, 0.08%)</title><rect x="624.3" y="1061" width="1.0" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="627.30" y="1071.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="1621" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="622.15" y="1631.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T))^METHOD^^ (3 samples, 0.02%)</title><rect x="1188.2" y="117" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="1191.21" y="127.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.24 (12 samples, 0.08%)</title><rect x="872.5" y="3157" width="0.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="875.48" y="3167.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.13 (43 samples, 0.27%)</title><rect x="823.3" y="3349" width="3.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="826.29" y="3359.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::T_O&gt; (core::HashTable_O::*)(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (300 samples, 1.90%)</title><rect x="1126.0" y="3685" width="22.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="1129.03" y="3695.5" >`..</text>
</g>
<g >
<title>`CODEGEN^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="1333" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="826.51" y="1343.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.6" y="2325" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="623.64" y="2335.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (5 samples, 0.03%)</title><rect x="619.4" y="101" width="0.4" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="622.44" y="111.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="628.0" y="309" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="630.95" y="319.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1221" width="284.1" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="13.00" y="1231.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="628.0" y="597" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="630.95" y="607.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (17 samples, 0.11%)</title><rect x="620.9" y="1637" width="1.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="623.86" y="1647.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (20 samples, 0.13%)</title><rect x="874.3" y="3397" width="1.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="877.34" y="3407.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (31 samples, 0.20%)</title><rect x="645.6" y="3397" width="2.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="648.57" y="3407.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (93 samples, 0.59%)</title><rect x="287.1" y="277" width="6.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="290.07" y="287.5" ></text>
</g>
<g >
<title>`INVALIDATED-DISPATCH-FUNCTION^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2933" width="284.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="13.00" y="2943.5" >`INVALIDATED-DISPATCH-FUNCTION^CLOS^FN^^</text>
</g>
<g >
<title>0x123711728 (51 samples, 0.32%)</title><rect x="169.7" y="101" width="3.8" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="172.73" y="111.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="663.5" y="3365" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="666.48" y="3375.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="656.2" y="3333" width="0.2" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="659.24" y="3343.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="1797" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="635.43" y="1807.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="875.2" y="2565" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="878.24" y="2575.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (582 samples, 3.68%)</title><rect x="130.8" y="533" width="43.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="133.84" y="543.5" >`con..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (18 samples, 0.11%)</title><rect x="13.5" y="501" width="1.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="16.51" y="511.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.10 (11 samples, 0.07%)</title><rect x="643.5" y="3365" width="0.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="646.48" y="3375.5" ></text>
</g>
<g >
<title>`runCVP(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="596.9" y="4501" width="0.2" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="599.90" y="4511.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.0" y="2437" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="633.04" y="2447.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="629.4" y="1077" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="632.45" y="1087.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="624.0" y="1893" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="627.00" y="1903.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (11 samples, 0.07%)</title><rect x="823.9" y="2885" width="0.8" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="826.89" y="2895.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (23 samples, 0.15%)</title><rect x="1184.9" y="2133" width="1.7" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="1187.92" y="2143.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (3 samples, 0.02%)</title><rect x="662.1" y="3285" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="665.06" y="3295.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (2 samples, 0.01%)</title><rect x="623.3" y="901" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="626.33" y="911.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="14.9" y="565" width="0.1" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="17.85" y="575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="1061" width="0.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="622.44" y="1071.5" ></text>
</g>
<g >
<title>`core::cl__gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::HashTableBase_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (6 samples, 0.04%)</title><rect x="1152.2" y="3733" width="0.4" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="1155.16" y="3743.5" ></text>
</g>
<g >
<title>`llvm::MachineInstrExpressionTrait::getHashValue(llvm::MachineInstr const* const&amp;) (2 samples, 0.01%)</title><rect x="574.8" y="4373" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="577.81" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (6 samples, 0.04%)</title><rect x="619.4" y="1941" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="622.37" y="1951.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (4 samples, 0.03%)</title><rect x="898.2" y="3605" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="901.23" y="3615.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Function_O&gt; gctools::As&lt;gctools::smart_ptr&lt;core::Function_O&gt;, gctools::smart_ptr&lt;core::T_O&gt; &gt;(gctools::smart_ptr&lt;core::T_O&gt; const&amp;) (7 samples, 0.04%)</title><rect x="865.9" y="3653" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="868.91" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="619.4" y="133" width="0.4" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="622.44" y="143.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.7" y="1989" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="632.74" y="1999.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="630.4" y="1189" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="633.42" y="1199.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.6" y="837" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="633.64" y="847.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((FUNCALL-INSTRUCTION T ABI-X86-64 T))^METHOD^^ (24 samples, 0.15%)</title><rect x="1184.9" y="2357" width="1.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="1187.92" y="2367.5" ></text>
</g>
<g >
<title>`__dynamic_cast (17 samples, 0.11%)</title><rect x="1104.9" y="3685" width="1.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1107.91" y="3695.5" ></text>
</g>
<g >
<title>`llvm::SchedBoundary::SchedBoundary(unsigned int, llvm::Twine const&amp;) (2 samples, 0.01%)</title><rect x="576.3" y="4325" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="579.30" y="4335.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (2 samples, 0.01%)</title><rect x="1187.8" y="517" width="0.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="1190.76" y="527.5" ></text>
</g>
<g >
<title>`llvm::orc::IRTransformLayer&lt;llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;, std::__1::function&lt;std::__1::shared_ptr&lt;llvm::Module&gt; (std::__1::shared_ptr&lt;llvm::Module&gt;)&gt; &gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (10 samples, 0.06%)</title><rect x="656.8" y="2485" width="0.8" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="659.84" y="2495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="1173" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="626.33" y="1183.5" ></text>
</g>
<g >
<title>0x110cd62a2 (2 samples, 0.01%)</title><rect x="14.9" y="789" width="0.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="17.85" y="799.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="664.3" y="3397" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="667.30" y="3407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="623.7" y="2005" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="626.70" y="2015.5" ></text>
</g>
<g >
<title>0x1257b0ca3 (4 samples, 0.03%)</title><rect x="616.5" y="3829" width="0.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="619.53" y="3839.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="656.5" y="3365" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="659.47" y="3375.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.33 (8,339 samples, 52.75%)</title><rect x="567.1" y="4629" width="622.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="570.12" y="4639.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.33</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="627.7" y="1077" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="630.65" y="1087.5" ></text>
</g>
<g >
<title>`llvm::DAGTypeLegalizer::run() (4 samples, 0.03%)</title><rect x="580.5" y="4325" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="583.48" y="4335.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^91^TOP-COMPILE-FILE.98 (3,806 samples, 24.07%)</title><rect x="10.0" y="1269" width="284.1" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="13.00" y="1279.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="639.0" y="3333" width="0.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="642.00" y="3343.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (150 samples, 0.95%)</title><rect x="940.8" y="3653" width="11.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="943.85" y="3663.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (82 samples, 0.52%)</title><rect x="15.0" y="341" width="6.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="18.00" y="351.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^METHOD^^.35 (829 samples, 5.24%)</title><rect x="174.3" y="485" width="61.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="177.28" y="495.5" >`CONVE..</text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="874.9" y="2757" width="0.6" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="877.94" y="2767.5" ></text>
</g>
<g >
<title>`IRC-CCLASP-FUNCTION-CREATE^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="1182.9" y="3205" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="1185.91" y="3215.5" ></text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="1181.6" y="3765" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="1184.64" y="3775.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="633.2" y="3653" width="0.1" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="636.18" y="3663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="4101" width="284.1" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="13.00" y="4111.5" >`core::FuncallableInstance_O::funcalla..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.6" y="2053" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="623.64" y="2063.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (6 samples, 0.04%)</title><rect x="643.9" y="2917" width="0.4" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="646.85" y="2927.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="245" width="1.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="627.30" y="255.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (37 samples, 0.23%)</title><rect x="1087.1" y="3557" width="2.8" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="1090.14" y="3567.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="622.1" y="1285" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="625.13" y="1295.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="622.1" y="1605" width="1.0" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="625.13" y="1615.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="2805" width="0.3" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="635.43" y="2815.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (20 samples, 0.13%)</title><rect x="1134.9" y="3605" width="1.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1137.91" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.3" y="1525" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="626.33" y="1535.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (96 samples, 0.61%)</title><rect x="286.9" y="341" width="7.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="289.92" y="351.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (125 samples, 0.79%)</title><rect x="130.9" y="101" width="9.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="133.92" y="111.5" ></text>
</g>
<g >
<title>`inline-function.lisp-inline-function396^44^TOP-COMPILE-FILE.142 (7 samples, 0.04%)</title><rect x="879.3" y="3669" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="882.27" y="3679.5" ></text>
</g>
<g >
<title>`llvm::InlineFunction(llvm::CallSite, llvm::InlineFunctionInfo&amp;, llvm::AAResults*, bool, llvm::Function*) (4 samples, 0.03%)</title><rect x="608.5" y="4405" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="611.55" y="4415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.6" y="1141" width="0.2" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="623.64" y="1151.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="1205" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="622.44" y="1215.5" ></text>
</g>
<g >
<title>0x1110a4be6 (27 samples, 0.17%)</title><rect x="630.3" y="3333" width="2.1" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="633.34" y="3343.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.6" y="1061" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="623.64" y="1071.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.3" y="2293" width="0.1" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="623.27" y="2303.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="622.1" y="549" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="625.13" y="559.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (106 samples, 0.67%)</title><rect x="1102.4" y="3733" width="8.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1105.45" y="3743.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (36 samples, 0.23%)</title><rect x="656.7" y="3365" width="2.7" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="659.69" y="3375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (125 samples, 0.79%)</title><rect x="620.9" y="2965" width="9.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="623.86" y="2975.5" ></text>
</g>
<g >
<title>`read.lisp-read201^11^TOP-COMPILE-FILE.55 (98 samples, 0.62%)</title><rect x="286.8" y="933" width="7.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="289.77" y="943.5" ></text>
</g>
<g >
<title>0x1110a4be6 (13 samples, 0.08%)</title><rect x="626.2" y="1397" width="0.9" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="629.16" y="1407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (20 samples, 0.13%)</title><rect x="622.1" y="2069" width="1.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="625.13" y="2079.5" ></text>
</g>
<g >
<title>0x111521403 (2 samples, 0.01%)</title><rect x="651.4" y="3477" width="0.1" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="654.39" y="3487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (12 samples, 0.08%)</title><rect x="626.2" y="709" width="0.9" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="629.16" y="719.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="623.7" y="1525" width="0.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="626.70" y="1535.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="640.4" y="2741" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="643.42" y="2751.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::AssemblyWriter::printFunction(llvm::Function const*) (4 samples, 0.03%)</title><rect x="572.1" y="4485" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="575.12" y="4495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="821" width="1.0" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="627.30" y="831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="2485" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="623.64" y="2495.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::SelectAllBasicBlocks(llvm::Function const&amp;) (3 samples, 0.02%)</title><rect x="657.0" y="2341" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="659.99" y="2351.5" ></text>
</g>
<g >
<title>`core::core__instance_ref(gctools::smart_ptr&lt;core::T_O&gt;, int) (3 samples, 0.02%)</title><rect x="697.9" y="3605" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="700.89" y="3615.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (19 samples, 0.12%)</title><rect x="271.2" y="69" width="1.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="274.24" y="79.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.4" y="1381" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="633.42" y="1391.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::AtomicExpand::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="572.9" y="4421" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="575.94" y="4431.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="622.1" y="1413" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="625.13" y="1423.5" ></text>
</g>
<g >
<title>0x11118a12f (7 samples, 0.04%)</title><rect x="874.9" y="3317" width="0.6" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="877.94" y="3327.5" ></text>
</g>
<g >
<title>`runImpl(llvm::Function&amp;, llvm::LazyValueInfo*, llvm::SimplifyQuery const&amp;) (7 samples, 0.04%)</title><rect x="588.0" y="4453" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="591.02" y="4463.5" ></text>
</g>
<g >
<title>0x11171939a (12 samples, 0.08%)</title><rect x="646.8" y="3333" width="0.9" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="649.76" y="3343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="1029" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="630.95" y="1039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (102 samples, 0.65%)</title><rect x="620.9" y="2485" width="7.6" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="623.86" y="2495.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="878.9" y="3445" width="0.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="881.90" y="3455.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="622.4" y="149" width="0.7" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="625.35" y="159.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.7 (6 samples, 0.04%)</title><rect x="1021.2" y="3525" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="1024.24" y="3535.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (82 samples, 0.52%)</title><rect x="15.0" y="69" width="6.1" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="18.00" y="79.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="627.5" y="2053" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="630.51" y="2063.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T))^METHOD^^ (4 samples, 0.03%)</title><rect x="642.6" y="3589" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="645.58" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (6 samples, 0.04%)</title><rect x="619.4" y="2181" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="622.37" y="2191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="869" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="635.43" y="879.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.24 (6 samples, 0.04%)</title><rect x="823.3" y="2533" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="826.29" y="2543.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::X86PassConfig::createMachineScheduler(llvm::MachineSchedContext*) const (2 samples, 0.01%)</title><rect x="576.3" y="4389" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="579.30" y="4399.5" ></text>
</g>
<g >
<title>`core::ClosureWithSlots_O* gctools::untag_general&lt;core::ClosureWithSlots_O*&gt;(core::ClosureWithSlots_O*) (2 samples, 0.01%)</title><rect x="822.8" y="3653" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="825.84" y="3663.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.36 (2 samples, 0.01%)</title><rect x="656.7" y="1973" width="0.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="659.69" y="1983.5" ></text>
</g>
<g >
<title>`llvm::GVN::runImpl(llvm::Function&amp;, llvm::AssumptionCache&amp;, llvm::DominatorTree&amp;, llvm::TargetLibraryInfo const&amp;, llvm::AAResults&amp;, llvm::MemoryDependenceResults*, llvm::LoopInfo*, llvm::OptimizationRemarkEmitter*) (19 samples, 0.12%)</title><rect x="606.4" y="4389" width="1.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="609.38" y="4399.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="654.2" y="3493" width="0.1" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="657.15" y="3503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="623.7" y="965" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="626.70" y="975.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::Function_O&gt;) (40 samples, 0.25%)</title><rect x="278.5" y="645" width="3.0" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="281.48" y="655.5" ></text>
</g>
<g >
<title>`std::__1::enable_if&lt;!(std::is_array&lt;llvm::GenericScheduler&gt;::value), std::__1::unique_ptr&lt;llvm::GenericScheduler, std::__1::default_delete&lt;llvm::GenericScheduler&gt; &gt; &gt;::type llvm::make_unique&lt;llvm::GenericScheduler, llvm::MachineSchedContext*&amp;&gt;(llvm::MachineSchedContext*&amp;&amp;&amp;) (2 samples, 0.01%)</title><rect x="576.3" y="4357" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="579.30" y="4367.5" ></text>
</g>
<g >
<title>0x111521403 (3 samples, 0.02%)</title><rect x="877.9" y="3253" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="880.93" y="3263.5" ></text>
</g>
<g >
<title>0x1501b4cfb (111 samples, 0.70%)</title><rect x="278.5" y="853" width="8.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="281.48" y="863.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METHOD^^.74 (3,641 samples, 23.03%)</title><rect x="15.0" y="933" width="271.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="18.00" y="943.5" >`CONVERT-CST^CLEAVIR-CST-TO-AST^((T ..</text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="667.8" y="3637" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="670.81" y="3647.5" ></text>
</g>
<g >
<title>`llvm::GVN::processNonLocalLoad(llvm::LoadInst*) (2 samples, 0.01%)</title><rect x="592.8" y="4389" width="0.1" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="595.80" y="4399.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (5 samples, 0.03%)</title><rect x="627.1" y="1973" width="0.4" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="630.13" y="1983.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (6 samples, 0.04%)</title><rect x="629.4" y="2197" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="632.45" y="2207.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (36 samples, 0.23%)</title><rect x="10.0" y="261" width="2.7" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (4 samples, 0.03%)</title><rect x="628.2" y="725" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="631.18" y="735.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (2 samples, 0.01%)</title><rect x="623.8" y="181" width="0.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="626.77" y="191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1413" width="0.3" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="622.15" y="1423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1669" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="628.27" y="1679.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="645.7" y="3301" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="648.72" y="3311.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="624.0" y="1493" width="0.1" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="627.00" y="1503.5" ></text>
</g>
<g >
<title>0x1258cfc3b (61 samples, 0.39%)</title><rect x="273.9" y="181" width="4.6" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="276.93" y="191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="627.1" y="2053" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="630.13" y="2063.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="629.4" y="1637" width="0.3" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="632.45" y="1647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="624.0" y="1429" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="627.00" y="1439.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="1301" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="635.43" y="1311.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="625.3" y="165" width="0.2" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="628.27" y="175.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="638.0" y="3621" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="641.03" y="3631.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (7 samples, 0.04%)</title><rect x="173.8" y="341" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="176.76" y="351.5" ></text>
</g>
<g >
<title>0x1110a5456 (6 samples, 0.04%)</title><rect x="629.4" y="2469" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="632.45" y="2479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (21 samples, 0.13%)</title><rect x="630.8" y="1413" width="1.6" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="633.79" y="1423.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (2 samples, 0.01%)</title><rect x="620.6" y="1109" width="0.2" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="623.64" y="1119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="629.4" y="2245" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="632.45" y="2255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="3141" width="2.1" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="633.34" y="3151.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^91^TOP-COMPILE-FILE.99 (3,806 samples, 24.07%)</title><rect x="10.0" y="1253" width="284.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="901.9" y="3589" width="0.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="904.89" y="3599.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.22 (5 samples, 0.03%)</title><rect x="640.2" y="2965" width="0.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="643.19" y="2975.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (5 samples, 0.03%)</title><rect x="619.4" y="1365" width="0.4" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="622.44" y="1375.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="625.3" y="53" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="628.27" y="63.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.6" y="1141" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="633.64" y="1151.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="1176.9" y="3237" width="0.6" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="1179.94" y="3247.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="645.3" y="3493" width="0.1" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="648.27" y="3503.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (19 samples, 0.12%)</title><rect x="1187.3" y="1189" width="1.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1190.31" y="1199.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (8 samples, 0.05%)</title><rect x="636.2" y="3173" width="0.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="639.16" y="3183.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (2 samples, 0.01%)</title><rect x="989.6" y="3717" width="0.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="992.59" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="981" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="628.94" y="991.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="628.0" y="565" width="0.2" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="630.95" y="575.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="1177.2" y="3141" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="1180.16" y="3151.5" ></text>
</g>
<g >
<title>0x1501b45fb (2 samples, 0.01%)</title><rect x="273.0" y="37" width="0.1" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="275.96" y="47.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (32 samples, 0.20%)</title><rect x="795.9" y="3573" width="2.4" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="798.90" y="3583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (26 samples, 0.16%)</title><rect x="630.4" y="1765" width="2.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="633.42" y="1775.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (7 samples, 0.04%)</title><rect x="656.9" y="2437" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="659.91" y="2447.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (139 samples, 0.88%)</title><rect x="715.1" y="3637" width="10.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="718.13" y="3647.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (2 samples, 0.01%)</title><rect x="1091.2" y="3669" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1094.25" y="3679.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="620.6" y="1397" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="623.64" y="1407.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="874.3" y="3333" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="877.34" y="3343.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="619.8" y="2405" width="0.2" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="622.82" y="2415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1989" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="628.27" y="1999.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="1317" width="0.2" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="635.43" y="1327.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (5 samples, 0.03%)</title><rect x="872.5" y="3013" width="0.4" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="875.48" y="3023.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="627.7" y="949" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="630.65" y="959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="2677" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="635.43" y="2687.5" ></text>
</g>
<g >
<title>0x1110a4be6 (10 samples, 0.06%)</title><rect x="622.4" y="869" width="0.7" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="625.35" y="879.5" ></text>
</g>
<g >
<title>`DO-COMPILER-TIMER^COMPILER^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1429" width="284.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="13.00" y="1439.5" >`DO-COMPILER-TIMER^COMPILER^FN^^</text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.36 (6 samples, 0.04%)</title><rect x="823.3" y="2437" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="826.29" y="2447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="885" width="1.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="627.30" y="895.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (6 samples, 0.04%)</title><rect x="875.0" y="2661" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="878.01" y="2671.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldConstant(llvm::Constant const*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (3 samples, 0.02%)</title><rect x="610.6" y="4373" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="613.64" y="4383.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (12 samples, 0.08%)</title><rect x="243.4" y="37" width="0.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="246.40" y="47.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="618.9" y="3781" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="621.92" y="3791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1509" width="1.0" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="627.30" y="1519.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::run() (3 samples, 0.02%)</title><rect x="826.1" y="2869" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="829.05" y="2879.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.84 (8 samples, 0.05%)</title><rect x="1187.9" y="453" width="0.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="1190.91" y="463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="213" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="631.18" y="223.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="622.4" y="1189" width="0.7" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="625.35" y="1199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.3" y="2053" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="623.27" y="2063.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="645.3" y="3461" width="0.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="648.27" y="3471.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (82 samples, 0.52%)</title><rect x="15.0" y="245" width="6.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="18.00" y="255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="627.1" y="1573" width="0.4" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="630.13" y="1583.5" ></text>
</g>
<g >
<title>`llvm::MachineFunctionPass::runOnFunction(llvm::Function&amp;) (178 samples, 1.13%)</title><rect x="573.7" y="4421" width="13.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="576.69" y="4431.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (21 samples, 0.13%)</title><rect x="656.7" y="2853" width="1.6" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="659.69" y="2863.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (16 samples, 0.10%)</title><rect x="142.3" y="85" width="1.2" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="145.26" y="95.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="133" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="632.45" y="143.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (21 samples, 0.13%)</title><rect x="650.7" y="3669" width="1.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="653.72" y="3679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (7 samples, 0.04%)</title><rect x="874.9" y="3285" width="0.6" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="877.94" y="3295.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^714^TOP-COMPILE-FILE.488 (192 samples, 1.21%)</title><rect x="619.1" y="3813" width="14.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="622.07" y="3823.5" ></text>
</g>
<g >
<title>0x11132df76 (2 samples, 0.01%)</title><rect x="655.3" y="3509" width="0.1" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="658.27" y="3519.5" ></text>
</g>
<g >
<title>0x10fbcf2b0 (7 samples, 0.04%)</title><rect x="905.2" y="3685" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="908.17" y="3695.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (16 samples, 0.10%)</title><rect x="142.3" y="37" width="1.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="145.26" y="47.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (12 samples, 0.08%)</title><rect x="626.2" y="597" width="0.9" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="629.16" y="607.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="630.0" y="2661" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="633.04" y="2671.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (20 samples, 0.13%)</title><rect x="630.8" y="549" width="1.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="633.79" y="559.5" ></text>
</g>
<g >
<title>0x1110a5606 (24 samples, 0.15%)</title><rect x="619.1" y="3045" width="1.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="622.07" y="3055.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (23 samples, 0.15%)</title><rect x="619.1" y="2917" width="1.7" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="622.07" y="2927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="629.4" y="2181" width="0.5" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="632.45" y="2191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="619.8" y="2389" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="622.82" y="2399.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (5 samples, 0.03%)</title><rect x="1052.0" y="3685" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1054.99" y="3695.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (294 samples, 1.86%)</title><rect x="147.5" y="85" width="21.9" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="150.49" y="95.5" >`..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (8 samples, 0.05%)</title><rect x="627.9" y="2037" width="0.6" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="630.88" y="2047.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2869" width="284.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="13.00" y="2879.5" >`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^..</text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (31 samples, 0.20%)</title><rect x="1186.8" y="2005" width="2.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="1189.79" y="2015.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.94 (90 samples, 0.57%)</title><rect x="1182.8" y="3621" width="6.8" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="1185.83" y="3631.5" ></text>
</g>
<g >
<title>0x1501b4cfb (71 samples, 0.45%)</title><rect x="281.5" y="437" width="5.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="284.47" y="447.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (17 samples, 0.11%)</title><rect x="620.9" y="1493" width="1.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="623.86" y="1503.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.295 (43 samples, 0.27%)</title><rect x="823.3" y="3589" width="3.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="826.29" y="3599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="14.9" y="437" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="17.85" y="447.5" ></text>
</g>
<g >
<title>0x1110a5456 (3 samples, 0.02%)</title><rect x="619.1" y="2661" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="622.15" y="2671.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.8" y="1333" width="0.1" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="628.79" y="1343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="627.1" y="1477" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="630.13" y="1487.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (205 samples, 1.30%)</title><rect x="572.6" y="4581" width="15.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="575.57" y="4591.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^351^TOP-COMPILE-FILE.32 (4 samples, 0.03%)</title><rect x="823.4" y="2005" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="826.44" y="2015.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1173" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="626.70" y="1183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="341" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="622.15" y="351.5" ></text>
</g>
<g >
<title>`DO-DISPATCH-MISS^CLOS^FN^^ (5 samples, 0.03%)</title><rect x="640.2" y="3397" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="643.19" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="2293" width="0.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="623.49" y="2303.5" ></text>
</g>
<g >
<title>0x1110a5606 (13 samples, 0.08%)</title><rect x="626.2" y="1013" width="0.9" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="629.16" y="1023.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (3 samples, 0.02%)</title><rect x="1171.9" y="3589" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1174.86" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.4" y="1557" width="0.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="633.42" y="1567.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.03%)</title><rect x="141.9" y="165" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="144.89" y="175.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.24 (31 samples, 0.20%)</title><rect x="1186.8" y="2069" width="2.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="1189.79" y="2079.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.3" y="2309" width="0.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="623.27" y="2319.5" ></text>
</g>
<g >
<title>`asdf.lisp-^2755^TOP-COMPILE-FILE.24 (3,806 samples, 24.07%)</title><rect x="10.0" y="1909" width="284.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" >`asdf.lisp-^2755^TOP-COMPILE-FILE.24</text>
</g>
<g >
<title>0x1110a5e76 (4 samples, 0.03%)</title><rect x="623.7" y="1957" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="626.70" y="1967.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METHOD^^.74 (18 samples, 0.11%)</title><rect x="13.5" y="645" width="1.4" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="16.51" y="655.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="874.0" y="3317" width="0.2" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="876.97" y="3327.5" ></text>
</g>
<g >
<title>`llvm::BlockFrequencyInfo::calculate(llvm::Function const&amp;, llvm::BranchProbabilityInfo const&amp;, llvm::LoopInfo const&amp;) (2 samples, 0.01%)</title><rect x="573.2" y="4389" width="0.1" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="576.17" y="4399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="693" width="1.0" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="627.30" y="703.5" ></text>
</g>
<g >
<title>`FILTER-INSTRUCTIONS^CLEAVIR-IR^FN^^ (12 samples, 0.08%)</title><rect x="634.2" y="3765" width="0.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="637.22" y="3775.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (830 samples, 5.25%)</title><rect x="174.3" y="565" width="61.9" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="177.28" y="575.5" >`conve..</text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (74 samples, 0.47%)</title><rect x="1069.2" y="3717" width="5.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="1072.16" y="3727.5" ></text>
</g>
<g >
<title>`asdf.lisp-^7563^TOP-COMPILE-FILE.6 (3,806 samples, 24.07%)</title><rect x="10.0" y="3685" width="284.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="13.00" y="3695.5" >`asdf.lisp-^7563^TOP-COMPILE-FILE.6</text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::SDNode*&gt;::find(llvm::SDNode const*) const (2 samples, 0.01%)</title><rect x="579.9" y="4325" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="582.88" y="4335.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="643.8" y="3029" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="646.78" y="3039.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (8 samples, 0.05%)</title><rect x="874.3" y="3365" width="0.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="877.34" y="3375.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (36 samples, 0.23%)</title><rect x="10.0" y="229" width="2.7" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="933" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="632.45" y="943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="901" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="622.44" y="911.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef&lt;llvm::Value*&gt;, bool, llvm::Optional&lt;unsigned int&gt;, llvm::Type*) (2 samples, 0.01%)</title><rect x="610.6" y="4309" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="613.64" y="4319.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="757" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="631.18" y="767.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (3 samples, 0.02%)</title><rect x="619.1" y="2245" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="622.15" y="2255.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T))^METHOD^^ (161 samples, 1.02%)</title><rect x="655.0" y="3589" width="12.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="658.05" y="3599.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (3 samples, 0.02%)</title><rect x="667.1" y="3621" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="670.14" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (24 samples, 0.15%)</title><rect x="619.1" y="3381" width="1.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="622.07" y="3391.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^METHOD^^.94 (2 samples, 0.01%)</title><rect x="14.9" y="149" width="0.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="17.85" y="159.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="627.7" y="1701" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="630.65" y="1711.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1021.3" y="3093" width="0.2" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="1024.31" y="3103.5" ></text>
</g>
<g >
<title>0x110c56d50 (4 samples, 0.03%)</title><rect x="966.0" y="3717" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="969.00" y="3727.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="620.6" y="1669" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="623.64" y="1679.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.28 (5 samples, 0.03%)</title><rect x="1156.6" y="3365" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1159.64" y="3375.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getPredicateAt(unsigned int, llvm::Value*, llvm::Constant*, llvm::Instruction*) (2 samples, 0.01%)</title><rect x="588.4" y="4437" width="0.1" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="591.39" y="4447.5" ></text>
</g>
<g >
<title>`BUILD-FUNCTION-DAG^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (3 samples, 0.02%)</title><rect x="1178.4" y="3797" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="1181.36" y="3807.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="655.9" y="3413" width="0.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="658.94" y="3423.5" ></text>
</g>
<g >
<title>0x1140073e7 (435 samples, 2.75%)</title><rect x="240.9" y="469" width="32.4" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="243.86" y="479.5" >0x..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.7" y="1509" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="632.74" y="1519.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.0" y="2117" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="633.04" y="2127.5" ></text>
</g>
<g >
<title>0x1110a4be6 (3 samples, 0.02%)</title><rect x="619.1" y="1493" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="622.15" y="1503.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.7" y="1909" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="632.74" y="1919.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="875.8" y="3381" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="878.84" y="3391.5" ></text>
</g>
<g >
<title>`core::lambdaListHandler_createBindings(gctools::smart_ptr&lt;core::Closure_O&gt;, gctools::smart_ptr&lt;core::LambdaListHandler_O&gt;, core::DynamicScopeManager&amp;, gctools::smart_ptr&lt;core::Vaslist&gt;, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*) (7 samples, 0.04%)</title><rect x="1148.6" y="3685" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="1151.57" y="3695.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="619.8" y="2357" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="622.82" y="2367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="628.0" y="325" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="630.95" y="335.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (26 samples, 0.16%)</title><rect x="1186.9" y="1621" width="2.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="1189.94" y="1631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="626.2" y="853" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="629.16" y="863.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.14 (43 samples, 0.27%)</title><rect x="823.3" y="3333" width="3.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="826.29" y="3343.5" ></text>
</g>
<g >
<title>`llvm::JumpThreadingPass::ProcessThreadableEdges(llvm::Value*, llvm::BasicBlock*, llvm::jumpthreading::ConstantPreference, llvm::Instruction*) (3 samples, 0.02%)</title><rect x="598.3" y="4357" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="601.32" y="4367.5" ></text>
</g>
<g >
<title>0x1110a5606 (38 samples, 0.24%)</title><rect x="625.6" y="2469" width="2.9" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="628.64" y="2479.5" ></text>
</g>
<g >
<title>`LINK-BUILTINS-MODULE^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="597.1" y="4533" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="600.05" y="4543.5" ></text>
</g>
<g >
<title>`runSCCP(llvm::Function&amp;, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (2 samples, 0.01%)</title><rect x="593.2" y="4469" width="0.1" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="596.17" y="4479.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (6 samples, 0.04%)</title><rect x="823.3" y="2421" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="826.29" y="2431.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.01%)</title><rect x="752.5" y="3589" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="755.53" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="389" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="625.13" y="399.5" ></text>
</g>
<g >
<title>0x11171939a (3 samples, 0.02%)</title><rect x="1182.3" y="3797" width="0.2" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="1185.31" y="3807.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.88 (7 samples, 0.04%)</title><rect x="1188.0" y="421" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="1190.98" y="431.5" ></text>
</g>
<g >
<title>0x1110a62f6 (22 samples, 0.14%)</title><rect x="624.0" y="2261" width="1.6" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="627.00" y="2271.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (98 samples, 0.62%)</title><rect x="286.8" y="1173" width="7.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="289.77" y="1183.5" ></text>
</g>
<g >
<title>0x1110a5606 (13 samples, 0.08%)</title><rect x="624.3" y="1685" width="1.0" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="627.30" y="1695.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch(llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt;&amp;, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::BatchUpdateInfo*) (3 samples, 0.02%)</title><rect x="610.3" y="4389" width="0.3" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="613.34" y="4399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (20 samples, 0.13%)</title><rect x="876.3" y="3397" width="1.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="879.28" y="3407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.9" y="741" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="628.94" y="751.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (36 samples, 0.23%)</title><rect x="10.0" y="341" width="2.7" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="965" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="622.44" y="975.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="874.9" y="3189" width="0.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="877.94" y="3199.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="624.0" y="1397" width="0.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="627.00" y="1407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="625.3" y="341" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="628.27" y="351.5" ></text>
</g>
<g >
<title>`LINK-INLINE-REMOVE-BUILTINS^COMPILER^FN^^ (6 samples, 0.04%)</title><rect x="875.0" y="2709" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="878.01" y="2719.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (12 samples, 0.08%)</title><rect x="243.4" y="165" width="0.9" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="246.40" y="175.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (2 samples, 0.01%)</title><rect x="630.4" y="1205" width="0.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="633.42" y="1215.5" ></text>
</g>
<g >
<title>0x123ae11b3 (8 samples, 0.05%)</title><rect x="665.3" y="3413" width="0.6" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="668.27" y="3423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="2069" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="635.43" y="2079.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (4 samples, 0.03%)</title><rect x="637.1" y="3749" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="640.06" y="3759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="421" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="626.10" y="431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="981" width="1.0" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="627.30" y="991.5" ></text>
</g>
<g >
<title>`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^ (7,345 samples, 46.46%)</title><rect x="633.7" y="3829" width="548.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="636.70" y="3839.5" >`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="627.7" y="1813" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="630.65" y="1823.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="619.1" y="1781" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="622.15" y="1791.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3109" width="284.1" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="13.00" y="3119.5" >`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^..</text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1015.4" y="3701" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1018.41" y="3711.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (8 samples, 0.05%)</title><rect x="950.4" y="3413" width="0.6" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="953.40" y="3423.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (5 samples, 0.03%)</title><rect x="173.9" y="213" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="176.91" y="223.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="620.3" y="2165" width="0.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="623.27" y="2175.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.6" y="1925" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="623.64" y="1935.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="619.1" y="1589" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="622.15" y="1599.5" ></text>
</g>
<g >
<title>0x1110a5606 (184 samples, 1.16%)</title><rect x="619.1" y="3717" width="13.7" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="622.07" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="622.1" y="2133" width="1.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="625.13" y="2143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="277" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="630.95" y="287.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="623.3" y="1253" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="626.33" y="1263.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.13 (5 samples, 0.03%)</title><rect x="640.2" y="3157" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="643.19" y="3167.5" ></text>
</g>
<g >
<title>`llvm::wouldInstructionBeTriviallyDead(llvm::Instruction*, llvm::TargetLibraryInfo const*) (2 samples, 0.01%)</title><rect x="614.3" y="4357" width="0.1" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="617.29" y="4367.5" ></text>
</g>
<g >
<title>`BYPASS-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="652.4" y="3621" width="0.1" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="655.36" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-TO-MODULE-WITH-RUN-TIME-TABLE^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="656.7" y="2629" width="0.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="659.69" y="2639.5" ></text>
</g>
<g >
<title>`DO-COMPILER-TIMER^COMPILER^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1557" width="284.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" >`DO-COMPILER-TIMER^COMPILER^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (20 samples, 0.13%)</title><rect x="625.6" y="2213" width="1.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="628.64" y="2223.5" ></text>
</g>
<g >
<title>0x1110a5456 (5 samples, 0.03%)</title><rect x="625.7" y="2165" width="0.4" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="628.71" y="2175.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="949" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="622.15" y="959.5" ></text>
</g>
<g >
<title>`CODEGEN^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="1749" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="826.44" y="1759.5" ></text>
</g>
<g >
<title>0x1258cfbcb (2 samples, 0.01%)</title><rect x="173.6" y="197" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="176.61" y="207.5" ></text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (4 samples, 0.03%)</title><rect x="1022.0" y="3701" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="1024.98" y="3711.5" ></text>
</g>
<g >
<title>0x111521403 (2 samples, 0.01%)</title><rect x="641.8" y="3365" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="644.84" y="3375.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.9" y="357" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="628.94" y="367.5" ></text>
</g>
<g >
<title>0x1110a5606 (7 samples, 0.04%)</title><rect x="620.3" y="2757" width="0.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="623.27" y="2767.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef&lt;llvm::Constant*&gt;, bool, llvm::Optional&lt;unsigned int&gt;, llvm::Type*) (2 samples, 0.01%)</title><rect x="611.5" y="4309" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="614.53" y="4319.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="602.4" y="4309" width="0.1" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="605.35" y="4319.5" ></text>
</g>
<g >
<title>`core::Cache_O::vector_hash_key(gctools::Vec0&lt;gctools::smart_ptr&lt;core::T_O&gt; &gt;&amp;) (8 samples, 0.05%)</title><rect x="1000.9" y="3685" width="0.6" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="1003.93" y="3695.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (60 samples, 0.38%)</title><rect x="236.2" y="229" width="4.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="239.24" y="239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="1861" width="0.3" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="632.45" y="1871.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="623.1" y="933" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="626.10" y="943.5" ></text>
</g>
<g >
<title>0x11171b476 (2 samples, 0.01%)</title><rect x="640.6" y="3381" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="643.64" y="3391.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="661" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="622.15" y="671.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="853" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="622.15" y="863.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (24 samples, 0.15%)</title><rect x="1184.9" y="2373" width="1.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="1187.92" y="2383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="627.7" y="885" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="630.73" y="895.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="933" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="628.27" y="943.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (5 samples, 0.03%)</title><rect x="625.7" y="2069" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="628.71" y="2079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="53" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="622.15" y="63.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.8" y="1157" width="0.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="628.79" y="1167.5" ></text>
</g>
<g >
<title>0x1110a4be6 (5 samples, 0.03%)</title><rect x="620.3" y="2661" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="623.27" y="2671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="1477" width="0.7" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="625.35" y="1487.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="628.0" y="533" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="630.95" y="543.5" ></text>
</g>
<g >
<title>0x1110a5456 (2 samples, 0.01%)</title><rect x="619.8" y="2469" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="622.82" y="2479.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="646.5" y="3253" width="0.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="649.46" y="3263.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (36 samples, 0.23%)</title><rect x="10.0" y="213" width="2.7" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="627.2" y="1045" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="630.21" y="1055.5" ></text>
</g>
<g >
<title>`core::Closure_O::setf_objectFile(gctools::smart_ptr&lt;core::ObjectFile_O&gt;) (2 samples, 0.01%)</title><rect x="823.0" y="3653" width="0.1" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="825.99" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.7" y="1349" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="632.74" y="1359.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="619.4" y="1397" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="622.44" y="1407.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1029" width="1.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="627.30" y="1039.5" ></text>
</g>
<g >
<title>`read-common.lisp-read-common192^53^TOP-COMPILE-FILE.27 (96 samples, 0.61%)</title><rect x="286.9" y="549" width="7.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="289.92" y="559.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (27 samples, 0.17%)</title><rect x="630.3" y="3013" width="2.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="633.34" y="3023.5" ></text>
</g>
<g >
<title>`OPERATE^ASDF/OPERATE^((:AROUND) (T T))^METHOD^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3093" width="284.1" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="13.00" y="3103.5" >`OPERATE^ASDF/OPERATE^((:AROUND) (T T)..</text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.64 (25 samples, 0.16%)</title><rect x="1186.9" y="1573" width="1.9" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="1189.94" y="1583.5" ></text>
</g>
<g >
<title>0x1110a5606 (125 samples, 0.79%)</title><rect x="620.9" y="3141" width="9.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="623.86" y="3151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="622.1" y="1797" width="1.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="625.13" y="1807.5" ></text>
</g>
<g >
<title>0x110cd62a2 (60 samples, 0.38%)</title><rect x="236.2" y="453" width="4.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="239.24" y="463.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp;, unsigned int) (2 samples, 0.01%)</title><rect x="590.9" y="4357" width="0.1" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="593.86" y="4367.5" ></text>
</g>
<g >
<title>0x1257602e2 (27 samples, 0.17%)</title><rect x="630.3" y="2613" width="2.1" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="633.34" y="2623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="869" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="626.33" y="879.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="625.8" y="997" width="0.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="628.79" y="1007.5" ></text>
</g>
<g >
<title>0x1140073e7 (10 samples, 0.06%)</title><rect x="12.8" y="229" width="0.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="15.76" y="239.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (17 samples, 0.11%)</title><rect x="620.9" y="1317" width="1.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="623.86" y="1327.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (4 samples, 0.03%)</title><rect x="641.7" y="3445" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="644.69" y="3455.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (20 samples, 0.13%)</title><rect x="622.1" y="1909" width="1.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="625.13" y="1919.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.5" y="1541" width="0.1" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="623.49" y="1551.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (6 samples, 0.04%)</title><rect x="641.5" y="3493" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="644.54" y="3503.5" ></text>
</g>
<g >
<title>0x1110a5606 (8 samples, 0.05%)</title><rect x="627.9" y="1989" width="0.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="630.88" y="1999.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="597.8" y="4293" width="0.1" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="600.80" y="4303.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (5 samples, 0.03%)</title><rect x="619.4" y="1349" width="0.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="622.44" y="1359.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (32 samples, 0.20%)</title><rect x="10.0" y="53" width="2.4" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="13.00" y="63.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (80 samples, 0.51%)</title><rect x="1183.6" y="2885" width="6.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="1186.58" y="2895.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.6" y="2533" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="623.64" y="2543.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.8" y="709" width="0.1" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="626.77" y="719.5" ></text>
</g>
<g >
<title>`AST-INTERPRETED-CLOSURE^INTERPRET-AST^FN^^.117 (2 samples, 0.01%)</title><rect x="240.7" y="437" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="243.72" y="447.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="633.4" y="3813" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="636.40" y="3823.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3605" width="284.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="13.00" y="3615.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::smart_ptr&lt;core::T_O&gt;, void*) (2 samples, 0.01%)</title><rect x="850.8" y="3493" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="853.83" y="3503.5" ></text>
</g>
<g >
<title>0x123ae2f8b (3 samples, 0.02%)</title><rect x="652.8" y="3573" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="655.81" y="3583.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="660.6" y="3253" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="663.65" y="3263.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.8" y="597" width="0.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="626.77" y="607.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.8" y="517" width="0.1" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="626.77" y="527.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.60 (2 samples, 0.01%)</title><rect x="656.7" y="2421" width="0.1" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="659.69" y="2431.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METHOD^^.74 (62 samples, 0.39%)</title><rect x="236.2" y="469" width="4.7" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="239.24" y="479.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.64 (74 samples, 0.47%)</title><rect x="1184.0" y="2501" width="5.6" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="1187.03" y="2511.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp;) (160 samples, 1.01%)</title><rect x="597.4" y="4437" width="11.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="600.35" y="4447.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (18 samples, 0.11%)</title><rect x="942.5" y="3621" width="1.3" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="945.49" y="3631.5" ></text>
</g>
<g >
<title>0x1257602e2 (4 samples, 0.03%)</title><rect x="632.4" y="2821" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="635.43" y="2831.5" ></text>
</g>
<g >
<title>`CODEGEN-PROGN^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="1125" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="826.51" y="1135.5" ></text>
</g>
<g >
<title>0x12570f5f5 (60 samples, 0.38%)</title><rect x="638.0" y="3685" width="4.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="641.03" y="3695.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.86 (8 samples, 0.05%)</title><rect x="1187.9" y="437" width="0.6" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="1190.91" y="447.5" ></text>
</g>
<g >
<title>`read-common.lisp-read-common192^59^TOP-COMPILE-FILE.37 (96 samples, 0.61%)</title><rect x="286.9" y="837" width="7.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="289.92" y="847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (23 samples, 0.15%)</title><rect x="630.6" y="1509" width="1.8" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="633.64" y="1519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="117" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="631.18" y="127.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="627.1" y="1461" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="630.13" y="1471.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (6 samples, 0.04%)</title><rect x="619.4" y="2501" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="622.37" y="2511.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METHOD^^.74 (435 samples, 2.75%)</title><rect x="240.9" y="453" width="32.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="243.86" y="463.5" >`C..</text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (37 samples, 0.23%)</title><rect x="638.7" y="3493" width="2.8" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="641.70" y="3503.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (4 samples, 0.03%)</title><rect x="636.5" y="3029" width="0.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="639.46" y="3039.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (2 samples, 0.01%)</title><rect x="1008.0" y="3605" width="0.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1010.95" y="3615.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.10 (9 samples, 0.06%)</title><rect x="997.6" y="3461" width="0.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="1000.58" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1845" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="628.27" y="1855.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="953.3" y="3685" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="956.31" y="3695.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceSet(unsigned long, gctools::smart_ptr&lt;core::T_O&gt;) (7 samples, 0.04%)</title><rect x="1164.8" y="3589" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1167.77" y="3599.5" ></text>
</g>
<g >
<title>`llvm::gvn::GVNLegacyPass::runOnFunction(llvm::Function&amp;) (9 samples, 0.06%)</title><rect x="592.5" y="4469" width="0.7" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="595.50" y="4479.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (1,469 samples, 9.29%)</title><rect x="21.2" y="565" width="109.6" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="24.20" y="575.5" >`convert.lisp..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="620.3" y="2421" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="623.27" y="2431.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (4 samples, 0.03%)</title><rect x="1170.8" y="3557" width="0.3" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="1173.82" y="3567.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;std::__1::__value_type&lt;llvm::Function const*, std::__1::unique_ptr&lt;llvm::CallGraphNode, std::__1::default_delete&lt;llvm::CallGraphNode&gt; &gt; &gt;, std::__1::__map_value_compare&lt;llvm::Function const*, std::__1::__value_type&lt;llvm::Function const*, std::__1::unique_ptr&lt;llvm::CallGraphNode, std::__1::default_delete&lt;llvm::CallGraphNode&gt; &gt; &gt;, std::__1::less&lt;llvm::Function const*&gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;llvm::Function const*, std::__1::unique_ptr&lt;llvm::CallGraphNode, std::__1::default_delete&lt;llvm::CallGraphNode&gt; &gt; &gt; &gt; &gt;::destroy(std::__1::__tree_node&lt;std::__1::__value_type&lt;llvm::Function const*, std::__1::unique_ptr&lt;llvm::CallGraphNode, std::__1::default_delete&lt;llvm::CallGraphNode&gt; &gt; &gt;, void*&gt;*) (2 samples, 0.01%)</title><rect x="596.8" y="4421" width="0.1" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="599.75" y="4431.5" ></text>
</g>
<g >
<title>`cst-to-ast.lisp-cst-to-ast301^3^TOP-COMPILE-FILE.4 (4 samples, 0.03%)</title><rect x="141.6" y="85" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="144.59" y="95.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (2 samples, 0.01%)</title><rect x="897.3" y="3685" width="0.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="900.26" y="3695.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.10 (20 samples, 0.13%)</title><rect x="876.3" y="3141" width="1.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="879.28" y="3151.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (361 samples, 2.28%)</title><rect x="244.3" y="37" width="26.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="247.30" y="47.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="1093" width="0.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="622.44" y="1103.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch(llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt;&amp;, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::BatchUpdateInfo*) (3 samples, 0.02%)</title><rect x="609.3" y="4405" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="612.29" y="4415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="1413" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="635.43" y="1423.5" ></text>
</g>
<g >
<title>0x1257602e2 (20 samples, 0.13%)</title><rect x="630.8" y="597" width="1.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="633.79" y="607.5" ></text>
</g>
<g >
<title>0x1110a5606 (8 samples, 0.05%)</title><rect x="627.9" y="1781" width="0.6" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="630.88" y="1791.5" ></text>
</g>
<g >
<title>0x1110a4be6 (5 samples, 0.03%)</title><rect x="627.1" y="2069" width="0.4" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="630.13" y="2079.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (2 samples, 0.01%)</title><rect x="173.6" y="309" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="176.61" y="319.5" ></text>
</g>
<g >
<title>0x12913f33f (9 samples, 0.06%)</title><rect x="766.4" y="3653" width="0.7" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="769.41" y="3663.5" ></text>
</g>
<g >
<title>`llvmo::ClaspJIT_O::addModule(gctools::smart_ptr&lt;llvmo::Module_O&gt;) (8 samples, 0.05%)</title><rect x="876.4" y="2709" width="0.6" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="879.43" y="2719.5" ></text>
</g>
<g >
<title>0x114007367 (18 samples, 0.11%)</title><rect x="13.5" y="197" width="1.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="16.51" y="207.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="625.3" y="261" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="628.27" y="271.5" ></text>
</g>
<g >
<title>`gctools::Vec0_impl&lt;gctools::GCVector&lt;gctools::smart_ptr&lt;core::Symbol_O&gt;, gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;gctools::smart_ptr&lt;core::Symbol_O&gt; &gt; &gt; &gt; &gt;::operator[](unsigned long) (6 samples, 0.04%)</title><rect x="865.2" y="3653" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="868.16" y="3663.5" ></text>
</g>
<g >
<title>`CODEGEN-SPECIAL-OPERATOR^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="741" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="826.51" y="751.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitGetElementPtrInst(llvm::GetElementPtrInst&amp;) (3 samples, 0.02%)</title><rect x="602.6" y="4357" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="605.58" y="4367.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.30 (3 samples, 0.02%)</title><rect x="874.0" y="3173" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="876.97" y="3183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="965" width="0.1" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="627.00" y="975.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.14 (17 samples, 0.11%)</title><rect x="620.9" y="869" width="1.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="623.86" y="879.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::T_O&gt; (core::HashTable_O::*)(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (6 samples, 0.04%)</title><rect x="1177.5" y="3717" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="1180.53" y="3727.5" ></text>
</g>
<g >
<title>`GC_mark_local (64 samples, 0.40%)</title><rect x="852.2" y="3381" width="4.8" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="855.17" y="3391.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.101 (3 samples, 0.02%)</title><rect x="823.5" y="1317" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="826.51" y="1327.5" ></text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^COMPILER^FN^^ (11 samples, 0.07%)</title><rect x="643.5" y="3589" width="0.8" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="646.48" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.3" y="2133" width="0.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="623.27" y="2143.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="640.2" y="2821" width="0.1" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="643.19" y="2831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="37" width="1.0" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="627.30" y="47.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="874.2" y="3397" width="0.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="877.19" y="3407.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="629.7" y="1845" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="632.74" y="1855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1477" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="622.15" y="1487.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="627.7" y="1445" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="630.65" y="1455.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitAnd(llvm::BinaryOperator&amp;) (2 samples, 0.01%)</title><rect x="590.4" y="4421" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="593.41" y="4431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.4" y="501" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="632.45" y="511.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="630.6" y="1493" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="633.64" y="1503.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.30 (21 samples, 0.13%)</title><rect x="656.7" y="3077" width="1.6" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="659.69" y="3087.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.6" y="1957" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="623.64" y="1967.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T))^METHOD^^ (4 samples, 0.03%)</title><rect x="650.4" y="3573" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="653.42" y="3583.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitLoadInst(llvm::LoadInst&amp;) (4 samples, 0.03%)</title><rect x="591.2" y="4421" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="594.16" y="4431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1957" width="1.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="623.86" y="1967.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.6" y="1173" width="0.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="632.60" y="1183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (24 samples, 0.15%)</title><rect x="619.1" y="3445" width="1.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="622.07" y="3455.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="620.3" y="1669" width="0.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="623.27" y="1679.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.103 (3 samples, 0.02%)</title><rect x="823.5" y="757" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="826.51" y="767.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (3 samples, 0.02%)</title><rect x="619.1" y="1221" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="622.15" y="1231.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (435 samples, 2.75%)</title><rect x="240.9" y="677" width="32.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="243.86" y="687.5" >`c..</text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="639.5" y="3317" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="642.52" y="3327.5" ></text>
</g>
<g >
<title>0x110c60dda (91 samples, 0.58%)</title><rect x="1045.7" y="3733" width="6.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1048.72" y="3743.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const (5 samples, 0.03%)</title><rect x="992.2" y="3653" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="995.20" y="3663.5" ></text>
</g>
<g >
<title>0x1258cfbcb (63 samples, 0.40%)</title><rect x="273.8" y="661" width="4.7" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="276.78" y="671.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.8 (5 samples, 0.03%)</title><rect x="1156.6" y="3541" width="0.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="1159.64" y="3551.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$pthread_getspecific (2 samples, 0.01%)</title><rect x="916.1" y="3685" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="919.14" y="3695.5" ></text>
</g>
<g >
<title>`DISPATCH-MISS^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="4357" width="284.1" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="13.00" y="4367.5" >`DISPATCH-MISS^CLOS^FN^^</text>
</g>
<g >
<title>`core::HashTableEq_O::__class() const (2 samples, 0.01%)</title><rect x="998.4" y="3717" width="0.1" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1001.40" y="3727.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (65 samples, 0.41%)</title><rect x="281.9" y="373" width="4.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="284.92" y="383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2245" width="2.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="633.34" y="2255.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const (2 samples, 0.01%)</title><rect x="1172.4" y="3589" width="0.1" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1175.38" y="3599.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="623.7" y="1477" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="626.70" y="1487.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="666.7" y="3365" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="669.69" y="3375.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^351^TOP-COMPILE-FILE.32 (4 samples, 0.03%)</title><rect x="823.4" y="1781" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="826.44" y="1791.5" ></text>
</g>
<g >
<title>0x1110a5606 (5 samples, 0.03%)</title><rect x="623.6" y="2149" width="0.4" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="626.62" y="2159.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="874.7" y="3285" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="877.72" y="3295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (8 samples, 0.05%)</title><rect x="627.9" y="1813" width="0.6" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="630.88" y="1823.5" ></text>
</g>
<g >
<title>`computeKnownBitsAddSub(bool, llvm::Value const*, llvm::Value const*, bool, llvm::KnownBits&amp;, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="604.4" y="4293" width="0.1" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="607.37" y="4303.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (9 samples, 0.06%)</title><rect x="997.6" y="3637" width="0.6" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="1000.58" y="3647.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="650.4" y="3445" width="0.2" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="653.42" y="3455.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.24 (21 samples, 0.13%)</title><rect x="656.7" y="2821" width="1.6" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="659.69" y="2831.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (6 samples, 0.04%)</title><rect x="619.4" y="1989" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="622.37" y="1999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="2005" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="623.64" y="2015.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="656.7" y="2181" width="0.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="659.69" y="2191.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1180.9" y="3733" width="0.1" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1183.89" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1653" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="635.43" y="1663.5" ></text>
</g>
<g >
<title>`llvm::MachineFunctionPass::runOnFunction(llvm::Function&amp;) (6 samples, 0.04%)</title><rect x="656.9" y="2389" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="659.91" y="2399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="2437" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="622.37" y="2447.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (8 samples, 0.05%)</title><rect x="876.4" y="2821" width="0.6" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="879.43" y="2831.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^192^TOP-COMPILE-FILE.15 (2 samples, 0.01%)</title><rect x="656.7" y="1925" width="0.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="659.69" y="1935.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="1157.8" y="3397" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="1160.83" y="3407.5" ></text>
</g>
<g >
<title>0x1140073e7 (582 samples, 3.68%)</title><rect x="130.8" y="485" width="43.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="133.84" y="495.5" >0x11..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="1189" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="626.10" y="1199.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2869" width="2.1" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="633.34" y="2879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1605" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="626.70" y="1615.5" ></text>
</g>
<g >
<title>0x1501b4cfb (2 samples, 0.01%)</title><rect x="240.7" y="325" width="0.2" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="243.72" y="335.5" ></text>
</g>
<g >
<title>0x1110a62f6 (4 samples, 0.03%)</title><rect x="623.3" y="1781" width="0.3" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="626.33" y="1791.5" ></text>
</g>
<g >
<title>`llvmo::optimizeModule(std::__1::shared_ptr&lt;llvm::Module&gt;) (2 samples, 0.01%)</title><rect x="621.4" y="453" width="0.1" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="624.38" y="463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1477" width="1.0" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="627.30" y="1487.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METHOD^^.74 (582 samples, 3.68%)</title><rect x="130.8" y="469" width="43.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="133.84" y="479.5" >`CON..</text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.30 (3 samples, 0.02%)</title><rect x="874.0" y="3477" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="876.97" y="3487.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (21 samples, 0.13%)</title><rect x="630.8" y="1125" width="1.6" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="633.79" y="1135.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (4 samples, 0.03%)</title><rect x="1076.8" y="3717" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1079.77" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^321^TOP-COMPILE-FILE.133 (5 samples, 0.03%)</title><rect x="619.4" y="213" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="622.44" y="223.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (5 samples, 0.03%)</title><rect x="1188.1" y="149" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="1191.06" y="159.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.1" y="853" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="626.10" y="863.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGBuilder::lowerInvokable(llvm::TargetLowering::CallLoweringInfo&amp;, llvm::BasicBlock const*) (2 samples, 0.01%)</title><rect x="582.5" y="4293" width="0.1" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="585.50" y="4303.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE*^COMPILER^FN^^ (21 samples, 0.13%)</title><rect x="656.7" y="2645" width="1.6" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="659.69" y="2655.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LOCALLY) T T T))^METHOD^^ (4 samples, 0.03%)</title><rect x="141.9" y="213" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="144.89" y="223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="625.6" y="2245" width="1.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="628.64" y="2255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1845" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="626.70" y="1855.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="645.0" y="3541" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="648.05" y="3551.5" ></text>
</g>
<g >
<title>`AST-INTERPRETED-CLOSURE^INTERPRET-AST^FN^^.117 (61 samples, 0.39%)</title><rect x="273.9" y="197" width="4.6" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="276.93" y="207.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.20 (3 samples, 0.02%)</title><rect x="874.0" y="3109" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="876.97" y="3119.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (2 samples, 0.01%)</title><rect x="780.4" y="3637" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="783.44" y="3647.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="640.4" y="2757" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="643.42" y="2767.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (89 samples, 0.56%)</title><rect x="1182.9" y="3269" width="6.7" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="1185.91" y="3279.5" ></text>
</g>
<g >
<title>0x123abc4da (4 samples, 0.03%)</title><rect x="273.3" y="917" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="276.33" y="927.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^199^TOP-COMPILE-FILE.131 (3,806 samples, 24.07%)</title><rect x="10.0" y="1397" width="284.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="13.00" y="1407.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="293" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="626.33" y="303.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.01%)</title><rect x="906.4" y="3637" width="0.2" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="909.44" y="3647.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitICmpInst(llvm::ICmpInst&amp;) (4 samples, 0.03%)</title><rect x="595.3" y="4421" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="598.33" y="4431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="2117" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="622.37" y="2127.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="627.7" y="869" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="630.73" y="879.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (3 samples, 0.02%)</title><rect x="622.1" y="1557" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="625.13" y="1567.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (90 samples, 0.57%)</title><rect x="1182.8" y="3717" width="6.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="1185.83" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="2581" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="635.43" y="2591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="325" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="626.10" y="335.5" ></text>
</g>
<g >
<title>`AST-&gt;HIR^CLASP-CLEAVIR^FN^^ (192 samples, 1.21%)</title><rect x="619.1" y="3845" width="14.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="622.07" y="3855.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (7 samples, 0.04%)</title><rect x="272.8" y="357" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="275.81" y="367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="277" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="622.15" y="287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1301" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="628.27" y="1311.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.9 (3 samples, 0.02%)</title><rect x="874.0" y="3349" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="876.97" y="3359.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^METHOD^^ (60 samples, 0.38%)</title><rect x="236.2" y="213" width="4.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="239.24" y="223.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (5 samples, 0.03%)</title><rect x="997.9" y="3045" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1000.87" y="3055.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (15 samples, 0.09%)</title><rect x="1075.6" y="3717" width="1.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1078.58" y="3727.5" ></text>
</g>
<g >
<title>0x1258cfc3b (60 samples, 0.38%)</title><rect x="274.0" y="53" width="4.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="277.01" y="63.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (3 samples, 0.02%)</title><rect x="822.6" y="3653" width="0.2" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="825.62" y="3663.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.18 (9 samples, 0.06%)</title><rect x="997.6" y="3253" width="0.6" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="1000.58" y="3263.5" ></text>
</g>
<g >
<title>0x110d5ddfc (45 samples, 0.28%)</title><rect x="971.6" y="3717" width="3.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="974.60" y="3727.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (6 samples, 0.04%)</title><rect x="1160.2" y="3621" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="1163.22" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1813" width="1.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="627.30" y="1823.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (4 samples, 0.03%)</title><rect x="877.5" y="2677" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="880.48" y="2687.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="623.7" y="933" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="626.70" y="943.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (20 samples, 0.13%)</title><rect x="1019.7" y="3685" width="1.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="1022.67" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="549" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="633.64" y="559.5" ></text>
</g>
<g >
<title>0x1110a62f6 (21 samples, 0.13%)</title><rect x="624.0" y="2165" width="1.6" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="627.00" y="2175.5" ></text>
</g>
<g >
<title>`CALL-WITH-ASDF-SESSION^ASDF/SESSION^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3077" width="284.1" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="13.00" y="3087.5" >`CALL-WITH-ASDF-SESSION^ASDF/SESSION^F..</text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="639.5" y="3253" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="642.52" y="3263.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.3" y="1333" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="626.33" y="1343.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (14 samples, 0.09%)</title><rect x="653.3" y="3541" width="1.0" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="656.26" y="3551.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="1156.8" y="3125" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1159.78" y="3135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="625.3" y="581" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="628.27" y="591.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="1173" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="622.15" y="1183.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (234 samples, 1.48%)</title><rect x="1158.4" y="3669" width="17.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1161.43" y="3679.5" ></text>
</g>
<g >
<title>`macro-functions.lisp-macro-functions194^173^TOP-COMPILE-FILE.38 (24 samples, 0.15%)</title><rect x="287.4" y="133" width="1.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="290.37" y="143.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.103 (3 samples, 0.02%)</title><rect x="823.5" y="677" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="826.51" y="687.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (5 samples, 0.03%)</title><rect x="895.5" y="3685" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="898.54" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (20 samples, 0.13%)</title><rect x="630.8" y="53" width="1.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="633.79" y="63.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.01%)</title><rect x="647.4" y="3221" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="650.43" y="3231.5" ></text>
</g>
<g >
<title>0x123ae11b3 (2 samples, 0.01%)</title><rect x="873.5" y="3493" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="876.52" y="3503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.05%)</title><rect x="629.4" y="2837" width="0.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="632.45" y="2847.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="632.4" y="2197" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="635.43" y="2207.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (2 samples, 0.01%)</title><rect x="974.8" y="3701" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="977.81" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (8 samples, 0.05%)</title><rect x="629.4" y="2789" width="0.6" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="632.45" y="2799.5" ></text>
</g>
<g >
<title>0x1110a5606 (5 samples, 0.03%)</title><rect x="619.4" y="1077" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="622.44" y="1087.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef&lt;llvm::Constant*&gt;, bool, llvm::Optional&lt;unsigned int&gt;, llvm::Type*) (2 samples, 0.01%)</title><rect x="610.6" y="4325" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="613.64" y="4335.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="666.5" y="3461" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="669.47" y="3471.5" ></text>
</g>
<g >
<title>0x1111f13fb (2 samples, 0.01%)</title><rect x="1181.9" y="3797" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1184.94" y="3807.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (36 samples, 0.23%)</title><rect x="10.0" y="533" width="2.7" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="4293" width="284.1" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="13.00" y="4303.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="872.9" y="2933" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="875.85" y="2943.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (5 samples, 0.03%)</title><rect x="627.1" y="1797" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="630.13" y="1807.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (17 samples, 0.11%)</title><rect x="140.3" y="69" width="1.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="143.32" y="79.5" ></text>
</g>
<g >
<title>0x110c60c94 (2 samples, 0.01%)</title><rect x="1045.0" y="3733" width="0.1" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1047.97" y="3743.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="623.3" y="1589" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="626.33" y="1599.5" ></text>
</g>
<g >
<title>0x123ae3cf3 (3 samples, 0.02%)</title><rect x="877.9" y="3301" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="880.93" y="3311.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (3 samples, 0.02%)</title><rect x="1045.2" y="3669" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1048.20" y="3679.5" ></text>
</g>
<g >
<title>0x110c5913e (77 samples, 0.49%)</title><rect x="700.5" y="3653" width="5.8" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="703.50" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (17 samples, 0.11%)</title><rect x="620.9" y="997" width="1.2" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="623.86" y="1007.5" ></text>
</g>
<g >
<title>0x123ae11b3 (4 samples, 0.03%)</title><rect x="663.6" y="3381" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="666.63" y="3391.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (4 samples, 0.03%)</title><rect x="765.0" y="3605" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="767.99" y="3615.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (82 samples, 0.52%)</title><rect x="15.0" y="165" width="6.1" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="18.00" y="175.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (3 samples, 0.02%)</title><rect x="628.0" y="773" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="630.95" y="783.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="622.1" y="693" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="625.13" y="703.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="725" width="109.6" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="24.20" y="735.5" >`COMBINE-METH..</text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="662.7" y="3237" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="665.74" y="3247.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="627.7" y="1541" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="630.65" y="1551.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="898.4" y="3557" width="0.1" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="901.38" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-TOPLEVEL^CLEAVIR-AST-TO-HIR^FN^^ (192 samples, 1.21%)</title><rect x="619.1" y="3829" width="14.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="622.07" y="3839.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.0" y="2037" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="633.04" y="2047.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.94 (28 samples, 0.18%)</title><rect x="1186.9" y="1765" width="2.1" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="1189.87" y="1775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="165" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="626.10" y="175.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.30 (17 samples, 0.11%)</title><rect x="620.9" y="1077" width="1.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="623.86" y="1087.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (89 samples, 0.56%)</title><rect x="1182.9" y="3509" width="6.7" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="1185.91" y="3519.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="647.3" y="3269" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="650.29" y="3279.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (2 samples, 0.01%)</title><rect x="1184.3" y="2373" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="1187.25" y="2383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="625.3" y="1717" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="628.27" y="1727.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.295 (17 samples, 0.11%)</title><rect x="620.9" y="1125" width="1.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="623.86" y="1135.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.96 (20 samples, 0.13%)</title><rect x="1187.2" y="1285" width="1.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="1190.24" y="1295.5" ></text>
</g>
<g >
<title>0x110c60407 (2 samples, 0.01%)</title><rect x="1044.2" y="3733" width="0.1" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1047.15" y="3743.5" ></text>
</g>
<g >
<title>`asdf.lisp-^7563^TOP-COMPILE-FILE.5 (3,806 samples, 24.07%)</title><rect x="10.0" y="3701" width="284.1" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="13.00" y="3711.5" >`asdf.lisp-^7563^TOP-COMPILE-FILE.5</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.5" y="2133" width="0.1" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="623.49" y="2143.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (20 samples, 0.13%)</title><rect x="622.1" y="2117" width="1.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="625.13" y="2127.5" ></text>
</g>
<g >
<title>`FIND-SLOT-DEFINITION^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="617.9" y="3781" width="0.1" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="620.88" y="3791.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.6" y="1829" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="623.64" y="1839.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="629.4" y="1733" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="632.45" y="1743.5" ></text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^COMPILER^FN^^ (12 samples, 0.08%)</title><rect x="872.5" y="3637" width="0.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="875.48" y="3647.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (5 samples, 0.03%)</title><rect x="640.2" y="3029" width="0.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="643.19" y="3039.5" ></text>
</g>
<g >
<title>0x1140073e7 (82 samples, 0.52%)</title><rect x="15.0" y="37" width="6.1" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="18.00" y="47.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^351^TOP-COMPILE-FILE.28 (3 samples, 0.02%)</title><rect x="823.5" y="1173" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="826.51" y="1183.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="624.3" y="357" width="1.0" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="627.30" y="367.5" ></text>
</g>
<g >
<title>`asdf.lisp-^10341^TOP-COMPILE-FILE.48 (3,806 samples, 24.07%)</title><rect x="10.0" y="3349" width="284.1" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="13.00" y="3359.5" >`asdf.lisp-^10341^TOP-COMPILE-FILE.48</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.4" y="1029" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="633.42" y="1039.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.103 (3 samples, 0.02%)</title><rect x="823.5" y="1077" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="826.51" y="1087.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="2485" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="622.15" y="2495.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.6" y="2517" width="0.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="623.64" y="2527.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (2 samples, 0.01%)</title><rect x="976.3" y="3685" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="979.30" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (21 samples, 0.13%)</title><rect x="624.0" y="2085" width="1.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="627.00" y="2095.5" ></text>
</g>
<g >
<title>0x12913f0e5 (2 samples, 0.01%)</title><rect x="753.6" y="3653" width="0.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="756.57" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1029" width="0.9" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="629.16" y="1039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.1" y="1557" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="627.15" y="1567.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="623.1" y="1493" width="0.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="626.10" y="1503.5" ></text>
</g>
<g >
<title>0x12913f161 (25 samples, 0.16%)</title><rect x="756.5" y="3653" width="1.9" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="759.48" y="3663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (829 samples, 5.24%)</title><rect x="174.3" y="229" width="61.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="177.28" y="239.5" >`CONVE..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="625.3" y="821" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="628.27" y="831.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^714^TOP-COMPILE-FILE.489 (192 samples, 1.21%)</title><rect x="619.1" y="3797" width="14.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="622.07" y="3807.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="644.4" y="3557" width="0.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="647.37" y="3567.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::CodeGenAndEmitDAG() (2 samples, 0.01%)</title><rect x="581.9" y="4341" width="0.1" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="584.90" y="4351.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="635.6" y="3189" width="0.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="638.64" y="3199.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="1157.5" y="3413" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="1160.53" y="3423.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (254 samples, 1.61%)</title><rect x="597.3" y="4517" width="18.9" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="600.28" y="4527.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (830 samples, 5.25%)</title><rect x="174.3" y="709" width="61.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="177.28" y="719.5" >`CONVE..</text>
</g>
<g >
<title>`asdf.lisp-^9173^TOP-COMPILE-FILE.99 (3,806 samples, 24.07%)</title><rect x="10.0" y="2485" width="284.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="13.00" y="2495.5" >`asdf.lisp-^9173^TOP-COMPILE-FILE.99</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1333" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="635.43" y="1343.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="624.0" y="1749" width="0.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="627.00" y="1759.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (5 samples, 0.03%)</title><rect x="1156.6" y="3317" width="0.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="1159.64" y="3327.5" ></text>
</g>
<g >
<title>`__dynamic_cast (2 samples, 0.01%)</title><rect x="897.9" y="3637" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="900.93" y="3647.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.30 (3,806 samples, 24.07%)</title><rect x="10.0" y="2725" width="284.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="13.00" y="2735.5" >`compile-file.lsp-compile-file52^76^TO..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (60 samples, 0.38%)</title><rect x="236.2" y="117" width="4.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="239.24" y="127.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.3" y="2005" width="0.1" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="623.27" y="2015.5" ></text>
</g>
<g >
<title>0x123711188 (18 samples, 0.11%)</title><rect x="13.5" y="165" width="1.4" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="16.51" y="175.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="633.4" y="3765" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="636.40" y="3775.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.65 (31 samples, 0.20%)</title><rect x="1186.8" y="2021" width="2.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="1189.79" y="2031.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp;) (3 samples, 0.02%)</title><rect x="997.9" y="2997" width="0.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="1000.87" y="3007.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.86 (32 samples, 0.20%)</title><rect x="1186.7" y="2293" width="2.4" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="1189.72" y="2303.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="624.3" y="1461" width="1.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="627.30" y="1471.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="650.3" y="3381" width="0.1" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="653.27" y="3391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="1189" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="633.64" y="1199.5" ></text>
</g>
<g >
<title>`llvm::getOrEnforceKnownAlignment(llvm::Value*, unsigned int, llvm::DataLayout const&amp;, llvm::Instruction const*, llvm::AssumptionCache*, llvm::DominatorTree const*) (2 samples, 0.01%)</title><rect x="613.8" y="4341" width="0.1" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="616.77" y="4351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (17 samples, 0.11%)</title><rect x="620.9" y="1733" width="1.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="623.86" y="1743.5" ></text>
</g>
<g >
<title>0x110f802a0 (3 samples, 0.02%)</title><rect x="1165.7" y="3637" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1168.67" y="3647.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (86 samples, 0.54%)</title><rect x="1183.1" y="3013" width="6.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="1186.13" y="3023.5" ></text>
</g>
<g >
<title>0x110cd62a2 (4 samples, 0.03%)</title><rect x="141.9" y="181" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="144.89" y="191.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="625.3" y="565" width="0.2" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="628.27" y="575.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (161 samples, 1.02%)</title><rect x="655.0" y="3605" width="12.1" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="658.05" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="805" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="633.64" y="815.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="624.3" y="933" width="1.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="627.30" y="943.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="623.3" y="885" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="626.33" y="895.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (7 samples, 0.04%)</title><rect x="652.7" y="3605" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="655.66" y="3615.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="373" width="109.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="24.20" y="383.5" >`CONVERT-SEQU..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="2645" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="622.15" y="2655.5" ></text>
</g>
<g >
<title>0x1110a6386 (2 samples, 0.01%)</title><rect x="629.6" y="997" width="0.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="632.60" y="1007.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="630.6" y="1397" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="633.64" y="1407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (21 samples, 0.13%)</title><rect x="630.8" y="1381" width="1.6" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="633.79" y="1391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (102 samples, 0.65%)</title><rect x="620.9" y="2821" width="7.6" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="623.86" y="2831.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.31 (17 samples, 0.11%)</title><rect x="620.9" y="1061" width="1.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="623.86" y="1071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="453" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="633.64" y="463.5" ></text>
</g>
<g >
<title>`llvm::getOrEnforceKnownAlignment(llvm::Value*, unsigned int, llvm::DataLayout const&amp;, llvm::Instruction const*, llvm::AssumptionCache*, llvm::DominatorTree const*) (2 samples, 0.01%)</title><rect x="604.1" y="4341" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="607.14" y="4351.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.02%)</title><rect x="652.3" y="3669" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="655.29" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="620.3" y="2533" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="623.27" y="2543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="981" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="628.27" y="991.5" ></text>
</g>
<g >
<title>0x11171939a (4 samples, 0.03%)</title><rect x="641.0" y="3397" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="644.02" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1637" width="0.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="627.00" y="1647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (20 samples, 0.13%)</title><rect x="630.8" y="69" width="1.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="633.79" y="79.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1125" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="622.15" y="1135.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="632.4" y="1365" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="635.43" y="1375.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (160 samples, 1.01%)</title><rect x="655.1" y="3541" width="12.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="658.12" y="3551.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="619.8" y="2261" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="622.82" y="2271.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.0" y="2709" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="633.04" y="2719.5" ></text>
</g>
<g >
<title>0x123709171 (92 samples, 0.58%)</title><rect x="287.1" y="181" width="6.9" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="290.14" y="191.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (3 samples, 0.02%)</title><rect x="1089.9" y="3557" width="0.2" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="1092.91" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="773" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="635.43" y="783.5" ></text>
</g>
<g >
<title>`core::eformat_read_char(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="287.2" y="69" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="290.22" y="79.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (5 samples, 0.03%)</title><rect x="748.9" y="3637" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="751.87" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (27 samples, 0.17%)</title><rect x="630.3" y="2933" width="2.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="633.34" y="2943.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (15 samples, 0.09%)</title><rect x="1187.5" y="1013" width="1.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="1190.46" y="1023.5" ></text>
</g>
<g >
<title>`runImpl(llvm::Function&amp;, llvm::LazyValueInfo*, llvm::SimplifyQuery const&amp;) (4 samples, 0.03%)</title><rect x="597.7" y="4389" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="600.72" y="4399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="1301" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="628.94" y="1311.5" ></text>
</g>
<g >
<title>`SET-PREDECESSORS^CLEAVIR-IR^FN^^ (8 samples, 0.05%)</title><rect x="632.8" y="3717" width="0.6" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="635.80" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (184 samples, 1.16%)</title><rect x="619.1" y="3685" width="13.7" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="622.07" y="3695.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (9 samples, 0.06%)</title><rect x="620.9" y="565" width="0.6" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="623.86" y="575.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="659.2" y="3333" width="0.1" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="662.15" y="3343.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="632.4" y="3237" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="635.43" y="3247.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (4 samples, 0.03%)</title><rect x="1079.1" y="3717" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1082.08" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="1061" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="632.45" y="1071.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LOCALLY) T T T))^METHOD^^ (17 samples, 0.11%)</title><rect x="143.5" y="213" width="1.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="146.46" y="223.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (124 samples, 0.78%)</title><rect x="923.0" y="3733" width="9.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="926.01" y="3743.5" ></text>
</g>
<g >
<title>0x1257602e2 (4 samples, 0.03%)</title><rect x="625.3" y="1637" width="0.3" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="628.27" y="1647.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (14 samples, 0.09%)</title><rect x="663.4" y="3413" width="1.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="666.41" y="3423.5" ></text>
</g>
<g >
<title>0x111521403 (2 samples, 0.01%)</title><rect x="660.6" y="3269" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="663.65" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="2277" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="623.64" y="2287.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (4 samples, 0.03%)</title><rect x="643.5" y="2965" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="646.48" y="2975.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="627.5" y="1781" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="630.51" y="1791.5" ></text>
</g>
<g >
<title>0x12353d2d2 (96 samples, 0.61%)</title><rect x="286.9" y="677" width="7.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="289.92" y="687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1461" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="628.27" y="1471.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (13 samples, 0.08%)</title><rect x="624.3" y="229" width="1.0" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="627.30" y="239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1541" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="635.43" y="1551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (12 samples, 0.08%)</title><rect x="626.2" y="645" width="0.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="629.16" y="655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (28 samples, 0.18%)</title><rect x="630.3" y="3413" width="2.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="633.34" y="3423.5" ></text>
</g>
<g >
<title>0x1501b4cfb (40 samples, 0.25%)</title><rect x="278.5" y="261" width="3.0" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="281.48" y="271.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="741" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="635.43" y="751.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="648.6" y="3381" width="0.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="651.55" y="3391.5" ></text>
</g>
<g >
<title>`DO-DISPATCH-MISS^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3141" width="284.1" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="13.00" y="3151.5" >`DO-DISPATCH-MISS^CLOS^FN^^</text>
</g>
<g >
<title>`inline-function.lisp-inline-function396^44^TOP-COMPILE-FILE.133 (254 samples, 1.61%)</title><rect x="1157.0" y="3685" width="19.0" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="1160.01" y="3695.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (18 samples, 0.11%)</title><rect x="13.5" y="437" width="1.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="16.51" y="447.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="622.1" y="629" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="625.13" y="639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (12 samples, 0.08%)</title><rect x="626.2" y="37" width="0.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="629.16" y="47.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="875.5" y="3333" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="878.54" y="3343.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.30 (6 samples, 0.04%)</title><rect x="1021.2" y="3317" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="1024.24" y="3327.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (5 samples, 0.03%)</title><rect x="878.2" y="3445" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="881.22" y="3455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="630.8" y="613" width="1.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="633.79" y="623.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::initializeAnalysisImpl(llvm::Pass*) (2 samples, 0.01%)</title><rect x="605.6" y="4405" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="608.64" y="4415.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.28 (20 samples, 0.13%)</title><rect x="876.3" y="2997" width="1.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="879.28" y="3007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="1013" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="626.10" y="1023.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.30 (2 samples, 0.01%)</title><rect x="656.7" y="2021" width="0.1" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="659.69" y="2031.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="622.1" y="85" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="625.13" y="95.5" ></text>
</g>
<g >
<title>0x114007367 (55 samples, 0.35%)</title><rect x="169.4" y="133" width="4.1" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="172.43" y="143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.8" y="357" width="0.1" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="626.77" y="367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="630.8" y="229" width="1.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="633.79" y="239.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (2 samples, 0.01%)</title><rect x="1017.7" y="3717" width="0.1" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1020.65" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (7 samples, 0.04%)</title><rect x="627.1" y="2181" width="0.6" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="630.13" y="2191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="622.1" y="1013" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="625.13" y="1023.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="620.5" y="1301" width="0.1" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="623.49" y="1311.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.11 (9 samples, 0.06%)</title><rect x="997.6" y="3445" width="0.6" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="1000.58" y="3455.5" ></text>
</g>
<g >
<title>0x110c60171 (43 samples, 0.27%)</title><rect x="1040.5" y="3733" width="3.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1043.49" y="3743.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.30 (7 samples, 0.04%)</title><rect x="874.9" y="2869" width="0.6" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="877.94" y="2879.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.9 (12 samples, 0.08%)</title><rect x="872.5" y="3429" width="0.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="875.48" y="3439.5" ></text>
</g>
<g >
<title>0x110c5612c (2 samples, 0.01%)</title><rect x="693.1" y="3653" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="696.11" y="3663.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (6 samples, 0.04%)</title><rect x="659.5" y="3301" width="0.4" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="662.45" y="3311.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^.154 (2 samples, 0.01%)</title><rect x="240.7" y="133" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="243.72" y="143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((RETURN-FROM-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1109" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="626.70" y="1119.5" ></text>
</g>
<g >
<title>`pthread_getspecific (12 samples, 0.08%)</title><rect x="799.8" y="3605" width="0.9" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="802.78" y="3615.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (5 samples, 0.03%)</title><rect x="895.5" y="3701" width="0.4" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="898.54" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (3 samples, 0.02%)</title><rect x="622.1" y="1397" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="625.13" y="1407.5" ></text>
</g>
<g >
<title>0x1257602e2 (27 samples, 0.17%)</title><rect x="630.3" y="2885" width="2.1" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="633.34" y="2895.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (60 samples, 0.38%)</title><rect x="236.2" y="245" width="4.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="239.24" y="255.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (35 samples, 0.22%)</title><rect x="986.9" y="3701" width="2.6" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="989.90" y="3711.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::freePass(llvm::Pass*, llvm::StringRef, llvm::PassDebuggingString) (4 samples, 0.03%)</title><rect x="614.9" y="4389" width="0.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="617.89" y="4399.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="901" width="0.1" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="627.00" y="911.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::removeNotPreservedAnalysis(llvm::Pass*) (2 samples, 0.01%)</title><rect x="606.1" y="4405" width="0.1" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="609.08" y="4415.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::SelectCodeCommon(llvm::SDNode*, unsigned char const*, unsigned int) (10 samples, 0.06%)</title><rect x="581.1" y="4309" width="0.7" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="584.08" y="4319.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="670.5" y="3669" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="673.50" y="3679.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="623.8" y="469" width="0.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="626.77" y="479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="629.4" y="2341" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="632.45" y="2351.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (2 samples, 0.01%)</title><rect x="1086.7" y="3605" width="0.1" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="1089.70" y="3615.5" ></text>
</g>
<g >
<title>0x1110a4be6 (6 samples, 0.04%)</title><rect x="619.4" y="2357" width="0.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="622.37" y="2367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="625.3" y="1141" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="628.27" y="1151.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="14.9" y="901" width="0.1" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="17.85" y="911.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt; (llvmo::ClaspJIT_O::*)(gctools::smart_ptr&lt;llvmo::Module_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (16 samples, 0.10%)</title><rect x="823.9" y="2981" width="1.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="826.89" y="2991.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (11 samples, 0.07%)</title><rect x="643.5" y="3173" width="0.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="646.48" y="3183.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.33 (9 samples, 0.06%)</title><rect x="997.6" y="3557" width="0.6" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="1000.58" y="3567.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (14 samples, 0.09%)</title><rect x="1169.7" y="3429" width="1.0" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="1172.70" y="3439.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="627.7" y="1493" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="630.65" y="1503.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="634.4" y="3701" width="0.1" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="637.37" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.3" y="1557" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="626.33" y="1567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="501" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="622.15" y="511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.8" y="293" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="626.77" y="303.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="620.3" y="2485" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="623.27" y="2495.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (95 samples, 0.60%)</title><rect x="656.1" y="3461" width="7.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="659.09" y="3471.5" ></text>
</g>
<g >
<title>0x11171b476 (2 samples, 0.01%)</title><rect x="652.7" y="3573" width="0.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="655.66" y="3583.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (18 samples, 0.11%)</title><rect x="627.1" y="2341" width="1.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="630.13" y="2351.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (582 samples, 3.68%)</title><rect x="130.8" y="613" width="43.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="133.84" y="623.5" >`COM..</text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (2 samples, 0.01%)</title><rect x="646.8" y="3253" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="649.76" y="3263.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (12 samples, 0.08%)</title><rect x="243.4" y="69" width="0.9" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="246.40" y="79.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="630.8" y="421" width="1.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="633.79" y="431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (15 samples, 0.09%)</title><rect x="619.1" y="2741" width="1.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="622.15" y="2751.5" ></text>
</g>
<g >
<title>`INVALIDATED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (51 samples, 0.32%)</title><rect x="289.5" y="85" width="3.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="292.53" y="95.5" ></text>
</g>
<g >
<title>0x12913f001 (2 samples, 0.01%)</title><rect x="752.8" y="3653" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="755.83" y="3663.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.61 (5 samples, 0.03%)</title><rect x="1188.1" y="245" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="1191.06" y="255.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::initializeAnalysisImpl(llvm::Pass*) (2 samples, 0.01%)</title><rect x="587.0" y="4421" width="0.1" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="589.98" y="4431.5" ></text>
</g>
<g >
<title>`macro-functions.lisp-macro-functions194^173^TOP-COMPILE-FILE.38 (96 samples, 0.61%)</title><rect x="286.9" y="453" width="7.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="289.92" y="463.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (4 samples, 0.03%)</title><rect x="784.0" y="3637" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="787.03" y="3647.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&amp;, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*) (2 samples, 0.01%)</title><rect x="591.5" y="4421" width="0.2" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="594.53" y="4431.5" ></text>
</g>
<g >
<title>`pthread_getspecific (3 samples, 0.02%)</title><rect x="917.3" y="3685" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="920.34" y="3695.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core::Cons_O&gt; &gt; &gt;::resize(unsigned long, core::Cons_O const&amp;) (43 samples, 0.27%)</title><rect x="1010.8" y="3605" width="3.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1013.79" y="3615.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.18 (16 samples, 0.10%)</title><rect x="635.6" y="3301" width="1.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="638.57" y="3311.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.6" y="1253" width="0.2" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="623.64" y="1263.5" ></text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="670.3" y="3669" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="673.35" y="3679.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (37 samples, 0.23%)</title><rect x="144.7" y="85" width="2.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="147.73" y="95.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (9 samples, 0.06%)</title><rect x="997.6" y="3701" width="0.6" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="1000.58" y="3711.5" ></text>
</g>
<g >
<title>0x110cd62a2 (19 samples, 0.12%)</title><rect x="271.2" y="261" width="1.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="274.24" y="271.5" ></text>
</g>
<g >
<title>0x1501b4cfb (111 samples, 0.70%)</title><rect x="278.5" y="821" width="8.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="281.48" y="831.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="623.7" y="1637" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="626.70" y="1647.5" ></text>
</g>
<g >
<title>`llvm::FindAvailableLoadedValue(llvm::LoadInst*, llvm::BasicBlock*, llvm::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::Instruction, false, false, void&gt;, false, false&gt;&amp;, unsigned int, llvm::AAResults*, bool*, unsigned int*) (4 samples, 0.03%)</title><rect x="595.6" y="4405" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="598.63" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (11 samples, 0.07%)</title><rect x="619.4" y="2645" width="0.8" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="622.37" y="2655.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="654.7" y="3429" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="657.67" y="3439.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.22 (6 samples, 0.04%)</title><rect x="1021.2" y="3237" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="1024.24" y="3247.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.101 (3 samples, 0.02%)</title><rect x="823.5" y="1525" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="826.51" y="1535.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.26 (6 samples, 0.04%)</title><rect x="1021.2" y="3349" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="1024.24" y="3359.5" ></text>
</g>
<g >
<title>`main (3,806 samples, 24.07%)</title><rect x="10.0" y="4789" width="284.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="13.00" y="4799.5" >`main</text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T T))^METHOD^^ (96 samples, 0.61%)</title><rect x="286.9" y="645" width="7.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="289.92" y="655.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="620.5" y="1605" width="0.1" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="623.49" y="1615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="625.9" y="1013" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="628.94" y="1023.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (3 samples, 0.02%)</title><rect x="666.7" y="3413" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="669.69" y="3423.5" ></text>
</g>
<g >
<title>0x1110a5606 (10 samples, 0.06%)</title><rect x="622.4" y="1445" width="0.7" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="625.35" y="1455.5" ></text>
</g>
<g >
<title>`llvm::orc::IRTransformLayer&lt;llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;, std::__1::function&lt;std::__1::shared_ptr&lt;llvm::Module&gt; (std::__1::shared_ptr&lt;llvm::Module&gt;)&gt; &gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (16 samples, 0.10%)</title><rect x="823.9" y="2949" width="1.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="826.89" y="2959.5" ></text>
</g>
<g >
<title>`llvm::AsmPrinter::doFinalization(llvm::Module&amp;) (3 samples, 0.02%)</title><rect x="572.7" y="4437" width="0.2" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="575.72" y="4447.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (36 samples, 0.23%)</title><rect x="10.0" y="437" width="2.7" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>`core::cl__load(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (3,806 samples, 24.07%)</title><rect x="10.0" y="4517" width="284.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="13.00" y="4527.5" >`core::cl__load(gctools::smart_ptr&lt;cor..</text>
</g>
<g >
<title>`GC_clear_stack_inner (2 samples, 0.01%)</title><rect x="1086.7" y="3637" width="0.1" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="1089.70" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="624.0" y="1013" width="0.1" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="627.00" y="1023.5" ></text>
</g>
<g >
<title>`client_validate (2 samples, 0.01%)</title><rect x="730.1" y="3605" width="0.2" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="733.14" y="3615.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (10 samples, 0.06%)</title><rect x="877.0" y="2773" width="0.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="880.03" y="2783.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (3 samples, 0.02%)</title><rect x="625.3" y="293" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="628.27" y="303.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="620.6" y="1301" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="623.64" y="1311.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (10 samples, 0.06%)</title><rect x="622.4" y="805" width="0.7" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="625.35" y="815.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (31 samples, 0.20%)</title><rect x="1186.8" y="2165" width="2.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="1189.79" y="2175.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="874.0" y="3029" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="876.97" y="3039.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (12 samples, 0.08%)</title><rect x="626.2" y="565" width="0.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="629.16" y="575.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.24 (20 samples, 0.13%)</title><rect x="876.3" y="2885" width="1.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="879.28" y="2895.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.9" y="197" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="628.94" y="207.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (8 samples, 0.05%)</title><rect x="876.4" y="2773" width="0.6" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="879.43" y="2783.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="628.0" y="133" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="630.95" y="143.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::attachNewSubtree(llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt;&amp;, llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*) (2 samples, 0.01%)</title><rect x="609.3" y="4389" width="0.1" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="612.29" y="4399.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.295 (20 samples, 0.13%)</title><rect x="876.3" y="3333" width="1.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="879.28" y="3343.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::ImmutableCallSite, llvm::MemoryLocation const&amp;) (5 samples, 0.03%)</title><rect x="603.5" y="4277" width="0.3" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="606.47" y="4287.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.01%)</title><rect x="728.7" y="3605" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="731.72" y="3615.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.01%)</title><rect x="740.0" y="3605" width="0.1" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="742.99" y="3615.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::List_V&gt;) (4 samples, 0.03%)</title><rect x="1021.7" y="3717" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1024.68" y="3727.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (572 samples, 3.62%)</title><rect x="130.8" y="373" width="42.7" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="133.84" y="383.5" >`con..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1397" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="628.27" y="1407.5" ></text>
</g>
<g >
<title>0x110d5ddfc (77 samples, 0.49%)</title><rect x="1069.2" y="3733" width="5.7" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1072.16" y="3743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="373" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="622.15" y="383.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="565" width="0.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="632.45" y="575.5" ></text>
</g>
<g >
<title>0x1110a5606 (5 samples, 0.03%)</title><rect x="627.1" y="1781" width="0.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="630.13" y="1791.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="625.3" y="2021" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="628.27" y="2031.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (37 samples, 0.23%)</title><rect x="144.7" y="53" width="2.8" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="147.73" y="63.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (111 samples, 0.70%)</title><rect x="278.5" y="709" width="8.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="281.48" y="719.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.03%)</title><rect x="628.2" y="421" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="631.18" y="431.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.26 (21 samples, 0.13%)</title><rect x="656.7" y="2805" width="1.6" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="659.69" y="2815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="597" width="0.2" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="626.33" y="607.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.5" y="2501" width="0.1" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="623.49" y="2511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="853" width="0.7" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="625.35" y="863.5" ></text>
</g>
<g >
<title>`llvm::ScheduleDAGMILive::initRegPressure() (2 samples, 0.01%)</title><rect x="575.9" y="4357" width="0.1" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="578.85" y="4367.5" ></text>
</g>
<g >
<title>`REDUCE-TYPEQS^CC-HIR-TO-MIR^FN^^ (8 samples, 0.05%)</title><rect x="1180.5" y="3813" width="0.6" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="1183.52" y="3823.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="1182.4" y="3685" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="1185.39" y="3695.5" ></text>
</g>
<g >
<title>`CST-TO-AST^CLEAVIR-CST-TO-AST^FN^^ (3,708 samples, 23.45%)</title><rect x="10.0" y="1157" width="276.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="13.00" y="1167.5" >`CST-TO-AST^CLEAVIR-CST-TO-AST^FN^^</text>
</g>
<g >
<title>`llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunction&amp;) (2 samples, 0.01%)</title><rect x="876.7" y="2565" width="0.1" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="879.66" y="2575.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^494^TOP-COMPILE-FILE.56 (3 samples, 0.02%)</title><rect x="823.5" y="1445" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="826.51" y="1455.5" ></text>
</g>
<g >
<title>0x14e112083 (2 samples, 0.01%)</title><rect x="1181.9" y="3749" width="0.2" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="1184.94" y="3759.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.101 (3 samples, 0.02%)</title><rect x="823.5" y="933" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="826.51" y="943.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core::Cons_O&gt; &gt;::allocate_kind(gctools::Header_s::Value const&amp;, unsigned long, void const*) (4 samples, 0.03%)</title><rect x="1177.7" y="3637" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1180.68" y="3647.5" ></text>
</g>
<g >
<title>`CST-TO-AST^CLEAVIR-CST-TO-AST^FN^^ (10 samples, 0.06%)</title><rect x="12.8" y="437" width="0.7" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="15.76" y="447.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.02%)</title><rect x="733.6" y="3605" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="736.57" y="3615.5" ></text>
</g>
<g >
<title>`bitTrackingDCE(llvm::Function&amp;, llvm::DemandedBits&amp;) (2 samples, 0.01%)</title><rect x="588.8" y="4469" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="591.84" y="4479.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (32 samples, 0.20%)</title><rect x="1186.7" y="2405" width="2.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="1189.72" y="2415.5" ></text>
</g>
<g >
<title>`CONSP^COMMON-LISP^FN^^ (8 samples, 0.05%)</title><rect x="880.5" y="3749" width="0.6" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="883.54" y="3759.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.28 (3,806 samples, 24.07%)</title><rect x="10.0" y="2741" width="284.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="13.00" y="2751.5" >`compile-file.lsp-compile-file52^76^TO..</text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (27 samples, 0.17%)</title><rect x="770.1" y="3621" width="2.1" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="773.14" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.5" y="1861" width="0.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="623.49" y="1871.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^192^TOP-COMPILE-FILE.14 (2 samples, 0.01%)</title><rect x="656.7" y="1941" width="0.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="659.69" y="1951.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::__class() const (2 samples, 0.01%)</title><rect x="1115.0" y="3733" width="0.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1117.99" y="3743.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="1176.2" y="3797" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1179.19" y="3807.5" ></text>
</g>
<g >
<title>`PERFORM^ASDF/ACTION^((:AROUND) (OPERATION COMPONENT))^METHOD^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2277" width="284.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="13.00" y="2287.5" >`PERFORM^ASDF/ACTION^((:AROUND) (OPERA..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="1125" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="630.95" y="1135.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (2 samples, 0.01%)</title><rect x="14.9" y="517" width="0.1" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="17.85" y="527.5" ></text>
</g>
<g >
<title>0x1110a4be6 (13 samples, 0.08%)</title><rect x="624.3" y="1285" width="1.0" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="627.30" y="1295.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="624.3" y="1541" width="1.0" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="627.30" y="1551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="619.8" y="2245" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="622.82" y="2255.5" ></text>
</g>
<g >
<title>0x1110a4be6 (21 samples, 0.13%)</title><rect x="630.8" y="1301" width="1.6" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="633.79" y="1311.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (65 samples, 0.41%)</title><rect x="10.0" y="677" width="4.9" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (7 samples, 0.04%)</title><rect x="872.9" y="2997" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="875.85" y="3007.5" ></text>
</g>
<g >
<title>0x1110a5606 (5 samples, 0.03%)</title><rect x="627.1" y="1685" width="0.4" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="630.13" y="1695.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (20 samples, 0.13%)</title><rect x="1185.1" y="2117" width="1.5" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="1188.15" y="2127.5" ></text>
</g>
<g >
<title>`CODEGEN-IF^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="645" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="826.51" y="655.5" ></text>
</g>
<g >
<title>0x1110a5606 (7 samples, 0.04%)</title><rect x="627.1" y="2165" width="0.6" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="630.13" y="2175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="229" width="0.2" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="635.43" y="239.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="357" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="622.15" y="367.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (65 samples, 0.41%)</title><rect x="10.0" y="725" width="4.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="627.7" y="789" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="630.73" y="799.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="625.3" y="757" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="628.27" y="767.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="627.1" y="1701" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="630.13" y="1711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="357" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="632.45" y="367.5" ></text>
</g>
<g >
<title>0x114007367 (67 samples, 0.42%)</title><rect x="10.0" y="949" width="5.0" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>`EMF-MAKE-METHOD^CLOS^FN^^ (5 samples, 0.03%)</title><rect x="640.2" y="3349" width="0.4" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="643.19" y="3359.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.03%)</title><rect x="629.4" y="1205" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="632.45" y="1215.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="628.0" y="1317" width="0.2" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="630.95" y="1327.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_get_ClassHolder_sp (2 samples, 0.01%)</title><rect x="908.0" y="3717" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="911.01" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1573" width="1.0" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="627.30" y="1583.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.30 (7 samples, 0.04%)</title><rect x="874.9" y="3173" width="0.6" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="877.94" y="3183.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="872.9" y="3077" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="875.85" y="3087.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="622.1" y="101" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="625.13" y="111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (126 samples, 0.80%)</title><rect x="620.9" y="3221" width="9.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="623.86" y="3231.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="149" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="635.43" y="159.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="619.1" y="133" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="622.15" y="143.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (70 samples, 0.44%)</title><rect x="656.2" y="3429" width="5.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="659.24" y="3439.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (64 samples, 0.40%)</title><rect x="620.9" y="2309" width="4.7" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="623.86" y="2319.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_unlock_slow (7 samples, 0.04%)</title><rect x="570.3" y="4437" width="0.6" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="573.33" y="4447.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="612.5" y="4293" width="0.2" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="615.50" y="4303.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceSet(unsigned long, gctools::smart_ptr&lt;core::T_O&gt;) (6 samples, 0.04%)</title><rect x="1166.3" y="3589" width="0.4" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="1169.26" y="3599.5" ></text>
</g>
<g >
<title>`BUILD-FUNCTION-DAG^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (1,062 samples, 6.72%)</title><rect x="879.8" y="3765" width="79.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="882.79" y="3775.5" >`BUILD-FU..</text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="664.5" y="3477" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="667.53" y="3487.5" ></text>
</g>
<g >
<title>0x1110a5606 (20 samples, 0.13%)</title><rect x="622.1" y="1973" width="1.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="625.13" y="1983.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (18 samples, 0.11%)</title><rect x="843.1" y="3541" width="1.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="846.07" y="3551.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (116 samples, 0.73%)</title><rect x="1005.3" y="3653" width="8.7" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="1008.34" y="3663.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="646.5" y="3157" width="0.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="649.46" y="3167.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (47 samples, 0.30%)</title><rect x="10.0" y="597" width="3.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (34 samples, 0.22%)</title><rect x="564.6" y="4709" width="2.5" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="567.58" y="4719.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.89 (2 samples, 0.01%)</title><rect x="876.3" y="2773" width="0.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="879.28" y="2783.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef&lt;llvm::Constant*&gt;, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (3 samples, 0.02%)</title><rect x="611.5" y="4325" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="614.46" y="4335.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (20 samples, 0.13%)</title><rect x="876.3" y="2949" width="1.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="879.28" y="2959.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp;) (3 samples, 0.02%)</title><rect x="643.9" y="2901" width="0.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="646.85" y="2911.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="639.4" y="3317" width="0.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="642.37" y="3327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (23 samples, 0.15%)</title><rect x="630.6" y="1573" width="1.8" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="633.64" y="1583.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="613.4" y="4277" width="0.1" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="616.40" y="4287.5" ></text>
</g>
<g >
<title>`simplifyFunctionCFG(llvm::Function&amp;, llvm::TargetTransformInfo const&amp;, llvm::SimplifyCFGOptions const&amp;) (2 samples, 0.01%)</title><rect x="596.5" y="4469" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="599.53" y="4479.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (13 samples, 0.08%)</title><rect x="653.3" y="3509" width="1.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="656.33" y="3519.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.5" y="1733" width="0.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="623.49" y="1743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="1893" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="632.45" y="1903.5" ></text>
</g>
<g >
<title>0x1110a5e76 (2 samples, 0.01%)</title><rect x="630.0" y="2853" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="633.04" y="2863.5" ></text>
</g>
<g >
<title>0x125581275 (5 samples, 0.03%)</title><rect x="640.2" y="3445" width="0.4" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="643.19" y="3455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="622.1" y="1109" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="625.13" y="1119.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="874.7" y="3301" width="0.2" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="877.72" y="3311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="421" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="626.33" y="431.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1020.6" y="3621" width="0.1" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="1023.56" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (20 samples, 0.13%)</title><rect x="622.1" y="1845" width="1.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="625.13" y="1855.5" ></text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (2 samples, 0.01%)</title><rect x="669.5" y="3669" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="672.53" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="453" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="630.95" y="463.5" ></text>
</g>
<g >
<title>`EFFECTIVE-METHOD-FUNCTION^CLOS^FN^^ (5 samples, 0.03%)</title><rect x="640.2" y="3365" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="643.19" y="3375.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (6 samples, 0.04%)</title><rect x="1020.3" y="3637" width="0.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="1023.27" y="3647.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^264^TOP-COMPILE-FILE.149 (3,806 samples, 24.07%)</title><rect x="10.0" y="1717" width="284.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="13.00" y="1727.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (155 samples, 0.98%)</title><rect x="620.9" y="3493" width="11.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="623.86" y="3503.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (19 samples, 0.12%)</title><rect x="1185.1" y="2085" width="1.5" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1188.15" y="2095.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (28 samples, 0.18%)</title><rect x="949.0" y="3477" width="2.1" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="951.98" y="3487.5" ></text>
</g>
<g >
<title>`DO-DISPATCH-MISS^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="4325" width="284.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="13.00" y="4335.5" >`DO-DISPATCH-MISS^CLOS^FN^^</text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="1180.9" y="3701" width="0.1" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1183.89" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="629.4" y="1237" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="632.45" y="1247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="625.7" y="1941" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="628.71" y="1951.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.20 (21 samples, 0.13%)</title><rect x="656.7" y="2709" width="1.6" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="659.69" y="2719.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T))^METHOD^^ (6 samples, 0.04%)</title><rect x="1157.1" y="3557" width="0.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="1160.08" y="3567.5" ></text>
</g>
<g >
<title>`CODEGEN^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="1973" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="826.44" y="1983.5" ></text>
</g>
<g >
<title>`INVALIDATED-DISPATCH-FUNCTION^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3237" width="284.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="13.00" y="3247.5" >`INVALIDATED-DISPATCH-FUNCTION^CLOS^FN^^</text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (12 samples, 0.08%)</title><rect x="616.9" y="3797" width="0.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="619.91" y="3807.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (16 samples, 0.10%)</title><rect x="635.6" y="3237" width="1.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="638.57" y="3247.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.293 (3 samples, 0.02%)</title><rect x="874.0" y="3541" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="876.97" y="3551.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="624.0" y="1925" width="0.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="627.00" y="1935.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^.154 (40 samples, 0.25%)</title><rect x="278.5" y="629" width="3.0" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="281.48" y="639.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="650.3" y="3365" width="0.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="653.27" y="3375.5" ></text>
</g>
<g >
<title>`GC_mark_some (20 samples, 0.13%)</title><rect x="1185.1" y="2101" width="1.5" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="1188.15" y="2111.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::MachineCopyPropagation::runOnMachineFunction(llvm::MachineFunction&amp;) (2 samples, 0.01%)</title><rect x="575.0" y="4405" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="578.03" y="4415.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (2 samples, 0.01%)</title><rect x="173.6" y="213" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="176.61" y="223.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="650.4" y="3365" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="653.42" y="3375.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.3" y="1045" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="626.33" y="1055.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.22 (7 samples, 0.04%)</title><rect x="1176.9" y="3269" width="0.6" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="1179.94" y="3279.5" ></text>
</g>
<g >
<title>`read.lisp-read193^5^TOP-COMPILE-FILE.2 (96 samples, 0.61%)</title><rect x="286.9" y="373" width="7.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="289.92" y="383.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm::Value const*, unsigned long long) (2 samples, 0.01%)</title><rect x="591.2" y="4373" width="0.2" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="594.23" y="4383.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T))^METHOD^^ (10 samples, 0.06%)</title><rect x="1157.5" y="3573" width="0.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="1160.53" y="3583.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="874.4" y="3317" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="877.42" y="3327.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="873.5" y="3525" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="876.52" y="3535.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.4 (6 samples, 0.04%)</title><rect x="823.3" y="2693" width="0.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="826.29" y="2703.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (36 samples, 0.23%)</title><rect x="10.0" y="517" width="2.7" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.8" y="1077" width="0.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="628.79" y="1087.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MachineInstr*, llvm::ScopedHashTableVal&lt;llvm::MachineInstr*, unsigned int&gt;*, llvm::MachineInstrExpressionTrait, llvm::detail::DenseMapPair&lt;llvm::MachineInstr*, llvm::ScopedHashTableVal&lt;llvm::MachineInstr*, unsigned int&gt;*&gt; &gt;, llvm::MachineInstr*, llvm::ScopedHashTableVal&lt;llvm::MachineInstr*, unsigned int&gt;*, llvm::MachineInstrExpressionTrait, llvm::detail::DenseMapPair&lt;llvm::MachineInstr*, llvm::ScopedHashTableVal&lt;llvm::MachineInstr*, unsigned int&gt;*&gt; &gt;::LookupBucketFor&lt;llvm::MachineInstr*&gt;(llvm::MachineInstr* const&amp;, llvm::detail::DenseMapPair&lt;llvm::MachineInstr*, llvm::ScopedHashTableVal&lt;llvm::MachineInstr*, unsigned int&gt;*&gt; const*&amp;) const (2 samples, 0.01%)</title><rect x="574.7" y="4341" width="0.1" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="577.66" y="4351.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (89 samples, 0.56%)</title><rect x="1182.9" y="3349" width="6.7" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="1185.91" y="3359.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::T_O&gt; (core::HashTable_O::*)(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (8 samples, 0.05%)</title><rect x="953.6" y="3701" width="0.6" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="956.61" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="625.6" y="2181" width="1.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="628.64" y="2191.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Symbol_O&gt;::operator-&gt;() (6 samples, 0.04%)</title><rect x="866.4" y="3653" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="869.43" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="626.2" y="965" width="0.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="629.16" y="975.5" ></text>
</g>
<g >
<title>0x1501b4cfb (5 samples, 0.03%)</title><rect x="173.9" y="117" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="176.91" y="127.5" ></text>
</g>
<g >
<title>`llvm::FindAvailablePtrLoadStore(llvm::Value*, llvm::Type*, bool, llvm::BasicBlock*, llvm::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::Instruction, false, false, void&gt;, false, false&gt;&amp;, unsigned int, llvm::AAResults*, bool*, unsigned int*) (3 samples, 0.02%)</title><rect x="591.2" y="4389" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="594.23" y="4399.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (24 samples, 0.15%)</title><rect x="619.1" y="3413" width="1.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="622.07" y="3423.5" ></text>
</g>
<g >
<title>0x110c56dfc (6 samples, 0.04%)</title><rect x="1160.2" y="3637" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1163.22" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="625.7" y="2133" width="0.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="628.71" y="2143.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (2 samples, 0.01%)</title><rect x="646.8" y="3237" width="0.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="649.76" y="3247.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^192^TOP-COMPILE-FILE.15 (6 samples, 0.04%)</title><rect x="823.3" y="2389" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="826.29" y="2399.5" ></text>
</g>
<g >
<title>0x1110a5606 (155 samples, 0.98%)</title><rect x="620.9" y="3525" width="11.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="623.86" y="3535.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (21 samples, 0.13%)</title><rect x="630.8" y="1349" width="1.6" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="633.79" y="1359.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="629.4" y="1493" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="632.45" y="1503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="1029" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="633.64" y="1039.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="1509" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="635.43" y="1519.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.20 (2 samples, 0.01%)</title><rect x="656.7" y="2101" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="659.69" y="2111.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (3 samples, 0.02%)</title><rect x="628.0" y="357" width="0.2" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="630.95" y="367.5" ></text>
</g>
<g >
<title>0x110d881ee (2 samples, 0.01%)</title><rect x="666.5" y="3445" width="0.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="669.47" y="3455.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.20 (6 samples, 0.04%)</title><rect x="823.3" y="2565" width="0.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="826.29" y="2575.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGBuilder::getCopyFromRegs(llvm::Value const*, llvm::Type*) (2 samples, 0.01%)</title><rect x="582.3" y="4277" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="585.27" y="4287.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.6" y="1125" width="0.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="632.60" y="1135.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="632.4" y="3285" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="635.43" y="3295.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&amp;, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*) (2 samples, 0.01%)</title><rect x="613.4" y="4325" width="0.1" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="616.40" y="4335.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (21 samples, 0.13%)</title><rect x="630.8" y="773" width="1.6" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="633.79" y="783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="581" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="625.13" y="591.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (4 samples, 0.03%)</title><rect x="662.7" y="3301" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="665.66" y="3311.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="622.1" y="1125" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="625.13" y="1135.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.26 (17 samples, 0.11%)</title><rect x="620.9" y="805" width="1.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="623.86" y="815.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="632.4" y="1349" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="635.43" y="1359.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (4 samples, 0.03%)</title><rect x="628.2" y="885" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="631.18" y="895.5" ></text>
</g>
<g >
<title>0x1501b4cfb (7 samples, 0.04%)</title><rect x="272.8" y="373" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="275.81" y="383.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="1021.5" y="3093" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="1024.46" y="3103.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (10 samples, 0.06%)</title><rect x="12.8" y="85" width="0.7" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="15.76" y="95.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (89 samples, 0.56%)</title><rect x="872.5" y="3653" width="6.6" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="875.48" y="3663.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (3 samples, 0.02%)</title><rect x="1170.1" y="3397" width="0.2" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="1173.07" y="3407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.4" y="1349" width="0.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="633.42" y="1359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1333" width="1.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="623.86" y="1343.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="629.4" y="1717" width="0.3" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="632.45" y="1727.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (89 samples, 0.56%)</title><rect x="1182.9" y="3301" width="6.7" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="1185.91" y="3311.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (5 samples, 0.03%)</title><rect x="610.9" y="4373" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="613.86" y="4383.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="640.2" y="2901" width="0.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="643.19" y="2911.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (83 samples, 0.53%)</title><rect x="15.0" y="693" width="6.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="18.00" y="703.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.86 (79 samples, 0.50%)</title><rect x="1183.7" y="2757" width="5.9" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="1186.66" y="2767.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.10 (12 samples, 0.08%)</title><rect x="872.5" y="3413" width="0.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="875.48" y="3423.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (5 samples, 0.03%)</title><rect x="737.2" y="3621" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="740.23" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="632.4" y="1877" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="635.43" y="1887.5" ></text>
</g>
<g >
<title>`llvm::MemorySSA::MemorySSA(llvm::Function&amp;, llvm::AAResults*, llvm::DominatorTree*) (4 samples, 0.03%)</title><rect x="605.3" y="4389" width="0.3" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="608.34" y="4399.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitCallInst(llvm::CallInst&amp;) (3 samples, 0.02%)</title><rect x="602.4" y="4357" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="605.35" y="4367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (8 samples, 0.05%)</title><rect x="627.9" y="1845" width="0.6" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="630.88" y="1855.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (9 samples, 0.06%)</title><rect x="657.6" y="2581" width="0.7" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="660.59" y="2591.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (7 samples, 0.04%)</title><rect x="620.9" y="405" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="623.86" y="415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="1109" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="631.18" y="1119.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="651.3" y="3541" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="654.32" y="3551.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (5 samples, 0.03%)</title><rect x="826.0" y="2917" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="828.98" y="2927.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.26 (3,806 samples, 24.07%)</title><rect x="10.0" y="2757" width="284.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="13.00" y="2767.5" >`compile-file.lsp-compile-file52^76^TO..</text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp;, unsigned int) (2 samples, 0.01%)</title><rect x="612.7" y="4293" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="615.73" y="4303.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.4" y="1141" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="632.45" y="1151.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (102 samples, 0.65%)</title><rect x="620.9" y="2805" width="7.6" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="623.86" y="2815.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt;::smart_ptr() (2 samples, 0.01%)</title><rect x="955.0" y="3717" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="958.03" y="3727.5" ></text>
</g>
<g >
<title>0x129141000 (4 samples, 0.03%)</title><rect x="767.5" y="3653" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="770.46" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (21 samples, 0.13%)</title><rect x="624.0" y="2101" width="1.6" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="627.00" y="2111.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (4 samples, 0.03%)</title><rect x="1183.3" y="2837" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1186.28" y="2847.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1157" width="0.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="629.16" y="1167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="627.5" y="1893" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="630.51" y="1903.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.6" y="981" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="633.64" y="991.5" ></text>
</g>
<g >
<title>`setup.lisp-setup426^310^TOP-COMPILE-FILE.232 (10 samples, 0.06%)</title><rect x="12.8" y="485" width="0.7" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="15.76" y="495.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (10 samples, 0.06%)</title><rect x="622.4" y="1285" width="0.7" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="625.35" y="1295.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="639.5" y="3333" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="642.52" y="3343.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::Function_O&gt;) (2 samples, 0.01%)</title><rect x="240.7" y="149" width="0.2" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="243.72" y="159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="373" width="0.7" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="625.35" y="383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="917" width="0.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="626.33" y="927.5" ></text>
</g>
<g >
<title>0x110c56dfc (47 samples, 0.30%)</title><rect x="695.1" y="3653" width="3.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="698.06" y="3663.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="619.1" y="229" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="622.15" y="239.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="627.7" y="1973" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="630.65" y="1983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1253" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="635.43" y="1263.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (829 samples, 5.24%)</title><rect x="174.3" y="341" width="61.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="177.28" y="351.5" >`COMBI..</text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="630.0" y="2533" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="633.04" y="2543.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (96 samples, 0.61%)</title><rect x="286.9" y="709" width="7.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="289.92" y="719.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.64 (14 samples, 0.09%)</title><rect x="1187.5" y="645" width="1.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1190.54" y="655.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.6" y="2437" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="623.64" y="2447.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (6 samples, 0.04%)</title><rect x="643.9" y="2981" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="646.85" y="2991.5" ></text>
</g>
<g >
<title>`gctools::GCRootsInModule::getTaggedIndex(char, unsigned long) (6 samples, 0.04%)</title><rect x="863.1" y="3637" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="866.15" y="3647.5" ></text>
</g>
<g >
<title>`CLASS-GET^EXT^FN^^ (16 samples, 0.10%)</title><rect x="1077.4" y="3733" width="1.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="1080.37" y="3743.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (62 samples, 0.39%)</title><rect x="236.2" y="693" width="4.7" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="239.24" y="703.5" ></text>
</g>
<g >
<title>0x111337578 (80 samples, 0.51%)</title><rect x="1183.6" y="2917" width="6.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1186.58" y="2927.5" ></text>
</g>
<g >
<title>`llvm::BranchProbabilityInfo::calculate(llvm::Function const&amp;, llvm::LoopInfo const&amp;, llvm::TargetLibraryInfo const*) (2 samples, 0.01%)</title><rect x="610.2" y="4389" width="0.1" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="613.19" y="4399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="630.8" y="261" width="1.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="633.79" y="271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="613" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="626.10" y="623.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="874.6" y="3333" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="877.57" y="3343.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.30 (21 samples, 0.13%)</title><rect x="656.7" y="2773" width="1.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="659.69" y="2783.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="875.2" y="2549" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="878.24" y="2559.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (119 samples, 0.75%)</title><rect x="716.6" y="3621" width="8.9" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="719.63" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (10 samples, 0.06%)</title><rect x="629.4" y="2885" width="0.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="632.45" y="2895.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::InstSimplifier::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="609.7" y="4405" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="612.67" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="623.1" y="1221" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="626.10" y="1231.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((ENCLOSE-INSTRUCTION T))^METHOD^^ (161 samples, 1.02%)</title><rect x="655.0" y="3573" width="12.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="658.05" y="3583.5" ></text>
</g>
<g >
<title>`llvm::InstructionCombiningPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="877.2" y="2645" width="0.1" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="880.18" y="2655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="821" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="623.64" y="831.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="625.3" y="357" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="628.27" y="367.5" ></text>
</g>
<g >
<title>`INSTANCE-SET^CORE^FN^^ (46 samples, 0.29%)</title><rect x="775.2" y="3637" width="3.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="778.22" y="3647.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.24 (2 samples, 0.01%)</title><rect x="656.7" y="2069" width="0.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="659.69" y="2079.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.02%)</title><rect x="632.4" y="2165" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="635.43" y="2175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2085" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="633.04" y="2095.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (34 samples, 0.22%)</title><rect x="240.9" y="101" width="2.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="243.86" y="111.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (4 samples, 0.03%)</title><rect x="739.7" y="3589" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="742.69" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="1525" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="635.43" y="1535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1173" width="0.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="627.00" y="1183.5" ></text>
</g>
<g >
<title>`DISPATCH-MISS^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2357" width="284.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="13.00" y="2367.5" >`DISPATCH-MISS^CLOS^FN^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="229" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="626.33" y="239.5" ></text>
</g>
<g >
<title>`core::ext__class_get(gctools::smart_ptr&lt;core::ClassHolder_O&gt;) (3 samples, 0.02%)</title><rect x="781.3" y="3637" width="0.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="784.34" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.8" y="1765" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="628.79" y="1775.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (34 samples, 0.22%)</title><rect x="240.9" y="149" width="2.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="243.86" y="159.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.24 (7 samples, 0.04%)</title><rect x="1176.9" y="3397" width="0.6" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="1179.94" y="3407.5" ></text>
</g>
<g >
<title>`start (3,806 samples, 24.07%)</title><rect x="10.0" y="4805" width="284.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="13.00" y="4815.5" >`start</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (17 samples, 0.11%)</title><rect x="620.9" y="1973" width="1.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="623.86" y="1983.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="627.7" y="1157" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="630.65" y="1167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1733" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="628.27" y="1743.5" ></text>
</g>
<g >
<title>`SEQUENCE-START-END^CORE^FN^^ (3 samples, 0.02%)</title><rect x="1022.4" y="3685" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="1025.43" y="3695.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (10 samples, 0.06%)</title><rect x="898.1" y="3637" width="0.7" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="901.08" y="3647.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (2 samples, 0.01%)</title><rect x="663.6" y="3349" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="666.63" y="3359.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_set_T_spintT_sp (69 samples, 0.44%)</title><rect x="1047.2" y="3701" width="5.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1050.21" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="789" width="0.7" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="625.35" y="799.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (12 samples, 0.08%)</title><rect x="626.2" y="277" width="0.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="629.16" y="287.5" ></text>
</g>
<g >
<title>`flockfile (4 samples, 0.03%)</title><rect x="568.8" y="4437" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="571.84" y="4447.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="629.4" y="1333" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="632.45" y="1343.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="627.7" y="1845" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="630.65" y="1855.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="1813" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="622.15" y="1823.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (12 samples, 0.08%)</title><rect x="626.2" y="581" width="0.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="629.16" y="591.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="629.4" y="1845" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="632.45" y="1855.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="2501" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="622.15" y="2511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="2261" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="623.64" y="2271.5" ></text>
</g>
<g >
<title>`GC_inner_start_routine (8,345 samples, 52.79%)</title><rect x="567.1" y="4757" width="622.9" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="570.12" y="4767.5" >`GC_inner_start_routine</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (20 samples, 0.13%)</title><rect x="630.8" y="277" width="1.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="633.79" y="287.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.103 (4 samples, 0.03%)</title><rect x="823.4" y="1717" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="826.44" y="1727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.6" y="2501" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="623.64" y="2511.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::SelectAllBasicBlocks(llvm::Function const&amp;) (2 samples, 0.01%)</title><rect x="620.9" y="341" width="0.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="623.94" y="351.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="613.4" y="4293" width="0.1" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="616.40" y="4303.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.88 (20 samples, 0.13%)</title><rect x="1187.2" y="1349" width="1.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="1190.24" y="1359.5" ></text>
</g>
<g >
<title>0x111337578 (8 samples, 0.05%)</title><rect x="1187.9" y="597" width="0.6" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1190.91" y="607.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="624.1" y="1781" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="627.15" y="1791.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1179.0" y="3765" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1182.03" y="3775.5" ></text>
</g>
<g >
<title>`llvm::MCStreamer::Finish() (3 samples, 0.02%)</title><rect x="572.7" y="4421" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="575.72" y="4431.5" ></text>
</g>
<g >
<title>`_pthread_start (12,003 samples, 75.93%)</title><rect x="294.1" y="4805" width="895.9" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="297.08" y="4815.5" >`_pthread_start</text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap&lt;llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo&lt;llvm::Constant*&gt;, llvm::detail::DenseMapPair&lt;llvm::Constant*, llvm::Constant*&gt; &gt;&amp;) (5 samples, 0.03%)</title><rect x="610.9" y="4357" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="613.86" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="2021" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="635.43" y="2031.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="644.5" y="3573" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="647.52" y="3583.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (64 samples, 0.40%)</title><rect x="620.9" y="2325" width="4.7" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="623.86" y="2335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="677" width="0.7" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="625.35" y="687.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (39 samples, 0.25%)</title><rect x="1070.9" y="3685" width="3.0" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1073.95" y="3695.5" ></text>
</g>
<g >
<title>`CLOSURE-CALL-OR-INVOKE^CLASP-CLEAVIR^FN^^ (23 samples, 0.15%)</title><rect x="1184.9" y="2309" width="1.7" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="1187.92" y="2319.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef&lt;llvm::Constant*&gt;, bool, llvm::Optional&lt;unsigned int&gt;, llvm::Type*) (2 samples, 0.01%)</title><rect x="601.2" y="4309" width="0.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="604.23" y="4319.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="620.5" y="1669" width="0.1" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="623.49" y="1679.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="1237" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="826.51" y="1247.5" ></text>
</g>
<g >
<title>`llvm::FindAvailableLoadedValue(llvm::LoadInst*, llvm::BasicBlock*, llvm::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::Instruction, false, false, void&gt;, false, false&gt;&amp;, unsigned int, llvm::AAResults*, bool*, unsigned int*) (6 samples, 0.04%)</title><rect x="603.4" y="4341" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="606.40" y="4351.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^264^TOP-COMPILE-FILE.153 (3,806 samples, 24.07%)</title><rect x="10.0" y="1653" width="284.1" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="13.00" y="1663.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`THES-&gt;TYPEQS^CLEAVIR-KILDALL-TYPE-INFERENCE^FN^^ (11 samples, 0.07%)</title><rect x="1181.1" y="3813" width="0.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="1184.12" y="3823.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.9 (9 samples, 0.06%)</title><rect x="997.6" y="3477" width="0.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="1000.58" y="3487.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (89 samples, 0.56%)</title><rect x="1182.9" y="3253" width="6.7" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="1185.91" y="3263.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.61 (27 samples, 0.17%)</title><rect x="1186.9" y="1637" width="2.1" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="1189.94" y="1647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.8" y="245" width="0.1" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="626.77" y="255.5" ></text>
</g>
<g >
<title>`llvm::orc::IRTransformLayer&lt;llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;, std::__1::function&lt;std::__1::shared_ptr&lt;llvm::Module&gt; (std::__1::shared_ptr&lt;llvm::Module&gt;)&gt; &gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (2 samples, 0.01%)</title><rect x="1021.3" y="3029" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="1024.31" y="3039.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.6" y="869" width="0.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="632.60" y="879.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="1621" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="635.43" y="1631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.3" y="469" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="626.33" y="479.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="648.6" y="3365" width="0.1" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="651.55" y="3375.5" ></text>
</g>
<g >
<title>`llvmo::ClaspJIT_O::addModule(gctools::smart_ptr&lt;llvmo::Module_O&gt;) (2 samples, 0.01%)</title><rect x="1021.3" y="3045" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1024.31" y="3055.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (2 samples, 0.01%)</title><rect x="852.0" y="3429" width="0.2" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="855.03" y="3439.5" ></text>
</g>
<g >
<title>0x11bde6a98 (34 samples, 0.22%)</title><rect x="240.9" y="261" width="2.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="243.86" y="271.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm::SimplifyQuery const&amp;, unsigned int) (3 samples, 0.02%)</title><rect x="595.3" y="4405" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="598.33" y="4415.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (829 samples, 5.24%)</title><rect x="174.3" y="437" width="61.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="177.28" y="447.5" >`CONVE..</text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="620.3" y="2261" width="0.1" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="623.27" y="2271.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.31 (9 samples, 0.06%)</title><rect x="997.6" y="3589" width="0.6" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="1000.58" y="3599.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.24 (5 samples, 0.03%)</title><rect x="1156.6" y="3253" width="0.4" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="1159.64" y="3263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.04%)</title><rect x="629.4" y="2741" width="0.6" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="632.45" y="2751.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="1557" width="0.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="632.74" y="1567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="917" width="1.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="627.30" y="927.5" ></text>
</g>
<g >
<title>0x110c59d50 (5 samples, 0.03%)</title><rect x="714.5" y="3653" width="0.4" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="717.54" y="3663.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (15 samples, 0.09%)</title><rect x="1187.5" y="1029" width="1.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="1190.46" y="1039.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="1021.8" y="3701" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="1024.76" y="3711.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE*^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="874.0" y="3045" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="876.97" y="3055.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.11 (6 samples, 0.04%)</title><rect x="1021.2" y="3461" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="1024.24" y="3471.5" ></text>
</g>
<g >
<title>`mp::start_thread(void*) (8,345 samples, 52.79%)</title><rect x="567.1" y="4741" width="622.9" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="570.12" y="4751.5" >`mp::start_thread(void*)</text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (12 samples, 0.08%)</title><rect x="646.8" y="3317" width="0.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="649.76" y="3327.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (27 samples, 0.17%)</title><rect x="630.3" y="2949" width="2.1" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="633.34" y="2959.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (18 samples, 0.11%)</title><rect x="1174.3" y="3605" width="1.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="1177.33" y="3615.5" ></text>
</g>
<g >
<title>0x1110a5606 (27 samples, 0.17%)</title><rect x="630.3" y="2453" width="2.1" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="633.34" y="2463.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt;::smart_ptr() (2 samples, 0.01%)</title><rect x="864.0" y="3637" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="867.04" y="3647.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="632.4" y="2149" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="635.43" y="2159.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (4 samples, 0.03%)</title><rect x="623.7" y="1701" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="626.70" y="1711.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (55 samples, 0.35%)</title><rect x="169.4" y="245" width="4.1" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="172.43" y="255.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (16 samples, 0.10%)</title><rect x="142.3" y="69" width="1.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="145.26" y="79.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="625.3" y="421" width="0.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="628.27" y="431.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (60 samples, 0.38%)</title><rect x="236.2" y="261" width="4.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="239.24" y="271.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.31 (7 samples, 0.04%)</title><rect x="874.9" y="3157" width="0.6" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="877.94" y="3167.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (27 samples, 0.17%)</title><rect x="1186.9" y="1685" width="2.1" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="1189.94" y="1695.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (102 samples, 0.65%)</title><rect x="620.9" y="2837" width="7.6" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="623.86" y="2847.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="619.4" y="277" width="0.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="622.44" y="287.5" ></text>
</g>
<g >
<title>`wrapped_dump_module_Module_spcore__T_sp (71 samples, 0.45%)</title><rect x="567.1" y="4533" width="5.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="570.12" y="4543.5" ></text>
</g>
<g >
<title>`core::core__instance_set(gctools::smart_ptr&lt;core::T_O&gt;, int, gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.03%)</title><rect x="777.9" y="3605" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="780.91" y="3615.5" ></text>
</g>
<g >
<title>`llvm::LiveVariables::runOnInstr(llvm::MachineInstr&amp;, llvm::SmallVectorImpl&lt;unsigned int&gt;&amp;) (5 samples, 0.03%)</title><rect x="584.4" y="4373" width="0.3" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="587.36" y="4383.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (3 samples, 0.02%)</title><rect x="1177.8" y="3541" width="0.2" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="1180.76" y="3551.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="2789" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="635.43" y="2799.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T T T T))^METHOD^^ (17 samples, 0.11%)</title><rect x="1157.1" y="3637" width="1.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="1160.08" y="3647.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (111 samples, 0.70%)</title><rect x="278.5" y="805" width="8.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="281.48" y="815.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (2 samples, 0.01%)</title><rect x="14.9" y="197" width="0.1" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="17.85" y="207.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (597 samples, 3.78%)</title><rect x="425.3" y="4693" width="44.6" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="428.30" y="4703.5" >`GC_..</text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (22 samples, 0.14%)</title><rect x="656.7" y="3269" width="1.6" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="659.69" y="3279.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="652.7" y="3557" width="0.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="655.66" y="3567.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (66 samples, 0.42%)</title><rect x="1141.0" y="3509" width="4.9" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="1143.96" y="3519.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2709" width="284.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="13.00" y="2719.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="2101" width="0.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="623.49" y="2111.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="622.4" y="1301" width="0.7" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="625.35" y="1311.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENCLOSE-INSTRUCTION T T T))^METHOD^^ (22 samples, 0.14%)</title><rect x="1187.1" y="1429" width="1.6" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="1190.09" y="1439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="3349" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="635.43" y="3359.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (16 samples, 0.10%)</title><rect x="635.6" y="3685" width="1.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="638.57" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="624.0" y="1989" width="1.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="627.00" y="1999.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.30 (5 samples, 0.03%)</title><rect x="1156.6" y="3349" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="1159.64" y="3359.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitICmpInst(llvm::ICmpInst&amp;) (8 samples, 0.05%)</title><rect x="602.8" y="4357" width="0.6" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="605.80" y="4367.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="651.7" y="3573" width="0.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="654.69" y="3583.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="628.6" y="2597" width="0.7" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="631.55" y="2607.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.1" y="213" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="626.10" y="223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1461" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="626.70" y="1471.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (12 samples, 0.08%)</title><rect x="638.9" y="3445" width="0.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="641.93" y="3455.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (426 samples, 2.69%)</title><rect x="240.9" y="357" width="31.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="243.86" y="367.5" >`c..</text>
</g>
<g >
<title>0x1110a5456 (7 samples, 0.04%)</title><rect x="627.1" y="2277" width="0.6" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="630.13" y="2287.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="664.5" y="3461" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="667.53" y="3471.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Vaslist&gt;::smart_ptr(core::Vaslist*) (2 samples, 0.01%)</title><rect x="1015.3" y="3685" width="0.1" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="1018.27" y="3695.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitCallInst(llvm::CallInst&amp;) (4 samples, 0.03%)</title><rect x="590.6" y="4421" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="593.56" y="4431.5" ></text>
</g>
<g >
<title>0x1110a5456 (2 samples, 0.01%)</title><rect x="620.6" y="1989" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="623.64" y="1999.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.22 (5 samples, 0.03%)</title><rect x="1156.6" y="3269" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="1159.64" y="3279.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3637" width="284.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="13.00" y="3647.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>0x1110a5606 (16 samples, 0.10%)</title><rect x="619.1" y="2853" width="1.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="622.07" y="2863.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (55 samples, 0.35%)</title><rect x="1061.2" y="3717" width="4.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="1064.17" y="3727.5" ></text>
</g>
<g >
<title>`llvm::JumpThreadingPass::ProcessBlock(llvm::BasicBlock*) (2 samples, 0.01%)</title><rect x="877.0" y="2613" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="880.03" y="2623.5" ></text>
</g>
<g >
<title>0x110c60e84 (3 samples, 0.02%)</title><rect x="1053.2" y="3733" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1056.18" y="3743.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::MCMachOStreamer::EmitInstToData(llvm::MCInst const&amp;, llvm::MCSubtargetInfo const&amp;) (3 samples, 0.02%)</title><rect x="586.7" y="4325" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="589.68" y="4335.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="625.8" y="1637" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="628.79" y="1647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1477" width="0.1" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="627.00" y="1487.5" ></text>
</g>
<g >
<title>0x11171939a (3 samples, 0.02%)</title><rect x="877.9" y="3349" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="880.93" y="3359.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="3189" width="284.1" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="13.00" y="3199.5" >`core::DtreeInterpreter_O::entry_point..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (23 samples, 0.15%)</title><rect x="619.1" y="2885" width="1.7" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="622.07" y="2895.5" ></text>
</g>
<g >
<title>0x12913f11c (3 samples, 0.02%)</title><rect x="753.8" y="3653" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="756.80" y="3663.5" ></text>
</g>
<g >
<title>`CODEGEN-LET^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="1909" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="826.44" y="1919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="981" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="623.64" y="991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="181" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="625.13" y="191.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (27 samples, 0.17%)</title><rect x="630.3" y="3237" width="2.1" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="633.34" y="3247.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.9" y="837" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="628.94" y="847.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.88 (15 samples, 0.09%)</title><rect x="1187.5" y="885" width="1.1" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="1190.46" y="895.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.7" y="1781" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="632.74" y="1791.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.6" y="2629" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="623.64" y="2639.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="620.5" y="1109" width="0.1" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="623.49" y="1119.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (40 samples, 0.25%)</title><rect x="278.5" y="325" width="3.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="281.48" y="335.5" ></text>
</g>
<g >
<title>0x14e114bd6 (2 samples, 0.01%)</title><rect x="660.1" y="3381" width="0.2" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="663.12" y="3391.5" ></text>
</g>
<g >
<title>0x110d5dedb (8 samples, 0.05%)</title><rect x="733.2" y="3653" width="0.6" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="736.20" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (6 samples, 0.04%)</title><rect x="619.4" y="1973" width="0.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="622.37" y="1983.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="2309" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="622.15" y="2319.5" ></text>
</g>
<g >
<title>`read.lisp-read201^11^TOP-COMPILE-FILE.55 (96 samples, 0.61%)</title><rect x="286.9" y="613" width="7.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="289.92" y="623.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="625.3" y="69" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="628.27" y="79.5" ></text>
</g>
<g >
<title>`CODEGEN^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="789" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="826.51" y="799.5" ></text>
</g>
<g >
<title>0x1110a5606 (64 samples, 0.40%)</title><rect x="620.9" y="2357" width="4.7" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="623.86" y="2367.5" ></text>
</g>
<g >
<title>`fflush (14 samples, 0.09%)</title><rect x="570.0" y="4469" width="1.0" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="572.96" y="4479.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (829 samples, 5.24%)</title><rect x="174.3" y="69" width="61.9" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="177.28" y="79.5" >`conve..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1525" width="0.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="629.16" y="1535.5" ></text>
</g>
<g >
<title>`llvmo::ClaspJIT_O::addModule(gctools::smart_ptr&lt;llvmo::Module_O&gt;) (4 samples, 0.03%)</title><rect x="643.5" y="2933" width="0.3" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="646.48" y="2943.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch(llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt;&amp;, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::BatchUpdateInfo*) (2 samples, 0.01%)</title><rect x="621.5" y="421" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="624.53" y="431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (11 samples, 0.07%)</title><rect x="628.6" y="2677" width="0.8" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="631.55" y="2687.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="213" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="630.95" y="223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1381" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="623.64" y="1391.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="766.9" y="3605" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="769.93" y="3615.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (6 samples, 0.04%)</title><rect x="1157.5" y="3445" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="1160.53" y="3455.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (17 samples, 0.11%)</title><rect x="620.9" y="1285" width="1.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="623.86" y="1295.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.293 (7 samples, 0.04%)</title><rect x="874.9" y="3237" width="0.6" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="877.94" y="3247.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1909" width="1.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="623.86" y="1919.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (5 samples, 0.03%)</title><rect x="273.0" y="85" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="275.96" y="95.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="1156.8" y="3173" width="0.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="1159.78" y="3183.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="628.2" y="1333" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="631.18" y="1343.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="625.3" y="645" width="0.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="628.27" y="655.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (95 samples, 0.60%)</title><rect x="1094.8" y="3717" width="7.0" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="1097.76" y="3727.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (10 samples, 0.06%)</title><rect x="12.8" y="101" width="0.7" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="15.76" y="111.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="624.3" y="1317" width="1.0" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="627.30" y="1327.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (6 samples, 0.04%)</title><rect x="629.4" y="2373" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="632.45" y="2383.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="652.8" y="3509" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="655.81" y="3519.5" ></text>
</g>
<g >
<title>`ELIMINATE-CATCHES^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (3 samples, 0.02%)</title><rect x="1176.0" y="3813" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="1178.97" y="3823.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (10 samples, 0.06%)</title><rect x="1157.5" y="3589" width="0.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="1160.53" y="3599.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (1,469 samples, 9.29%)</title><rect x="21.2" y="549" width="109.6" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="24.20" y="559.5" >`convert.lisp..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="517" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="632.45" y="527.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (2 samples, 0.01%)</title><rect x="975.9" y="3701" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="978.93" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="325" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="626.33" y="335.5" ></text>
</g>
<g >
<title>`llvm::ScheduleDAGMI::initQueues(llvm::ArrayRef&lt;llvm::SUnit*&gt;, llvm::ArrayRef&lt;llvm::SUnit*&gt;) (2 samples, 0.01%)</title><rect x="575.5" y="4357" width="0.1" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="578.48" y="4367.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm::Optional&lt;llvm::MemoryLocation&gt; const&amp;) (3 samples, 0.02%)</title><rect x="595.7" y="4357" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="598.71" y="4367.5" ></text>
</g>
<g >
<title>0x1110a4be6 (10 samples, 0.06%)</title><rect x="628.6" y="2645" width="0.7" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="631.55" y="2655.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (2 samples, 0.01%)</title><rect x="647.4" y="3269" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="650.43" y="3279.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (2 samples, 0.01%)</title><rect x="1087.0" y="3557" width="0.1" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="1090.00" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="630.8" y="453" width="1.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="633.79" y="463.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="626.2" y="1909" width="0.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="629.16" y="1919.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="1397" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="635.43" y="1407.5" ></text>
</g>
<g >
<title>0x1257602e2 (12 samples, 0.08%)</title><rect x="626.2" y="405" width="0.9" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="629.16" y="415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="661" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="635.43" y="671.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (14 samples, 0.09%)</title><rect x="663.4" y="3445" width="1.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="666.41" y="3455.5" ></text>
</g>
<g >
<title>0x1110a4be6 (4 samples, 0.03%)</title><rect x="629.4" y="1301" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="632.45" y="1311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.3" y="1781" width="0.1" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="623.27" y="1791.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (28 samples, 0.18%)</title><rect x="630.3" y="3365" width="2.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="633.34" y="3375.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGBuilder::visitCall(llvm::CallInst const&amp;) (8 samples, 0.05%)</title><rect x="582.3" y="4325" width="0.6" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="585.27" y="4335.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (10 samples, 0.06%)</title><rect x="656.8" y="2565" width="0.8" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="659.84" y="2575.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.24 (9 samples, 0.06%)</title><rect x="997.6" y="3349" width="0.6" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="1000.58" y="3359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.8" y="629" width="0.1" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="626.77" y="639.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (10 samples, 0.06%)</title><rect x="877.0" y="2757" width="0.8" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="880.03" y="2767.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (3 samples, 0.02%)</title><rect x="966.7" y="3669" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="969.67" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="389" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="630.95" y="399.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (4 samples, 0.03%)</title><rect x="629.4" y="2149" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="632.45" y="2159.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.1" y="581" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="626.10" y="591.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (34 samples, 0.22%)</title><rect x="240.9" y="85" width="2.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="243.86" y="95.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.69 (7,681 samples, 48.59%)</title><rect x="616.2" y="4549" width="573.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="619.23" y="4559.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.69</text>
</g>
<g >
<title>0x1258cfc3b (2 samples, 0.01%)</title><rect x="173.6" y="325" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="176.61" y="335.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.6" y="837" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="623.64" y="847.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (40 samples, 0.25%)</title><rect x="278.5" y="101" width="3.0" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="281.48" y="111.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (7 samples, 0.04%)</title><rect x="635.6" y="3125" width="0.6" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="638.64" y="3135.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="620.3" y="2597" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="623.27" y="2607.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="725" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="625.13" y="735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="581" width="0.3" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="622.15" y="591.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::SelectAllBasicBlocks(llvm::Function const&amp;) (75 samples, 0.47%)</title><rect x="577.9" y="4373" width="5.6" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="580.87" y="4383.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (27 samples, 0.17%)</title><rect x="915.7" y="3701" width="2.0" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="918.69" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.9" y="69" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="628.94" y="79.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="644.8" y="3541" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="647.82" y="3551.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="629.6" y="1189" width="0.1" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="632.60" y="1199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="622.1" y="1077" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="625.13" y="1087.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="628.0" y="405" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="630.95" y="415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="725" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="622.15" y="735.5" ></text>
</g>
<g >
<title>`std::__1::__function::__func&lt;llvmo::ClaspJIT_O::ClaspJIT_O()::$_5, std::__1::allocator&lt;llvmo::ClaspJIT_O::ClaspJIT_O()::$_5&gt;, std::__1::shared_ptr&lt;llvm::Module&gt; (std::__1::shared_ptr&lt;llvm::Module&gt;)&gt;::operator()(std::__1::shared_ptr&lt;llvm::Module&gt;&amp;&amp;) (2 samples, 0.01%)</title><rect x="657.4" y="2469" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="660.44" y="2479.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (27 samples, 0.17%)</title><rect x="630.3" y="2965" width="2.1" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="633.34" y="2975.5" ></text>
</g>
<g >
<title>`CODEGEN^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="1109" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="826.51" y="1119.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.3" y="1925" width="0.1" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="623.27" y="1935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="677" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="630.95" y="687.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="643.3" y="3589" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="646.33" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (21 samples, 0.13%)</title><rect x="630.8" y="1093" width="1.6" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="633.79" y="1103.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="1021.5" y="3141" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="1024.46" y="3151.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.84 (89 samples, 0.56%)</title><rect x="1182.9" y="3237" width="6.7" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="1185.91" y="3247.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&amp;, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*) (2 samples, 0.01%)</title><rect x="593.0" y="4373" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="596.02" y="4383.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (5 samples, 0.03%)</title><rect x="273.0" y="229" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="275.96" y="239.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="1541" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="622.15" y="1551.5" ></text>
</g>
<g >
<title>`llvm::LivePhysRegs::stepBackward(llvm::MachineInstr const&amp;) (2 samples, 0.01%)</title><rect x="574.1" y="4389" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="577.14" y="4399.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="597.8" y="4277" width="0.1" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="600.80" y="4287.5" ></text>
</g>
<g >
<title>`cst-to-ast.lisp-cst-to-ast301^3^TOP-COMPILE-FILE.4 (10 samples, 0.06%)</title><rect x="12.8" y="389" width="0.7" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="15.76" y="399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="245" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="635.43" y="255.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (19 samples, 0.12%)</title><rect x="902.3" y="3605" width="1.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="905.26" y="3615.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="1158.1" y="3477" width="0.1" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="1161.05" y="3487.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (14 samples, 0.09%)</title><rect x="646.8" y="3365" width="1.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="649.76" y="3375.5" ></text>
</g>
<g >
<title>0x11bdea0eb (3 samples, 0.02%)</title><rect x="749.8" y="3653" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="752.84" y="3663.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (17 samples, 0.11%)</title><rect x="143.5" y="245" width="1.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="146.46" y="255.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (6 samples, 0.04%)</title><rect x="641.0" y="3445" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="644.02" y="3455.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (7 samples, 0.04%)</title><rect x="1176.9" y="3333" width="0.6" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="1179.94" y="3343.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::run() (24 samples, 0.15%)</title><rect x="590.0" y="4437" width="1.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="593.04" y="4447.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (8 samples, 0.05%)</title><rect x="627.9" y="1925" width="0.6" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="630.88" y="1935.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^124^TOP-COMPILE-FILE.325 (582 samples, 3.68%)</title><rect x="130.8" y="661" width="43.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="133.84" y="671.5" >`con..</text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Cons_O&gt;::operator gctools::smart_ptr&lt;core::T_O&gt;() const (3 samples, 0.02%)</title><rect x="1151.3" y="3717" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="1154.34" y="3727.5" ></text>
</g>
<g >
<title>`READ-CHAR^ECLECTOR.READER^FN^^ (2 samples, 0.01%)</title><rect x="287.2" y="133" width="0.2" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="290.22" y="143.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="622.1" y="1333" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="625.13" y="1343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="1957" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="622.37" y="1967.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (21 samples, 0.13%)</title><rect x="630.8" y="949" width="1.6" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="633.79" y="959.5" ></text>
</g>
<g >
<title>0x110cd62a2 (1,469 samples, 9.29%)</title><rect x="21.2" y="357" width="109.6" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="24.20" y="367.5" >0x110cd62a2</text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="659.2" y="3301" width="0.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="662.15" y="3311.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="874.7" y="3317" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="877.72" y="3327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="2837" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="635.43" y="2847.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (17 samples, 0.11%)</title><rect x="143.5" y="117" width="1.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="146.46" y="127.5" ></text>
</g>
<g >
<title>`REMOVE-USELESS-INSTRUCTIONS^CLEAVIR-REMOVE-USELESS-INSTRUCTIONS^FN^^ (34 samples, 0.22%)</title><rect x="634.2" y="3797" width="2.6" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="637.22" y="3807.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="709" width="109.6" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="24.20" y="719.5" >`CONVERT-SPEC..</text>
</g>
<g >
<title>0x15011e74d (3 samples, 0.02%)</title><rect x="650.8" y="3621" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="653.79" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (102 samples, 0.65%)</title><rect x="620.9" y="2645" width="7.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="623.86" y="2655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="1061" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="630.95" y="1071.5" ></text>
</g>
<g >
<title>`COMPILE-FILE^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1813" width="284.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="13.00" y="1823.5" >`COMPILE-FILE^COMMON-LISP^FN^^</text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="629.1" y="2533" width="0.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="632.07" y="2543.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3797" width="284.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="13.00" y="3807.5" >`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^..</text>
</g>
<g >
<title>`cc_protect_alloca (17 samples, 0.11%)</title><rect x="1111.9" y="3733" width="1.3" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="1114.93" y="3743.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="629.6" y="901" width="0.1" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="632.60" y="911.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="630.6" y="901" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="633.64" y="911.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (11 samples, 0.07%)</title><rect x="1179.4" y="3797" width="0.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="1182.40" y="3807.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="1285" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="635.43" y="1295.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap&lt;llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo&lt;llvm::Constant*&gt;, llvm::detail::DenseMapPair&lt;llvm::Constant*, llvm::Constant*&gt; &gt;&amp;) (2 samples, 0.01%)</title><rect x="594.8" y="4405" width="0.2" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="597.81" y="4415.5" ></text>
</g>
<g >
<title>0x1110a62f6 (3 samples, 0.02%)</title><rect x="619.1" y="1013" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="622.15" y="1023.5" ></text>
</g>
<g >
<title>`cc_protect_alloca (3 samples, 0.02%)</title><rect x="996.9" y="3717" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="999.90" y="3727.5" ></text>
</g>
<g >
<title>0x1113378e5 (3 samples, 0.02%)</title><rect x="1189.2" y="2453" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1192.18" y="2463.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (10 samples, 0.06%)</title><rect x="656.8" y="2549" width="0.8" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="659.84" y="2559.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (426 samples, 2.69%)</title><rect x="240.9" y="405" width="31.8" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="243.86" y="415.5" >`C..</text>
</g>
<g >
<title>`eliminateDeadStores(llvm::Function&amp;, llvm::AAResults*, llvm::MemoryDependenceResults*, llvm::DominatorTree*, llvm::TargetLibraryInfo const*) (4 samples, 0.03%)</title><rect x="599.0" y="4405" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="601.99" y="4415.5" ></text>
</g>
<g >
<title>`__dynamic_cast (3 samples, 0.02%)</title><rect x="1103.7" y="3701" width="0.2" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="1106.71" y="3711.5" ></text>
</g>
<g >
<title>`CODEGEN-SPECIAL-OPERATOR^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="901" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="826.51" y="911.5" ></text>
</g>
<g >
<title>`OPERATE^ASDF/OPERATE^((OPERATION COMPONENT))^METHOD^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2981" width="284.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="13.00" y="2991.5" >`OPERATE^ASDF/OPERATE^((OPERATION COMP..</text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="1180.2" y="3781" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="1183.22" y="3791.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.7" y="2021" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="632.74" y="2031.5" ></text>
</g>
<g >
<title>0x11171939a (3 samples, 0.02%)</title><rect x="650.2" y="3445" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="653.20" y="3455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2469" width="2.1" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="633.34" y="2479.5" ></text>
</g>
<g >
<title>`DISPATCH-MISS^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2581" width="284.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="13.00" y="2591.5" >`DISPATCH-MISS^CLOS^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.4" y="1141" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="633.42" y="1151.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="633.4" y="3781" width="0.2" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="636.40" y="3791.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="627.7" y="1733" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="630.65" y="1743.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="639.4" y="3285" width="0.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="642.37" y="3295.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (43 samples, 0.27%)</title><rect x="948.6" y="3589" width="3.2" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="951.61" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.4" y="1125" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="632.45" y="1135.5" ></text>
</g>
<g >
<title>0x1111fb3f8 (2 samples, 0.01%)</title><rect x="749.5" y="3653" width="0.1" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="752.47" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="628.2" y="1141" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="631.18" y="1151.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2341" width="284.1" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="13.00" y="2351.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`CCLASP-EVAL^CLASP-CLEAVIR^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="4421" width="284.1" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="13.00" y="4431.5" >`CCLASP-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^METHOD^^ (361 samples, 2.28%)</title><rect x="244.3" y="181" width="26.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="247.30" y="191.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.8" y="1461" width="0.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="628.79" y="1471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="2037" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="632.74" y="2047.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="619.4" y="453" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="622.44" y="463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.05%)</title><rect x="627.9" y="1765" width="0.6" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="630.88" y="1775.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.5" y="1749" width="0.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="623.49" y="1759.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::T_O&gt; (core::HashTable_O::*)(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1180.9" y="3717" width="0.1" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="1183.89" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (20 samples, 0.13%)</title><rect x="876.3" y="3205" width="1.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="879.28" y="3215.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.01%)</title><rect x="901.2" y="3557" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="904.21" y="3567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (3 samples, 0.02%)</title><rect x="619.1" y="2085" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="622.15" y="2095.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="667.8" y="3653" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="670.81" y="3663.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.20 (5 samples, 0.03%)</title><rect x="1156.6" y="3285" width="0.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="1159.64" y="3295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="597" width="0.1" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="627.00" y="607.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (4 samples, 0.03%)</title><rect x="906.1" y="3685" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="909.07" y="3695.5" ></text>
</g>
<g >
<title>0x110d5d006 (2 samples, 0.01%)</title><rect x="1065.9" y="3733" width="0.2" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="1068.95" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.1" y="1829" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="627.15" y="1839.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (75 samples, 0.47%)</title><rect x="1184.0" y="2581" width="5.6" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="1186.95" y="2591.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core::T_O&gt;) (83 samples, 0.53%)</title><rect x="1007.8" y="3621" width="6.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1010.80" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (20 samples, 0.13%)</title><rect x="630.8" y="645" width="1.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="633.79" y="655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="629.4" y="2869" width="0.8" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="632.45" y="2879.5" ></text>
</g>
<g >
<title>0x1501b4d6b (40 samples, 0.25%)</title><rect x="278.5" y="421" width="3.0" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="281.48" y="431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.0" y="2133" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="633.04" y="2143.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="1156.6" y="3477" width="0.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="1159.64" y="3487.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGBuilder::visit(llvm::Instruction const&amp;) (17 samples, 0.11%)</title><rect x="582.1" y="4341" width="1.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="585.12" y="4351.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Symbol_O&gt;::operator-&gt;() (2 samples, 0.01%)</title><rect x="954.3" y="3701" width="0.1" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="957.28" y="3711.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (8 samples, 0.05%)</title><rect x="1187.9" y="485" width="0.6" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="1190.91" y="495.5" ></text>
</g>
<g >
<title>0x1110a6386 (2 samples, 0.01%)</title><rect x="627.7" y="901" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="630.73" y="911.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (19 samples, 0.12%)</title><rect x="1187.3" y="1237" width="1.4" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="1190.31" y="1247.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.6" y="1717" width="0.2" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="623.64" y="1727.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (5 samples, 0.03%)</title><rect x="641.6" y="3477" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="644.61" y="3487.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="1525" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="622.15" y="1535.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::SelectAllBasicBlocks(llvm::Function const&amp;) (2 samples, 0.01%)</title><rect x="876.7" y="2549" width="0.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="879.66" y="2559.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::List_V&gt;) (3 samples, 0.02%)</title><rect x="1021.8" y="3669" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1024.76" y="3679.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.10 (7 samples, 0.04%)</title><rect x="1176.9" y="3509" width="0.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="1179.94" y="3519.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.30 (16 samples, 0.10%)</title><rect x="635.6" y="3349" width="1.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="638.57" y="3359.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="623.8" y="485" width="0.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="626.77" y="495.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.31 (11 samples, 0.07%)</title><rect x="643.5" y="3493" width="0.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="646.48" y="3503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="2549" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="623.64" y="2559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (24 samples, 0.15%)</title><rect x="619.1" y="3221" width="1.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="622.07" y="3231.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="624.3" y="645" width="1.0" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="627.30" y="655.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (27 samples, 0.17%)</title><rect x="630.3" y="3157" width="2.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="633.34" y="3167.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.92 (90 samples, 0.57%)</title><rect x="1182.8" y="3637" width="6.8" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="1185.83" y="3647.5" ></text>
</g>
<g >
<title>0x110c590ae (2 samples, 0.01%)</title><rect x="700.0" y="3653" width="0.1" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="702.98" y="3663.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="907.0" y="3669" width="0.2" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="910.04" y="3679.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="649.7" y="3493" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="652.75" y="3503.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="645.8" y="3285" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="648.79" y="3295.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (27 samples, 0.17%)</title><rect x="630.3" y="2517" width="2.1" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="633.34" y="2527.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (18 samples, 0.11%)</title><rect x="13.5" y="549" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="16.51" y="559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="485" width="0.2" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="635.43" y="495.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (4 samples, 0.03%)</title><rect x="1177.7" y="3621" width="0.3" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="1180.68" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="949" width="0.1" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="627.00" y="959.5" ></text>
</g>
<g >
<title>0x1501b4c8b (71 samples, 0.45%)</title><rect x="281.5" y="517" width="5.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="284.47" y="527.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (59 samples, 0.37%)</title><rect x="760.2" y="3589" width="4.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="763.22" y="3599.5" ></text>
</g>
<g >
<title>`inline-one-instruction.lisp-inline-one-instruction395^185^TOP-COMPILE-FILE.87 (4 samples, 0.03%)</title><rect x="651.3" y="3605" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="654.32" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (4 samples, 0.03%)</title><rect x="625.3" y="1285" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="628.27" y="1295.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MachineInstr*, llvm::ScopedHashTableVal&lt;llvm::MachineInstr*, unsigned int&gt;*, llvm::MachineInstrExpressionTrait, llvm::detail::DenseMapPair&lt;llvm::MachineInstr*, llvm::ScopedHashTableVal&lt;llvm::MachineInstr*, unsigned int&gt;*&gt; &gt;, llvm::MachineInstr*, llvm::ScopedHashTableVal&lt;llvm::MachineInstr*, unsigned int&gt;*, llvm::MachineInstrExpressionTrait, llvm::detail::DenseMapPair&lt;llvm::MachineInstr*, llvm::ScopedHashTableVal&lt;llvm::MachineInstr*, unsigned int&gt;*&gt; &gt;::LookupBucketFor&lt;llvm::MachineInstr const*&gt;(llvm::MachineInstr const* const&amp;, llvm::detail::DenseMapPair&lt;llvm::MachineInstr*, llvm::ScopedHashTableVal&lt;llvm::MachineInstr*, unsigned int&gt;*&gt; const*&amp;) const (2 samples, 0.01%)</title><rect x="574.8" y="4389" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="577.81" y="4399.5" ></text>
</g>
<g >
<title>`read-common.lisp-read-common192^53^TOP-COMPILE-FILE.26 (93 samples, 0.59%)</title><rect x="287.1" y="245" width="6.9" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="290.07" y="255.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="565" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="628.94" y="575.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (147 samples, 0.93%)</title><rect x="597.5" y="4421" width="11.0" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="600.50" y="4431.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^264^TOP-COMPILE-FILE.150 (3,806 samples, 24.07%)</title><rect x="10.0" y="1701" width="284.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="13.00" y="1711.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`gctools::Header_s::validate() const (30 samples, 0.19%)</title><rect x="816.3" y="3589" width="2.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="819.35" y="3599.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (82 samples, 0.52%)</title><rect x="15.0" y="133" width="6.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="18.00" y="143.5" ></text>
</g>
<g >
<title>`core::StackFrameDynamicScopeManager::new_binding(core::Argument const&amp;, gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="858.0" y="3589" width="0.1" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="861.00" y="3599.5" ></text>
</g>
<g >
<title>0x1257602e2 (5 samples, 0.03%)</title><rect x="619.4" y="757" width="0.4" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="622.44" y="767.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.220 (2 samples, 0.01%)</title><rect x="616.3" y="3909" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="619.31" y="3919.5" ></text>
</g>
<g >
<title>`PERFORM-OUTCOME^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3125" width="284.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="13.00" y="3135.5" >`PERFORM-OUTCOME^CLOS^FN^^</text>
</g>
<g >
<title>`FILTER-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (5 samples, 0.03%)</title><rect x="667.4" y="3685" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="670.36" y="3695.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="3509" width="284.1" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="13.00" y="3519.5" >`core::DtreeInterpreter_O::entry_point..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1573" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="622.15" y="1583.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.1" y="1701" width="0.2" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="627.15" y="1711.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="667.1" y="3685" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="670.06" y="3695.5" ></text>
</g>
<g >
<title>`CODEGEN-SPECIAL-OPERATOR^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="581" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="826.51" y="591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="632.4" y="2453" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="635.43" y="2463.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="629.7" y="1285" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="632.74" y="1295.5" ></text>
</g>
<g >
<title>`GC_alloc_large (33 samples, 0.21%)</title><rect x="1011.0" y="3541" width="2.5" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="1014.01" y="3551.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="625.3" y="501" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="628.27" y="511.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (2 samples, 0.01%)</title><rect x="901.5" y="3589" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="904.51" y="3599.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::Function_O&gt;) (63 samples, 0.40%)</title><rect x="273.8" y="613" width="4.7" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="276.78" y="623.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.30 (12 samples, 0.08%)</title><rect x="872.5" y="3253" width="0.9" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="875.48" y="3263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (64 samples, 0.40%)</title><rect x="620.9" y="2341" width="4.7" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="623.86" y="2351.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::run() (2 samples, 0.01%)</title><rect x="877.2" y="2613" width="0.1" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="880.18" y="2623.5" ></text>
</g>
<g >
<title>`combineInstructionsOverFunction(llvm::Function&amp;, llvm::InstCombineWorklist&amp;, llvm::AAResults*, llvm::AssumptionCache&amp;, llvm::TargetLibraryInfo&amp;, llvm::DominatorTree&amp;, llvm::OptimizationRemarkEmitter&amp;, bool, llvm::LoopInfo*) (33 samples, 0.21%)</title><rect x="589.5" y="4453" width="2.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="592.51" y="4463.5" ></text>
</g>
<g >
<title>`gctools::Vec0_impl&lt;gctools::GCVector&lt;gctools::smart_ptr&lt;core::Symbol_O&gt;, gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;gctools::smart_ptr&lt;core::Symbol_O&gt; &gt; &gt; &gt; &gt;::operator[](unsigned long) (4 samples, 0.03%)</title><rect x="863.6" y="3637" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="866.59" y="3647.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^494^TOP-COMPILE-FILE.58 (3 samples, 0.02%)</title><rect x="823.5" y="1429" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="826.51" y="1439.5" ></text>
</g>
<g >
<title>`INVALIDATED-DISPATCH-FUNCTION^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3557" width="284.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="13.00" y="3567.5" >`INVALIDATED-DISPATCH-FUNCTION^CLOS^FN^^</text>
</g>
<g >
<title>0x1110a5456 (64 samples, 0.40%)</title><rect x="620.9" y="2469" width="4.7" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="623.86" y="2479.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.86 (21 samples, 0.13%)</title><rect x="1187.2" y="1365" width="1.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="1190.16" y="1375.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((ENCLOSE-INSTRUCTION T))^METHOD^^ (69 samples, 0.44%)</title><rect x="645.3" y="3573" width="5.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="648.27" y="3583.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm::Optional&lt;llvm::MemoryLocation&gt; const&amp;) (2 samples, 0.01%)</title><rect x="591.2" y="4357" width="0.2" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="594.23" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="1349" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="630.95" y="1359.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (67 samples, 0.42%)</title><rect x="852.2" y="3429" width="5.0" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="855.17" y="3439.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (17 samples, 0.11%)</title><rect x="823.8" y="3077" width="1.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="826.81" y="3087.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="667.1" y="3669" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="670.06" y="3679.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="623.3" y="405" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="626.33" y="415.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="652.8" y="3541" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="655.81" y="3551.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (12 samples, 0.08%)</title><rect x="872.5" y="3221" width="0.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="875.48" y="3231.5" ></text>
</g>
<g >
<title>`llvm::GVN::processBlock(llvm::BasicBlock*) (16 samples, 0.10%)</title><rect x="606.5" y="4357" width="1.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="609.53" y="4367.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (26 samples, 0.16%)</title><rect x="946.2" y="3605" width="2.0" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="949.22" y="3615.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (8 samples, 0.05%)</title><rect x="733.2" y="3637" width="0.6" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="736.20" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="613" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="635.43" y="623.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (24 samples, 0.15%)</title><rect x="656.7" y="3317" width="1.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="659.69" y="3327.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (7 samples, 0.04%)</title><rect x="173.8" y="373" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="176.76" y="383.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.65 (86 samples, 0.54%)</title><rect x="1183.1" y="2949" width="6.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="1186.13" y="2959.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (5 samples, 0.03%)</title><rect x="645.6" y="3317" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="648.64" y="3327.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.31 (5 samples, 0.03%)</title><rect x="1156.6" y="3637" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="1159.64" y="3647.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (19 samples, 0.12%)</title><rect x="1185.1" y="2053" width="1.5" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="1188.15" y="2063.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (13 samples, 0.08%)</title><rect x="624.3" y="1013" width="1.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="627.30" y="1023.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (582 samples, 3.68%)</title><rect x="130.8" y="517" width="43.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="133.84" y="527.5" >`con..</text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.01%)</title><rect x="1155.1" y="3733" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1158.14" y="3743.5" ></text>
</g>
<g >
<title>0x1258cfcab (61 samples, 0.39%)</title><rect x="273.9" y="117" width="4.6" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="276.93" y="127.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (4 samples, 0.03%)</title><rect x="1177.7" y="3605" width="0.3" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="1180.68" y="3615.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (126 samples, 0.80%)</title><rect x="620.9" y="3317" width="9.4" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="623.86" y="3327.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (34 samples, 0.22%)</title><rect x="841.9" y="3557" width="2.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="844.87" y="3567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="624.0" y="885" width="0.1" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="627.00" y="895.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (4 samples, 0.03%)</title><rect x="623.7" y="1493" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="626.70" y="1503.5" ></text>
</g>
<g >
<title>0x1110a5456 (3 samples, 0.02%)</title><rect x="628.0" y="1253" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="630.95" y="1263.5" ></text>
</g>
<g >
<title>0x1257602e2 (5 samples, 0.03%)</title><rect x="619.4" y="1237" width="0.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="622.44" y="1247.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="648.8" y="3461" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="651.78" y="3471.5" ></text>
</g>
<g >
<title>`llvm::MCObjectStreamer::EmitInstruction(llvm::MCInst const&amp;, llvm::MCSubtargetInfo const&amp;, bool) (3 samples, 0.02%)</title><rect x="586.7" y="4341" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="589.68" y="4351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="629.4" y="1445" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="632.45" y="1455.5" ></text>
</g>
<g >
<title>0x10fbcf2b0 (3 samples, 0.02%)</title><rect x="663.9" y="3381" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="666.93" y="3391.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.24 (3 samples, 0.02%)</title><rect x="823.5" y="1221" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="826.51" y="1231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="623.1" y="1285" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="626.10" y="1295.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (17 samples, 0.11%)</title><rect x="624.0" y="2021" width="1.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="627.00" y="2031.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (3 samples, 0.02%)</title><rect x="662.1" y="3333" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="665.06" y="3343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="3413" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="635.43" y="3423.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::DAGCombiner::AddToWorklist(llvm::SDNode*) (2 samples, 0.01%)</title><rect x="579.0" y="4325" width="0.1" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="581.99" y="4335.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::JumpThreading::runOnFunction(llvm::Function&amp;) (7 samples, 0.04%)</title><rect x="598.2" y="4405" width="0.6" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="601.25" y="4415.5" ></text>
</g>
<g >
<title>0x10fbd12ad (3 samples, 0.02%)</title><rect x="901.1" y="3605" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="904.14" y="3615.5" ></text>
</g>
<g >
<title>0x123709171 (96 samples, 0.61%)</title><rect x="286.9" y="501" width="7.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="289.92" y="511.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (61 samples, 0.39%)</title><rect x="273.9" y="101" width="4.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="276.93" y="111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="627.7" y="821" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="630.73" y="831.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.103 (3 samples, 0.02%)</title><rect x="823.5" y="1301" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="826.51" y="1311.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::MCMachOStreamer::FinishImpl() (3 samples, 0.02%)</title><rect x="572.7" y="4405" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="575.72" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (10 samples, 0.06%)</title><rect x="622.4" y="1253" width="0.7" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="625.35" y="1263.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (26 samples, 0.16%)</title><rect x="630.4" y="2021" width="2.0" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="633.42" y="2031.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (127 samples, 0.80%)</title><rect x="620.9" y="3413" width="9.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="623.86" y="3423.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (7 samples, 0.04%)</title><rect x="639.0" y="3381" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="642.00" y="3391.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.01%)</title><rect x="1179.8" y="3701" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1182.85" y="3711.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="1156.8" y="3141" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="1159.78" y="3151.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="1021.5" y="3013" width="0.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1024.46" y="3023.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.8" y="405" width="0.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="626.77" y="415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="2021" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="622.15" y="2031.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="641.8" y="3397" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="644.84" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="2021" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="632.45" y="2031.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::JumpThreading::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="877.0" y="2645" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="880.03" y="2655.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Instance_O&gt;, unsigned long) (2 samples, 0.01%)</title><rect x="652.7" y="3509" width="0.1" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="655.66" y="3519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1189" width="0.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="623.49" y="1199.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="293" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="622.15" y="303.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (2 samples, 0.01%)</title><rect x="766.8" y="3605" width="0.1" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="769.79" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2181" width="2.1" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="633.34" y="2191.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE*^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="1176.9" y="3221" width="0.6" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="1179.94" y="3231.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.22 (6 samples, 0.04%)</title><rect x="1021.2" y="3381" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="1024.24" y="3391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.8" y="197" width="0.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="626.77" y="207.5" ></text>
</g>
<g >
<title>0x1290a7db8 (60 samples, 0.38%)</title><rect x="236.2" y="277" width="4.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="239.24" y="287.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="876.1" y="3349" width="0.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="879.06" y="3359.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (435 samples, 2.75%)</title><rect x="240.9" y="629" width="32.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="243.86" y="639.5" >`C..</text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (4 samples, 0.03%)</title><rect x="1103.9" y="3701" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="1106.94" y="3711.5" ></text>
</g>
<g >
<title>`CLASS-GET^EXT^FN^^ (4 samples, 0.03%)</title><rect x="1168.2" y="3637" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1171.20" y="3647.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.20 (12 samples, 0.08%)</title><rect x="872.5" y="3189" width="0.9" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="875.48" y="3199.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (2 samples, 0.01%)</title><rect x="1183.8" y="2645" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1186.80" y="2655.5" ></text>
</g>
<g >
<title>0x123711728 (18 samples, 0.11%)</title><rect x="13.5" y="453" width="1.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="16.51" y="463.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (7 samples, 0.04%)</title><rect x="620.3" y="2805" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="623.27" y="2815.5" ></text>
</g>
<g >
<title>0x128fec840 (7 samples, 0.04%)</title><rect x="752.2" y="3653" width="0.6" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="755.23" y="3663.5" ></text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (13 samples, 0.08%)</title><rect x="913.5" y="3733" width="0.9" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="916.45" y="3743.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (5 samples, 0.03%)</title><rect x="627.1" y="1957" width="0.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="630.13" y="1967.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.3" y="1621" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="626.33" y="1631.5" ></text>
</g>
<g >
<title>`ADD-ATOMS^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.01%)</title><rect x="273.3" y="853" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="276.33" y="863.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (42 samples, 0.27%)</title><rect x="948.6" y="3573" width="3.1" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="951.61" y="3583.5" ></text>
</g>
<g >
<title>0x12913f12e (30 samples, 0.19%)</title><rect x="754.1" y="3653" width="2.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="757.10" y="3663.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const (9 samples, 0.06%)</title><rect x="813.4" y="3589" width="0.7" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="816.44" y="3599.5" ></text>
</g>
<g >
<title>`GC_alloc_large (4 samples, 0.03%)</title><rect x="1177.7" y="3589" width="0.3" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="1180.68" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="629.4" y="725" width="0.2" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="632.45" y="735.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="2389" width="284.1" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="13.00" y="2399.5" >`core::FuncallableInstance_O::funcalla..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="619.4" y="1589" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="622.44" y="1599.5" ></text>
</g>
<g >
<title>0x1258cfc3b (65 samples, 0.41%)</title><rect x="273.6" y="853" width="4.9" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="276.63" y="863.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1156.6" y="3141" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1159.64" y="3151.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type*, llvm::DataLayout const&amp;) (2 samples, 0.01%)</title><rect x="607.4" y="4293" width="0.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="610.35" y="4303.5" ></text>
</g>
<g >
<title>0x1501b4cfb (65 samples, 0.41%)</title><rect x="281.9" y="277" width="4.9" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="284.92" y="287.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.5" y="1957" width="0.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="623.49" y="1967.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (36 samples, 0.23%)</title><rect x="10.0" y="165" width="2.7" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (40 samples, 0.25%)</title><rect x="278.5" y="277" width="3.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="281.48" y="287.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (8 samples, 0.05%)</title><rect x="1155.3" y="3733" width="0.6" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1158.29" y="3743.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.01%)</title><rect x="956.7" y="3733" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="959.75" y="3743.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.86 (7 samples, 0.04%)</title><rect x="823.3" y="3077" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="826.29" y="3087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="805" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="626.33" y="815.5" ></text>
</g>
<g >
<title>`read-common.lisp-read-common192^53^TOP-COMPILE-FILE.25 (96 samples, 0.61%)</title><rect x="286.9" y="581" width="7.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="289.92" y="591.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (32 samples, 0.20%)</title><rect x="1186.7" y="2373" width="2.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="1189.72" y="2383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (26 samples, 0.16%)</title><rect x="630.4" y="1701" width="2.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="633.42" y="1711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="437" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="628.94" y="447.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (20 samples, 0.13%)</title><rect x="994.9" y="3653" width="1.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="997.89" y="3663.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="625.9" y="1061" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="628.94" y="1071.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (7,643 samples, 48.35%)</title><rect x="619.1" y="3861" width="570.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="622.07" y="3871.5" >`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`GC_try_to_collect_inner (71 samples, 0.45%)</title><rect x="1140.6" y="3525" width="5.3" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="1143.59" y="3535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2901" width="2.1" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="633.34" y="2911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.6" y="981" width="0.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="632.60" y="991.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="1157.8" y="3381" width="0.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1160.83" y="3391.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::Function_O&gt;) (2 samples, 0.01%)</title><rect x="173.6" y="149" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="176.61" y="159.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::run() (3 samples, 0.02%)</title><rect x="825.5" y="2869" width="0.3" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="828.53" y="2879.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (7 samples, 0.04%)</title><rect x="874.9" y="2853" width="0.6" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="877.94" y="2863.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef&lt;llvm::Constant*&gt;, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (2 samples, 0.01%)</title><rect x="612.7" y="4229" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="615.73" y="4239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="693" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="631.18" y="703.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (20 samples, 0.13%)</title><rect x="622.1" y="2005" width="1.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="625.13" y="2015.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.0" y="2581" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="633.04" y="2591.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (18 samples, 0.11%)</title><rect x="627.1" y="2309" width="1.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="630.13" y="2319.5" ></text>
</g>
<g >
<title>`client_validate (3 samples, 0.02%)</title><rect x="1047.2" y="3685" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1050.21" y="3695.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.0" y="2421" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="633.04" y="2431.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="874.0" y="2949" width="0.2" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="876.97" y="2959.5" ></text>
</g>
<g >
<title>0x1110a4be6 (3 samples, 0.02%)</title><rect x="625.3" y="405" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="628.27" y="415.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (10 samples, 0.06%)</title><rect x="12.8" y="117" width="0.7" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="15.76" y="127.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::Module&amp;) (4 samples, 0.03%)</title><rect x="609.3" y="4437" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="612.29" y="4447.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="629.4" y="1621" width="0.3" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="632.45" y="1631.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="666.7" y="3445" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="669.69" y="3455.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="620.6" y="1557" width="0.2" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="623.64" y="1567.5" ></text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (2 samples, 0.01%)</title><rect x="655.8" y="3461" width="0.1" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="658.79" y="3471.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.18 (6 samples, 0.04%)</title><rect x="823.3" y="2581" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="826.29" y="2591.5" ></text>
</g>
<g >
<title>0x125851779 (10 samples, 0.06%)</title><rect x="1157.5" y="3605" width="0.8" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1160.53" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.04%)</title><rect x="627.1" y="2261" width="0.6" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="630.13" y="2271.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2805" width="284.1" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="13.00" y="2815.5" >`DO-COMPILATION-UNIT^COMPILER^FN^^</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (126 samples, 0.80%)</title><rect x="130.8" y="149" width="9.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="133.84" y="159.5" ></text>
</g>
<g >
<title>`INSTANCE-SET^CORE^FN^^ (2 samples, 0.01%)</title><rect x="1172.2" y="3637" width="0.1" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="1175.16" y="3647.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (14 samples, 0.09%)</title><rect x="1187.5" y="613" width="1.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="1190.54" y="623.5" ></text>
</g>
<g >
<title>0x1257602e2 (13 samples, 0.08%)</title><rect x="624.3" y="277" width="1.0" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="627.30" y="287.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.7" y="2005" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="632.74" y="2015.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (20 samples, 0.13%)</title><rect x="876.3" y="3061" width="1.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="879.28" y="3071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1029" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="630.65" y="1039.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&amp;) (3 samples, 0.02%)</title><rect x="657.0" y="2373" width="0.2" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="659.99" y="2383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="1413" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="632.45" y="1423.5" ></text>
</g>
<g >
<title>`llvm::PointerMayBeCapturedBefore(llvm::Value const*, bool, bool, llvm::Instruction const*, llvm::DominatorTree*, bool, llvm::OrderedBasicBlock*) (2 samples, 0.01%)</title><rect x="599.1" y="4309" width="0.1" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="602.07" y="4319.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (6 samples, 0.04%)</title><rect x="629.4" y="2213" width="0.5" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="632.45" y="2223.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="641.7" y="3429" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="644.69" y="3439.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.03%)</title><rect x="862.8" y="3637" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="865.85" y="3647.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (6 samples, 0.04%)</title><rect x="649.3" y="3445" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="652.30" y="3455.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="645" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="635.43" y="655.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (115 samples, 0.73%)</title><rect x="620.9" y="2917" width="8.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="623.86" y="2927.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (4 samples, 0.03%)</title><rect x="1156.3" y="3749" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="1159.34" y="3759.5" ></text>
</g>
<g >
<title>0x111521403 (6 samples, 0.04%)</title><rect x="653.7" y="3429" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="656.70" y="3439.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.1" y="277" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="626.10" y="287.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.13 (3 samples, 0.02%)</title><rect x="874.0" y="3285" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="876.97" y="3295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="581" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="630.95" y="591.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (8 samples, 0.05%)</title><rect x="627.9" y="2021" width="0.6" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="630.88" y="2031.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="619.1" y="1205" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="622.15" y="1215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="805" width="0.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="629.16" y="815.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.3" y="1541" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="626.33" y="1551.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (26 samples, 0.16%)</title><rect x="630.4" y="1829" width="2.0" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="633.42" y="1839.5" ></text>
</g>
<g >
<title>0x1110a5606 (6 samples, 0.04%)</title><rect x="619.4" y="2453" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="622.37" y="2463.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (5 samples, 0.03%)</title><rect x="619.4" y="885" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="622.44" y="895.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^714^TOP-COMPILE-FILE.491 (192 samples, 1.21%)</title><rect x="619.1" y="3765" width="14.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="622.07" y="3775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="581" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="626.33" y="591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="1989" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="633.04" y="1999.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.26 (5 samples, 0.03%)</title><rect x="640.2" y="3077" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="643.19" y="3087.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (23 samples, 0.15%)</title><rect x="1184.9" y="2181" width="1.7" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="1187.92" y="2191.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="660.6" y="3301" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="663.65" y="3311.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (17 samples, 0.11%)</title><rect x="640.2" y="3477" width="1.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="643.19" y="3487.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="626.2" y="1333" width="0.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="629.16" y="1343.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::smart_ptr&lt;core::T_O&gt;, void*) (8 samples, 0.05%)</title><rect x="807.8" y="3605" width="0.6" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="810.76" y="3615.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&amp;, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*) (2 samples, 0.01%)</title><rect x="604.1" y="4325" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="607.14" y="4335.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.8" y="421" width="0.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="626.77" y="431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.5" y="2021" width="0.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="623.49" y="2031.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE^COMPILER^FN^^ (17 samples, 0.11%)</title><rect x="620.9" y="1093" width="1.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="623.86" y="1103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (16 samples, 0.10%)</title><rect x="622.1" y="1701" width="1.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="625.13" y="1711.5" ></text>
</g>
<g >
<title>`PERFORM-OUTCOME^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3445" width="284.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="13.00" y="3455.5" >`PERFORM-OUTCOME^CLOS^FN^^</text>
</g>
<g >
<title>`DO-INLINING^CLEAVIR-PARTIAL-INLINING^FN^^ (7,261 samples, 45.93%)</title><rect x="634.0" y="3813" width="542.0" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="637.00" y="3823.5" >`DO-INLINING^CLEAVIR-PARTIAL-INLINING^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.5" y="1621" width="0.1" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="626.47" y="1631.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.101 (3 samples, 0.02%)</title><rect x="823.5" y="613" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="826.51" y="623.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (24 samples, 0.15%)</title><rect x="619.1" y="3173" width="1.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="622.07" y="3183.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (17 samples, 0.11%)</title><rect x="620.9" y="1173" width="1.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="623.86" y="1183.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="952.9" y="3653" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="955.94" y="3663.5" ></text>
</g>
<g >
<title>0x1110a5606 (26 samples, 0.16%)</title><rect x="630.4" y="1781" width="2.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="633.42" y="1791.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="646.4" y="3301" width="0.2" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="649.39" y="3311.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.55 (7,677 samples, 48.56%)</title><rect x="616.5" y="3941" width="573.1" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="619.53" y="3951.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.55</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (126 samples, 0.80%)</title><rect x="620.9" y="3269" width="9.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="623.86" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="1301" width="0.2" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="632.74" y="1311.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="624.3" y="437" width="1.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="627.30" y="447.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.24 (3,806 samples, 24.07%)</title><rect x="10.0" y="2773" width="284.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="13.00" y="2783.5" >`compile-file.lsp-compile-file52^76^TO..</text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="955.2" y="3717" width="0.1" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="958.18" y="3727.5" ></text>
</g>
<g >
<title>0x10fbdf260 (2 samples, 0.01%)</title><rect x="901.5" y="3605" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="904.51" y="3615.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="660.6" y="3285" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="663.65" y="3295.5" ></text>
</g>
<g >
<title>`llvm::LiveIntervals::computeRegUnitRange(llvm::LiveRange&amp;, unsigned int) (2 samples, 0.01%)</title><rect x="583.6" y="4373" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="586.62" y="4383.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (3 samples, 0.02%)</title><rect x="659.7" y="3269" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="662.68" y="3279.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (86 samples, 0.54%)</title><rect x="1183.1" y="3061" width="6.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="1186.13" y="3071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="709" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="633.64" y="719.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="1477" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="632.45" y="1487.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="4085" width="284.1" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="13.00" y="4095.5" >`core::DtreeInterpreter_O::entry_point..</text>
</g>
<g >
<title>`DISPATCH-MISS^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3493" width="284.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="13.00" y="3503.5" >`DISPATCH-MISS^CLOS^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="623.7" y="1909" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="626.70" y="1919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="933" width="0.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="629.16" y="943.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="632.4" y="2597" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="635.43" y="2607.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="632.4" y="2437" width="0.3" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="635.43" y="2447.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD^^ (3 samples, 0.02%)</title><rect x="663.6" y="3365" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="666.63" y="3375.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="625.3" y="1797" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="628.27" y="1807.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (4 samples, 0.03%)</title><rect x="667.1" y="3637" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="670.06" y="3647.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (8 samples, 0.05%)</title><rect x="621.5" y="517" width="0.6" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="624.53" y="527.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="650.4" y="3381" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="653.42" y="3391.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.18 (21 samples, 0.13%)</title><rect x="656.7" y="2725" width="1.6" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="659.69" y="2735.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::DAGCombiner::visit(llvm::SDNode*) (6 samples, 0.04%)</title><rect x="579.2" y="4309" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="582.21" y="4319.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.04%)</title><rect x="272.8" y="437" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="275.81" y="447.5" ></text>
</g>
<g >
<title>0x1258cf53b (2 samples, 0.01%)</title><rect x="273.8" y="213" width="0.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="276.78" y="223.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (4 samples, 0.03%)</title><rect x="625.3" y="1749" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="628.27" y="1759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="2341" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="623.64" y="2351.5" ></text>
</g>
<g >
<title>`TRANSLATE-INPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="666.5" y="3477" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="669.47" y="3487.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="632.4" y="3477" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="635.43" y="3487.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.6" y="1045" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="633.64" y="1055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1909" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="623.49" y="1919.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.50 (7,680 samples, 48.58%)</title><rect x="616.3" y="4325" width="573.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="619.31" y="4335.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.50</text>
</g>
<g >
<title>0x1110a4be6 (17 samples, 0.11%)</title><rect x="620.9" y="2149" width="1.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="623.86" y="2159.5" ></text>
</g>
<g >
<title>`DO-DISPATCH-MISS^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2085" width="284.1" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" >`DO-DISPATCH-MISS^CLOS^FN^^</text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="645.1" y="3445" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="648.12" y="3455.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (69 samples, 0.44%)</title><rect x="645.3" y="3605" width="5.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="648.27" y="3615.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (2 samples, 0.01%)</title><rect x="906.4" y="3653" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="909.44" y="3663.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="632.4" y="1077" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="635.43" y="1087.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="622.1" y="197" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="625.13" y="207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="1301" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="633.64" y="1311.5" ></text>
</g>
<g >
<title>0x114007367 (1,469 samples, 9.29%)</title><rect x="21.2" y="501" width="109.6" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="24.20" y="511.5" >0x114007367</text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp;) (3 samples, 0.02%)</title><rect x="636.2" y="3045" width="0.3" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="639.24" y="3055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1029" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="622.15" y="1039.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (830 samples, 5.25%)</title><rect x="174.3" y="517" width="61.9" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="177.28" y="527.5" >`CONVE..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1941" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="635.43" y="1951.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.3" y="341" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="626.33" y="351.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvmo::PassManager_O, bool (llvm::legacy::PassManager::*)(llvm::Module&amp;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="1021.5" y="3045" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1024.46" y="3055.5" ></text>
</g>
<g >
<title>0x1110a62f6 (4 samples, 0.03%)</title><rect x="627.1" y="1397" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="630.13" y="1407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="789" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="622.15" y="799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1749" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="630.65" y="1759.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (5 samples, 0.03%)</title><rect x="1013.5" y="3541" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1016.47" y="3551.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (4 samples, 0.03%)</title><rect x="872.5" y="2901" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="875.48" y="2911.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (5 samples, 0.03%)</title><rect x="872.5" y="3077" width="0.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="875.48" y="3087.5" ></text>
</g>
<g >
<title>`inline-one-instruction.lisp-inline-one-instruction395^185^TOP-COMPILE-FILE.85 (4 samples, 0.03%)</title><rect x="651.3" y="3621" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="654.32" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="624.3" y="1445" width="1.0" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="627.30" y="1455.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="626.2" y="1637" width="0.9" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="629.16" y="1647.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (4 samples, 0.03%)</title><rect x="141.9" y="69" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="144.89" y="79.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (6 samples, 0.04%)</title><rect x="628.6" y="2549" width="0.5" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="631.62" y="2559.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="1156.8" y="3045" width="0.1" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1159.78" y="3055.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="624.3" y="1733" width="1.0" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="627.30" y="1743.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="591.5" y="4373" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="594.53" y="4383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="632.4" y="2613" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="635.43" y="2623.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.0" y="2405" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="633.04" y="2415.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.12 (43 samples, 0.27%)</title><rect x="823.3" y="3365" width="3.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="826.29" y="3375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="837" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="626.10" y="847.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.3" y="1621" width="0.1" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="623.27" y="1631.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^METHOD^^.35 (10 samples, 0.06%)</title><rect x="12.8" y="37" width="0.7" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="15.76" y="47.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="898.4" y="3573" width="0.1" height="15.0" fill="rgb(206,58,58)" rx="2" ry="2" />
<text  x="901.38" y="3583.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="630.0" y="2485" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="633.04" y="2495.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.6" y="1237" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="623.64" y="1247.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.56 (2 samples, 0.01%)</title><rect x="656.7" y="2485" width="0.1" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="659.69" y="2495.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="630.4" y="997" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="633.42" y="1007.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (9 samples, 0.06%)</title><rect x="620.9" y="533" width="0.6" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="623.86" y="543.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((BLOCK-AST T))^METHOD^^.152 (40 samples, 0.25%)</title><rect x="278.5" y="181" width="3.0" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="281.48" y="191.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (3 samples, 0.02%)</title><rect x="654.7" y="3445" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="657.67" y="3455.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::FixupBWInstPass::runOnMachineFunction(llvm::MachineFunction&amp;) (3 samples, 0.02%)</title><rect x="574.1" y="4405" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="577.06" y="4415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="624.0" y="1813" width="0.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="627.00" y="1823.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="620.5" y="2277" width="0.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="623.49" y="2287.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (4 samples, 0.03%)</title><rect x="877.5" y="2661" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="880.48" y="2671.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (61 samples, 0.39%)</title><rect x="273.9" y="165" width="4.6" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="276.93" y="175.5" ></text>
</g>
<g >
<title>0x1110a5456 (13 samples, 0.08%)</title><rect x="624.3" y="709" width="1.0" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="627.30" y="719.5" ></text>
</g>
<g >
<title>0x1501b4cfb (5 samples, 0.03%)</title><rect x="273.0" y="245" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="275.96" y="255.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.6" y="1621" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="623.64" y="1631.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (254 samples, 1.61%)</title><rect x="597.3" y="4501" width="18.9" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="600.28" y="4511.5" ></text>
</g>
<g >
<title>`read-common.lisp-read-common192^53^TOP-COMPILE-FILE.26 (96 samples, 0.61%)</title><rect x="286.9" y="885" width="7.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="289.92" y="895.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (18 samples, 0.11%)</title><rect x="13.5" y="277" width="1.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="16.51" y="287.5" ></text>
</g>
<g >
<title>`llvm::orc::IRTransformLayer&lt;llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;, std::__1::function&lt;std::__1::shared_ptr&lt;llvm::Module&gt; (std::__1::shared_ptr&lt;llvm::Module&gt;)&gt; &gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (8 samples, 0.05%)</title><rect x="876.4" y="2693" width="0.6" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="879.43" y="2703.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (65 samples, 0.41%)</title><rect x="10.0" y="693" width="4.9" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ADCELegacyPass::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="597.5" y="4405" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="600.50" y="4415.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (4 samples, 0.03%)</title><rect x="638.2" y="3509" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="641.18" y="3519.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (17 samples, 0.11%)</title><rect x="823.8" y="3045" width="1.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="826.81" y="3055.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.7" y="1605" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="632.74" y="1615.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD^^ (2 samples, 0.01%)</title><rect x="641.7" y="3397" width="0.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="644.69" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="627.1" y="1317" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="630.13" y="1327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1477" width="1.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="623.86" y="1487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="629.4" y="2277" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="632.45" y="2287.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^351^TOP-COMPILE-FILE.32 (3 samples, 0.02%)</title><rect x="823.5" y="1141" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="826.51" y="1151.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.0" y="2821" width="0.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="633.04" y="2831.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.9" y="165" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="628.94" y="175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2741" width="2.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="633.34" y="2751.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1176.9" y="3125" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="1179.94" y="3135.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (21 samples, 0.13%)</title><rect x="630.8" y="1045" width="1.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="633.79" y="1055.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.94 (20 samples, 0.13%)</title><rect x="1187.2" y="1301" width="1.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="1190.24" y="1311.5" ></text>
</g>
<g >
<title>`llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (7 samples, 0.04%)</title><rect x="620.9" y="469" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="623.86" y="479.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (8 samples, 0.05%)</title><rect x="636.2" y="3093" width="0.6" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="639.16" y="3103.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.1" y="1061" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="626.10" y="1071.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (89 samples, 0.56%)</title><rect x="1182.9" y="3317" width="6.7" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="1185.91" y="3327.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (1,469 samples, 9.29%)</title><rect x="21.2" y="309" width="109.6" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="24.20" y="319.5" >`inline-prep...</text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (830 samples, 5.25%)</title><rect x="174.3" y="597" width="61.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="177.28" y="607.5" >`inlin..</text>
</g>
<g >
<title>`CATCH-FUNCTION^CORE^FN^^ (5 samples, 0.03%)</title><rect x="173.9" y="165" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="176.91" y="175.5" ></text>
</g>
<g >
<title>`core::core__load_no_package_set(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (3,806 samples, 24.07%)</title><rect x="10.0" y="4197" width="284.1" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="13.00" y="4207.5" >`core::core__load_no_package_set(gctoo..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="625.3" y="2005" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="628.27" y="2015.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (582 samples, 3.68%)</title><rect x="130.8" y="501" width="43.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="133.84" y="511.5" >`CON..</text>
</g>
<g >
<title>`llvm::BlockFrequencyInfoImpl&lt;llvm::MachineBasicBlock&gt;::tryToComputeMassInFunction() (2 samples, 0.01%)</title><rect x="584.9" y="4341" width="0.1" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="587.89" y="4351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="501" width="0.7" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="625.35" y="511.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="623.3" y="677" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="626.33" y="687.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="633.4" y="3717" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="636.40" y="3727.5" ></text>
</g>
<g >
<title>`MAKE-FUNCTION-INFO-MAP^CLASP-CLEAVIR^FN^^ (4 samples, 0.03%)</title><rect x="633.4" y="3829" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="636.40" y="3839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="885" width="0.7" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="625.35" y="895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1397" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="626.70" y="1407.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (200 samples, 1.27%)</title><rect x="572.9" y="4453" width="15.0" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="575.94" y="4463.5" ></text>
</g>
<g >
<title>0x1110a62f6 (5 samples, 0.03%)</title><rect x="627.1" y="1493" width="0.4" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="630.13" y="1503.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.01%)</title><rect x="898.5" y="3589" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="901.53" y="3599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="4405" width="284.1" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="13.00" y="4415.5" >`core::FuncallableInstance_O::funcalla..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (27 samples, 0.17%)</title><rect x="630.3" y="2309" width="2.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="633.34" y="2319.5" ></text>
</g>
<g >
<title>`AST-INTERPRETED-CLOSURE^INTERPRET-AST^FN^^.117 (3 samples, 0.02%)</title><rect x="12.5" y="85" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="15.46" y="95.5" ></text>
</g>
<g >
<title>0x1110a5606 (5 samples, 0.03%)</title><rect x="619.4" y="1653" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="622.44" y="1663.5" ></text>
</g>
<g >
<title>0x1257602e2 (102 samples, 0.65%)</title><rect x="620.9" y="2725" width="7.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="623.86" y="2735.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (9 samples, 0.06%)</title><rect x="1162.8" y="3573" width="0.6" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1165.76" y="3583.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (19 samples, 0.12%)</title><rect x="1187.3" y="1077" width="1.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="1190.31" y="1087.5" ></text>
</g>
<g >
<title>`core::lambdaListHandler_createBindings(gctools::smart_ptr&lt;core::Closure_O&gt;, gctools::smart_ptr&lt;core::LambdaListHandler_O&gt;, core::DynamicScopeManager&amp;, gctools::smart_ptr&lt;core::Vaslist&gt;, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*) (15 samples, 0.09%)</title><rect x="1146.9" y="3669" width="1.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1149.93" y="3679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="625.3" y="1445" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="628.27" y="1455.5" ></text>
</g>
<g >
<title>`INSTANCE-SET^CORE^FN^^ (9 samples, 0.06%)</title><rect x="1166.0" y="3621" width="0.7" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="1169.04" y="3631.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (32 samples, 0.20%)</title><rect x="1011.1" y="3525" width="2.4" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="1014.09" y="3535.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1045" width="1.0" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="627.30" y="1055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="789" width="1.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="627.30" y="799.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="624.0" y="1205" width="0.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="627.00" y="1215.5" ></text>
</g>
<g >
<title>`COMPILE^COMMON-LISP^FN^^ (17 samples, 0.11%)</title><rect x="620.9" y="1013" width="1.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="623.86" y="1023.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="623.3" y="1717" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="626.33" y="1727.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.61 (19 samples, 0.12%)</title><rect x="1187.3" y="1173" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="1190.31" y="1183.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::T_O&gt;::notnilp() const (3 samples, 0.02%)</title><rect x="956.3" y="3733" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="959.30" y="3743.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.03%)</title><rect x="273.3" y="901" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="276.33" y="911.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (125 samples, 0.79%)</title><rect x="130.9" y="69" width="9.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="133.92" y="79.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (4 samples, 0.03%)</title><rect x="966.0" y="3685" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="969.00" y="3695.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (40 samples, 0.25%)</title><rect x="278.5" y="341" width="3.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="281.48" y="351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="181" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="622.15" y="191.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (154 samples, 0.97%)</title><rect x="1003.3" y="3685" width="11.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="1006.32" y="3695.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (17 samples, 0.11%)</title><rect x="624.0" y="2037" width="1.3" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="627.00" y="2047.5" ></text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (2 samples, 0.01%)</title><rect x="652.7" y="3541" width="0.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="655.66" y="3551.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (7 samples, 0.04%)</title><rect x="659.5" y="3349" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="662.45" y="3359.5" ></text>
</g>
<g >
<title>0x1291412e0 (3 samples, 0.02%)</title><rect x="976.2" y="3717" width="0.3" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="979.23" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.3" y="1701" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="626.33" y="1711.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.01%)</title><rect x="14.9" y="325" width="0.1" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="17.85" y="335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="620.3" y="2581" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="623.27" y="2591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="3317" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="635.43" y="3327.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="625.3" y="1317" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="628.27" y="1327.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="864.3" y="3637" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="867.34" y="3647.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2405" width="284.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="13.00" y="2415.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.90 (7 samples, 0.04%)</title><rect x="1188.0" y="405" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1190.98" y="415.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.65 (7,681 samples, 48.59%)</title><rect x="616.2" y="4581" width="573.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="619.23" y="4591.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.65</text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (6 samples, 0.04%)</title><rect x="875.0" y="2629" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="878.01" y="2639.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="646.5" y="3237" width="0.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="649.46" y="3247.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="619.4" y="261" width="0.4" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="622.44" y="271.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getNonLocalPointerDepFromBB(llvm::Instruction*, llvm::PHITransAddr const&amp;, llvm::MemoryLocation const&amp;, bool, llvm::BasicBlock*, llvm::SmallVectorImpl&lt;llvm::NonLocalDepResult&gt;&amp;, llvm::DenseMap&lt;llvm::BasicBlock*, llvm::Value*, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::Value*&gt; &gt;&amp;, bool) (2 samples, 0.01%)</title><rect x="606.6" y="4293" width="0.2" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="609.61" y="4303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="517" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="625.13" y="527.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.30 (7 samples, 0.04%)</title><rect x="1176.9" y="3653" width="0.6" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="1179.94" y="3663.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (2 samples, 0.01%)</title><rect x="659.8" y="3205" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="662.75" y="3215.5" ></text>
</g>
<g >
<title>`CALL-WITH-MUFFLED-COMPILER-CONDITIONS^UIOP/LISP-BUILD^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1877" width="284.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="13.00" y="1887.5" >`CALL-WITH-MUFFLED-COMPILER-CONDITIONS..</text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="597.8" y="4261" width="0.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="600.80" y="4271.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="628.6" y="2469" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="631.62" y="2479.5" ></text>
</g>
<g >
<title>0x11be079ba (3 samples, 0.02%)</title><rect x="635.2" y="3765" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="638.19" y="3775.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (3 samples, 0.02%)</title><rect x="620.3" y="2437" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="623.27" y="2447.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (582 samples, 3.68%)</title><rect x="130.8" y="549" width="43.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="133.84" y="559.5" >`con..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (11 samples, 0.07%)</title><rect x="627.7" y="2213" width="0.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="630.65" y="2223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="709" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="626.10" y="719.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="650.8" y="3541" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="653.79" y="3551.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::T_O&gt; (core::HashTable_O::*)(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (9 samples, 0.06%)</title><rect x="1149.4" y="3701" width="0.7" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1152.40" y="3711.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAG::getNode(unsigned int, llvm::SDLoc const&amp;, llvm::EVT, llvm::SDValue, llvm::SDValue, llvm::SDNodeFlags) (2 samples, 0.01%)</title><rect x="583.2" y="4261" width="0.2" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="586.24" y="4271.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (572 samples, 3.62%)</title><rect x="130.8" y="405" width="42.7" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="133.84" y="415.5" >`inl..</text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="649.6" y="3381" width="0.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="652.60" y="3391.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (62 samples, 0.39%)</title><rect x="236.2" y="517" width="4.7" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="239.24" y="527.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJECT STANDARD-OBJECT))^METHOD^^ (11 samples, 0.07%)</title><rect x="616.9" y="3765" width="0.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="619.91" y="3775.5" ></text>
</g>
<g >
<title>`core::clasp_write_string(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, gctools::smart_ptr&lt;core::T_O&gt;) (67 samples, 0.42%)</title><rect x="567.1" y="4501" width="5.0" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="570.12" y="4511.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.03%)</title><rect x="628.2" y="901" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="631.18" y="911.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^192^TOP-COMPILE-FILE.14 (6 samples, 0.04%)</title><rect x="823.3" y="2405" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="826.29" y="2415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="1509" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="626.33" y="1519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (11 samples, 0.07%)</title><rect x="627.7" y="2165" width="0.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="630.65" y="2175.5" ></text>
</g>
<g >
<title>`core::CxxObject_O::~CxxObject_O() (8 samples, 0.05%)</title><rect x="1002.7" y="3685" width="0.6" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="1005.73" y="3695.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="627.1" y="1653" width="0.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="630.13" y="1663.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (8 samples, 0.05%)</title><rect x="621.5" y="565" width="0.6" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="624.53" y="575.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (3 samples, 0.02%)</title><rect x="899.0" y="3621" width="0.3" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="902.05" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="619.8" y="2181" width="0.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="622.82" y="2191.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.195 (7,680 samples, 48.58%)</title><rect x="616.3" y="4277" width="573.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="619.31" y="4287.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.195</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (361 samples, 2.28%)</title><rect x="244.3" y="85" width="26.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="247.30" y="95.5" >`..</text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.88 (31 samples, 0.20%)</title><rect x="1186.8" y="2277" width="2.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="1189.79" y="2287.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (9 samples, 0.06%)</title><rect x="997.6" y="3189" width="0.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="1000.58" y="3199.5" ></text>
</g>
<g >
<title>`core::startup_functions_invoke() (3,806 samples, 24.07%)</title><rect x="10.0" y="4709" width="284.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="13.00" y="4719.5" >`core::startup_functions_invoke()</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="624.3" y="1557" width="1.0" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="627.30" y="1567.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.46 (4 samples, 0.03%)</title><rect x="823.4" y="2245" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="826.44" y="2255.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.60 (2 samples, 0.01%)</title><rect x="876.3" y="2629" width="0.1" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="879.28" y="2639.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="990.2" y="3701" width="0.1" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="993.19" y="3711.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (6 samples, 0.04%)</title><rect x="1160.2" y="3605" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1163.22" y="3615.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Cons_O&gt;::operator gctools::smart_ptr&lt;core::T_O&gt;() const (4 samples, 0.03%)</title><rect x="865.6" y="3653" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="868.61" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="821" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="633.64" y="831.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.3" y="853" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="626.33" y="863.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (3 samples, 0.02%)</title><rect x="1076.8" y="3701" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1079.84" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="453" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="622.15" y="463.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="648.6" y="3397" width="0.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="651.55" y="3407.5" ></text>
</g>
<g >
<title>0x1110a5606 (5 samples, 0.03%)</title><rect x="619.4" y="501" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="622.44" y="511.5" ></text>
</g>
<g >
<title>0x110d5d13e (4 samples, 0.03%)</title><rect x="886.9" y="3733" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="889.88" y="3743.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.24 (6 samples, 0.04%)</title><rect x="823.3" y="2325" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="826.29" y="2335.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (206 samples, 1.30%)</title><rect x="572.5" y="4613" width="15.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="575.49" y="4623.5" ></text>
</g>
<g >
<title>`llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (7 samples, 0.04%)</title><rect x="620.9" y="453" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="623.86" y="463.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (98 samples, 0.62%)</title><rect x="286.8" y="1077" width="7.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="289.77" y="1087.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous namespace)::Query const&amp;) (3 samples, 0.02%)</title><rect x="604.3" y="4341" width="0.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="607.29" y="4351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="709" width="0.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="628.27" y="719.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (11 samples, 0.07%)</title><rect x="643.5" y="3285" width="0.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="646.48" y="3295.5" ></text>
</g>
<g >
<title>0x1257602e2 (4 samples, 0.03%)</title><rect x="628.2" y="293" width="0.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="631.18" y="303.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (5 samples, 0.03%)</title><rect x="623.6" y="2165" width="0.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="626.62" y="2175.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE.7 (3,806 samples, 24.07%)</title><rect x="10.0" y="1525" width="284.1" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="13.00" y="1535.5" >`compile-file.lsp-compile-file52^33^TO..</text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="624.1" y="1733" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="627.15" y="1743.5" ></text>
</g>
<g >
<title>`cc_unwind (4 samples, 0.03%)</title><rect x="1189.7" y="4629" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1192.70" y="4639.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.03%)</title><rect x="141.9" y="117" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="144.89" y="127.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (259 samples, 1.64%)</title><rect x="1156.6" y="3765" width="19.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1159.64" y="3775.5" ></text>
</g>
<g >
<title>0x1501b4d6b (40 samples, 0.25%)</title><rect x="278.5" y="389" width="3.0" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="281.48" y="399.5" ></text>
</g>
<g >
<title>0x1501b4d6b (2 samples, 0.01%)</title><rect x="240.7" y="85" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="243.72" y="95.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (4 samples, 0.03%)</title><rect x="629.4" y="1509" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="632.45" y="1519.5" ></text>
</g>
<g >
<title>`simplifyFunctionCFG(llvm::Function&amp;, llvm::TargetTransformInfo const&amp;, llvm::SimplifyCFGOptions const&amp;) (2 samples, 0.01%)</title><rect x="615.4" y="4405" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="618.41" y="4415.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="640.6" y="3445" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="643.64" y="3455.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch(llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt;&amp;, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::BatchUpdateInfo*) (2 samples, 0.01%)</title><rect x="594.1" y="4453" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="597.14" y="4463.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (3 samples, 0.02%)</title><rect x="916.9" y="3653" width="0.2" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="919.89" y="3663.5" ></text>
</g>
<g >
<title>`llvm::getOrEnforceKnownAlignment(llvm::Value*, unsigned int, llvm::DataLayout const&amp;, llvm::Instruction const*, llvm::AssumptionCache*, llvm::DominatorTree const*) (2 samples, 0.01%)</title><rect x="613.4" y="4341" width="0.1" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="616.40" y="4351.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^91^TOP-COMPILE-FILE.100 (3,806 samples, 24.07%)</title><rect x="10.0" y="1237" width="284.1" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="13.00" y="1247.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.02%)</title><rect x="628.0" y="1269" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="630.95" y="1279.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (10 samples, 0.06%)</title><rect x="622.4" y="1525" width="0.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="625.35" y="1535.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (829 samples, 5.24%)</title><rect x="174.3" y="133" width="61.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="177.28" y="143.5" >`inlin..</text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="652.1" y="3541" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="655.14" y="3551.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (6 samples, 0.04%)</title><rect x="629.4" y="2405" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="632.45" y="2415.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.64 (2 samples, 0.01%)</title><rect x="656.7" y="2389" width="0.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="659.69" y="2399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (26 samples, 0.16%)</title><rect x="630.4" y="1845" width="2.0" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="633.42" y="1855.5" ></text>
</g>
<g >
<title>`COMPILE-FILE*^UIOP/LISP-BUILD^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1941" width="284.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" >`COMPILE-FILE*^UIOP/LISP-BUILD^FN^^</text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (1,469 samples, 9.29%)</title><rect x="21.2" y="277" width="109.6" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="24.20" y="287.5" >`convert.lisp..</text>
</g>
<g >
<title>0x1110a5606 (20 samples, 0.13%)</title><rect x="630.8" y="533" width="1.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="633.79" y="543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (12 samples, 0.08%)</title><rect x="626.2" y="549" width="0.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="629.16" y="559.5" ></text>
</g>
<g >
<title>0x111a4f1cd (3,806 samples, 24.07%)</title><rect x="10.0" y="2997" width="284.1" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="13.00" y="3007.5" >0x111a4f1cd</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.04%)</title><rect x="628.0" y="1669" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="630.95" y="1679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.9" y="869" width="0.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="628.94" y="879.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="641.0" y="3413" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="644.02" y="3423.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (147 samples, 0.93%)</title><rect x="1082.4" y="3717" width="10.9" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1085.37" y="3727.5" ></text>
</g>
<g >
<title>0x123ae11b3 (2 samples, 0.01%)</title><rect x="639.5" y="3285" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="642.52" y="3295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1877" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="626.70" y="1887.5" ></text>
</g>
<g >
<title>`llvm::BasicAAWrapperPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="600.0" y="4405" width="0.1" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="602.96" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="625.7" y="2149" width="0.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="628.71" y="2159.5" ></text>
</g>
<g >
<title>`llvmo::ClaspJIT_O::addModule(gctools::smart_ptr&lt;llvmo::Module_O&gt;) (16 samples, 0.10%)</title><rect x="823.9" y="2965" width="1.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="826.89" y="2975.5" ></text>
</g>
<g >
<title>0x110c63171 (50 samples, 0.32%)</title><rect x="1057.1" y="3733" width="3.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1060.14" y="3743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="624.0" y="1781" width="0.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="627.00" y="1791.5" ></text>
</g>
<g >
<title>`combin.lsp-combin93^52^TOP-COMPILE-FILE.3 (5 samples, 0.03%)</title><rect x="640.2" y="3301" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="643.19" y="3311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="2341" width="0.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="622.37" y="2351.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE*^COMPILER^FN^^ (17 samples, 0.11%)</title><rect x="620.9" y="645" width="1.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="623.86" y="655.5" ></text>
</g>
<g >
<title>`llvmo::ClaspJIT_O::addModule(gctools::smart_ptr&lt;llvmo::Module_O&gt;) (2 samples, 0.01%)</title><rect x="1176.9" y="3077" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1179.94" y="3087.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt; (llvmo::ClaspJIT_O::*)(gctools::smart_ptr&lt;llvmo::Module_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="640.2" y="2789" width="0.1" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="643.19" y="2799.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (3 samples, 0.02%)</title><rect x="628.0" y="933" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="630.95" y="943.5" ></text>
</g>
<g >
<title>0x1110a4be6 (3 samples, 0.02%)</title><rect x="619.1" y="709" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="622.15" y="719.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="624.3" y="741" width="1.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="627.30" y="751.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.24 (5 samples, 0.03%)</title><rect x="640.2" y="2949" width="0.4" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="643.19" y="2959.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Instance_O&gt;, unsigned long) (9 samples, 0.06%)</title><rect x="898.2" y="3621" width="0.6" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="901.15" y="3631.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (140 samples, 0.89%)</title><rect x="1082.6" y="3701" width="10.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1085.59" y="3711.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (6 samples, 0.04%)</title><rect x="875.0" y="2613" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="878.01" y="2623.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.11 (16 samples, 0.10%)</title><rect x="635.6" y="3493" width="1.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="638.57" y="3503.5" ></text>
</g>
<g >
<title>0x1110a4be6 (6 samples, 0.04%)</title><rect x="619.4" y="2037" width="0.4" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="622.37" y="2047.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (7 samples, 0.04%)</title><rect x="632.8" y="3701" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="635.80" y="3711.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::PassInfo const*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::PassInfo const*&gt; &gt;, void const*, llvm::PassInfo const*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::PassInfo const*&gt; &gt;::FindAndConstruct(void const* const&amp;) (2 samples, 0.01%)</title><rect x="605.8" y="4373" width="0.1" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="608.78" y="4383.5" ></text>
</g>
<g >
<title>`LINK-INLINE-REMOVE-BUILTINS^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="872.9" y="3093" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="875.85" y="3103.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.92 (20 samples, 0.13%)</title><rect x="1187.2" y="1317" width="1.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="1190.24" y="1327.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt;::smart_ptr() (4 samples, 0.03%)</title><rect x="1153.6" y="3733" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="1156.58" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="1333" width="0.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="622.44" y="1343.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="667.7" y="3669" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="670.74" y="3679.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="1156.6" y="3157" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="1159.64" y="3167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (7 samples, 0.04%)</title><rect x="629.4" y="2677" width="0.6" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="632.45" y="2687.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.14 (6 samples, 0.04%)</title><rect x="823.3" y="2613" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="826.29" y="2623.5" ></text>
</g>
<g >
<title>`CATCH-FUNCTION^CORE^FN^^ (71 samples, 0.45%)</title><rect x="281.5" y="485" width="5.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="284.47" y="495.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.5" y="1061" width="0.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="623.49" y="1071.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::RAGreedy::selectOrSplit(llvm::LiveInterval&amp;, llvm::SmallVectorImpl&lt;unsigned int&gt;&amp;) (4 samples, 0.03%)</title><rect x="576.9" y="4373" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="579.90" y="4383.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (12 samples, 0.08%)</title><rect x="243.4" y="53" width="0.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="246.40" y="63.5" ></text>
</g>
<g >
<title>`AST-INTERPRETED-CLOSURE^INTERPRET-AST^FN^^.117 (60 samples, 0.38%)</title><rect x="274.0" y="69" width="4.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="277.01" y="79.5" ></text>
</g>
<g >
<title>0x111981438 (3,806 samples, 24.07%)</title><rect x="10.0" y="4021" width="284.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="13.00" y="4031.5" >0x111981438</text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="1178.6" y="3781" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="1181.58" y="3791.5" ></text>
</g>
<g >
<title>0x1501b4cfb (2 samples, 0.01%)</title><rect x="240.7" y="389" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="243.72" y="399.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="1018.8" y="3733" width="0.2" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="1021.77" y="3743.5" ></text>
</g>
<g >
<title>`SIMPLE-TYPE-PREDICATE^CORE^FN^^ (4 samples, 0.03%)</title><rect x="634.6" y="3717" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="637.60" y="3727.5" ></text>
</g>
<g >
<title>0x111521403 (2 samples, 0.01%)</title><rect x="659.8" y="3237" width="0.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="662.75" y="3247.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T T))^METHOD^^ (5 samples, 0.03%)</title><rect x="289.2" y="37" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="292.16" y="47.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (5 samples, 0.03%)</title><rect x="894.6" y="3717" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="897.57" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="632.4" y="3301" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="635.43" y="3311.5" ></text>
</g>
<g >
<title>0x1111fb001 (2 samples, 0.01%)</title><rect x="740.6" y="3653" width="0.1" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="743.59" y="3663.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (37 samples, 0.23%)</title><rect x="144.7" y="149" width="2.8" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="147.73" y="159.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="14.9" y="245" width="0.1" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="17.85" y="255.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="641.8" y="3381" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="644.84" y="3391.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1221" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="635.43" y="1231.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::RAGreedy::selectOrSplitImpl(llvm::LiveInterval&amp;, llvm::SmallVectorImpl&lt;unsigned int&gt;&amp;, llvm::SmallSet&lt;unsigned int, 16u, std::__1::less&lt;unsigned int&gt; &gt;&amp;, unsigned int) (4 samples, 0.03%)</title><rect x="576.9" y="4357" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="579.90" y="4367.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (3 samples, 0.02%)</title><rect x="643.6" y="2853" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="646.55" y="2863.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="620.3" y="2613" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="623.27" y="2623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="901" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="635.43" y="911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="3061" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="635.43" y="3071.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="634.0" y="3781" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="637.00" y="3791.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="629.4" y="1013" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="632.45" y="1023.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.5" y="1445" width="0.1" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="623.49" y="1455.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.5" y="2037" width="0.1" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="623.49" y="2047.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="624.0" y="1461" width="0.1" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="627.00" y="1471.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="622.1" y="1349" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="625.13" y="1359.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="624.3" y="1925" width="1.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="627.30" y="1935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="1765" width="0.3" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="632.45" y="1775.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="766.4" y="3637" width="0.2" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="769.41" y="3647.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.205 (7,680 samples, 48.58%)</title><rect x="616.3" y="4117" width="573.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="619.31" y="4127.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.205</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="624.0" y="805" width="0.1" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="627.00" y="815.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.8" y="101" width="0.1" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="626.77" y="111.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (15 samples, 0.09%)</title><rect x="1187.5" y="981" width="1.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="1190.46" y="991.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (20 samples, 0.13%)</title><rect x="876.3" y="3381" width="1.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="879.28" y="3391.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (254 samples, 1.61%)</title><rect x="597.3" y="4485" width="18.9" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="600.28" y="4495.5" ></text>
</g>
<g >
<title>0x1257602e2 (17 samples, 0.11%)</title><rect x="620.9" y="1237" width="1.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="623.86" y="1247.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="623.3" y="565" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="626.33" y="575.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="877.9" y="3317" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="880.93" y="3327.5" ></text>
</g>
<g >
<title>0x11132df76 (3 samples, 0.02%)</title><rect x="637.7" y="3685" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="640.66" y="3695.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.9" y="773" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="628.94" y="783.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (10 samples, 0.06%)</title><rect x="653.4" y="3493" width="0.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="656.41" y="3503.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.31 (6 samples, 0.04%)</title><rect x="1021.2" y="3605" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="1024.24" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (126 samples, 0.80%)</title><rect x="620.9" y="3253" width="9.4" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="623.86" y="3263.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (20 samples, 0.13%)</title><rect x="630.8" y="405" width="1.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="633.79" y="415.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="874.6" y="3301" width="0.1" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="877.57" y="3311.5" ></text>
</g>
<g >
<title>0x1110a5456 (2 samples, 0.01%)</title><rect x="630.0" y="2277" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="633.04" y="2287.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="624.3" y="165" width="1.0" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="627.30" y="175.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="14.9" y="869" width="0.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="17.85" y="879.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^METHOD^^.35 (55 samples, 0.35%)</title><rect x="169.4" y="117" width="4.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="172.43" y="127.5" ></text>
</g>
<g >
<title>`llvm::legacy::FunctionPassManager::run(llvm::Function&amp;) (4 samples, 0.03%)</title><rect x="824.7" y="2901" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="827.71" y="2911.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&amp;) (75 samples, 0.47%)</title><rect x="577.9" y="4405" width="5.6" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="580.87" y="4415.5" ></text>
</g>
<g >
<title>0x1110a5606 (13 samples, 0.08%)</title><rect x="624.3" y="901" width="1.0" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="627.30" y="911.5" ></text>
</g>
<g >
<title>0x12615d378 (17 samples, 0.11%)</title><rect x="143.5" y="277" width="1.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="146.46" y="287.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropriatePoolAllocator&lt;core::Instance_O, (gctools::GCInfo_policy)1&gt;::allocate_in_appropriate_pool_kind&lt;&gt;(gctools::Header_s::Value const&amp;, unsigned long) (3 samples, 0.02%)</title><rect x="898.3" y="3589" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="901.30" y="3599.5" ></text>
</g>
<g >
<title>`core::byte_code_interpreter(gctools::GCRootsInModule*, gctools::smart_ptr&lt;core::T_O&gt;, bool) (3,806 samples, 24.07%)</title><rect x="10.0" y="4661" width="284.1" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="13.00" y="4671.5" >`core::byte_code_interpreter(gctools::..</text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::T_O&gt; (core::HashTable_O::*)(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (133 samples, 0.84%)</title><rect x="1004.5" y="3669" width="9.9" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="1007.52" y="3679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="357" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="635.43" y="367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (7 samples, 0.04%)</title><rect x="627.1" y="2197" width="0.6" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="630.13" y="2207.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T))^METHOD^^ (3 samples, 0.02%)</title><rect x="650.8" y="3589" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="653.79" y="3599.5" ></text>
</g>
<g >
<title>0x1110a5606 (13 samples, 0.08%)</title><rect x="624.3" y="1381" width="1.0" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="627.30" y="1391.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (4 samples, 0.03%)</title><rect x="616.5" y="3813" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="619.53" y="3823.5" ></text>
</g>
<g >
<title>`inline-one-instruction.lisp-inline-one-instruction395^185^TOP-COMPILE-FILE.91 (4 samples, 0.03%)</title><rect x="651.7" y="3605" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="654.69" y="3615.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.98 (20 samples, 0.13%)</title><rect x="1187.2" y="1269" width="1.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="1190.24" y="1279.5" ></text>
</g>
<g >
<title>`llvm::BlockFrequencyInfoImpl&lt;llvm::MachineBasicBlock&gt;::propagateMassToSuccessors(llvm::BlockFrequencyInfoImplBase::LoopData*, llvm::BlockFrequencyInfoImplBase::BlockNode const&amp;) (2 samples, 0.01%)</title><rect x="584.9" y="4325" width="0.1" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="587.89" y="4335.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.16 (2 samples, 0.01%)</title><rect x="656.7" y="2133" width="0.1" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="659.69" y="2143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="2453" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="623.64" y="2463.5" ></text>
</g>
<g >
<title>0x1110a5606 (10 samples, 0.06%)</title><rect x="622.4" y="293" width="0.7" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="625.35" y="303.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="625.3" y="1701" width="0.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="628.27" y="1711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="624.3" y="69" width="1.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="627.30" y="79.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="565" width="0.7" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="625.35" y="575.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (2 samples, 0.01%)</title><rect x="620.5" y="1317" width="0.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="623.49" y="1327.5" ></text>
</g>
<g >
<title>0x1110a5606 (20 samples, 0.13%)</title><rect x="630.8" y="437" width="1.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="633.79" y="447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="1637" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="622.44" y="1647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="805" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="635.43" y="815.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="1181.9" y="3733" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="1184.94" y="3743.5" ></text>
</g>
<g >
<title>`cc_setfdefinition (2 samples, 0.01%)</title><rect x="821.8" y="3653" width="0.1" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="824.80" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.8" y="1045" width="0.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="628.79" y="1055.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (6 samples, 0.04%)</title><rect x="875.0" y="2677" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="878.01" y="2687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="627.1" y="1669" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="630.13" y="1679.5" ></text>
</g>
<g >
<title>`core::core__instance_set(gctools::smart_ptr&lt;core::T_O&gt;, int, gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.02%)</title><rect x="1047.0" y="3701" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1049.99" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="625.7" y="1973" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="628.71" y="1983.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="1045" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="635.43" y="1055.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (64 samples, 0.40%)</title><rect x="620.9" y="2293" width="4.7" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="623.86" y="2303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (184 samples, 1.16%)</title><rect x="619.1" y="3541" width="13.7" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="622.07" y="3551.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (10 samples, 0.06%)</title><rect x="622.4" y="517" width="0.7" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="625.35" y="527.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.22 (21 samples, 0.13%)</title><rect x="656.7" y="2837" width="1.6" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="659.69" y="2847.5" ></text>
</g>
<g >
<title>`core::core__sequence_start_end(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::Fixnum_I&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.02%)</title><rect x="1022.4" y="3669" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1025.43" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="624.0" y="1941" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="627.00" y="1951.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="625.7" y="1989" width="0.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="628.71" y="1999.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp;) (3 samples, 0.02%)</title><rect x="1177.2" y="3045" width="0.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="1180.16" y="3055.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.94 (86 samples, 0.54%)</title><rect x="1183.1" y="3157" width="6.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="1186.13" y="3167.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="453" width="109.6" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="24.20" y="463.5" >`COMBINE-METH..</text>
</g>
<g >
<title>0x1501b4c8b (5 samples, 0.03%)</title><rect x="273.0" y="181" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="275.96" y="191.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceSet(unsigned long, gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.02%)</title><rect x="1045.2" y="3685" width="0.2" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="1048.20" y="3695.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="593.0" y="4325" width="0.2" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="596.02" y="4335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.4" y="1413" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="633.42" y="1423.5" ></text>
</g>
<g >
<title>0x1258cfc3b (63 samples, 0.40%)</title><rect x="273.8" y="277" width="4.7" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="276.78" y="287.5" ></text>
</g>
<g >
<title>0x11151f7fb (60 samples, 0.38%)</title><rect x="900.0" y="3637" width="4.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="903.02" y="3647.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (6 samples, 0.04%)</title><rect x="658.9" y="3349" width="0.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="661.85" y="3359.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T T MULTIPLE-SUCCESSORS-MIXIN T))^METHOD^^ (21 samples, 0.13%)</title><rect x="650.7" y="3637" width="1.6" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="653.72" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="1205" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="628.94" y="1215.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (2 samples, 0.01%)</title><rect x="1189.3" y="2421" width="0.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1192.25" y="2431.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (8 samples, 0.05%)</title><rect x="1187.9" y="517" width="0.6" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="1190.91" y="527.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (6 samples, 0.04%)</title><rect x="855.2" y="3333" width="0.5" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="858.23" y="3343.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.84 (21 samples, 0.13%)</title><rect x="1187.2" y="1381" width="1.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="1190.16" y="1391.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="619.4" y="949" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="622.44" y="959.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (5 samples, 0.03%)</title><rect x="872.5" y="3045" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="875.48" y="3055.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceSet(unsigned long, gctools::smart_ptr&lt;core::T_O&gt;) (5 samples, 0.03%)</title><rect x="739.6" y="3605" width="0.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="742.62" y="3615.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (50 samples, 0.32%)</title><rect x="656.4" y="3397" width="3.7" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="659.39" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="1269" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="631.18" y="1279.5" ></text>
</g>
<g >
<title>0x111521403 (2 samples, 0.01%)</title><rect x="648.6" y="3269" width="0.1" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="651.55" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="229" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="630.95" y="239.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="581" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="632.45" y="591.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (13 samples, 0.08%)</title><rect x="750.4" y="3621" width="0.9" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="753.36" y="3631.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.03%)</title><rect x="650.4" y="3589" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="653.42" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="627.5" y="2021" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="630.51" y="2031.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (10 samples, 0.06%)</title><rect x="877.0" y="2693" width="0.8" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="880.03" y="2703.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T))^METHOD^^ (24 samples, 0.15%)</title><rect x="1184.9" y="2437" width="1.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="1187.92" y="2447.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::__class() const (2 samples, 0.01%)</title><rect x="1002.3" y="3701" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1005.28" y="3711.5" ></text>
</g>
<g >
<title>`MAKE-EXPRESSION-RESULT^ECLECTOR.PARSE-RESULT^((CST-CLIENT T T T))^METHOD^^.90 (2 samples, 0.01%)</title><rect x="286.9" y="261" width="0.2" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="289.92" y="271.5" ></text>
</g>
<g >
<title>`DOUBLE-QUOTE^ECLECTOR.READER^FN^^ (3 samples, 0.02%)</title><rect x="287.1" y="149" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="290.14" y="159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="619.8" y="2453" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="622.82" y="2463.5" ></text>
</g>
<g >
<title>0x110c63edb (3 samples, 0.02%)</title><rect x="1065.4" y="3733" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1068.42" y="3743.5" ></text>
</g>
<g >
<title>0x1110a5606 (12 samples, 0.08%)</title><rect x="626.2" y="149" width="0.9" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="629.16" y="159.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunction&amp;) (2 samples, 0.01%)</title><rect x="620.9" y="357" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="623.94" y="367.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (51 samples, 0.32%)</title><rect x="169.7" y="53" width="3.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="172.73" y="63.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="628.2" y="469" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="631.18" y="479.5" ></text>
</g>
<g >
<title>0x1501b4cfb (40 samples, 0.25%)</title><rect x="278.5" y="117" width="3.0" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="281.48" y="127.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="1176.9" y="3189" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="1179.94" y="3199.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (16 samples, 0.10%)</title><rect x="142.3" y="181" width="1.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="145.26" y="191.5" ></text>
</g>
<g >
<title>0x111521403 (2 samples, 0.01%)</title><rect x="649.6" y="3365" width="0.1" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="652.60" y="3375.5" ></text>
</g>
<g >
<title>0x123710f48 (1,469 samples, 9.29%)</title><rect x="21.2" y="741" width="109.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="24.20" y="751.5" >0x123710f48</text>
</g>
<g >
<title>`core::funcall_va_list_6(gctools::smart_ptr&lt;core::Function_O&gt;, gctools::smart_ptr&lt;core::Vaslist&gt;) (2 samples, 0.01%)</title><rect x="618.9" y="3813" width="0.2" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="621.92" y="3823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="2069" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="632.45" y="2079.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (29 samples, 0.18%)</title><rect x="1019.1" y="3733" width="2.1" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="1022.07" y="3743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (22 samples, 0.14%)</title><rect x="624.0" y="2229" width="1.6" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="627.00" y="2239.5" ></text>
</g>
<g >
<title>0x110d5de86 (3 samples, 0.02%)</title><rect x="1074.9" y="3733" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1077.90" y="3743.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^923^TOP-COMPILE-FILE.282 (3 samples, 0.02%)</title><rect x="1182.9" y="3157" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="1185.91" y="3167.5" ></text>
</g>
<g >
<title>0x1257602e2 (3 samples, 0.02%)</title><rect x="619.1" y="485" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="622.15" y="495.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (5 samples, 0.03%)</title><rect x="1145.5" y="3477" width="0.4" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="1148.51" y="3487.5" ></text>
</g>
<g >
<title>`TRANSLATE-INPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.03%)</title><rect x="666.4" y="3493" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="669.39" y="3503.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (2 samples, 0.01%)</title><rect x="240.7" y="277" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="243.72" y="287.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="627.7" y="853" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="630.73" y="863.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="625.3" y="229" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="628.27" y="239.5" ></text>
</g>
<g >
<title>`llvm::sroa::SROALegacyPass::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="607.8" y="4405" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="610.80" y="4415.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (65 samples, 0.41%)</title><rect x="281.9" y="229" width="4.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="284.92" y="239.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.88 (90 samples, 0.57%)</title><rect x="1182.8" y="3669" width="6.8" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="1185.83" y="3679.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (34 samples, 0.22%)</title><rect x="915.2" y="3717" width="2.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="918.17" y="3727.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::run() (2 samples, 0.01%)</title><rect x="824.9" y="2821" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="827.86" y="2831.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="628.2" y="821" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="631.18" y="831.5" ></text>
</g>
<g >
<title>`llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (11 samples, 0.07%)</title><rect x="823.9" y="2917" width="0.8" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="826.89" y="2927.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^351^TOP-COMPILE-FILE.30 (3 samples, 0.02%)</title><rect x="823.5" y="1157" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="826.51" y="1167.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="629.4" y="229" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="632.45" y="239.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.103 (3 samples, 0.02%)</title><rect x="823.5" y="837" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="826.51" y="847.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="1733" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="622.15" y="1743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1541" width="0.1" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="627.00" y="1551.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.90 (2 samples, 0.01%)</title><rect x="656.7" y="2549" width="0.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="659.69" y="2559.5" ></text>
</g>
<g >
<title>`llvm::X86AsmPrinter::EmitAndCountInstruction(llvm::MCInst&amp;) (3 samples, 0.02%)</title><rect x="586.7" y="4357" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="589.68" y="4367.5" ></text>
</g>
<g >
<title>0x110c5916d (11 samples, 0.07%)</title><rect x="706.3" y="3653" width="0.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="709.25" y="3663.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvmo::PassManager_O, bool (llvm::legacy::PassManager::*)(llvm::Module&amp;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (6 samples, 0.04%)</title><rect x="643.9" y="2933" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="646.85" y="2943.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (17 samples, 0.11%)</title><rect x="143.5" y="85" width="1.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="146.46" y="95.5" ></text>
</g>
<g >
<title>0x11171939a (4 samples, 0.03%)</title><rect x="662.7" y="3365" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="665.66" y="3375.5" ></text>
</g>
<g >
<title>0x110c60e78 (7 samples, 0.04%)</title><rect x="1052.7" y="3733" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1055.66" y="3743.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef&lt;llvm::Constant*&gt;, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (6 samples, 0.04%)</title><rect x="601.1" y="4325" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="604.08" y="4335.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (17 samples, 0.11%)</title><rect x="142.2" y="261" width="1.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="145.19" y="271.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (10 samples, 0.06%)</title><rect x="877.0" y="2741" width="0.8" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="880.03" y="2751.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (4 samples, 0.03%)</title><rect x="895.6" y="3669" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="898.62" y="3679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.0" y="2005" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="633.04" y="2015.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="624.0" y="1877" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="627.00" y="1887.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="1021.5" y="3061" width="0.2" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1024.46" y="3071.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (3 samples, 0.02%)</title><rect x="590.1" y="4421" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="593.11" y="4431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.6" y="1941" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="623.64" y="1951.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (21 samples, 0.13%)</title><rect x="656.7" y="2661" width="1.6" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="659.69" y="2671.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt; (llvmo::ClaspJIT_O::*)(gctools::smart_ptr&lt;llvmo::Module_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (8 samples, 0.05%)</title><rect x="876.4" y="2725" width="0.6" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="879.43" y="2735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1157" width="1.0" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="627.30" y="1167.5" ></text>
</g>
<g >
<title>`core::eformat_write_char(gctools::smart_ptr&lt;core::T_O&gt;, int) (51 samples, 0.32%)</title><rect x="567.3" y="4485" width="3.8" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="570.27" y="4495.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="625.3" y="453" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="628.27" y="463.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.6" y="1605" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="623.64" y="1615.5" ></text>
</g>
<g >
<title>0x1110a5606 (5 samples, 0.03%)</title><rect x="625.7" y="2053" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="628.71" y="2063.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1179.0" y="3733" width="0.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="1182.03" y="3743.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="1156.6" y="3509" width="0.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="1159.64" y="3519.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (3 samples, 0.02%)</title><rect x="665.9" y="3429" width="0.2" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="668.87" y="3439.5" ></text>
</g>
<g >
<title>`DELETE-INSTRUCTION^CLEAVIR-IR^FN^^ (9 samples, 0.06%)</title><rect x="1022.0" y="3733" width="0.7" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="1024.98" y="3743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="622.1" y="805" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="625.13" y="815.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (10 samples, 0.06%)</title><rect x="941.3" y="3637" width="0.7" height="15.0" fill="rgb(75,222,75)" rx="2" ry="2" />
<text  x="944.30" y="3647.5" ></text>
</g>
<g >
<title>`CALL-FUNCTION^UIOP/UTILITY^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2005" width="284.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" >`CALL-FUNCTION^UIOP/UTILITY^FN^^</text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.03%)</title><rect x="649.0" y="3461" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="652.00" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="2341" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="622.15" y="2351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1253" width="1.2" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="623.86" y="1263.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T))^METHOD^^ (15 samples, 0.09%)</title><rect x="1187.5" y="1045" width="1.1" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="1190.46" y="1055.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (65 samples, 0.41%)</title><rect x="10.0" y="757" width="4.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>`PROCESS-CAPTURED-VARIABLES^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (29 samples, 0.18%)</title><rect x="1178.4" y="3813" width="2.1" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="1181.36" y="3823.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^192^TOP-COMPILE-FILE.17 (6 samples, 0.04%)</title><rect x="823.3" y="2373" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="826.29" y="2383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="853" width="0.1" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="627.00" y="863.5" ></text>
</g>
<g >
<title>`core::Cache_O::vector_hash_key(gctools::Vec0&lt;gctools::smart_ptr&lt;core::T_O&gt; &gt;&amp;) (18 samples, 0.11%)</title><rect x="1119.9" y="3701" width="1.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1122.91" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="624.3" y="949" width="1.0" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="627.30" y="959.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (5 samples, 0.03%)</title><rect x="640.2" y="3013" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="643.19" y="3023.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (14 samples, 0.09%)</title><rect x="626.1" y="2133" width="1.0" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="629.09" y="2143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="693" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="632.45" y="703.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (31 samples, 0.20%)</title><rect x="972.1" y="3669" width="2.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="975.12" y="3679.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.200 (7,680 samples, 48.58%)</title><rect x="616.3" y="4197" width="573.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="619.31" y="4207.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.200</text>
</g>
<g >
<title>0x110c56136 (2 samples, 0.01%)</title><rect x="693.3" y="3653" width="0.1" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="696.26" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="1429" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="635.43" y="1439.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3 samples, 0.02%)</title><rect x="1021.5" y="3125" width="0.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="1024.46" y="3135.5" ></text>
</g>
<g >
<title>`llvm::LiveRange::createDeadDef(llvm::SlotIndex, llvm::BumpPtrAllocatorImpl&lt;llvm::MallocAllocator, 4096ul, 4096ul&gt;&amp;) (2 samples, 0.01%)</title><rect x="583.6" y="4341" width="0.2" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="586.62" y="4351.5" ></text>
</g>
<g >
<title>`llvmo::StructType_O::get(gctools::smart_ptr&lt;llvmo::LLVMContext_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, bool) (23 samples, 0.15%)</title><rect x="1184.9" y="2245" width="1.7" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="1187.92" y="2255.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (5 samples, 0.03%)</title><rect x="916.7" y="3669" width="0.4" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="919.74" y="3679.5" ></text>
</g>
<g >
<title>`doCallSiteSplitting(llvm::Function&amp;, llvm::TargetLibraryInfo&amp;) (2 samples, 0.01%)</title><rect x="593.8" y="4469" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="596.77" y="4479.5" ></text>
</g>
<g >
<title>`FIND-IN-MAPPING^CLEAVIR-PARTIAL-INLINING^((HASH-TABLE T))^METHOD^^.5 (2 samples, 0.01%)</title><rect x="661.3" y="3381" width="0.2" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="664.32" y="3391.5" ></text>
</g>
<g >
<title>0x1110a5606 (26 samples, 0.16%)</title><rect x="630.4" y="1973" width="2.0" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="633.42" y="1983.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.4" y="869" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="632.45" y="879.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.3" y="437" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="626.33" y="447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (64 samples, 0.40%)</title><rect x="620.9" y="2453" width="4.7" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="623.86" y="2463.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="998.1" y="2981" width="0.1" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1001.10" y="2991.5" ></text>
</g>
<g >
<title>`core::lisp_getStaticClass(gctools::Header_s::Value) (10 samples, 0.06%)</title><rect x="862.1" y="3637" width="0.7" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="865.10" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.4" y="1045" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="633.42" y="1055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1765" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="626.70" y="1775.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (7 samples, 0.04%)</title><rect x="772.5" y="3621" width="0.6" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="775.53" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.5" y="1349" width="0.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="623.49" y="1359.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="1156.6" y="3205" width="0.4" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="1159.64" y="3215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1669" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="622.15" y="1679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (3 samples, 0.02%)</title><rect x="620.3" y="2357" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="623.27" y="2367.5" ></text>
</g>
<g >
<title>`STANDARD-INSTANCE-ACCESS^CLOS^SETF^^ (2 samples, 0.01%)</title><rect x="653.9" y="3381" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="656.93" y="3391.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="630.6" y="1269" width="0.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="633.64" y="1279.5" ></text>
</g>
<g >
<title>`std::__1::__function::__func&lt;llvmo::ClaspJIT_O::ClaspJIT_O()::$_5, std::__1::allocator&lt;llvmo::ClaspJIT_O::ClaspJIT_O()::$_5&gt;, std::__1::shared_ptr&lt;llvm::Module&gt; (std::__1::shared_ptr&lt;llvm::Module&gt;)&gt;::operator()(std::__1::shared_ptr&lt;llvm::Module&gt;&amp;&amp;) (4 samples, 0.03%)</title><rect x="824.7" y="2933" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="827.71" y="2943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="645" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="626.10" y="655.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="622.1" y="1061" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="625.13" y="1071.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (254 samples, 1.61%)</title><rect x="597.3" y="4533" width="18.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="600.28" y="4543.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (3 samples, 0.02%)</title><rect x="779.5" y="3637" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="782.55" y="3647.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="660.0" y="3349" width="0.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="662.97" y="3359.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION^CLEAVIR-PARTIAL-INLINING^FN^^ (10 samples, 0.06%)</title><rect x="1157.5" y="3541" width="0.8" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="1160.53" y="3551.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (6 samples, 0.04%)</title><rect x="698.6" y="3637" width="0.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="701.64" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (64 samples, 0.40%)</title><rect x="620.9" y="2405" width="4.7" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="623.86" y="2415.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (86 samples, 0.54%)</title><rect x="1183.1" y="3109" width="6.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="1186.13" y="3119.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.03%)</title><rect x="632.4" y="2949" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="635.43" y="2959.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::T_O&gt; (core::HashTable_O::*)(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="1178.7" y="3717" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1181.65" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="619.5" y="53" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="622.52" y="63.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.20 (7 samples, 0.04%)</title><rect x="1176.9" y="3285" width="0.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="1179.94" y="3295.5" ></text>
</g>
<g >
<title>0x129141354 (12 samples, 0.08%)</title><rect x="772.2" y="3653" width="0.9" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="775.23" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="622.1" y="837" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="625.13" y="847.5" ></text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (159 samples, 1.01%)</title><rect x="1081.5" y="3733" width="11.8" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="1084.47" y="3743.5" ></text>
</g>
<g >
<title>`llvm::RegAllocBase::allocatePhysRegs() (4 samples, 0.03%)</title><rect x="576.9" y="4389" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="579.90" y="4399.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="1158.1" y="3413" width="0.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1161.05" y="3423.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="626.2" y="1669" width="0.9" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="629.16" y="1679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.3" y="757" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="626.33" y="767.5" ></text>
</g>
<g >
<title>`funlockfile (8 samples, 0.05%)</title><rect x="570.3" y="4453" width="0.6" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="573.33" y="4463.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.30 (6 samples, 0.04%)</title><rect x="823.3" y="2485" width="0.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="826.29" y="2495.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (10 samples, 0.06%)</title><rect x="12.8" y="69" width="0.7" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="15.76" y="79.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="3253" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="635.43" y="3263.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (21 samples, 0.13%)</title><rect x="630.8" y="1253" width="1.6" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="633.79" y="1263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="1381" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="622.44" y="1391.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (23 samples, 0.15%)</title><rect x="876.1" y="3413" width="1.7" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="879.06" y="3423.5" ></text>
</g>
<g >
<title>0x123ae11b3 (5 samples, 0.03%)</title><rect x="660.4" y="3317" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="663.42" y="3327.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (55 samples, 0.35%)</title><rect x="900.2" y="3621" width="4.1" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="903.17" y="3631.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (5 samples, 0.03%)</title><rect x="662.7" y="3397" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="665.66" y="3407.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T))^METHOD^^ (6 samples, 0.04%)</title><rect x="1157.1" y="3573" width="0.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="1160.08" y="3583.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="629.4" y="549" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="632.45" y="559.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (31 samples, 0.20%)</title><rect x="892.0" y="3685" width="2.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="895.03" y="3695.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt;, (anonymous namespace)::CVPLatticeVal, llvm::DenseMapInfo&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt; &gt;, llvm::detail::DenseMapPair&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt;, (anonymous namespace)::CVPLatticeVal&gt; &gt;, llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt;, (anonymous namespace)::CVPLatti? (3 samples, 0.02%)</title><rect x="615.7" y="4389" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="618.71" y="4399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="1349" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="622.15" y="1359.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="623.7" y="1125" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="626.70" y="1135.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (65 samples, 0.41%)</title><rect x="273.6" y="869" width="4.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="276.63" y="879.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (7 samples, 0.04%)</title><rect x="620.9" y="421" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="623.86" y="431.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="620.5" y="2373" width="0.1" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="623.49" y="2383.5" ></text>
</g>
<g >
<title>`GC_remove_protection (2 samples, 0.01%)</title><rect x="799.2" y="3573" width="0.1" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="802.18" y="3583.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (32 samples, 0.20%)</title><rect x="1186.7" y="2421" width="2.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="1189.72" y="2431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.6" y="1845" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="623.64" y="1855.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="630.4" y="1093" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="633.42" y="1103.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (582 samples, 3.68%)</title><rect x="130.8" y="581" width="43.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="133.84" y="591.5" >`inl..</text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (4 samples, 0.03%)</title><rect x="621.8" y="469" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="624.83" y="479.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (3 samples, 0.02%)</title><rect x="874.0" y="2885" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="876.97" y="2895.5" ></text>
</g>
<g >
<title>`EXPANDER^CLEAVIR-CST-TO-AST^FN^^ (11 samples, 0.07%)</title><rect x="12.7" y="549" width="0.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="15.69" y="559.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (8 samples, 0.05%)</title><rect x="636.2" y="3109" width="0.6" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="639.16" y="3119.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (13 samples, 0.08%)</title><rect x="626.2" y="1285" width="0.9" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="629.16" y="1295.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="620.6" y="1093" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="623.64" y="1103.5" ></text>
</g>
<g >
<title>`GC_mark_from (2 samples, 0.01%)</title><rect x="1177.8" y="3461" width="0.1" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="1180.76" y="3471.5" ></text>
</g>
<g >
<title>0x1110a6266 (3 samples, 0.02%)</title><rect x="632.4" y="2469" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="635.43" y="2479.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="620.3" y="1765" width="0.1" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="623.27" y="1775.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&amp;, llvm::OptimizationRemarkEmitter*) (10 samples, 0.06%)</title><rect x="607.0" y="4325" width="0.7" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="609.98" y="4335.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((BLOCK-AST T))^METHOD^^.152 (40 samples, 0.25%)</title><rect x="278.5" y="69" width="3.0" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="281.48" y="79.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.70 (7,681 samples, 48.59%)</title><rect x="616.2" y="4533" width="573.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="619.23" y="4543.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.70</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.1" y="693" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="626.10" y="703.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="921.7" y="3701" width="0.1" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="924.67" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="623.7" y="1061" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="626.70" y="1071.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (28 samples, 0.18%)</title><rect x="1186.9" y="1957" width="2.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="1189.87" y="1967.5" ></text>
</g>
<g >
<title>`core::core__instance_ref(gctools::smart_ptr&lt;core::T_O&gt;, int) (3 samples, 0.02%)</title><rect x="732.4" y="3605" width="0.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="735.38" y="3615.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (2 samples, 0.01%)</title><rect x="1174.8" y="3541" width="0.1" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="1177.77" y="3551.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="621.4" y="405" width="0.1" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="624.38" y="415.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (4 samples, 0.03%)</title><rect x="1183.3" y="2853" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="1186.28" y="2863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.04%)</title><rect x="628.0" y="1557" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="630.95" y="1567.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="619.1" y="325" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="622.15" y="335.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (31 samples, 0.20%)</title><rect x="664.7" y="3509" width="2.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="667.68" y="3519.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.24 (19 samples, 0.12%)</title><rect x="1187.3" y="1141" width="1.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="1190.31" y="1151.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="625.7" y="1893" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="628.71" y="1903.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (13 samples, 0.08%)</title><rect x="661.5" y="3429" width="0.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="664.47" y="3439.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (3 samples, 0.02%)</title><rect x="1189.8" y="4597" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1192.78" y="4607.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="2101" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="622.15" y="2111.5" ></text>
</g>
<g >
<title>`asdf.lisp-^10341^TOP-COMPILE-FILE.48 (3,806 samples, 24.07%)</title><rect x="10.0" y="3029" width="284.1" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="13.00" y="3039.5" >`asdf.lisp-^10341^TOP-COMPILE-FILE.48</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (70 samples, 0.44%)</title><rect x="873.9" y="3589" width="5.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="876.90" y="3599.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (36 samples, 0.23%)</title><rect x="645.5" y="3445" width="2.7" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="648.49" y="3455.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="2597" width="284.1" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="13.00" y="2607.5" >`core::DtreeInterpreter_O::entry_point..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (32 samples, 0.20%)</title><rect x="10.0" y="37" width="2.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="13.00" y="47.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="1021.5" y="2997" width="0.1" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1024.46" y="3007.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (9 samples, 0.06%)</title><rect x="1162.8" y="3621" width="0.6" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="1165.76" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="627.2" y="1061" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="630.21" y="1071.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.293 (6 samples, 0.04%)</title><rect x="1021.2" y="3685" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="1024.24" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-TO-MODULE-WITH-RUN-TIME-TABLE^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="876.3" y="2837" width="0.1" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="879.28" y="2847.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.210 (7,680 samples, 48.58%)</title><rect x="616.3" y="4037" width="573.3" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="619.31" y="4047.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.210</text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (25 samples, 0.16%)</title><rect x="1019.4" y="3701" width="1.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="1022.37" y="3711.5" ></text>
</g>
<g >
<title>0x1258cfc3b (2 samples, 0.01%)</title><rect x="173.6" y="229" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="176.61" y="239.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvmo::PassManager_O, bool (llvm::legacy::PassManager::*)(llvm::Module&amp;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (7 samples, 0.04%)</title><rect x="636.2" y="3077" width="0.6" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="639.24" y="3087.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="626.2" y="1925" width="0.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="629.16" y="1935.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1253" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="622.15" y="1263.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (2 samples, 0.01%)</title><rect x="610.3" y="4325" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="613.34" y="4335.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (115 samples, 0.73%)</title><rect x="620.9" y="2901" width="8.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="623.86" y="2911.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1182.1" y="3781" width="0.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1185.09" y="3791.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.18 (11 samples, 0.07%)</title><rect x="643.5" y="3157" width="0.8" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="646.48" y="3167.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (42 samples, 0.27%)</title><rect x="971.6" y="3701" width="3.1" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="974.60" y="3711.5" ></text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="874.9" y="3253" width="0.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="877.94" y="3263.5" ></text>
</g>
<g >
<title>`core::Function_O::functionName() const (8 samples, 0.05%)</title><rect x="834.3" y="3637" width="0.6" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="837.34" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="624.3" y="1909" width="1.0" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="627.30" y="1919.5" ></text>
</g>
<g >
<title>0x110c59171 (12 samples, 0.08%)</title><rect x="1161.8" y="3637" width="0.9" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.79" y="3647.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="654.6" y="3477" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="657.60" y="3487.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.11 (21 samples, 0.13%)</title><rect x="656.7" y="2917" width="1.6" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="659.69" y="2927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="2645" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="635.43" y="2655.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (127 samples, 0.80%)</title><rect x="620.9" y="3365" width="9.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="623.86" y="3375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (21 samples, 0.13%)</title><rect x="630.8" y="1285" width="1.6" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="633.79" y="1295.5" ></text>
</g>
<g >
<title>0x1110a4be6 (4 samples, 0.03%)</title><rect x="625.3" y="1861" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="628.27" y="1871.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="632.4" y="101" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="635.43" y="111.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.86 (15 samples, 0.09%)</title><rect x="1187.5" y="901" width="1.1" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="1190.46" y="911.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (6 samples, 0.04%)</title><rect x="733.3" y="3621" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="736.35" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="629.7" y="1685" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="632.74" y="1695.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^METHOD^^ (294 samples, 1.86%)</title><rect x="147.5" y="197" width="21.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="150.49" y="207.5" >`..</text>
</g>
<g >
<title>`GC_malloc_kind (86 samples, 0.54%)</title><rect x="1085.0" y="3685" width="6.4" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="1087.98" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="1221" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="622.44" y="1231.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="648.8" y="3445" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="651.78" y="3455.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="14.9" y="373" width="0.1" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="17.85" y="383.5" ></text>
</g>
<g >
<title>`PROCESS-LOCATION^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (3 samples, 0.02%)</title><rect x="1179.2" y="3797" width="0.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="1182.18" y="3807.5" ></text>
</g>
<g >
<title>`core::core__instance_ref(gctools::smart_ptr&lt;core::T_O&gt;, int) (2 samples, 0.01%)</title><rect x="906.2" y="3653" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="909.21" y="3663.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (7,680 samples, 48.58%)</title><rect x="616.3" y="4405" width="573.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="619.31" y="4415.5" >`DO-DBG-FUNCTION^COMPILER^FN^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="627.5" y="1797" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="630.51" y="1807.5" ></text>
</g>
<g >
<title>0x1110a4b56 (4 samples, 0.03%)</title><rect x="623.7" y="1189" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="626.70" y="1199.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="623.6" y="2197" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="626.62" y="2207.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (17 samples, 0.11%)</title><rect x="620.9" y="1605" width="1.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="623.86" y="1615.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.22 (3,806 samples, 24.07%)</title><rect x="10.0" y="2789" width="284.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="13.00" y="2799.5" >`compile-file.lsp-compile-file52^76^TO..</text>
</g>
<g >
<title>0x1110a6386 (2 samples, 0.01%)</title><rect x="620.6" y="2565" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="623.64" y="2575.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="874.2" y="3413" width="0.1" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="877.19" y="3423.5" ></text>
</g>
<g >
<title>`llvm::SparseSolver&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt;, (anonymous namespace)::CVPLatticeVal, llvm::LatticeKeyInfo&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt; &gt; &gt;::visitInst(llvm::Instruction&amp;) (6 samples, 0.04%)</title><rect x="615.7" y="4421" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="618.71" y="4431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.1" y="597" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="626.10" y="607.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="618.6" y="3749" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="621.62" y="3759.5" ></text>
</g>
<g >
<title>0x11132df76 (3 samples, 0.02%)</title><rect x="655.7" y="3477" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="658.72" y="3487.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef&lt;llvm::Value*&gt;, bool, llvm::Optional&lt;unsigned int&gt;, llvm::Type*) (3 samples, 0.02%)</title><rect x="610.9" y="4309" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="613.86" y="4319.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (60 samples, 0.38%)</title><rect x="274.0" y="85" width="4.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="277.01" y="95.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="622.4" y="341" width="0.7" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="625.35" y="351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.5" y="1669" width="0.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="626.47" y="1679.5" ></text>
</g>
<g >
<title>0x110d5d53f (2 samples, 0.01%)</title><rect x="1068.0" y="3733" width="0.1" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1070.96" y="3743.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap&lt;llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo&lt;llvm::Constant*&gt;, llvm::detail::DenseMapPair&lt;llvm::Constant*, llvm::Constant*&gt; &gt;&amp;) (2 samples, 0.01%)</title><rect x="612.7" y="4245" width="0.2" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="615.73" y="4255.5" ></text>
</g>
<g >
<title>`llvm::LiveVariables::HandlePhysRegKill(unsigned int, llvm::MachineInstr*) (2 samples, 0.01%)</title><rect x="584.4" y="4341" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="587.44" y="4351.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (582 samples, 3.68%)</title><rect x="130.8" y="565" width="43.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="133.84" y="575.5" >`CON..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="620.3" y="2501" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="623.27" y="2511.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (17 samples, 0.11%)</title><rect x="823.8" y="3061" width="1.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="826.81" y="3071.5" ></text>
</g>
<g >
<title>`core::lisp_getStaticClass(gctools::Header_s::Value) (6 samples, 0.04%)</title><rect x="1015.6" y="3701" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1018.64" y="3711.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (67 samples, 0.42%)</title><rect x="645.4" y="3525" width="5.0" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="648.42" y="3535.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (17 samples, 0.11%)</title><rect x="140.3" y="133" width="1.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="143.32" y="143.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceSet(unsigned long, gctools::smart_ptr&lt;core::T_O&gt;) (7 samples, 0.04%)</title><rect x="903.1" y="3541" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="906.08" y="3551.5" ></text>
</g>
<g >
<title>0x110c59eea (2 samples, 0.01%)</title><rect x="726.6" y="3653" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="729.63" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (23 samples, 0.15%)</title><rect x="619.1" y="2869" width="1.7" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="622.07" y="2879.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="626.2" y="1765" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="629.16" y="1775.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::MorphNode(llvm::SDNode*, unsigned int, llvm::SDVTList, llvm::ArrayRef&lt;llvm::SDValue&gt;, unsigned int) (3 samples, 0.02%)</title><rect x="581.6" y="4293" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="584.60" y="4303.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.8 (11 samples, 0.07%)</title><rect x="643.5" y="3397" width="0.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="646.48" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="613" width="0.7" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="625.35" y="623.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (2 samples, 0.01%)</title><rect x="1184.9" y="2117" width="0.2" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="1187.92" y="2127.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (2 samples, 0.01%)</title><rect x="622.1" y="309" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="625.13" y="319.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (5 samples, 0.03%)</title><rect x="658.5" y="3317" width="0.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="661.48" y="3327.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (435 samples, 2.75%)</title><rect x="240.9" y="581" width="32.4" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="243.86" y="591.5" >`C..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="2421" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="622.15" y="2431.5" ></text>
</g>
<g >
<title>0x110d8014c (2 samples, 0.01%)</title><rect x="895.2" y="3733" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="898.24" y="3743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="624.3" y="53" width="1.0" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="627.30" y="63.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (44 samples, 0.28%)</title><rect x="1061.9" y="3669" width="3.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1064.92" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (126 samples, 0.80%)</title><rect x="620.9" y="3237" width="9.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="623.86" y="3247.5" ></text>
</g>
<g >
<title>0x1258cfc3b (63 samples, 0.40%)</title><rect x="273.8" y="437" width="4.7" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="276.78" y="447.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.02%)</title><rect x="1082.4" y="3701" width="0.2" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="1085.37" y="3711.5" ></text>
</g>
<g >
<title>`REMOVE-USELESS-INSTRUCTIONS-FROM^CLEAVIR-REMOVE-USELESS-INSTRUCTIONS^FN^^ (10 samples, 0.06%)</title><rect x="1022.0" y="3765" width="0.7" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="1024.98" y="3775.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="624.0" y="1125" width="0.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="627.00" y="1135.5" ></text>
</g>
<g >
<title>`llvm::MachineFunctionPass::runOnFunction(llvm::Function&amp;) (4 samples, 0.03%)</title><rect x="635.7" y="2965" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="638.72" y="2975.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (102 samples, 0.65%)</title><rect x="620.9" y="2693" width="7.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="623.86" y="2703.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="624.0" y="741" width="0.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="627.00" y="751.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'EVAL-WHEN) T T T))^METHOD^^ (51 samples, 0.32%)</title><rect x="169.7" y="37" width="3.8" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="172.73" y="47.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.22 (6 samples, 0.04%)</title><rect x="823.3" y="2549" width="0.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="826.29" y="2559.5" ></text>
</g>
<g >
<title>`IRC-CCLASP-FUNCTION-CREATE^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="1183.7" y="2741" width="0.1" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="1186.66" y="2751.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="293" width="109.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="24.20" y="303.5" >`CONVERT^CLEA..</text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="646.4" y="3333" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="649.39" y="3343.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (27 samples, 0.17%)</title><rect x="630.3" y="2565" width="2.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="633.34" y="2575.5" ></text>
</g>
<g >
<title>0x1110a5d56 (3 samples, 0.02%)</title><rect x="627.7" y="1109" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="630.65" y="1119.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="881.2" y="3749" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="884.21" y="3759.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="624.3" y="85" width="1.0" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="627.30" y="95.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="639.0" y="3397" width="0.7" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="642.00" y="3407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (6 samples, 0.04%)</title><rect x="619.4" y="2149" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="622.37" y="2159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="389" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="631.18" y="399.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.02%)</title><rect x="625.3" y="309" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="628.27" y="319.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (8 samples, 0.05%)</title><rect x="1181.3" y="3781" width="0.6" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="1184.34" y="3791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="630.8" y="325" width="1.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="633.79" y="335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="997" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="633.64" y="1007.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.24 (7 samples, 0.04%)</title><rect x="874.9" y="2773" width="0.6" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="877.94" y="2783.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.32 (11 samples, 0.07%)</title><rect x="643.5" y="3477" width="0.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="646.48" y="3487.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (4 samples, 0.03%)</title><rect x="975.3" y="3685" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="978.26" y="3695.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T T ONE-SUCCESSOR-MIXIN T))^METHOD^^ (72 samples, 0.46%)</title><rect x="873.7" y="3605" width="5.4" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="876.75" y="3615.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.22 (5 samples, 0.03%)</title><rect x="640.2" y="3109" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="643.19" y="3119.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (18 samples, 0.11%)</title><rect x="876.4" y="2837" width="1.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="879.43" y="2847.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::run() (42 samples, 0.27%)</title><rect x="611.3" y="4373" width="3.1" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="614.31" y="4383.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeWrapperPass::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="610.3" y="4405" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="613.34" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="613" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="625.13" y="623.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (27 samples, 0.17%)</title><rect x="630.3" y="2773" width="2.1" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="633.34" y="2783.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="619.1" y="37" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="622.15" y="47.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3 samples, 0.02%)</title><rect x="874.0" y="2981" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="876.97" y="2991.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (7 samples, 0.04%)</title><rect x="628.0" y="1653" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="630.95" y="1663.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAG::Legalize() (5 samples, 0.03%)</title><rect x="580.1" y="4341" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="583.11" y="4351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.1" y="661" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="626.10" y="671.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (6 samples, 0.04%)</title><rect x="1182.2" y="3813" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="1185.24" y="3823.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="619.4" y="1509" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="622.44" y="1519.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (62 samples, 0.39%)</title><rect x="236.2" y="533" width="4.7" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="239.24" y="543.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (51 samples, 0.32%)</title><rect x="289.5" y="37" width="3.8" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="292.53" y="47.5" ></text>
</g>
<g >
<title>0x11171939a (4 samples, 0.03%)</title><rect x="639.8" y="3397" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="642.82" y="3407.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (36 samples, 0.23%)</title><rect x="10.0" y="149" width="2.7" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (102 samples, 0.65%)</title><rect x="620.9" y="2757" width="7.6" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="623.86" y="2767.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (13 samples, 0.08%)</title><rect x="626.2" y="1509" width="0.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="629.16" y="1519.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="1178.7" y="3765" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1181.65" y="3775.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="626.2" y="1557" width="0.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="629.16" y="1567.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (69 samples, 0.44%)</title><rect x="852.0" y="3445" width="5.2" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="855.03" y="3455.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="625.9" y="581" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="628.94" y="591.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (60 samples, 0.38%)</title><rect x="236.2" y="389" width="4.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="239.24" y="399.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="149" width="109.6" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="24.20" y="159.5" >`CONVERT^CLEA..</text>
</g>
<g >
<title>0x1110a5456 (2 samples, 0.01%)</title><rect x="622.1" y="405" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="625.13" y="415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.5" y="1461" width="0.1" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="623.49" y="1471.5" ></text>
</g>
<g >
<title>`GC_allochblk (4 samples, 0.03%)</title><rect x="1140.3" y="3541" width="0.3" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="1143.29" y="3551.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (18 samples, 0.11%)</title><rect x="13.5" y="229" width="1.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="16.51" y="239.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (4 samples, 0.03%)</title><rect x="141.9" y="101" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="144.89" y="111.5" ></text>
</g>
<g >
<title>`CODEGEN-PROGN^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="2213" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="826.44" y="2223.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="628.2" y="357" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="631.18" y="367.5" ></text>
</g>
<g >
<title>0x1111fb29d (2 samples, 0.01%)</title><rect x="1179.8" y="3765" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1182.85" y="3775.5" ></text>
</g>
<g >
<title>`INVALIDATED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2437" width="284.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="13.00" y="2447.5" >`INVALIDATED-DISCRIMINATING-FUNCTION^C..</text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3 samples, 0.02%)</title><rect x="874.0" y="3157" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="876.97" y="3167.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (75 samples, 0.47%)</title><rect x="1184.0" y="2629" width="5.6" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="1186.95" y="2639.5" ></text>
</g>
<g >
<title>`llvm::CallGraphWrapperPass::releaseMemory() (2 samples, 0.01%)</title><rect x="596.8" y="4469" width="0.1" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="599.75" y="4479.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="630.4" y="1493" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="633.42" y="1503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1765" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="623.64" y="1775.5" ></text>
</g>
<g >
<title>`wrapped_cl__gethash_T_spHashTableBase_spT_sp (7 samples, 0.04%)</title><rect x="956.9" y="3733" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="959.90" y="3743.5" ></text>
</g>
<g >
<title>0x11171939a (3 samples, 0.02%)</title><rect x="1157.1" y="3509" width="0.2" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="1160.08" y="3519.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.3" y="821" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="626.33" y="831.5" ></text>
</g>
<g >
<title>`COMPUTE-OUTCOME^CLOS^FN^^ (5 samples, 0.03%)</title><rect x="640.2" y="3381" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="643.19" y="3391.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.03%)</title><rect x="1175.1" y="3525" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1178.07" y="3535.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.3" y="1141" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="626.33" y="1151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1669" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="626.70" y="1679.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="12.8" y="149" width="0.7" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="15.76" y="159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="3125" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="635.43" y="3135.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAG::MorphNodeTo(llvm::SDNode*, unsigned int, llvm::SDVTList, llvm::ArrayRef&lt;llvm::SDValue&gt;) (3 samples, 0.02%)</title><rect x="581.6" y="4277" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="584.60" y="4287.5" ></text>
</g>
<g >
<title>`llvmo::optimizeModule(std::__1::shared_ptr&lt;llvm::Module&gt;) (2 samples, 0.01%)</title><rect x="657.4" y="2453" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="660.44" y="2463.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.48 (4 samples, 0.03%)</title><rect x="823.4" y="2229" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="826.44" y="2239.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (89 samples, 0.56%)</title><rect x="1182.9" y="3541" width="6.7" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1185.91" y="3551.5" ></text>
</g>
<g >
<title>`core::General_O::_instanceClass() const (9 samples, 0.06%)</title><rect x="826.6" y="3653" width="0.6" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="829.57" y="3663.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core::T_O&gt;) (6 samples, 0.04%)</title><rect x="1177.5" y="3669" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1180.53" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="997" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="632.45" y="1007.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (40 samples, 0.25%)</title><rect x="278.5" y="565" width="3.0" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="281.48" y="575.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="624.0" y="629" width="0.1" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="627.00" y="639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="1093" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="633.64" y="1103.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (122 samples, 0.77%)</title><rect x="587.9" y="4517" width="9.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="590.95" y="4527.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (3,461 samples, 21.89%)</title><rect x="15.0" y="885" width="258.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="18.00" y="895.5" >`CONVERT^CLEAVIR-CST-TO-AST^((:ARO..</text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="627.7" y="1589" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="630.65" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (64 samples, 0.40%)</title><rect x="620.9" y="2277" width="4.7" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="623.86" y="2287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (11 samples, 0.07%)</title><rect x="627.7" y="2197" width="0.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="630.65" y="2207.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.202 (7,680 samples, 48.58%)</title><rect x="616.3" y="4165" width="573.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="619.31" y="4175.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.202</text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (3,708 samples, 23.45%)</title><rect x="10.0" y="1045" width="276.8" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" >`inline-prep.lisp-inline-prep437^29^T..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.6" y="501" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="633.64" y="511.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="287.2" y="85" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="290.22" y="95.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (3 samples, 0.02%)</title><rect x="877.9" y="3237" width="0.2" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="880.93" y="3247.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__dynamic_cast (2 samples, 0.01%)</title><rect x="990.5" y="3685" width="0.1" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="993.48" y="3695.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((BLOCK-AST T))^METHOD^^.152 (71 samples, 0.45%)</title><rect x="281.5" y="501" width="5.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="284.47" y="511.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (229 samples, 1.45%)</title><rect x="1158.8" y="3653" width="17.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="1161.80" y="3663.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (15 samples, 0.09%)</title><rect x="1187.5" y="725" width="1.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="1190.46" y="735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="629" width="1.0" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="627.30" y="639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (23 samples, 0.15%)</title><rect x="619.1" y="2933" width="1.7" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="622.07" y="2943.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (4 samples, 0.03%)</title><rect x="643.5" y="3029" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="646.48" y="3039.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (2 samples, 0.01%)</title><rect x="1086.8" y="3589" width="0.2" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="1089.85" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="623.1" y="1269" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="626.10" y="1279.5" ></text>
</g>
<g >
<title>0x123ae11b3 (2 samples, 0.01%)</title><rect x="1158.1" y="3397" width="0.1" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1161.05" y="3407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="627.1" y="2037" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="630.13" y="2047.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (2 samples, 0.01%)</title><rect x="699.1" y="3637" width="0.1" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="702.09" y="3647.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (3,461 samples, 21.89%)</title><rect x="15.0" y="821" width="258.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="18.00" y="831.5" >`convert.lisp-convert288^36^TOP-CO..</text>
</g>
<g >
<title>`combineInstructionsOverFunction(llvm::Function&amp;, llvm::InstCombineWorklist&amp;, llvm::AAResults*, llvm::AssumptionCache&amp;, llvm::TargetLibraryInfo&amp;, llvm::DominatorTree&amp;, llvm::OptimizationRemarkEmitter&amp;, bool, llvm::LoopInfo*) (2 samples, 0.01%)</title><rect x="657.4" y="2373" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="660.44" y="2383.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef&lt;llvm::Value*&gt;, bool, llvm::Optional&lt;unsigned int&gt;, llvm::Type*) (2 samples, 0.01%)</title><rect x="600.4" y="4309" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="603.41" y="4319.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="1029" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="635.43" y="1039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (11 samples, 0.07%)</title><rect x="628.6" y="2725" width="0.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="631.55" y="2735.5" ></text>
</g>
<g >
<title>`LINK-INLINE-REMOVE-BUILTINS^COMPILER^FN^^ (9 samples, 0.06%)</title><rect x="657.6" y="2613" width="0.7" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="660.59" y="2623.5" ></text>
</g>
<g >
<title>0x1258cfcab (63 samples, 0.40%)</title><rect x="273.8" y="245" width="4.7" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="276.78" y="255.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.26 (19 samples, 0.12%)</title><rect x="1187.3" y="1125" width="1.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="1190.31" y="1135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1317" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="623.64" y="1327.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.3" y="1317" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="626.33" y="1327.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^592^TOP-COMPILE-FILE.79 (4 samples, 0.03%)</title><rect x="823.4" y="1589" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="826.44" y="1599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="628.2" y="1029" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="631.18" y="1039.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^124^TOP-COMPILE-FILE.325 (2 samples, 0.01%)</title><rect x="14.9" y="341" width="0.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="17.85" y="351.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (12 samples, 0.08%)</title><rect x="1008.6" y="3589" width="0.9" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="1011.62" y="3599.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (8 samples, 0.05%)</title><rect x="621.5" y="597" width="0.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="624.53" y="607.5" ></text>
</g>
<g >
<title>0x1257602e2 (5 samples, 0.03%)</title><rect x="627.1" y="1845" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="630.13" y="1855.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.8" y="1429" width="0.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="628.79" y="1439.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.9 (16 samples, 0.10%)</title><rect x="635.6" y="3525" width="1.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="638.57" y="3535.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (12 samples, 0.08%)</title><rect x="872.5" y="3237" width="0.9" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="875.48" y="3247.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (63 samples, 0.40%)</title><rect x="273.8" y="533" width="4.7" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="276.78" y="543.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.5" y="1045" width="0.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="623.49" y="1055.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (11 samples, 0.07%)</title><rect x="628.6" y="2709" width="0.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="631.55" y="2719.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^199^TOP-COMPILE-FILE.136 (3,806 samples, 24.07%)</title><rect x="10.0" y="1349" width="284.1" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="13.00" y="1359.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (62 samples, 0.39%)</title><rect x="236.2" y="565" width="4.7" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="239.24" y="575.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="623.1" y="1253" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="626.10" y="1263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.1" y="1125" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="630.13" y="1135.5" ></text>
</g>
<g >
<title>`INVALIDATED-DISPATCH-FUNCTION^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2133" width="284.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="13.00" y="2143.5" >`INVALIDATED-DISPATCH-FUNCTION^CLOS^FN^^</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="581" width="109.6" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="24.20" y="591.5" >`CONVERT^CLEA..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (7 samples, 0.04%)</title><rect x="628.0" y="1413" width="0.5" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="630.95" y="1423.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="632.4" y="2037" width="0.2" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="635.43" y="2047.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (27 samples, 0.17%)</title><rect x="630.3" y="3125" width="2.1" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="633.34" y="3135.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (27 samples, 0.17%)</title><rect x="1186.9" y="1653" width="2.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="1189.94" y="1663.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.1" y="1717" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="627.15" y="1727.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="636.2" y="3029" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="639.24" y="3039.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (60 samples, 0.38%)</title><rect x="236.2" y="341" width="4.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="239.24" y="351.5" ></text>
</g>
<g >
<title>0x1110a5606 (6 samples, 0.04%)</title><rect x="619.4" y="1749" width="0.4" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="622.37" y="1759.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.64 (5 samples, 0.03%)</title><rect x="1188.1" y="181" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1191.06" y="191.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="619.5" y="37" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="622.52" y="47.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="624.0" y="1301" width="0.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="627.00" y="1311.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitStoreInst(llvm::StoreInst&amp;) (2 samples, 0.01%)</title><rect x="604.1" y="4357" width="0.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="607.14" y="4367.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGBuilder::getValueImpl(llvm::Value const*) (2 samples, 0.01%)</title><rect x="583.2" y="4293" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="586.24" y="4303.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="623.7" y="1029" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="626.70" y="1039.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (1,469 samples, 9.29%)</title><rect x="21.2" y="693" width="109.6" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="24.20" y="703.5" >`convert-spec..</text>
</g>
<g >
<title>`CODEGEN^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="1029" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="826.51" y="1039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1285" width="0.1" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="623.49" y="1295.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (12 samples, 0.08%)</title><rect x="626.2" y="453" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="629.16" y="463.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.8" y="933" width="0.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="628.79" y="943.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.24 (5 samples, 0.03%)</title><rect x="1156.6" y="3397" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="1159.64" y="3407.5" ></text>
</g>
<g >
<title>`pthread_cond_broadcast (2 samples, 0.01%)</title><rect x="798.3" y="3557" width="0.1" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="801.28" y="3567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (10 samples, 0.06%)</title><rect x="622.4" y="165" width="0.7" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="625.35" y="175.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (829 samples, 5.24%)</title><rect x="174.3" y="277" width="61.9" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="177.28" y="287.5" >`conve..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (10 samples, 0.06%)</title><rect x="622.4" y="1493" width="0.7" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="625.35" y="1503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.5" y="1605" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="626.47" y="1615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (83 samples, 0.53%)</title><rect x="15.0" y="597" width="6.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="18.00" y="607.5" ></text>
</g>
<g >
<title>0x1501b4cfb (65 samples, 0.41%)</title><rect x="281.9" y="309" width="4.9" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="284.92" y="319.5" ></text>
</g>
<g >
<title>`DO-LTV^LITERAL^FN^^ (7,677 samples, 48.56%)</title><rect x="616.5" y="3877" width="573.1" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="619.53" y="3887.5" >`DO-LTV^LITERAL^FN^^</text>
</g>
<g >
<title>0x1111fb16e (3 samples, 0.02%)</title><rect x="746.1" y="3653" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="749.11" y="3663.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="1157.5" y="3381" width="0.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="1160.53" y="3391.5" ></text>
</g>
<g >
<title>`OPTIMIZE-STACK-ENCLOSE^CLASP-CLEAVIR^FN^^ (4 samples, 0.03%)</title><rect x="1178.1" y="3813" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="1181.06" y="3823.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="619.4" y="1301" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="622.44" y="1311.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (6 samples, 0.04%)</title><rect x="629.4" y="2517" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="632.45" y="2527.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="630.6" y="629" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="633.64" y="639.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_set_T_spintT_sp (8 samples, 0.05%)</title><rect x="739.5" y="3621" width="0.6" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="742.54" y="3631.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (7 samples, 0.04%)</title><rect x="1171.6" y="3621" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="1174.56" y="3631.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (59 samples, 0.37%)</title><rect x="282.4" y="85" width="4.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="285.37" y="95.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="14.9" y="261" width="0.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="17.85" y="271.5" ></text>
</g>
<g >
<title>0x123abc4da (2 samples, 0.01%)</title><rect x="272.7" y="437" width="0.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="275.66" y="447.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (4 samples, 0.03%)</title><rect x="1140.3" y="3525" width="0.3" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="1143.29" y="3535.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (26 samples, 0.16%)</title><rect x="630.4" y="1989" width="2.0" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="633.42" y="1999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="997" width="0.4" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="622.44" y="1007.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.88 (2 samples, 0.01%)</title><rect x="876.3" y="2789" width="0.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="879.28" y="2799.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::removeDeadPasses(llvm::Pass*, llvm::StringRef, llvm::PassDebuggingString) (2 samples, 0.01%)</title><rect x="596.8" y="4501" width="0.1" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="599.75" y="4511.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.74 (6 samples, 0.04%)</title><rect x="823.3" y="2757" width="0.4" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="826.29" y="2767.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (7 samples, 0.04%)</title><rect x="895.4" y="3717" width="0.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="898.39" y="3727.5" ></text>
</g>
<g >
<title>0x125851575 (6 samples, 0.04%)</title><rect x="1157.1" y="3605" width="0.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1160.08" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (16 samples, 0.10%)</title><rect x="622.1" y="1685" width="1.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="625.13" y="1695.5" ></text>
</g>
<g >
<title>0x123ae11b3 (2 samples, 0.01%)</title><rect x="640.8" y="3381" width="0.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="643.79" y="3391.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^124^TOP-COMPILE-FILE.325 (62 samples, 0.39%)</title><rect x="236.2" y="661" width="4.7" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="239.24" y="671.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (18 samples, 0.11%)</title><rect x="13.5" y="533" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="16.51" y="543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1477" width="0.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="629.16" y="1487.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="622.1" y="1317" width="0.3" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="625.13" y="1327.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.12 (11 samples, 0.07%)</title><rect x="643.5" y="3333" width="0.8" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="646.48" y="3343.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (27 samples, 0.17%)</title><rect x="630.3" y="2293" width="2.1" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="633.34" y="2303.5" ></text>
</g>
<g >
<title>0x123ae3cf3 (2 samples, 0.01%)</title><rect x="641.1" y="3349" width="0.1" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="644.09" y="3359.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD^^ (2 samples, 0.01%)</title><rect x="878.3" y="3349" width="0.1" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="881.30" y="3359.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (6 samples, 0.04%)</title><rect x="810.2" y="3637" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="813.15" y="3647.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="1157.1" y="3541" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="1160.08" y="3551.5" ></text>
</g>
<g >
<title>`core::ext__class_get(gctools::smart_ptr&lt;core::ClassHolder_O&gt;) (2 samples, 0.01%)</title><rect x="907.9" y="3717" width="0.1" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="910.86" y="3727.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (3 samples, 0.02%)</title><rect x="877.9" y="3333" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="880.93" y="3343.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.33 (3 samples, 0.02%)</title><rect x="874.0" y="3429" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="876.97" y="3439.5" ></text>
</g>
<g >
<title>`DELETE-THE^CLEAVIR-KILDALL-TYPE-INFERENCE^FN^^ (4 samples, 0.03%)</title><rect x="633.7" y="3813" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="636.70" y="3823.5" ></text>
</g>
<g >
<title>0x110c59dfc (141 samples, 0.89%)</title><rect x="715.1" y="3653" width="10.6" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="718.13" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="1653" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="622.15" y="1663.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.03%)</title><rect x="639.0" y="3317" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="642.00" y="3327.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="1925" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="622.15" y="1935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="869" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="631.18" y="879.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeWrapperPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="600.1" y="4405" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="603.11" y="4415.5" ></text>
</g>
<g >
<title>`cst-to-ast.lisp-cst-to-ast301^3^TOP-COMPILE-FILE.1 (4 samples, 0.03%)</title><rect x="141.6" y="117" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="144.59" y="127.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="632.4" y="3109" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="635.43" y="3119.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (28 samples, 0.18%)</title><rect x="1186.9" y="1861" width="2.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="1189.87" y="1871.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="620.6" y="1685" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="623.64" y="1695.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="628.2" y="133" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="631.18" y="143.5" ></text>
</g>
<g >
<title>0x1110a5606 (6 samples, 0.04%)</title><rect x="629.4" y="2661" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="632.45" y="2671.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.6" y="869" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="633.64" y="879.5" ></text>
</g>
<g >
<title>`inline-function.lisp-inline-function396^44^TOP-COMPILE-FILE.140 (8 samples, 0.05%)</title><rect x="879.2" y="3685" width="0.6" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="882.19" y="3695.5" ></text>
</g>
<g >
<title>0x1257602e2 (126 samples, 0.80%)</title><rect x="620.9" y="3205" width="9.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="623.86" y="3215.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (10 samples, 0.06%)</title><rect x="877.0" y="2789" width="0.8" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="880.03" y="2799.5" ></text>
</g>
<g >
<title>`COMPILE^COMMON-LISP^FN^^ (16 samples, 0.10%)</title><rect x="635.6" y="3589" width="1.2" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="638.57" y="3599.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^METHOD^^.35 (47 samples, 0.30%)</title><rect x="10.0" y="645" width="3.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (10 samples, 0.06%)</title><rect x="622.4" y="53" width="0.7" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="625.35" y="63.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (19 samples, 0.12%)</title><rect x="271.2" y="229" width="1.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="274.24" y="239.5" ></text>
</g>
<g >
<title>`setup.lisp-setup426^310^TOP-COMPILE-FILE.232 (21 samples, 0.13%)</title><rect x="140.3" y="181" width="1.6" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="143.32" y="191.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::EarlyCSELegacyCommonPass&lt;true&gt;::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="598.0" y="4405" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="601.02" y="4415.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::T_O&gt;::notnilp() const (2 samples, 0.01%)</title><rect x="1016.5" y="3701" width="0.1" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="1019.46" y="3711.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (43 samples, 0.27%)</title><rect x="823.3" y="3205" width="3.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="826.29" y="3215.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (11 samples, 0.07%)</title><rect x="649.3" y="3509" width="0.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="652.30" y="3519.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (10 samples, 0.06%)</title><rect x="778.7" y="3637" width="0.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="781.73" y="3647.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="625.3" y="597" width="0.2" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="628.27" y="607.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.3" y="245" width="0.2" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="626.33" y="255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="2549" width="0.3" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="635.43" y="2559.5" ></text>
</g>
<g >
<title>`CCLASP-LOOP2^COMPILER^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1285" width="284.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="13.00" y="1295.5" >`CCLASP-LOOP2^COMPILER^FN^^</text>
</g>
<g >
<title>`llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (7 samples, 0.04%)</title><rect x="876.4" y="2661" width="0.6" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="879.43" y="2671.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="1157.8" y="3349" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="1160.83" y="3359.5" ></text>
</g>
<g >
<title>0x1501b4cfb (2 samples, 0.01%)</title><rect x="240.7" y="261" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="243.72" y="271.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="624.0" y="933" width="0.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="627.00" y="943.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="623.8" y="661" width="0.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="626.77" y="671.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="664.5" y="3445" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="667.53" y="3455.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (4 samples, 0.03%)</title><rect x="643.5" y="2997" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="646.48" y="3007.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (127 samples, 0.80%)</title><rect x="620.9" y="3381" width="9.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="623.86" y="3391.5" ></text>
</g>
<g >
<title>0x110cd62a2 (12 samples, 0.08%)</title><rect x="243.4" y="149" width="0.9" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="246.40" y="159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1893" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="630.65" y="1903.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="628.8" y="2485" width="0.1" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="631.77" y="2495.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (9 samples, 0.06%)</title><rect x="1181.3" y="3797" width="0.6" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="1184.27" y="3807.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getValueInBlock(llvm::Value*, llvm::BasicBlock*, llvm::Instruction*) (3 samples, 0.02%)</title><rect x="597.7" y="4357" width="0.2" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="600.72" y="4367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (155 samples, 0.98%)</title><rect x="620.9" y="3477" width="11.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="623.86" y="3487.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="662.7" y="3333" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="665.66" y="3343.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'EVAL-WHEN) T T T))^METHOD^^ (12 samples, 0.08%)</title><rect x="243.4" y="197" width="0.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="246.40" y="207.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.6" y="965" width="0.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="632.60" y="975.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="630.6" y="1013" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="633.64" y="1023.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (3 samples, 0.02%)</title><rect x="648.8" y="3413" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="651.78" y="3423.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^METHOD^^.35 (1,469 samples, 9.29%)</title><rect x="21.2" y="485" width="109.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="24.20" y="495.5" >`CONVERT-CST^..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="2101" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="635.43" y="2111.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="623.1" y="517" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="626.10" y="527.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt;::smart_ptr() (9 samples, 0.06%)</title><rect x="867.2" y="3653" width="0.6" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="870.18" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="1877" width="0.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="632.74" y="1887.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (5 samples, 0.03%)</title><rect x="997.9" y="3013" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1000.87" y="3023.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.7" y="1637" width="0.2" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="632.74" y="1647.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="632.4" y="2053" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="635.43" y="2063.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((FUNCTION-AST T))^METHOD^^.113 (6 samples, 0.04%)</title><rect x="281.5" y="357" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="284.47" y="367.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="625.9" y="1173" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="628.94" y="1183.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap&lt;llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo&lt;llvm::Constant*&gt;, llvm::detail::DenseMapPair&lt;llvm::Constant*, llvm::Constant*&gt; &gt;&amp;) (2 samples, 0.01%)</title><rect x="607.2" y="4293" width="0.2" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="610.20" y="4303.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (5 samples, 0.03%)</title><rect x="922.6" y="3733" width="0.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="925.64" y="3743.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^396^TOP-COMPILE-FILE.130 (90 samples, 0.57%)</title><rect x="1182.8" y="3749" width="6.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="1185.83" y="3759.5" ></text>
</g>
<g >
<title>`asdf.lisp-^10341^TOP-COMPILE-FILE.46 (3,806 samples, 24.07%)</title><rect x="10.0" y="3365" width="284.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="13.00" y="3375.5" >`asdf.lisp-^10341^TOP-COMPILE-FILE.46</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="620.3" y="2373" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="623.27" y="2383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (7 samples, 0.04%)</title><rect x="629.4" y="2709" width="0.6" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="632.45" y="2719.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (37 samples, 0.23%)</title><rect x="144.7" y="181" width="2.8" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="147.73" y="191.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="629.4" y="53" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="632.45" y="63.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (3 samples, 0.02%)</title><rect x="1018.2" y="3717" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1021.18" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.0" y="2325" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="633.04" y="2335.5" ></text>
</g>
<g >
<title>0x1501b4d6b (40 samples, 0.25%)</title><rect x="278.5" y="517" width="3.0" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="281.48" y="527.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="627.7" y="1141" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="630.65" y="1151.5" ></text>
</g>
<g >
<title>`macro-functions.lisp-macro-functions194^173^TOP-COMPILE-FILE.38 (96 samples, 0.61%)</title><rect x="286.9" y="773" width="7.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="289.92" y="783.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (15 samples, 0.09%)</title><rect x="1187.5" y="933" width="1.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="1190.46" y="943.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (17 samples, 0.11%)</title><rect x="620.9" y="1509" width="1.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="623.86" y="1519.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="757" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="622.15" y="767.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.59 (2 samples, 0.01%)</title><rect x="656.7" y="2437" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="659.69" y="2447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1861" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="623.64" y="1871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="3909" width="284.1" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="13.00" y="3919.5" >`core::FuncallableInstance_O::funcalla..</text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.01%)</title><rect x="951.8" y="3589" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="954.82" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.4" y="1621" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="633.42" y="1631.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (12 samples, 0.08%)</title><rect x="872.5" y="3589" width="0.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="875.48" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="623.1" y="1653" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="626.10" y="1663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2197" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="633.04" y="2207.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^METHOD^^.35 (82 samples, 0.52%)</title><rect x="15.0" y="293" width="6.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="18.00" y="303.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (294 samples, 1.86%)</title><rect x="147.5" y="37" width="21.9" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="150.49" y="47.5" >`..</text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt; (llvmo::ClaspJIT_O::*)(gctools::smart_ptr&lt;llvmo::Module_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1156.6" y="3093" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1159.64" y="3103.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T))^METHOD^^ (66 samples, 0.42%)</title><rect x="874.2" y="3541" width="4.9" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="877.19" y="3551.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="632.4" y="2309" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="635.43" y="2319.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.6" y="2405" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="623.64" y="2415.5" ></text>
</g>
<g >
<title>`core::Vaslist::Vaslist(core::Vaslist const&amp;) (2 samples, 0.01%)</title><rect x="1015.1" y="3685" width="0.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="1018.12" y="3695.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.9 (43 samples, 0.27%)</title><rect x="823.3" y="3413" width="3.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="826.29" y="3423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1813" width="0.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="623.49" y="1823.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const (5 samples, 0.03%)</title><rect x="1105.8" y="3669" width="0.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1108.80" y="3679.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.02%)</title><rect x="1016.1" y="3701" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="1019.09" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="627.5" y="1925" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="630.51" y="1935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1157" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="635.43" y="1167.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (2 samples, 0.01%)</title><rect x="921.9" y="3733" width="0.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="924.89" y="3743.5" ></text>
</g>
<g >
<title>0x1501b4cfb (6 samples, 0.04%)</title><rect x="272.9" y="277" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="275.89" y="287.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.7 (12 samples, 0.08%)</title><rect x="872.5" y="3461" width="0.9" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="875.48" y="3471.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (15 samples, 0.09%)</title><rect x="1187.5" y="773" width="1.1" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="1190.46" y="783.5" ></text>
</g>
<g >
<title>0x1256f014f (12 samples, 0.08%)</title><rect x="13.5" y="85" width="0.9" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="16.51" y="95.5" ></text>
</g>
<g >
<title>0x110d5dd50 (2 samples, 0.01%)</title><rect x="728.7" y="3653" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="731.72" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="623.1" y="1429" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="626.10" y="1439.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.02%)</title><rect x="623.7" y="997" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="626.70" y="1007.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^592^TOP-COMPILE-FILE.77 (4 samples, 0.03%)</title><rect x="823.4" y="1605" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="826.44" y="1615.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.69 (6 samples, 0.04%)</title><rect x="823.3" y="2805" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="826.29" y="2815.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="624.3" y="1637" width="1.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="627.30" y="1647.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.20 (9 samples, 0.06%)</title><rect x="997.6" y="3237" width="0.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="1000.58" y="3247.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="618.6" y="3701" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="621.62" y="3711.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisPassInfo(void const*) const (2 samples, 0.01%)</title><rect x="605.8" y="4389" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="608.78" y="4399.5" ></text>
</g>
<g >
<title>0x110d5d0ae (2 samples, 0.01%)</title><rect x="1066.4" y="3733" width="0.1" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1069.39" y="3743.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="872.9" y="3045" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="875.85" y="3055.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef&lt;llvm::Constant*&gt;, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (3 samples, 0.02%)</title><rect x="590.1" y="4389" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="593.11" y="4399.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (7 samples, 0.04%)</title><rect x="635.6" y="3173" width="0.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="638.64" y="3183.5" ></text>
</g>
<g >
<title>0x110f8013b (2 samples, 0.01%)</title><rect x="737.8" y="3653" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="740.82" y="3663.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.212 (7,680 samples, 48.58%)</title><rect x="616.3" y="4005" width="573.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="619.31" y="4015.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.212</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1301" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="626.70" y="1311.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="622.4" y="709" width="0.7" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="625.35" y="719.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.8 (12 samples, 0.08%)</title><rect x="872.5" y="3445" width="0.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="875.48" y="3455.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="628.2" y="549" width="0.3" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="631.18" y="559.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (52 samples, 0.33%)</title><rect x="645.4" y="3509" width="3.9" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="648.42" y="3519.5" ></text>
</g>
<g >
<title>0x110cd62a2 (32 samples, 0.20%)</title><rect x="10.0" y="101" width="2.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="660.0" y="3365" width="0.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="662.97" y="3375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.8" y="741" width="0.1" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="626.77" y="751.5" ></text>
</g>
<g >
<title>0x11171939a (4 samples, 0.03%)</title><rect x="638.2" y="3525" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="641.18" y="3535.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (17 samples, 0.11%)</title><rect x="624.0" y="1973" width="1.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="627.00" y="1983.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeWrapperPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="621.5" y="437" width="0.2" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="624.53" y="447.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.204 (7,680 samples, 48.58%)</title><rect x="616.3" y="4133" width="573.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="619.31" y="4143.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.204</text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (7 samples, 0.04%)</title><rect x="1157.5" y="3493" width="0.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="1160.53" y="3503.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="1157.7" y="3381" width="0.1" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="1160.68" y="3391.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="1077" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="622.15" y="1087.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (36 samples, 0.23%)</title><rect x="10.0" y="453" width="2.7" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="639.9" y="3365" width="0.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="642.90" y="3375.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.24 (86 samples, 0.54%)</title><rect x="1183.1" y="2997" width="6.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1186.13" y="3007.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.1" y="773" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="626.10" y="783.5" ></text>
</g>
<g >
<title>0x123ae3cf3 (2 samples, 0.01%)</title><rect x="645.1" y="3461" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="648.12" y="3471.5" ></text>
</g>
<g >
<title>0x1110a4be6 (5 samples, 0.03%)</title><rect x="619.4" y="1461" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="622.44" y="1471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="805" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="632.45" y="815.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.3" y="357" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="626.33" y="367.5" ></text>
</g>
<g >
<title>0x1258cfc3b (65 samples, 0.41%)</title><rect x="273.6" y="821" width="4.9" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="276.63" y="831.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="659.8" y="3221" width="0.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="662.75" y="3231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (21 samples, 0.13%)</title><rect x="630.8" y="805" width="1.6" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="633.79" y="815.5" ></text>
</g>
<g >
<title>`llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="1176.9" y="3029" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="1179.94" y="3039.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="874.6" y="3317" width="0.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="877.57" y="3327.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.7" y="1813" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="632.74" y="1823.5" ></text>
</g>
<g >
<title>`cc_fdefinition (18 samples, 0.11%)</title><rect x="818.7" y="3653" width="1.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="821.74" y="3663.5" ></text>
</g>
<g >
<title>`llvm::MachineFunctionPass::runOnFunction(llvm::Function&amp;) (9 samples, 0.06%)</title><rect x="824.0" y="2853" width="0.7" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="827.04" y="2863.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="619.4" y="629" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="622.44" y="639.5" ></text>
</g>
<g >
<title>0x1110a5456 (12 samples, 0.08%)</title><rect x="626.2" y="53" width="0.9" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="629.16" y="63.5" ></text>
</g>
<g >
<title>`llvmo::ClaspJIT_O::addModule(gctools::smart_ptr&lt;llvmo::Module_O&gt;) (10 samples, 0.06%)</title><rect x="656.8" y="2501" width="0.8" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="659.84" y="2511.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.9 (21 samples, 0.13%)</title><rect x="656.7" y="2949" width="1.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="659.69" y="2959.5" ></text>
</g>
<g >
<title>0x1110a4be6 (115 samples, 0.73%)</title><rect x="620.9" y="2949" width="8.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="623.86" y="2959.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="619.1" y="2453" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="622.15" y="2463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (126 samples, 0.80%)</title><rect x="620.9" y="3301" width="9.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="623.86" y="3311.5" ></text>
</g>
<g >
<title>0x11171939a (9 samples, 0.06%)</title><rect x="660.3" y="3365" width="0.6" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="663.27" y="3375.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^.154 (71 samples, 0.45%)</title><rect x="281.5" y="453" width="5.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="284.47" y="463.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.1" y="453" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="626.10" y="463.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.201 (7,680 samples, 48.58%)</title><rect x="616.3" y="4181" width="573.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="619.31" y="4191.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.201</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (28 samples, 0.18%)</title><rect x="630.3" y="3349" width="2.1" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="633.34" y="3359.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.61 (74 samples, 0.47%)</title><rect x="1184.0" y="2565" width="5.6" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="1187.03" y="2575.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.01%)</title><rect x="966.7" y="3653" width="0.2" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="969.75" y="3663.5" ></text>
</g>
<g >
<title>0x110d5dedb (5 samples, 0.03%)</title><rect x="894.6" y="3733" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="897.57" y="3743.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (361 samples, 2.28%)</title><rect x="244.3" y="229" width="26.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="247.30" y="239.5" >`..</text>
</g>
<g >
<title>`COMPILE^COMMON-LISP^FN^^ (20 samples, 0.13%)</title><rect x="876.3" y="3221" width="1.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="879.28" y="3231.5" ></text>
</g>
<g >
<title>0x110cd62a2 (294 samples, 1.86%)</title><rect x="147.5" y="165" width="21.9" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="150.49" y="175.5" >0..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (24 samples, 0.15%)</title><rect x="619.1" y="3077" width="1.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="622.07" y="3087.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Function_O&gt; gctools::As&lt;gctools::smart_ptr&lt;core::Function_O&gt;, gctools::smart_ptr&lt;core::T_O&gt; &gt;(gctools::smart_ptr&lt;core::T_O&gt; const&amp;) (2 samples, 0.01%)</title><rect x="1153.1" y="3733" width="0.1" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1156.05" y="3743.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.90 (15 samples, 0.09%)</title><rect x="1187.5" y="869" width="1.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1190.46" y="879.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (247 samples, 1.56%)</title><rect x="1128.3" y="3653" width="18.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="1131.35" y="3663.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (51 samples, 0.32%)</title><rect x="169.7" y="69" width="3.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="172.73" y="79.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="629" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="635.43" y="639.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="623.3" y="1733" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="626.33" y="1743.5" ></text>
</g>
<g >
<title>0x12914113b (2 samples, 0.01%)</title><rect x="768.9" y="3653" width="0.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="771.88" y="3663.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T T T T))^METHOD^^ (21 samples, 0.13%)</title><rect x="643.2" y="3653" width="1.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="646.18" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="627.1" y="1269" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="630.13" y="1279.5" ></text>
</g>
<g >
<title>`ALL-PARAMETERS-REQUIRED-P^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="1021.8" y="3653" width="0.1" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="1024.76" y="3663.5" ></text>
</g>
<g >
<title>`CODEGEN^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="709" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="826.51" y="719.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="629.4" y="1925" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="632.45" y="1935.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (3 samples, 0.02%)</title><rect x="12.5" y="53" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="15.46" y="63.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="14.9" y="725" width="0.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="17.85" y="735.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((BLOCK-AST T))^METHOD^^.152 (63 samples, 0.40%)</title><rect x="273.8" y="501" width="4.7" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="276.78" y="511.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (19 samples, 0.12%)</title><rect x="271.2" y="245" width="1.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="274.24" y="255.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="1669" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="826.44" y="1679.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (2 samples, 0.01%)</title><rect x="173.6" y="245" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="176.61" y="255.5" ></text>
</g>
<g >
<title>`CODEGEN^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="1541" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="826.51" y="1551.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.24 (5 samples, 0.03%)</title><rect x="640.2" y="3093" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="643.19" y="3103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="628.6" y="2629" width="0.7" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="631.55" y="2639.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (49 samples, 0.31%)</title><rect x="909.8" y="3717" width="3.7" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="912.80" y="3727.5" ></text>
</g>
<g >
<title>0x1140073e7 (2 samples, 0.01%)</title><rect x="14.9" y="645" width="0.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="17.85" y="655.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3 samples, 0.02%)</title><rect x="997.7" y="3109" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="1000.65" y="3119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="1461" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="628.94" y="1471.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (3 samples, 0.02%)</title><rect x="894.6" y="3701" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="897.65" y="3711.5" ></text>
</g>
<g >
<title>`cst-to-ast.lisp-cst-to-ast301^3^TOP-COMPILE-FILE.3 (4 samples, 0.03%)</title><rect x="141.6" y="101" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="144.59" y="111.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^592^TOP-COMPILE-FILE.81 (4 samples, 0.03%)</title><rect x="823.4" y="1573" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="826.44" y="1583.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="626.2" y="1541" width="0.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="629.16" y="1551.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.61 (6 samples, 0.04%)</title><rect x="823.3" y="2869" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="826.29" y="2879.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="624.0" y="1557" width="0.1" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="627.00" y="1567.5" ></text>
</g>
<g >
<title>0x1110a5e76 (4 samples, 0.03%)</title><rect x="632.4" y="3141" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="635.43" y="3151.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="1749" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="622.15" y="1759.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (23 samples, 0.15%)</title><rect x="1184.9" y="2197" width="1.7" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="1187.92" y="2207.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::ImmutableCallSite, llvm::MemoryLocation const&amp;) (3 samples, 0.02%)</title><rect x="595.7" y="4341" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="598.71" y="4351.5" ></text>
</g>
<g >
<title>0x1110a5e76 (2 samples, 0.01%)</title><rect x="620.5" y="1989" width="0.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="623.49" y="1999.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="619.4" y="1701" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="622.44" y="1711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.9" y="101" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="628.94" y="111.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm::Value const*, unsigned long long) (6 samples, 0.04%)</title><rect x="603.4" y="4309" width="0.4" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="606.40" y="4319.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (7 samples, 0.04%)</title><rect x="738.4" y="3589" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="741.42" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="853" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="635.43" y="863.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (2 samples, 0.01%)</title><rect x="653.9" y="3397" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="656.93" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="1733" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="622.37" y="1743.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.295 (7 samples, 0.04%)</title><rect x="1176.9" y="3701" width="0.6" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="1179.94" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.3" y="741" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="626.33" y="751.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (37 samples, 0.23%)</title><rect x="891.6" y="3717" width="2.7" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="894.59" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="549" width="0.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="635.43" y="559.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (43 samples, 0.27%)</title><rect x="823.3" y="3573" width="3.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="826.29" y="3583.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (62 samples, 0.39%)</title><rect x="236.2" y="725" width="4.7" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="239.24" y="735.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvmo::PassManager_O, bool (llvm::legacy::PassManager::*)(llvm::Module&amp;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (5 samples, 0.03%)</title><rect x="997.9" y="3029" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1000.87" y="3039.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="622.4" y="1013" width="0.7" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="625.35" y="1023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="901" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="626.10" y="911.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (26 samples, 0.16%)</title><rect x="630.4" y="2005" width="2.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="633.42" y="2015.5" ></text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^COMPILER^FN^^ (9 samples, 0.06%)</title><rect x="997.6" y="3685" width="0.6" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="1000.58" y="3695.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (65 samples, 0.41%)</title><rect x="10.0" y="821" width="4.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="141.9" y="229" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="144.89" y="239.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (20 samples, 0.13%)</title><rect x="625.6" y="2197" width="1.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="628.64" y="2207.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="2325" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="622.15" y="2335.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="437" width="109.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="24.20" y="447.5" >`CONVERT-SPEC..</text>
</g>
<g >
<title>0x1291412e0 (40 samples, 0.25%)</title><rect x="769.2" y="3653" width="3.0" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="772.17" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (5 samples, 0.03%)</title><rect x="619.4" y="1189" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="622.44" y="1199.5" ></text>
</g>
<g >
<title>`cc_invoke_byte_code_interpreter (3,806 samples, 24.07%)</title><rect x="10.0" y="4677" width="284.1" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="13.00" y="4687.5" >`cc_invoke_byte_code_interpreter</text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (5 samples, 0.03%)</title><rect x="640.2" y="3413" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="643.19" y="3423.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (16 samples, 0.10%)</title><rect x="867.8" y="3653" width="1.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="870.85" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="628.0" y="869" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="630.95" y="879.5" ></text>
</g>
<g >
<title>`computeKnownBitsAddSub(bool, llvm::Value const*, llvm::Value const*, bool, llvm::KnownBits&amp;, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="591.5" y="4357" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="594.53" y="4367.5" ></text>
</g>
<g >
<title>0x123ae11b3 (3 samples, 0.02%)</title><rect x="638.2" y="3477" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="641.18" y="3487.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (10 samples, 0.06%)</title><rect x="622.4" y="1173" width="0.7" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="625.35" y="1183.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="1021.3" y="3125" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="1024.31" y="3135.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="1178.7" y="3749" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="1181.65" y="3759.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="627.7" y="805" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="630.73" y="815.5" ></text>
</g>
<g >
<title>0x1110a5606 (20 samples, 0.13%)</title><rect x="622.1" y="1877" width="1.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="625.13" y="1887.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="740.2" y="3621" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="743.21" y="3631.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (23 samples, 0.15%)</title><rect x="287.4" y="69" width="1.7" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="290.37" y="79.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (10 samples, 0.06%)</title><rect x="12.8" y="165" width="0.7" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="15.76" y="175.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.84 (79 samples, 0.50%)</title><rect x="1183.7" y="2773" width="5.9" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="1186.66" y="2783.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="622.1" y="373" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="625.13" y="383.5" ></text>
</g>
<g >
<title>`llvm::orc::IRTransformLayer&lt;llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;, std::__1::function&lt;std::__1::shared_ptr&lt;llvm::Module&gt; (std::__1::shared_ptr&lt;llvm::Module&gt;)&gt; &gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (2 samples, 0.01%)</title><rect x="1156.6" y="3061" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1159.64" y="3071.5" ></text>
</g>
<g >
<title>`GC_mark_from (3,417 samples, 21.61%)</title><rect x="309.5" y="4709" width="255.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="312.53" y="4719.5" >`GC_mark_from</text>
</g>
<g >
<title>0x1290a8598 (12 samples, 0.08%)</title><rect x="243.4" y="261" width="0.9" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="246.40" y="271.5" ></text>
</g>
<g >
<title>0x111337578 (28 samples, 0.18%)</title><rect x="1186.9" y="1989" width="2.1" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1189.87" y="1999.5" ></text>
</g>
<g >
<title>0x123ae11b3 (3 samples, 0.02%)</title><rect x="649.5" y="3413" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="652.52" y="3423.5" ></text>
</g>
<g >
<title>0x1110a4be6 (21 samples, 0.13%)</title><rect x="630.8" y="821" width="1.6" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="633.79" y="831.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.86 (2 samples, 0.01%)</title><rect x="876.3" y="2821" width="0.1" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="879.28" y="2831.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (24 samples, 0.15%)</title><rect x="619.1" y="3285" width="1.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="622.07" y="3295.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (27 samples, 0.17%)</title><rect x="630.3" y="2149" width="2.1" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="633.34" y="2159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="627.2" y="1029" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="630.21" y="1039.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="638.0" y="3589" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="641.03" y="3599.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (6 samples, 0.04%)</title><rect x="951.3" y="3557" width="0.4" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="954.30" y="3567.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (426 samples, 2.69%)</title><rect x="240.9" y="325" width="31.8" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="243.86" y="335.5" >`c..</text>
</g>
<g >
<title>`llvm::SROA::runOnAlloca(llvm::AllocaInst&amp;) (2 samples, 0.01%)</title><rect x="607.9" y="4373" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="610.87" y="4383.5" ></text>
</g>
<g >
<title>0x1110a5606 (20 samples, 0.13%)</title><rect x="630.8" y="341" width="1.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="633.79" y="351.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (14 samples, 0.09%)</title><rect x="663.4" y="3461" width="1.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="666.41" y="3471.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="622.1" y="661" width="0.2" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="625.13" y="671.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (7 samples, 0.04%)</title><rect x="629.4" y="2693" width="0.6" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="632.45" y="2703.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METHOD^^.74 (19 samples, 0.12%)</title><rect x="271.2" y="277" width="1.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="274.24" y="287.5" ></text>
</g>
<g >
<title>0x1140074e7 (2 samples, 0.01%)</title><rect x="14.9" y="165" width="0.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="17.85" y="175.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="646.5" y="3189" width="0.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="649.46" y="3199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="2069" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="630.65" y="2079.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (111 samples, 0.70%)</title><rect x="278.5" y="741" width="8.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="281.48" y="751.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (89 samples, 0.56%)</title><rect x="1182.9" y="3397" width="6.7" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="1185.91" y="3407.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="632.4" y="309" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="635.43" y="319.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.10 (17 samples, 0.11%)</title><rect x="620.9" y="933" width="1.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="623.86" y="943.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="740.2" y="3605" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="743.21" y="3615.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (21 samples, 0.13%)</title><rect x="630.8" y="1189" width="1.6" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="633.79" y="1199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1381" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="635.43" y="1391.5" ></text>
</g>
<g >
<title>`LINK-INLINE-REMOVE-BUILTINS^COMPILER^FN^^ (8 samples, 0.05%)</title><rect x="636.2" y="3189" width="0.6" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="639.16" y="3199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.4" y="1285" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="633.42" y="1295.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="873.5" y="3509" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="876.52" y="3519.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (4 samples, 0.03%)</title><rect x="652.0" y="3557" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="654.99" y="3567.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (22 samples, 0.14%)</title><rect x="1187.1" y="1477" width="1.6" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="1190.09" y="1487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="1093" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="628.94" y="1103.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="875.0" y="2549" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="878.01" y="2559.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (99 samples, 0.63%)</title><rect x="717.6" y="3605" width="7.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="720.60" y="3615.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (61 samples, 0.39%)</title><rect x="273.9" y="133" width="4.6" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="276.93" y="143.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef&lt;llvm::Constant*&gt;, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (5 samples, 0.03%)</title><rect x="600.3" y="4341" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="603.26" y="4351.5" ></text>
</g>
<g >
<title>`llvm::GVN::iterateOnFunction(llvm::Function&amp;) (18 samples, 0.11%)</title><rect x="606.4" y="4373" width="1.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="609.38" y="4383.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="638.0" y="3605" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="641.03" y="3615.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.02%)</title><rect x="894.6" y="3685" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="897.65" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="661" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="626.33" y="671.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="240.7" y="453" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="243.72" y="463.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (5 samples, 0.03%)</title><rect x="1177.1" y="3157" width="0.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="1180.09" y="3167.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="619.4" y="1013" width="0.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="622.44" y="1023.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (9 samples, 0.06%)</title><rect x="620.9" y="581" width="0.6" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="623.86" y="591.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="1021.5" y="3077" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1024.46" y="3087.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^714^TOP-COMPILE-FILE.492 (192 samples, 1.21%)</title><rect x="619.1" y="3749" width="14.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="622.07" y="3759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="622.1" y="1893" width="1.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="625.13" y="1903.5" ></text>
</g>
<g >
<title>0x110d5dedb (16 samples, 0.10%)</title><rect x="1075.5" y="3733" width="1.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1078.50" y="3743.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.30 (16 samples, 0.10%)</title><rect x="635.6" y="3653" width="1.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="638.57" y="3663.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (2 samples, 0.01%)</title><rect x="287.2" y="101" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="290.22" y="111.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJECT STANDARD-OBJECT))^METHOD^^ (2 samples, 0.01%)</title><rect x="1181.9" y="3685" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="1184.94" y="3695.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (21 samples, 0.13%)</title><rect x="656.7" y="3221" width="1.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="659.69" y="3231.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (2 samples, 0.01%)</title><rect x="14.9" y="213" width="0.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="17.85" y="223.5" ></text>
</g>
<g >
<title>`llvm::LiveVariables::HandlePhysRegKill(unsigned int, llvm::MachineInstr*) (3 samples, 0.02%)</title><rect x="584.1" y="4357" width="0.3" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="587.14" y="4367.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (2 samples, 0.01%)</title><rect x="728.7" y="3621" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="731.72" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="624.3" y="1621" width="1.0" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="627.30" y="1631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.8" y="37" width="0.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="626.77" y="47.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'EVAL-WHEN) T T T))^METHOD^^ (65 samples, 0.41%)</title><rect x="10.0" y="853" width="4.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="13.00" y="863.5" ></text>
</g>
<g >
<title>0x12353d2d2 (96 samples, 0.61%)</title><rect x="286.9" y="357" width="7.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="289.92" y="367.5" ></text>
</g>
<g >
<title>`GC_mark_local (3,657 samples, 23.13%)</title><rect x="294.2" y="4741" width="272.9" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="297.16" y="4751.5" >`GC_mark_local</text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.01%)</title><rect x="751.2" y="3605" width="0.1" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="754.19" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (22 samples, 0.14%)</title><rect x="624.0" y="2197" width="1.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="627.00" y="2207.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (78 samples, 0.49%)</title><rect x="852.0" y="3509" width="5.8" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="854.95" y="3519.5" ></text>
</g>
<g >
<title>0x1111fb166 (3 samples, 0.02%)</title><rect x="743.3" y="3653" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="746.35" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (10 samples, 0.06%)</title><rect x="628.6" y="2581" width="0.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="631.55" y="2591.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="922.9" y="3701" width="0.1" height="15.0" fill="rgb(237,105,105)" rx="2" ry="2" />
<text  x="925.86" y="3711.5" ></text>
</g>
<g >
<title>`full-inlining-pass.lisp-full-inlining-pass397^58^TOP-COMPILE-FILE.11 (7,214 samples, 45.63%)</title><rect x="637.5" y="3781" width="538.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="640.51" y="3791.5" >`full-inlining-pass.lisp-full-inlining-pass397^58^TOP-COMPILE-FILE.11</text>
</g>
<g >
<title>`MAKE-ENTER-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="644.4" y="3589" width="0.1" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="647.37" y="3599.5" ></text>
</g>
<g >
<title>`tlv_get_addr (7 samples, 0.04%)</title><rect x="772.5" y="3605" width="0.6" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="775.53" y="3615.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="613.4" y="4261" width="0.1" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="616.40" y="4271.5" ></text>
</g>
<g >
<title>`epilogue-cclasp.lisp-epilogue-cclasp443^1^TOP-COMPILE-FILE.1 (3,806 samples, 24.07%)</title><rect x="10.0" y="4597" width="284.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="13.00" y="4607.5" >`epilogue-cclasp.lisp-epilogue-cclasp4..</text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^COMPILER^FN^^ (21 samples, 0.13%)</title><rect x="656.7" y="3157" width="1.6" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="659.69" y="3167.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="1445" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="622.15" y="1455.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (17 samples, 0.11%)</title><rect x="140.3" y="53" width="1.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="143.32" y="63.5" ></text>
</g>
<g >
<title>`llvm::PointerMayBeCaptured(llvm::Value const*, llvm::CaptureTracker*) (2 samples, 0.01%)</title><rect x="599.1" y="4293" width="0.1" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="602.07" y="4303.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunction&amp;) (2 samples, 0.01%)</title><rect x="635.9" y="2933" width="0.1" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="638.87" y="2943.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.293 (9 samples, 0.06%)</title><rect x="997.6" y="3669" width="0.6" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="1000.58" y="3679.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (5 samples, 0.03%)</title><rect x="648.2" y="3429" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="651.18" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="629.4" y="2453" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="632.45" y="2463.5" ></text>
</g>
<g >
<title>0x1110a4be6 (20 samples, 0.13%)</title><rect x="630.8" y="245" width="1.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="633.79" y="255.5" ></text>
</g>
<g >
<title>0x123ae4323 (64 samples, 0.40%)</title><rect x="899.7" y="3685" width="4.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="902.72" y="3695.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (63 samples, 0.40%)</title><rect x="273.8" y="741" width="4.7" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="276.78" y="751.5" ></text>
</g>
<g >
<title>`llvm::LiveRangeCalc::createDeadDefs(llvm::LiveRange&amp;, unsigned int) (2 samples, 0.01%)</title><rect x="583.6" y="4357" width="0.2" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="586.62" y="4367.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="624.0" y="1733" width="0.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="627.00" y="1743.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (82 samples, 0.52%)</title><rect x="15.0" y="149" width="6.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="18.00" y="159.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.03%)</title><rect x="1157.5" y="3429" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="1160.53" y="3439.5" ></text>
</g>
<g >
<title>0x1110a4be6 (5 samples, 0.03%)</title><rect x="619.4" y="197" width="0.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="622.44" y="207.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.7 (20 samples, 0.13%)</title><rect x="876.3" y="3189" width="1.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="879.28" y="3199.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.42 (7,680 samples, 48.58%)</title><rect x="616.3" y="4453" width="573.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="619.31" y="4463.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.42</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="917" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="628.94" y="927.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::RAGreedy::runOnMachineFunction(llvm::MachineFunction&amp;) (7 samples, 0.04%)</title><rect x="576.9" y="4405" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="579.90" y="4415.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="14.9" y="549" width="0.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="17.85" y="559.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (830 samples, 5.25%)</title><rect x="174.3" y="661" width="61.9" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="177.28" y="671.5" >`CONVE..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="1909" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="622.37" y="1919.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^264^TOP-COMPILE-FILE.152 (3,806 samples, 24.07%)</title><rect x="10.0" y="1669" width="284.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="13.00" y="1679.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (8 samples, 0.05%)</title><rect x="874.3" y="3349" width="0.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="877.34" y="3359.5" ></text>
</g>
<g >
<title>`llvm::FindAvailableLoadedValue(llvm::LoadInst*, llvm::BasicBlock*, llvm::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::Instruction, false, false, void&gt;, false, false&gt;&amp;, unsigned int, llvm::AAResults*, bool*, unsigned int*) (3 samples, 0.02%)</title><rect x="591.2" y="4405" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="594.23" y="4415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="623.7" y="1653" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="626.70" y="1663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (21 samples, 0.13%)</title><rect x="630.8" y="1237" width="1.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="633.79" y="1247.5" ></text>
</g>
<g >
<title>`inline-function.lisp-inline-function396^44^TOP-COMPILE-FILE.131 (3,246 samples, 20.53%)</title><rect x="637.5" y="3717" width="242.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="640.51" y="3727.5" >`inline-function.lisp-inline-fun..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="629.4" y="1429" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="632.45" y="1439.5" ></text>
</g>
<g >
<title>`LINK-INLINE-REMOVE-BUILTINS^COMPILER^FN^^ (19 samples, 0.12%)</title><rect x="825.1" y="3077" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="828.08" y="3087.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.9" y="261" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="628.94" y="271.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (12 samples, 0.08%)</title><rect x="628.5" y="2773" width="0.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="631.48" y="2783.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="373" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="626.10" y="383.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="517" width="109.6" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="24.20" y="527.5" >`CONVERT^CLEA..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (34 samples, 0.22%)</title><rect x="240.9" y="37" width="2.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="243.86" y="47.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.2 (6 samples, 0.04%)</title><rect x="823.3" y="2709" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="826.29" y="2719.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="1829" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="622.15" y="1839.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock, false&gt; &gt;::runSemiNCA(llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock, false&gt;&amp;, unsigned int) (2 samples, 0.01%)</title><rect x="585.3" y="4373" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="588.33" y="4383.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (36 samples, 0.23%)</title><rect x="10.0" y="357" width="2.7" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>0x1110a5606 (10 samples, 0.06%)</title><rect x="622.4" y="85" width="0.7" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="625.35" y="95.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap&lt;llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo&lt;llvm::Constant*&gt;, llvm::detail::DenseMapPair&lt;llvm::Constant*, llvm::Constant*&gt; &gt;&amp;) (4 samples, 0.03%)</title><rect x="589.7" y="4421" width="0.3" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="592.74" y="4431.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (17 samples, 0.11%)</title><rect x="143.5" y="165" width="1.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="146.46" y="175.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (115 samples, 0.73%)</title><rect x="1005.4" y="3637" width="8.6" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="1008.41" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (6 samples, 0.04%)</title><rect x="619.4" y="2213" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="622.37" y="2223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="1845" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="622.37" y="1855.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::DAGCombiner::visitAND(llvm::SDNode*) (2 samples, 0.01%)</title><rect x="579.4" y="4293" width="0.2" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="582.44" y="4303.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitCallSite(llvm::CallSite) (2 samples, 0.01%)</title><rect x="602.4" y="4341" width="0.1" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="605.35" y="4351.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^.154 (5 samples, 0.03%)</title><rect x="173.9" y="133" width="0.4" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="176.91" y="143.5" ></text>
</g>
<g >
<title>0x110e0015d (4 samples, 0.03%)</title><rect x="735.4" y="3653" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="738.36" y="3663.5" ></text>
</g>
<g >
<title>0x123ae11b3 (8 samples, 0.05%)</title><rect x="653.6" y="3477" width="0.6" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="656.55" y="3487.5" ></text>
</g>
<g >
<title>`cst-to-ast.lisp-cst-to-ast301^3^TOP-COMPILE-FILE.4 (3,708 samples, 23.45%)</title><rect x="10.0" y="1109" width="276.8" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="13.00" y="1119.5" >`cst-to-ast.lisp-cst-to-ast301^3^TOP-..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="622.4" y="245" width="0.7" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="625.35" y="255.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^351^TOP-COMPILE-FILE.28 (4 samples, 0.03%)</title><rect x="823.4" y="1813" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="826.44" y="1823.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (64 samples, 0.40%)</title><rect x="852.2" y="3365" width="4.8" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="855.17" y="3375.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (20 samples, 0.13%)</title><rect x="625.6" y="2341" width="1.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="628.64" y="2351.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (7 samples, 0.04%)</title><rect x="1157.5" y="3477" width="0.6" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="1160.53" y="3487.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="874.0" y="3301" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="876.97" y="3311.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="623.7" y="837" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="626.70" y="847.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="627.5" y="1973" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="630.51" y="1983.5" ></text>
</g>
<g >
<title>`LOAD-SOURCE^CORE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="4485" width="284.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="13.00" y="4495.5" >`LOAD-SOURCE^CORE^FN^^</text>
</g>
<g >
<title>`core::core__instance_ref(gctools::smart_ptr&lt;core::T_O&gt;, int) (4 samples, 0.03%)</title><rect x="1070.1" y="3701" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1073.05" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="623.1" y="1109" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="626.10" y="1119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="1973" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="632.74" y="1983.5" ></text>
</g>
<g >
<title>`llvm::MemorySSA::buildMemorySSA() (4 samples, 0.03%)</title><rect x="605.3" y="4373" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="608.34" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="1573" width="0.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="622.44" y="1583.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="619.1" y="2069" width="0.3" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="622.15" y="2079.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (4 samples, 0.03%)</title><rect x="632.4" y="2773" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="635.43" y="2783.5" ></text>
</g>
<g >
<title>`GC_alloc_large (35 samples, 0.22%)</title><rect x="948.6" y="3557" width="2.6" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="951.61" y="3567.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (2 samples, 0.01%)</title><rect x="975.9" y="3685" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="978.93" y="3695.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="623.8" y="533" width="0.1" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="626.77" y="543.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="625.9" y="693" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="628.94" y="703.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3 samples, 0.02%)</title><rect x="997.7" y="3125" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="1000.65" y="3135.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (6 samples, 0.04%)</title><rect x="653.7" y="3445" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="656.70" y="3455.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (5 samples, 0.03%)</title><rect x="635.7" y="3013" width="0.4" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="638.72" y="3023.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.9" y="853" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="628.94" y="863.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (6 samples, 0.04%)</title><rect x="1170.3" y="3397" width="0.4" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="1173.29" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="622.1" y="2053" width="1.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="625.13" y="2063.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (10 samples, 0.06%)</title><rect x="622.4" y="133" width="0.7" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="625.35" y="143.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="622.1" y="357" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="625.13" y="367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (27 samples, 0.17%)</title><rect x="630.3" y="2501" width="2.1" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="633.34" y="2511.5" ></text>
</g>
<g >
<title>`__dynamic_cast (5 samples, 0.03%)</title><rect x="810.9" y="3621" width="0.4" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="813.90" y="3631.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="655.5" y="3493" width="0.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="658.50" y="3503.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (27 samples, 0.17%)</title><rect x="630.3" y="3189" width="2.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="633.34" y="3199.5" ></text>
</g>
<g >
<title>0x1110a5456 (3 samples, 0.02%)</title><rect x="619.1" y="917" width="0.3" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="622.15" y="927.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="627.7" y="1909" width="0.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="630.65" y="1919.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="618.6" y="3733" width="0.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="621.62" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="837" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="632.45" y="847.5" ></text>
</g>
<g >
<title>0x111336bd8 (2 samples, 0.01%)</title><rect x="1187.3" y="1061" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="1190.31" y="1071.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (14 samples, 0.09%)</title><rect x="1187.5" y="693" width="1.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="1190.54" y="703.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (20 samples, 0.13%)</title><rect x="622.1" y="2149" width="1.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="625.13" y="2159.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (361 samples, 2.28%)</title><rect x="244.3" y="133" width="26.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="247.30" y="143.5" >`..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (18 samples, 0.11%)</title><rect x="13.5" y="309" width="1.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="16.51" y="319.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (10 samples, 0.06%)</title><rect x="877.0" y="2725" width="0.8" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="880.03" y="2735.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (15 samples, 0.09%)</title><rect x="1187.5" y="997" width="1.1" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="1190.46" y="1007.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (60 samples, 0.38%)</title><rect x="236.2" y="197" width="4.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="239.24" y="207.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^METHOD^^.35 (60 samples, 0.38%)</title><rect x="236.2" y="293" width="4.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="239.24" y="303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.1" y="1221" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="630.13" y="1231.5" ></text>
</g>
<g >
<title>`llvm::FindAvailablePtrLoadStore(llvm::Value*, llvm::Type*, bool, llvm::BasicBlock*, llvm::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::Instruction, false, false, void&gt;, false, false&gt;&amp;, unsigned int, llvm::AAResults*, bool*, unsigned int*) (3 samples, 0.02%)</title><rect x="595.7" y="4389" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="598.71" y="4399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.8" y="917" width="0.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="628.79" y="927.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="623.7" y="1221" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="626.70" y="1231.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^METHOD^^.35 (67 samples, 0.42%)</title><rect x="10.0" y="933" width="5.0" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="13.00" y="943.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (4 samples, 0.03%)</title><rect x="628.2" y="245" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="631.18" y="255.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="628.2" y="229" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="631.18" y="239.5" ></text>
</g>
<g >
<title>0x110c63ee7 (2 samples, 0.01%)</title><rect x="1065.6" y="3733" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1068.65" y="3743.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (76 samples, 0.48%)</title><rect x="990.8" y="3685" width="5.7" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="993.78" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="2117" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="622.15" y="2127.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (8 samples, 0.05%)</title><rect x="648.7" y="3477" width="0.6" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="651.70" y="3487.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="622.1" y="869" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="625.13" y="879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.1" y="1285" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="630.13" y="1295.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (13 samples, 0.08%)</title><rect x="626.2" y="1973" width="0.9" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="629.16" y="1983.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Instance_O&gt;, unsigned long) (2 samples, 0.01%)</title><rect x="646.8" y="3221" width="0.1" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="649.76" y="3231.5" ></text>
</g>
<g >
<title>`COMPILE^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="874.0" y="3413" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="876.97" y="3423.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (38 samples, 0.24%)</title><rect x="625.6" y="2405" width="2.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="628.64" y="2415.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.4 (2 samples, 0.01%)</title><rect x="656.7" y="2229" width="0.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="659.69" y="2239.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^351^TOP-COMPILE-FILE.30 (4 samples, 0.03%)</title><rect x="823.4" y="1797" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="826.44" y="1807.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (125 samples, 0.79%)</title><rect x="620.9" y="3013" width="9.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="623.86" y="3023.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.01%)</title><rect x="902.7" y="3557" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="905.71" y="3567.5" ></text>
</g>
<g >
<title>0x1291410b9 (3 samples, 0.02%)</title><rect x="768.1" y="3653" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="771.13" y="3663.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.84 (15 samples, 0.09%)</title><rect x="1187.5" y="917" width="1.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="1190.46" y="927.5" ></text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^COMPILER^FN^^ (43 samples, 0.27%)</title><rect x="823.3" y="3621" width="3.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="826.29" y="3631.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (9 samples, 0.06%)</title><rect x="725.7" y="3637" width="0.6" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="728.66" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.9" y="1253" width="0.2" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="628.94" y="1263.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1205" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="635.43" y="1215.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (18 samples, 0.11%)</title><rect x="13.5" y="517" width="1.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="16.51" y="527.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (23 samples, 0.15%)</title><rect x="630.6" y="1525" width="1.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="633.64" y="1535.5" ></text>
</g>
<g >
<title>`GC_allocobj (23 samples, 0.15%)</title><rect x="1184.9" y="2165" width="1.7" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="1187.92" y="2175.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_set_T_spintT_sp (7 samples, 0.04%)</title><rect x="903.1" y="3557" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="906.08" y="3567.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.03%)</title><rect x="650.4" y="3525" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="653.42" y="3535.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolutionWrapperPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="615.3" y="4405" width="0.1" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="618.26" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.3" y="1685" width="0.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="623.27" y="1695.5" ></text>
</g>
<g >
<title>0x1110a5456 (2 samples, 0.01%)</title><rect x="620.5" y="1413" width="0.1" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="623.49" y="1423.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.03%)</title><rect x="877.9" y="3413" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="880.85" y="3423.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="622.1" y="1621" width="1.0" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="625.13" y="1631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2981" width="2.1" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="633.34" y="2991.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="658.3" y="3285" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="661.33" y="3295.5" ></text>
</g>
<g >
<title>0x1257602e2 (4 samples, 0.03%)</title><rect x="625.3" y="949" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="628.27" y="959.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="627.7" y="1269" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="630.65" y="1279.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="632.4" y="3205" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="635.43" y="3215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (21 samples, 0.13%)</title><rect x="624.0" y="2149" width="1.6" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="627.00" y="2159.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3,708 samples, 23.45%)</title><rect x="10.0" y="1077" width="276.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" >`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="619.4" y="1045" width="0.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="622.44" y="1055.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (62 samples, 0.39%)</title><rect x="236.2" y="597" width="4.7" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="239.24" y="607.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.3" y="2245" width="0.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="623.27" y="2255.5" ></text>
</g>
<g >
<title>`inline-one-instruction.lisp-inline-one-instruction395^185^TOP-COMPILE-FILE.89 (3 samples, 0.02%)</title><rect x="873.5" y="3589" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="876.52" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="619.4" y="1141" width="0.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="622.44" y="1151.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_lock_slow (3 samples, 0.02%)</title><rect x="568.9" y="4421" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="571.91" y="4431.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&amp;, llvm::OptimizationRemarkEmitter*) (3 samples, 0.02%)</title><rect x="592.9" y="4389" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="595.95" y="4399.5" ></text>
</g>
<g >
<title>`llvm::hash_value(llvm::MachineOperand const&amp;) (2 samples, 0.01%)</title><rect x="574.8" y="4357" width="0.2" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="577.81" y="4367.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="632.4" y="1461" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="635.43" y="1471.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="624.3" y="837" width="1.0" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="627.30" y="847.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (25 samples, 0.16%)</title><rect x="653.2" y="3605" width="1.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="656.18" y="3615.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (6 samples, 0.04%)</title><rect x="1021.2" y="3717" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="1024.24" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="625.8" y="1541" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="628.79" y="1551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1701" width="0.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="623.49" y="1711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="625.3" y="629" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="628.27" y="639.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.28 (7 samples, 0.04%)</title><rect x="1176.9" y="3365" width="0.6" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="1179.94" y="3375.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm::SimplifyQuery const&amp;, unsigned int) (2 samples, 0.01%)</title><rect x="602.9" y="4341" width="0.1" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="605.87" y="4351.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getConstant(llvm::Value*, llvm::BasicBlock*, llvm::Instruction*) (3 samples, 0.02%)</title><rect x="588.1" y="4437" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="591.09" y="4447.5" ></text>
</g>
<g >
<title>`SETUP-CALLING-CONVENTION^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="1183.8" y="2565" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="1186.80" y="2575.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="627.5" y="1909" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="630.51" y="1919.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="641.1" y="3333" width="0.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="644.09" y="3343.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.66 (2 samples, 0.01%)</title><rect x="656.7" y="2373" width="0.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="659.69" y="2383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (2 samples, 0.01%)</title><rect x="632.4" y="1573" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="635.43" y="1583.5" ></text>
</g>
<g >
<title>`__cxa_throw (3 samples, 0.02%)</title><rect x="1189.8" y="4613" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1192.78" y="4623.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.90 (90 samples, 0.57%)</title><rect x="1182.8" y="3653" width="6.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="1185.83" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="965" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="635.43" y="975.5" ></text>
</g>
<g >
<title>0x111981229 (3,806 samples, 24.07%)</title><rect x="10.0" y="4037" width="284.1" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="13.00" y="4047.5" >0x111981229</text>
</g>
<g >
<title>`llvm::PMDataManager::removeDeadPasses(llvm::Pass*, llvm::StringRef, llvm::PassDebuggingString) (2 samples, 0.01%)</title><rect x="605.9" y="4405" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="608.93" y="4415.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (6 samples, 0.04%)</title><rect x="1074.2" y="3685" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1077.23" y="3695.5" ></text>
</g>
<g >
<title>`core::CxxObject_O::~CxxObject_O() (3 samples, 0.02%)</title><rect x="938.7" y="3701" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="941.68" y="3711.5" ></text>
</g>
<g >
<title>`llvm::ScheduleDAGMILive::buildDAGWithRegPressure() (3 samples, 0.02%)</title><rect x="575.6" y="4357" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="578.63" y="4367.5" ></text>
</g>
<g >
<title>0x114007367 (517 samples, 3.27%)</title><rect x="130.8" y="309" width="38.6" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="133.84" y="319.5" >0x1..</text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (20 samples, 0.13%)</title><rect x="630.8" y="581" width="1.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="633.79" y="591.5" ></text>
</g>
<g >
<title>0x110c56eea (2 samples, 0.01%)</title><rect x="699.2" y="3653" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="702.24" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="625.3" y="1429" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="628.27" y="1439.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.96 (90 samples, 0.57%)</title><rect x="1182.8" y="3605" width="6.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="1185.83" y="3615.5" ></text>
</g>
<g >
<title>0x110cd62a2 (426 samples, 2.69%)</title><rect x="240.9" y="437" width="31.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="243.86" y="447.5" >0x..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="627.5" y="1829" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="630.51" y="1839.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="613.4" y="4245" width="0.1" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="616.40" y="4255.5" ></text>
</g>
<g >
<title>`AST-INTERPRETED-CLOSURE^INTERPRET-AST^FN^^.117 (176 samples, 1.11%)</title><rect x="273.6" y="901" width="13.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="276.63" y="911.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="69" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="622.15" y="79.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'EVAL-WHEN) T T T))^METHOD^^ (18 samples, 0.11%)</title><rect x="13.5" y="389" width="1.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="16.51" y="399.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'EVAL-WHEN) T T T))^METHOD^^ (582 samples, 3.68%)</title><rect x="130.8" y="677" width="43.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="133.84" y="687.5" >`CON..</text>
</g>
<g >
<title>0x1110a62f6 (13 samples, 0.08%)</title><rect x="626.2" y="821" width="0.9" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="629.16" y="831.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="1156.6" y="3173" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="1159.64" y="3183.5" ></text>
</g>
<g >
<title>0x1501b4d6b (71 samples, 0.45%)</title><rect x="281.5" y="405" width="5.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="284.47" y="415.5" ></text>
</g>
<g >
<title>0x123ae3cf3 (2 samples, 0.01%)</title><rect x="646.5" y="3221" width="0.1" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="649.46" y="3231.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.8" y="1029" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="628.79" y="1039.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^124^TOP-COMPILE-FILE.325 (16 samples, 0.10%)</title><rect x="142.3" y="197" width="1.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="145.26" y="207.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="628.2" y="1157" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="631.18" y="1167.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (6 samples, 0.04%)</title><rect x="629.4" y="2165" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="632.45" y="2175.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.92 (86 samples, 0.54%)</title><rect x="1183.1" y="3173" width="6.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="1186.13" y="3183.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (65 samples, 0.41%)</title><rect x="10.0" y="869" width="4.9" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="625.8" y="1813" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="628.79" y="1823.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (8 samples, 0.05%)</title><rect x="629.4" y="2821" width="0.6" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="632.45" y="2831.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (30 samples, 0.19%)</title><rect x="1011.2" y="3461" width="2.2" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="1014.16" y="3471.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (17 samples, 0.11%)</title><rect x="620.9" y="1109" width="1.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="623.86" y="1119.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (122 samples, 0.77%)</title><rect x="587.9" y="4581" width="9.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="590.95" y="4591.5" ></text>
</g>
<g >
<title>`cc_enclose (2 samples, 0.01%)</title><rect x="872.3" y="3685" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="875.33" y="3695.5" ></text>
</g>
<g >
<title>0x110cd62a2 (435 samples, 2.75%)</title><rect x="240.9" y="613" width="32.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="243.86" y="623.5" >0x..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="624.0" y="1317" width="0.1" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="627.00" y="1327.5" ></text>
</g>
<g >
<title>`ast-interpreter.lisp-ast-interpreter424^491^TOP-COMPILE-FILE.659 (10 samples, 0.06%)</title><rect x="12.8" y="453" width="0.7" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="15.76" y="463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="229" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="626.10" y="239.5" ></text>
</g>
<g >
<title>`SPECIALIZE^CLEAVIR-HIR-TO-MIR^((:AROUND) (T T T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="1181.9" y="3781" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="1184.94" y="3791.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (83 samples, 0.53%)</title><rect x="15.0" y="517" width="6.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="18.00" y="527.5" ></text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (200 samples, 1.27%)</title><rect x="786.5" y="3653" width="14.9" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="789.49" y="3663.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (18 samples, 0.11%)</title><rect x="664.9" y="3493" width="1.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="667.90" y="3503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="277" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="625.13" y="287.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (6 samples, 0.04%)</title><rect x="619.4" y="2005" width="0.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="622.37" y="2015.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1941" width="1.0" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="627.30" y="1951.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (20 samples, 0.13%)</title><rect x="876.3" y="3317" width="1.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="879.28" y="3327.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="627.5" y="2069" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="630.51" y="2079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (115 samples, 0.73%)</title><rect x="620.9" y="2869" width="8.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="623.86" y="2879.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.22 (9 samples, 0.06%)</title><rect x="997.6" y="3365" width="0.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="1000.58" y="3375.5" ></text>
</g>
<g >
<title>0x110cd62a2 (36 samples, 0.23%)</title><rect x="10.0" y="277" width="2.7" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="622.1" y="1861" width="1.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="625.13" y="1871.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE*^COMPILER^FN^^ (9 samples, 0.06%)</title><rect x="997.6" y="3173" width="0.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="1000.58" y="3183.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="837" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="635.43" y="847.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (21 samples, 0.13%)</title><rect x="630.8" y="725" width="1.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="633.79" y="735.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (3,461 samples, 21.89%)</title><rect x="15.0" y="869" width="258.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="18.00" y="879.5" >`inline-prep.lisp-inline-prep437^2..</text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="645.3" y="3477" width="0.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="648.27" y="3487.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (60 samples, 0.38%)</title><rect x="236.2" y="165" width="4.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="239.24" y="175.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.9" y="1445" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="628.94" y="1455.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.02%)</title><rect x="899.0" y="3637" width="0.3" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="902.05" y="3647.5" ></text>
</g>
<g >
<title>`CODEGEN-PROGN^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="1349" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="826.51" y="1359.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (34 samples, 0.22%)</title><rect x="730.1" y="3621" width="2.6" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="733.14" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.4" y="1157" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="633.42" y="1167.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="628.2" y="949" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="631.18" y="959.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpUsingKnownBits(llvm::ICmpInst&amp;) (2 samples, 0.01%)</title><rect x="603.2" y="4341" width="0.1" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="606.17" y="4351.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="1157.8" y="3413" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="1160.83" y="3423.5" ></text>
</g>
<g >
<title>`cc_protect_alloca (9 samples, 0.06%)</title><rect x="933.2" y="3733" width="0.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="936.16" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="1797" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="632.45" y="1807.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (16 samples, 0.10%)</title><rect x="653.2" y="3557" width="1.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="656.18" y="3567.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (2 samples, 0.01%)</title><rect x="240.7" y="69" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="243.72" y="79.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SelectionDAGLegalize::LegalizeOp(llvm::SDNode*) (3 samples, 0.02%)</title><rect x="580.2" y="4325" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="583.18" y="4335.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.18 (43 samples, 0.27%)</title><rect x="823.3" y="3189" width="3.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="826.29" y="3199.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (17 samples, 0.11%)</title><rect x="620.9" y="1429" width="1.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="623.86" y="1439.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.04%)</title><rect x="1157.1" y="3589" width="0.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="1160.08" y="3599.5" ></text>
</g>
<g >
<title>0x110cd62a2 (4 samples, 0.03%)</title><rect x="141.6" y="69" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="144.59" y="79.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ReassociateLegacyPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="598.8" y="4405" width="0.1" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="601.77" y="4415.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (16 samples, 0.10%)</title><rect x="823.9" y="3013" width="1.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="826.89" y="3023.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (96 samples, 0.61%)</title><rect x="286.9" y="853" width="7.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="289.92" y="863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (24 samples, 0.15%)</title><rect x="619.1" y="3397" width="1.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="622.07" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (24 samples, 0.15%)</title><rect x="619.1" y="2965" width="1.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="622.07" y="2975.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="625.8" y="1205" width="0.1" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="628.79" y="1215.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (38 samples, 0.24%)</title><rect x="625.6" y="2421" width="2.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="628.64" y="2431.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (6 samples, 0.04%)</title><rect x="1177.5" y="3749" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1180.53" y="3759.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (5 samples, 0.03%)</title><rect x="635.7" y="2997" width="0.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="638.72" y="3007.5" ></text>
</g>
<g >
<title>`CODEGEN^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="629" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="826.51" y="639.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (2 samples, 0.01%)</title><rect x="1091.5" y="3669" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1094.55" y="3679.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="1156.6" y="3429" width="0.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="1159.64" y="3439.5" ></text>
</g>
<g >
<title>0x114007367 (829 samples, 5.24%)</title><rect x="174.3" y="501" width="61.9" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="177.28" y="511.5" >0x1140..</text>
</g>
<g >
<title>0x110c590eb (3 samples, 0.02%)</title><rect x="700.1" y="3653" width="0.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="703.13" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.9" y="629" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="628.94" y="639.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (71 samples, 0.45%)</title><rect x="656.2" y="3445" width="5.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="659.17" y="3455.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="975.4" y="3669" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="978.41" y="3679.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (91 samples, 0.58%)</title><rect x="989.7" y="3717" width="6.8" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="992.74" y="3727.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="625.8" y="1253" width="0.1" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="628.79" y="1263.5" ></text>
</g>
<g >
<title>0x1501b4cfb (111 samples, 0.70%)</title><rect x="278.5" y="885" width="8.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="281.48" y="895.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="632.4" y="1557" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="635.43" y="1567.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="630.0" y="2469" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="633.04" y="2479.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core::T_O&gt;) (108 samples, 0.68%)</title><rect x="943.9" y="3637" width="8.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="946.91" y="3647.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.14 (11 samples, 0.07%)</title><rect x="643.5" y="3301" width="0.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="646.48" y="3311.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="603.9" y="4261" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="606.92" y="4271.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (21 samples, 0.13%)</title><rect x="1006.2" y="3621" width="1.6" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="1009.23" y="3631.5" ></text>
</g>
<g >
<title>0x1110a5606 (8 samples, 0.05%)</title><rect x="629.4" y="2853" width="0.6" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="632.45" y="2863.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (96 samples, 0.61%)</title><rect x="286.9" y="661" width="7.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="289.92" y="671.5" ></text>
</g>
<g >
<title>0x1257602e2 (4 samples, 0.03%)</title><rect x="629.4" y="1557" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="632.45" y="1567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.5" y="1717" width="0.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="623.49" y="1727.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3333" width="284.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="13.00" y="3343.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (125 samples, 0.79%)</title><rect x="620.9" y="2981" width="9.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="623.86" y="2991.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (122 samples, 0.77%)</title><rect x="587.9" y="4565" width="9.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="590.95" y="4575.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (57 samples, 0.36%)</title><rect x="1047.7" y="3669" width="4.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="1050.73" y="3679.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (15 samples, 0.09%)</title><rect x="1169.7" y="3493" width="1.1" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="1172.70" y="3503.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="1093" width="0.7" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="625.35" y="1103.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.24 (74 samples, 0.47%)</title><rect x="1184.0" y="2533" width="5.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="1187.03" y="2543.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap&lt;llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo&lt;llvm::Constant*&gt;, llvm::detail::DenseMapPair&lt;llvm::Constant*, llvm::Constant*&gt; &gt;&amp;) (2 samples, 0.01%)</title><rect x="594.4" y="4421" width="0.1" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="597.36" y="4431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.0" y="2789" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="633.04" y="2799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (26 samples, 0.16%)</title><rect x="630.4" y="1797" width="2.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="633.42" y="1807.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (21 samples, 0.13%)</title><rect x="630.8" y="981" width="1.6" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="633.79" y="991.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (184 samples, 1.16%)</title><rect x="619.1" y="3669" width="13.7" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="622.07" y="3679.5" ></text>
</g>
<g >
<title>`tlv_get_addr (4 samples, 0.03%)</title><rect x="859.4" y="3589" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="862.41" y="3599.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="1091.1" y="3653" width="0.1" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1094.10" y="3663.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.30 (20 samples, 0.13%)</title><rect x="876.3" y="3285" width="1.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="879.28" y="3295.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="656.5" y="3333" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="659.54" y="3343.5" ></text>
</g>
<g >
<title>`macro-functions.lisp-macro-functions194^173^TOP-COMPILE-FILE.43 (24 samples, 0.15%)</title><rect x="287.4" y="101" width="1.8" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="290.37" y="111.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T))^METHOD^^ (32 samples, 0.20%)</title><rect x="1186.7" y="2437" width="2.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="1189.72" y="2447.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.31 (12 samples, 0.08%)</title><rect x="872.5" y="3541" width="0.9" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="875.48" y="3551.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (124 samples, 0.78%)</title><rect x="655.4" y="3509" width="9.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="658.42" y="3519.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (6 samples, 0.04%)</title><rect x="1157.5" y="3461" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1160.53" y="3471.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'EVAL-WHEN) T T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="14.9" y="837" width="0.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="17.85" y="847.5" ></text>
</g>
<g >
<title>0x1113362e8 (3 samples, 0.02%)</title><rect x="1184.2" y="2453" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1187.18" y="2463.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (6 samples, 0.04%)</title><rect x="629.4" y="2325" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="632.45" y="2335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="3157" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="635.43" y="3167.5" ></text>
</g>
<g >
<title>0x123ae11b3 (3 samples, 0.02%)</title><rect x="879.3" y="3589" width="0.3" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="882.34" y="3599.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (63 samples, 0.40%)</title><rect x="273.8" y="677" width="4.7" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="276.78" y="687.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="647.9" y="3397" width="0.1" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="650.88" y="3407.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.26 (3 samples, 0.02%)</title><rect x="874.0" y="3205" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="876.97" y="3215.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (21 samples, 0.13%)</title><rect x="1176.5" y="3797" width="1.6" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="1179.49" y="3807.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (3 samples, 0.02%)</title><rect x="916.9" y="3637" width="0.2" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="919.89" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="620.3" y="2341" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="623.27" y="2351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (21 samples, 0.13%)</title><rect x="630.8" y="1429" width="1.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="633.79" y="1439.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.13 (9 samples, 0.06%)</title><rect x="997.6" y="3413" width="0.6" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="1000.58" y="3423.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T))^METHOD^^ (4 samples, 0.03%)</title><rect x="642.6" y="3573" width="0.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="645.58" y="3583.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::doFinalization(llvm::Module&amp;) (3 samples, 0.02%)</title><rect x="572.7" y="4453" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="575.72" y="4463.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (4 samples, 0.03%)</title><rect x="281.6" y="325" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="284.62" y="335.5" ></text>
</g>
<g >
<title>`llvm::MachineFunctionPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="1176.9" y="2965" width="0.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="1179.94" y="2975.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (4 samples, 0.03%)</title><rect x="657.6" y="2453" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="660.59" y="2463.5" ></text>
</g>
<g >
<title>0x110d5dde0 (2 samples, 0.01%)</title><rect x="728.9" y="3653" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="731.94" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="1237" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="631.18" y="1247.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (10 samples, 0.06%)</title><rect x="1179.5" y="3781" width="0.7" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="1182.48" y="3791.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="2181" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="622.15" y="2191.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="667.4" y="3653" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="670.36" y="3663.5" ></text>
</g>
<g >
<title>0x123ae11b3 (6 samples, 0.04%)</title><rect x="647.0" y="3285" width="0.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="649.99" y="3295.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.6" y="1157" width="0.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="633.64" y="1167.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (37 samples, 0.23%)</title><rect x="144.7" y="69" width="2.8" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="147.73" y="79.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (13 samples, 0.08%)</title><rect x="1006.8" y="3605" width="1.0" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1009.83" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (16 samples, 0.10%)</title><rect x="622.1" y="1749" width="1.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="625.13" y="1759.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (3 samples, 0.02%)</title><rect x="658.0" y="2469" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="660.96" y="2479.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="874.0" y="2917" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="876.97" y="2927.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (5 samples, 0.03%)</title><rect x="173.9" y="245" width="0.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="176.91" y="255.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (29 samples, 0.18%)</title><rect x="992.6" y="3669" width="2.1" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="995.57" y="3679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="622.4" y="1397" width="0.7" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="625.35" y="1407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (2 samples, 0.01%)</title><rect x="619.8" y="2373" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="622.82" y="2383.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm::SimplifyQuery const&amp;, unsigned int) (2 samples, 0.01%)</title><rect x="607.0" y="4309" width="0.1" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="609.98" y="4319.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (52 samples, 0.33%)</title><rect x="977.6" y="3701" width="3.9" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="980.65" y="3711.5" ></text>
</g>
<g >
<title>0x1110a5e76 (7 samples, 0.04%)</title><rect x="620.3" y="2853" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="623.27" y="2863.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (6 samples, 0.04%)</title><rect x="619.4" y="1717" width="0.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="622.37" y="1727.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (2 samples, 0.01%)</title><rect x="1178.1" y="3781" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="1181.13" y="3791.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T CLASP-GLOBAL-ENVIRONMENT))^METHOD^^.229 (10 samples, 0.06%)</title><rect x="12.8" y="501" width="0.7" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="15.76" y="511.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.22 (5 samples, 0.03%)</title><rect x="1156.6" y="3413" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="1159.64" y="3423.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.22 (7 samples, 0.04%)</title><rect x="874.9" y="2933" width="0.6" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="877.94" y="2943.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="632.4" y="3173" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="635.43" y="3183.5" ></text>
</g>
<g >
<title>`SHARPSIGN-DOT^ECLECTOR.READER^FN^^ (65 samples, 0.41%)</title><rect x="289.2" y="149" width="4.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="292.16" y="159.5" ></text>
</g>
<g >
<title>0x110c56ee7 (2 samples, 0.01%)</title><rect x="699.1" y="3653" width="0.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="702.09" y="3663.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.14 (5 samples, 0.03%)</title><rect x="1156.6" y="3445" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="1159.64" y="3455.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="627.7" y="2053" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="630.65" y="2063.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (5 samples, 0.03%)</title><rect x="748.2" y="3605" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="751.20" y="3615.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (829 samples, 5.24%)</title><rect x="174.3" y="309" width="61.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="177.28" y="319.5" >`inlin..</text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="629.7" y="1669" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="632.74" y="1679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.0" y="2213" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="633.04" y="2223.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.293 (16 samples, 0.10%)</title><rect x="635.6" y="3717" width="1.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="638.57" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="628.6" y="2437" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="631.62" y="2447.5" ></text>
</g>
<g >
<title>0x123ae25fb (3 samples, 0.02%)</title><rect x="1182.3" y="3749" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1185.31" y="3759.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION^CLEAVIR-PARTIAL-INLINING^FN^^ (50 samples, 0.32%)</title><rect x="638.6" y="3557" width="3.8" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="641.63" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1221" width="1.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="623.86" y="1231.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.213 (7,680 samples, 48.58%)</title><rect x="616.3" y="3989" width="573.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="619.31" y="3999.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.213</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="624.0" y="709" width="0.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="627.00" y="719.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="1429" width="0.7" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="625.35" y="1439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (17 samples, 0.11%)</title><rect x="620.9" y="1205" width="1.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="623.86" y="1215.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (27 samples, 0.17%)</title><rect x="630.3" y="2405" width="2.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="633.34" y="2415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.6" y="1173" width="0.2" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="633.64" y="1183.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (4 samples, 0.03%)</title><rect x="611.4" y="4357" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="614.38" y="4367.5" ></text>
</g>
<g >
<title>`llvm::MachineDominatorTree::runOnMachineFunction(llvm::MachineFunction&amp;) (9 samples, 0.06%)</title><rect x="585.2" y="4405" width="0.7" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="588.18" y="4415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.3" y="1637" width="0.1" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="623.27" y="1647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1589" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="623.64" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="677" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="635.43" y="687.5" ></text>
</g>
<g >
<title>0x1110a5456 (5 samples, 0.03%)</title><rect x="623.6" y="2261" width="0.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="626.62" y="2271.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (115 samples, 0.73%)</title><rect x="620.9" y="2885" width="8.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="623.86" y="2895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1781" width="0.9" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="629.16" y="1791.5" ></text>
</g>
<g >
<title>`CATCH-FUNCTION^CORE^FN^^ (2 samples, 0.01%)</title><rect x="173.6" y="165" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="176.61" y="175.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (6 samples, 0.04%)</title><rect x="1189.6" y="4645" width="0.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="1192.55" y="4655.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="640.2" y="2869" width="0.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="643.19" y="2879.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (28 samples, 0.18%)</title><rect x="1186.9" y="1925" width="2.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="1189.87" y="1935.5" ></text>
</g>
<g >
<title>`LINK-INLINE-REMOVE-BUILTINS^COMPILER^FN^^ (10 samples, 0.06%)</title><rect x="877.0" y="2821" width="0.8" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="880.03" y="2831.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="622.4" y="533" width="0.7" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="625.35" y="543.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (48 samples, 0.30%)</title><rect x="1061.7" y="3701" width="3.6" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1064.69" y="3711.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (6 samples, 0.04%)</title><rect x="782.5" y="3637" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="785.46" y="3647.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.103 (4 samples, 0.03%)</title><rect x="823.4" y="1941" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="826.44" y="1951.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="620.5" y="1509" width="0.1" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="623.49" y="1519.5" ></text>
</g>
<g >
<title>`GC_mark_from (62 samples, 0.39%)</title><rect x="852.3" y="3349" width="4.7" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="855.32" y="3359.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="629.4" y="1749" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="632.45" y="1759.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1176.9" y="3109" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="1179.94" y="3119.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (36 samples, 0.23%)</title><rect x="10.0" y="325" width="2.7" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (6 samples, 0.04%)</title><rect x="1021.2" y="3397" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="1024.24" y="3407.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (2,684 samples, 16.98%)</title><rect x="670.8" y="3669" width="200.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="673.80" y="3679.5" >`MAP-INSTRUCTIONS-ARBITRAR..</text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.03%)</title><rect x="877.9" y="3397" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="880.85" y="3407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (26 samples, 0.16%)</title><rect x="630.4" y="1733" width="2.0" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="633.42" y="1743.5" ></text>
</g>
<g >
<title>0x1110a5456 (8 samples, 0.05%)</title><rect x="627.9" y="1893" width="0.6" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="630.88" y="1903.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.5" y="2053" width="0.1" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="623.49" y="2063.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="622.1" y="165" width="0.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="625.13" y="175.5" ></text>
</g>
<g >
<title>`funlockfile (10 samples, 0.06%)</title><rect x="569.1" y="4437" width="0.8" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="572.14" y="4447.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="625.8" y="1605" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="628.79" y="1615.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::AssemblyWriter::printInstruction(llvm::Instruction const&amp;) (3 samples, 0.02%)</title><rect x="572.1" y="4453" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="575.12" y="4463.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.8" y="341" width="0.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="626.77" y="351.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (15 samples, 0.09%)</title><rect x="1187.5" y="789" width="1.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="1190.46" y="799.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.03%)</title><rect x="629.4" y="1685" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="632.45" y="1695.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.9 (20 samples, 0.13%)</title><rect x="876.3" y="3157" width="1.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="879.28" y="3167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (24 samples, 0.15%)</title><rect x="630.6" y="1669" width="1.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="633.57" y="1679.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (3 samples, 0.02%)</title><rect x="623.1" y="1669" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="626.10" y="1679.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="261" width="0.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="631.18" y="271.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (65 samples, 0.41%)</title><rect x="10.0" y="789" width="4.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (3 samples, 0.02%)</title><rect x="628.0" y="1157" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="630.95" y="1167.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.31 (3 samples, 0.02%)</title><rect x="874.0" y="3461" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="876.97" y="3471.5" ></text>
</g>
<g >
<title>`inline-one-instruction.lisp-inline-one-instruction395^185^TOP-COMPILE-FILE.91 (2 samples, 0.01%)</title><rect x="644.4" y="3605" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="647.37" y="3615.5" ></text>
</g>
<g >
<title>0x1110a4be6 (4 samples, 0.03%)</title><rect x="624.0" y="1957" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="627.00" y="1967.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (10 samples, 0.06%)</title><rect x="640.2" y="3461" width="0.7" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="643.19" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="2229" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="623.64" y="2239.5" ></text>
</g>
<g >
<title>`CLONE-INITARGS^CLEAVIR-IR^((APPEND) (INSTRUCTION))^METHOD^^ (2 samples, 0.01%)</title><rect x="660.1" y="3349" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="663.12" y="3359.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="627.1" y="1157" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="630.13" y="1167.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1957" width="284.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`core::CxxObject_O::~CxxObject_O() (8 samples, 0.05%)</title><rect x="1124.1" y="3701" width="0.6" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1127.09" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="1285" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="630.95" y="1295.5" ></text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="1158.7" y="3653" width="0.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="1161.65" y="3663.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (5 samples, 0.03%)</title><rect x="652.7" y="3589" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="655.66" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="619.5" y="69" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="622.52" y="79.5" ></text>
</g>
<g >
<title>0x110f822a7 (11 samples, 0.07%)</title><rect x="739.3" y="3653" width="0.8" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="742.32" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.1" y="1173" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="626.10" y="1183.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T))^METHOD^^ (4 samples, 0.03%)</title><rect x="1183.3" y="2901" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="1186.28" y="2911.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="619.4" y="245" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="622.44" y="255.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="14.9" y="389" width="0.1" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="17.85" y="399.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (3 samples, 0.02%)</title><rect x="643.6" y="2869" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="646.55" y="2879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1269" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="629.16" y="1279.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.24 (26 samples, 0.16%)</title><rect x="1186.9" y="1605" width="2.0" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="1189.94" y="1615.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (36 samples, 0.23%)</title><rect x="10.0" y="469" width="2.7" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.03%)</title><rect x="666.7" y="3461" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="669.69" y="3471.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeWrapperPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="573.5" y="4421" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="576.54" y="4431.5" ></text>
</g>
<g >
<title>`llvm::GVN::processNonLocalLoad(llvm::LoadInst*) (4 samples, 0.03%)</title><rect x="606.6" y="4325" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="609.61" y="4335.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (5 samples, 0.03%)</title><rect x="737.2" y="3637" width="0.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="740.23" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="773" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="625.13" y="783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="2469" width="0.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="623.49" y="2479.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (14 samples, 0.09%)</title><rect x="1169.7" y="3461" width="1.0" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="1172.70" y="3471.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="637.1" y="3717" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="640.13" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="2197" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="622.15" y="2207.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.98 (77 samples, 0.49%)</title><rect x="1183.8" y="2661" width="5.8" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="1186.80" y="2671.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="2213" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="623.64" y="2223.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (331 samples, 2.09%)</title><rect x="144.7" y="261" width="24.7" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="147.73" y="271.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.3" y="1941" width="0.1" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="623.27" y="1951.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="213" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="628.94" y="223.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (2 samples, 0.01%)</title><rect x="628.9" y="2517" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="631.92" y="2527.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.64 (89 samples, 0.56%)</title><rect x="1182.9" y="3429" width="6.7" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="1185.91" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.8" y="1269" width="0.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="628.79" y="1279.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (80 samples, 0.51%)</title><rect x="1183.6" y="2837" width="6.0" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="1186.58" y="2847.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (12 samples, 0.08%)</title><rect x="243.4" y="101" width="0.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="246.40" y="111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="1477" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="633.64" y="1487.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (2 samples, 0.01%)</title><rect x="1017.8" y="3717" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1020.80" y="3727.5" ></text>
</g>
<g >
<title>`INVALIDATED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3893" width="284.1" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="13.00" y="3903.5" >`INVALIDATED-DISCRIMINATING-FUNCTION^C..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="622.1" y="1157" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="625.13" y="1167.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="1157.1" y="3477" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="1160.08" y="3487.5" ></text>
</g>
<g >
<title>`COMPUTE-LOCATION-OWNERS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (10 samples, 0.06%)</title><rect x="636.8" y="3781" width="0.7" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="639.76" y="3791.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="624.3" y="965" width="1.0" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="627.30" y="975.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="2965" width="284.1" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="13.00" y="2975.5" >`core::FuncallableInstance_O::funcalla..</text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (2 samples, 0.01%)</title><rect x="173.6" y="69" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="176.61" y="79.5" ></text>
</g>
<g >
<title>0x110cd62a2 (829 samples, 5.24%)</title><rect x="174.3" y="357" width="61.9" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="177.28" y="367.5" >0x110c..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="1461" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="622.15" y="1471.5" ></text>
</g>
<g >
<title>0x1140073e7 (829 samples, 5.24%)</title><rect x="174.3" y="213" width="61.9" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="177.28" y="223.5" >0x1140..</text>
</g>
<g >
<title>`cc_fdefinition (2 samples, 0.01%)</title><rect x="906.7" y="3701" width="0.1" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="909.66" y="3711.5" ></text>
</g>
<g >
<title>`INSTANCE-SET^CORE^FN^^ (89 samples, 0.56%)</title><rect x="1045.7" y="3717" width="6.7" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="1048.72" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="632.4" y="2885" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="635.43" y="2895.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.01%)</title><rect x="663.9" y="3333" width="0.2" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="666.93" y="3343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="3205" width="284.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="13.00" y="3215.5" >`core::FuncallableInstance_O::funcalla..</text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (10 samples, 0.06%)</title><rect x="738.2" y="3605" width="0.7" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="741.20" y="3615.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.08%)</title><rect x="13.5" y="37" width="0.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="16.51" y="47.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="628.0" y="1205" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="630.95" y="1215.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (11 samples, 0.07%)</title><rect x="823.9" y="2869" width="0.8" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="826.89" y="2879.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.03%)</title><rect x="624.0" y="1861" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="627.00" y="1871.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="633.2" y="3669" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="636.18" y="3679.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.18 (17 samples, 0.11%)</title><rect x="620.9" y="725" width="1.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="623.86" y="735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="901" width="0.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="632.45" y="911.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::__class() const (2 samples, 0.01%)</title><rect x="934.6" y="3733" width="0.1" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="937.58" y="3743.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.30 (6 samples, 0.04%)</title><rect x="1021.2" y="3621" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="1024.24" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (21 samples, 0.13%)</title><rect x="630.8" y="741" width="1.6" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="633.79" y="751.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.8" y="725" width="0.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="626.77" y="735.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T CST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="272.7" y="389" width="0.1" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="275.66" y="399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.8" y="1141" width="0.1" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="628.79" y="1151.5" ></text>
</g>
<g >
<title>0x110e0015d (7 samples, 0.04%)</title><rect x="1164.1" y="3637" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1167.10" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="622.1" y="1173" width="0.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="625.13" y="1183.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (58 samples, 0.37%)</title><rect x="1070.4" y="3701" width="4.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1073.35" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (13 samples, 0.08%)</title><rect x="626.2" y="1813" width="0.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="629.16" y="1823.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="639.0" y="3269" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="642.00" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="623.1" y="1413" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="626.10" y="1423.5" ></text>
</g>
<g >
<title>0x1110a4be6 (6 samples, 0.04%)</title><rect x="629.4" y="2261" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="632.45" y="2271.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunction&amp;) (3 samples, 0.02%)</title><rect x="657.0" y="2357" width="0.2" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="659.99" y="2367.5" ></text>
</g>
<g >
<title>`AST-INTERPRET-FORM^CLASP-CLEAVIR^FN^^ (6 samples, 0.04%)</title><rect x="14.4" y="53" width="0.5" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="17.40" y="63.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (18 samples, 0.11%)</title><rect x="13.5" y="405" width="1.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="16.51" y="415.5" ></text>
</g>
<g >
<title>0x110d10d5a (3 samples, 0.02%)</title><rect x="618.3" y="3813" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="621.32" y="3823.5" ></text>
</g>
<g >
<title>`llvmo::ClaspJIT_O::addModule(gctools::smart_ptr&lt;llvmo::Module_O&gt;) (7 samples, 0.04%)</title><rect x="635.6" y="3077" width="0.6" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="638.64" y="3087.5" ></text>
</g>
<g >
<title>`CLASS-GET^EXT^FN^^ (11 samples, 0.07%)</title><rect x="907.3" y="3733" width="0.9" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="910.33" y="3743.5" ></text>
</g>
<g >
<title>`core::cl__class_of(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="1078.8" y="3717" width="0.1" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="1081.78" y="3727.5" ></text>
</g>
<g >
<title>0x110cd62a2 (82 samples, 0.52%)</title><rect x="15.0" y="181" width="6.1" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="18.00" y="191.5" ></text>
</g>
<g >
<title>0x1110a62f6 (5 samples, 0.03%)</title><rect x="627.1" y="1589" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="630.13" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1349" width="0.1" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="627.00" y="1359.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.40 (7,680 samples, 48.58%)</title><rect x="616.3" y="4469" width="573.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="619.31" y="4479.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.40</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="2165" width="284.1" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="13.00" y="2175.5" >`core::FuncallableInstance_O::funcalla..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="624.3" y="565" width="1.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="627.30" y="575.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="624.0" y="677" width="0.1" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="627.00" y="687.5" ></text>
</g>
<g >
<title>0x110cd62a2 (37 samples, 0.23%)</title><rect x="144.7" y="165" width="2.8" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="147.73" y="175.5" ></text>
</g>
<g >
<title>`core::Function_O::functionName() const (10 samples, 0.06%)</title><rect x="1121.6" y="3717" width="0.7" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="1124.55" y="3727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (10 samples, 0.06%)</title><rect x="12.8" y="533" width="0.7" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="15.76" y="543.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.103 (4 samples, 0.03%)</title><rect x="823.4" y="2165" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="826.44" y="2175.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^124^TOP-COMPILE-FILE.325 (2 samples, 0.01%)</title><rect x="14.9" y="821" width="0.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="17.85" y="831.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="619.4" y="1413" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="622.44" y="1423.5" ></text>
</g>
<g >
<title>0x1501b45fb (5 samples, 0.03%)</title><rect x="282.0" y="85" width="0.4" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="284.99" y="95.5" ></text>
</g>
<g >
<title>0x1110a5606 (5 samples, 0.03%)</title><rect x="619.4" y="693" width="0.4" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="622.44" y="703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="1317" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="632.45" y="1327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.8" y="1173" width="0.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="628.79" y="1183.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const&amp;, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*) (2 samples, 0.01%)</title><rect x="612.5" y="4325" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="615.50" y="4335.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (41 samples, 0.26%)</title><rect x="593.6" y="4501" width="3.1" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="596.62" y="4511.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (6 samples, 0.04%)</title><rect x="1021.2" y="3301" width="0.5" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="1024.24" y="3311.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="650.4" y="3509" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="653.42" y="3519.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitAnd(llvm::BinaryOperator&amp;) (3 samples, 0.02%)</title><rect x="602.1" y="4357" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="605.13" y="4367.5" ></text>
</g>
<g >
<title>`AST-INTERPRETED-CLOSURE^INTERPRET-AST^FN^^.117 (9 samples, 0.06%)</title><rect x="173.6" y="437" width="0.7" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="176.61" y="447.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (5 samples, 0.03%)</title><rect x="725.9" y="3621" width="0.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="728.88" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1189" width="0.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="622.15" y="1199.5" ></text>
</g>
<g >
<title>`llvm::MachineFunctionPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="643.6" y="2821" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="646.63" y="2831.5" ></text>
</g>
<g >
<title>0x1110a5606 (27 samples, 0.17%)</title><rect x="630.3" y="2549" width="2.1" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="633.34" y="2559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="1749" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="632.74" y="1759.5" ></text>
</g>
<g >
<title>`CATCH-FUNCTION^CORE^FN^^ (71 samples, 0.45%)</title><rect x="281.5" y="629" width="5.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="284.47" y="639.5" ></text>
</g>
<g >
<title>0x1110a5456 (4 samples, 0.03%)</title><rect x="623.7" y="1589" width="0.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="626.70" y="1599.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="656.2" y="3365" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="659.24" y="3375.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.03%)</title><rect x="877.9" y="3381" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="880.85" y="3391.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (63 samples, 0.40%)</title><rect x="899.8" y="3653" width="4.7" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="902.80" y="3663.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T))^METHOD^^ (7 samples, 0.04%)</title><rect x="1184.4" y="2437" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="1187.40" y="2447.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="1177.1" y="3173" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="1180.09" y="3183.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="1189.3" y="2405" width="0.1" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="1192.25" y="2415.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (22 samples, 0.14%)</title><rect x="1187.1" y="1413" width="1.6" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="1190.09" y="1423.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.28 (43 samples, 0.27%)</title><rect x="823.3" y="3253" width="3.2" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="826.29" y="3263.5" ></text>
</g>
<g >
<title>0x1140073e7 (62 samples, 0.39%)</title><rect x="236.2" y="485" width="4.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="239.24" y="495.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (16 samples, 0.10%)</title><rect x="635.6" y="3573" width="1.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="638.57" y="3583.5" ></text>
</g>
<g >
<title>0x111521403 (4 samples, 0.03%)</title><rect x="662.7" y="3269" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="665.66" y="3279.5" ></text>
</g>
<g >
<title>`TYPE-SPECIFIER-AST^CLEAVIR-AST^((:AROUND) (TYPEQ-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="618.3" y="3765" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="621.32" y="3775.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (6 samples, 0.04%)</title><rect x="641.0" y="3461" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="644.02" y="3471.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (829 samples, 5.24%)</title><rect x="174.3" y="101" width="61.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="177.28" y="111.5" >`conve..</text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1541" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="623.64" y="1551.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="628.8" y="2501" width="0.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="631.77" y="2511.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (62 samples, 0.39%)</title><rect x="236.2" y="501" width="4.7" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="239.24" y="511.5" ></text>
</g>
<g >
<title>`CODEGEN-LET/LET*^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="1253" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="826.51" y="1263.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="619.8" y="2213" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="622.82" y="2223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="325" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="622.44" y="335.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (2 samples, 0.01%)</title><rect x="1065.6" y="3717" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1068.65" y="3727.5" ></text>
</g>
<g >
<title>`runImpl(llvm::Function&amp;, llvm::SimplifyQuery const&amp;, llvm::OptimizationRemarkEmitter*) (3 samples, 0.02%)</title><rect x="609.7" y="4389" width="0.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="612.67" y="4399.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (34 samples, 0.22%)</title><rect x="240.9" y="117" width="2.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="243.86" y="127.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="3589" width="284.1" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="13.00" y="3599.5" >`core::FuncallableInstance_O::funcalla..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1957" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="628.27" y="1967.5" ></text>
</g>
<g >
<title>0x1501b4c8b (5 samples, 0.03%)</title><rect x="173.9" y="197" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="176.91" y="207.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (9 samples, 0.06%)</title><rect x="997.6" y="3525" width="0.6" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="1000.58" y="3535.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^592^TOP-COMPILE-FILE.75 (4 samples, 0.03%)</title><rect x="823.4" y="1621" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="826.44" y="1631.5" ></text>
</g>
<g >
<title>0x1258cfcab (63 samples, 0.40%)</title><rect x="273.8" y="549" width="4.7" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="276.78" y="559.5" ></text>
</g>
<g >
<title>0x1257602e2 (10 samples, 0.06%)</title><rect x="622.4" y="1125" width="0.7" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="625.35" y="1135.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (8 samples, 0.05%)</title><rect x="629.4" y="2805" width="0.6" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="632.45" y="2815.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="593.0" y="4357" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="596.02" y="4367.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(llvm::MemoryLocation const&amp;, bool, llvm::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::Instruction, false, false, void&gt;, false, false&gt;, llvm::BasicBlock*, llvm::Instruction*, unsigned int*) (3 samples, 0.02%)</title><rect x="599.1" y="4357" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="602.07" y="4367.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (19 samples, 0.12%)</title><rect x="271.2" y="197" width="1.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="274.24" y="207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1221" width="0.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="623.49" y="1231.5" ></text>
</g>
<g >
<title>`llvm::MachineBlockFrequencyInfo::calculate(llvm::MachineFunction const&amp;, llvm::MachineBranchProbabilityInfo const&amp;, llvm::MachineLoopInfo const&amp;) (4 samples, 0.03%)</title><rect x="584.9" y="4389" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="587.89" y="4399.5" ></text>
</g>
<g >
<title>`read.lisp-read193^5^TOP-COMPILE-FILE.2 (96 samples, 0.61%)</title><rect x="286.9" y="693" width="7.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="289.92" y="703.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.6" y="837" width="0.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="632.60" y="847.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.5" y="1477" width="0.1" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="623.49" y="1487.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (32 samples, 0.20%)</title><rect x="1186.7" y="2389" width="2.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="1189.72" y="2399.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_set_T_spintT_sp (72 samples, 0.46%)</title><rect x="759.9" y="3621" width="5.4" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="762.92" y="3631.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.26 (12 samples, 0.08%)</title><rect x="872.5" y="3285" width="0.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="875.48" y="3295.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^124^TOP-COMPILE-FILE.325 (18 samples, 0.11%)</title><rect x="13.5" y="373" width="1.4" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="16.51" y="383.5" ></text>
</g>
<g >
<title>`MULTIPLE-VALUE-FUNCALL^CORE^FN^^ (98 samples, 0.62%)</title><rect x="286.8" y="1109" width="7.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="289.77" y="1119.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.86 (28 samples, 0.18%)</title><rect x="1186.9" y="1829" width="2.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="1189.87" y="1839.5" ></text>
</g>
<g >
<title>0x1501b4d6b (40 samples, 0.25%)</title><rect x="278.5" y="549" width="3.0" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="281.48" y="559.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (60 samples, 0.38%)</title><rect x="638.0" y="3669" width="4.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="641.03" y="3679.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (16 samples, 0.10%)</title><rect x="823.9" y="2997" width="1.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="826.89" y="3007.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (45 samples, 0.28%)</title><rect x="695.1" y="3637" width="3.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="698.13" y="3647.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (96 samples, 0.61%)</title><rect x="286.9" y="597" width="7.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="289.92" y="607.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (125 samples, 0.79%)</title><rect x="620.9" y="3061" width="9.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="623.86" y="3071.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="610.3" y="4277" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="613.34" y="4287.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.18 (3 samples, 0.02%)</title><rect x="874.0" y="3125" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="876.97" y="3135.5" ></text>
</g>
<g >
<title>`core::output_stream_write_byte8(gctools::smart_ptr&lt;core::T_O&gt;, unsigned char*, long long) (32 samples, 0.20%)</title><rect x="567.6" y="4469" width="2.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="570.57" y="4479.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.7" y="1925" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="632.74" y="1935.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="623.7" y="1045" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="626.70" y="1055.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="640.6" y="3365" width="0.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="643.64" y="3375.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.69 (2 samples, 0.01%)</title><rect x="656.7" y="2341" width="0.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="659.69" y="2351.5" ></text>
</g>
<g >
<title>`llvm::getOrEnforceKnownAlignment(llvm::Value*, unsigned int, llvm::DataLayout const&amp;, llvm::Instruction const*, llvm::AssumptionCache*, llvm::DominatorTree const*) (3 samples, 0.02%)</title><rect x="603.8" y="4341" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="606.84" y="4351.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="240.7" y="53" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="243.72" y="63.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (3 samples, 0.02%)</title><rect x="749.0" y="3621" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="752.02" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1765" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="622.15" y="1775.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (4 samples, 0.03%)</title><rect x="654.6" y="3493" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="657.60" y="3503.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.55 (2 samples, 0.01%)</title><rect x="656.7" y="2501" width="0.1" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="659.69" y="2511.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (3,461 samples, 21.89%)</title><rect x="15.0" y="837" width="258.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="18.00" y="847.5" >`convert.lisp-convert288^36^TOP-CO..</text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (3 samples, 0.02%)</title><rect x="1184.2" y="2421" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="1187.18" y="2431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="625.8" y="1781" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="628.79" y="1791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="625.7" y="1877" width="0.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="628.71" y="1887.5" ></text>
</g>
<g >
<title>`CODEGEN-PROGN^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="1989" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="826.44" y="1999.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (10 samples, 0.06%)</title><rect x="622.4" y="1317" width="0.7" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="625.35" y="1327.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.61 (86 samples, 0.54%)</title><rect x="1183.1" y="3029" width="6.5" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="1186.13" y="3039.5" ></text>
</g>
<g >
<title>`core::lambdaListHandler_createBindings(gctools::smart_ptr&lt;core::Closure_O&gt;, gctools::smart_ptr&lt;core::LambdaListHandler_O&gt;, core::DynamicScopeManager&amp;, gctools::smart_ptr&lt;core::Vaslist&gt;, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*) (13 samples, 0.08%)</title><rect x="858.1" y="3589" width="1.0" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="861.15" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="623.7" y="1413" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="626.70" y="1423.5" ></text>
</g>
<g >
<title>0x110d881ee (2 samples, 0.01%)</title><rect x="661.3" y="3397" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="664.32" y="3407.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (4 samples, 0.03%)</title><rect x="629.4" y="1669" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="632.45" y="1679.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.91 (2 samples, 0.01%)</title><rect x="876.3" y="2741" width="0.1" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="879.28" y="2751.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (44 samples, 0.28%)</title><rect x="645.4" y="3461" width="3.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="648.42" y="3471.5" ></text>
</g>
<g >
<title>0x110c6812b (2 samples, 0.01%)</title><rect x="660.1" y="3365" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="663.12" y="3375.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&amp;, llvm::OptimizationRemarkEmitter*) (2 samples, 0.01%)</title><rect x="613.0" y="4325" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="616.02" y="4335.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="623.6" y="2229" width="0.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="626.62" y="2239.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (7,677 samples, 48.56%)</title><rect x="616.5" y="3909" width="573.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="619.53" y="3919.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="1156.6" y="3029" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="1159.64" y="3039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="2053" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="622.15" y="2063.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.72 (2 samples, 0.01%)</title><rect x="656.7" y="2309" width="0.1" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="659.69" y="2319.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.4" y="1653" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="633.42" y="1663.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="623.1" y="1525" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="626.10" y="1535.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.30 (5 samples, 0.03%)</title><rect x="1156.6" y="3653" width="0.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="1159.64" y="3663.5" ></text>
</g>
<g >
<title>`llvm::GVN::fillImplicitControlFlowInfo(llvm::BasicBlock*) (2 samples, 0.01%)</title><rect x="606.4" y="4357" width="0.1" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="609.38" y="4367.5" ></text>
</g>
<g >
<title>0x11171939a (3 samples, 0.02%)</title><rect x="648.8" y="3429" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="651.78" y="3439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (125 samples, 0.79%)</title><rect x="130.9" y="53" width="9.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="133.92" y="63.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (16 samples, 0.10%)</title><rect x="142.3" y="101" width="1.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="145.26" y="111.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="623.1" y="1093" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="626.10" y="1103.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="625.3" y="1333" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="628.27" y="1343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1685" width="0.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="629.16" y="1695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.1" y="1189" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="630.13" y="1199.5" ></text>
</g>
<g >
<title>0x1258cfc3b (2 samples, 0.01%)</title><rect x="173.6" y="117" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="176.61" y="127.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="630.6" y="1381" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="633.64" y="1391.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (12 samples, 0.08%)</title><rect x="738.1" y="3621" width="0.9" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="741.12" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="1845" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="622.15" y="1855.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="624.3" y="773" width="1.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="627.30" y="783.5" ></text>
</g>
<g >
<title>0x110d5dee7 (4 samples, 0.03%)</title><rect x="733.8" y="3653" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="736.79" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="632.4" y="2517" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="635.43" y="2527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (11 samples, 0.07%)</title><rect x="627.7" y="2101" width="0.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="630.65" y="2111.5" ></text>
</g>
<g >
<title>0x125851779 (50 samples, 0.32%)</title><rect x="638.6" y="3621" width="3.8" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="641.63" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="632.4" y="3189" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="635.43" y="3199.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.86 (89 samples, 0.56%)</title><rect x="1182.9" y="3221" width="6.7" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="1185.91" y="3231.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (294 samples, 1.86%)</title><rect x="147.5" y="181" width="21.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="150.49" y="191.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1653" width="1.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="623.86" y="1663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="789" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="631.18" y="799.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.18 (7 samples, 0.04%)</title><rect x="1176.9" y="3301" width="0.6" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="1179.94" y="3311.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (316 samples, 2.00%)</title><rect x="836.7" y="3621" width="23.6" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="839.72" y="3631.5" >`..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="625.7" y="2005" width="0.4" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="628.71" y="2015.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (22 samples, 0.14%)</title><rect x="994.7" y="3669" width="1.7" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="997.74" y="3679.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (2 samples, 0.01%)</title><rect x="14.9" y="709" width="0.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="17.85" y="719.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (28 samples, 0.18%)</title><rect x="630.3" y="3381" width="2.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="633.34" y="3391.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="779.6" y="3621" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="782.62" y="3631.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="619.1" y="1685" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="622.15" y="1695.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (2 samples, 0.01%)</title><rect x="1177.8" y="3477" width="0.1" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="1180.76" y="3487.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.22 (17 samples, 0.11%)</title><rect x="620.9" y="837" width="1.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="623.86" y="847.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="725" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="622.44" y="735.5" ></text>
</g>
<g >
<title>0x1501b4c8b (2 samples, 0.01%)</title><rect x="240.7" y="197" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="243.72" y="207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1845" width="1.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="623.86" y="1855.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (19 samples, 0.12%)</title><rect x="271.2" y="165" width="1.5" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="274.24" y="175.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="640.6" y="3349" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="643.64" y="3359.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (3 samples, 0.02%)</title><rect x="857.8" y="3509" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="860.77" y="3519.5" ></text>
</g>
<g >
<title>`malloc (2 samples, 0.01%)</title><rect x="610.3" y="4309" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="613.34" y="4319.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (7 samples, 0.04%)</title><rect x="878.1" y="3461" width="0.6" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="881.15" y="3471.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="648.4" y="3397" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="651.40" y="3407.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.101 (3 samples, 0.02%)</title><rect x="823.5" y="1093" width="0.2" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="826.51" y="1103.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="101" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="632.45" y="111.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (83 samples, 0.53%)</title><rect x="15.0" y="581" width="6.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="18.00" y="591.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolutionWrapperPass::releaseMemory() (3 samples, 0.02%)</title><rect x="615.0" y="4373" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="617.97" y="4383.5" ></text>
</g>
<g >
<title>0x111521403 (2 samples, 0.01%)</title><rect x="647.3" y="3237" width="0.1" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="650.29" y="3247.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="632.4" y="789" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="635.43" y="799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="629" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="622.15" y="639.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (13 samples, 0.08%)</title><rect x="571.1" y="4485" width="0.9" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="574.08" y="4495.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1156.6" y="3125" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1159.64" y="3135.5" ></text>
</g>
<g >
<title>0x1110a5606 (13 samples, 0.08%)</title><rect x="624.3" y="1589" width="1.0" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="627.30" y="1599.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="2101" width="0.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="826.44" y="2111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.05%)</title><rect x="627.9" y="1877" width="0.6" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="630.88" y="1887.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.02%)</title><rect x="1151.9" y="3717" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1154.93" y="3727.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^264^TOP-COMPILE-FILE.146 (3,806 samples, 24.07%)</title><rect x="10.0" y="1765" width="284.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="13.00" y="1775.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (198 samples, 1.25%)</title><rect x="572.9" y="4437" width="14.8" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="575.94" y="4447.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (16 samples, 0.10%)</title><rect x="142.3" y="133" width="1.2" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="145.26" y="143.5" ></text>
</g>
<g >
<title>`STANDARD-INSTANCE-ACCESS^CLOS^SETF^^ (2 samples, 0.01%)</title><rect x="639.5" y="3189" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="642.52" y="3199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="725" width="1.0" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="627.30" y="735.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::UnreachableMachineBlockElim::runOnMachineFunction(llvm::MachineFunction&amp;) (2 samples, 0.01%)</title><rect x="577.6" y="4405" width="0.1" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="580.57" y="4415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.8" y="325" width="0.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="626.77" y="335.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="625.9" y="1285" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="628.94" y="1295.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (27 samples, 0.17%)</title><rect x="630.3" y="2757" width="2.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="633.34" y="2767.5" ></text>
</g>
<g >
<title>`gctools::Vec0_impl&lt;gctools::GCVector&lt;gctools::smart_ptr&lt;core::Symbol_O&gt;, gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;gctools::smart_ptr&lt;core::Symbol_O&gt; &gt; &gt; &gt; &gt;::operator[](unsigned long) (3 samples, 0.02%)</title><rect x="955.4" y="3733" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="958.40" y="3743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.0" y="2021" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="633.04" y="2031.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (12 samples, 0.08%)</title><rect x="1174.7" y="3557" width="0.9" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="1177.70" y="3567.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (4 samples, 0.03%)</title><rect x="906.9" y="3685" width="0.3" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="909.89" y="3695.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (2 samples, 0.01%)</title><rect x="630.0" y="2181" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="633.04" y="2191.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="628.8" y="2469" width="0.1" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="631.77" y="2479.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="639.4" y="3349" width="0.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="642.37" y="3359.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (2 samples, 0.01%)</title><rect x="624.0" y="1269" width="0.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="627.00" y="1279.5" ></text>
</g>
<g >
<title>`llvm::JumpThreadingPass::ComputeValueKnownInPredecessors(llvm::Value*, llvm::BasicBlock*, llvm::SmallVectorImpl&lt;std::__1::pair&lt;llvm::Constant*, llvm::BasicBlock*&gt; &gt;&amp;, llvm::jumpthreading::ConstantPreference, llvm::Instruction*) (3 samples, 0.02%)</title><rect x="598.3" y="4341" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="601.32" y="4351.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.03%)</title><rect x="169.4" y="85" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="172.43" y="95.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.91 (7 samples, 0.04%)</title><rect x="823.3" y="2997" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="826.29" y="3007.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.6" y="1333" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="633.64" y="1343.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="622.1" y="1221" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="625.13" y="1231.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (37 samples, 0.23%)</title><rect x="1087.1" y="3525" width="2.8" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="1090.14" y="3535.5" ></text>
</g>
<g >
<title>`SET-PREDECESSORS^CLEAVIR-IR^FN^^ (1,794 samples, 11.35%)</title><rect x="1022.7" y="3765" width="133.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="1025.73" y="3775.5" >`SET-PREDECESSOR..</text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T T T T))^METHOD^^ (21 samples, 0.13%)</title><rect x="650.7" y="3653" width="1.6" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="653.72" y="3663.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.14 (6 samples, 0.04%)</title><rect x="1021.2" y="3413" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="1024.24" y="3423.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.0" y="2229" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="633.04" y="2239.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.9" y="293" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="628.94" y="303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="1445" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="622.44" y="1455.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (27 samples, 0.17%)</title><rect x="1169.2" y="3589" width="2.1" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="1172.25" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="623.7" y="2021" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="626.70" y="2031.5" ></text>
</g>
<g >
<title>0x1110a5606 (17 samples, 0.11%)</title><rect x="620.9" y="1861" width="1.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="623.86" y="1871.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (152 samples, 0.96%)</title><rect x="940.7" y="3669" width="11.3" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="943.70" y="3679.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION^CLEAVIR-PARTIAL-INLINING^FN^^ (160 samples, 1.01%)</title><rect x="655.1" y="3557" width="12.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="658.12" y="3567.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (5 samples, 0.03%)</title><rect x="752.4" y="3621" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="755.38" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1973" width="0.3" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="626.70" y="1983.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (582 samples, 3.68%)</title><rect x="130.8" y="693" width="43.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="133.84" y="703.5" >`con..</text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^264^TOP-COMPILE-FILE.147 (3,806 samples, 24.07%)</title><rect x="10.0" y="1749" width="284.1" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="13.00" y="1759.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (17 samples, 0.11%)</title><rect x="1129.3" y="3637" width="1.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1132.32" y="3647.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (60 samples, 0.38%)</title><rect x="236.2" y="101" width="4.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="239.24" y="111.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (572 samples, 3.62%)</title><rect x="130.8" y="389" width="42.7" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="133.84" y="399.5" >`CON..</text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="640.2" y="3125" width="0.4" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="643.19" y="3135.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (27 samples, 0.17%)</title><rect x="630.3" y="2485" width="2.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="633.34" y="2495.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (65 samples, 0.41%)</title><rect x="281.9" y="325" width="4.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="284.92" y="335.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="643.6" y="2837" width="0.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="646.55" y="2847.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const (3 samples, 0.02%)</title><rect x="811.9" y="3605" width="0.2" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="814.87" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="2229" width="0.4" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="622.37" y="2239.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="623.1" y="981" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="626.10" y="991.5" ></text>
</g>
<g >
<title>`wrapped_cl__write_T_spT_spT_spT_sp_______________T_spT_spT_spT_spT_sp_______________T_spT_spT_spT_sp_______________T_spT_spT_spT_sp (3 samples, 0.02%)</title><rect x="1183.3" y="2789" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1186.28" y="2799.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (9 samples, 0.06%)</title><rect x="657.6" y="2565" width="0.7" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="660.59" y="2575.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="618.6" y="3781" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="621.62" y="3791.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (16 samples, 0.10%)</title><rect x="1143.1" y="3413" width="1.2" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="1146.13" y="3423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1701" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="623.64" y="1711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (27 samples, 0.17%)</title><rect x="630.3" y="2101" width="2.1" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="633.34" y="2111.5" ></text>
</g>
<g >
<title>0x11171939a (3 samples, 0.02%)</title><rect x="876.1" y="3381" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="879.06" y="3391.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="618.6" y="3717" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="621.62" y="3727.5" ></text>
</g>
<g >
<title>0x1119817c4 (3,806 samples, 24.07%)</title><rect x="10.0" y="3989" width="284.1" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="13.00" y="3999.5" >0x1119817c4</text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (7 samples, 0.04%)</title><rect x="648.2" y="3445" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="651.18" y="3455.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (24 samples, 0.15%)</title><rect x="619.1" y="3269" width="1.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="622.07" y="3279.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="628.0" y="1141" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="630.95" y="1151.5" ></text>
</g>
<g >
<title>`GC_mark_from (19 samples, 0.12%)</title><rect x="1185.1" y="2037" width="1.5" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="1188.15" y="2047.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (26 samples, 0.16%)</title><rect x="630.4" y="1717" width="2.0" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="633.42" y="1727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.4" y="1637" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="633.42" y="1647.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.59 (6 samples, 0.04%)</title><rect x="823.3" y="2901" width="0.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="826.29" y="2911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="693" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="622.15" y="703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="805" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="628.27" y="815.5" ></text>
</g>
<g >
<title>0x1258cfc3b (3 samples, 0.02%)</title><rect x="12.5" y="37" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="15.46" y="47.5" ></text>
</g>
<g >
<title>`llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (7 samples, 0.04%)</title><rect x="876.4" y="2677" width="0.6" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="879.43" y="2687.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="624.3" y="181" width="1.0" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="627.30" y="191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="2485" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="635.43" y="2495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="1109" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="632.45" y="1119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="630.8" y="693" width="1.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="633.79" y="703.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.8" y="213" width="0.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="626.77" y="223.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::T_O&gt;::notnilp() const (2 samples, 0.01%)</title><rect x="1153.3" y="3733" width="0.1" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="1156.28" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1205" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="626.70" y="1215.5" ></text>
</g>
<g >
<title>`MAKE-ENCLOSE-INSTRUCTION^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="651.3" y="3589" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="654.32" y="3599.5" ></text>
</g>
<g >
<title>0x114007367 (82 samples, 0.52%)</title><rect x="15.0" y="309" width="6.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="18.00" y="319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1941" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="626.70" y="1951.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (83 samples, 0.53%)</title><rect x="15.0" y="533" width="6.2" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="18.00" y="543.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (4 samples, 0.03%)</title><rect x="658.5" y="3253" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="661.48" y="3263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="623.6" y="2245" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="626.62" y="2255.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="997.7" y="2933" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1000.72" y="2943.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="628.0" y="437" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="630.95" y="447.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (21 samples, 0.13%)</title><rect x="661.5" y="3445" width="1.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="664.47" y="3455.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="650.8" y="3493" width="0.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="653.79" y="3503.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (4 samples, 0.03%)</title><rect x="632.4" y="2933" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="635.43" y="2943.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (4 samples, 0.03%)</title><rect x="1146.4" y="3589" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1149.41" y="3599.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.98 (90 samples, 0.57%)</title><rect x="1182.8" y="3589" width="6.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="1185.83" y="3599.5" ></text>
</g>
<g >
<title>`read.lisp-read193^5^TOP-COMPILE-FILE.4 (98 samples, 0.62%)</title><rect x="286.8" y="1013" width="7.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="289.77" y="1023.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="626.2" y="885" width="0.9" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="629.16" y="895.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="624.3" y="661" width="1.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="627.30" y="671.5" ></text>
</g>
<g >
<title>0x110c5913e (2 samples, 0.01%)</title><rect x="1176.5" y="3765" width="0.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1179.49" y="3775.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.64 (19 samples, 0.12%)</title><rect x="1187.3" y="1109" width="1.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1190.31" y="1119.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="625.8" y="1573" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="628.79" y="1583.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (26 samples, 0.16%)</title><rect x="630.4" y="1941" width="2.0" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="633.42" y="1951.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (21 samples, 0.13%)</title><rect x="630.8" y="997" width="1.6" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="633.79" y="1007.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (8 samples, 0.05%)</title><rect x="627.9" y="1717" width="0.6" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="630.88" y="1727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="626.2" y="1461" width="0.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="629.16" y="1471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1829" width="0.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="627.00" y="1839.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (37 samples, 0.23%)</title><rect x="144.7" y="101" width="2.8" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="147.73" y="111.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.10 (21 samples, 0.13%)</title><rect x="656.7" y="2933" width="1.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="659.69" y="2943.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="620.3" y="2277" width="0.1" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="623.27" y="2287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1477" width="0.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="635.43" y="1487.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::T_O&gt;::smart_ptr&lt;core::Symbol_O&gt;(gctools::smart_ptr&lt;core::Symbol_O&gt; const&amp;) (3 samples, 0.02%)</title><rect x="1151.6" y="3717" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1154.63" y="3727.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Vaslist&gt;::smart_ptr(core::Vaslist*) (2 samples, 0.01%)</title><rect x="861.6" y="3621" width="0.1" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="864.58" y="3631.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="1021.3" y="3157" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="1024.31" y="3167.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (2 samples, 0.01%)</title><rect x="1102.0" y="3733" width="0.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="1105.00" y="3743.5" ></text>
</g>
<g >
<title>`core::ext__class_unboundp(gctools::smart_ptr&lt;core::ClassHolder_O&gt;) (2 samples, 0.01%)</title><rect x="914.1" y="3717" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="917.13" y="3727.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (8 samples, 0.05%)</title><rect x="1153.9" y="3733" width="0.6" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1156.87" y="3743.5" ></text>
</g>
<g >
<title>0x1110a4be6 (4 samples, 0.03%)</title><rect x="625.3" y="1973" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="628.27" y="1983.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (71 samples, 0.45%)</title><rect x="567.1" y="4565" width="5.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="570.12" y="4575.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (19 samples, 0.12%)</title><rect x="1131.9" y="3621" width="1.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="1134.85" y="3631.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (2 samples, 0.01%)</title><rect x="1086.7" y="3621" width="0.1" height="15.0" fill="rgb(219,79,79)" rx="2" ry="2" />
<text  x="1089.70" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1765" width="0.1" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="627.00" y="1775.5" ></text>
</g>
<g >
<title>`llvmo::ClaspJIT_O::addModule(gctools::smart_ptr&lt;llvmo::Module_O&gt;) (2 samples, 0.01%)</title><rect x="1156.6" y="3077" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="1159.64" y="3087.5" ></text>
</g>
<g >
<title>`OPERATE^ASDF/OPERATE^((:AROUND) (T T))^METHOD^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3413" width="284.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="13.00" y="3423.5" >`OPERATE^ASDF/OPERATE^((:AROUND) (T T)..</text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T T T T))^METHOD^^ (3 samples, 0.02%)</title><rect x="652.3" y="3653" width="0.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="655.29" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (11 samples, 0.07%)</title><rect x="643.5" y="3429" width="0.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="646.48" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="2533" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="622.15" y="2543.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (3 samples, 0.02%)</title><rect x="644.1" y="2901" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="647.08" y="2911.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.7 (3 samples, 0.02%)</title><rect x="874.0" y="3381" width="0.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="876.97" y="3391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (19 samples, 0.12%)</title><rect x="271.2" y="53" width="1.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="274.24" y="63.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T T ONE-SUCCESSOR-MIXIN T))^METHOD^^ (60 samples, 0.38%)</title><rect x="638.0" y="3637" width="4.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="641.03" y="3647.5" ></text>
</g>
<g >
<title>0x110c63df9 (55 samples, 0.35%)</title><rect x="1061.2" y="3733" width="4.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1064.17" y="3743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="619.4" y="1125" width="0.4" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="622.44" y="1135.5" ></text>
</g>
<g >
<title>`CALL-WITH-ASDF-SESSION^ASDF/SESSION^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2245" width="284.1" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="13.00" y="2255.5" >`CALL-WITH-ASDF-SESSION^ASDF/SESSION^F..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (24 samples, 0.15%)</title><rect x="619.1" y="3509" width="1.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="622.07" y="3519.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="625.8" y="1093" width="0.1" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="628.79" y="1103.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapl_T_spList_sp (3 samples, 0.02%)</title><rect x="823.5" y="1381" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="826.51" y="1391.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.26 (4 samples, 0.03%)</title><rect x="823.4" y="1637" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="826.44" y="1647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1877" width="0.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="629.16" y="1887.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (71 samples, 0.45%)</title><rect x="908.2" y="3733" width="5.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="911.16" y="3743.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.02%)</title><rect x="650.8" y="3605" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="653.79" y="3615.5" ></text>
</g>
<g >
<title>0x110cd62a2 (60 samples, 0.38%)</title><rect x="236.2" y="181" width="4.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="239.24" y="191.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="1187.8" y="549" width="0.1" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="1190.76" y="559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="949" width="0.7" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="625.35" y="959.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (572 samples, 3.62%)</title><rect x="130.8" y="357" width="42.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="133.84" y="367.5" >`con..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="2197" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="623.49" y="2207.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (5 samples, 0.03%)</title><rect x="997.9" y="3077" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1000.87" y="3087.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.4" y="165" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="632.45" y="175.5" ></text>
</g>
<g >
<title>`llvm::LiveVariables::runOnBlock(llvm::MachineBasicBlock*, unsigned int) (9 samples, 0.06%)</title><rect x="584.1" y="4389" width="0.7" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="587.14" y="4399.5" ></text>
</g>
<g >
<title>`llvm::BlockFrequencyInfoImpl&lt;llvm::MachineBasicBlock&gt;::calculate(llvm::MachineFunction const&amp;, llvm::MachineBranchProbabilityInfo const&amp;, llvm::MachineLoopInfo const&amp;) (3 samples, 0.02%)</title><rect x="584.9" y="4373" width="0.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="587.89" y="4383.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="766.3" y="3605" width="0.1" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="769.26" y="3615.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (38 samples, 0.24%)</title><rect x="1011.0" y="3557" width="2.8" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="1014.01" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.8" y="1717" width="0.3" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="628.79" y="1727.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.9 (7 samples, 0.04%)</title><rect x="874.9" y="3045" width="0.6" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="877.94" y="3055.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (5 samples, 0.03%)</title><rect x="273.0" y="197" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="275.96" y="207.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (40 samples, 0.25%)</title><rect x="278.5" y="469" width="3.0" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="281.48" y="479.5" ></text>
</g>
<g >
<title>0x1258cfc3b (61 samples, 0.39%)</title><rect x="273.9" y="149" width="4.6" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="276.93" y="159.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.7" y="1429" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="632.74" y="1439.5" ></text>
</g>
<g >
<title>`cst-to-ast.lisp-cst-to-ast301^3^TOP-COMPILE-FILE.3 (3,708 samples, 23.45%)</title><rect x="10.0" y="1125" width="276.8" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="13.00" y="1135.5" >`cst-to-ast.lisp-cst-to-ast301^3^TOP-..</text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.30 (9 samples, 0.06%)</title><rect x="997.6" y="3301" width="0.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="1000.58" y="3311.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (98 samples, 0.62%)</title><rect x="286.8" y="981" width="7.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="289.77" y="991.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (13 samples, 0.08%)</title><rect x="624.3" y="389" width="1.0" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="627.30" y="399.5" ></text>
</g>
<g >
<title>`cc_enclose (3 samples, 0.02%)</title><rect x="1022.0" y="3685" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="1024.98" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="389" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="635.43" y="399.5" ></text>
</g>
<g >
<title>`PERFORM-OUTCOME^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2309" width="284.1" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="13.00" y="2319.5" >`PERFORM-OUTCOME^CLOS^FN^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="629.4" y="2485" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="632.45" y="2495.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (17 samples, 0.11%)</title><rect x="143.5" y="229" width="1.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="146.46" y="239.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.96 (31 samples, 0.20%)</title><rect x="1186.8" y="2213" width="2.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="1189.79" y="2223.5" ></text>
</g>
<g >
<title>`RUN-ALL*17693 (3,806 samples, 24.07%)</title><rect x="10.0" y="4693" width="284.1" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="13.00" y="4703.5" >`RUN-ALL*17693</text>
</g>
<g >
<title>0x110cd62a2 (361 samples, 2.28%)</title><rect x="244.3" y="149" width="26.9" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="247.30" y="159.5" >0..</text>
</g>
<g >
<title>0x1110a5606 (5 samples, 0.03%)</title><rect x="619.4" y="1557" width="0.4" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="622.44" y="1567.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvmo::PassManager_O, bool (llvm::legacy::PassManager::*)(llvm::Module&amp;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (8 samples, 0.05%)</title><rect x="621.5" y="501" width="0.6" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="624.53" y="511.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="632.4" y="2661" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="635.43" y="2671.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="630.6" y="1205" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="633.64" y="1215.5" ></text>
</g>
<g >
<title>0x1110a5456 (20 samples, 0.13%)</title><rect x="625.6" y="2373" width="1.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="628.64" y="2383.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitStoreInst(llvm::StoreInst&amp;) (5 samples, 0.03%)</title><rect x="613.5" y="4357" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="616.55" y="4367.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (4 samples, 0.03%)</title><rect x="966.0" y="3669" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="969.00" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="627.5" y="1957" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="630.51" y="1967.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="625.3" y="1909" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="628.27" y="1919.5" ></text>
</g>
<g >
<title>`CONSP^COMMON-LISP^FN^^ (9 samples, 0.06%)</title><rect x="669.7" y="3669" width="0.6" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="672.68" y="3679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="622.1" y="1509" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="625.13" y="1519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="421" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="622.44" y="431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="623.1" y="1605" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="626.10" y="1615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="628.0" y="1333" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="630.95" y="1343.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (3 samples, 0.02%)</title><rect x="1182.9" y="3093" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1185.91" y="3103.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (9 samples, 0.06%)</title><rect x="997.6" y="3269" width="0.6" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="1000.58" y="3279.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (63 samples, 0.40%)</title><rect x="273.8" y="709" width="4.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="276.78" y="719.5" ></text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (39 samples, 0.25%)</title><rect x="914.8" y="3733" width="2.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="917.80" y="3743.5" ></text>
</g>
<g >
<title>`llvm::BlockFrequencyInfoImpl&lt;llvm::MachineBasicBlock&gt;::computeMassInFunction() (2 samples, 0.01%)</title><rect x="584.9" y="4357" width="0.1" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="587.89" y="4367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (20 samples, 0.13%)</title><rect x="625.6" y="2277" width="1.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="628.64" y="2287.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="624.0" y="821" width="0.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="627.00" y="831.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (10 samples, 0.06%)</title><rect x="622.4" y="837" width="0.7" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="625.35" y="847.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1621" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="628.27" y="1631.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (3 samples, 0.02%)</title><rect x="594.5" y="4437" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="597.51" y="4447.5" ></text>
</g>
<g >
<title>0x11171b476 (22 samples, 0.14%)</title><rect x="897.8" y="3685" width="1.6" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="900.78" y="3695.5" ></text>
</g>
<g >
<title>`core::StackFrameDynamicScopeManager::new_binding(core::Argument const&amp;, gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.02%)</title><rect x="952.0" y="3669" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="955.04" y="3679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="627.1" y="1909" width="0.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="630.13" y="1919.5" ></text>
</g>
<g >
<title>`_platform_memchr$VARIANT$Base (3 samples, 0.02%)</title><rect x="568.2" y="4421" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="571.24" y="4431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (27 samples, 0.17%)</title><rect x="630.3" y="2229" width="2.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="633.34" y="2239.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="627.7" y="2021" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="630.65" y="2031.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.295 (11 samples, 0.07%)</title><rect x="643.5" y="3557" width="0.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="646.48" y="3567.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.13 (12 samples, 0.08%)</title><rect x="872.5" y="3365" width="0.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="875.48" y="3375.5" ></text>
</g>
<g >
<title>`AST-INTERPRETED-CLOSURE^INTERPRET-AST^FN^^.117 (40 samples, 0.25%)</title><rect x="278.5" y="309" width="3.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="281.48" y="319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="117" width="0.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="622.44" y="127.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (3 samples, 0.02%)</title><rect x="627.7" y="1605" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="630.65" y="1615.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (331 samples, 2.09%)</title><rect x="144.7" y="213" width="24.7" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="147.73" y="223.5" >`..</text>
</g>
<g >
<title>`read-common.lisp-read-common192^53^TOP-COMPILE-FILE.25 (93 samples, 0.59%)</title><rect x="287.1" y="261" width="6.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="290.07" y="271.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (60 samples, 0.38%)</title><rect x="236.2" y="421" width="4.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="239.24" y="431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="1589" width="0.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="632.45" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1685" width="0.1" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="623.49" y="1695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="632.4" y="2357" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="635.43" y="2367.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="639.0" y="3301" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="642.00" y="3311.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.9 (11 samples, 0.07%)</title><rect x="643.5" y="3381" width="0.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="646.48" y="3391.5" ></text>
</g>
<g >
<title>`CODEGEN-LET^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="1269" width="0.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="826.51" y="1279.5" ></text>
</g>
<g >
<title>0x1110a4be6 (3 samples, 0.02%)</title><rect x="628.0" y="469" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="630.95" y="479.5" ></text>
</g>
<g >
<title>0x1110a5456 (7 samples, 0.04%)</title><rect x="628.0" y="1685" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="630.95" y="1695.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="874.0" y="3061" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="876.97" y="3071.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (45 samples, 0.28%)</title><rect x="823.1" y="3637" width="3.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="826.14" y="3647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^METHOD^^ (34 samples, 0.22%)</title><rect x="240.9" y="197" width="2.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="243.86" y="207.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (2 samples, 0.01%)</title><rect x="1179.8" y="3733" width="0.2" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="1182.85" y="3743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.1" y="565" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="626.10" y="575.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (3,708 samples, 23.45%)</title><rect x="10.0" y="1013" width="276.8" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" >`convert.lisp-convert288^36^TOP-COMPI..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (12 samples, 0.08%)</title><rect x="626.2" y="213" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="629.16" y="223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (7 samples, 0.04%)</title><rect x="627.1" y="2085" width="0.6" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="630.13" y="2095.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (97 samples, 0.61%)</title><rect x="655.9" y="3477" width="7.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="658.94" y="3487.5" ></text>
</g>
<g >
<title>`core::parse_ltvc_toplevel_funcall(gctools::GCRootsInModule*, gctools::smart_ptr&lt;core::T_O&gt;, bool, unsigned long&amp;) (3,806 samples, 24.07%)</title><rect x="10.0" y="4645" width="284.1" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="13.00" y="4655.5" >`core::parse_ltvc_toplevel_funcall(gct..</text>
</g>
<g >
<title>0x1257602e2 (3 samples, 0.02%)</title><rect x="622.1" y="1445" width="0.3" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="625.13" y="1455.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (47 samples, 0.30%)</title><rect x="10.0" y="581" width="3.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (12 samples, 0.08%)</title><rect x="641.5" y="3509" width="0.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="644.46" y="3519.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="627.2" y="1077" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="630.21" y="1087.5" ></text>
</g>
<g >
<title>0x110c56001 (9 samples, 0.06%)</title><rect x="691.5" y="3653" width="0.6" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="694.47" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="37" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="635.43" y="47.5" ></text>
</g>
<g >
<title>0x123ae3cf3 (2 samples, 0.01%)</title><rect x="666.7" y="3381" width="0.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="669.69" y="3391.5" ></text>
</g>
<g >
<title>0x12579d6d5 (21 samples, 0.13%)</title><rect x="643.2" y="3685" width="1.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="646.18" y="3695.5" ></text>
</g>
<g >
<title>0x123ae3cf3 (3 samples, 0.02%)</title><rect x="654.7" y="3461" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="657.67" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1093" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="622.15" y="1103.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.24 (9 samples, 0.06%)</title><rect x="997.6" y="3205" width="0.6" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="1000.58" y="3215.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (82 samples, 0.52%)</title><rect x="15.0" y="261" width="6.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="18.00" y="271.5" ></text>
</g>
<g >
<title>0x1110a5606 (10 samples, 0.06%)</title><rect x="622.4" y="389" width="0.7" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="625.35" y="399.5" ></text>
</g>
<g >
<title>0x1258cfbcb (63 samples, 0.40%)</title><rect x="273.8" y="517" width="4.7" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="276.78" y="527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="293" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="635.43" y="303.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="878.3" y="3429" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="881.30" y="3439.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (331 samples, 2.09%)</title><rect x="144.7" y="245" width="24.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="147.73" y="255.5" >`..</text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.293 (11 samples, 0.07%)</title><rect x="643.5" y="3573" width="0.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="646.48" y="3583.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (16 samples, 0.10%)</title><rect x="142.3" y="53" width="1.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="145.26" y="63.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="618.6" y="3797" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="621.62" y="3807.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.9" y="1317" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="628.94" y="1327.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE*^COMPILER^FN^^ (16 samples, 0.10%)</title><rect x="635.6" y="3221" width="1.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="638.57" y="3231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="625.6" y="2293" width="1.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="628.64" y="2303.5" ></text>
</g>
<g >
<title>`CODEGEN-SPECIAL-OPERATOR^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="1925" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="826.44" y="1935.5" ></text>
</g>
<g >
<title>`combin.lsp-combin93^52^TOP-COMPILE-FILE.2 (5 samples, 0.03%)</title><rect x="640.2" y="3317" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="643.19" y="3327.5" ></text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^COMPILER^FN^^ (20 samples, 0.13%)</title><rect x="876.3" y="3365" width="1.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="879.28" y="3375.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="625.3" y="1525" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="628.27" y="1535.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="14.9" y="597" width="0.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="17.85" y="607.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (6 samples, 0.04%)</title><rect x="619.4" y="1893" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="622.37" y="1903.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (36 samples, 0.23%)</title><rect x="10.0" y="293" width="2.7" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="627.7" y="757" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="630.73" y="767.5" ></text>
</g>
<g >
<title>`OOS^ASDF/OPERATE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3941" width="284.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="13.00" y="3951.5" >`OOS^ASDF/OPERATE^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (21 samples, 0.13%)</title><rect x="630.8" y="1269" width="1.6" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="633.79" y="1279.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.5" y="1269" width="0.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="623.49" y="1279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="261" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="630.95" y="271.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="625.3" y="117" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="628.27" y="127.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="627.7" y="1525" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="630.65" y="1535.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="1178.4" y="3781" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="1181.36" y="3791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (21 samples, 0.13%)</title><rect x="630.8" y="1477" width="1.6" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="633.79" y="1487.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (36 samples, 0.23%)</title><rect x="1130.6" y="3637" width="2.7" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1133.59" y="3647.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="629.4" y="1973" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="632.45" y="1983.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.65 (14 samples, 0.09%)</title><rect x="1187.5" y="629" width="1.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="1190.54" y="639.5" ></text>
</g>
<g >
<title>`llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&amp;, llvm::SimplifyCFGOptions const&amp;, llvm::SmallPtrSetImpl&lt;llvm::BasicBlock*&gt;*) (5 samples, 0.03%)</title><rect x="608.1" y="4373" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="611.10" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="1173" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="632.45" y="1183.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (361 samples, 2.28%)</title><rect x="244.3" y="53" width="26.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="247.30" y="63.5" >`..</text>
</g>
<g >
<title>0x12353d2d2 (5 samples, 0.03%)</title><rect x="289.2" y="69" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="292.16" y="79.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.26 (2 samples, 0.01%)</title><rect x="656.7" y="1845" width="0.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="659.69" y="1855.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="623.3" y="1205" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="626.33" y="1215.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (40 samples, 0.25%)</title><rect x="278.5" y="597" width="3.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="281.48" y="607.5" ></text>
</g>
<g >
<title>0x114007367 (3,461 samples, 21.89%)</title><rect x="15.0" y="773" width="258.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="18.00" y="783.5" >0x114007367</text>
</g>
<g >
<title>`PERFORM^ASDF/ACTION^((COMPILE-OP CL-SOURCE-FILE))^METHOD^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2197" width="284.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="13.00" y="2207.5" >`PERFORM^ASDF/ACTION^((COMPILE-OP CL-S..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="2533" width="0.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="623.49" y="2543.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getValueInBlock(llvm::Value*, llvm::BasicBlock*, llvm::Instruction*) (3 samples, 0.02%)</title><rect x="588.1" y="4421" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="591.09" y="4431.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (62 samples, 0.39%)</title><rect x="236.2" y="645" width="4.7" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="239.24" y="655.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (12 samples, 0.08%)</title><rect x="638.9" y="3429" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="641.93" y="3439.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="630.6" y="1109" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="633.64" y="1119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="623.7" y="789" width="0.2" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="626.70" y="799.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.90 (31 samples, 0.20%)</title><rect x="1186.8" y="2261" width="2.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="1189.79" y="2271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="517" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="633.64" y="527.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="623.1" y="341" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="626.10" y="351.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (6 samples, 0.04%)</title><rect x="1172.4" y="3605" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="1175.38" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="622.1" y="1269" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="625.13" y="1279.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (25 samples, 0.16%)</title><rect x="696.0" y="3605" width="1.9" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="699.03" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.7" y="1797" width="0.2" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="632.74" y="1807.5" ></text>
</g>
<g >
<title>0x12579d849 (79 samples, 0.50%)</title><rect x="644.8" y="3685" width="5.9" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="647.82" y="3695.5" ></text>
</g>
<g >
<title>`__dynamic_cast (15 samples, 0.09%)</title><rect x="991.5" y="3669" width="1.1" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="994.45" y="3679.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="953.1" y="3669" width="0.1" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="956.09" y="3679.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T T T T))^METHOD^^ (195 samples, 1.23%)</title><rect x="652.5" y="3653" width="14.6" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="655.51" y="3663.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.22 (43 samples, 0.27%)</title><rect x="823.3" y="3157" width="3.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="826.29" y="3167.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap&lt;llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo&lt;llvm::Constant*&gt;, llvm::detail::DenseMapPair&lt;llvm::Constant*, llvm::Constant*&gt; &gt;&amp;) (3 samples, 0.02%)</title><rect x="611.5" y="4341" width="0.2" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="614.46" y="4351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="625.8" y="1525" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="628.79" y="1535.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^.154 (5 samples, 0.03%)</title><rect x="273.0" y="117" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="275.96" y="127.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (582 samples, 3.68%)</title><rect x="130.8" y="645" width="43.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="133.84" y="655.5" >`CON..</text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.30 (43 samples, 0.27%)</title><rect x="823.3" y="3237" width="3.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="826.29" y="3247.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.22 (12 samples, 0.08%)</title><rect x="872.5" y="3317" width="0.9" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="875.48" y="3327.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1829" width="1.0" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="627.30" y="1839.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (65 samples, 0.41%)</title><rect x="273.6" y="837" width="4.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="276.63" y="847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (11 samples, 0.07%)</title><rect x="628.6" y="2661" width="0.8" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="631.55" y="2671.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.101 (3 samples, 0.02%)</title><rect x="823.5" y="1013" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="826.51" y="1023.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (26 samples, 0.16%)</title><rect x="630.4" y="1925" width="2.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="633.42" y="1935.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="661" width="109.6" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="24.20" y="671.5" >`CONVERT-SEQU..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="14.9" y="917" width="0.1" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="17.85" y="927.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="632.4" y="3493" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="635.43" y="3503.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (18 samples, 0.11%)</title><rect x="13.5" y="293" width="1.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="16.51" y="303.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3 samples, 0.02%)</title><rect x="1156.8" y="3157" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="1159.78" y="3167.5" ></text>
</g>
<g >
<title>0x1110a5606 (26 samples, 0.16%)</title><rect x="630.4" y="1877" width="2.0" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="633.42" y="1887.5" ></text>
</g>
<g >
<title>`llvm::MachineInstr::MachineInstr(llvm::MachineFunction&amp;, llvm::MCInstrDesc const&amp;, llvm::DebugLoc, bool) (2 samples, 0.01%)</title><rect x="578.6" y="4293" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="581.62" y="4303.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (7 samples, 0.04%)</title><rect x="620.3" y="2693" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="623.27" y="2703.5" ></text>
</g>
<g >
<title>0x1110a5606 (5 samples, 0.03%)</title><rect x="619.4" y="1173" width="0.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="622.44" y="1183.5" ></text>
</g>
<g >
<title>`GC_mark_from (34 samples, 0.22%)</title><rect x="1087.4" y="3509" width="2.5" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="1090.37" y="3519.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::T_O&gt; (core::HashTable_O::*)(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1179.0" y="3717" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1182.03" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (6 samples, 0.04%)</title><rect x="629.4" y="2533" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="632.45" y="2543.5" ></text>
</g>
<g >
<title>`llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (2 samples, 0.01%)</title><rect x="1176.9" y="3045" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1179.94" y="3055.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (27 samples, 0.17%)</title><rect x="1186.9" y="1717" width="2.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="1189.94" y="1727.5" ></text>
</g>
<g >
<title>0x110cd62a2 (18 samples, 0.11%)</title><rect x="13.5" y="629" width="1.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="16.51" y="639.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (2 samples, 0.01%)</title><rect x="240.7" y="213" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="243.72" y="223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="2741" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="635.43" y="2751.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="628.6" y="2453" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="631.62" y="2463.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (20 samples, 0.13%)</title><rect x="625.6" y="2309" width="1.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="628.64" y="2319.5" ></text>
</g>
<g >
<title>0x12365b210 (2 samples, 0.01%)</title><rect x="286.9" y="277" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="289.92" y="287.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="618.9" y="3765" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="621.92" y="3775.5" ></text>
</g>
<g >
<title>0x11bdea82c (14 samples, 0.09%)</title><rect x="750.3" y="3653" width="1.0" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="753.29" y="3663.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.98 (31 samples, 0.20%)</title><rect x="1186.8" y="2197" width="2.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1189.79" y="2207.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.73 (7,680 samples, 48.58%)</title><rect x="616.3" y="4501" width="573.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="619.31" y="4511.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.73</text>
</g>
<g >
<title>`read.lisp-read193^5^TOP-COMPILE-FILE.2 (23 samples, 0.15%)</title><rect x="287.4" y="53" width="1.7" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="290.37" y="63.5" ></text>
</g>
<g >
<title>0x1110a4be6 (3 samples, 0.02%)</title><rect x="628.0" y="1365" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="630.95" y="1375.5" ></text>
</g>
<g >
<title>`llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (4 samples, 0.03%)</title><rect x="872.5" y="2933" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="875.48" y="2943.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (7 samples, 0.04%)</title><rect x="872.9" y="3029" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="875.85" y="3039.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="623.8" y="757" width="0.1" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="626.77" y="767.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="325" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="635.43" y="335.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (32 samples, 0.20%)</title><rect x="10.0" y="85" width="2.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1180.9" y="3765" width="0.1" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1183.89" y="3775.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (71 samples, 0.45%)</title><rect x="281.5" y="565" width="5.3" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="284.47" y="575.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="876.1" y="3397" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="879.06" y="3407.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.8 (17 samples, 0.11%)</title><rect x="620.9" y="965" width="1.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="623.86" y="975.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="1157.5" y="3509" width="0.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="1160.53" y="3519.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="640.2" y="3205" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="643.19" y="3215.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (14 samples, 0.09%)</title><rect x="750.3" y="3637" width="1.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="753.29" y="3647.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE.11 (3,806 samples, 24.07%)</title><rect x="10.0" y="1493" width="284.1" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="13.00" y="1503.5" >`compile-file.lsp-compile-file52^33^TO..</text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (294 samples, 1.86%)</title><rect x="147.5" y="53" width="21.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="150.49" y="63.5" >`..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="619.8" y="2437" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="622.82" y="2447.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.03%)</title><rect x="289.2" y="53" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="292.16" y="63.5" ></text>
</g>
<g >
<title>0x1501b4d6b (40 samples, 0.25%)</title><rect x="278.5" y="357" width="3.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="281.48" y="367.5" ></text>
</g>
<g >
<title>0x110c59edb (9 samples, 0.06%)</title><rect x="725.7" y="3653" width="0.6" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="728.66" y="3663.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="649.7" y="3461" width="0.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="652.75" y="3471.5" ></text>
</g>
<g >
<title>`DISPATCH-MISS^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3861" width="284.1" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="13.00" y="3871.5" >`DISPATCH-MISS^CLOS^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="628.2" y="661" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="631.18" y="671.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (62 samples, 0.39%)</title><rect x="874.2" y="3493" width="4.6" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="877.19" y="3503.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (830 samples, 5.25%)</title><rect x="174.3" y="533" width="61.9" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="177.28" y="543.5" >`conve..</text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="591.5" y="4389" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="594.53" y="4399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1605" width="1.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="627.30" y="1615.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="632.4" y="3429" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="635.43" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="261" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="626.10" y="271.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (4 samples, 0.03%)</title><rect x="625.3" y="1589" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="628.27" y="1599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (12 samples, 0.08%)</title><rect x="626.2" y="357" width="0.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="629.16" y="367.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.8 (20 samples, 0.13%)</title><rect x="876.3" y="3173" width="1.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="879.28" y="3183.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="656.2" y="3381" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="659.24" y="3391.5" ></text>
</g>
<g >
<title>0x1111fb13b (6 samples, 0.04%)</title><rect x="1166.8" y="3637" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1169.79" y="3647.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.87 (2 samples, 0.01%)</title><rect x="876.3" y="2805" width="0.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="879.28" y="2815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="613" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="628.27" y="623.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (17 samples, 0.11%)</title><rect x="620.9" y="2101" width="1.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="623.86" y="2111.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (4 samples, 0.03%)</title><rect x="1183.3" y="2885" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="1186.28" y="2895.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.293 (43 samples, 0.27%)</title><rect x="823.3" y="3605" width="3.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="826.29" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="901" width="0.3" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="622.15" y="911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="485" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="622.44" y="495.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="922.9" y="3685" width="0.1" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="925.86" y="3695.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (75 samples, 0.47%)</title><rect x="1184.0" y="2597" width="5.6" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="1186.95" y="2607.5" ></text>
</g>
<g >
<title>0x1110a5606 (7 samples, 0.04%)</title><rect x="629.4" y="2757" width="0.6" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="632.45" y="2767.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (4 samples, 0.03%)</title><rect x="872.5" y="2917" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="875.48" y="2927.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="650.0" y="3493" width="0.1" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="652.97" y="3503.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="2085" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="635.43" y="2095.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (62 samples, 0.39%)</title><rect x="236.2" y="581" width="4.7" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="239.24" y="591.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.90 (2 samples, 0.01%)</title><rect x="876.3" y="2757" width="0.1" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="879.28" y="2767.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="619.4" y="549" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="622.44" y="559.5" ></text>
</g>
<g >
<title>`core::StackFrameDynamicScopeManager::new_binding(core::Argument const&amp;, gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="1146.8" y="3669" width="0.1" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="1149.78" y="3679.5" ></text>
</g>
<g >
<title>0x110d5dde4 (2 samples, 0.01%)</title><rect x="729.1" y="3653" width="0.1" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="732.09" y="3663.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (361 samples, 2.28%)</title><rect x="244.3" y="197" width="26.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="247.30" y="207.5" >`..</text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^192^TOP-COMPILE-FILE.19 (7,680 samples, 48.58%)</title><rect x="616.3" y="4341" width="573.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="619.31" y="4351.5" >`debuginfo.lsp-debuginfo41^192^TOP-COMPILE-FILE.19</text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="1176.9" y="3141" width="0.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="1179.94" y="3151.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (72 samples, 0.46%)</title><rect x="567.1" y="4613" width="5.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="570.12" y="4623.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (127 samples, 0.80%)</title><rect x="620.9" y="3397" width="9.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="623.86" y="3407.5" ></text>
</g>
<g >
<title>`llvmo::dump_module(gctools::smart_ptr&lt;llvmo::Module_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (71 samples, 0.45%)</title><rect x="567.1" y="4517" width="5.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="570.12" y="4527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="501" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="628.94" y="511.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (53 samples, 0.34%)</title><rect x="874.2" y="3461" width="3.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="877.19" y="3471.5" ></text>
</g>
<g >
<title>0x1110a4be6 (12 samples, 0.08%)</title><rect x="626.2" y="629" width="0.9" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="629.16" y="639.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (26 samples, 0.16%)</title><rect x="630.4" y="1909" width="2.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="633.42" y="1919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="1125" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="626.10" y="1135.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="630.6" y="533" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="633.64" y="543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1653" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="628.27" y="1663.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (5 samples, 0.03%)</title><rect x="173.9" y="101" width="0.4" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="176.91" y="111.5" ></text>
</g>
<g >
<title>`llvm::LiveRegMatrix::checkInterference(llvm::LiveInterval&amp;, unsigned int) (2 samples, 0.01%)</title><rect x="576.9" y="4325" width="0.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="579.90" y="4335.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (3 samples, 0.02%)</title><rect x="568.5" y="4421" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="571.54" y="4431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (12 samples, 0.08%)</title><rect x="626.2" y="501" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="629.16" y="511.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.20 (16 samples, 0.10%)</title><rect x="635.6" y="3285" width="1.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="638.57" y="3295.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.26 (5 samples, 0.03%)</title><rect x="1188.1" y="197" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="1191.06" y="207.5" ></text>
</g>
<g >
<title>0x1140073e7 (3,641 samples, 23.03%)</title><rect x="15.0" y="949" width="271.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="18.00" y="959.5" >0x1140073e7</text>
</g>
<g >
<title>`(anonymous namespace)::NewGVNLegacyPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="824.7" y="2853" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="827.71" y="2863.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::removeDeadPasses(llvm::Pass*, llvm::StringRef, llvm::PassDebuggingString) (2 samples, 0.01%)</title><rect x="640.4" y="2709" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="643.42" y="2719.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getDependency(llvm::Instruction*) (3 samples, 0.02%)</title><rect x="599.1" y="4389" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="602.07" y="4399.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::Function_O&gt;) (5 samples, 0.03%)</title><rect x="173.9" y="149" width="0.4" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="176.91" y="159.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.24 (11 samples, 0.07%)</title><rect x="643.5" y="3109" width="0.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="646.48" y="3119.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="644.8" y="3525" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="647.82" y="3535.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="630.0" y="2069" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="633.04" y="2079.5" ></text>
</g>
<g >
<title>`CALL-WITH-ASDF-SESSION^ASDF/SESSION^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3765" width="284.1" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="13.00" y="3775.5" >`CALL-WITH-ASDF-SESSION^ASDF/SESSION^F..</text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.61 (31 samples, 0.20%)</title><rect x="1186.8" y="2101" width="2.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="1189.79" y="2111.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::Function_O&gt;) (71 samples, 0.45%)</title><rect x="281.5" y="469" width="5.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="284.47" y="479.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.1" y="181" width="0.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="626.10" y="191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2373" width="2.1" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="633.34" y="2383.5" ></text>
</g>
<g >
<title>0x1110a5606 (5 samples, 0.03%)</title><rect x="619.4" y="597" width="0.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="622.44" y="607.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T T MULTIPLE-SUCCESSORS-MIXIN T))^METHOD^^ (21 samples, 0.13%)</title><rect x="643.2" y="3637" width="1.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="646.18" y="3647.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (17 samples, 0.11%)</title><rect x="646.6" y="3381" width="1.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="649.61" y="3391.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="874.0" y="3493" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="876.97" y="3503.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (16 samples, 0.10%)</title><rect x="635.6" y="3317" width="1.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="638.57" y="3327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="1013" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="626.33" y="1023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="622.1" y="1301" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="625.13" y="1311.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="628.2" y="85" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="631.18" y="95.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION^CLEAVIR-PARTIAL-INLINING^FN^^ (62 samples, 0.39%)</title><rect x="874.2" y="3509" width="4.6" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="877.19" y="3519.5" ></text>
</g>
<g >
<title>`CATCH-FUNCTION^CORE^FN^^ (40 samples, 0.25%)</title><rect x="278.5" y="165" width="3.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="281.48" y="175.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((ENCLOSE-INSTRUCTION T))^METHOD^^ (4 samples, 0.03%)</title><rect x="650.4" y="3557" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="653.42" y="3567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="628.2" y="677" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="631.18" y="687.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.87 (7 samples, 0.04%)</title><rect x="823.3" y="3061" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="826.29" y="3071.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (12 samples, 0.08%)</title><rect x="634.2" y="3749" width="0.9" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="637.22" y="3759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="1285" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="633.64" y="1295.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.59 (2 samples, 0.01%)</title><rect x="876.3" y="2645" width="0.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="879.28" y="2655.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (13 samples, 0.08%)</title><rect x="646.8" y="3349" width="0.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="649.76" y="3359.5" ></text>
</g>
<g >
<title>0x114007367 (10 samples, 0.06%)</title><rect x="12.8" y="53" width="0.7" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="15.76" y="63.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (13 samples, 0.08%)</title><rect x="626.2" y="1125" width="0.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="629.16" y="1135.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="1188.1" y="229" width="0.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="1191.06" y="239.5" ></text>
</g>
<g >
<title>`IRC-CREATE-FUNCTION-DESCRIPTION^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="1182.9" y="3189" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="1185.91" y="3199.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3 samples, 0.02%)</title><rect x="874.0" y="3141" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="876.97" y="3151.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (4 samples, 0.03%)</title><rect x="1148.1" y="3669" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1151.05" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1781" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="635.43" y="1791.5" ></text>
</g>
<g >
<title>`llvm::AAResultsWrapperPass::runOnFunction(llvm::Function&amp;) (5 samples, 0.03%)</title><rect x="589.1" y="4469" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="592.07" y="4479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2645" width="2.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="633.34" y="2655.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::AggressiveDeadCodeElimination::performDeadCodeElimination() (3 samples, 0.02%)</title><rect x="597.5" y="4389" width="0.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="600.50" y="4399.5" ></text>
</g>
<g >
<title>`CODEGEN-IF^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="965" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="826.51" y="975.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.03%)</title><rect x="650.4" y="3541" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="653.42" y="3551.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (3 samples, 0.02%)</title><rect x="604.3" y="4325" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="607.29" y="4335.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (20 samples, 0.13%)</title><rect x="625.6" y="2325" width="1.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="628.64" y="2335.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.1" y="1141" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="626.10" y="1151.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (10 samples, 0.06%)</title><rect x="622.4" y="997" width="0.7" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="625.35" y="1007.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (17 samples, 0.11%)</title><rect x="620.9" y="2037" width="1.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="623.86" y="2047.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (17 samples, 0.11%)</title><rect x="143.5" y="53" width="1.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="146.46" y="63.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.90 (77 samples, 0.49%)</title><rect x="1183.8" y="2725" width="5.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="1186.80" y="2735.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.01%)</title><rect x="14.9" y="805" width="0.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="17.85" y="815.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="632.4" y="2533" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="635.43" y="2543.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (82 samples, 0.52%)</title><rect x="1104.2" y="3701" width="6.2" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="1107.24" y="3711.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (18 samples, 0.11%)</title><rect x="13.5" y="325" width="1.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="16.51" y="335.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.7 (11 samples, 0.07%)</title><rect x="643.5" y="3413" width="0.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="646.48" y="3423.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE^COMPILER^FN^^ (20 samples, 0.13%)</title><rect x="876.3" y="3301" width="1.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="879.28" y="3311.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="623.3" y="789" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="626.33" y="799.5" ></text>
</g>
<g >
<title>`llvm::iterator_range&lt;llvm::po_iterator&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const*, llvm::SmallPtrSet&lt;llvm::GraphTraits&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const*&gt;::NodeRef, 8u&gt;, false, llvm::GraphTraits&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const*&gt; &gt; &gt; llvm::post_order&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const*&gt;(llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const* const&amp;) (2 samples, 0.01%)</title><rect x="605.1" y="4373" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="608.11" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="549" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="628.94" y="559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="623.1" y="1317" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="626.10" y="1327.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="639.5" y="3381" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="642.52" y="3391.5" ></text>
</g>
<g >
<title>0x11bde7278 (83 samples, 0.53%)</title><rect x="15.0" y="741" width="6.2" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="18.00" y="751.5" ></text>
</g>
<g >
<title>0x110cd62a2 (3,461 samples, 21.89%)</title><rect x="15.0" y="917" width="258.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="18.00" y="927.5" >0x110cd62a2</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.6" y="1365" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="623.64" y="1375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (36 samples, 0.23%)</title><rect x="10.0" y="421" width="2.7" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (1,469 samples, 9.29%)</title><rect x="21.2" y="533" width="109.6" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="24.20" y="543.5" >`convert.lisp..</text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (114 samples, 0.72%)</title><rect x="620.9" y="2853" width="8.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="623.86" y="2863.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::initializeAnalysisImpl(llvm::Pass*) (2 samples, 0.01%)</title><rect x="609.0" y="4421" width="0.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="611.99" y="4431.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (78 samples, 0.49%)</title><rect x="852.0" y="3493" width="5.8" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="854.95" y="3503.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="1157.8" y="3429" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="1160.83" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1429" width="0.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="623.49" y="1439.5" ></text>
</g>
<g >
<title>`INVALIDATED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3253" width="284.1" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="13.00" y="3263.5" >`INVALIDATED-DISCRIMINATING-FUNCTION^C..</text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*, llvm::DominatorTree const*, llvm::CmpInst::Predicate, llvm::AssumptionCache*, llvm::Instruction const*, llvm::Value*, llvm::Value*) (2 samples, 0.01%)</title><rect x="602.9" y="4325" width="0.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="605.87" y="4335.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="1493" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="635.43" y="1503.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((BLOCK-AST T))^METHOD^^.152 (2 samples, 0.01%)</title><rect x="240.7" y="181" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="243.72" y="191.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.28 (17 samples, 0.11%)</title><rect x="620.9" y="789" width="1.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="623.86" y="799.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.01%)</title><rect x="663.9" y="3317" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="666.93" y="3327.5" ></text>
</g>
<g >
<title>`CATCH-FUNCTION^CORE^FN^^ (63 samples, 0.40%)</title><rect x="273.8" y="629" width="4.7" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="276.78" y="639.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (32 samples, 0.20%)</title><rect x="795.9" y="3525" width="2.4" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="798.90" y="3535.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (5 samples, 0.03%)</title><rect x="1156.6" y="3685" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="1159.64" y="3695.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="869" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="622.15" y="879.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (8 samples, 0.05%)</title><rect x="1187.9" y="469" width="0.6" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1190.91" y="479.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="878.9" y="3493" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="881.90" y="3503.5" ></text>
</g>
<g >
<title>`PERFORM-OUTCOME^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2069" width="284.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >`PERFORM-OUTCOME^CLOS^FN^^</text>
</g>
<g >
<title>0x1110a5606 (10 samples, 0.06%)</title><rect x="622.4" y="485" width="0.7" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="625.35" y="495.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (170 samples, 1.08%)</title><rect x="788.6" y="3621" width="12.7" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="791.58" y="3631.5" ></text>
</g>
<g >
<title>`wrapped_cl__gethash_T_spHashTableBase_spT_sp (6 samples, 0.04%)</title><rect x="1154.7" y="3733" width="0.4" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="1157.69" y="3743.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="650.2" y="3509" width="0.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="653.20" y="3519.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.6" y="2597" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="623.64" y="2607.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (27 samples, 0.17%)</title><rect x="1137.5" y="3589" width="2.0" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1140.53" y="3599.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.67 (7,681 samples, 48.59%)</title><rect x="616.2" y="4565" width="573.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="619.23" y="4575.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.67</text>
</g>
<g >
<title>`ltvc_toplevel_funcall (3,806 samples, 24.07%)</title><rect x="10.0" y="4629" width="284.1" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="13.00" y="4639.5" >`ltvc_toplevel_funcall</text>
</g>
<g >
<title>`GC_mark_from (27 samples, 0.17%)</title><rect x="796.1" y="3429" width="2.0" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="799.12" y="3439.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (27 samples, 0.17%)</title><rect x="630.3" y="2325" width="2.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="633.34" y="2335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="485" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="626.33" y="495.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (184 samples, 1.16%)</title><rect x="619.1" y="3557" width="13.7" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="622.07" y="3567.5" ></text>
</g>
<g >
<title>`core::Cache_O::vector_hash_key(gctools::Vec0&lt;gctools::smart_ptr&lt;core::T_O&gt; &gt;&amp;) (2 samples, 0.01%)</title><rect x="1173.8" y="3605" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="1176.80" y="3615.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const (8 samples, 0.05%)</title><rect x="926.3" y="3669" width="0.6" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="929.29" y="3679.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (82 samples, 0.52%)</title><rect x="1140.3" y="3573" width="6.1" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="1143.29" y="3583.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (2 samples, 0.01%)</title><rect x="240.7" y="405" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="243.72" y="415.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (27 samples, 0.17%)</title><rect x="630.3" y="2997" width="2.1" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="633.34" y="3007.5" ></text>
</g>
<g >
<title>0x1257602e2 (10 samples, 0.06%)</title><rect x="622.4" y="645" width="0.7" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="625.35" y="655.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (71 samples, 0.45%)</title><rect x="281.5" y="677" width="5.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="284.47" y="687.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (6 samples, 0.04%)</title><rect x="629.4" y="2597" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="632.45" y="2607.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="619.4" y="437" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="622.44" y="447.5" ></text>
</g>
<g >
<title>`GENERATE-OBJ-ASM^COMPILER^FN^^ (205 samples, 1.30%)</title><rect x="572.6" y="4597" width="15.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="575.57" y="4607.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1445" width="1.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="623.86" y="1455.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="643.9" y="2885" width="0.2" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="646.85" y="2895.5" ></text>
</g>
<g >
<title>0x123ae3ab3 (2 samples, 0.01%)</title><rect x="633.4" y="3749" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="636.40" y="3759.5" ></text>
</g>
<g >
<title>`llvm::ScheduleDAGMILive::schedule() (14 samples, 0.09%)</title><rect x="575.3" y="4373" width="1.0" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="578.26" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1013" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="623.64" y="1023.5" ></text>
</g>
<g >
<title>`INSTANCE-SET^CORE^FN^^ (4 samples, 0.03%)</title><rect x="809.3" y="3653" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="812.26" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="2405" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="622.15" y="2415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="625.7" y="1909" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="628.71" y="1919.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.02%)</title><rect x="623.7" y="885" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="626.70" y="895.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^.154 (71 samples, 0.45%)</title><rect x="281.5" y="597" width="5.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="284.47" y="607.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="625.3" y="1573" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="628.27" y="1583.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (294 samples, 1.86%)</title><rect x="147.5" y="69" width="21.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="150.49" y="79.5" >`..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="619.8" y="2501" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="622.82" y="2511.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="1176.9" y="3573" width="0.6" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="1179.94" y="3583.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="1701" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="632.74" y="1711.5" ></text>
</g>
<g >
<title>0x1501b4cfb (40 samples, 0.25%)</title><rect x="278.5" y="229" width="3.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="281.48" y="239.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="628.2" y="645" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="631.18" y="655.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_set_T_spintT_sp (3 samples, 0.02%)</title><rect x="1045.2" y="3701" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1048.20" y="3711.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="622.1" y="757" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="625.13" y="767.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoBase&lt;llvm::BasicBlock, llvm::Loop&gt;::analyze(llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; const&amp;) (2 samples, 0.01%)</title><rect x="614.6" y="4389" width="0.1" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="617.59" y="4399.5" ></text>
</g>
<g >
<title>`llvm::FindAvailableLoadedValue(llvm::LoadInst*, llvm::BasicBlock*, llvm::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::Instruction, false, false, void&gt;, false, false&gt;&amp;, unsigned int, llvm::AAResults*, bool*, unsigned int*) (2 samples, 0.01%)</title><rect x="613.2" y="4341" width="0.1" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="616.17" y="4351.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="662.7" y="3381" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="665.66" y="3391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1477" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="630.65" y="1487.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="622.1" y="821" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="625.13" y="831.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (52 samples, 0.33%)</title><rect x="656.2" y="3413" width="3.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="659.24" y="3423.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (3 samples, 0.02%)</title><rect x="808.4" y="3621" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="811.36" y="3631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (19 samples, 0.12%)</title><rect x="271.2" y="133" width="1.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="274.24" y="143.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (7 samples, 0.04%)</title><rect x="872.9" y="3013" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="875.85" y="3023.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.6" y="1349" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="623.64" y="1359.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="1221" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="626.33" y="1231.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.6" y="2149" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="623.64" y="2159.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T T MULTIPLE-SUCCESSORS-MIXIN T))^METHOD^^ (4 samples, 0.03%)</title><rect x="873.4" y="3605" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="876.45" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.9" y="1237" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="628.94" y="1247.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="618.6" y="3813" width="0.2" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="621.62" y="3823.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (3 samples, 0.02%)</title><rect x="1167.5" y="3589" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1170.46" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.4" y="197" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="632.45" y="207.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.01%)</title><rect x="647.4" y="3237" width="0.2" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="650.43" y="3247.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (83 samples, 0.53%)</title><rect x="15.0" y="725" width="6.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="18.00" y="735.5" ></text>
</g>
<g >
<title>0x1501b4d6b (71 samples, 0.45%)</title><rect x="281.5" y="549" width="5.3" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="284.47" y="559.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (5 samples, 0.03%)</title><rect x="905.2" y="3653" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="908.24" y="3663.5" ></text>
</g>
<g >
<title>`PERFORM-OUTCOME^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2533" width="284.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="13.00" y="2543.5" >`PERFORM-OUTCOME^CLOS^FN^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1365" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="626.70" y="1375.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (37 samples, 0.23%)</title><rect x="1168.6" y="3621" width="2.7" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1171.58" y="3631.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="1176.9" y="3429" width="0.6" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1179.94" y="3439.5" ></text>
</g>
<g >
<title>`client_validate (3 samples, 0.02%)</title><rect x="816.1" y="3589" width="0.2" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="819.12" y="3599.5" ></text>
</g>
<g >
<title>`GC_help_marker (3,658 samples, 23.14%)</title><rect x="294.1" y="4757" width="273.0" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="297.08" y="4767.5" >`GC_help_marker</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="628.2" y="837" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="631.18" y="847.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::find_imp(void const*) const (2 samples, 0.01%)</title><rect x="579.9" y="4309" width="0.1" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="582.88" y="4319.5" ></text>
</g>
<g >
<title>`LOAD^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="4245" width="284.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="13.00" y="4255.5" >`LOAD^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`llvm::X86AsmPrinter::EmitInstruction(llvm::MachineInstr const*) (6 samples, 0.04%)</title><rect x="586.5" y="4373" width="0.4" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="589.45" y="4383.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="782.3" y="3637" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="785.31" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (21 samples, 0.13%)</title><rect x="656.7" y="2997" width="1.6" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="659.69" y="3007.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (24 samples, 0.15%)</title><rect x="1184.9" y="2389" width="1.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="1187.92" y="2399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2149" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="633.04" y="2159.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (16 samples, 0.10%)</title><rect x="619.1" y="2805" width="1.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="622.07" y="2815.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="626.2" y="773" width="0.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="629.16" y="783.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.86 (2 samples, 0.01%)</title><rect x="656.7" y="2613" width="0.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="659.69" y="2623.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (24 samples, 0.15%)</title><rect x="619.1" y="3093" width="1.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="622.07" y="3103.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="623.7" y="1141" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="626.70" y="1151.5" ></text>
</g>
<g >
<title>0x1257602e2 (3 samples, 0.02%)</title><rect x="627.7" y="1653" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="630.65" y="1663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="53" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="635.43" y="63.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="1157" width="0.7" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="625.35" y="1167.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.01%)</title><rect x="901.2" y="3541" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="904.21" y="3551.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^.14 (96 samples, 0.61%)</title><rect x="286.9" y="805" width="7.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="289.92" y="815.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (8 samples, 0.05%)</title><rect x="997.7" y="3157" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="1000.65" y="3167.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT^CLEAVIR-PARTIAL-INLINING^FN^^ (7 samples, 0.04%)</title><rect x="654.5" y="3541" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="657.53" y="3551.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (8 samples, 0.05%)</title><rect x="1187.9" y="565" width="0.6" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="1190.91" y="575.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="14.9" y="741" width="0.1" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="17.85" y="751.5" ></text>
</g>
<g >
<title>0x150117ef3 (11 samples, 0.07%)</title><rect x="616.9" y="3781" width="0.8" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="619.91" y="3791.5" ></text>
</g>
<g >
<title>`PERFORM-PLAN^ASDF/PLAN^((T))^METHOD^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2693" width="284.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="13.00" y="2703.5" >`PERFORM-PLAN^ASDF/PLAN^((T))^METHOD^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="619.8" y="2485" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="622.82" y="2495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="565" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="635.43" y="575.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (10 samples, 0.06%)</title><rect x="12.8" y="181" width="0.7" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="15.76" y="191.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.8" y="437" width="0.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="626.77" y="447.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="624.0" y="997" width="0.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="627.00" y="1007.5" ></text>
</g>
<g >
<title>`INVALIDATED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="4389" width="284.1" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="13.00" y="4399.5" >`INVALIDATED-DISCRIMINATING-FUNCTION^C..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="619.4" y="565" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="622.44" y="575.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="622.1" y="597" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="625.13" y="607.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (28 samples, 0.18%)</title><rect x="796.0" y="3477" width="2.1" height="15.0" fill="rgb(208,61,61)" rx="2" ry="2" />
<text  x="799.04" y="3487.5" ></text>
</g>
<g >
<title>`COMPILE^COMMON-LISP^FN^^ (12 samples, 0.08%)</title><rect x="872.5" y="3493" width="0.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="875.48" y="3503.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (6 samples, 0.04%)</title><rect x="619.4" y="1861" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="622.37" y="1871.5" ></text>
</g>
<g >
<title>`core::CxxObject_O::~CxxObject_O() (7 samples, 0.04%)</title><rect x="836.2" y="3621" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="839.20" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.1" y="1045" width="0.2" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="626.10" y="1055.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.24 (21 samples, 0.13%)</title><rect x="656.7" y="2677" width="1.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="659.69" y="2687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="1365" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="632.74" y="1375.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T))^METHOD^^ (50 samples, 0.32%)</title><rect x="638.6" y="3589" width="3.8" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="641.63" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="628.0" y="981" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="630.95" y="991.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (12 samples, 0.08%)</title><rect x="872.5" y="3333" width="0.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="875.48" y="3343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="405" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="622.15" y="415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.8" y="965" width="0.1" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="628.79" y="975.5" ></text>
</g>
<g >
<title>0x11198161b (3,806 samples, 24.07%)</title><rect x="10.0" y="4005" width="284.1" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="13.00" y="4015.5" >0x11198161b</text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1973" width="284.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" >`FUNCALL^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T CLASP-GLOBAL-ENVIRONMENT))^METHOD^^.229 (6 samples, 0.04%)</title><rect x="14.4" y="85" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="17.40" y="95.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.8" y="1445" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="628.79" y="1455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="229" width="0.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="622.44" y="239.5" ></text>
</g>
<g >
<title>0x1501b4cfb (2 samples, 0.01%)</title><rect x="240.7" y="357" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="243.72" y="367.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (6 samples, 0.04%)</title><rect x="1177.5" y="3733" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1180.53" y="3743.5" ></text>
</g>
<g >
<title>0x128fec001 (2 samples, 0.01%)</title><rect x="1167.8" y="3637" width="0.1" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1170.76" y="3647.5" ></text>
</g>
<g >
<title>0x11132def6 (4 samples, 0.03%)</title><rect x="1022.0" y="3717" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1024.98" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1365" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="628.27" y="1375.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp;) (73 samples, 0.46%)</title><rect x="587.9" y="4501" width="5.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="590.95" y="4511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="627.1" y="1989" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="630.13" y="1999.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.26 (2 samples, 0.01%)</title><rect x="656.7" y="2053" width="0.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="659.69" y="2063.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (2 samples, 0.01%)</title><rect x="1174.9" y="3525" width="0.2" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="1177.92" y="3535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (12 samples, 0.08%)</title><rect x="626.2" y="165" width="0.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="629.16" y="175.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="632.4" y="2229" width="0.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="635.43" y="2239.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="14.9" y="853" width="0.1" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="17.85" y="863.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="1181.1" y="3797" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="1184.12" y="3807.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ScheduleDAGRRList::Schedule() (5 samples, 0.03%)</title><rect x="577.9" y="4341" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="580.94" y="4351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (17 samples, 0.11%)</title><rect x="620.9" y="1413" width="1.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="623.86" y="1423.5" ></text>
</g>
<g >
<title>0x11171939a (3 samples, 0.02%)</title><rect x="645.8" y="3237" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="648.79" y="3247.5" ></text>
</g>
<g >
<title>`GC_malloc (2 samples, 0.01%)</title><rect x="788.0" y="3621" width="0.1" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="790.98" y="3631.5" ></text>
</g>
<g >
<title>0x1501b4c8b (71 samples, 0.45%)</title><rect x="281.5" y="661" width="5.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="284.47" y="671.5" ></text>
</g>
<g >
<title>`cc_fdefinition (5 samples, 0.03%)</title><rect x="958.3" y="3749" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="961.31" y="3759.5" ></text>
</g>
<g >
<title>0x1501b4cfb (7 samples, 0.04%)</title><rect x="173.8" y="389" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="176.76" y="399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="1013" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="635.43" y="1023.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="14.9" y="293" width="0.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="17.85" y="303.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (13 samples, 0.08%)</title><rect x="622.1" y="1573" width="1.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="625.13" y="1583.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="917" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="635.43" y="927.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoBase&lt;llvm::BasicBlock, llvm::Loop&gt;::analyze(llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; const&amp;) (2 samples, 0.01%)</title><rect x="605.1" y="4389" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="608.11" y="4399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (7 samples, 0.04%)</title><rect x="628.0" y="1541" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="630.95" y="1551.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.6" y="1349" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="633.64" y="1359.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.9" y="1333" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="628.94" y="1343.5" ></text>
</g>
<g >
<title>0x1110a5606 (13 samples, 0.08%)</title><rect x="624.3" y="1781" width="1.0" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="627.30" y="1791.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.8" y="1125" width="0.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="628.79" y="1135.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="629.4" y="245" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="632.45" y="255.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2565" width="284.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="13.00" y="2575.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (3 samples, 0.02%)</title><rect x="997.7" y="2997" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1000.65" y="3007.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (6 samples, 0.04%)</title><rect x="1012.9" y="3397" width="0.4" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="1015.88" y="3407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.4" y="389" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="632.45" y="399.5" ></text>
</g>
<g >
<title>`cc_protect_alloca (2 samples, 0.01%)</title><rect x="786.3" y="3637" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="789.34" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="622.1" y="565" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="625.13" y="575.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (51 samples, 0.32%)</title><rect x="874.3" y="3445" width="3.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="877.34" y="3455.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.5" y="2517" width="0.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="623.49" y="2527.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Function_O&gt; gctools::As&lt;gctools::smart_ptr&lt;core::Function_O&gt;, gctools::smart_ptr&lt;core::T_O&gt; &gt;(gctools::smart_ptr&lt;core::T_O&gt; const&amp;) (5 samples, 0.03%)</title><rect x="955.6" y="3733" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="958.63" y="3743.5" ></text>
</g>
<g >
<title>`DISCERN-TRAPPERS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (36 samples, 0.23%)</title><rect x="1019.0" y="3749" width="2.7" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="1022.00" y="3759.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="622.1" y="1045" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="625.13" y="1055.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="644.8" y="3509" width="0.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="647.82" y="3519.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.5" y="1925" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="623.49" y="1935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="1013" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="631.18" y="1023.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (17 samples, 0.11%)</title><rect x="620.9" y="1397" width="1.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="623.86" y="1407.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (435 samples, 2.75%)</title><rect x="240.9" y="693" width="32.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="243.86" y="703.5" >`C..</text>
</g>
<g >
<title>0x1110a5456 (2 samples, 0.01%)</title><rect x="624.0" y="1365" width="0.1" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="627.00" y="1375.5" ></text>
</g>
<g >
<title>`eliminateTailRecursion(llvm::Function&amp;, llvm::TargetTransformInfo const*, llvm::AAResults*, llvm::OptimizationRemarkEmitter*) (3 samples, 0.02%)</title><rect x="599.3" y="4405" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="602.29" y="4415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="628.2" y="341" width="0.3" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="631.18" y="351.5" ></text>
</g>
<g >
<title>`SPECIALIZE^CLEAVIR-HIR-TO-MIR^((CDR-INSTRUCTION CLASP T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="1181.9" y="3765" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="1184.94" y="3775.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (4 samples, 0.03%)</title><rect x="966.0" y="3701" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="969.00" y="3711.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="593.0" y="4341" width="0.2" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="596.02" y="4351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="625.3" y="101" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="628.27" y="111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="632.4" y="2245" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="635.43" y="2255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="624.0" y="2053" width="1.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="627.00" y="2063.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="623.1" y="1397" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="626.10" y="1407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (16 samples, 0.10%)</title><rect x="619.1" y="2837" width="1.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="622.07" y="2847.5" ></text>
</g>
<g >
<title>`NTHCDR^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="878.3" y="3317" width="0.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="881.30" y="3327.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3013" width="284.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="13.00" y="3023.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::smart_ptr&lt;core::T_O&gt;, void*) (6 samples, 0.04%)</title><rect x="989.0" y="3669" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="991.99" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1077" width="1.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="627.30" y="1087.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="632.4" y="469" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="635.43" y="479.5" ></text>
</g>
<g >
<title>0x11171939a (144 samples, 0.91%)</title><rect x="896.6" y="3733" width="10.7" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="899.59" y="3743.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt;::smart_ptr() (2 samples, 0.01%)</title><rect x="1017.5" y="3717" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1020.50" y="3727.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.28 (16 samples, 0.10%)</title><rect x="635.6" y="3365" width="1.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="638.57" y="3375.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.44 (4 samples, 0.03%)</title><rect x="823.4" y="2261" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="826.44" y="2271.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (86 samples, 0.54%)</title><rect x="1183.1" y="2933" width="6.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="1186.13" y="2943.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="14.9" y="773" width="0.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="17.85" y="783.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="14.9" y="421" width="0.1" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="17.85" y="431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="965" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="622.15" y="975.5" ></text>
</g>
<g >
<title>`core::core__load_source(gctools::smart_ptr&lt;core::T_O&gt;, bool, bool, gctools::smart_ptr&lt;core::T_O&gt;) (3,806 samples, 24.07%)</title><rect x="10.0" y="4149" width="284.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="13.00" y="4159.5" >`core::core__load_source(gctools::smar..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1285" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="622.15" y="1295.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="1717" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="622.15" y="1727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.1" y="1653" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="627.15" y="1663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.3" y="2037" width="0.1" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="623.27" y="2047.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="624.3" y="757" width="1.0" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="627.30" y="767.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (34 samples, 0.22%)</title><rect x="240.9" y="69" width="2.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="243.86" y="79.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (82 samples, 0.52%)</title><rect x="15.0" y="405" width="6.1" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="18.00" y="415.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'EVAL-WHEN) T T T))^METHOD^^ (83 samples, 0.53%)</title><rect x="15.0" y="677" width="6.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="18.00" y="687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2533" width="2.1" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="633.34" y="2543.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (6 samples, 0.04%)</title><rect x="766.0" y="3621" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="768.96" y="3631.5" ></text>
</g>
<g >
<title>`CALL-WITH-ENOUGH-PATHNAME^UIOP/PATHNAME^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1925" width="284.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" >`CALL-WITH-ENOUGH-PATHNAME^UIOP/PATHNA..</text>
</g>
<g >
<title>0x1257602e2 (4 samples, 0.03%)</title><rect x="629.4" y="2037" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="632.45" y="2047.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core::T_O&gt;) (182 samples, 1.15%)</title><rect x="844.4" y="3557" width="13.6" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="847.41" y="3567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (23 samples, 0.15%)</title><rect x="630.6" y="1557" width="1.8" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="633.64" y="1567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="2053" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="628.27" y="2063.5" ></text>
</g>
<g >
<title>0x123ae11b3 (2 samples, 0.01%)</title><rect x="1157.2" y="3461" width="0.1" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1160.16" y="3471.5" ></text>
</g>
<g >
<title>0x110e002aa (21 samples, 0.13%)</title><rect x="735.7" y="3653" width="1.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="738.66" y="3663.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.22 (9 samples, 0.06%)</title><rect x="997.6" y="3221" width="0.6" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="1000.58" y="3231.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (61 samples, 0.39%)</title><rect x="273.9" y="213" width="4.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="276.93" y="223.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (184 samples, 1.16%)</title><rect x="619.1" y="3573" width="13.7" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="622.07" y="3583.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getNonLocalPointerDependency(llvm::Instruction*, llvm::SmallVectorImpl&lt;llvm::NonLocalDepResult&gt;&amp;) (3 samples, 0.02%)</title><rect x="606.6" y="4309" width="0.2" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="609.61" y="4319.5" ></text>
</g>
<g >
<title>`llvmo::ClaspJIT_O::addModule(gctools::smart_ptr&lt;llvmo::Module_O&gt;) (2 samples, 0.01%)</title><rect x="640.2" y="2773" width="0.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="643.19" y="2783.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::run() (18 samples, 0.11%)</title><rect x="594.7" y="4437" width="1.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="597.74" y="4447.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (3 samples, 0.02%)</title><rect x="645.8" y="3221" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="648.79" y="3231.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (32 samples, 0.20%)</title><rect x="795.9" y="3541" width="2.4" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="798.90" y="3551.5" ></text>
</g>
<g >
<title>0x1110a4be6 (4 samples, 0.03%)</title><rect x="628.2" y="997" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="631.18" y="1007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.6" y="1077" width="0.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="632.60" y="1087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="885" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="633.64" y="895.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::freePass(llvm::Pass*, llvm::StringRef, llvm::PassDebuggingString) (4 samples, 0.03%)</title><rect x="587.2" y="4405" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="590.20" y="4415.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="650.3" y="3333" width="0.1" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="653.27" y="3343.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="997.9" y="2981" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="1000.87" y="2991.5" ></text>
</g>
<g >
<title>`HOIST-LOAD-TIME-VALUE^CLASP-CLEAVIR-AST^FN^^ (34 samples, 0.22%)</title><rect x="616.5" y="3845" width="2.6" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="619.53" y="3855.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (27 samples, 0.17%)</title><rect x="849.0" y="3509" width="2.0" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="851.97" y="3519.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.3" y="1733" width="0.1" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="623.27" y="1743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="965" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="630.95" y="975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1269" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="635.43" y="1279.5" ></text>
</g>
<g >
<title>0x111319001 (2 samples, 0.01%)</title><rect x="896.2" y="3733" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="899.21" y="3743.5" ></text>
</g>
<g >
<title>0x110cd62a2 (55 samples, 0.35%)</title><rect x="169.4" y="277" width="4.1" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="172.43" y="287.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="1221" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="631.18" y="1231.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="628.2" y="485" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="631.18" y="495.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="625.8" y="1189" width="0.1" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="628.79" y="1199.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="640.4" y="2725" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="643.42" y="2735.5" ></text>
</g>
<g >
<title>0x1110a62f6 (24 samples, 0.15%)</title><rect x="630.6" y="1685" width="1.8" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="633.57" y="1695.5" ></text>
</g>
<g >
<title>0x1290a8598 (829 samples, 5.24%)</title><rect x="174.3" y="469" width="61.9" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="177.28" y="479.5" >0x1290..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="1157" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="628.94" y="1167.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.7" y="1413" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="632.74" y="1423.5" ></text>
</g>
<g >
<title>`INVALIDATED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2149" width="284.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="13.00" y="2159.5" >`INVALIDATED-DISCRIMINATING-FUNCTION^C..</text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (92 samples, 0.58%)</title><rect x="287.1" y="213" width="6.9" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="290.14" y="223.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="629.4" y="2101" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="632.45" y="2111.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T T T T))^METHOD^^ (79 samples, 0.50%)</title><rect x="644.8" y="3653" width="5.9" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="647.82" y="3663.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (25 samples, 0.16%)</title><rect x="942.0" y="3637" width="1.9" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="945.04" y="3647.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (55 samples, 0.35%)</title><rect x="169.4" y="261" width="4.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="172.43" y="271.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (6 samples, 0.04%)</title><rect x="662.6" y="3413" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="665.59" y="3423.5" ></text>
</g>
<g >
<title>0x110d5dedb (8 samples, 0.05%)</title><rect x="975.0" y="3717" width="0.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="977.96" y="3727.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (4 samples, 0.03%)</title><rect x="871.1" y="3669" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="874.13" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1717" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="626.70" y="1727.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (259 samples, 1.64%)</title><rect x="1156.6" y="3749" width="19.4" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1159.64" y="3759.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="2037" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="622.15" y="2047.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (23 samples, 0.15%)</title><rect x="874.3" y="3429" width="1.8" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="877.34" y="3439.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (361 samples, 2.28%)</title><rect x="244.3" y="165" width="26.9" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="247.30" y="175.5" >`..</text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (17 samples, 0.11%)</title><rect x="620.9" y="757" width="1.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="623.86" y="767.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (83 samples, 0.53%)</title><rect x="15.0" y="613" width="6.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="18.00" y="623.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (6 samples, 0.04%)</title><rect x="619.4" y="2421" width="0.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="622.37" y="2431.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.32 (6 samples, 0.04%)</title><rect x="823.3" y="2469" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="826.29" y="2479.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="628.0" y="1077" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="630.95" y="1087.5" ></text>
</g>
<g >
<title>`core::cl__gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::HashTableBase_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (7 samples, 0.04%)</title><rect x="864.5" y="3653" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="867.49" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.03%)</title><rect x="625.3" y="1765" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="628.27" y="1775.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (9 samples, 0.06%)</title><rect x="985.7" y="3653" width="0.7" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="988.71" y="3663.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (126 samples, 0.80%)</title><rect x="130.8" y="133" width="9.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="133.84" y="143.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^923^TOP-COMPILE-FILE.283 (3 samples, 0.02%)</title><rect x="1182.9" y="3141" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="1185.91" y="3151.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.293 (17 samples, 0.11%)</title><rect x="620.9" y="1141" width="1.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="623.86" y="1151.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitCallSite(llvm::CallSite) (2 samples, 0.01%)</title><rect x="590.6" y="4405" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="593.63" y="4415.5" ></text>
</g>
<g >
<title>0x1257602e2 (17 samples, 0.11%)</title><rect x="620.9" y="1925" width="1.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="623.86" y="1935.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Symbol_O&gt;::operator-&gt;() (4 samples, 0.03%)</title><rect x="956.0" y="3733" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="959.00" y="3743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="627.7" y="1717" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="630.65" y="1727.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.11 (7 samples, 0.04%)</title><rect x="874.9" y="3013" width="0.6" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="877.94" y="3023.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (2 samples, 0.01%)</title><rect x="173.6" y="405" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="176.61" y="415.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core::Cons_O&gt; &gt;::allocate_kind(gctools::Header_s::Value const&amp;, unsigned long, void const*) (46 samples, 0.29%)</title><rect x="948.5" y="3605" width="3.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="951.54" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="619.4" y="933" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="622.44" y="943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (38 samples, 0.24%)</title><rect x="625.6" y="2453" width="2.9" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="628.64" y="2463.5" ></text>
</g>
<g >
<title>0x111337578 (15 samples, 0.09%)</title><rect x="1187.5" y="1061" width="1.1" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1190.46" y="1071.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.295 (7 samples, 0.04%)</title><rect x="874.9" y="3221" width="0.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="877.94" y="3231.5" ></text>
</g>
<g >
<title>`CALL-WITH-ASDF-SESSION^ASDF/SESSION^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3397" width="284.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="13.00" y="3407.5" >`CALL-WITH-ASDF-SESSION^ASDF/SESSION^F..</text>
</g>
<g >
<title>0x110c56edb (6 samples, 0.04%)</title><rect x="698.6" y="3653" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="701.64" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.05%)</title><rect x="629.4" y="2773" width="0.6" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="632.45" y="2783.5" ></text>
</g>
<g >
<title>`BUILD-CST^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.01%)</title><rect x="272.7" y="373" width="0.1" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="275.66" y="383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.3" y="1893" width="0.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="623.27" y="1903.5" ></text>
</g>
<g >
<title>`SYMBOLP^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="904.3" y="3621" width="0.1" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="907.27" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="2005" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="630.65" y="2015.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (35 samples, 0.22%)</title><rect x="1173.1" y="3637" width="2.6" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="1176.13" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="623.1" y="1333" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="626.10" y="1343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (125 samples, 0.79%)</title><rect x="620.9" y="3029" width="9.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="623.86" y="3039.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef&lt;llvm::Constant*&gt;, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (2 samples, 0.01%)</title><rect x="610.6" y="4341" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="613.64" y="4351.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (2 samples, 0.01%)</title><rect x="639.5" y="3205" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="642.52" y="3215.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="650.2" y="3413" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="653.20" y="3423.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="1021.5" y="3109" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="1024.46" y="3119.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="627.2" y="1109" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="630.21" y="1119.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (3 samples, 0.02%)</title><rect x="650.2" y="3429" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="653.20" y="3439.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^199^TOP-COMPILE-FILE.138 (3,806 samples, 24.07%)</title><rect x="10.0" y="1333" width="284.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="13.00" y="1343.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (7 samples, 0.04%)</title><rect x="643.8" y="3013" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="646.78" y="3023.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="645.0" y="3557" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="648.05" y="3567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="628.2" y="453" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="631.18" y="463.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.66 (6 samples, 0.04%)</title><rect x="823.3" y="2837" width="0.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="826.29" y="2847.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="638.3" y="3445" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="641.25" y="3455.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD^^ (2 samples, 0.01%)</title><rect x="653.6" y="3461" width="0.1" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="656.55" y="3471.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="733.9" y="3621" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="736.94" y="3631.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((MULTIPLE-TO-FIXED-INSTRUCTION T ABI-X86-64 T))^METHOD^^ (2 samples, 0.01%)</title><rect x="1187.8" y="501" width="0.1" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="1190.76" y="511.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (125 samples, 0.79%)</title><rect x="620.9" y="3077" width="9.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="623.86" y="3087.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.3" y="373" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="626.33" y="383.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="622.1" y="453" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="625.13" y="463.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (2 samples, 0.01%)</title><rect x="948.6" y="3525" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="951.61" y="3535.5" ></text>
</g>
<g >
<title>0x1501b4cfb (40 samples, 0.25%)</title><rect x="278.5" y="293" width="3.0" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="281.48" y="303.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (3 samples, 0.02%)</title><rect x="1156.8" y="3061" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1159.78" y="3071.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD^^ (2 samples, 0.01%)</title><rect x="648.4" y="3333" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="651.40" y="3343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="789" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="628.94" y="799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (3 samples, 0.02%)</title><rect x="623.1" y="1589" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="626.10" y="1599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="622.1" y="37" width="0.2" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="625.13" y="47.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (40 samples, 0.25%)</title><rect x="278.5" y="373" width="3.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="281.48" y="383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="625.3" y="485" width="0.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="628.27" y="495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="2581" width="0.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="623.64" y="2591.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (7 samples, 0.04%)</title><rect x="1176.9" y="3317" width="0.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="1179.94" y="3327.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^91^TOP-COMPILE-FILE.104 (3,806 samples, 24.07%)</title><rect x="10.0" y="1205" width="284.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="646.3" y="3349" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="649.31" y="3359.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="624.1" y="1605" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="627.15" y="1615.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (5 samples, 0.03%)</title><rect x="906.8" y="3701" width="0.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="909.81" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="625.7" y="2117" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="628.71" y="2127.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="620.3" y="2405" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="623.27" y="2415.5" ></text>
</g>
<g >
<title>0x123ae11b3 (4 samples, 0.03%)</title><rect x="662.0" y="3349" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="664.99" y="3359.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (20 samples, 0.13%)</title><rect x="630.8" y="149" width="1.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="633.79" y="159.5" ></text>
</g>
<g >
<title>0x1258cfc3b (2 samples, 0.01%)</title><rect x="173.6" y="389" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="176.61" y="399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="628.2" y="1317" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="631.18" y="1327.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (2 samples, 0.01%)</title><rect x="632.4" y="117" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="635.43" y="127.5" ></text>
</g>
<g >
<title>0x1110a3f86 (2 samples, 0.01%)</title><rect x="628.6" y="2533" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="631.62" y="2543.5" ></text>
</g>
<g >
<title>0x110f802a0 (2 samples, 0.01%)</title><rect x="975.9" y="3717" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="978.93" y="3727.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.28 (6 samples, 0.04%)</title><rect x="823.3" y="2501" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="826.29" y="2511.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (96 samples, 0.61%)</title><rect x="801.4" y="3653" width="7.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="804.42" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.3" y="1813" width="0.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="623.27" y="1823.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.22 (3 samples, 0.02%)</title><rect x="874.0" y="3093" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="876.97" y="3103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1797" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="630.65" y="1807.5" ></text>
</g>
<g >
<title>0x11171939a (6 samples, 0.04%)</title><rect x="649.3" y="3461" width="0.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="652.30" y="3471.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.24 (89 samples, 0.56%)</title><rect x="1182.9" y="3461" width="6.7" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="1185.91" y="3471.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (9 samples, 0.06%)</title><rect x="1162.8" y="3605" width="0.6" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1165.76" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="1093" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="632.45" y="1103.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (122 samples, 0.77%)</title><rect x="587.9" y="4597" width="9.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="590.95" y="4607.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (1,469 samples, 9.29%)</title><rect x="21.2" y="69" width="109.6" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="24.20" y="79.5" >`convert.lisp..</text>
</g>
<g >
<title>0x110cd62a2 (3,708 samples, 23.45%)</title><rect x="10.0" y="1093" width="276.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" >0x110cd62a2</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="629.4" y="1461" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="632.45" y="1471.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="662.1" y="3317" width="0.2" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="665.06" y="3327.5" ></text>
</g>
<g >
<title>0x1110a4be6 (17 samples, 0.11%)</title><rect x="620.9" y="1461" width="1.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="623.86" y="1471.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (2 samples, 0.01%)</title><rect x="14.9" y="229" width="0.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="17.85" y="239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (20 samples, 0.13%)</title><rect x="622.1" y="1957" width="1.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="625.13" y="1967.5" ></text>
</g>
<g >
<title>`macro-functions.lisp-macro-functions194^173^TOP-COMPILE-FILE.40 (96 samples, 0.61%)</title><rect x="286.9" y="437" width="7.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="289.92" y="447.5" ></text>
</g>
<g >
<title>`INVALIDATED-DISPATCH-FUNCTION^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="4373" width="284.1" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="13.00" y="4383.5" >`INVALIDATED-DISPATCH-FUNCTION^CLOS^FN^^</text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (48 samples, 0.30%)</title><rect x="830.4" y="3637" width="3.6" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="833.38" y="3647.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (51 samples, 0.32%)</title><rect x="169.7" y="85" width="3.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="172.73" y="95.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="632.4" y="2981" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="635.43" y="2991.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.34 (6 samples, 0.04%)</title><rect x="823.3" y="2453" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="826.29" y="2463.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (6 samples, 0.04%)</title><rect x="619.4" y="2533" width="0.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="622.37" y="2543.5" ></text>
</g>
<g >
<title>`llvm::MachineFunctionPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="997.7" y="2917" width="0.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="1000.72" y="2927.5" ></text>
</g>
<g >
<title>`COMPILE^COMMON-LISP^FN^^ (5 samples, 0.03%)</title><rect x="1156.6" y="3589" width="0.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="1159.64" y="3599.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (2 samples, 0.01%)</title><rect x="173.6" y="373" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="176.61" y="383.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^.154 (40 samples, 0.25%)</title><rect x="278.5" y="133" width="3.0" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="281.48" y="143.5" ></text>
</g>
<g >
<title>0x11151fa3b (2 samples, 0.01%)</title><rect x="633.4" y="3701" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="636.40" y="3711.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (8 samples, 0.05%)</title><rect x="636.2" y="3125" width="0.6" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="639.16" y="3135.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (32 samples, 0.20%)</title><rect x="1186.7" y="2325" width="2.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="1189.72" y="2335.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="437" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="635.43" y="447.5" ></text>
</g>
<g >
<title>0x1110a4be6 (10 samples, 0.06%)</title><rect x="622.4" y="1349" width="0.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="625.35" y="1359.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^METHOD^^ (4 samples, 0.03%)</title><rect x="169.4" y="37" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="172.43" y="47.5" ></text>
</g>
<g >
<title>`CCLASP-EVAL-WITH-ENV^CLASP-CLEAVIR^((T T))^METHOD^^.221 (3,806 samples, 24.07%)</title><rect x="10.0" y="4069" width="284.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="13.00" y="4079.5" >`CCLASP-EVAL-WITH-ENV^CLASP-CLEAVIR^((..</text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.26 (86 samples, 0.54%)</title><rect x="1183.1" y="2981" width="6.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="1186.13" y="2991.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="627.1" y="1749" width="0.4" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="630.13" y="1759.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (6 samples, 0.04%)</title><rect x="876.5" y="2613" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="879.51" y="2623.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (21 samples, 0.13%)</title><rect x="624.0" y="2133" width="1.6" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="627.00" y="2143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="133" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="635.43" y="143.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^192^TOP-COMPILE-FILE.19 (2 samples, 0.01%)</title><rect x="656.7" y="1893" width="0.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="659.69" y="1903.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="741" width="0.7" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="625.35" y="751.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvmo::PassManager_O, bool (llvm::legacy::PassManager::*)(llvm::Module&amp;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="1156.8" y="3077" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1159.78" y="3087.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="625.7" y="1925" width="0.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="628.71" y="1935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1221" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="623.64" y="1231.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (43 samples, 0.27%)</title><rect x="918.5" y="3701" width="3.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="921.46" y="3711.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (79 samples, 0.50%)</title><rect x="644.8" y="3669" width="5.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="647.82" y="3679.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (18 samples, 0.11%)</title><rect x="663.2" y="3477" width="1.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="666.18" y="3487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1605" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="622.15" y="1615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (38 samples, 0.24%)</title><rect x="625.6" y="2389" width="2.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="628.64" y="2399.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (5 samples, 0.03%)</title><rect x="619.4" y="869" width="0.4" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="622.44" y="879.5" ></text>
</g>
<g >
<title>0x110c56de0 (2 samples, 0.01%)</title><rect x="694.8" y="3653" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="697.83" y="3663.5" ></text>
</g>
<g >
<title>`CODEGEN-IF^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="885" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="826.51" y="895.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="1829" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="635.43" y="1839.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CorrelatedValuePropagation::runOnFunction(llvm::Function&amp;) (7 samples, 0.04%)</title><rect x="588.0" y="4469" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="591.02" y="4479.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (4 samples, 0.03%)</title><rect x="902.6" y="3589" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="905.63" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="997" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="626.10" y="1007.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (16 samples, 0.10%)</title><rect x="823.9" y="3029" width="1.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="826.89" y="3039.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="627.7" y="965" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="630.65" y="975.5" ></text>
</g>
<g >
<title>0x123ae11b3 (3 samples, 0.02%)</title><rect x="651.3" y="3525" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="654.32" y="3535.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="632.4" y="3269" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="635.43" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (17 samples, 0.11%)</title><rect x="620.9" y="2053" width="1.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="623.86" y="2063.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.30 (12 samples, 0.08%)</title><rect x="872.5" y="3557" width="0.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="875.48" y="3567.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (4 samples, 0.03%)</title><rect x="1021.7" y="3733" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1024.68" y="3743.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.01%)</title><rect x="811.3" y="3621" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="814.35" y="3631.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.12 (7 samples, 0.04%)</title><rect x="1176.9" y="3477" width="0.6" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="1179.94" y="3487.5" ></text>
</g>
<g >
<title>0x11171939a (8 samples, 0.05%)</title><rect x="652.6" y="3621" width="0.6" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="655.58" y="3631.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (5 samples, 0.03%)</title><rect x="1103.1" y="3717" width="0.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="1106.12" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="619.4" y="1285" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="622.44" y="1295.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="628.0" y="693" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="630.95" y="703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (16 samples, 0.10%)</title><rect x="619.1" y="2773" width="1.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="622.07" y="2783.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (18 samples, 0.11%)</title><rect x="13.5" y="613" width="1.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="16.51" y="623.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (6 samples, 0.04%)</title><rect x="619.4" y="2405" width="0.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="622.37" y="2415.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (2 samples, 0.01%)</title><rect x="1018.5" y="3733" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="1021.55" y="3743.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (829 samples, 5.24%)</title><rect x="174.3" y="261" width="61.9" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="177.28" y="271.5" >`conve..</text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^351^TOP-COMPILE-FILE.28 (4 samples, 0.03%)</title><rect x="823.4" y="2037" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="826.44" y="2047.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (6 samples, 0.04%)</title><rect x="619.4" y="2197" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="622.37" y="2207.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (14 samples, 0.09%)</title><rect x="645.6" y="3381" width="1.0" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="648.57" y="3391.5" ></text>
</g>
<g >
<title>0x1258cfc3b (63 samples, 0.40%)</title><rect x="273.8" y="725" width="4.7" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="276.78" y="735.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (39 samples, 0.25%)</title><rect x="656.5" y="3381" width="2.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="659.47" y="3391.5" ></text>
</g>
<g >
<title>0x110f822a7 (9 samples, 0.06%)</title><rect x="1166.0" y="3637" width="0.7" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1169.04" y="3647.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (4 samples, 0.03%)</title><rect x="663.9" y="3397" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="666.93" y="3407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (17 samples, 0.11%)</title><rect x="620.9" y="1525" width="1.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="623.86" y="1535.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (4 samples, 0.03%)</title><rect x="643.5" y="2981" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="646.48" y="2991.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.26 (89 samples, 0.56%)</title><rect x="1182.9" y="3445" width="6.7" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="1185.91" y="3455.5" ></text>
</g>
<g >
<title>`macro-functions.lisp-macro-functions194^173^TOP-COMPILE-FILE.40 (24 samples, 0.15%)</title><rect x="287.4" y="117" width="1.8" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="290.37" y="127.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="648.6" y="3429" width="0.1" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="651.55" y="3439.5" ></text>
</g>
<g >
<title>`inline-one-instruction.lisp-inline-one-instruction395^185^TOP-COMPILE-FILE.95 (4 samples, 0.03%)</title><rect x="652.0" y="3605" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="654.99" y="3615.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (6 samples, 0.04%)</title><rect x="1188.0" y="325" width="0.4" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="1190.98" y="335.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (4 samples, 0.03%)</title><rect x="667.4" y="3637" width="0.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="670.36" y="3647.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^.154 (63 samples, 0.40%)</title><rect x="273.8" y="597" width="4.7" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="276.78" y="607.5" ></text>
</g>
<g >
<title>`INVALIDATED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3573" width="284.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="13.00" y="3583.5" >`INVALIDATED-DISCRIMINATING-FUNCTION^C..</text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.293 (7 samples, 0.04%)</title><rect x="1176.9" y="3717" width="0.6" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="1179.94" y="3727.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="630.0" y="2373" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="633.04" y="2383.5" ></text>
</g>
<g >
<title>`llvm::LiveIntervals::computeVirtRegInterval(llvm::LiveInterval&amp;) (2 samples, 0.01%)</title><rect x="584.0" y="4373" width="0.1" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="586.99" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="2053" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="632.45" y="2063.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.9" y="485" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="628.94" y="495.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (1,469 samples, 9.29%)</title><rect x="21.2" y="261" width="109.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="24.20" y="271.5" >`convert.lisp..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (5 samples, 0.03%)</title><rect x="619.4" y="709" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="622.44" y="719.5" ></text>
</g>
<g >
<title>0x111520ef3 (3 samples, 0.02%)</title><rect x="652.8" y="3525" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="655.81" y="3535.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.6" y="965" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="623.64" y="975.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (493 samples, 3.12%)</title><rect x="1115.4" y="3733" width="36.8" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1118.36" y="3743.5" >`co..</text>
</g>
<g >
<title>`GC_mark_local (37 samples, 0.23%)</title><rect x="1087.1" y="3541" width="2.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1090.14" y="3551.5" ></text>
</g>
<g >
<title>0x12913f420 (3 samples, 0.02%)</title><rect x="767.2" y="3653" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="770.23" y="3663.5" ></text>
</g>
<g >
<title>`CONSP^COMMON-LISP^FN^^ (5 samples, 0.03%)</title><rect x="914.4" y="3733" width="0.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="917.43" y="3743.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (28 samples, 0.18%)</title><rect x="1186.9" y="1909" width="2.1" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="1189.87" y="1919.5" ></text>
</g>
<g >
<title>0x110d5d16d (4 samples, 0.03%)</title><rect x="967.7" y="3717" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="970.72" y="3727.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE^COMPILER^FN^^ (16 samples, 0.10%)</title><rect x="635.6" y="3669" width="1.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="638.57" y="3679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (20 samples, 0.13%)</title><rect x="630.8" y="309" width="1.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="633.79" y="319.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="1182.3" y="3717" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="1185.31" y="3727.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.72 (6 samples, 0.04%)</title><rect x="823.3" y="2773" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="826.29" y="2783.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (7 samples, 0.04%)</title><rect x="766.6" y="3637" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="769.56" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="624.3" y="1237" width="1.0" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="627.30" y="1247.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.1" y="757" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="626.10" y="767.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (24 samples, 0.15%)</title><rect x="1184.9" y="2421" width="1.8" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="1187.92" y="2431.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="630.0" y="2645" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="633.04" y="2655.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.211 (7,680 samples, 48.58%)</title><rect x="616.3" y="4021" width="573.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="619.31" y="4031.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.211</text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (27 samples, 0.17%)</title><rect x="746.6" y="3637" width="2.0" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="749.56" y="3647.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (3 samples, 0.02%)</title><rect x="619.1" y="597" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="622.15" y="607.5" ></text>
</g>
<g >
<title>0x110c59171 (3 samples, 0.02%)</title><rect x="966.5" y="3717" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="969.45" y="3727.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="620.5" y="2085" width="0.1" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="623.49" y="2095.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T))^METHOD^^ (8 samples, 0.05%)</title><rect x="1187.9" y="581" width="0.6" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="1190.91" y="591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1589" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="635.43" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="1829" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="632.74" y="1839.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAG::getLoad(llvm::ISD::MemIndexedMode, llvm::ISD::LoadExtType, llvm::EVT, llvm::SDLoc const&amp;, llvm::SDValue, llvm::SDValue, llvm::SDValue, llvm::EVT, llvm::MachineMemOperand*) (2 samples, 0.01%)</title><rect x="583.0" y="4277" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="586.02" y="4287.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (9 samples, 0.06%)</title><rect x="808.6" y="3653" width="0.7" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="811.58" y="3663.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (16 samples, 0.10%)</title><rect x="635.6" y="3749" width="1.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="638.57" y="3759.5" ></text>
</g>
<g >
<title>`COMPILE^COMMON-LISP^FN^^ (6 samples, 0.04%)</title><rect x="1021.2" y="3557" width="0.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="1024.24" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (12 samples, 0.08%)</title><rect x="626.2" y="325" width="0.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="629.16" y="335.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.32 (43 samples, 0.27%)</title><rect x="823.3" y="3509" width="3.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="826.29" y="3519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="613" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="622.44" y="623.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::T_O&gt; (core::HashTable_O::*)(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (183 samples, 1.16%)</title><rect x="939.6" y="3685" width="13.6" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="942.58" y="3695.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="622.1" y="133" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="625.13" y="143.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="1045" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="628.94" y="1055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1781" width="1.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="623.86" y="1791.5" ></text>
</g>
<g >
<title>0x1111fb29d (27 samples, 0.17%)</title><rect x="746.6" y="3653" width="2.0" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="749.56" y="3663.5" ></text>
</g>
<g >
<title>0x114007367 (18 samples, 0.11%)</title><rect x="13.5" y="485" width="1.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="16.51" y="495.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.24 (43 samples, 0.27%)</title><rect x="823.3" y="3285" width="3.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="826.29" y="3295.5" ></text>
</g>
<g >
<title>0x110c60001 (5 samples, 0.03%)</title><rect x="1037.1" y="3733" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1040.06" y="3743.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="651.4" y="3493" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="654.39" y="3503.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (20 samples, 0.13%)</title><rect x="630.8" y="677" width="1.5" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="633.79" y="687.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (5 samples, 0.03%)</title><rect x="654.6" y="3525" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="657.60" y="3535.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (80 samples, 0.51%)</title><rect x="1183.6" y="2853" width="6.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="1186.58" y="2863.5" ></text>
</g>
<g >
<title>`PERFORM-PLAN^ASDF/PLAN^((:AROUND) (T))^METHOD^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2853" width="284.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="13.00" y="2863.5" >`PERFORM-PLAN^ASDF/PLAN^((:AROUND) (T)..</text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T T))^METHOD^^ (98 samples, 0.62%)</title><rect x="286.8" y="965" width="7.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="289.77" y="975.5" ></text>
</g>
<g >
<title>0x1110a4be6 (127 samples, 0.80%)</title><rect x="620.9" y="3429" width="9.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="623.86" y="3439.5" ></text>
</g>
<g >
<title>`SLOT-EXISTS-P^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="617.9" y="3797" width="0.1" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="620.88" y="3807.5" ></text>
</g>
<g >
<title>`core::write_object(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="1183.4" y="2757" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1186.36" y="2767.5" ></text>
</g>
<g >
<title>0x1293e910e (2 samples, 0.01%)</title><rect x="774.5" y="3653" width="0.1" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="777.47" y="3663.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (4 samples, 0.03%)</title><rect x="1177.2" y="3093" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="1180.16" y="3103.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.101 (3 samples, 0.02%)</title><rect x="823.5" y="693" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="826.51" y="703.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.6" y="1733" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="623.64" y="1743.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE.17 (3,806 samples, 24.07%)</title><rect x="10.0" y="1445" width="284.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="13.00" y="1455.5" >`compile-file.lsp-compile-file52^33^TO..</text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^494^TOP-COMPILE-FILE.60 (3 samples, 0.02%)</title><rect x="823.5" y="1413" width="0.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="826.51" y="1423.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (4 samples, 0.03%)</title><rect x="1022.4" y="3701" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="1025.36" y="3711.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="624.0" y="869" width="0.1" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="627.00" y="879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="1461" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="632.74" y="1471.5" ></text>
</g>
<g >
<title>0x1111fb31d (6 samples, 0.04%)</title><rect x="748.8" y="3653" width="0.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="751.80" y="3663.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((BLOCK-AST T))^METHOD^^.152 (5 samples, 0.03%)</title><rect x="173.9" y="181" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="176.91" y="191.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (98 samples, 0.62%)</title><rect x="286.8" y="1061" width="7.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="289.77" y="1071.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="626.2" y="1365" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="629.16" y="1375.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.98 (28 samples, 0.18%)</title><rect x="1186.9" y="1733" width="2.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="1189.87" y="1743.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="875.5" y="3317" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="878.54" y="3327.5" ></text>
</g>
<g >
<title>0x123ae11b3 (4 samples, 0.03%)</title><rect x="641.7" y="3413" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="644.69" y="3423.5" ></text>
</g>
<g >
<title>0x1110a5606 (10 samples, 0.06%)</title><rect x="622.4" y="965" width="0.7" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="625.35" y="975.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (181 samples, 1.14%)</title><rect x="787.9" y="3637" width="13.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="790.91" y="3647.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (6 samples, 0.04%)</title><rect x="1188.0" y="293" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1190.98" y="303.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="625.9" y="1141" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="628.94" y="1151.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (5 samples, 0.03%)</title><rect x="714.5" y="3637" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="717.54" y="3647.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (5 samples, 0.03%)</title><rect x="173.9" y="69" width="0.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="176.91" y="79.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="625.3" y="373" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="628.27" y="383.5" ></text>
</g>
<g >
<title>0x111521403 (2 samples, 0.01%)</title><rect x="638.3" y="3429" width="0.1" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="641.25" y="3439.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="632.4" y="3461" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="635.43" y="3471.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (3 samples, 0.02%)</title><rect x="714.5" y="3605" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="717.54" y="3615.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="622.1" y="1381" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="625.13" y="1391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="623.6" y="2133" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="626.62" y="2143.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (8 samples, 0.05%)</title><rect x="627.9" y="1941" width="0.6" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="630.88" y="1951.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (2 samples, 0.01%)</title><rect x="906.4" y="3669" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="909.44" y="3679.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoWrapperPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="592.1" y="4469" width="0.1" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="595.05" y="4479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.8" y="549" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="626.77" y="559.5" ></text>
</g>
<g >
<title>`GC_allocobj (44 samples, 0.28%)</title><rect x="1086.8" y="3637" width="3.3" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="1089.85" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="619.8" y="2549" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="622.82" y="2559.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (294 samples, 1.86%)</title><rect x="147.5" y="117" width="21.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="150.49" y="127.5" >`..</text>
</g>
<g >
<title>`llvm::SelectionDAGBuilder::visitLoad(llvm::LoadInst const&amp;) (7 samples, 0.04%)</title><rect x="582.9" y="4325" width="0.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="585.87" y="4335.5" ></text>
</g>
<g >
<title>0x12353d2d2 (98 samples, 0.62%)</title><rect x="286.8" y="997" width="7.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="289.77" y="1007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (21 samples, 0.13%)</title><rect x="630.8" y="1173" width="1.6" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="633.79" y="1183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="37" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="632.45" y="47.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="632.4" y="2341" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="635.43" y="2351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (102 samples, 0.65%)</title><rect x="620.9" y="2741" width="7.6" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="623.86" y="2751.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::Function_O&gt;) (71 samples, 0.45%)</title><rect x="281.5" y="613" width="5.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="284.47" y="623.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="1989" width="284.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>0x114007467 (36 samples, 0.23%)</title><rect x="10.0" y="133" width="2.7" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>0x123ae11b3 (2 samples, 0.01%)</title><rect x="650.8" y="3477" width="0.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="653.79" y="3487.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="624.3" y="1333" width="1.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="627.30" y="1343.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (15 samples, 0.09%)</title><rect x="920.2" y="3685" width="1.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="923.17" y="3695.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (30 samples, 0.19%)</title><rect x="1098.6" y="3685" width="2.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1101.56" y="3695.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="1180.9" y="3685" width="0.1" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="1183.89" y="3695.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.9" y="373" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="628.94" y="383.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="648.6" y="3413" width="0.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="651.55" y="3423.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="629.4" y="1029" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="632.45" y="1039.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="628.0" y="117" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="630.95" y="127.5" ></text>
</g>
<g >
<title>0x1110a5606 (6 samples, 0.04%)</title><rect x="619.4" y="2133" width="0.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="622.37" y="2143.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (5 samples, 0.03%)</title><rect x="617.1" y="3749" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="620.13" y="3759.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.6" y="469" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="633.64" y="479.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.01%)</title><rect x="906.1" y="3637" width="0.1" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="909.07" y="3647.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::FinishBasicBlock() (3 samples, 0.02%)</title><rect x="581.8" y="4357" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="584.82" y="4367.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (3 samples, 0.02%)</title><rect x="1165.7" y="3621" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="1168.67" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="626.2" y="1749" width="0.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="629.16" y="1759.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="625.3" y="245" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="628.27" y="255.5" ></text>
</g>
<g >
<title>0x1111fb16a (34 samples, 0.22%)</title><rect x="743.6" y="3653" width="2.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="746.57" y="3663.5" ></text>
</g>
<g >
<title>`tlv_get_addr (4 samples, 0.03%)</title><rect x="726.0" y="3605" width="0.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="728.96" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2853" width="2.1" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="633.34" y="2863.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (205 samples, 1.30%)</title><rect x="572.6" y="4565" width="15.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="575.57" y="4575.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="619.8" y="2165" width="0.2" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="622.82" y="2175.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (3 samples, 0.02%)</title><rect x="604.3" y="4309" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="607.29" y="4319.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (34 samples, 0.22%)</title><rect x="240.9" y="245" width="2.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="243.86" y="255.5" ></text>
</g>
<g >
<title>`DISPATCH-MISS^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3173" width="284.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="13.00" y="3183.5" >`DISPATCH-MISS^CLOS^FN^^</text>
</g>
<g >
<title>0x1293e90e5 (3 samples, 0.02%)</title><rect x="774.2" y="3653" width="0.2" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="777.17" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (6 samples, 0.04%)</title><rect x="629.4" y="2421" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="632.45" y="2431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.3" y="2085" width="0.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="623.27" y="2095.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (11 samples, 0.07%)</title><rect x="601.0" y="4357" width="0.8" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="604.01" y="4367.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENCLOSE-INSTRUCTION T T T))^METHOD^^ (89 samples, 0.56%)</title><rect x="1182.9" y="3285" width="6.7" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="1185.91" y="3295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="533" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="631.18" y="543.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (55 samples, 0.35%)</title><rect x="169.4" y="165" width="4.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="172.43" y="175.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="667.7" y="3685" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="670.74" y="3695.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="660.8" y="3333" width="0.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="663.80" y="3343.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (2 samples, 0.01%)</title><rect x="173.6" y="101" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="176.61" y="111.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (6 samples, 0.04%)</title><rect x="619.4" y="2261" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="622.37" y="2271.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (2 samples, 0.01%)</title><rect x="612.7" y="4261" width="0.2" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="615.73" y="4271.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (21 samples, 0.13%)</title><rect x="656.7" y="3173" width="1.6" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="659.69" y="3183.5" ></text>
</g>
<g >
<title>0x1110a4be6 (27 samples, 0.17%)</title><rect x="630.3" y="3109" width="2.1" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="633.34" y="3119.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap&lt;llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo&lt;llvm::Constant*&gt;, llvm::detail::DenseMapPair&lt;llvm::Constant*, llvm::Constant*&gt; &gt;&amp;) (3 samples, 0.02%)</title><rect x="589.5" y="4421" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="592.51" y="4431.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitLoadInst(llvm::LoadInst&amp;) (9 samples, 0.06%)</title><rect x="603.4" y="4357" width="0.7" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="606.40" y="4367.5" ></text>
</g>
<g >
<title>`core::lisp_getStaticClass(gctools::Header_s::Value) (6 samples, 0.04%)</title><rect x="1150.6" y="3717" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1153.59" y="3727.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm::SimplifyQuery const&amp;, unsigned int) (3 samples, 0.02%)</title><rect x="590.9" y="4405" width="0.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="593.86" y="4415.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2053" width="284.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`CLASS-GET^EXT^FN^^ (6 samples, 0.04%)</title><rect x="1023.3" y="3749" width="0.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="1026.33" y="3759.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (17 samples, 0.11%)</title><rect x="620.9" y="853" width="1.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="623.86" y="863.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt;llvm::Value*&gt;&amp;, llvm::DataLayout const&amp;, llvm::LoopInfo*, unsigned int) (3 samples, 0.02%)</title><rect x="612.7" y="4309" width="0.3" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="615.73" y="4319.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="625.8" y="1669" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="628.79" y="1679.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.26 (16 samples, 0.10%)</title><rect x="635.6" y="3381" width="1.2" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="638.57" y="3391.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.30 (11 samples, 0.07%)</title><rect x="643.5" y="3509" width="0.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="646.48" y="3519.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="632.4" y="3077" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="635.43" y="3087.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (37 samples, 0.23%)</title><rect x="620.9" y="2213" width="2.7" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="623.86" y="2223.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (8 samples, 0.05%)</title><rect x="975.0" y="3701" width="0.6" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="977.96" y="3711.5" ></text>
</g>
<g >
<title>0x14e1148eb (7 samples, 0.04%)</title><rect x="874.9" y="3333" width="0.6" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="877.94" y="3343.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="277" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="631.18" y="287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="133" width="1.0" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="627.30" y="143.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="85" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="632.45" y="95.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="741" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="625.13" y="751.5" ></text>
</g>
<g >
<title>`LOAD-SOURCE^CORE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="4181" width="284.1" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="13.00" y="4191.5" >`LOAD-SOURCE^CORE^FN^^</text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="628.2" y="1093" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="631.18" y="1103.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T T RETURN-INSTRUCTION T))^METHOD^^ (3 samples, 0.02%)</title><rect x="652.3" y="3637" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="655.29" y="3647.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="623.3" y="1365" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="626.33" y="1375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.8" y="1397" width="0.1" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="628.79" y="1407.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.18 (5 samples, 0.03%)</title><rect x="1156.6" y="3301" width="0.4" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="1159.64" y="3311.5" ></text>
</g>
<g >
<title>`core::cl__gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::HashTableBase_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="1101.8" y="3717" width="0.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="1104.85" y="3727.5" ></text>
</g>
<g >
<title>0x11171b476 (2 samples, 0.01%)</title><rect x="663.5" y="3381" width="0.1" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="666.48" y="3391.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.101 (3 samples, 0.02%)</title><rect x="823.5" y="853" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="826.51" y="863.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.24 (3 samples, 0.02%)</title><rect x="874.0" y="3077" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="876.97" y="3087.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.6" y="1429" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="633.64" y="1439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="1173" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="630.95" y="1183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (11 samples, 0.07%)</title><rect x="627.7" y="2261" width="0.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="630.65" y="2271.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.02%)</title><rect x="628.0" y="949" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="630.95" y="959.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (8 samples, 0.05%)</title><rect x="1094.2" y="3717" width="0.6" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1097.16" y="3727.5" ></text>
</g>
<g >
<title>`cc_fdefinition (2 samples, 0.01%)</title><rect x="1156.2" y="3749" width="0.1" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1159.19" y="3759.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="656.7" y="2325" width="0.1" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="659.69" y="2335.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^124^TOP-COMPILE-FILE.325 (65 samples, 0.41%)</title><rect x="10.0" y="837" width="4.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>`fwrite (30 samples, 0.19%)</title><rect x="567.7" y="4453" width="2.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="570.72" y="4463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="625.3" y="325" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="628.27" y="335.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (36 samples, 0.23%)</title><rect x="645.5" y="3429" width="2.7" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="648.49" y="3439.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (34 samples, 0.22%)</title><rect x="240.9" y="53" width="2.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="243.86" y="63.5" ></text>
</g>
<g >
<title>0x12353d2d2 (23 samples, 0.15%)</title><rect x="287.4" y="37" width="1.7" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="290.37" y="47.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (21 samples, 0.13%)</title><rect x="630.8" y="1029" width="1.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="633.79" y="1039.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="624.3" y="341" width="1.0" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="627.30" y="351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (7 samples, 0.04%)</title><rect x="629.4" y="2725" width="0.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="632.45" y="2735.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="658.9" y="3333" width="0.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="661.93" y="3343.5" ></text>
</g>
<g >
<title>`ADD-DEFAULT-INITARGS^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="897.4" y="3701" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="900.41" y="3711.5" ></text>
</g>
<g >
<title>0x123ae3cf3 (2 samples, 0.01%)</title><rect x="648.6" y="3317" width="0.1" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="651.55" y="3327.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.5" y="2309" width="0.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="623.49" y="2319.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (17 samples, 0.11%)</title><rect x="620.9" y="2117" width="1.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="623.86" y="2127.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.9" y="181" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="628.94" y="191.5" ></text>
</g>
<g >
<title>0x1110a5606 (21 samples, 0.13%)</title><rect x="630.8" y="1013" width="1.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="633.79" y="1023.5" ></text>
</g>
<g >
<title>`DominatesMergePoint(llvm::Value*, llvm::BasicBlock*, llvm::SmallPtrSetImpl&lt;llvm::Instruction*&gt;*, unsigned int&amp;, llvm::TargetTransformInfo const&amp;, unsigned int) (2 samples, 0.01%)</title><rect x="608.2" y="4341" width="0.1" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="611.17" y="4351.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (9 samples, 0.06%)</title><rect x="636.8" y="3765" width="0.6" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="639.76" y="3775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="213" width="0.7" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="625.35" y="223.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.11 (17 samples, 0.11%)</title><rect x="620.9" y="917" width="1.2" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="623.86" y="927.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (2 samples, 0.01%)</title><rect x="647.4" y="3253" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="650.43" y="3263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1589" width="0.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="629.16" y="1599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.6" y="565" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="633.64" y="575.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.84 (32 samples, 0.20%)</title><rect x="1186.7" y="2309" width="2.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="1189.72" y="2319.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (251 samples, 1.59%)</title><rect x="1128.0" y="3669" width="18.8" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1131.05" y="3679.5" ></text>
</g>
<g >
<title>0x12570f5f5 (17 samples, 0.11%)</title><rect x="1157.1" y="3669" width="1.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1160.08" y="3679.5" ></text>
</g>
<g >
<title>`asdf.lisp-^7621^TOP-COMPILE-FILE.48 (3,806 samples, 24.07%)</title><rect x="10.0" y="3749" width="284.1" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="13.00" y="3759.5" >`asdf.lisp-^7621^TOP-COMPILE-FILE.48</text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (19 samples, 0.12%)</title><rect x="1187.3" y="1205" width="1.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="1190.31" y="1215.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (125 samples, 0.79%)</title><rect x="620.9" y="2997" width="9.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="623.86" y="3007.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.4" y="1365" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="633.42" y="1375.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (28 samples, 0.18%)</title><rect x="796.0" y="3445" width="2.1" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="799.04" y="3455.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.4" y="373" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="632.45" y="383.5" ></text>
</g>
<g >
<title>0x110d8014c (2 samples, 0.01%)</title><rect x="1020.0" y="3637" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1023.04" y="3647.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.13 (11 samples, 0.07%)</title><rect x="643.5" y="3317" width="0.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="646.48" y="3327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="149" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="632.45" y="159.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="640.3" y="2789" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="643.34" y="2799.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="873.1" y="2933" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="876.15" y="2943.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="632.4" y="981" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="635.43" y="991.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (3 samples, 0.02%)</title><rect x="1065.4" y="3717" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1068.42" y="3727.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="624.1" y="1573" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="627.15" y="1583.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="627.7" y="1301" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="630.65" y="1311.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (331 samples, 2.09%)</title><rect x="144.7" y="229" width="24.7" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="147.73" y="239.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1557" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="628.27" y="1567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.3" y="1413" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="626.33" y="1423.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::JumpThreading::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="825.2" y="2901" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="828.23" y="2911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (155 samples, 0.98%)</title><rect x="620.9" y="3445" width="11.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="623.86" y="3455.5" ></text>
</g>
<g >
<title>`read.lisp-read193^5^TOP-COMPILE-FILE.2 (5 samples, 0.03%)</title><rect x="289.2" y="85" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="292.16" y="95.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (10 samples, 0.06%)</title><rect x="12.8" y="357" width="0.7" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="15.76" y="367.5" ></text>
</g>
<g >
<title>`HOIST-AST^CLASP-CLEAVIR^FN^^ (34 samples, 0.22%)</title><rect x="616.5" y="3861" width="2.6" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="619.53" y="3871.5" ></text>
</g>
<g >
<title>`CONSP^COMMON-LISP^FN^^ (29 samples, 0.18%)</title><rect x="784.3" y="3653" width="2.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="787.33" y="3663.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.33 (5 samples, 0.03%)</title><rect x="1156.6" y="3605" width="0.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="1159.64" y="3615.5" ></text>
</g>
<g >
<title>`INSTANCE-SET^CORE^FN^^ (10 samples, 0.06%)</title><rect x="1164.6" y="3621" width="0.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1167.62" y="3631.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (2 samples, 0.01%)</title><rect x="14.9" y="501" width="0.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="17.85" y="511.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (34 samples, 0.22%)</title><rect x="240.9" y="181" width="2.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="243.86" y="191.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="628.0" y="149" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="630.95" y="159.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="623.8" y="69" width="0.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="626.77" y="79.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (13 samples, 0.08%)</title><rect x="624.3" y="1797" width="1.0" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="627.30" y="1807.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (79 samples, 0.50%)</title><rect x="609.7" y="4437" width="5.9" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="612.67" y="4447.5" ></text>
</g>
<g >
<title>0x114007367 (36 samples, 0.23%)</title><rect x="10.0" y="405" width="2.7" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>`LINK-INLINE-REMOVE-BUILTINS^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="1156.8" y="3189" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="1159.78" y="3199.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="1109" width="0.7" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="625.35" y="1119.5" ></text>
</g>
<g >
<title>`llvm::LiveVariables::HandleRegMask(llvm::MachineOperand const&amp;) (3 samples, 0.02%)</title><rect x="584.4" y="4357" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="587.36" y="4367.5" ></text>
</g>
<g >
<title>0x1110a5606 (10 samples, 0.06%)</title><rect x="622.4" y="581" width="0.7" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="625.35" y="591.5" ></text>
</g>
<g >
<title>0x111336918 (7 samples, 0.04%)</title><rect x="1184.4" y="2453" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1187.40" y="2463.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectAppropriatePoolAllocator&lt;core::ClosureWithSlots_O, (gctools::GCInfo_policy)1&gt;::allocate_in_appropriate_pool_kind&lt;unsigned long&amp;, gctools::return_type (*&amp;)(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...), core::FunctionDescription*, core::ClosureWithSlots_O::ClosureType&gt;(gctools::Header_s::Value const&amp;, unsigned long, unsigned long&amp;&amp;&amp;, gctools::return_type (*&amp;&amp;&amp;)(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...), core::FunctionDescription*&amp;&amp;, core::ClosureWithSlots_O::ClosureType&amp;&amp;) (3 samples, 0.02%)</title><rect x="1022.0" y="3669" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1024.98" y="3679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.4" y="885" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="632.45" y="895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="1077" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="631.18" y="1087.5" ></text>
</g>
<g >
<title>`GC_mark_local (2 samples, 0.01%)</title><rect x="1177.8" y="3493" width="0.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1180.76" y="3503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="277" width="0.7" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="625.35" y="287.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (13 samples, 0.08%)</title><rect x="1009.8" y="3573" width="1.0" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="1012.82" y="3583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (361 samples, 2.28%)</title><rect x="244.3" y="117" width="26.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="247.30" y="127.5" >`..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="619.4" y="1029" width="0.4" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="622.44" y="1039.5" ></text>
</g>
<g >
<title>0x1110a5606 (7 samples, 0.04%)</title><rect x="628.0" y="1573" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="630.95" y="1583.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.28 (9 samples, 0.06%)</title><rect x="997.6" y="3317" width="0.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="1000.58" y="3327.5" ></text>
</g>
<g >
<title>0x1501b4d6b (40 samples, 0.25%)</title><rect x="278.5" y="453" width="3.0" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="281.48" y="463.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="625.9" y="1381" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="628.94" y="1391.5" ></text>
</g>
<g >
<title>0x110c6313e (38 samples, 0.24%)</title><rect x="1054.1" y="3733" width="2.8" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="1057.08" y="3743.5" ></text>
</g>
<g >
<title>`epilogue-cclasp.lisp-epilogue-cclasp443^1^TOP-COMPILE-FILE (3,806 samples, 24.07%)</title><rect x="10.0" y="4613" width="284.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="13.00" y="4623.5" >`epilogue-cclasp.lisp-epilogue-cclasp4..</text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (10 samples, 0.06%)</title><rect x="661.7" y="3413" width="0.7" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="664.69" y="3423.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (22 samples, 0.14%)</title><rect x="140.2" y="261" width="1.7" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="143.25" y="271.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoBase&lt;llvm::BasicBlock, llvm::Loop&gt;::analyze(llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; const&amp;) (2 samples, 0.01%)</title><rect x="592.1" y="4453" width="0.1" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="595.05" y="4463.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (11 samples, 0.07%)</title><rect x="638.9" y="3413" width="0.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="641.93" y="3423.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^321^TOP-COMPILE-FILE.133 (10 samples, 0.06%)</title><rect x="622.4" y="101" width="0.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="625.35" y="111.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="633.4" y="3733" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="636.40" y="3743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (11 samples, 0.07%)</title><rect x="619.4" y="2613" width="0.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="622.37" y="2623.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.24 (16 samples, 0.10%)</title><rect x="635.6" y="3253" width="1.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="638.57" y="3263.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&amp;, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*) (3 samples, 0.02%)</title><rect x="604.3" y="4357" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="607.29" y="4367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="628.0" y="1301" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="630.95" y="1311.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.61 (2 samples, 0.01%)</title><rect x="656.7" y="2405" width="0.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="659.69" y="2415.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="629.7" y="1861" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="632.74" y="1871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2629" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="633.04" y="2639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (12 samples, 0.08%)</title><rect x="626.2" y="421" width="0.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="629.16" y="431.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.8 (43 samples, 0.27%)</title><rect x="823.3" y="3429" width="3.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="826.29" y="3439.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.10 (6 samples, 0.04%)</title><rect x="823.3" y="2645" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="826.29" y="2655.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.9" y="469" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="628.94" y="479.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.22 (3 samples, 0.02%)</title><rect x="874.0" y="3237" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="876.97" y="3247.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD^^ (2 samples, 0.01%)</title><rect x="665.3" y="3397" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="668.35" y="3407.5" ></text>
</g>
<g >
<title>0x123abc559 (2 samples, 0.01%)</title><rect x="286.9" y="245" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="289.92" y="255.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (13 samples, 0.08%)</title><rect x="624.3" y="1173" width="1.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="627.30" y="1183.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="616.5" y="3797" width="0.2" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="619.53" y="3807.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="1637" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="635.43" y="1647.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="997.9" y="3093" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="1000.87" y="3103.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (12 samples, 0.08%)</title><rect x="872.5" y="3477" width="0.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="875.48" y="3487.5" ></text>
</g>
<g >
<title>`wrapped_cl__gethash_T_spHashTableBase_spT_sp (9 samples, 0.06%)</title><rect x="869.6" y="3653" width="0.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="872.57" y="3663.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (10 samples, 0.06%)</title><rect x="1171.3" y="3637" width="0.8" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="1174.34" y="3647.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.02%)</title><rect x="1053.0" y="3685" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1055.96" y="3695.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (7 samples, 0.04%)</title><rect x="627.1" y="2101" width="0.6" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="630.13" y="2111.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.9" y="1109" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="628.94" y="1119.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.6" y="1061" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="633.64" y="1071.5" ></text>
</g>
<g >
<title>0x15011e7dd (161 samples, 1.02%)</title><rect x="655.0" y="3621" width="12.1" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="658.05" y="3631.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt; (llvmo::ClaspJIT_O::*)(gctools::smart_ptr&lt;llvmo::Module_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (10 samples, 0.06%)</title><rect x="656.8" y="2517" width="0.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="659.84" y="2527.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1605" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="628.27" y="1615.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::run() (51 samples, 0.32%)</title><rect x="600.8" y="4373" width="3.8" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="603.78" y="4383.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (37 samples, 0.23%)</title><rect x="144.7" y="133" width="2.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="147.73" y="143.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="1157.4" y="3525" width="0.1" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="1160.38" y="3535.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (40 samples, 0.25%)</title><rect x="1087.1" y="3589" width="3.0" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="1090.14" y="3599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.3" y="1653" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="626.33" y="1663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="453" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="632.45" y="463.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="877.9" y="3269" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="880.93" y="3279.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::recordAvailableAnalysis(llvm::Pass*) (2 samples, 0.01%)</title><rect x="605.8" y="4405" width="0.1" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="608.78" y="4415.5" ></text>
</g>
<g >
<title>`DISPATCH-MISS^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2117" width="284.1" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="13.00" y="2127.5" >`DISPATCH-MISS^CLOS^FN^^</text>
</g>
<g >
<title>0x114007367 (19 samples, 0.12%)</title><rect x="271.2" y="117" width="1.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="274.24" y="127.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="619.4" y="341" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="622.44" y="351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (26 samples, 0.16%)</title><rect x="630.4" y="1813" width="2.0" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="633.42" y="1823.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="624.3" y="1349" width="1.0" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="627.30" y="1359.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (6 samples, 0.04%)</title><rect x="600.3" y="4373" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="603.26" y="4383.5" ></text>
</g>
<g >
<title>`CALL-WITH-AROUND-COMPILE-HOOK^ASDF/LISP-ACTION^((COMPONENT T))^METHOD^^.26 (3,806 samples, 24.07%)</title><rect x="10.0" y="2037" width="284.1" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" >`CALL-WITH-AROUND-COMPILE-HOOK^ASDF/LI..</text>
</g>
<g >
<title>`read-common.lisp-read-common192^53^TOP-COMPILE-FILE.27 (96 samples, 0.61%)</title><rect x="286.9" y="869" width="7.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="289.92" y="879.5" ></text>
</g>
<g >
<title>`core::General_O::_instanceClass() const (2 samples, 0.01%)</title><rect x="998.2" y="3717" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1001.25" y="3727.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="273.1" y="37" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="276.11" y="47.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="622.1" y="949" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="625.13" y="959.5" ></text>
</g>
<g >
<title>`llvm::GVN::processInstruction(llvm::Instruction*) (8 samples, 0.05%)</title><rect x="592.6" y="4405" width="0.6" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="595.57" y="4415.5" ></text>
</g>
<g >
<title>`cst-to-ast.lisp-cst-to-ast301^3^TOP-COMPILE-FILE.3 (10 samples, 0.06%)</title><rect x="12.8" y="405" width="0.7" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="15.76" y="415.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.12 (20 samples, 0.13%)</title><rect x="876.3" y="3109" width="1.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="879.28" y="3119.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="625.3" y="997" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="628.27" y="1007.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.7" y="2085" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="632.74" y="2095.5" ></text>
</g>
<g >
<title>0x1110a5606 (20 samples, 0.13%)</title><rect x="625.6" y="2261" width="1.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="628.64" y="2271.5" ></text>
</g>
<g >
<title>`core::funcall_va_list_10(gctools::smart_ptr&lt;core::Function_O&gt;, gctools::smart_ptr&lt;core::Vaslist&gt;) (17 samples, 0.11%)</title><rect x="620.9" y="1189" width="1.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="623.86" y="1199.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (17 samples, 0.11%)</title><rect x="143.5" y="149" width="1.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="146.46" y="159.5" ></text>
</g>
<g >
<title>0x1110a5456 (6 samples, 0.04%)</title><rect x="619.4" y="2245" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="622.37" y="2255.5" ></text>
</g>
<g >
<title>`GENERATE-LLVM-FUNCTION-FROM-CODE^COMPILER^FN^^ (6 samples, 0.04%)</title><rect x="823.3" y="2725" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="826.29" y="2735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="117" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="625.13" y="127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.8" y="565" width="0.1" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="626.77" y="575.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^METHOD^^ (126 samples, 0.80%)</title><rect x="130.8" y="213" width="9.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="133.84" y="223.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="624.3" y="1221" width="1.0" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="627.30" y="1231.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="859.2" y="3573" width="0.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="862.19" y="3583.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (7 samples, 0.04%)</title><rect x="173.8" y="405" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="176.76" y="415.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::getModRefInfo(llvm::ImmutableCallSite, llvm::MemoryLocation const&amp;) (2 samples, 0.01%)</title><rect x="595.8" y="4325" width="0.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="598.78" y="4335.5" ></text>
</g>
<g >
<title>0x12913f2ea (88 samples, 0.56%)</title><rect x="758.7" y="3653" width="6.6" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="761.72" y="3663.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt;llvm::Value*&gt;&amp;, llvm::DataLayout const&amp;, llvm::LoopInfo*, unsigned int) (2 samples, 0.01%)</title><rect x="590.9" y="4373" width="0.1" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="593.86" y="4383.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^396^TOP-COMPILE-FILE.122 (90 samples, 0.57%)</title><rect x="1182.8" y="3813" width="6.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="1185.83" y="3823.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (80 samples, 0.51%)</title><rect x="1183.6" y="2869" width="6.0" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="1186.58" y="2879.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (17 samples, 0.11%)</title><rect x="620.9" y="1301" width="1.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="623.86" y="1311.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (2 samples, 0.01%)</title><rect x="728.7" y="3637" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="731.72" y="3647.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="4565" width="284.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="13.00" y="4575.5" >`MAPCAR^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="1141" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="635.43" y="1151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="741" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="632.45" y="751.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.33 (6 samples, 0.04%)</title><rect x="1021.2" y="3573" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="1024.24" y="3583.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (64 samples, 0.40%)</title><rect x="899.7" y="3669" width="4.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="902.72" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1029" width="0.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="623.49" y="1039.5" ></text>
</g>
<g >
<title>`asdf.lisp-^7621^TOP-COMPILE-FILE.50 (3,806 samples, 24.07%)</title><rect x="10.0" y="3733" width="284.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="13.00" y="3743.5" >`asdf.lisp-^7621^TOP-COMPILE-FILE.50</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="623.1" y="1365" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="626.10" y="1375.5" ></text>
</g>
<g >
<title>0x1140073e7 (19 samples, 0.12%)</title><rect x="271.2" y="293" width="1.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="274.24" y="303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1973" width="0.1" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="623.49" y="1983.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="627.7" y="1925" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="630.65" y="1935.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="624.0" y="1061" width="0.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="627.00" y="1071.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (96 samples, 0.61%)</title><rect x="286.9" y="725" width="7.2" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="289.92" y="735.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.94 (15 samples, 0.09%)</title><rect x="1187.5" y="837" width="1.1" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="1190.46" y="847.5" ></text>
</g>
<g >
<title>`LTV/CONS^LITERAL^FN^^ (3 samples, 0.02%)</title><rect x="1182.9" y="3109" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="1185.91" y="3119.5" ></text>
</g>
<g >
<title>`DO-DISPATCH-MISS^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3829" width="284.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="13.00" y="3839.5" >`DO-DISPATCH-MISS^CLOS^FN^^</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^METHOD^^ (82 samples, 0.52%)</title><rect x="15.0" y="213" width="6.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="18.00" y="223.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^METHOD^^ (830 samples, 5.25%)</title><rect x="174.3" y="677" width="61.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="177.28" y="687.5" >`CONVE..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="622.1" y="1237" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="625.13" y="1247.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (17 samples, 0.11%)</title><rect x="620.9" y="1989" width="1.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="623.86" y="1999.5" ></text>
</g>
<g >
<title>`NTHCDR^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="663.6" y="3333" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="666.63" y="3343.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="773" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="622.15" y="783.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (18 samples, 0.11%)</title><rect x="13.5" y="597" width="1.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="16.51" y="607.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.22 (43 samples, 0.27%)</title><rect x="823.3" y="3301" width="3.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="826.29" y="3311.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (3 samples, 0.02%)</title><rect x="1182.9" y="3125" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1185.91" y="3135.5" ></text>
</g>
<g >
<title>`SYMBOL-CALL^UIOP/PACKAGE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3653" width="284.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="13.00" y="3663.5" >`SYMBOL-CALL^UIOP/PACKAGE^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (3 samples, 0.02%)</title><rect x="627.7" y="1989" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="630.65" y="1999.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="620.6" y="2357" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="623.64" y="2367.5" ></text>
</g>
<g >
<title>`CONSP^COMMON-LISP^FN^^ (8 samples, 0.05%)</title><rect x="1024.1" y="3749" width="0.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1027.15" y="3759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="741" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="626.10" y="751.5" ></text>
</g>
<g >
<title>`CODEGEN-IF^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="725" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="826.51" y="735.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.13 (16 samples, 0.10%)</title><rect x="635.6" y="3461" width="1.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="638.57" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.8" y="1749" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="628.79" y="1759.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (16 samples, 0.10%)</title><rect x="619.1" y="2821" width="1.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="622.07" y="2831.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (5 samples, 0.03%)</title><rect x="861.7" y="3637" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="864.73" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.4" y="1173" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="633.42" y="1183.5" ></text>
</g>
<g >
<title>`llvm::InstructionCombiningPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="657.4" y="2389" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="660.44" y="2399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="1957" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="632.45" y="1967.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3,461 samples, 21.89%)</title><rect x="15.0" y="789" width="258.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="18.00" y="799.5" >`CONVERT^CLEAVIR-CST-TO-AST^((T T ..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="53" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="628.94" y="63.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="677" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="628.27" y="687.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.03%)</title><rect x="650.4" y="3493" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="653.42" y="3503.5" ></text>
</g>
<g >
<title>`ENSURE-CELL-AVAILABLE^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (2 samples, 0.01%)</title><rect x="1179.2" y="3781" width="0.1" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="1182.18" y="3791.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (361 samples, 2.28%)</title><rect x="244.3" y="245" width="26.9" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="247.30" y="255.5" >`..</text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.01%)</title><rect x="901.5" y="3557" width="0.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="904.51" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1381" width="1.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="623.86" y="1391.5" ></text>
</g>
<g >
<title>0x1110a4be6 (3 samples, 0.02%)</title><rect x="622.1" y="1093" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="625.13" y="1103.5" ></text>
</g>
<g >
<title>`client_validate (3 samples, 0.02%)</title><rect x="926.9" y="3685" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="929.89" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1125" width="0.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="623.49" y="1135.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.57 (2 samples, 0.01%)</title><rect x="656.7" y="2469" width="0.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="659.69" y="2479.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (60 samples, 0.38%)</title><rect x="236.2" y="357" width="4.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="239.24" y="367.5" ></text>
</g>
<g >
<title>`wrapped_cl__load_T_spT_spT_spT_spT_spT_sp (3,806 samples, 24.07%)</title><rect x="10.0" y="4229" width="284.1" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="13.00" y="4239.5" >`wrapped_cl__load_T_spT_spT_spT_spT_sp..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.7" y="2117" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="632.74" y="2127.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.26 (26 samples, 0.16%)</title><rect x="1186.9" y="1589" width="2.0" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="1189.94" y="1599.5" ></text>
</g>
<g >
<title>0x110c563bc (3 samples, 0.02%)</title><rect x="693.9" y="3653" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="696.94" y="3663.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::PHIElimination::runOnMachineFunction(llvm::MachineFunction&amp;) (2 samples, 0.01%)</title><rect x="576.7" y="4405" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="579.75" y="4415.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.91 (2 samples, 0.01%)</title><rect x="656.7" y="2533" width="0.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="659.69" y="2543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="101" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="630.95" y="111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="1413" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="633.64" y="1423.5" ></text>
</g>
<g >
<title>`CLONE-INITARGS^CLEAVIR-IR^((APPEND) (UNBOX-INSTRUCTION))^METHOD^^ (7 samples, 0.04%)</title><rect x="874.9" y="3301" width="0.6" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="877.94" y="3311.5" ></text>
</g>
<g >
<title>`MAKE-FUNCALL-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="644.5" y="3589" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="647.52" y="3599.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (63 samples, 0.40%)</title><rect x="273.8" y="565" width="4.7" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="276.78" y="575.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((MULTIPLE-TO-FIXED-INSTRUCTION T ABI-X86-64 T))^METHOD^^ (7 samples, 0.04%)</title><rect x="1184.4" y="2357" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="1187.40" y="2367.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (9 samples, 0.06%)</title><rect x="949.7" y="3413" width="0.7" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="952.73" y="3423.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (18 samples, 0.11%)</title><rect x="746.8" y="3605" width="1.3" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="749.78" y="3615.5" ></text>
</g>
<g >
<title>0x1110a62f6 (4 samples, 0.03%)</title><rect x="623.7" y="1381" width="0.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="626.70" y="1391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="2069" width="1.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="623.86" y="2079.5" ></text>
</g>
<g >
<title>0x1501b4cfb (111 samples, 0.70%)</title><rect x="278.5" y="789" width="8.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="281.48" y="799.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.10 (43 samples, 0.27%)</title><rect x="823.3" y="3397" width="3.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="826.29" y="3407.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="619.8" y="2565" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="622.82" y="2575.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (64 samples, 0.40%)</title><rect x="282.0" y="213" width="4.8" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="284.99" y="223.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::tableRef_no_read_lock(gctools::smart_ptr&lt;core::T_O&gt;, bool) (43 samples, 0.27%)</title><rect x="1136.4" y="3605" width="3.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1139.41" y="3615.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (19 samples, 0.12%)</title><rect x="1187.3" y="1157" width="1.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1190.31" y="1167.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="650.2" y="3493" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="653.20" y="3503.5" ></text>
</g>
<g >
<title>0x123710f48 (126 samples, 0.80%)</title><rect x="130.8" y="277" width="9.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="133.84" y="287.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (11 samples, 0.07%)</title><rect x="643.5" y="3541" width="0.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="646.48" y="3551.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.6" y="597" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="633.64" y="607.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="1333" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="622.15" y="1343.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.68 (2 samples, 0.01%)</title><rect x="656.7" y="2357" width="0.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="659.69" y="2367.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (7 samples, 0.04%)</title><rect x="857.3" y="3477" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="860.25" y="3487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1189" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="623.64" y="1199.5" ></text>
</g>
<g >
<title>0x1110a4be6 (3 samples, 0.02%)</title><rect x="620.3" y="2549" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="623.27" y="2559.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (17 samples, 0.11%)</title><rect x="620.9" y="1621" width="1.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="623.86" y="1631.5" ></text>
</g>
<g >
<title>0x110d5ddfc (48 samples, 0.30%)</title><rect x="729.2" y="3653" width="3.6" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="732.24" y="3663.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.103 (3 samples, 0.02%)</title><rect x="823.5" y="1509" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="826.51" y="1519.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="632.4" y="1765" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="635.43" y="1775.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::T_O&gt; (core::HashTable_O::*)(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (4 samples, 0.03%)</title><rect x="1014.8" y="3685" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1017.82" y="3695.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="624.1" y="1813" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="627.15" y="1823.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="625.7" y="2101" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="628.71" y="2111.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (80 samples, 0.51%)</title><rect x="1183.6" y="2805" width="6.0" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="1186.58" y="2815.5" ></text>
</g>
<g >
<title>`llvm::ScheduleDAGInstrs::buildSchedGraph(llvm::AAResults*, llvm::RegPressureTracker*, llvm::PressureDiffs*, llvm::LiveIntervals*, bool) (3 samples, 0.02%)</title><rect x="575.6" y="4341" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="578.63" y="4351.5" ></text>
</g>
<g >
<title>`AST-INTERPRETED-CLOSURE^INTERPRET-AST^FN^^.117 (3 samples, 0.02%)</title><rect x="174.1" y="37" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="177.06" y="47.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="624.0" y="1797" width="0.1" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="627.00" y="1807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="2229" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="622.15" y="2239.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (24 samples, 0.15%)</title><rect x="1108.5" y="3669" width="1.8" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1111.49" y="3679.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="630.0" y="2757" width="0.2" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="633.04" y="2767.5" ></text>
</g>
<g >
<title>`llvm::AsmPrinter::EmitFunctionBody() (12 samples, 0.08%)</title><rect x="586.0" y="4389" width="0.9" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="589.00" y="4399.5" ></text>
</g>
<g >
<title>`GC_alloc_large (71 samples, 0.45%)</title><rect x="852.0" y="3477" width="5.3" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="854.95" y="3487.5" ></text>
</g>
<g >
<title>`core::Closure_O::setf_objectFile(gctools::smart_ptr&lt;core::ObjectFile_O&gt;) (2 samples, 0.01%)</title><rect x="997.4" y="3717" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1000.43" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (27 samples, 0.17%)</title><rect x="630.3" y="2837" width="2.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="633.34" y="2847.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (6 samples, 0.04%)</title><rect x="1166.3" y="3573" width="0.4" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="1169.26" y="3583.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.8" y="133" width="0.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="626.77" y="143.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (97 samples, 0.61%)</title><rect x="897.6" y="3701" width="7.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="900.56" y="3711.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (96 samples, 0.61%)</title><rect x="286.9" y="533" width="7.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="289.92" y="543.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (20 samples, 0.13%)</title><rect x="622.1" y="2021" width="1.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="625.13" y="2031.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (62 samples, 0.39%)</title><rect x="236.2" y="709" width="4.7" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="239.24" y="719.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="625.3" y="549" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="628.27" y="559.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (24 samples, 0.15%)</title><rect x="999.7" y="3701" width="1.8" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1002.74" y="3711.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (3 samples, 0.02%)</title><rect x="650.8" y="3509" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="653.79" y="3519.5" ></text>
</g>
<g >
<title>`llvm::LegacyInlinerBase::inlineCalls(llvm::CallGraphSCC&amp;) (5 samples, 0.03%)</title><rect x="608.5" y="4421" width="0.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="611.55" y="4431.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (3 samples, 0.02%)</title><rect x="751.5" y="3637" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="754.48" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.4" y="181" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="632.45" y="191.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.02%)</title><rect x="632.4" y="2277" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="635.43" y="2287.5" ></text>
</g>
<g >
<title>0x1501b4d6b (5 samples, 0.03%)</title><rect x="273.0" y="69" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="275.96" y="79.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*, std::__1::allocator&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*&gt; &gt;::__push_back_slow_path&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*&gt;(llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*&amp;&amp;) (2 samples, 0.01%)</title><rect x="610.3" y="4357" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="613.34" y="4367.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.57 (6 samples, 0.04%)</title><rect x="823.3" y="2933" width="0.4" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="826.29" y="2943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="3509" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="635.43" y="3519.5" ></text>
</g>
<g >
<title>0x1110a5606 (13 samples, 0.08%)</title><rect x="624.3" y="997" width="1.0" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="627.30" y="1007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="627.1" y="1509" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="630.13" y="1519.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (71 samples, 0.45%)</title><rect x="281.5" y="533" width="5.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="284.47" y="543.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.5" y="2245" width="0.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="623.49" y="2255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1621" width="0.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="629.16" y="1631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.8" y="1109" width="0.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="628.79" y="1119.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.4" y="1461" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="633.42" y="1471.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (15 samples, 0.09%)</title><rect x="1187.5" y="757" width="1.1" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="1190.46" y="767.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.86 (90 samples, 0.57%)</title><rect x="1182.8" y="3685" width="6.8" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="1185.83" y="3695.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&amp;, llvm::OptimizationRemarkEmitter*) (2 samples, 0.01%)</title><rect x="590.9" y="4341" width="0.1" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="593.86" y="4351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="981" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="630.65" y="991.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (15 samples, 0.09%)</title><rect x="1019.8" y="3669" width="1.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="1022.82" y="3679.5" ></text>
</g>
<g >
<title>0x110cd62a2 (1,469 samples, 9.29%)</title><rect x="21.2" y="181" width="109.6" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="24.20" y="191.5" >0x110cd62a2</text>
</g>
<g >
<title>0x12914116e (2 samples, 0.01%)</title><rect x="769.0" y="3653" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="772.02" y="3663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (10 samples, 0.06%)</title><rect x="12.8" y="133" width="0.7" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="15.76" y="143.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="627.1" y="2005" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="630.13" y="2015.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="875.8" y="3397" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="878.84" y="3407.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^124^TOP-COMPILE-FILE.325 (83 samples, 0.53%)</title><rect x="15.0" y="661" width="6.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="18.00" y="671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="293" width="1.0" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="627.30" y="303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="1941" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="632.74" y="1951.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3477" width="284.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="13.00" y="3487.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((ENCLOSE-INSTRUCTION T))^METHOD^^ (10 samples, 0.06%)</title><rect x="1157.5" y="3557" width="0.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="1160.53" y="3567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (20 samples, 0.13%)</title><rect x="630.8" y="501" width="1.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="633.79" y="511.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (4 samples, 0.03%)</title><rect x="769.7" y="3621" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="772.70" y="3631.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="620.5" y="1205" width="0.1" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="623.49" y="1215.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (12 samples, 0.08%)</title><rect x="626.2" y="101" width="0.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="629.16" y="111.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="627.5" y="2005" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="630.51" y="2015.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.28 (2 samples, 0.01%)</title><rect x="656.7" y="2037" width="0.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="659.69" y="2047.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="632.4" y="693" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="635.43" y="703.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (4 samples, 0.03%)</title><rect x="1177.7" y="3573" width="0.3" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="1180.68" y="3583.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="624.3" y="1653" width="1.0" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="627.30" y="1663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (16 samples, 0.10%)</title><rect x="619.1" y="2789" width="1.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="622.07" y="2799.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (2 samples, 0.01%)</title><rect x="1086.7" y="3589" width="0.1" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="1089.70" y="3599.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp;) (11 samples, 0.07%)</title><rect x="825.2" y="2933" width="0.8" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="828.15" y="2943.5" ></text>
</g>
<g >
<title>`LOAD^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="4549" width="284.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="13.00" y="4559.5" >`LOAD^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="622.1" y="1637" width="1.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="625.13" y="1647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="632.4" y="3093" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="635.43" y="3103.5" ></text>
</g>
<g >
<title>`llvm::LiveVariables::runOnMachineFunction(llvm::MachineFunction&amp;) (10 samples, 0.06%)</title><rect x="584.1" y="4405" width="0.8" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="587.14" y="4415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (10 samples, 0.06%)</title><rect x="629.4" y="2917" width="0.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="632.45" y="2927.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.8" y="949" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="628.79" y="959.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&amp;) (2 samples, 0.01%)</title><rect x="635.9" y="2949" width="0.1" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="638.87" y="2959.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (21 samples, 0.13%)</title><rect x="1176.5" y="3781" width="1.6" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="1179.49" y="3791.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="649.6" y="3397" width="0.1" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="652.60" y="3407.5" ></text>
</g>
<g >
<title>0x12616a77d (3 samples, 0.02%)</title><rect x="643.3" y="3621" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="646.25" y="3631.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (3 samples, 0.02%)</title><rect x="1188.2" y="69" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="1191.21" y="79.5" ></text>
</g>
<g >
<title>`GC_malloc (6 samples, 0.04%)</title><rect x="915.2" y="3701" width="0.4" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="918.17" y="3711.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="141.9" y="133" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="144.89" y="143.5" ></text>
</g>
<g >
<title>0x110c6013e (34 samples, 0.22%)</title><rect x="1038.0" y="3733" width="2.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1040.96" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1573" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="630.65" y="1583.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="622.1" y="293" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="625.13" y="303.5" ></text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (19 samples, 0.12%)</title><rect x="782.9" y="3653" width="1.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="785.91" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (21 samples, 0.13%)</title><rect x="630.8" y="837" width="1.6" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="633.79" y="847.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^METHOD^^.35 (18 samples, 0.11%)</title><rect x="13.5" y="181" width="1.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="16.51" y="191.5" ></text>
</g>
<g >
<title>`0x3 (3,806 samples, 24.07%)</title><rect x="10.0" y="4821" width="284.1" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="13.00" y="4831.5" >`0x3</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="629.4" y="2389" width="0.5" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="632.45" y="2399.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="651.8" y="3573" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="654.84" y="3583.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.3" y="1061" width="0.2" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="626.33" y="1071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (3 samples, 0.02%)</title><rect x="622.1" y="1477" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="625.13" y="1487.5" ></text>
</g>
<g >
<title>`llvmo::Pass_O::externalObject() const (2 samples, 0.01%)</title><rect x="864.2" y="3637" width="0.1" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="867.19" y="3647.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap&lt;llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo&lt;llvm::Constant*&gt;, llvm::detail::DenseMapPair&lt;llvm::Constant*, llvm::Constant*&gt; &gt;&amp;) (3 samples, 0.02%)</title><rect x="594.5" y="4421" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="597.51" y="4431.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.32 (7 samples, 0.04%)</title><rect x="874.9" y="3141" width="0.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="877.94" y="3151.5" ></text>
</g>
<g >
<title>0x1257602e2 (4 samples, 0.03%)</title><rect x="628.2" y="1253" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="631.18" y="1263.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.1" y="469" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="626.10" y="479.5" ></text>
</g>
<g >
<title>`wrapped_cl__nthcdr_Integer_spList_sp (2 samples, 0.01%)</title><rect x="878.3" y="3301" width="0.1" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="881.30" y="3311.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (5 samples, 0.03%)</title><rect x="639.8" y="3445" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="642.82" y="3455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="622.1" y="1365" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="625.13" y="1375.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="627.1" y="1253" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="630.13" y="1263.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.35 (8,060 samples, 50.98%)</title><rect x="587.9" y="4613" width="601.7" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="590.95" y="4623.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.35</text>
</g>
<g >
<title>`clbind::Derivable&lt;clang::ASTFrontendAction&gt;::pointerToAlienWithin() (3 samples, 0.02%)</title><rect x="933.8" y="3733" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="936.83" y="3743.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3221" width="284.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="13.00" y="3231.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>0x11171939a (4 samples, 0.03%)</title><rect x="652.0" y="3573" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="654.99" y="3583.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.14 (9 samples, 0.06%)</title><rect x="997.6" y="3397" width="0.6" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1000.58" y="3407.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (8 samples, 0.05%)</title><rect x="778.9" y="3621" width="0.6" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="781.88" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1445" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="635.43" y="1455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="437" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="631.18" y="447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.05%)</title><rect x="627.9" y="1701" width="0.6" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="630.88" y="1711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="628.0" y="1189" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="630.95" y="1199.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (2 samples, 0.01%)</title><rect x="922.9" y="3669" width="0.1" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="925.86" y="3679.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="635.0" y="3733" width="0.1" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="637.97" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="917" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="631.18" y="927.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="14.9" y="405" width="0.1" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="17.85" y="415.5" ></text>
</g>
<g >
<title>`GC_mark_from (26 samples, 0.16%)</title><rect x="949.1" y="3429" width="1.9" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="952.06" y="3439.5" ></text>
</g>
<g >
<title>`PERFORM-LISP-COMPILATION^ASDF/LISP-ACTION^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2181" width="284.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="13.00" y="2191.5" >`PERFORM-LISP-COMPILATION^ASDF/LISP-AC..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="625.3" y="517" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="628.27" y="527.5" ></text>
</g>
<g >
<title>0x1110a4be6 (3 samples, 0.02%)</title><rect x="632.4" y="2261" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="635.43" y="2271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="69" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="630.95" y="79.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (10 samples, 0.06%)</title><rect x="622.4" y="1077" width="0.7" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="625.35" y="1087.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.65 (74 samples, 0.47%)</title><rect x="1184.0" y="2485" width="5.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="1187.03" y="2495.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="627.1" y="1141" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="630.13" y="1151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="625.3" y="197" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="628.27" y="207.5" ></text>
</g>
<g >
<title>`EVAL^COMMON-LISP^FN^^ (9 samples, 0.06%)</title><rect x="293.3" y="53" width="0.7" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="296.34" y="63.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (5 samples, 0.03%)</title><rect x="619.4" y="837" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="622.44" y="847.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="627.1" y="1365" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="630.13" y="1375.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.6" y="1317" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="633.64" y="1327.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (83 samples, 0.53%)</title><rect x="15.0" y="565" width="6.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="18.00" y="575.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (46 samples, 0.29%)</title><rect x="823.1" y="3653" width="3.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="826.14" y="3663.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::T_O&gt; (core::HashTable_O::*)(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (16 samples, 0.10%)</title><rect x="1174.4" y="3589" width="1.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1177.40" y="3599.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.40 (2 samples, 0.01%)</title><rect x="656.7" y="1829" width="0.1" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="659.69" y="1839.5" ></text>
</g>
<g >
<title>0x1111fb311 (2 samples, 0.01%)</title><rect x="748.6" y="3653" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="751.65" y="3663.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (60 samples, 0.38%)</title><rect x="236.2" y="69" width="4.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="239.24" y="79.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (435 samples, 2.75%)</title><rect x="240.9" y="741" width="32.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="243.86" y="751.5" >`c..</text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="642.6" y="3557" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="645.58" y="3567.5" ></text>
</g>
<g >
<title>0x1290a8598 (62 samples, 0.39%)</title><rect x="236.2" y="741" width="4.7" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="239.24" y="751.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="625.3" y="1221" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="628.27" y="1231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1893" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="622.15" y="1903.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.3" y="1829" width="0.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="623.27" y="1839.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="628.0" y="901" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="630.95" y="911.5" ></text>
</g>
<g >
<title>0x110c593bc (3 samples, 0.02%)</title><rect x="713.8" y="3653" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="716.79" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="2277" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="622.15" y="2287.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (8 samples, 0.05%)</title><rect x="627.9" y="1797" width="0.6" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="630.88" y="1807.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (18 samples, 0.11%)</title><rect x="825.2" y="2949" width="1.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="828.15" y="2959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1877" width="0.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="623.49" y="1887.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.32 (12 samples, 0.08%)</title><rect x="872.5" y="3525" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="875.48" y="3535.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (32 samples, 0.20%)</title><rect x="1011.1" y="3509" width="2.4" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="1014.09" y="3519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="1653" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="632.45" y="1663.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="649.0" y="3381" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="652.00" y="3391.5" ></text>
</g>
<g >
<title>`COMPILE^COMMON-LISP^FN^^ (5 samples, 0.03%)</title><rect x="640.2" y="3285" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="643.19" y="3295.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="632.4" y="3333" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="635.43" y="3343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="1125" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="633.64" y="1135.5" ></text>
</g>
<g >
<title>`llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="621.4" y="421" width="0.1" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="624.38" y="431.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (6 samples, 0.04%)</title><rect x="1021.2" y="3653" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="1024.24" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.3" y="1749" width="0.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="623.27" y="1759.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (89 samples, 0.56%)</title><rect x="1182.9" y="3557" width="6.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1185.91" y="3567.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvmo::PassManager_O, bool (llvm::legacy::PassManager::*)(llvm::Module&amp;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="874.0" y="2901" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="876.97" y="2911.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (359 samples, 2.27%)</title><rect x="834.9" y="3637" width="26.8" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="837.93" y="3647.5" >`..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (7 samples, 0.04%)</title><rect x="620.3" y="2709" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="623.27" y="2719.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (125 samples, 0.79%)</title><rect x="620.9" y="3093" width="9.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="623.86" y="3103.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (257 samples, 1.63%)</title><rect x="597.1" y="4565" width="19.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="600.05" y="4575.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (4 samples, 0.03%)</title><rect x="640.6" y="3413" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="643.64" y="3423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1765" width="1.0" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="627.30" y="1775.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (10 samples, 0.06%)</title><rect x="877.0" y="2805" width="0.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="880.03" y="2815.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="632.4" y="2405" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="635.43" y="2415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="628.2" y="69" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="631.18" y="79.5" ></text>
</g>
<g >
<title>`MAKE-MULTIPLE-TO-FIXED-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="629.1" y="2549" width="0.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="632.07" y="2559.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (22 samples, 0.14%)</title><rect x="1187.1" y="1397" width="1.6" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="1190.09" y="1407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="69" width="0.7" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="625.35" y="79.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="1541" width="0.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="622.44" y="1551.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.4" y="1045" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="632.45" y="1055.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="626.2" y="1941" width="0.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="629.16" y="1951.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1317" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="630.65" y="1327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1797" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="623.64" y="1807.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (28 samples, 0.18%)</title><rect x="929.9" y="3669" width="2.1" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="932.88" y="3679.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (1,748 samples, 11.06%)</title><rect x="1025.4" y="3749" width="130.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="1028.42" y="3759.5" >`MAP-INSTRUCTION..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (12 samples, 0.08%)</title><rect x="626.2" y="117" width="0.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="629.16" y="127.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (109 samples, 0.69%)</title><rect x="924.1" y="3701" width="8.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="927.13" y="3711.5" ></text>
</g>
<g >
<title>`GC_mark_some (3 samples, 0.02%)</title><rect x="1177.8" y="3525" width="0.2" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="1180.76" y="3535.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (4 samples, 0.03%)</title><rect x="628.2" y="405" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="631.18" y="415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.8" y="53" width="0.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="626.77" y="63.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.5" y="2325" width="0.1" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="623.49" y="2335.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (10 samples, 0.06%)</title><rect x="1075.9" y="3701" width="0.8" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1078.95" y="3711.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (12 samples, 0.08%)</title><rect x="772.2" y="3637" width="0.9" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="775.23" y="3647.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldConstant(llvm::Constant const*, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (3 samples, 0.02%)</title><rect x="589.5" y="4437" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="592.51" y="4447.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="623.7" y="1285" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="626.70" y="1295.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.4" y="853" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="632.45" y="863.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (142 samples, 0.90%)</title><rect x="896.7" y="3717" width="10.6" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="899.74" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="645" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="630.95" y="655.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="623.3" y="1685" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="626.33" y="1695.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceSet(unsigned long, gctools::smart_ptr&lt;core::T_O&gt;) (61 samples, 0.39%)</title><rect x="1047.4" y="3685" width="4.6" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="1050.44" y="3695.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="779.6" y="3605" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="782.62" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="197" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="635.43" y="207.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="625.3" y="1413" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="628.27" y="1423.5" ></text>
</g>
<g >
<title>0x1110a5456 (17 samples, 0.11%)</title><rect x="620.9" y="1669" width="1.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="623.86" y="1679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="624.3" y="1109" width="1.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="627.30" y="1119.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="629.4" y="437" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="632.45" y="447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="1381" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="632.45" y="1391.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="627.7" y="1349" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="630.65" y="1359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="1077" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="626.33" y="1087.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (50 samples, 0.32%)</title><rect x="638.6" y="3541" width="3.8" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="641.63" y="3551.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (257 samples, 1.63%)</title><rect x="597.1" y="4549" width="19.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="600.05" y="4559.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (13 samples, 0.08%)</title><rect x="624.3" y="405" width="1.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="627.30" y="415.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (56 samples, 0.35%)</title><rect x="917.7" y="3733" width="4.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="920.71" y="3743.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (17 samples, 0.11%)</title><rect x="735.9" y="3589" width="1.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="738.88" y="3599.5" ></text>
</g>
<g >
<title>`llvm::AAResults::callCapturesBefore(llvm::Instruction const*, llvm::MemoryLocation const&amp;, llvm::DominatorTree*, llvm::OrderedBasicBlock*) (2 samples, 0.01%)</title><rect x="599.1" y="4325" width="0.1" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="602.07" y="4335.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (16 samples, 0.10%)</title><rect x="635.6" y="3333" width="1.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="638.57" y="3343.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="628.2" y="37" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="631.18" y="47.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="1029" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="628.94" y="1039.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.1" y="1157" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="626.10" y="1167.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (331 samples, 2.09%)</title><rect x="144.7" y="277" width="24.7" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="147.73" y="287.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1029" width="0.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="627.00" y="1039.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.4" y="1061" width="0.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="633.42" y="1071.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (12 samples, 0.08%)</title><rect x="628.5" y="2789" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="631.48" y="2799.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="165" width="109.6" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="24.20" y="175.5" >`COMBINE-METH..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.1" y="1749" width="0.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="627.15" y="1759.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^192^TOP-COMPILE-FILE.17 (2 samples, 0.01%)</title><rect x="656.7" y="1909" width="0.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="659.69" y="1919.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="624.1" y="1541" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="627.15" y="1551.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (37 samples, 0.23%)</title><rect x="144.7" y="117" width="2.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="147.73" y="127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (12 samples, 0.08%)</title><rect x="626.2" y="229" width="0.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="629.16" y="239.5" ></text>
</g>
<g >
<title>`GC_mark_some (30 samples, 0.19%)</title><rect x="796.0" y="3493" width="2.3" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="799.04" y="3503.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp;) (3 samples, 0.02%)</title><rect x="872.9" y="2949" width="0.2" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="875.85" y="2959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1861" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="622.15" y="1871.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="632.4" y="2869" width="0.3" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="635.43" y="2879.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.5" y="1253" width="0.1" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="623.49" y="1263.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.4" y="661" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="632.45" y="671.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (15 samples, 0.09%)</title><rect x="619.1" y="2725" width="1.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="622.15" y="2735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.7" y="1765" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="632.74" y="1775.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (10 samples, 0.06%)</title><rect x="622.4" y="261" width="0.7" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="625.35" y="271.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.64 (86 samples, 0.54%)</title><rect x="1183.1" y="2965" width="6.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="1186.13" y="2975.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.52 (7,680 samples, 48.58%)</title><rect x="616.3" y="4309" width="573.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="619.31" y="4319.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.52</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1781" width="0.3" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="626.70" y="1791.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="1717" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="635.43" y="1727.5" ></text>
</g>
<g >
<title>`inline-one-instruction.lisp-inline-one-instruction395^185^TOP-COMPILE-FILE.89 (2 samples, 0.01%)</title><rect x="644.4" y="3621" width="0.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="647.37" y="3631.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (7 samples, 0.04%)</title><rect x="272.8" y="325" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="275.81" y="335.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="618.9" y="3749" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="621.92" y="3759.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.33 (21 samples, 0.13%)</title><rect x="656.7" y="3029" width="1.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="659.69" y="3039.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.24 (17 samples, 0.11%)</title><rect x="620.9" y="677" width="1.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="623.86" y="687.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (331 samples, 2.09%)</title><rect x="1124.7" y="3701" width="24.7" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1127.69" y="3711.5" >`..</text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="620.3" y="1957" width="0.1" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="623.27" y="1967.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="2069" width="0.2" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="623.64" y="2079.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (19 samples, 0.12%)</title><rect x="271.2" y="213" width="1.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="274.24" y="223.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="1989" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="635.43" y="1999.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (10 samples, 0.06%)</title><rect x="622.4" y="325" width="0.7" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="625.35" y="335.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.03%)</title><rect x="141.9" y="261" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="144.89" y="271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (5 samples, 0.03%)</title><rect x="627.1" y="1877" width="0.4" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="630.13" y="1887.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (62 samples, 0.39%)</title><rect x="236.2" y="549" width="4.7" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="239.24" y="559.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="875.5" y="3349" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="878.54" y="3359.5" ></text>
</g>
<g >
<title>`core::core__instance_ref(gctools::smart_ptr&lt;core::T_O&gt;, int) (5 samples, 0.03%)</title><rect x="1073.9" y="3685" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="1076.86" y="3695.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceSet(unsigned long, gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.03%)</title><rect x="775.7" y="3621" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="778.67" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2437" width="2.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="633.34" y="2447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1125" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="630.65" y="1135.5" ></text>
</g>
<g >
<title>0x1501b4cfb (5 samples, 0.03%)</title><rect x="173.9" y="261" width="0.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="176.91" y="271.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (20 samples, 0.13%)</title><rect x="622.1" y="1813" width="1.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="625.13" y="1823.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (6 samples, 0.04%)</title><rect x="619.4" y="1925" width="0.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="622.37" y="1935.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="619.4" y="821" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="622.44" y="831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1685" width="1.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="623.86" y="1695.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.33 (11 samples, 0.07%)</title><rect x="643.5" y="3461" width="0.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="646.48" y="3471.5" ></text>
</g>
<g >
<title>`inline-one-instruction.lisp-inline-one-instruction395^185^TOP-COMPILE-FILE.93 (4 samples, 0.03%)</title><rect x="652.0" y="3621" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="654.99" y="3631.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (11 samples, 0.07%)</title><rect x="1078.6" y="3733" width="0.8" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="1081.56" y="3743.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="997.7" y="3061" width="0.2" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="1000.65" y="3071.5" ></text>
</g>
<g >
<title>`llvm::InstructionCombiningPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="636.5" y="3013" width="0.2" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="639.54" y="3023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1285" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="630.65" y="1295.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (60 samples, 0.38%)</title><rect x="236.2" y="373" width="4.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="239.24" y="383.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceSet(unsigned long, gctools::smart_ptr&lt;core::T_O&gt;) (17 samples, 0.11%)</title><rect x="735.9" y="3605" width="1.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="738.88" y="3615.5" ></text>
</g>
<g >
<title>`DEQUEUE^CORE^FN^^ (6 samples, 0.04%)</title><rect x="1189.6" y="4661" width="0.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="1192.55" y="4671.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="640.3" y="2869" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="643.34" y="2879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1893" width="0.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="629.16" y="1903.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::removeDeadPasses(llvm::Pass*, llvm::StringRef, llvm::PassDebuggingString) (5 samples, 0.03%)</title><rect x="614.8" y="4405" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="617.82" y="4415.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp;, unsigned int) (2 samples, 0.01%)</title><rect x="613.0" y="4341" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="616.02" y="4351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.9" y="453" width="0.2" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="628.94" y="463.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.33 (16 samples, 0.10%)</title><rect x="635.6" y="3605" width="1.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="638.57" y="3615.5" ></text>
</g>
<g >
<title>0x1110a5606 (13 samples, 0.08%)</title><rect x="626.2" y="1109" width="0.9" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="629.16" y="1119.5" ></text>
</g>
<g >
<title>`gctools::GCRootsInModule::getTaggedIndex(char, unsigned long) (4 samples, 0.03%)</title><rect x="1001.9" y="3685" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1004.90" y="3695.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="624.0" y="1669" width="0.1" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="627.00" y="1679.5" ></text>
</g>
<g >
<title>`wrapped_cl__gethash_T_spHashTableBase_spT_sp (3 samples, 0.02%)</title><rect x="1018.0" y="3717" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1020.95" y="3727.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="613.4" y="4309" width="0.1" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="616.40" y="4319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (21 samples, 0.13%)</title><rect x="630.8" y="901" width="1.6" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="633.79" y="911.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="624.3" y="325" width="1.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="627.30" y="335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="981" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="626.33" y="991.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="117" width="109.6" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="24.20" y="127.5" >`CONVERT^CLEA..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (21 samples, 0.13%)</title><rect x="630.8" y="1317" width="1.6" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="633.79" y="1327.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (2 samples, 0.01%)</title><rect x="1179.8" y="3749" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="1182.85" y="3759.5" ></text>
</g>
<g >
<title>0x1110a5606 (11 samples, 0.07%)</title><rect x="627.7" y="2277" width="0.8" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="630.65" y="2287.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (12 samples, 0.08%)</title><rect x="738.1" y="3637" width="0.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="741.12" y="3647.5" ></text>
</g>
<g >
<title>0x1110a5606 (11 samples, 0.07%)</title><rect x="619.4" y="2661" width="0.8" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="622.37" y="2671.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.6" y="1077" width="0.2" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="633.64" y="1087.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (12 samples, 0.08%)</title><rect x="626.2" y="373" width="0.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="629.16" y="383.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="169.4" y="53" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="172.43" y="63.5" ></text>
</g>
<g >
<title>`cc_setfdefinition (2 samples, 0.01%)</title><rect x="1113.2" y="3733" width="0.1" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1116.19" y="3743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.6" y="1813" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="623.64" y="1823.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (17 samples, 0.11%)</title><rect x="620.9" y="629" width="1.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="623.86" y="639.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="659.2" y="3269" width="0.1" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="662.15" y="3279.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (17 samples, 0.11%)</title><rect x="620.9" y="741" width="1.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="623.86" y="751.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.9 (7 samples, 0.04%)</title><rect x="1176.9" y="3525" width="0.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="1179.94" y="3535.5" ></text>
</g>
<g >
<title>`__dynamic_cast (2 samples, 0.01%)</title><rect x="1172.5" y="3589" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1175.53" y="3599.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.6 (6 samples, 0.04%)</title><rect x="1188.0" y="277" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="1190.98" y="287.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.26 (7 samples, 0.04%)</title><rect x="1176.9" y="3381" width="0.6" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="1179.94" y="3391.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.6" y="933" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="623.64" y="943.5" ></text>
</g>
<g >
<title>0x1258cfc3b (2 samples, 0.01%)</title><rect x="173.6" y="357" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="176.61" y="367.5" ></text>
</g>
<g >
<title>`read.lisp-read201^57^TOP-COMPILE-FILE.58 (98 samples, 0.62%)</title><rect x="286.8" y="1141" width="7.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="289.77" y="1151.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="625.3" y="1269" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="628.27" y="1279.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="627.1" y="1621" width="0.4" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="630.13" y="1631.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="645.6" y="3365" width="1.0" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="648.64" y="3375.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (20 samples, 0.13%)</title><rect x="876.3" y="2965" width="1.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="879.28" y="2975.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (3 samples, 0.02%)</title><rect x="619.1" y="821" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="622.15" y="831.5" ></text>
</g>
<g >
<title>0x110c59dfc (9 samples, 0.06%)</title><rect x="1162.8" y="3637" width="0.6" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1165.76" y="3647.5" ></text>
</g>
<g >
<title>`CATCH-FUNCTION^CORE^FN^^ (40 samples, 0.25%)</title><rect x="278.5" y="661" width="3.0" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="281.48" y="671.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (23 samples, 0.15%)</title><rect x="1169.4" y="3573" width="1.7" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="1172.40" y="3583.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (6 samples, 0.04%)</title><rect x="788.1" y="3621" width="0.5" height="15.0" fill="rgb(228,92,92)" rx="2" ry="2" />
<text  x="791.13" y="3631.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (6 samples, 0.04%)</title><rect x="643.9" y="2965" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="646.85" y="2975.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="646.4" y="3317" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="649.39" y="3327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.6" y="1109" width="0.1" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="632.60" y="1119.5" ></text>
</g>
<g >
<title>`llvm::GVN::iterateOnFunction(llvm::Function&amp;) (8 samples, 0.05%)</title><rect x="592.6" y="4437" width="0.6" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="595.57" y="4447.5" ></text>
</g>
<g >
<title>0x12616a80d (69 samples, 0.44%)</title><rect x="645.3" y="3621" width="5.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="648.27" y="3631.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (40 samples, 0.25%)</title><rect x="769.2" y="3637" width="3.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="772.17" y="3647.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (21 samples, 0.13%)</title><rect x="140.3" y="213" width="1.6" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="143.32" y="223.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (60 samples, 0.38%)</title><rect x="236.2" y="85" width="4.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="239.24" y="95.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="639.8" y="3413" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="642.82" y="3423.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="623.6" y="2213" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="626.62" y="2223.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.6 (2 samples, 0.01%)</title><rect x="656.7" y="2213" width="0.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="659.69" y="2223.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.30 (7 samples, 0.04%)</title><rect x="1176.9" y="3349" width="0.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="1179.94" y="3359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.8" y="1349" width="0.1" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="628.79" y="1359.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (89 samples, 0.56%)</title><rect x="1182.9" y="3573" width="6.7" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="1185.91" y="3583.5" ></text>
</g>
<g >
<title>0x1110a4be6 (3 samples, 0.02%)</title><rect x="632.4" y="2373" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="635.43" y="2383.5" ></text>
</g>
<g >
<title>`CATCH-FUNCTION^CORE^FN^^ (40 samples, 0.25%)</title><rect x="278.5" y="53" width="3.0" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="281.48" y="63.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="622.4" y="821" width="0.7" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="625.35" y="831.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (11 samples, 0.07%)</title><rect x="1087.9" y="3493" width="0.8" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="1090.89" y="3503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1077" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="627.00" y="1087.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (7 samples, 0.04%)</title><rect x="903.1" y="3525" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="906.08" y="3535.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (126 samples, 0.80%)</title><rect x="130.8" y="229" width="9.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="133.84" y="239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="885" width="0.2" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="623.64" y="895.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getPredicateAt(unsigned int, llvm::Value*, llvm::Constant*, llvm::Instruction*) (2 samples, 0.01%)</title><rect x="877.0" y="2597" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="880.03" y="2607.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="1176.9" y="3669" width="0.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="1179.94" y="3679.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (24 samples, 0.15%)</title><rect x="730.6" y="3589" width="1.8" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="733.58" y="3599.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="629.7" y="2149" width="0.2" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="632.74" y="2159.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.28 (11 samples, 0.07%)</title><rect x="643.5" y="3221" width="0.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="646.48" y="3231.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((BLOCK-AST T))^METHOD^^.152 (5 samples, 0.03%)</title><rect x="273.0" y="165" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="275.96" y="175.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (20 samples, 0.13%)</title><rect x="630.8" y="293" width="1.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="633.79" y="303.5" ></text>
</g>
<g >
<title>0x1501b4cfb (2 samples, 0.01%)</title><rect x="240.7" y="421" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="243.72" y="431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1381" width="0.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="629.16" y="1391.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (6 samples, 0.04%)</title><rect x="643.9" y="2997" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="646.85" y="3007.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="1525" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="632.45" y="1535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1317" width="0.9" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="629.16" y="1327.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="639.5" y="3269" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="642.52" y="3279.5" ></text>
</g>
<g >
<title>0x1258cfc3b (64 samples, 0.40%)</title><rect x="273.7" y="789" width="4.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="276.71" y="799.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^METHOD^^.35 (407 samples, 2.57%)</title><rect x="240.9" y="277" width="30.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="243.86" y="287.5" >`C..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((VALUES-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1013" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="626.70" y="1023.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="1158.1" y="3493" width="0.2" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="1161.05" y="3503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (12 samples, 0.08%)</title><rect x="243.4" y="85" width="0.9" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="246.40" y="95.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="625.7" y="1829" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="628.71" y="1839.5" ></text>
</g>
<g >
<title>`llvm::InstructionCombiningPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="824.9" y="2853" width="0.1" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="827.86" y="2863.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="623.6" y="2101" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="626.62" y="2111.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3541" width="284.1" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="13.00" y="3551.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>0x1257602e2 (3 samples, 0.02%)</title><rect x="619.1" y="2133" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="622.15" y="2143.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (375 samples, 2.37%)</title><rect x="1122.4" y="3717" width="28.0" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1125.38" y="3727.5" >`..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="627.7" y="1941" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="630.65" y="1951.5" ></text>
</g>
<g >
<title>`wrapped_cl__last_List_spInteger_sp (8 samples, 0.05%)</title><rect x="922.0" y="3717" width="0.6" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="925.04" y="3727.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (83 samples, 0.53%)</title><rect x="15.0" y="709" width="6.2" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="18.00" y="719.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*, llvm::DominatorTree const*, llvm::CmpInst::Predicate, llvm::AssumptionCache*, llvm::Instruction const*, llvm::Value*, llvm::Value*) (3 samples, 0.02%)</title><rect x="612.7" y="4325" width="0.3" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="615.73" y="4335.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (18 samples, 0.11%)</title><rect x="946.8" y="3589" width="1.4" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="949.82" y="3599.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (6 samples, 0.04%)</title><rect x="905.2" y="3669" width="0.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="908.17" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (5 samples, 0.03%)</title><rect x="627.1" y="1813" width="0.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="630.13" y="1823.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="625.3" y="853" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="628.27" y="863.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="1182.1" y="3797" width="0.1" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="1185.09" y="3807.5" ></text>
</g>
<g >
<title>`llvm::X86TargetMachine::getSubtargetImpl(llvm::Function const&amp;) const (2 samples, 0.01%)</title><rect x="572.9" y="4405" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="575.94" y="4415.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (9 samples, 0.06%)</title><rect x="657.6" y="2533" width="0.7" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="660.59" y="2543.5" ></text>
</g>
<g >
<title>`LOAD-SYSTEM^ASDF/OPERATE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3621" width="284.1" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="13.00" y="3631.5" >`LOAD-SYSTEM^ASDF/OPERATE^FN^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.3" y="1589" width="0.1" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="623.27" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="837" width="0.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="629.16" y="847.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (184 samples, 1.16%)</title><rect x="619.1" y="3653" width="13.7" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="622.07" y="3663.5" ></text>
</g>
<g >
<title>`core::cl__class_of(gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.03%)</title><rect x="909.3" y="3717" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="912.35" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="677" width="0.2" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="625.13" y="687.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.8" y="693" width="0.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="626.77" y="703.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="620.6" y="1781" width="0.2" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="623.64" y="1791.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3,461 samples, 21.89%)</title><rect x="15.0" y="901" width="258.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="18.00" y="911.5" >`COMBINE-METHOD-FUNCTIONS.LAMBDA^C..</text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T))^METHOD^^ (6 samples, 0.04%)</title><rect x="644.8" y="3573" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="647.82" y="3583.5" ></text>
</g>
<g >
<title>`llvm::LiveRegMatrix::checkRegUnitInterference(llvm::LiveInterval&amp;, unsigned int) (2 samples, 0.01%)</title><rect x="576.9" y="4309" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="579.90" y="4319.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1893" width="1.2" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="623.86" y="1903.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (27 samples, 0.17%)</title><rect x="630.3" y="2197" width="2.1" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="633.34" y="2207.5" ></text>
</g>
<g >
<title>0x1110a62f6 (23 samples, 0.15%)</title><rect x="630.6" y="1589" width="1.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="633.64" y="1599.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="619.4" y="149" width="0.4" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="622.44" y="159.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (9 samples, 0.06%)</title><rect x="645.6" y="3333" width="0.7" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="648.64" y="3343.5" ></text>
</g>
<g >
<title>0x1110a4be6 (27 samples, 0.17%)</title><rect x="630.3" y="3221" width="2.1" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="633.34" y="3231.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (2 samples, 0.01%)</title><rect x="1011.2" y="3413" width="0.1" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="1014.16" y="3423.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (2 samples, 0.01%)</title><rect x="14.9" y="533" width="0.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="17.85" y="543.5" ></text>
</g>
<g >
<title>0x1257602e2 (21 samples, 0.13%)</title><rect x="630.8" y="1077" width="1.6" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="633.79" y="1087.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (12 samples, 0.08%)</title><rect x="626.2" y="533" width="0.9" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="629.16" y="543.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="659.2" y="3317" width="0.1" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="662.15" y="3327.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.02%)</title><rect x="643.3" y="3605" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="646.25" y="3615.5" ></text>
</g>
<g >
<title>0x1501b4d6b (5 samples, 0.03%)</title><rect x="173.9" y="85" width="0.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="176.91" y="95.5" ></text>
</g>
<g >
<title>0x110e0012e (7 samples, 0.04%)</title><rect x="734.8" y="3653" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="737.76" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1093" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="635.43" y="1103.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (2 samples, 0.01%)</title><rect x="620.3" y="1973" width="0.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="623.27" y="1983.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="645.1" y="3509" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="648.12" y="3519.5" ></text>
</g>
<g >
<title>`FIND-IN-MAPPING^CLEAVIR-PARTIAL-INLINING^((HASH-TABLE T))^METHOD^^.5 (2 samples, 0.01%)</title><rect x="666.5" y="3429" width="0.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="669.47" y="3439.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (31 samples, 0.20%)</title><rect x="1186.8" y="2085" width="2.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="1189.79" y="2095.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="623.3" y="517" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="626.33" y="527.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (9 samples, 0.06%)</title><rect x="620.9" y="613" width="0.6" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="623.86" y="623.5" ></text>
</g>
<g >
<title>`write (2 samples, 0.01%)</title><rect x="572.7" y="4325" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="575.72" y="4335.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="644.1" y="2885" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="647.08" y="2895.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="623.1" y="357" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="626.10" y="367.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1637" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="630.65" y="1647.5" ></text>
</g>
<g >
<title>0x1501b4cfb (40 samples, 0.25%)</title><rect x="278.5" y="613" width="3.0" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="281.48" y="623.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.3" y="2229" width="0.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="623.27" y="2239.5" ></text>
</g>
<g >
<title>`ADD-MULTIPLE-SUCCESSOR-INSTRUCTION-BEFORE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="651.0" y="3621" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="654.02" y="3631.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (32 samples, 0.20%)</title><rect x="927.1" y="3685" width="2.4" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="930.11" y="3695.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="625.9" y="997" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="628.94" y="1007.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (6 samples, 0.04%)</title><rect x="1021.2" y="3733" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="1024.24" y="3743.5" ></text>
</g>
<g >
<title>0x11bdea90b (4 samples, 0.03%)</title><rect x="751.4" y="3653" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="754.41" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="629.4" y="1269" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="632.45" y="1279.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (27 samples, 0.17%)</title><rect x="630.3" y="3077" width="2.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="633.34" y="3087.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (16 samples, 0.10%)</title><rect x="142.3" y="117" width="1.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="145.26" y="127.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (176 samples, 1.11%)</title><rect x="273.6" y="917" width="13.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="276.63" y="927.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="656.5" y="3317" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="659.54" y="3327.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="664.5" y="3397" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="667.53" y="3407.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="620.6" y="2181" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="623.64" y="2191.5" ></text>
</g>
<g >
<title>0x1258cfc3b (2 samples, 0.01%)</title><rect x="173.6" y="293" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="176.61" y="303.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.4" y="469" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="632.45" y="479.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION^CLEAVIR-PARTIAL-INLINING^FN^^ (69 samples, 0.44%)</title><rect x="645.3" y="3557" width="5.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="648.27" y="3567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.4" y="757" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="632.45" y="767.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE.58 (6 samples, 0.04%)</title><rect x="823.3" y="2917" width="0.4" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="826.29" y="2927.5" ></text>
</g>
<g >
<title>`core::core__instance_ref(gctools::smart_ptr&lt;core::T_O&gt;, int) (3 samples, 0.02%)</title><rect x="974.4" y="3669" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="977.44" y="3679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.6" y="1333" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="623.64" y="1343.5" ></text>
</g>
<g >
<title>`client_validate (4 samples, 0.03%)</title><rect x="1070.6" y="3685" width="0.3" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="1073.65" y="3695.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="617.9" y="3765" width="0.1" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="620.88" y="3775.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.31 (21 samples, 0.13%)</title><rect x="656.7" y="3061" width="1.6" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="659.69" y="3071.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="645.1" y="3525" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="648.12" y="3535.5" ></text>
</g>
<g >
<title>0x1258cfc3b (63 samples, 0.40%)</title><rect x="273.8" y="693" width="4.7" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="276.78" y="703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="997" width="0.9" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="629.16" y="1007.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1909" width="0.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="635.43" y="1919.5" ></text>
</g>
<g >
<title>0x1110a5606 (24 samples, 0.15%)</title><rect x="619.1" y="3141" width="1.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="622.07" y="3151.5" ></text>
</g>
<g >
<title>`llvm::InstructionCombiningPass::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="826.1" y="2901" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="829.05" y="2911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="405" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="628.94" y="415.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="623.8" y="373" width="0.1" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="626.77" y="383.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (3 samples, 0.02%)</title><rect x="603.8" y="4277" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="606.84" y="4287.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;std::__1::__value_type&lt;llvm::Function const*, std::__1::unique_ptr&lt;llvm::CallGraphNode, std::__1::default_delete&lt;llvm::CallGraphNode&gt; &gt; &gt;, std::__1::__map_value_compare&lt;llvm::Function const*, std::__1::__value_type&lt;llvm::Function const*, std::__1::unique_ptr&lt;llvm::CallGraphNode, std::__1::default_delete&lt;llvm::CallGraphNode&gt; &gt; &gt;, std::__1::less&lt;llvm::Function const*&gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;llvm::Function const*, std::__1::unique_ptr&lt;llvm::CallGraphNode, std::__1::default_delete&lt;llvm::CallGraphNode&gt; &gt; &gt; &gt; &gt;::destroy(std::__1::__tree_node&lt;std::__1::__value_type&lt;llvm::Function const*, std::__1::unique_ptr&lt;llvm::CallGraphNode, std::__1::default_delete&lt;llvm::CallGraphNode&gt; &gt; &gt;, void*&gt;*) (2 samples, 0.01%)</title><rect x="596.8" y="4405" width="0.1" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="599.75" y="4415.5" ></text>
</g>
<g >
<title>0x110c5913e (12 samples, 0.08%)</title><rect x="1160.8" y="3637" width="0.9" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1163.82" y="3647.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.8 (21 samples, 0.13%)</title><rect x="656.7" y="2965" width="1.6" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="659.69" y="2975.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE*^COMPILER^FN^^ (12 samples, 0.08%)</title><rect x="872.5" y="3125" width="0.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="875.48" y="3135.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^METHOD^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="677" width="109.6" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="24.20" y="687.5" >`CONVERT-SPEC..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.3" y="629" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="626.33" y="639.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (3 samples, 0.02%)</title><rect x="651.3" y="3557" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="654.32" y="3567.5" ></text>
</g>
<g >
<title>0x1257602e2 (4 samples, 0.03%)</title><rect x="628.2" y="773" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="631.18" y="783.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2917" width="284.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="13.00" y="2927.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="325" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="625.13" y="335.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (4 samples, 0.03%)</title><rect x="957.5" y="3733" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="960.49" y="3743.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (4 samples, 0.03%)</title><rect x="1185.7" y="2021" width="0.3" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="1188.75" y="2031.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (17 samples, 0.11%)</title><rect x="620.9" y="2085" width="1.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="623.86" y="2095.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (829 samples, 5.24%)</title><rect x="174.3" y="421" width="61.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="177.28" y="431.5" >`conve..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (21 samples, 0.13%)</title><rect x="630.8" y="1333" width="1.6" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="633.79" y="1343.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (496 samples, 3.14%)</title><rect x="827.5" y="3653" width="37.0" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="830.47" y="3663.5" >`co..</text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="629.7" y="1573" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="632.74" y="1583.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (426 samples, 2.69%)</title><rect x="240.9" y="341" width="31.8" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="243.86" y="351.5" >`c..</text>
</g>
<g >
<title>0x1501182f3 (2 samples, 0.01%)</title><rect x="1181.9" y="3701" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="1184.94" y="3711.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (10 samples, 0.06%)</title><rect x="12.8" y="517" width="0.7" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="15.76" y="527.5" ></text>
</g>
<g >
<title>0x111521403 (4 samples, 0.03%)</title><rect x="665.6" y="3365" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="668.57" y="3375.5" ></text>
</g>
<g >
<title>`wrapped_cl__load_T_spT_spT_spT_spT_spT_sp (3,806 samples, 24.07%)</title><rect x="10.0" y="4533" width="284.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="13.00" y="4543.5" >`wrapped_cl__load_T_spT_spT_spT_spT_sp..</text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.32 (7 samples, 0.04%)</title><rect x="1176.9" y="3621" width="0.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="1179.94" y="3631.5" ></text>
</g>
<g >
<title>`INSTANCE-SET^CORE^FN^^ (21 samples, 0.13%)</title><rect x="735.7" y="3637" width="1.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="738.66" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.02%)</title><rect x="628.0" y="373" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="630.95" y="383.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (426 samples, 2.69%)</title><rect x="240.9" y="389" width="31.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="243.86" y="399.5" >`i..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="632.4" y="1813" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="635.43" y="1823.5" ></text>
</g>
<g >
<title>`OPERATE^ASDF/OPERATE^((:AROUND) (T T))^METHOD^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="3781" width="284.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="13.00" y="3791.5" >`OPERATE^ASDF/OPERATE^((:AROUND) (T T)..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (23 samples, 0.15%)</title><rect x="619.1" y="2901" width="1.7" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="622.07" y="2911.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (6 samples, 0.04%)</title><rect x="619.4" y="2517" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="622.37" y="2527.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (11 samples, 0.07%)</title><rect x="643.5" y="3061" width="0.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="646.48" y="3071.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.12 (12 samples, 0.08%)</title><rect x="872.5" y="3381" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="875.48" y="3391.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="629.4" y="917" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="632.45" y="927.5" ></text>
</g>
<g >
<title>`inline-function.lisp-inline-function396^44^TOP-COMPILE-FILE.129 (3,246 samples, 20.53%)</title><rect x="637.5" y="3733" width="242.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="640.51" y="3743.5" >`inline-function.lisp-inline-fun..</text>
</g>
<g >
<title>0x123ae11b3 (2 samples, 0.01%)</title><rect x="876.1" y="3333" width="0.1" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="879.06" y="3343.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="622.1" y="501" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="625.13" y="511.5" ></text>
</g>
<g >
<title>`MAKE-FUNCALL-INSTRUCTION^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="652.0" y="3589" width="0.3" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="654.99" y="3599.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (4 samples, 0.03%)</title><rect x="141.9" y="197" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="144.89" y="207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1125" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="623.64" y="1135.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="757" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="635.43" y="767.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.22 (21 samples, 0.13%)</title><rect x="656.7" y="2693" width="1.6" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="659.69" y="2703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="622.1" y="485" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="625.13" y="495.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitICmpInst(llvm::ICmpInst&amp;) (4 samples, 0.03%)</title><rect x="590.9" y="4421" width="0.3" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="593.86" y="4431.5" ></text>
</g>
<g >
<title>`STANDARD-INSTANCE-ACCESS^CLOS^SETF^^ (9 samples, 0.06%)</title><rect x="902.9" y="3589" width="0.7" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="905.93" y="3599.5" ></text>
</g>
<g >
<title>0x110cd62a2 (82 samples, 0.52%)</title><rect x="15.0" y="453" width="6.1" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="18.00" y="463.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="649.6" y="3349" width="0.1" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="652.60" y="3359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (10 samples, 0.06%)</title><rect x="12.8" y="309" width="0.7" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="15.76" y="319.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (64 samples, 0.40%)</title><rect x="282.0" y="133" width="4.8" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="284.99" y="143.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.22 (11 samples, 0.07%)</title><rect x="643.5" y="3269" width="0.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="646.48" y="3279.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (17 samples, 0.11%)</title><rect x="620.9" y="1573" width="1.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="623.86" y="1583.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::freePass(llvm::Pass*, llvm::StringRef, llvm::PassDebuggingString) (2 samples, 0.01%)</title><rect x="596.8" y="4485" width="0.1" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="599.75" y="4495.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (102 samples, 0.65%)</title><rect x="620.9" y="2517" width="7.6" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="623.86" y="2527.5" ></text>
</g>
<g >
<title>0x129141129 (2 samples, 0.01%)</title><rect x="768.5" y="3653" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="771.50" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="619.1" y="549" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="622.15" y="559.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (4 samples, 0.03%)</title><rect x="1177.2" y="3109" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="1180.16" y="3119.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (55 samples, 0.35%)</title><rect x="169.4" y="149" width="4.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="172.43" y="159.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="625.3" y="725" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="628.27" y="735.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.4" y="1237" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="633.42" y="1247.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (83 samples, 0.53%)</title><rect x="990.3" y="3701" width="6.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="993.34" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="627.5" y="1749" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="630.51" y="1759.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="628.0" y="517" width="0.2" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="630.95" y="527.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.3" y="1429" width="0.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="626.33" y="1439.5" ></text>
</g>
<g >
<title>`llvm::FindAvailablePtrLoadStore(llvm::Value*, llvm::Type*, bool, llvm::BasicBlock*, llvm::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::Instruction, false, false, void&gt;, false, false&gt;&amp;, unsigned int, llvm::AAResults*, bool*, unsigned int*) (6 samples, 0.04%)</title><rect x="603.4" y="4325" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="606.40" y="4335.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (5 samples, 0.03%)</title><rect x="1156.6" y="3333" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1159.64" y="3343.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, long long, bool) const (7 samples, 0.04%)</title><rect x="1005.7" y="3621" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="1008.71" y="3631.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (6 samples, 0.04%)</title><rect x="698.6" y="3621" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="701.64" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="623.1" y="1349" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="626.10" y="1359.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (5 samples, 0.03%)</title><rect x="665.5" y="3397" width="0.4" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="668.50" y="3407.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="639.4" y="3333" width="0.1" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="642.37" y="3343.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.7 (9 samples, 0.06%)</title><rect x="997.6" y="3509" width="0.6" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="1000.58" y="3519.5" ></text>
</g>
<g >
<title>0x1110a4be6 (7 samples, 0.04%)</title><rect x="628.0" y="1477" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="630.95" y="1487.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (2 samples, 0.01%)</title><rect x="1087.0" y="3573" width="0.1" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="1090.00" y="3583.5" ></text>
</g>
<g >
<title>0x1110a5606 (13 samples, 0.08%)</title><rect x="626.2" y="1701" width="0.9" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="629.16" y="1711.5" ></text>
</g>
<g >
<title>`cc_fdefinition (5 samples, 0.03%)</title><rect x="871.4" y="3669" width="0.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="874.43" y="3679.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (16 samples, 0.10%)</title><rect x="660.1" y="3413" width="1.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="663.12" y="3423.5" ></text>
</g>
<g >
<title>`RUN-THUNK^CLASP-CLEAVIR^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="4053" width="284.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="13.00" y="4063.5" >`RUN-THUNK^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="628.0" y="725" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="630.95" y="735.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.8 (3 samples, 0.02%)</title><rect x="874.0" y="3365" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="876.97" y="3375.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LOCALLY) T T T))^METHOD^^ (37 samples, 0.23%)</title><rect x="144.7" y="197" width="2.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="147.73" y="207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="965" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="628.27" y="975.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.02%)</title><rect x="1182.3" y="3765" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="1185.31" y="3775.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (5 samples, 0.03%)</title><rect x="273.0" y="53" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="275.96" y="63.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.5" y="1173" width="0.1" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="623.49" y="1183.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (4 samples, 0.03%)</title><rect x="824.7" y="2869" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="827.71" y="2879.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (18 samples, 0.11%)</title><rect x="13.5" y="581" width="1.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="16.51" y="591.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="657.4" y="2405" width="0.2" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="660.44" y="2415.5" ></text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (2 samples, 0.01%)</title><rect x="1024.0" y="3749" width="0.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="1027.00" y="3759.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="620.3" y="1861" width="0.1" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="623.27" y="1871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1877" width="1.0" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="627.30" y="1887.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (435 samples, 2.75%)</title><rect x="240.9" y="725" width="32.4" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="243.86" y="735.5" >`c..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.6" y="677" width="0.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="633.64" y="687.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::Function_O&gt;) (40 samples, 0.25%)</title><rect x="278.5" y="149" width="3.0" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="281.48" y="159.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (5 samples, 0.03%)</title><rect x="625.7" y="1845" width="0.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="628.71" y="1855.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (7 samples, 0.04%)</title><rect x="1186.0" y="2021" width="0.6" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="1189.04" y="2031.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.11 (5 samples, 0.03%)</title><rect x="640.2" y="3189" width="0.4" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="643.19" y="3199.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^.154 (2 samples, 0.01%)</title><rect x="173.6" y="133" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="176.61" y="143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="2133" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="635.43" y="2143.5" ></text>
</g>
<g >
<title>0x1501b4d6b (40 samples, 0.25%)</title><rect x="278.5" y="581" width="3.0" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="281.48" y="591.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="627.1" y="1717" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="630.13" y="1727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (184 samples, 1.16%)</title><rect x="619.1" y="3701" width="13.7" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="622.07" y="3711.5" ></text>
</g>
<g >
<title>`llvm::ScopedHashTableScope&lt;llvm::MachineInstr*, unsigned int, llvm::MachineInstrExpressionTrait, llvm::RecyclingAllocator&lt;llvm::BumpPtrAllocatorImpl&lt;llvm::MallocAllocator, 4096ul, 4096ul&gt;, llvm::ScopedHashTableVal&lt;llvm::MachineInstr*, unsigned int&gt;, 32ul, 8ul&gt; &gt;::~ScopedHashTableScope() (3 samples, 0.02%)</title><rect x="574.6" y="4373" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="577.58" y="4383.5" ></text>
</g>
<g >
<title>`CODEGEN-SPECIAL-OPERATOR^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="823.5" y="1285" width="0.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="826.51" y="1295.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (33 samples, 0.21%)</title><rect x="948.8" y="3525" width="2.4" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="951.76" y="3535.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (6 samples, 0.04%)</title><rect x="619.4" y="2069" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="622.37" y="2079.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (9 samples, 0.06%)</title><rect x="660.3" y="3381" width="0.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="663.27" y="3391.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.20 (11 samples, 0.07%)</title><rect x="643.5" y="3141" width="0.8" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="646.48" y="3151.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.30 (11 samples, 0.07%)</title><rect x="643.5" y="3205" width="0.8" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="646.48" y="3215.5" ></text>
</g>
<g >
<title>0x123711728 (65 samples, 0.41%)</title><rect x="10.0" y="917" width="4.9" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="13.00" y="927.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="1797" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="622.37" y="1807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="837" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="630.95" y="847.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (65 samples, 0.41%)</title><rect x="281.9" y="293" width="4.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="284.92" y="303.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.4" y="1157" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="632.45" y="1167.5" ></text>
</g>
<g >
<title>0x1110a62f6 (4 samples, 0.03%)</title><rect x="632.4" y="3525" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="635.43" y="3535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (24 samples, 0.15%)</title><rect x="619.1" y="3061" width="1.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="622.07" y="3071.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const (6 samples, 0.04%)</title><rect x="571.6" y="4453" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="574.60" y="4463.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.89 (7 samples, 0.04%)</title><rect x="823.3" y="3029" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="826.29" y="3039.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="627.7" y="1173" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="630.65" y="1183.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="874.0" y="3397" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="876.97" y="3407.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.6" y="2037" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="623.64" y="2047.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (3 samples, 0.02%)</title><rect x="1165.7" y="3573" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1168.67" y="3583.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (19 samples, 0.12%)</title><rect x="271.2" y="149" width="1.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="274.24" y="159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="901" width="0.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="629.16" y="911.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE*^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="1156.6" y="3221" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="1159.64" y="3231.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="629.7" y="1381" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="632.74" y="1391.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.9" y="757" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="628.94" y="767.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (19 samples, 0.12%)</title><rect x="656.8" y="2629" width="1.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="659.84" y="2639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="623.7" y="1269" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="626.70" y="1279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (65 samples, 0.41%)</title><rect x="10.0" y="741" width="4.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.6" y="2421" width="0.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="623.64" y="2431.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (10 samples, 0.06%)</title><rect x="12.8" y="325" width="0.7" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="15.76" y="335.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^192^TOP-COMPILE-FILE.15 (7,680 samples, 48.58%)</title><rect x="616.3" y="4373" width="573.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="619.31" y="4383.5" >`debuginfo.lsp-debuginfo41^192^TOP-COMPILE-FILE.15</text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.30 (20 samples, 0.13%)</title><rect x="876.3" y="2981" width="1.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="879.28" y="2991.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (16 samples, 0.10%)</title><rect x="142.3" y="149" width="1.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="145.26" y="159.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="629.7" y="1541" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="632.74" y="1551.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="624.0" y="1109" width="0.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="627.00" y="1119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (12 samples, 0.08%)</title><rect x="626.2" y="133" width="0.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="629.16" y="143.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.101 (4 samples, 0.03%)</title><rect x="823.4" y="2181" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="826.44" y="2191.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SimplifyCFGOpt::run(llvm::BasicBlock*) (4 samples, 0.03%)</title><rect x="608.1" y="4357" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="611.10" y="4367.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (13 samples, 0.08%)</title><rect x="916.3" y="3685" width="1.0" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="919.29" y="3695.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="625.3" y="789" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="628.27" y="799.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef&lt;llvm::Constant*&gt;, llvm::DataLayout const&amp;, llvm::TargetLibraryInfo const*) (3 samples, 0.02%)</title><rect x="589.5" y="4405" width="0.2" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="592.51" y="4415.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (2 samples, 0.01%)</title><rect x="1177.8" y="3509" width="0.1" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="1180.76" y="3519.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solve() (3 samples, 0.02%)</title><rect x="597.7" y="4341" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="600.72" y="4351.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (126 samples, 0.80%)</title><rect x="130.8" y="117" width="9.4" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="133.84" y="127.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (3 samples, 0.02%)</title><rect x="1021.8" y="3685" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1024.76" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="1253" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="633.64" y="1263.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (9 samples, 0.06%)</title><rect x="646.8" y="3301" width="0.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="649.76" y="3311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="853" width="0.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="622.44" y="863.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.3" y="2101" width="0.1" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="623.27" y="2111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (16 samples, 0.10%)</title><rect x="622.1" y="1765" width="1.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="625.13" y="1775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.04%)</title><rect x="620.3" y="2741" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="623.27" y="2751.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="625.9" y="533" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="628.94" y="543.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="1176.9" y="3157" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="1179.94" y="3167.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (37 samples, 0.23%)</title><rect x="620.9" y="2229" width="2.7" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="623.86" y="2239.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Symbol_O&gt;::operator-&gt;() (2 samples, 0.01%)</title><rect x="1149.1" y="3685" width="0.1" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="1152.10" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="2389" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="623.64" y="2399.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T CST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="273.3" y="869" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="276.33" y="879.5" ></text>
</g>
<g >
<title>0x110d5d12c (2 samples, 0.01%)</title><rect x="1066.7" y="3733" width="0.1" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1069.69" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (12 samples, 0.08%)</title><rect x="872.5" y="3141" width="0.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="875.48" y="3151.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (4 samples, 0.03%)</title><rect x="629.4" y="1989" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="632.45" y="1999.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="628.2" y="1301" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="631.18" y="1311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="2453" width="0.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="623.49" y="2463.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (34 samples, 0.22%)</title><rect x="240.9" y="213" width="2.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="243.86" y="223.5" ></text>
</g>
<g >
<title>`inline-function.lisp-inline-function396^44^TOP-COMPILE-FILE.131 (254 samples, 1.61%)</title><rect x="1157.0" y="3701" width="19.0" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="1160.01" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="2213" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="622.15" y="2223.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T T T T))^METHOD^^ (77 samples, 0.49%)</title><rect x="873.4" y="3621" width="5.7" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="876.37" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="628.0" y="1109" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="630.95" y="1119.5" ></text>
</g>
<g >
<title>`INTERPRET^INTERPRET-AST^FN^^ (17 samples, 0.11%)</title><rect x="140.3" y="149" width="1.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="143.32" y="159.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (89 samples, 0.56%)</title><rect x="1182.9" y="3477" width="6.7" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="1185.91" y="3487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (7 samples, 0.04%)</title><rect x="620.3" y="2677" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="623.27" y="2687.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="648.6" y="3301" width="0.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="651.55" y="3311.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&amp;) (2 samples, 0.01%)</title><rect x="876.7" y="2581" width="0.1" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="879.66" y="2591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="1045" width="0.7" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="625.35" y="1055.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (4 samples, 0.03%)</title><rect x="169.4" y="69" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="172.43" y="79.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1781" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="628.27" y="1791.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="1187.8" y="581" width="0.1" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="1190.76" y="591.5" ></text>
</g>
<g >
<title>0x111521403 (2 samples, 0.01%)</title><rect x="645.1" y="3413" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="648.12" y="3423.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="2293" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="622.15" y="2303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (125 samples, 0.79%)</title><rect x="620.9" y="3125" width="9.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="623.86" y="3135.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="629.4" y="1365" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="632.45" y="1375.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.28 (6 samples, 0.04%)</title><rect x="1021.2" y="3333" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="1024.24" y="3343.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="625.8" y="1797" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="628.79" y="1807.5" ></text>
</g>
<g >
<title>0x11171939a (4 samples, 0.03%)</title><rect x="878.3" y="3413" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="881.30" y="3423.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (38 samples, 0.24%)</title><rect x="625.6" y="2437" width="2.9" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="628.64" y="2447.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="624.0" y="1509" width="0.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="627.00" y="1519.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.14 (16 samples, 0.10%)</title><rect x="635.6" y="3445" width="1.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="638.57" y="3455.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (22 samples, 0.14%)</title><rect x="1174.0" y="3621" width="1.7" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1177.03" y="3631.5" ></text>
</g>
<g >
<title>0x1110a4be6 (4 samples, 0.03%)</title><rect x="629.4" y="1781" width="0.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="632.45" y="1791.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind::Registers_x86_64&gt;::step() (2 samples, 0.01%)</title><rect x="1189.8" y="4581" width="0.1" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1192.78" y="4591.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.08%)</title><rect x="243.4" y="245" width="0.9" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="246.40" y="255.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="638.2" y="3493" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="641.18" y="3503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="661" width="0.7" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="625.35" y="671.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (11 samples, 0.07%)</title><rect x="627.7" y="2245" width="0.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="630.65" y="2255.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="627.7" y="1829" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="630.65" y="1839.5" ></text>
</g>
<g >
<title>`gctools::GCRootsInModule::getTaggedIndex(char, unsigned long) (5 samples, 0.03%)</title><rect x="1121.9" y="3701" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1124.93" y="3711.5" ></text>
</g>
<g >
<title>`__sfvwrite (14 samples, 0.09%)</title><rect x="567.7" y="4437" width="1.1" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="570.72" y="4447.5" ></text>
</g>
<g >
<title>`GC_alloc_large (75 samples, 0.47%)</title><rect x="1140.3" y="3557" width="5.6" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="1143.29" y="3567.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENCLOSE-INSTRUCTION T T T))^METHOD^^ (15 samples, 0.09%)</title><rect x="1187.5" y="965" width="1.1" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="1190.46" y="975.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (7 samples, 0.04%)</title><rect x="628.0" y="1525" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="630.95" y="1535.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (17 samples, 0.11%)</title><rect x="620.9" y="1717" width="1.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="623.86" y="1727.5" ></text>
</g>
<g >
<title>0x1110a3e66 (4 samples, 0.03%)</title><rect x="623.7" y="1093" width="0.3" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="626.70" y="1103.5" ></text>
</g>
<g >
<title>0x12913f333 (13 samples, 0.08%)</title><rect x="765.4" y="3653" width="1.0" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="768.44" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.9" y="277" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="628.94" y="287.5" ></text>
</g>
<g >
<title>0x1110a5456 (2 samples, 0.01%)</title><rect x="623.3" y="997" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="626.33" y="1007.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (5 samples, 0.03%)</title><rect x="667.4" y="3669" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="670.36" y="3679.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (2 samples, 0.01%)</title><rect x="1171.1" y="3573" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1174.12" y="3583.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE.87 (2 samples, 0.01%)</title><rect x="656.7" y="2597" width="0.1" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="659.69" y="2607.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.18 (6 samples, 0.04%)</title><rect x="1021.2" y="3269" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="1024.24" y="3279.5" ></text>
</g>
<g >
<title>`llvm::MemorySSAWrapperPass::runOnFunction(llvm::Function&amp;) (4 samples, 0.03%)</title><rect x="605.3" y="4405" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="608.34" y="4415.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const&amp;, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*) (2 samples, 0.01%)</title><rect x="602.4" y="4325" width="0.1" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="605.35" y="4335.5" ></text>
</g>
<g >
<title>`LINK-INLINE-REMOVE-BUILTINS^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="874.0" y="3013" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="876.97" y="3023.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="612.5" y="4309" width="0.2" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="615.50" y="4319.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.3" y="2213" width="0.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="623.27" y="2223.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::BranchFolderPass::runOnMachineFunction(llvm::MachineFunction&amp;) (2 samples, 0.01%)</title><rect x="573.8" y="4405" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="576.76" y="4415.5" ></text>
</g>
<g >
<title>`GC_start_routine (8,345 samples, 52.79%)</title><rect x="567.1" y="4773" width="622.9" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="570.12" y="4783.5" >`GC_start_routine</text>
</g>
<g >
<title>`MAKE-ENTER-INSTRUCTION^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="873.5" y="3557" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="876.52" y="3567.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (10 samples, 0.06%)</title><rect x="622.4" y="933" width="0.7" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="625.35" y="943.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE^COMPILER^FN^^ (21 samples, 0.13%)</title><rect x="656.7" y="3093" width="1.6" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="659.69" y="3103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="437" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="626.10" y="447.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T T ONE-SUCCESSOR-MIXIN T))^METHOD^^ (17 samples, 0.11%)</title><rect x="1157.1" y="3621" width="1.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="1160.08" y="3631.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.01%)</title><rect x="1179.8" y="3717" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1182.85" y="3727.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (582 samples, 3.68%)</title><rect x="130.8" y="725" width="43.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="133.84" y="735.5" >`COM..</text>
</g>
<g >
<title>0x111521403 (2 samples, 0.01%)</title><rect x="646.5" y="3173" width="0.1" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="649.46" y="3183.5" ></text>
</g>
<g >
<title>`cc_protect_alloca (2 samples, 0.01%)</title><rect x="732.7" y="3637" width="0.1" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="735.67" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="517" width="1.0" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="627.30" y="527.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.8" y="309" width="0.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="626.77" y="319.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (2 samples, 0.01%)</title><rect x="14.9" y="677" width="0.1" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="17.85" y="687.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (1,469 samples, 9.29%)</title><rect x="21.2" y="85" width="109.6" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="24.20" y="95.5" >`convert.lisp..</text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="629.4" y="1189" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="632.45" y="1199.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="623.7" y="1253" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="626.70" y="1263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="2133" width="1.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="623.86" y="2143.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (10 samples, 0.06%)</title><rect x="656.8" y="2597" width="0.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="659.84" y="2607.5" ></text>
</g>
<g >
<title>`llvm::LPPassManager::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="604.9" y="4405" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="607.89" y="4415.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.12 (6 samples, 0.04%)</title><rect x="1021.2" y="3445" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="1024.24" y="3455.5" ></text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^COMPILER^FN^^ (17 samples, 0.11%)</title><rect x="620.9" y="1157" width="1.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="623.86" y="1167.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (24 samples, 0.15%)</title><rect x="619.1" y="3429" width="1.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="622.07" y="3439.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.28 (3 samples, 0.02%)</title><rect x="874.0" y="3189" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="876.97" y="3199.5" ></text>
</g>
<g >
<title>0x15011c78d (3 samples, 0.02%)</title><rect x="652.3" y="3685" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="655.29" y="3695.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="14.9" y="885" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="17.85" y="895.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.03%)</title><rect x="625.3" y="1877" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="628.27" y="1887.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.01%)</title><rect x="634.4" y="3717" width="0.1" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="637.37" y="3727.5" ></text>
</g>
<g >
<title>0x1257602e2 (3 samples, 0.02%)</title><rect x="628.0" y="245" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="630.95" y="255.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (82 samples, 0.52%)</title><rect x="15.0" y="85" width="6.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="18.00" y="95.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="639.5" y="3349" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="642.52" y="3359.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((BLOCK-AST T))^METHOD^^.152 (2 samples, 0.01%)</title><rect x="173.6" y="181" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="176.61" y="191.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="629.7" y="1477" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="632.74" y="1487.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="1141" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="622.15" y="1151.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const*, llvm::SmallPtrSet&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const*, 8u&gt;, false, llvm::GraphTraits&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const*&gt; &gt;::traverseChild() (2 samples, 0.01%)</title><rect x="605.1" y="4341" width="0.2" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="608.11" y="4351.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (2 samples, 0.01%)</title><rect x="587.0" y="4405" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="589.98" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="2917" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="635.43" y="2927.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (60 samples, 0.38%)</title><rect x="236.2" y="405" width="4.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="239.24" y="415.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="1176.9" y="2997" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1179.94" y="3007.5" ></text>
</g>
<g >
<title>0x1110a5606 (10 samples, 0.06%)</title><rect x="629.4" y="2949" width="0.8" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="632.45" y="2959.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="624.0" y="981" width="0.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="627.00" y="991.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T))^METHOD^^ (89 samples, 0.56%)</title><rect x="1182.9" y="3365" width="6.7" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="1185.91" y="3375.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="648.6" y="3253" width="0.1" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="651.55" y="3263.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="640.2" y="2853" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="643.19" y="2863.5" ></text>
</g>
<g >
<title>`core::core__multiple_value_funcall(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::List_V&gt;) (98 samples, 0.62%)</title><rect x="286.8" y="1093" width="7.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="289.77" y="1103.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (24 samples, 0.15%)</title><rect x="619.1" y="3109" width="1.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="622.07" y="3119.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="619.1" y="421" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="622.15" y="431.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="622.1" y="149" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="625.13" y="159.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.1" y="2517" width="0.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="632.07" y="2527.5" ></text>
</g>
<g >
<title>0x1258cfc3b (63 samples, 0.40%)</title><rect x="273.8" y="581" width="4.7" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="276.78" y="591.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="623.1" y="1637" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="626.10" y="1647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (17 samples, 0.11%)</title><rect x="620.9" y="1941" width="1.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="623.86" y="1951.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="1077" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="628.94" y="1087.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (74 samples, 0.47%)</title><rect x="1184.0" y="2549" width="5.6" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="1187.03" y="2559.5" ></text>
</g>
<g >
<title>0x11171939a (3 samples, 0.02%)</title><rect x="651.3" y="3573" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="654.32" y="3583.5" ></text>
</g>
<g >
<title>0x110cd62a2 (572 samples, 3.62%)</title><rect x="130.8" y="453" width="42.7" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="133.84" y="463.5" >0x11..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="623.1" y="1237" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="626.10" y="1247.5" ></text>
</g>
<g >
<title>0x1257602e2 (13 samples, 0.08%)</title><rect x="626.2" y="1861" width="0.9" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="629.16" y="1871.5" ></text>
</g>
<g >
<title>`IRC-CALCULATE-ENTRY^COMPILER^FN^^ (23 samples, 0.15%)</title><rect x="1184.9" y="2293" width="1.7" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="1187.92" y="2303.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="623.3" y="501" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="626.33" y="511.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.14 (2 samples, 0.01%)</title><rect x="656.7" y="2149" width="0.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="659.69" y="2159.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (15 samples, 0.09%)</title><rect x="619.1" y="2693" width="1.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="622.15" y="2703.5" ></text>
</g>
<g >
<title>0x123710fd8 (22 samples, 0.14%)</title><rect x="140.2" y="277" width="1.7" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="143.25" y="287.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.03%)</title><rect x="642.6" y="3605" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="645.58" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="629.4" y="1253" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="632.45" y="1263.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (12 samples, 0.08%)</title><rect x="626.2" y="517" width="0.9" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="629.16" y="527.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (19 samples, 0.12%)</title><rect x="825.1" y="3029" width="1.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="828.08" y="3039.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (20 samples, 0.13%)</title><rect x="622.1" y="1925" width="1.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="625.13" y="1935.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="622.1" y="469" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="625.13" y="479.5" ></text>
</g>
<g >
<title>`combineInstructionsOverFunction(llvm::Function&amp;, llvm::InstCombineWorklist&amp;, llvm::AAResults*, llvm::AssumptionCache&amp;, llvm::TargetLibraryInfo&amp;, llvm::DominatorTree&amp;, llvm::OptimizationRemarkEmitter&amp;, bool, llvm::LoopInfo*) (2 samples, 0.01%)</title><rect x="824.9" y="2837" width="0.1" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="827.86" y="2847.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (8,345 samples, 52.79%)</title><rect x="567.1" y="4677" width="622.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="570.12" y="4687.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="2133" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="632.45" y="2143.5" ></text>
</g>
<g >
<title>`inline-function.lisp-inline-function396^44^TOP-COMPILE-FILE.129 (254 samples, 1.61%)</title><rect x="1157.0" y="3717" width="19.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="1160.01" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="981" width="0.7" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="625.35" y="991.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Vaslist&gt;::smart_ptr(core::Vaslist*) (2 samples, 0.01%)</title><rect x="1016.7" y="3701" width="0.1" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1019.68" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1205" width="1.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="627.30" y="1215.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.6" y="965" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="633.64" y="975.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="1181.9" y="3717" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="1184.94" y="3727.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T))^METHOD^^ (25 samples, 0.16%)</title><rect x="653.2" y="3573" width="1.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="656.18" y="3583.5" ></text>
</g>
<g >
<title>all (15,809 samples, 100%)</title><rect x="10.0" y="4837" width="1180.0" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="13.00" y="4847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="1301" width="1.0" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="627.30" y="1311.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvmo::PassManager_O, bool (llvm::legacy::PassManager::*)(llvm::Module&amp;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (253 samples, 1.60%)</title><rect x="597.4" y="4469" width="18.8" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="600.35" y="4479.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::ResolvedUndefsIn(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="593.2" y="4453" width="0.1" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="596.17" y="4463.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (27 samples, 0.17%)</title><rect x="630.3" y="2165" width="2.1" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="633.34" y="2175.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="629.4" y="2117" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="632.45" y="2127.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (4 samples, 0.03%)</title><rect x="1177.2" y="3125" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1180.16" y="3135.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ASSIGNMENT-INSTRUCTION T T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="1184.3" y="2357" width="0.1" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="1187.25" y="2367.5" ></text>
</g>
<g >
<title>`inline-one-instruction.lisp-inline-one-instruction395^185^TOP-COMPILE-FILE.95 (3 samples, 0.02%)</title><rect x="644.5" y="3605" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="647.52" y="3615.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CVPLatticeFunc::ComputeInstructionState(llvm::Instruction&amp;, llvm::DenseMap&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt;, (anonymous namespace)::CVPLatticeVal, llvm::DenseMapInfo&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt; &gt;, llvm::detail::DenseMapPair&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt;, (anonymous namespace)::CVPLatticeVal&gt; &gt;&amp;, llvm::SparseSolver&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*? (3 samples, 0.02%)</title><rect x="615.7" y="4405" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="618.71" y="4415.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (2 samples, 0.01%)</title><rect x="240.7" y="309" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="243.72" y="319.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="627.1" y="1173" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="630.13" y="1183.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (34 samples, 0.22%)</title><rect x="240.9" y="133" width="2.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="243.86" y="143.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="626.2" y="1445" width="0.9" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="629.16" y="1455.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (7 samples, 0.04%)</title><rect x="627.1" y="2213" width="0.6" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="630.13" y="2223.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.26 (4 samples, 0.03%)</title><rect x="823.4" y="1845" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="826.44" y="1855.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="626.2" y="949" width="0.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="629.16" y="959.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="629.4" y="1941" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="632.45" y="1951.5" ></text>
</g>
<g >
<title>`llvm::orc::IRTransformLayer&lt;llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;, std::__1::function&lt;std::__1::shared_ptr&lt;llvm::Module&gt; (std::__1::shared_ptr&lt;llvm::Module&gt;)&gt; &gt;::addModule(std::__1::shared_ptr&lt;llvm::Module&gt;, std::__1::shared_ptr&lt;llvm::JITSymbolResolver&gt;) (3 samples, 0.02%)</title><rect x="997.7" y="3013" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1000.65" y="3023.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE^COMPILER^FN^^ (43 samples, 0.27%)</title><rect x="823.3" y="3557" width="3.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="826.29" y="3567.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1,469 samples, 9.29%)</title><rect x="21.2" y="341" width="109.6" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="24.20" y="351.5" >`COMBINE-METH..</text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (3 samples, 0.02%)</title><rect x="1165.7" y="3589" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1168.67" y="3599.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="1176.9" y="3013" width="0.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="1179.94" y="3023.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoWrapperPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="614.6" y="4405" width="0.1" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="617.59" y="4415.5" ></text>
</g>
<g >
<title>0x1110a62f6 (3 samples, 0.02%)</title><rect x="627.7" y="997" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="630.65" y="1007.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="624.3" y="1525" width="1.0" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="627.30" y="1535.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.26 (6 samples, 0.04%)</title><rect x="823.3" y="2309" width="0.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="826.29" y="2319.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="647.4" y="3301" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="650.43" y="3311.5" ></text>
</g>
<g >
<title>`asdf.lisp-^10273^TOP-COMPILE-FILE.79 (3,806 samples, 24.07%)</title><rect x="10.0" y="2821" width="284.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="13.00" y="2831.5" >`asdf.lisp-^10273^TOP-COMPILE-FILE.79</text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.7 (7 samples, 0.04%)</title><rect x="874.9" y="3077" width="0.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="877.94" y="3087.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (3 samples, 0.02%)</title><rect x="1188.2" y="101" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1191.21" y="111.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (6 samples, 0.04%)</title><rect x="619.4" y="1781" width="0.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="622.37" y="1791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1141" width="0.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="627.00" y="1151.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (4 samples, 0.03%)</title><rect x="869.0" y="3653" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="872.04" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (13 samples, 0.08%)</title><rect x="626.2" y="1301" width="0.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="629.16" y="1311.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="638.3" y="3413" width="0.1" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="641.25" y="3423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="2165" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="623.64" y="2175.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="640.3" y="2805" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="643.34" y="2815.5" ></text>
</g>
<g >
<title>`CODEGEN-PROGN^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="1765" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="826.44" y="1775.5" ></text>
</g>
<g >
<title>`core::core__instance_ref(gctools::smart_ptr&lt;core::T_O&gt;, int) (3 samples, 0.02%)</title><rect x="971.7" y="3685" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="974.75" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.1" y="965" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="626.10" y="975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1989" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="622.15" y="1999.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (21 samples, 0.13%)</title><rect x="630.8" y="1061" width="1.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="633.79" y="1071.5" ></text>
</g>
<g >
<title>0x111521403 (2 samples, 0.01%)</title><rect x="659.2" y="3173" width="0.1" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="662.15" y="3183.5" ></text>
</g>
<g >
<title>0x110e002f3 (5 samples, 0.03%)</title><rect x="737.2" y="3653" width="0.4" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="740.23" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2341" width="2.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="633.34" y="2351.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (47 samples, 0.30%)</title><rect x="10.0" y="613" width="3.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (10 samples, 0.06%)</title><rect x="622.4" y="1461" width="0.7" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="625.35" y="1471.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (20 samples, 0.13%)</title><rect x="630.8" y="213" width="1.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="633.79" y="223.5" ></text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (2 samples, 0.01%)</title><rect x="655.3" y="3493" width="0.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="658.27" y="3503.5" ></text>
</g>
<g >
<title>0x111521403 (3 samples, 0.02%)</title><rect x="654.7" y="3413" width="0.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="657.67" y="3423.5" ></text>
</g>
<g >
<title>`pthread_getspecific (2 samples, 0.01%)</title><rect x="986.5" y="3669" width="0.1" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="989.45" y="3679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="628.0" y="501" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="630.95" y="511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="1397" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="628.94" y="1407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="625.3" y="37" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="628.27" y="47.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (2 samples, 0.01%)</title><rect x="652.7" y="3525" width="0.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="655.66" y="3535.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.33 (43 samples, 0.27%)</title><rect x="823.3" y="3493" width="3.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="826.29" y="3503.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.12 (21 samples, 0.13%)</title><rect x="656.7" y="2901" width="1.6" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="659.69" y="2911.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="630.4" y="1253" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="633.42" y="1263.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.0" y="2341" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="633.04" y="2351.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.32 (2 samples, 0.01%)</title><rect x="656.7" y="2005" width="0.1" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="659.69" y="2015.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="649.0" y="3397" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="652.00" y="3407.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (20 samples, 0.13%)</title><rect x="874.3" y="3381" width="1.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="877.34" y="3391.5" ></text>
</g>
<g >
<title>0x1110a5606 (17 samples, 0.11%)</title><rect x="620.9" y="1765" width="1.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="623.86" y="1775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.4" y="1013" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="633.42" y="1023.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (6 samples, 0.04%)</title><rect x="1177.5" y="3685" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1180.53" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="3029" width="2.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="633.34" y="3039.5" ></text>
</g>
<g >
<title>`INVALIDATED-DISPATCH-FUNCTION^CLOS^FN^^ (51 samples, 0.32%)</title><rect x="289.5" y="69" width="3.8" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="292.53" y="79.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (2 samples, 0.01%)</title><rect x="948.8" y="3509" width="0.1" height="15.0" fill="rgb(254,128,128)" rx="2" ry="2" />
<text  x="951.76" y="3519.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.3" y="725" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="626.33" y="735.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (3 samples, 0.02%)</title><rect x="603.8" y="4293" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="606.84" y="4303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="622.1" y="1541" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="625.13" y="1551.5" ></text>
</g>
<g >
<title>0x1290a7db8 (830 samples, 5.25%)</title><rect x="174.3" y="741" width="61.9" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="177.28" y="751.5" >0x1290..</text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (62 samples, 0.39%)</title><rect x="874.2" y="3477" width="4.6" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="877.19" y="3487.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="623.3" y="933" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="626.33" y="943.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="751.6" y="3621" width="0.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="754.56" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="629.4" y="965" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="632.45" y="975.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="647.9" y="3413" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="650.88" y="3423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.0" y="2741" width="0.2" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="633.04" y="2751.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (7 samples, 0.04%)</title><rect x="1184.4" y="2405" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="1187.40" y="2415.5" ></text>
</g>
<g >
<title>0x1257602e2 (13 samples, 0.08%)</title><rect x="624.3" y="1845" width="1.0" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="627.30" y="1855.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="949" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="635.43" y="959.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="626.2" y="1349" width="0.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="629.16" y="1359.5" ></text>
</g>
<g >
<title>0x1140073e7 (60 samples, 0.38%)</title><rect x="236.2" y="37" width="4.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="239.24" y="47.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1893" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="628.27" y="1903.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^3^TOP-COMPILE-FILE.16 (6 samples, 0.04%)</title><rect x="823.3" y="2597" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="826.29" y="2607.5" ></text>
</g>
<g >
<title>0x1257602e2 (20 samples, 0.13%)</title><rect x="622.1" y="2037" width="1.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="625.13" y="2047.5" ></text>
</g>
<g >
<title>0x111721260 (2 samples, 0.01%)</title><rect x="897.3" y="3701" width="0.1" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="900.26" y="3711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="625.9" y="85" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="628.94" y="95.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="872.5" y="3093" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="875.48" y="3103.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.26 (7 samples, 0.04%)</title><rect x="874.9" y="2901" width="0.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="877.94" y="2911.5" ></text>
</g>
<g >
<title>0x1293e933c (4 samples, 0.03%)</title><rect x="779.5" y="3653" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="782.47" y="3663.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="646.0" y="3317" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="649.02" y="3327.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core::Cons_O&gt; &gt; &gt;::resize(unsigned long, core::Cons_O const&amp;) (4 samples, 0.03%)</title><rect x="1177.7" y="3653" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1180.68" y="3663.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (8 samples, 0.05%)</title><rect x="621.5" y="485" width="0.6" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="624.53" y="495.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (5 samples, 0.03%)</title><rect x="997.9" y="3109" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="1000.87" y="3119.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="626.2" y="2021" width="0.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="629.16" y="2031.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.02%)</title><rect x="623.7" y="773" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="626.70" y="783.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (5 samples, 0.03%)</title><rect x="627.1" y="1829" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="630.13" y="1839.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.96 (28 samples, 0.18%)</title><rect x="1186.9" y="1749" width="2.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="1189.87" y="1759.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitCallSite(llvm::CallSite) (3 samples, 0.02%)</title><rect x="612.4" y="4341" width="0.3" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="615.43" y="4351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="3317" width="2.1" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="633.34" y="3327.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="622.1" y="1493" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="625.13" y="1503.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="625.8" y="1621" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="628.79" y="1631.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (43 samples, 0.27%)</title><rect x="823.3" y="3461" width="3.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="826.29" y="3471.5" ></text>
</g>
<g >
<title>0x1110a5606 (13 samples, 0.08%)</title><rect x="624.3" y="117" width="1.0" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="627.30" y="127.5" ></text>
</g>
<g >
<title>`read.lisp-read193^5^TOP-COMPILE-FILE.2 (98 samples, 0.62%)</title><rect x="286.8" y="1029" width="7.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="289.77" y="1039.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="2885" width="284.1" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="13.00" y="2895.5" >`core::DtreeInterpreter_O::entry_point..</text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (44 samples, 0.28%)</title><rect x="645.4" y="3477" width="3.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="648.42" y="3487.5" ></text>
</g>
<g >
<title>0x1110a5456 (4 samples, 0.03%)</title><rect x="625.3" y="1381" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="628.27" y="1391.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (65 samples, 0.41%)</title><rect x="10.0" y="709" width="4.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.0" y="2309" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="633.04" y="2319.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="1237" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="633.64" y="1247.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (8 samples, 0.05%)</title><rect x="627.9" y="1957" width="0.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="630.88" y="1967.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="645.1" y="3477" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="648.12" y="3487.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.75 (7,680 samples, 48.58%)</title><rect x="616.3" y="4485" width="573.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="619.31" y="4495.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.75</text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="917" width="0.1" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="627.00" y="927.5" ></text>
</g>
<g >
<title>`llvm::TargetLowering::LowerCallTo(llvm::TargetLowering::CallLoweringInfo&amp;) const (2 samples, 0.01%)</title><rect x="582.5" y="4277" width="0.1" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="585.50" y="4287.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="656.2" y="3397" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="659.24" y="3407.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (111 samples, 0.70%)</title><rect x="278.5" y="837" width="8.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="281.48" y="847.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (8 samples, 0.05%)</title><rect x="876.4" y="2789" width="0.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="879.43" y="2799.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="620.6" y="997" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="623.64" y="1007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2709" width="2.1" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="633.34" y="2719.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="629.6" y="885" width="0.1" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="632.60" y="895.5" ></text>
</g>
<g >
<title>0x11171939a (3 samples, 0.02%)</title><rect x="879.3" y="3637" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="882.34" y="3647.5" ></text>
</g>
<g >
<title>0x1110a5e76 (13 samples, 0.08%)</title><rect x="626.2" y="2069" width="0.9" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="629.16" y="2079.5" ></text>
</g>
<g >
<title>0x1110a5606 (4 samples, 0.03%)</title><rect x="623.7" y="1685" width="0.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="626.70" y="1695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="2261" width="0.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="623.49" y="2271.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.23 (1,469 samples, 9.29%)</title><rect x="21.2" y="101" width="109.6" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="24.20" y="111.5" >`convert.lisp..</text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned int, (anonymous namespace)::Query const&amp;) (2 samples, 0.01%)</title><rect x="607.5" y="4277" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="610.50" y="4287.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (11 samples, 0.07%)</title><rect x="1090.2" y="3653" width="0.8" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="1093.20" y="3663.5" ></text>
</g>
<g >
<title>0x1110a4be6 (3 samples, 0.02%)</title><rect x="627.7" y="1877" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="630.65" y="1887.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="1158.1" y="3461" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1161.05" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1957" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="635.43" y="1967.5" ></text>
</g>
<g >
<title>0x1110a62f6 (21 samples, 0.13%)</title><rect x="630.8" y="1493" width="1.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="633.79" y="1503.5" ></text>
</g>
<g >
<title>0x1257602e2 (3 samples, 0.02%)</title><rect x="628.0" y="821" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="630.95" y="831.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="620.3" y="2325" width="0.1" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="623.27" y="2335.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="645" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="622.15" y="655.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="626.2" y="1061" width="0.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="629.16" y="1071.5" ></text>
</g>
<g >
<title>`INSTANCE-REF^CORE^FN^^ (3 samples, 0.02%)</title><rect x="1068.6" y="3717" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="1071.56" y="3727.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^396^TOP-COMPILE-FILE.124 (90 samples, 0.57%)</title><rect x="1182.8" y="3797" width="6.8" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="1185.83" y="3807.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.6" y="1749" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="623.64" y="1759.5" ></text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="1156.6" y="3733" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="1159.64" y="3743.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((CALL-AST T))^METHOD^^.70 (71 samples, 0.45%)</title><rect x="281.5" y="389" width="5.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="284.47" y="399.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (8 samples, 0.05%)</title><rect x="874.9" y="3349" width="0.6" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="877.94" y="3359.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (5 samples, 0.03%)</title><rect x="1080.1" y="3717" width="0.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1083.13" y="3727.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.14 (20 samples, 0.13%)</title><rect x="876.3" y="3077" width="1.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="879.28" y="3087.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="648.6" y="3285" width="0.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="651.55" y="3295.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="655.1" y="3525" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="658.12" y="3535.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (4 samples, 0.03%)</title><rect x="623.7" y="1621" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="626.70" y="1631.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="469" width="0.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="622.15" y="479.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="619.8" y="2325" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="622.82" y="2335.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.01%)</title><rect x="906.1" y="3653" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="909.07" y="3663.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core::Cons_O&gt; &gt;::allocate_kind(gctools::Header_s::Value const&amp;, unsigned long, void const*) (84 samples, 0.53%)</title><rect x="851.7" y="3525" width="6.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="854.73" y="3535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.8" y="981" width="0.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="628.79" y="991.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^396^TOP-COMPILE-FILE.126 (90 samples, 0.57%)</title><rect x="1182.8" y="3781" width="6.8" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="1185.83" y="3791.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^351^TOP-COMPILE-FILE.26 (4 samples, 0.03%)</title><rect x="823.4" y="2053" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="826.44" y="2063.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (3,643 samples, 23.04%)</title><rect x="295.2" y="4725" width="271.9" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="298.20" y="4735.5" >`GC_do_local_mark</text>
</g>
<g >
<title>0x1110a5606 (13 samples, 0.08%)</title><rect x="624.3" y="805" width="1.0" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="627.30" y="815.5" ></text>
</g>
<g >
<title>0x11bde7278 (19 samples, 0.12%)</title><rect x="271.2" y="85" width="1.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="274.24" y="95.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (2 samples, 0.01%)</title><rect x="14.9" y="277" width="0.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="17.85" y="287.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.5" y="1141" width="0.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="623.49" y="1151.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (116 samples, 0.73%)</title><rect x="1093.3" y="3733" width="8.7" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1096.34" y="3743.5" ></text>
</g>
<g >
<title>`INSTANCE-SET^CORE^FN^^ (4 samples, 0.03%)</title><rect x="1102.1" y="3733" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="1105.15" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="624.3" y="581" width="1.0" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="627.30" y="591.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="626.2" y="1077" width="0.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="629.16" y="1087.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T CLASP-64BIT))^METHOD^^ (294 samples, 1.86%)</title><rect x="147.5" y="133" width="21.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="150.49" y="143.5" >`..</text>
</g>
<g >
<title>`asdf.lisp-^10273^TOP-COMPILE-FILE.78 (3,806 samples, 24.07%)</title><rect x="10.0" y="2837" width="284.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="13.00" y="2847.5" >`asdf.lisp-^10273^TOP-COMPILE-FILE.78</text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="632.4" y="581" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="635.43" y="591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.03%)</title><rect x="627.1" y="1765" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="630.13" y="1775.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="623.1" y="1621" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="626.10" y="1631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="623.7" y="1429" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="626.70" y="1439.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt; (llvmo::ClaspJIT_O::*)(gctools::smart_ptr&lt;llvmo::Module_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (5 samples, 0.03%)</title><rect x="872.5" y="2997" width="0.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="875.48" y="3007.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="620.6" y="2373" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="623.64" y="2383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.4" y="1109" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="633.42" y="1119.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (73 samples, 0.46%)</title><rect x="587.9" y="4485" width="5.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="590.95" y="4495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="628.0" y="917" width="0.2" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="630.95" y="927.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="549" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="626.33" y="559.5" ></text>
</g>
<g >
<title>0x10fbcf2b0 (5 samples, 0.03%)</title><rect x="900.7" y="3605" width="0.4" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="903.69" y="3615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'EVAL-WHEN) T T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="14.9" y="357" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="17.85" y="367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (14 samples, 0.09%)</title><rect x="626.1" y="2149" width="1.0" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="629.09" y="2159.5" ></text>
</g>
<g >
<title>`CODEGEN-LET/LET*^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="1893" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="826.44" y="1903.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (4 samples, 0.03%)</title><rect x="623.7" y="1861" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="626.70" y="1871.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.96 (7 samples, 0.04%)</title><rect x="1188.0" y="357" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="1190.98" y="367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="630.0" y="2693" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="633.04" y="2703.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (10 samples, 0.06%)</title><rect x="656.8" y="2581" width="0.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="659.84" y="2591.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^189^TOP-COMPILE-FILE.61 (89 samples, 0.56%)</title><rect x="1182.9" y="3493" width="6.7" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="1185.91" y="3503.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T))^METHOD^^ (80 samples, 0.51%)</title><rect x="1183.6" y="2901" width="6.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="1186.58" y="2911.5" ></text>
</g>
<g >
<title>`LINK-INLINE-REMOVE-BUILTINS^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="1177.1" y="3189" width="0.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="1180.09" y="3199.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.24 (2 samples, 0.01%)</title><rect x="14.9" y="693" width="0.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="17.85" y="703.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (6 samples, 0.04%)</title><rect x="1021.2" y="3205" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="1024.24" y="3215.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="620.5" y="1781" width="0.1" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="623.49" y="1791.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitAllocSite(llvm::Instruction&amp;) (4 samples, 0.03%)</title><rect x="612.0" y="4341" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="614.98" y="4351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^228^TOP-COMPILE-FILE.71 (6 samples, 0.04%)</title><rect x="619.4" y="2469" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="622.37" y="2479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="629.4" y="1221" width="0.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="632.45" y="1231.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="629.7" y="1957" width="0.2" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="632.74" y="1967.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="628.0" y="997" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="630.95" y="1007.5" ></text>
</g>
<g >
<title>`GC_mark_some (66 samples, 0.42%)</title><rect x="1141.0" y="3493" width="4.9" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="1143.96" y="3503.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::MachineBasicBlock*, std::__1::allocator&lt;llvm::MachineBasicBlock*&gt; &gt;::__push_back_slow_path&lt;llvm::MachineBasicBlock* const&amp;&gt;(llvm::MachineBasicBlock* const&amp;&amp;&amp;) (2 samples, 0.01%)</title><rect x="585.6" y="4357" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="588.63" y="4367.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="619.1" y="885" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="622.15" y="895.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="619.1" y="1877" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="622.15" y="1887.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="632.4" y="1109" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="635.43" y="1119.5" ></text>
</g>
<g >
<title>0x1110a62f6 (2 samples, 0.01%)</title><rect x="629.6" y="1093" width="0.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="632.60" y="1103.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (6 samples, 0.04%)</title><rect x="771.7" y="3605" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="774.71" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (126 samples, 0.80%)</title><rect x="620.9" y="3189" width="9.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="623.86" y="3199.5" ></text>
</g>
<g >
<title>`llvm::AAResultsWrapperPass::runOnFunction(llvm::Function&amp;) (6 samples, 0.04%)</title><rect x="599.5" y="4405" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="602.51" y="4415.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (3 samples, 0.02%)</title><rect x="650.2" y="3461" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="653.20" y="3471.5" ></text>
</g>
<g >
<title>0x1110a4be6 (2 samples, 0.01%)</title><rect x="629.4" y="821" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="632.45" y="831.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3 samples, 0.02%)</title><rect x="997.7" y="3077" width="0.2" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="1000.65" y="3087.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (52 samples, 0.33%)</title><rect x="645.4" y="3493" width="3.9" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="648.42" y="3503.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (96 samples, 0.61%)</title><rect x="286.9" y="405" width="7.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="289.92" y="415.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="625.3" y="661" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="628.27" y="671.5" ></text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((PROGN-AST T))^METHOD^^.138 (111 samples, 0.70%)</title><rect x="278.5" y="869" width="8.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="281.48" y="879.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (2 samples, 0.01%)</title><rect x="282.1" y="37" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="285.14" y="47.5" ></text>
</g>
<g >
<title>0x1293e9330 (10 samples, 0.06%)</title><rect x="778.7" y="3653" width="0.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="781.73" y="3663.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (4 samples, 0.03%)</title><rect x="726.3" y="3637" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="729.33" y="3647.5" ></text>
</g>
<g >
<title>`inline-prep.lisp-inline-prep437^29^TOP-COMPILE-FILE.11 (60 samples, 0.38%)</title><rect x="236.2" y="133" width="4.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="239.24" y="143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.04%)</title><rect x="629.4" y="2581" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="632.45" y="2591.5" ></text>
</g>
<g >
<title>`ast-interpreter.lisp-ast-interpreter424^491^TOP-COMPILE-FILE.659 (4 samples, 0.03%)</title><rect x="141.6" y="149" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="144.59" y="159.5" ></text>
</g>
<g >
<title>`convert.lisp-convert288^36^TOP-COMPILE-FILE.25 (1,469 samples, 9.29%)</title><rect x="21.2" y="245" width="109.6" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="24.20" y="255.5" >`convert.lisp..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="620.5" y="2149" width="0.1" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="623.49" y="2159.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T))^METHOD^^ (3 samples, 0.02%)</title><rect x="1184.2" y="2437" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="1187.18" y="2447.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (572 samples, 3.62%)</title><rect x="130.8" y="325" width="42.7" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="133.84" y="335.5" >`CON..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (2 samples, 0.01%)</title><rect x="628.8" y="2453" width="0.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="631.77" y="2463.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'EVAL-WHEN) T T T))^METHOD^^ (17 samples, 0.11%)</title><rect x="142.2" y="213" width="1.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="145.19" y="223.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (5 samples, 0.03%)</title><rect x="1160.2" y="3589" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1163.22" y="3599.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.293 (12 samples, 0.08%)</title><rect x="872.5" y="3621" width="0.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="875.48" y="3631.5" ></text>
</g>
<g >
<title>0x110cd62a2 (830 samples, 5.25%)</title><rect x="174.3" y="645" width="61.9" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="177.28" y="655.5" >0x110c..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="629" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="631.18" y="639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (27 samples, 0.17%)</title><rect x="630.3" y="2069" width="2.1" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="633.34" y="2079.5" ></text>
</g>
<g >
<title>`tlv_get_addr (5 samples, 0.03%)</title><rect x="779.1" y="3605" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="782.10" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="619.4" y="1493" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="622.44" y="1503.5" ></text>
</g>
<g >
<title>`combineInstructionsOverFunction(llvm::Function&amp;, llvm::InstCombineWorklist&amp;, llvm::AAResults*, llvm::AssumptionCache&amp;, llvm::TargetLibraryInfo&amp;, llvm::DominatorTree&amp;, llvm::OptimizationRemarkEmitter&amp;, bool, llvm::LoopInfo*) (2 samples, 0.01%)</title><rect x="873.2" y="2901" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="876.22" y="2911.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (3 samples, 0.02%)</title><rect x="876.1" y="3365" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="879.06" y="3375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (10 samples, 0.06%)</title><rect x="12.8" y="245" width="0.7" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="15.76" y="255.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.01%)</title><rect x="625.9" y="1189" width="0.2" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="628.94" y="1199.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="641.1" y="3317" width="0.1" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="644.09" y="3327.5" ></text>
</g>
<g >
<title>0x1257602e2 (2 samples, 0.01%)</title><rect x="624.0" y="1621" width="0.1" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="627.00" y="1631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="837" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="622.15" y="847.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.31 (16 samples, 0.10%)</title><rect x="635.6" y="3637" width="1.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="638.57" y="3647.5" ></text>
</g>
<g >
<title>0x110c59df4 (2 samples, 0.01%)</title><rect x="715.0" y="3653" width="0.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="717.98" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="623.1" y="1573" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="626.10" y="1583.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (7 samples, 0.04%)</title><rect x="1177.5" y="3765" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1180.46" y="3775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="623.3" y="1669" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="626.33" y="1679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (6 samples, 0.04%)</title><rect x="619.4" y="1765" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="622.37" y="1775.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (35 samples, 0.22%)</title><rect x="816.0" y="3605" width="2.6" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="818.97" y="3615.5" ></text>
</g>
<g >
<title>0x110cd62a2 (10 samples, 0.06%)</title><rect x="12.8" y="197" width="0.7" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="15.76" y="207.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (13 samples, 0.08%)</title><rect x="626.2" y="789" width="0.9" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="629.16" y="799.5" ></text>
</g>
<g >
<title>0x1110a4be6 (13 samples, 0.08%)</title><rect x="622.1" y="1669" width="1.0" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="625.13" y="1679.5" ></text>
</g>
<g >
<title>`HIR-TO-MIR^CLEAVIR-HIR-TO-MIR^FN^^ (4 samples, 0.03%)</title><rect x="1181.9" y="3813" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="1184.94" y="3823.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (13 samples, 0.08%)</title><rect x="624.3" y="1957" width="1.0" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="627.30" y="1967.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (22 samples, 0.14%)</title><rect x="624.0" y="2181" width="1.6" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="627.00" y="2191.5" ></text>
</g>
<g >
<title>0x123711728 (17 samples, 0.11%)</title><rect x="142.2" y="277" width="1.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="145.19" y="287.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.01%)</title><rect x="902.7" y="3541" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="905.71" y="3551.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (126 samples, 0.80%)</title><rect x="620.9" y="3285" width="9.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="623.86" y="3295.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (10 samples, 0.06%)</title><rect x="622.4" y="773" width="0.7" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="625.35" y="783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.6" y="1285" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="623.64" y="1295.5" ></text>
</g>
<g >
<title>`gctools::GCRootsInModule::getTaggedIndex(char, unsigned long) (6 samples, 0.04%)</title><rect x="834.5" y="3621" width="0.4" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="837.48" y="3631.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.01%)</title><rect x="990.6" y="3685" width="0.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="993.63" y="3695.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="620.6" y="2021" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="623.64" y="2031.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="741" width="0.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="629.16" y="751.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (8 samples, 0.05%)</title><rect x="627.9" y="2053" width="0.6" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="630.88" y="2063.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="627.1" y="1381" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="630.13" y="1391.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (27 samples, 0.17%)</title><rect x="630.3" y="3269" width="2.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="633.34" y="3279.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="619.8" y="2197" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="622.82" y="2207.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="610.3" y="4293" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="613.34" y="4303.5" ></text>
</g>
<g >
<title>0x1502e9830 (2 samples, 0.01%)</title><rect x="780.4" y="3653" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="783.44" y="3663.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvmo::PassManager_O, bool (llvm::legacy::PassManager::*)(llvm::Module&amp;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (10 samples, 0.06%)</title><rect x="877.0" y="2709" width="0.8" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="880.03" y="2719.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.6" y="2309" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="623.64" y="2319.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD^^ (2 samples, 0.01%)</title><rect x="876.1" y="3317" width="0.1" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="879.06" y="3327.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (3 samples, 0.02%)</title><rect x="625.3" y="85" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="628.27" y="95.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="821" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="628.94" y="831.5" ></text>
</g>
<g >
<title>`ELIMINATE-LOAD-TIME-VALUE-INPUTS^CLASP-CLEAVIR^FN^^ (25 samples, 0.16%)</title><rect x="1176.2" y="3813" width="1.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="1179.19" y="3823.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^105^TOP-COMPILE-FILE.31 (20 samples, 0.13%)</title><rect x="876.3" y="3269" width="1.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="879.28" y="3279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (17 samples, 0.11%)</title><rect x="140.3" y="85" width="1.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="143.32" y="95.5" ></text>
</g>
<g >
<title>0x123ae11b3 (3 samples, 0.02%)</title><rect x="645.8" y="3189" width="0.2" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="648.79" y="3199.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="624.1" y="1621" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="627.15" y="1631.5" ></text>
</g>
<g >
<title>0x1110a5606 (3 samples, 0.02%)</title><rect x="628.0" y="181" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="630.95" y="191.5" ></text>
</g>
<g >
<title>0x1140074e7 (829 samples, 5.24%)</title><rect x="174.3" y="37" width="61.9" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="177.28" y="47.5" >0x1140..</text>
</g>
<g >
<title>`BCLASP-COMPILE^COMPILER^FN^^ (9 samples, 0.06%)</title><rect x="997.6" y="3621" width="0.6" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="1000.58" y="3631.5" ></text>
</g>
<g >
<title>`simplifyFunctionCFG(llvm::Function&amp;, llvm::TargetTransformInfo const&amp;, llvm::SimplifyCFGOptions const&amp;) (6 samples, 0.04%)</title><rect x="608.0" y="4405" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="611.02" y="4415.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (7 samples, 0.04%)</title><rect x="874.9" y="2949" width="0.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="877.94" y="2959.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="648.4" y="3381" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="651.40" y="3391.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.24 (4 samples, 0.03%)</title><rect x="823.4" y="1861" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="826.44" y="1871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1493" width="0.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="628.27" y="1503.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.1" y="677" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="626.10" y="687.5" ></text>
</g>
<g >
<title>0x110d5dd50 (3 samples, 0.02%)</title><rect x="1068.6" y="3733" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1071.56" y="3743.5" ></text>
</g>
<g >
<title>0x110d5dde0 (2 samples, 0.01%)</title><rect x="1068.9" y="3733" width="0.1" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1071.86" y="3743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="628.2" y="181" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="631.18" y="191.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (27 samples, 0.17%)</title><rect x="1106.2" y="3685" width="2.0" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1109.18" y="3695.5" ></text>
</g>
<g >
<title>`core::cl__load(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (3,806 samples, 24.07%)</title><rect x="10.0" y="4213" width="284.1" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="13.00" y="4223.5" >`core::cl__load(gctools::smart_ptr&lt;cor..</text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^199^TOP-COMPILE-FILE.142 (3,806 samples, 24.07%)</title><rect x="10.0" y="1301" width="284.1" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`core::Cons_O::length() const (3 samples, 0.02%)</title><rect x="1022.4" y="3653" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="1025.43" y="3663.5" ></text>
</g>
<g >
<title>`llvm::LiveIntervals::computeLiveInRegUnits() (4 samples, 0.03%)</title><rect x="583.6" y="4389" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="586.62" y="4399.5" ></text>
</g>
<g >
<title>`cc_protect_alloca (23 samples, 0.15%)</title><rect x="820.1" y="3653" width="1.7" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="823.08" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="625.3" y="389" width="0.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="628.27" y="399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (20 samples, 0.13%)</title><rect x="622.1" y="2101" width="1.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="625.13" y="2111.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (3 samples, 0.02%)</title><rect x="1184.2" y="2405" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="1187.18" y="2415.5" ></text>
</g>
<g >
<title>`COMPUTE-DESTINIES^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (803 samples, 5.08%)</title><rect x="959.1" y="3749" width="59.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="962.06" y="3759.5" >`COMPU..</text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (3 samples, 0.02%)</title><rect x="1155.9" y="3749" width="0.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="1158.89" y="3759.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (10 samples, 0.06%)</title><rect x="622.4" y="901" width="0.7" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="625.35" y="911.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (5 samples, 0.03%)</title><rect x="619.4" y="917" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="622.44" y="927.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T T T T))^METHOD^^ (60 samples, 0.38%)</title><rect x="638.0" y="3653" width="4.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="641.03" y="3663.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (3 samples, 0.02%)</title><rect x="628.0" y="197" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="630.95" y="207.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (2 samples, 0.01%)</title><rect x="630.6" y="773" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="633.64" y="783.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitAllocaInst(llvm::AllocaInst&amp;) (5 samples, 0.03%)</title><rect x="611.9" y="4357" width="0.4" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="614.91" y="4367.5" ></text>
</g>
<g >
<title>0x1110a5606 (21 samples, 0.13%)</title><rect x="630.8" y="1397" width="1.6" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="633.79" y="1407.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.92 (7 samples, 0.04%)</title><rect x="1188.0" y="389" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="1190.98" y="399.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (9 samples, 0.06%)</title><rect x="1020.0" y="3653" width="0.7" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="1023.04" y="3663.5" ></text>
</g>
<g >
<title>`AST-INTERPRETED-CLOSURE^INTERPRET-AST^FN^^.117 (64 samples, 0.40%)</title><rect x="282.0" y="197" width="4.8" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="284.99" y="207.5" ></text>
</g>
<g >
<title>`llvm::AAResultsWrapperPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="593.9" y="4469" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="596.92" y="4479.5" ></text>
</g>
<g >
<title>`asdf.lisp-^10341^TOP-COMPILE-FILE.44 (3,806 samples, 24.07%)</title><rect x="10.0" y="3061" width="284.1" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="13.00" y="3071.5" >`asdf.lisp-^10341^TOP-COMPILE-FILE.44</text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="659.2" y="3237" width="0.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="662.15" y="3247.5" ></text>
</g>
<g >
<title>0x11171939a (2 samples, 0.01%)</title><rect x="873.5" y="3541" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="876.52" y="3551.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;) (75 samples, 0.47%)</title><rect x="1134.0" y="3621" width="5.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1137.02" y="3631.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="624.3" y="1893" width="1.0" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="627.30" y="1903.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="620.5" y="1157" width="0.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="623.49" y="1167.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="648.9" y="3397" width="0.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="651.85" y="3407.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.103 (3 samples, 0.02%)</title><rect x="823.5" y="917" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="826.51" y="927.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((:AROUND) (T T CLASP))^METHOD^^ (2 samples, 0.01%)</title><rect x="272.7" y="405" width="0.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="275.66" y="415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1717" width="0.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="627.00" y="1727.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (15 samples, 0.09%)</title><rect x="665.0" y="3445" width="1.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="668.05" y="3455.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="630.6" y="1221" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="633.64" y="1231.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (6 samples, 0.04%)</title><rect x="281.5" y="341" width="0.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="284.47" y="351.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^213^TOP-COMPILE-FILE.24 (2 samples, 0.01%)</title><rect x="656.7" y="1861" width="0.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="659.69" y="1871.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2517" width="284.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="13.00" y="2527.5" >`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^..</text>
</g>
<g >
<title>`WRITE-LITERAL-NODES-BYTE-CODE^LITERAL^FN^^ (2 samples, 0.01%)</title><rect x="616.3" y="3877" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="619.31" y="3887.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core::Cons_O&gt; &gt; &gt;::resize(unsigned long, core::Cons_O const&amp;) (3 samples, 0.02%)</title><rect x="1175.4" y="3525" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1178.37" y="3535.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (66 samples, 0.42%)</title><rect x="874.2" y="3557" width="4.9" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="877.19" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (115 samples, 0.73%)</title><rect x="620.9" y="2933" width="8.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="623.86" y="2943.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="616.5" y="3749" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="619.53" y="3759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="628.2" y="981" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="631.18" y="991.5" ></text>
</g>
<g >
<title>`llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (8 samples, 0.05%)</title><rect x="656.8" y="2453" width="0.6" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="659.84" y="2463.5" ></text>
</g>
<g >
<title>0x110d801c0 (7 samples, 0.04%)</title><rect x="895.4" y="3733" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="898.39" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN T))^METHOD^^ (4 samples, 0.03%)</title><rect x="632.4" y="2853" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="635.43" y="2863.5" ></text>
</g>
<g >
<title>`LINK-INLINE-REMOVE-BUILTINS^COMPILER^FN^^ (5 samples, 0.03%)</title><rect x="997.9" y="3141" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="1000.87" y="3151.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="632.4" y="2629" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="635.43" y="2639.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T))^METHOD^^ (4 samples, 0.03%)</title><rect x="878.8" y="3525" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="881.82" y="3535.5" ></text>
</g>
<g >
<title>`DO-DISPATCH-MISS^CLOS^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="2325" width="284.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="13.00" y="2335.5" >`DO-DISPATCH-MISS^CLOS^FN^^</text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (3 samples, 0.02%)</title><rect x="966.7" y="3685" width="0.2" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="969.67" y="3695.5" ></text>
</g>
<g >
<title>0x1257602e2 (26 samples, 0.16%)</title><rect x="630.4" y="2037" width="2.0" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="633.42" y="2047.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (2 samples, 0.01%)</title><rect x="629.4" y="709" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="632.45" y="719.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="625.3" y="277" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="628.27" y="287.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.1" y="485" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="626.10" y="495.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (8 samples, 0.05%)</title><rect x="627.9" y="1861" width="0.6" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="630.88" y="1871.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="662.7" y="3285" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="665.66" y="3295.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (12 samples, 0.08%)</title><rect x="660.1" y="3397" width="0.9" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="663.12" y="3407.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (3 samples, 0.02%)</title><rect x="1177.2" y="3029" width="0.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="1180.16" y="3039.5" ></text>
</g>
<g >
<title>0x110c6309d (2 samples, 0.01%)</title><rect x="1053.9" y="3733" width="0.1" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1056.85" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="773" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="628.27" y="783.5" ></text>
</g>
<g >
<title>`clbind::Derivable&lt;clang::ASTFrontendAction&gt;::pointerToAlienWithin() (2 samples, 0.01%)</title><rect x="997.1" y="3717" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1000.13" y="3727.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.84 (28 samples, 0.18%)</title><rect x="1186.9" y="1845" width="2.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="1189.87" y="1855.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::EarlyCSE::run() (3 samples, 0.02%)</title><rect x="598.0" y="4389" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="601.02" y="4399.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^332^TOP-COMPILE-FILE.103 (3 samples, 0.02%)</title><rect x="823.5" y="997" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="826.51" y="1007.5" ></text>
</g>
<g >
<title>`INSTANCE-SET^CORE^FN^^ (11 samples, 0.07%)</title><rect x="739.3" y="3637" width="0.8" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="742.32" y="3647.5" ></text>
</g>
<g >
<title>0x1110a5606 (125 samples, 0.79%)</title><rect x="620.9" y="3045" width="9.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="623.86" y="3055.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="622.1" y="53" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="625.13" y="63.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="632.4" y="3381" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="635.43" y="3391.5" ></text>
</g>
<g >
<title>`CLASS-GET^EXT^FN^^ (9 samples, 0.06%)</title><rect x="668.6" y="3669" width="0.6" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="671.56" y="3679.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="1877" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="826.44" y="1887.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (3 samples, 0.02%)</title><rect x="981.9" y="3701" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="984.90" y="3711.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function394^48^TOP-COMPILE-FILE.11 (29 samples, 0.18%)</title><rect x="656.7" y="3333" width="2.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="659.69" y="3343.5" ></text>
</g>
<g >
<title>`CODEGEN-SPECIAL-OPERATOR^COMPILER^FN^^ (4 samples, 0.03%)</title><rect x="823.4" y="1701" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="826.44" y="1711.5" ></text>
</g>
<g >
<title>0x111521b53 (3 samples, 0.02%)</title><rect x="1182.3" y="3701" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1185.31" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (26 samples, 0.16%)</title><rect x="630.4" y="1957" width="2.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="633.42" y="1967.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="619.1" y="1701" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="622.15" y="1711.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="632.4" y="2005" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="635.43" y="2015.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.3" y="645" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="626.33" y="655.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.02%)</title><rect x="627.7" y="1781" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="630.65" y="1791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.03%)</title><rect x="625.3" y="1253" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="628.27" y="1263.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:AROUND) (T T T T))^METHOD^^ (582 samples, 3.68%)</title><rect x="130.8" y="709" width="43.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="133.84" y="719.5" >`CON..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (18 samples, 0.11%)</title><rect x="627.1" y="2293" width="1.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="630.13" y="2303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="619.8" y="2341" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="622.82" y="2351.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (6 samples, 0.04%)</title><rect x="629.4" y="2229" width="0.5" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="632.45" y="2239.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.199 (7,680 samples, 48.58%)</title><rect x="616.3" y="4213" width="573.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="619.31" y="4223.5" >`cmpliteral.lsp-cmpliteral46^655^TOP-COMPILE-FILE.199</text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((BLOCK-AST T))^METHOD^^.152 (71 samples, 0.45%)</title><rect x="281.5" y="645" width="5.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="284.47" y="655.5" ></text>
</g>
<g >
<title>0x1110a5606 (2 samples, 0.01%)</title><rect x="630.4" y="1685" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="633.42" y="1695.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (17 samples, 0.11%)</title><rect x="1169.5" y="3557" width="1.3" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="1172.55" y="3567.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::T_O&gt; (core::HashTable_O::*)(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ptr&lt;core::T_O&gt;)&gt;::method_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (2 samples, 0.01%)</title><rect x="637.1" y="3701" width="0.2" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="640.13" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="1333" width="0.7" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="625.35" y="1343.5" ></text>
</g>
<g >
<title>`core::StackFrameDynamicScopeManager::new_binding(core::Argument const&amp;, gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="1147.9" y="3653" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1150.90" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="632.4" y="1061" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="635.43" y="1071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.08%)</title><rect x="626.2" y="1093" width="0.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="629.16" y="1103.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (13 samples, 0.08%)</title><rect x="624.3" y="549" width="1.0" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="627.30" y="559.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.02%)</title><rect x="639.0" y="3285" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="642.00" y="3295.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (830 samples, 5.25%)</title><rect x="174.3" y="725" width="61.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="177.28" y="735.5" >`COMBI..</text>
</g>
<g >
<title>`GC_build_fl (3 samples, 0.02%)</title><rect x="795.5" y="3573" width="0.2" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="798.52" y="3583.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core::Cons_O&gt; &gt; &gt;::resize(unsigned long, core::Cons_O const&amp;) (96 samples, 0.61%)</title><rect x="1139.6" y="3621" width="7.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1142.62" y="3631.5" ></text>
</g>
<g >
<title>0x1501b4cfb (2 samples, 0.01%)</title><rect x="240.7" y="229" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="243.72" y="239.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="624.0" y="1189" width="0.1" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="627.00" y="1199.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core::T_O&gt;) (181 samples, 1.14%)</title><rect x="1133.3" y="3637" width="13.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1136.27" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (3 samples, 0.02%)</title><rect x="628.0" y="885" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="630.95" y="895.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (19 samples, 0.12%)</title><rect x="985.0" y="3669" width="1.4" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="987.96" y="3679.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="629.6" y="1029" width="0.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="632.60" y="1039.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&amp;) (2 samples, 0.01%)</title><rect x="620.9" y="373" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="623.94" y="383.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((MULTIPLE-TO-FIXED-INSTRUCTION T ABI-X86-64 T))^METHOD^^ (4 samples, 0.03%)</title><rect x="1183.3" y="2821" width="0.3" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="1186.28" y="2831.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::MachineCSE::ExitScope(llvm::MachineBasicBlock*) (3 samples, 0.02%)</title><rect x="574.6" y="4389" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="577.58" y="4399.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="874.0" y="3253" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="876.97" y="3263.5" ></text>
</g>
<g >
<title>`LINK-INLINE-REMOVE-BUILTINS^COMPILER^FN^^ (3 samples, 0.02%)</title><rect x="640.3" y="2885" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="643.34" y="2895.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (18 samples, 0.11%)</title><rect x="13.5" y="149" width="1.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="16.51" y="159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (64 samples, 0.40%)</title><rect x="620.9" y="2389" width="4.7" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="623.86" y="2399.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (2 samples, 0.01%)</title><rect x="625.9" y="1413" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="628.94" y="1423.5" ></text>
</g>
<g >
<title>0x123711728 (582 samples, 3.68%)</title><rect x="130.8" y="741" width="43.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="133.84" y="751.5" >0x12..</text>
</g>
<g >
<title>`restoreFromMultipleValue0 (3 samples, 0.02%)</title><rect x="773.1" y="3637" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="776.13" y="3647.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (4 samples, 0.03%)</title><rect x="623.7" y="1541" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="626.70" y="1551.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^199^TOP-COMPILE-FILE.140 (3,806 samples, 24.07%)</title><rect x="10.0" y="1317" width="284.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="13.00" y="1327.5" >`compile-file-parallel.lsp-compile-fil..</text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^3^TOP-COMPILE-FILE.12 (12 samples, 0.08%)</title><rect x="243.4" y="213" width="0.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="246.40" y="223.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (44 samples, 0.28%)</title><rect x="1086.8" y="3621" width="3.3" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="1089.85" y="3631.5" ></text>
</g>
<g >
<title>`llvm::LLVMTargetMachine::addPassesToEmitFile(llvm::legacy::PassManagerBase&amp;, llvm::raw_pwrite_stream&amp;, llvm::TargetMachine::CodeGenFileType, bool, llvm::MachineModuleInfo*) (2 samples, 0.01%)</title><rect x="572.6" y="4469" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="575.57" y="4479.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (19 samples, 0.12%)</title><rect x="770.2" y="3605" width="1.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="773.22" y="3615.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (21 samples, 0.13%)</title><rect x="630.8" y="1461" width="1.6" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="633.79" y="1471.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (7 samples, 0.04%)</title><rect x="1176.9" y="3765" width="0.6" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="1179.94" y="3775.5" ></text>
</g>
<g >
<title>`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.44 (7,680 samples, 48.58%)</title><rect x="616.3" y="4437" width="573.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="619.31" y="4447.5" >`compile-file-parallel.lsp-compile-file-parallel441^25^TOP-COMPILE-FILE.44</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="628.2" y="373" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="631.18" y="383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="625.9" y="341" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="628.94" y="351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.06%)</title><rect x="622.4" y="469" width="0.7" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="625.35" y="479.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (6 samples, 0.04%)</title><rect x="826.0" y="2933" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="828.98" y="2943.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="1021.7" y="3749" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="1024.68" y="3759.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.20 (5 samples, 0.03%)</title><rect x="640.2" y="2981" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="643.19" y="2991.5" ></text>
</g>
<g >
<title>0x110cd62a2 (2 samples, 0.01%)</title><rect x="14.9" y="613" width="0.1" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="17.85" y="623.5" ></text>
</g>
<g >
<title>`WRITE-BITCODE^COMPILER^FN^^ (72 samples, 0.46%)</title><rect x="567.1" y="4581" width="5.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="570.12" y="4591.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T))^METHOD^^ (22 samples, 0.14%)</title><rect x="1187.1" y="1509" width="1.6" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="1190.09" y="1519.5" ></text>
</g>
<g >
<title>0x110c60d5a (3 samples, 0.02%)</title><rect x="1045.2" y="3733" width="0.2" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="1048.20" y="3743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.11 (2 samples, 0.01%)</title><rect x="623.3" y="837" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="626.33" y="847.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="623.3" y="1157" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="626.33" y="1167.5" ></text>
</g>
<g >
<title>0x1501b4cfb (7 samples, 0.04%)</title><rect x="272.8" y="309" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="275.81" y="319.5" ></text>
</g>
<g >
<title>0x1110a5183 (2 samples, 0.01%)</title><rect x="628.8" y="2533" width="0.1" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="631.77" y="2543.5" ></text>
</g>
<g >
<title>`convert-special.lisp-convert-special298^124^TOP-COMPILE-FILE.325 (1,469 samples, 9.29%)</title><rect x="21.2" y="389" width="109.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="24.20" y="399.5" >`convert-spec..</text>
</g>
<g >
<title>0x111336bd8 (24 samples, 0.15%)</title><rect x="1184.9" y="2453" width="1.8" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="1187.92" y="2463.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^CLASP-CLEAVIR^FN^^ (86 samples, 0.54%)</title><rect x="1183.1" y="3093" width="6.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="1186.13" y="3103.5" ></text>
</g>
<g >
<title>`llvm::MachineFunctionPass::runOnFunction(llvm::Function&amp;) (4 samples, 0.03%)</title><rect x="872.5" y="2869" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="875.48" y="2879.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION-AST))^METHOD^^ (5 samples, 0.03%)</title><rect x="619.4" y="741" width="0.4" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="622.44" y="751.5" ></text>
</g>
<g >
<title>`translate.lisp-translate434^55^TOP-COMPILE-FILE.7 (22 samples, 0.14%)</title><rect x="1187.1" y="1445" width="1.6" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="1190.09" y="1455.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (3 samples, 0.02%)</title><rect x="714.5" y="3589" width="0.3" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="717.54" y="3599.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (3 samples, 0.02%)</title><rect x="654.7" y="3397" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="657.67" y="3407.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::run() (2 samples, 0.01%)</title><rect x="658.0" y="2405" width="0.2" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="661.03" y="2415.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="1151.0" y="3717" width="0.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="1154.04" y="3727.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (28 samples, 0.18%)</title><rect x="1019.1" y="3717" width="2.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1022.15" y="3727.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="625.3" y="1029" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="628.27" y="1039.5" ></text>
</g>
<g >
<title>`llvm::InstructionCombiningPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="873.2" y="2917" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="876.22" y="2927.5" ></text>
</g>
<g >
<title>0x1110a4fd6 (3 samples, 0.02%)</title><rect x="619.1" y="1381" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="622.15" y="1391.5" ></text>
</g>
<g >
<title>`wrapped_core__instance_ref_T_spint (2 samples, 0.01%)</title><rect x="901.5" y="3573" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="904.51" y="3583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="624.0" y="1445" width="0.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="627.00" y="1455.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (4 samples, 0.03%)</title><rect x="634.6" y="3733" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="637.60" y="3743.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (13 samples, 0.08%)</title><rect x="626.2" y="1733" width="0.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="629.16" y="1743.5" ></text>
</g>
<g >
<title>0x1110a4be6 (3 samples, 0.02%)</title><rect x="623.7" y="981" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="626.70" y="991.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf89^1248^TOP-COMPILE-FILE.295 (16 samples, 0.10%)</title><rect x="635.6" y="3701" width="1.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="638.57" y="3711.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.13 (7 samples, 0.04%)</title><rect x="1176.9" y="3461" width="0.6" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="1179.94" y="3471.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (2 samples, 0.01%)</title><rect x="630.6" y="693" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="633.64" y="703.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O*, unsigned long, core::T_O*, core::T_O*, core::T_O*, core::T_O*, ...) (3,806 samples, 24.07%)</title><rect x="10.0" y="2613" width="284.1" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="13.00" y="2623.5" >`core::FuncallableInstance_O::funcalla..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.12 (3 samples, 0.02%)</title><rect x="619.1" y="741" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="622.15" y="751.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^41^TOP-COMPILE-FILE.10 (4 samples, 0.03%)</title><rect x="623.7" y="1557" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="626.70" y="1567.5" ></text>
</g>
<g >
<title>0x111981969 (3,806 samples, 24.07%)</title><rect x="10.0" y="3973" width="284.1" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="13.00" y="3983.5" >0x111981969</text>
</g>
<g >
<title>`INTERPRET-AST^INTERPRET-AST^((BLOCK-AST T))^METHOD^^.152 (40 samples, 0.25%)</title><rect x="278.5" y="677" width="3.0" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="281.48" y="687.5" ></text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^321^TOP-COMPILE-FILE.133 (2 samples, 0.01%)</title><rect x="625.9" y="37" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="628.94" y="47.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (79 samples, 0.50%)</title><rect x="609.7" y="4421" width="5.9" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="612.67" y="4431.5" ></text>
</g>
<g >
<title>`clbind::Derivable&lt;clang::ASTFrontendAction&gt;::pointerToAlienWithin() (3 samples, 0.02%)</title><rect x="830.2" y="3637" width="0.2" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="833.16" y="3647.5" ></text>
</g>
<g >
<title>`addPassesToGenerateCode(llvm::LLVMTargetMachine*, llvm::legacy::PassManagerBase&amp;, bool, bool&amp;, llvm::raw_pwrite_stream&amp;, llvm::MachineModuleInfo*) (2 samples, 0.01%)</title><rect x="572.6" y="4453" width="0.1" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="575.57" y="4463.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.14 (5 samples, 0.03%)</title><rect x="640.2" y="3141" width="0.4" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="643.19" y="3151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.01%)</title><rect x="620.5" y="1589" width="0.1" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="623.49" y="1599.5" ></text>
</g>
<g >
<title>`codegen-special-form.lsp-codegen-special-form48^351^TOP-COMPILE-FILE.26 (3 samples, 0.02%)</title><rect x="823.5" y="1189" width="0.2" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="826.51" y="1199.5" ></text>
</g>
<g >
<title>`PROCESS-COMMAND-LINE-LOAD-EVAL-SEQUENCE^CORE^FN^^ (3,806 samples, 24.07%)</title><rect x="10.0" y="4581" width="284.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="13.00" y="4591.5" >`PROCESS-COMMAND-LINE-LOAD-EVAL-SEQUEN..</text>
</g>
<g >
<title>`translate.lisp-translate434^284^TOP-COMPILE-FILE.92 (15 samples, 0.09%)</title><rect x="1187.5" y="853" width="1.1" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="1190.46" y="863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.02%)</title><rect x="627.7" y="1413" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="630.65" y="1423.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (4 samples, 0.03%)</title><rect x="1178.9" y="3781" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="1181.88" y="3791.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^37^TOP-COMPILE-FILE.18 (7 samples, 0.04%)</title><rect x="874.9" y="2821" width="0.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="877.94" y="2831.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="649.7" y="3477" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="652.75" y="3487.5" ></text>
</g>
<g >
<title>`core::load_stream(gctools::smart_ptr&lt;core::T_O&gt;, bool) (3,806 samples, 24.07%)</title><rect x="10.0" y="4437" width="284.1" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="13.00" y="4447.5" >`core::load_stream(gctools::smart_ptr&lt;..</text>
</g>
<g >
<title>`compile-general-purpose-asts.lisp-compile-general-purpose-asts330^469^TOP-COMPILE-FILE.281 (2 samples, 0.01%)</title><rect x="629.4" y="69" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="632.45" y="79.5" ></text>
</g>
<g >
<title>0x1110a4be6 (24 samples, 0.15%)</title><rect x="619.1" y="3525" width="1.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="622.07" y="3535.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^76^TOP-COMPILE-FILE.28 (5 samples, 0.03%)</title><rect x="640.2" y="3061" width="0.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="643.19" y="3071.5" ></text>
</g>
</g>
</svg>
