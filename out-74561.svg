<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="4310" onload="init(evt)" viewBox="0 0 1200 4310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="4310.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="4293" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="4293" > </text>
<g id="frames">
<g >
<title>`REMOVE-LIST^CORE^FN^^ (7 samples, 0.03%)</title><rect x="450.2" y="1077" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="453.17" y="1087.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2661" width="494.0" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="13.00" y="2671.5" >`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer,  (2 samples, 0.01%)</title><rect x="146.4" y="117" width="0.2" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="149.44" y="127.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="471.1" y="645" width="0.1" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="474.12" y="655.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (4 samples, 0.02%)</title><rect x="456.0" y="645" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="459.05" y="655.5" ></text>
</g>
<g >
<title>`top.lsp-top130^378^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3941" width="494.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="13.00" y="3951.5" >`top.lsp-top130^378^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`GC_reclaim_clear (2 samples, 0.01%)</title><rect x="472.2" y="581" width="0.1" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="475.19" y="591.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="3477" width="494.0" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="13.00" y="3487.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (5 samples, 0.02%)</title><rect x="240.1" y="885" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="243.08" y="895.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (10 samples, 0.05%)</title><rect x="225.3" y="965" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="228.27" y="975.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (9 samples, 0.04%)</title><rect x="193.8" y="965" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="196.85" y="975.5" ></text>
</g>
<g >
<title>`_pthread_body (12,835 samples, 58.13%)</title><rect x="504.0" y="4213" width="686.0" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="507.04" y="4223.5" >`_pthread_body</text>
</g>
<g >
<title>`GC_clear_stack_inner (2 samples, 0.01%)</title><rect x="423.0" y="789" width="0.1" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="426.02" y="799.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.01%)</title><rect x="19.1" y="565" width="0.1" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="22.14" y="575.5" ></text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long (927 samples, 4.20%)</title><rect x="454.5" y="1093" width="49.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="457.50" y="1103.5" >`cor..</text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (8 samples, 0.04%)</title><rect x="243.9" y="933" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="246.93" y="943.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (2 samples, 0.01%)</title><rect x="215.8" y="933" width="0.1" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="218.76" y="943.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (11 samples, 0.05%)</title><rect x="201.7" y="965" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="204.65" y="975.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (104 samples, 0.47%)</title><rect x="219.7" y="965" width="5.6" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="222.72" y="975.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="473.7" y="645" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="476.74" y="655.5" ></text>
</g>
<g >
<title>`GC_alloc_large (5 samples, 0.02%)</title><rect x="244.8" y="789" width="0.3" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="247.83" y="799.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (2 samples, 0.01%)</title><rect x="236.6" y="901" width="0.1" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="239.55" y="911.5" ></text>
</g>
<g >
<title>0x11af2e271 (2 samples, 0.01%)</title><rect x="149.9" y="725" width="0.1" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="152.86" y="735.5" ></text>
</g>
<g >
<title>0x11b2d7977 (9,244 samples, 41.87%)</title><rect x="10.0" y="3269" width="494.0" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="13.00" y="3279.5" >0x11b2d7977</text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="112.8" y="533" width="0.1" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="115.83" y="543.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (9 samples, 0.04%)</title><rect x="195.2" y="917" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="198.24" y="927.5" ></text>
</g>
<g >
<title>`ENTER-UNIQUE-P^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="346.3" y="997" width="0.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="349.33" y="1007.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (15 samples, 0.07%)</title><rect x="244.4" y="917" width="0.8" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="247.41" y="927.5" ></text>
</g>
<g >
<title>0x11a4ee067 (7 samples, 0.03%)</title><rect x="131.5" y="613" width="0.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="134.48" y="623.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (5 samples, 0.02%)</title><rect x="475.0" y="757" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="477.97" y="767.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="194.4" y="949" width="0.1" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="197.38" y="959.5" ></text>
</g>
<g >
<title>`CLONE-INITARGS^CLEAVIR-IR^((APPEND) (INSTRUCTION))^METHOD^^ (2 samples, 0.01%)</title><rect x="459.0" y="581" width="0.1" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="461.99" y="591.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (5 samples, 0.02%)</title><rect x="122.4" y="517" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="125.39" y="527.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (4 samples, 0.02%)</title><rect x="444.7" y="853" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="447.66" y="863.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (849 samples, 3.85%)</title><rect x="205.2" y="981" width="45.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="208.18" y="991.5" >`MAP..</text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (2 samples, 0.01%)</title><rect x="467.7" y="613" width="0.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="470.70" y="623.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (5 samples, 0.02%)</title><rect x="182.7" y="997" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="185.68" y="1007.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (15 samples, 0.07%)</title><rect x="244.4" y="901" width="0.8" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="247.41" y="911.5" ></text>
</g>
<g >
<title>`REMOVE-USELESS-INSTRUCTIONS-FROM^CLEAVIR-REMOVE-USELESS-INSTRUC (45 samples, 0.20%)</title><rect x="450.5" y="1109" width="2.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="453.54" y="1119.5" ></text>
</g>
<g >
<title>0x11ab7fe4a (3 samples, 0.01%)</title><rect x="455.8" y="709" width="0.1" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="458.78" y="719.5" ></text>
</g>
<g >
<title>`NTHCDR^COMMON-LISP^FN^^ (8 samples, 0.04%)</title><rect x="225.4" y="949" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="228.38" y="959.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^193^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1925" width="494.0" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" >`debuginfo.lsp-debuginfo41^193^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (2 samples, 0.01%)</title><rect x="456.4" y="661" width="0.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="459.37" y="671.5" ></text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (5 samples, 0.02%)</title><rect x="11.1" y="805" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="14.12" y="815.5" ></text>
</g>
<g >
<title>`CAR^COMMON-LISP^FN^^ (6 samples, 0.03%)</title><rect x="10.5" y="901" width="0.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="13.53" y="911.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (3 samples, 0.01%)</title><rect x="169.2" y="1077" width="0.1" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="172.16" y="1087.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="146.0" y="725" width="0.1" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="148.96" y="735.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (5 samples, 0.02%)</title><rect x="246.3" y="901" width="0.2" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="249.28" y="911.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (4 samples, 0.02%)</title><rect x="445.1" y="885" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="448.14" y="895.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapcar_T_spList_sp (4 samples, 0.02%)</title><rect x="251.4" y="981" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="254.41" y="991.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (1,510 samples, 6.84%)</title><rect x="27.9" y="373" width="80.7" height="15.0" fill="rgb(206,60,60)" rx="2" ry="2" />
<text  x="30.90" y="383.5" >`GC_do_pa..</text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (2 samples, 0.01%)</title><rect x="132.5" y="693" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="135.55" y="703.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (137 samples, 0.62%)</title><rect x="349.3" y="981" width="7.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="352.27" y="991.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^193^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1909" width="494.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" >`debuginfo.lsp-debuginfo41^193^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`GC_clear_stack_inner (10 samples, 0.05%)</title><rect x="422.9" y="917" width="0.5" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="425.86" y="927.5" ></text>
</g>
<g >
<title>`__cxa_throw (19 samples, 0.09%)</title><rect x="444.5" y="933" width="1.0" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="447.50" y="943.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (3 samples, 0.01%)</title><rect x="188.3" y="997" width="0.2" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="191.34" y="1007.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (2 samples, 0.01%)</title><rect x="234.4" y="917" width="0.1" height="15.0" fill="rgb(246,116,116)" rx="2" ry="2" />
<text  x="237.41" y="927.5" ></text>
</g>
<g >
<title>`APPEND^COMMON-LISP^FN^^ (173 samples, 0.78%)</title><rect x="277.8" y="997" width="9.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="280.76" y="1007.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="901" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="457.50" y="911.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (5 samples, 0.02%)</title><rect x="244.8" y="757" width="0.3" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="247.83" y="767.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="20.7" y="469" width="0.1" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="23.69" y="479.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (3 samples, 0.01%)</title><rect x="472.3" y="661" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="475.35" y="671.5" ></text>
</g>
<g >
<title>`FIND-IN-MAPPING^CLEAVIR-PARTIAL-INLINING^((HASH-TABLE T))^METHO (3 samples, 0.01%)</title><rect x="462.8" y="613" width="0.1" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="465.78" y="623.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2597" width="494.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="13.00" y="2607.5" >`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (3 samples, 0.01%)</title><rect x="130.2" y="597" width="0.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="133.20" y="607.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (5 samples, 0.02%)</title><rect x="129.8" y="645" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="132.77" y="655.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="128.1" y="597" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="131.11" y="607.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.01%)</title><rect x="141.8" y="613" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="144.85" y="623.5" ></text>
</g>
<g >
<title>0x11a5e3259 (2 samples, 0.01%)</title><rect x="337.1" y="981" width="0.1" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="340.13" y="991.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="451.6" y="981" width="0.1" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="454.56" y="991.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (2 samples, 0.01%)</title><rect x="131.1" y="533" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="134.11" y="543.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (511 samples, 2.31%)</title><rect x="476.4" y="853" width="27.3" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="479.41" y="863.5" >`..</text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (7 samples, 0.03%)</title><rect x="124.6" y="549" width="0.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="127.64" y="559.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (3 samples, 0.01%)</title><rect x="248.0" y="949" width="0.1" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="250.99" y="959.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (69 samples, 0.31%)</title><rect x="14.6" y="645" width="3.7" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="17.65" y="655.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.01%)</title><rect x="128.5" y="597" width="0.1" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="131.49" y="607.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (9 samples, 0.04%)</title><rect x="338.5" y="949" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="341.52" y="959.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (159 samples, 0.72%)</title><rect x="120.5" y="677" width="8.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="123.52" y="687.5" ></text>
</g>
<g >
<title>0x11a394071 (14 samples, 0.06%)</title><rect x="180.4" y="1029" width="0.7" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="183.38" y="1039.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2037" width="494.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>0x11af2e271 (2 samples, 0.01%)</title><rect x="127.8" y="597" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="130.85" y="607.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="147.6" y="725" width="0.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="150.62" y="735.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapcar_T_spList_sp (2 samples, 0.01%)</title><rect x="250.4" y="965" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="253.45" y="975.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (4 samples, 0.02%)</title><rect x="146.6" y="133" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="149.55" y="143.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (4 samples, 0.02%)</title><rect x="165.8" y="965" width="0.2" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="168.79" y="975.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="247.6" y="917" width="0.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="250.56" y="927.5" ></text>
</g>
<g >
<title>0x11e89193c (2 samples, 0.01%)</title><rect x="120.8" y="661" width="0.1" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="123.79" y="671.5" ></text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (3 samples, 0.01%)</title><rect x="147.9" y="693" width="0.1" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="150.89" y="703.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::keyTest(gctools::smart_ptr&lt;core::T_O&gt;, gct (4 samples, 0.02%)</title><rect x="361.7" y="949" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="364.72" y="959.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__bzero (3 samples, 0.01%)</title><rect x="422.9" y="901" width="0.1" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="425.86" y="911.5" ></text>
</g>
<g >
<title>0x11af4440a (11 samples, 0.05%)</title><rect x="464.5" y="581" width="0.6" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="467.55" y="591.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (17 samples, 0.08%)</title><rect x="473.4" y="789" width="0.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="476.36" y="799.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (27 samples, 0.12%)</title><rect x="110.6" y="549" width="1.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="113.58" y="559.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (221 samples, 1.00%)</title><rect x="456.3" y="693" width="11.8" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="459.26" y="703.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (4 samples, 0.02%)</title><rect x="204.2" y="837" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="207.22" y="847.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (5 samples, 0.02%)</title><rect x="113.6" y="549" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="116.58" y="559.5" ></text>
</g>
<g >
<title>`start (9,244 samples, 41.87%)</title><rect x="10.0" y="4229" width="494.0" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="13.00" y="4239.5" >`start</text>
</g>
<g >
<title>`GC_mark_from (9,179 samples, 41.57%)</title><rect x="698.2" y="4133" width="490.5" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="701.15" y="4143.5" >`GC_mark_from</text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="150.6" y="805" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="153.61" y="815.5" ></text>
</g>
<g >
<title>0x11b1fc1a0 (2 samples, 0.01%)</title><rect x="342.7" y="981" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="345.75" y="991.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="232.7" y="901" width="0.1" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="235.70" y="911.5" ></text>
</g>
<g >
<title>`GC_finish_collection (37 samples, 0.17%)</title><rect x="25.9" y="405" width="2.0" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="28.93" y="415.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (2 samples, 0.01%)</title><rect x="151.0" y="645" width="0.1" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="153.99" y="655.5" ></text>
</g>
<g >
<title>0x11b1fc0a5 (3 samples, 0.01%)</title><rect x="341.8" y="981" width="0.1" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="344.78" y="991.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (30 samples, 0.14%)</title><rect x="222.7" y="789" width="1.6" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="225.66" y="799.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (3 samples, 0.01%)</title><rect x="130.2" y="629" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="133.20" y="639.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (7 samples, 0.03%)</title><rect x="116.7" y="549" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="119.68" y="559.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (4 samples, 0.02%)</title><rect x="216.4" y="917" width="0.2" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="219.40" y="927.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (11 samples, 0.05%)</title><rect x="148.9" y="709" width="0.6" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="151.90" y="719.5" ></text>
</g>
<g >
<title>`INSTRUCTION-MAY-BE-REMOVED-P^CLEAVIR-REMOVE-USELESS-INSTRUCTION (2 samples, 0.01%)</title><rect x="450.8" y="1061" width="0.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="453.81" y="1071.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (4 samples, 0.02%)</title><rect x="466.9" y="645" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="469.90" y="655.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="145.3" y="709" width="0.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="148.27" y="719.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (3 samples, 0.01%)</title><rect x="130.2" y="613" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="133.20" y="623.5" ></text>
</g>
<g >
<title>0x11abcf01b (3 samples, 0.01%)</title><rect x="264.1" y="997" width="0.1" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="267.07" y="1007.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (17 samples, 0.08%)</title><rect x="15.0" y="581" width="0.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="18.02" y="591.5" ></text>
</g>
<g >
<title>0x11e697af9 (3 samples, 0.01%)</title><rect x="11.4" y="725" width="0.2" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="14.44" y="735.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (11 samples, 0.05%)</title><rect x="183.4" y="949" width="0.6" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="186.43" y="959.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="452.8" y="1061" width="0.1" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="455.84" y="1071.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (4 samples, 0.02%)</title><rect x="111.3" y="469" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="114.33" y="479.5" ></text>
</g>
<g >
<title>0x11ab7fe4a (7 samples, 0.03%)</title><rect x="13.1" y="693" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="16.10" y="703.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.01%)</title><rect x="115.5" y="581" width="0.1" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="118.50" y="591.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T))^MET (914 samples, 4.14%)</title><rect x="455.0" y="917" width="48.8" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="457.98" y="927.5" >`COP..</text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="146.4" y="53" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="149.44" y="63.5" ></text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (2 samples, 0.01%)</title><rect x="139.8" y="629" width="0.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="142.82" y="639.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2133" width="494.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="13.00" y="2143.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^CLOS^FN^^ (7 samples, 0.03%)</title><rect x="454.5" y="1077" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="457.50" y="1087.5" ></text>
</g>
<g >
<title>`LINK-INLINE-REMOVE-BUILTINS^COMPILER^FN^^ (4 samples, 0.02%)</title><rect x="146.6" y="261" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="149.55" y="271.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (102 samples, 0.46%)</title><rect x="121.9" y="613" width="5.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="124.91" y="623.5" ></text>
</g>
<g >
<title>`full-inlining-pass.lisp-full-inlining-pass414^84^TOP-COMPILE-FI (9,244 samples, 41.87%)</title><rect x="10.0" y="1157" width="494.0" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="13.00" y="1167.5" >`full-inlining-pass.lisp-full-inlining-pass414^84^TOP-COMPILE-FI</text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1781" width="494.0" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="13.00" y="1791.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`NSUBSTITUTE^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="169.9" y="1045" width="0.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="172.91" y="1055.5" ></text>
</g>
<g >
<title>0x11af4234c (15 samples, 0.07%)</title><rect x="473.4" y="757" width="0.8" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="476.42" y="767.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (84 samples, 0.38%)</title><rect x="146.8" y="821" width="4.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="149.76" y="831.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (3 samples, 0.01%)</title><rect x="15.8" y="517" width="0.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="18.77" y="527.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="132.3" y="645" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="135.33" y="655.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2501" width="494.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="13.00" y="2511.5" >`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE</text>
</g>
<g >
<title>0x11a604775 (9 samples, 0.04%)</title><rect x="170.9" y="1029" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="173.92" y="1039.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (3 samples, 0.01%)</title><rect x="468.9" y="597" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="471.93" y="607.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (3 samples, 0.01%)</title><rect x="184.4" y="885" width="0.1" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="187.39" y="895.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (4 samples, 0.02%)</title><rect x="212.6" y="933" width="0.2" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="215.61" y="943.5" ></text>
</g>
<g >
<title>`GC_allochblk (3 samples, 0.01%)</title><rect x="130.2" y="469" width="0.2" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="133.20" y="479.5" ></text>
</g>
<g >
<title>`VASLIST-LENGTH^CORE^FN^^ (2 samples, 0.01%)</title><rect x="126.7" y="517" width="0.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="129.67" y="527.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="581" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="149.44" y="591.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (38 samples, 0.17%)</title><rect x="202.6" y="917" width="2.0" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="205.56" y="927.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (19 samples, 0.09%)</title><rect x="345.0" y="965" width="1.0" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="347.99" y="975.5" ></text>
</g>
<g >
<title>`GC_allocobj (499 samples, 2.26%)</title><rect x="476.7" y="805" width="26.7" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="479.73" y="815.5" >`..</text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleVector_O&gt; gctools::GCObjectAppro (2 samples, 0.01%)</title><rect x="141.3" y="581" width="0.1" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="144.26" y="591.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (3 samples, 0.01%)</title><rect x="460.4" y="469" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="463.43" y="479.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.01%)</title><rect x="466.9" y="613" width="0.1" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="469.90" y="623.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T T ONE-SUC (2,721 samples, 12.32%)</title><rect x="10.4" y="981" width="145.4" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="13.37" y="991.5" >`INLINE-ONE-INSTRU..</text>
</g>
<g >
<title>`llvm::InstructionCombiningPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="146.7" y="85" width="0.1" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="149.66" y="95.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (3 samples, 0.01%)</title><rect x="184.7" y="965" width="0.2" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="187.71" y="975.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="470.6" y="709" width="0.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="473.58" y="719.5" ></text>
</g>
<g >
<title>`HIR-&gt;MIR^CLASP-CLEAVIR^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="1237" width="494.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="13.00" y="1247.5" >`HIR-&gt;MIR^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (6 samples, 0.03%)</title><rect x="244.0" y="901" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="247.03" y="911.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="470.0" y="693" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="473.05" y="703.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.02%)</title><rect x="470.3" y="693" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="473.32" y="703.5" ></text>
</g>
<g >
<title>0x11e6df148 (9,244 samples, 41.87%)</title><rect x="10.0" y="3285" width="494.0" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="13.00" y="3295.5" >0x11e6df148</text>
</g>
<g >
<title>0x11a3941e0 (6 samples, 0.03%)</title><rect x="232.3" y="949" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="235.33" y="959.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (5 samples, 0.02%)</title><rect x="17.1" y="501" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="20.05" y="511.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="12.9" y="645" width="0.1" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="15.89" y="655.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (6 samples, 0.03%)</title><rect x="168.1" y="1045" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="171.09" y="1055.5" ></text>
</g>
<g >
<title>0x11a4fe0a9 (2 samples, 0.01%)</title><rect x="170.2" y="1045" width="0.1" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="173.17" y="1055.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1,520 samples, 6.88%)</title><rect x="172.0" y="1077" width="81.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="175.04" y="1087.5" >`MAPCAR^C..</text>
</g>
<g >
<title>0x11e891a8c (11 samples, 0.05%)</title><rect x="121.0" y="661" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="123.95" y="671.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (13 samples, 0.06%)</title><rect x="163.6" y="1029" width="0.7" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="166.60" y="1039.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (4 samples, 0.02%)</title><rect x="458.3" y="533" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="461.29" y="543.5" ></text>
</g>
<g >
<title>`DELETE^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="461.6" y="613" width="0.1" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="464.55" y="623.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (10 samples, 0.05%)</title><rect x="216.1" y="965" width="0.5" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="219.08" y="975.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="455.7" y="677" width="0.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="458.67" y="687.5" ></text>
</g>
<g >
<title>0x11e697af9 (1,702 samples, 7.71%)</title><rect x="21.2" y="565" width="90.9" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="24.17" y="575.5" >0x11e697af9</text>
</g>
<g >
<title>0x11a3940a8 (14 samples, 0.06%)</title><rect x="198.8" y="981" width="0.8" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="201.82" y="991.5" ></text>
</g>
<g >
<title>`cc_enclose (5 samples, 0.02%)</title><rect x="125.0" y="565" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="128.01" y="575.5" ></text>
</g>
<g >
<title>0x11af4440a (5 samples, 0.02%)</title><rect x="472.0" y="677" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="475.03" y="687.5" ></text>
</g>
<g >
<title>`GC_allochblk (4 samples, 0.02%)</title><rect x="184.1" y="869" width="0.2" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="187.12" y="879.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (4 samples, 0.02%)</title><rect x="222.2" y="869" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="225.23" y="879.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (3 samples, 0.01%)</title><rect x="188.3" y="981" width="0.2" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="191.34" y="991.5" ></text>
</g>
<g >
<title>`DISCONNECT-PREDECESSOR^CLEAVIR-PARTIAL-INLINING^FN^^ (12 samples, 0.05%)</title><rect x="129.1" y="677" width="0.7" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="132.13" y="687.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (1,644 samples, 7.45%)</title><rect x="22.5" y="469" width="87.9" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="25.51" y="479.5" >`GC_generi..</text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (3 samples, 0.01%)</title><rect x="17.9" y="597" width="0.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="20.86" y="607.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (13 samples, 0.06%)</title><rect x="139.3" y="709" width="0.7" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="142.34" y="719.5" ></text>
</g>
<g >
<title>0x11b2d98b0 (9,244 samples, 41.87%)</title><rect x="10.0" y="3077" width="494.0" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="13.00" y="3087.5" >0x11b2d98b0</text>
</g>
<g >
<title>`top.lsp-top130^378^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3797" width="494.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="13.00" y="3807.5" >`top.lsp-top130^378^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`GC_reclaim_clear (2 samples, 0.01%)</title><rect x="475.9" y="789" width="0.1" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text  x="478.88" y="799.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (3 samples, 0.01%)</title><rect x="128.5" y="581" width="0.1" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="131.49" y="591.5" ></text>
</g>
<g >
<title>`inline-function.lisp-inline-function413^82^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="503.9" y="1013" width="0.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="506.93" y="1023.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (2 samples, 0.01%)</title><rect x="244.6" y="837" width="0.1" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="247.62" y="847.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="475.1" y="677" width="0.1" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="478.13" y="687.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::run() (2 samples, 0.01%)</title><rect x="146.7" y="53" width="0.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="149.66" y="63.5" ></text>
</g>
<g >
<title>`DELETE-INSTRUCTION^CLEAVIR-IR^FN^^ (28 samples, 0.13%)</title><rect x="451.0" y="1077" width="1.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="454.02" y="1087.5" ></text>
</g>
<g >
<title>0x11e697af9 (14 samples, 0.06%)</title><rect x="141.6" y="661" width="0.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="144.58" y="671.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (57 samples, 0.26%)</title><rect x="500.4" y="661" width="3.0" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="503.35" y="671.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="159.1" y="1061" width="0.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="162.06" y="1071.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (280 samples, 1.27%)</title><rect x="455.8" y="725" width="14.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="458.78" y="735.5" ></text>
</g>
<g >
<title>0x11a5b60a8 (4 samples, 0.02%)</title><rect x="187.8" y="1013" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="190.81" y="1023.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (2 samples, 0.01%)</title><rect x="149.1" y="645" width="0.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="152.06" y="655.5" ></text>
</g>
<g >
<title>`wrapped_cl__gethash_T_spHashTableBase_spT_sp (4 samples, 0.02%)</title><rect x="449.5" y="997" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="452.47" y="1007.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.01%)</title><rect x="21.9" y="501" width="0.1" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="24.86" y="511.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1717" width="494.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="13.00" y="1727.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (18 samples, 0.08%)</title><rect x="177.4" y="1045" width="1.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="180.44" y="1055.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (8 samples, 0.04%)</title><rect x="13.5" y="629" width="0.4" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="16.47" y="639.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (299 samples, 1.35%)</title><rect x="367.5" y="949" width="16.0" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="370.49" y="959.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (33 samples, 0.15%)</title><rect x="343.2" y="965" width="1.8" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="346.23" y="975.5" ></text>
</g>
<g >
<title>`DELETE^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="466.7" y="645" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="469.74" y="655.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (23 samples, 0.10%)</title><rect x="468.7" y="693" width="1.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="471.66" y="703.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="148.7" y="661" width="0.1" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="151.69" y="671.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (2 samples, 0.01%)</title><rect x="148.7" y="613" width="0.1" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="151.69" y="623.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (17 samples, 0.08%)</title><rect x="246.7" y="901" width="0.9" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="249.65" y="911.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.01%)</title><rect x="132.5" y="661" width="0.2" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="135.55" y="671.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (103 samples, 0.47%)</title><rect x="219.8" y="949" width="5.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="222.77" y="959.5" ></text>
</g>
<g >
<title>`EQ^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="117.1" y="581" width="0.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="120.10" y="591.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (2 samples, 0.01%)</title><rect x="215.9" y="933" width="0.1" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="218.92" y="943.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (4 samples, 0.02%)</title><rect x="239.7" y="805" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="242.70" y="815.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (8 samples, 0.04%)</title><rect x="153.3" y="869" width="0.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="156.28" y="879.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (155 samples, 0.70%)</title><rect x="424.4" y="933" width="8.3" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="427.41" y="943.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (3 samples, 0.01%)</title><rect x="138.9" y="661" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="141.91" y="671.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (5 samples, 0.02%)</title><rect x="22.1" y="533" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="25.08" y="543.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (2 samples, 0.01%)</title><rect x="120.1" y="645" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="123.15" y="655.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1845" width="494.0" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="13.00" y="1855.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.01%)</title><rect x="151.0" y="693" width="0.1" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="153.99" y="703.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.01%)</title><rect x="16.8" y="485" width="0.1" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="19.79" y="495.5" ></text>
</g>
<g >
<title>`wrapped_cl__append_VaList_sp (2 samples, 0.01%)</title><rect x="464.3" y="629" width="0.1" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="467.28" y="639.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (7 samples, 0.03%)</title><rect x="150.9" y="805" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="153.88" y="815.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (2,628 samples, 11.90%)</title><rect x="11.0" y="853" width="140.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="13.96" y="863.5" >`COPY-FUNCTION-RE..</text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (433 samples, 1.96%)</title><rect x="360.5" y="965" width="23.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="363.54" y="975.5" >`..</text>
</g>
<g >
<title>0x11b2d9a0d (9,244 samples, 41.87%)</title><rect x="10.0" y="3061" width="494.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="13.00" y="3071.5" >0x11b2d9a0d</text>
</g>
<g >
<title>`GC_reclaim_generic (2 samples, 0.01%)</title><rect x="120.8" y="549" width="0.1" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="123.79" y="559.5" ></text>
</g>
<g >
<title>0x11af4234c (8 samples, 0.04%)</title><rect x="474.9" y="789" width="0.4" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="477.91" y="799.5" ></text>
</g>
<g >
<title>0x11a5b4271 (2 samples, 0.01%)</title><rect x="212.4" y="965" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="215.45" y="975.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (5 samples, 0.02%)</title><rect x="12.1" y="741" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="15.14" y="751.5" ></text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="113.9" y="597" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="116.95" y="607.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (2 samples, 0.01%)</title><rect x="177.6" y="949" width="0.1" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="180.60" y="959.5" ></text>
</g>
<g >
<title>`llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="146.4" y="101" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="149.44" y="111.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (3 samples, 0.01%)</title><rect x="148.7" y="677" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="151.69" y="687.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="471.5" y="725" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="474.55" y="735.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (10 samples, 0.05%)</title><rect x="184.0" y="949" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="187.02" y="959.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (26 samples, 0.12%)</title><rect x="194.5" y="949" width="1.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="197.49" y="959.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2405" width="494.0" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="13.00" y="2415.5" >`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`top.lsp-top130^378^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3813" width="494.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="13.00" y="3823.5" >`top.lsp-top130^378^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`0x5 (9,244 samples, 41.87%)</title><rect x="10.0" y="4245" width="494.0" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="13.00" y="4255.5" >`0x5</text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="267.8" y="981" width="0.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="270.82" y="991.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (22 samples, 0.10%)</title><rect x="194.5" y="933" width="1.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="197.54" y="943.5" ></text>
</g>
<g >
<title>0x11e621b89 (2 samples, 0.01%)</title><rect x="473.7" y="661" width="0.1" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="476.74" y="671.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="148.7" y="645" width="0.1" height="15.0" fill="rgb(237,105,105)" rx="2" ry="2" />
<text  x="151.69" y="655.5" ></text>
</g>
<g >
<title>`pthread_getspecific (23 samples, 0.10%)</title><rect x="435.7" y="965" width="1.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="438.69" y="975.5" ></text>
</g>
<g >
<title>0x11e891a8c (3 samples, 0.01%)</title><rect x="459.1" y="613" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="462.15" y="623.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (369 samples, 1.67%)</title><rect x="455.0" y="837" width="19.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="458.03" y="847.5" ></text>
</g>
<g >
<title>`VASLIST-LENGTH^CORE^FN^^ (2 samples, 0.01%)</title><rect x="149.2" y="645" width="0.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="152.17" y="655.5" ></text>
</g>
<g >
<title>0x11e621b89 (10 samples, 0.05%)</title><rect x="148.9" y="677" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="151.90" y="687.5" ></text>
</g>
<g >
<title>`LOCATION-OWNER^CLEAVIR-PARTIAL-INLINING^FN^^ (19 samples, 0.09%)</title><rect x="163.4" y="1077" width="1.0" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="166.39" y="1087.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="150.6" y="789" width="0.1" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="153.61" y="799.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (1,722 samples, 7.80%)</title><rect x="20.2" y="581" width="92.0" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="23.15" y="591.5" >`APPLY^COM..</text>
</g>
<g >
<title>0x11a604132 (10 samples, 0.05%)</title><rect x="170.9" y="1045" width="0.6" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="173.92" y="1055.5" ></text>
</g>
<g >
<title>`ADD-TO-MAPPING^CLEAVIR-PARTIAL-INLINING^((HASH-TABLE T T))^METH (2 samples, 0.01%)</title><rect x="19.1" y="629" width="0.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="22.14" y="639.5" ></text>
</g>
<g >
<title>`GC_freehblk (3 samples, 0.01%)</title><rect x="27.0" y="357" width="0.2" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="30.05" y="367.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (2 samples, 0.01%)</title><rect x="126.4" y="469" width="0.1" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="129.40" y="479.5" ></text>
</g>
<g >
<title>0x11b2d805a (9,244 samples, 41.87%)</title><rect x="10.0" y="3237" width="494.0" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="13.00" y="3247.5" >0x11b2d805a</text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (15 samples, 0.07%)</title><rect x="189.7" y="933" width="0.8" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="192.73" y="943.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="215.7" y="917" width="0.1" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="218.65" y="927.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="452.5" y="1077" width="0.2" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="455.52" y="1087.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (7 samples, 0.03%)</title><rect x="16.7" y="517" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="19.68" y="527.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (3 samples, 0.01%)</title><rect x="193.7" y="965" width="0.1" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="196.69" y="975.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (114 samples, 0.52%)</title><rect x="456.9" y="661" width="6.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="459.90" y="671.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (5 samples, 0.02%)</title><rect x="466.0" y="597" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="468.99" y="607.5" ></text>
</g>
<g >
<title>`compiler-conditions.lsp-compiler-conditions125^193^TOP-COMPILE- (9,244 samples, 41.87%)</title><rect x="10.0" y="2325" width="494.0" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="13.00" y="2335.5" >`compiler-conditions.lsp-compiler-conditions125^193^TOP-COMPILE-</text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2645" width="494.0" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="13.00" y="2655.5" >`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (461 samples, 2.09%)</title><rect x="359.6" y="981" width="24.7" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="362.63" y="991.5" >`..</text>
</g>
<g >
<title>`core::HashTableEq_O::keyTest(gctools::smart_ptr&lt;core::T_O&gt;, gct (2 samples, 0.01%)</title><rect x="220.4" y="901" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="223.41" y="911.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (3 samples, 0.01%)</title><rect x="115.1" y="613" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="118.13" y="623.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (5 samples, 0.02%)</title><rect x="134.6" y="661" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="137.63" y="671.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (2 samples, 0.01%)</title><rect x="455.8" y="645" width="0.1" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="458.83" y="655.5" ></text>
</g>
<g >
<title>0x11a4ee067 (2 samples, 0.01%)</title><rect x="151.1" y="741" width="0.1" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="154.09" y="751.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (462 samples, 2.09%)</title><rect x="478.7" y="757" width="24.7" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="481.71" y="767.5" >`..</text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (2,527 samples, 11.45%)</title><rect x="11.7" y="805" width="135.1" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="14.71" y="815.5" >`copy-function.li..</text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (7 samples, 0.03%)</title><rect x="15.2" y="517" width="0.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="18.24" y="527.5" ></text>
</g>
<g >
<title>`epilogue-cclasp.lisp-epilogue-cclasp460^1^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="4037" width="494.0" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="13.00" y="4047.5" >`epilogue-cclasp.lisp-epilogue-cclasp460^1^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`DO-COMPILER-TIMER^COMPILER^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="2485" width="494.0" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="13.00" y="2495.5" >`DO-COMPILER-TIMER^COMPILER^FN^^</text>
</g>
<g >
<title>`INLINE-FUNCTION^CLEAVIR-PARTIAL-INLINING^((T T T T))^METHOD^^ (2,722 samples, 12.33%)</title><rect x="10.3" y="1093" width="145.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="13.32" y="1103.5" >`INLINE-FUNCTION^C..</text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2005" width="494.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>0x11abd702e (2 samples, 0.01%)</title><rect x="273.5" y="997" width="0.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="276.48" y="1007.5" ></text>
</g>
<g >
<title>0x11e8408fe (2 samples, 0.01%)</title><rect x="450.8" y="1077" width="0.1" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="453.81" y="1087.5" ></text>
</g>
<g >
<title>0x11e84615a (3 samples, 0.01%)</title><rect x="462.8" y="629" width="0.1" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="465.78" y="639.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (3 samples, 0.01%)</title><rect x="114.3" y="613" width="0.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="117.27" y="623.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (2 samples, 0.01%)</title><rect x="115.5" y="597" width="0.1" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="118.50" y="607.5" ></text>
</g>
<g >
<title>`DISCONNECT-PREDECESSOR^CLEAVIR-PARTIAL-INLINING^FN^^ (6 samples, 0.03%)</title><rect x="138.6" y="709" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="141.59" y="719.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="169.2" y="1045" width="0.1" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="172.16" y="1055.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::push_binding(gctools::smart_ptr&lt;core (2 samples, 0.01%)</title><rect x="169.4" y="1093" width="0.1" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="172.37" y="1103.5" ></text>
</g>
<g >
<title>0x11a3940a8 (21 samples, 0.10%)</title><rect x="210.8" y="965" width="1.1" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="213.79" y="975.5" ></text>
</g>
<g >
<title>`TRANSLATE-INPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.02%)</title><rect x="115.7" y="645" width="0.2" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="118.66" y="655.5" ></text>
</g>
<g >
<title>`inline-function.lisp-inline-function413^82^TOP-COMPILE-FILE (920 samples, 4.17%)</title><rect x="454.9" y="1061" width="49.1" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="457.87" y="1071.5" >`inl..</text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (5 samples, 0.02%)</title><rect x="458.0" y="533" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="461.02" y="543.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (2 samples, 0.01%)</title><rect x="151.9" y="741" width="0.1" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="154.90" y="751.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (4 samples, 0.02%)</title><rect x="201.4" y="981" width="0.3" height="15.0" fill="rgb(206,58,58)" rx="2" ry="2" />
<text  x="204.44" y="991.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (2 samples, 0.01%)</title><rect x="171.9" y="965" width="0.1" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="174.88" y="975.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (7 samples, 0.03%)</title><rect x="244.0" y="917" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="246.98" y="927.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (33 samples, 0.15%)</title><rect x="140.9" y="741" width="1.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="143.94" y="751.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.01%)</title><rect x="131.1" y="549" width="0.1" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="134.11" y="559.5" ></text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (4 samples, 0.02%)</title><rect x="113.1" y="581" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="116.15" y="591.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (3 samples, 0.01%)</title><rect x="115.1" y="597" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="118.13" y="607.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (2 samples, 0.01%)</title><rect x="171.9" y="997" width="0.1" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="174.88" y="1007.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="454.6" y="581" width="0.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="457.55" y="591.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (11 samples, 0.05%)</title><rect x="189.8" y="837" width="0.6" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="192.84" y="847.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="147.6" y="741" width="0.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="150.62" y="751.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (4 samples, 0.02%)</title><rect x="146.6" y="197" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="149.55" y="207.5" ></text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="144.4" y="661" width="0.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="147.36" y="671.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="467.1" y="661" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="470.11" y="671.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="454.8" y="549" width="0.1" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="457.76" y="559.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="468.0" y="661" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="470.97" y="671.5" ></text>
</g>
<g >
<title>0x11e84815d (2 samples, 0.01%)</title><rect x="19.1" y="645" width="0.1" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="22.14" y="655.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (19 samples, 0.09%)</title><rect x="166.5" y="1077" width="1.0" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="169.49" y="1087.5" ></text>
</g>
<g >
<title>0x11a4ee067 (7 samples, 0.03%)</title><rect x="116.7" y="581" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="119.68" y="591.5" ></text>
</g>
<g >
<title>0x11b2d8851 (9,244 samples, 41.87%)</title><rect x="10.0" y="3189" width="494.0" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="13.00" y="3199.5" >0x11b2d8851</text>
</g>
<g >
<title>`compiler-conditions.lsp-compiler-conditions125^205^TOP-COMPILE- (9,244 samples, 41.87%)</title><rect x="10.0" y="3397" width="494.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="13.00" y="3407.5" >`compiler-conditions.lsp-compiler-conditions125^205^TOP-COMPILE-</text>
</g>
<g >
<title>`CATCH-FUNCTION^CORE^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="3989" width="494.0" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="13.00" y="3999.5" >`CATCH-FUNCTION^CORE^FN^^</text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^193^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1893" width="494.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="13.00" y="1903.5" >`debuginfo.lsp-debuginfo41^193^TOP-COMPILE-FILE</text>
</g>
<g >
<title>0x11a3940fc (2 samples, 0.01%)</title><rect x="211.9" y="965" width="0.1" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="214.91" y="975.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.01%)</title><rect x="146.3" y="773" width="0.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="149.28" y="783.5" ></text>
</g>
<g >
<title>0x11a5e30ab (297 samples, 1.35%)</title><rect x="307.5" y="981" width="15.9" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="310.53" y="991.5" ></text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (3 samples, 0.01%)</title><rect x="130.8" y="645" width="0.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="133.78" y="655.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (12 samples, 0.05%)</title><rect x="238.2" y="853" width="0.6" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="241.15" y="863.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2165" width="494.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="13.00" y="2175.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="126.4" y="501" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="129.40" y="511.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (6 samples, 0.03%)</title><rect x="247.1" y="789" width="0.4" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="250.13" y="799.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (2 samples, 0.01%)</title><rect x="454.8" y="469" width="0.1" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="457.76" y="479.5" ></text>
</g>
<g >
<title>0x11b2d8318 (9,244 samples, 41.87%)</title><rect x="10.0" y="3221" width="494.0" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="13.00" y="3231.5" >0x11b2d8318</text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (3 samples, 0.01%)</title><rect x="114.3" y="629" width="0.1" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="117.27" y="639.5" ></text>
</g>
<g >
<title>0x11a394071 (32 samples, 0.14%)</title><rect x="209.0" y="965" width="1.7" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="212.03" y="975.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="454.7" y="565" width="0.1" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="457.66" y="575.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (4 samples, 0.02%)</title><rect x="212.6" y="949" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="215.61" y="959.5" ></text>
</g>
<g >
<title>`LOOP-READ-AND-COMPILE-FILE-FORMS^COMPILER^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="1461" width="494.0" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="13.00" y="1471.5" >`LOOP-READ-AND-COMPILE-FILE-FORMS^COMPILER^FN^^</text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.01%)</title><rect x="146.2" y="773" width="0.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="149.18" y="783.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (3 samples, 0.01%)</title><rect x="117.5" y="661" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="120.53" y="671.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.01%)</title><rect x="447.5" y="997" width="0.1" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="450.50" y="1007.5" ></text>
</g>
<g >
<title>`INPUTS^CLEAVIR-IR^((:AFTER) (T T))^SETFMETHOD^^ (4 samples, 0.02%)</title><rect x="156.8" y="1061" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="159.81" y="1071.5" ></text>
</g>
<g >
<title>`core::startup_functions_invoke() (9,244 samples, 41.87%)</title><rect x="10.0" y="4133" width="494.0" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="13.00" y="4143.5" >`core::startup_functions_invoke()</text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="2565" width="494.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="13.00" y="2575.5" >`DO-COMPILATION-UNIT^COMPILER^FN^^</text>
</g>
<g >
<title>0x11a5e30af (2 samples, 0.01%)</title><rect x="323.4" y="981" width="0.1" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="326.40" y="991.5" ></text>
</g>
<g >
<title>`core::parse_ltvc_toplevel_funcall(gctools::GCRootsInModule*, gc (9,244 samples, 41.87%)</title><rect x="10.0" y="4069" width="494.0" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="13.00" y="4079.5" >`core::parse_ltvc_toplevel_funcall(gctools::GCRootsInModule*, gc</text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (4 samples, 0.02%)</title><rect x="444.9" y="869" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="447.88" y="879.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.02%)</title><rect x="145.9" y="773" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="148.91" y="783.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (31 samples, 0.14%)</title><rect x="141.0" y="725" width="1.7" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="144.05" y="735.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (4 samples, 0.02%)</title><rect x="146.6" y="165" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="149.55" y="175.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="473.7" y="677" width="0.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="476.74" y="687.5" ></text>
</g>
<g >
<title>0x11e697af9 (2 samples, 0.01%)</title><rect x="13.6" y="597" width="0.1" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="16.58" y="607.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.01%)</title><rect x="21.0" y="517" width="0.1" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="23.96" y="527.5" ></text>
</g>
<g >
<title>0x11e891a8c (3 samples, 0.01%)</title><rect x="468.7" y="677" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="471.71" y="687.5" ></text>
</g>
<g >
<title>0x11d7624cb (9,244 samples, 41.87%)</title><rect x="10.0" y="2869" width="494.0" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="13.00" y="2879.5" >0x11d7624cb</text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (14 samples, 0.06%)</title><rect x="176.7" y="1045" width="0.7" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="179.69" y="1055.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="3317" width="494.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="13.00" y="3327.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>0x11a3940a8 (5 samples, 0.02%)</title><rect x="175.4" y="1045" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="178.36" y="1055.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (4 samples, 0.02%)</title><rect x="171.2" y="981" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="174.19" y="991.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (2 samples, 0.01%)</title><rect x="447.2" y="997" width="0.1" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="450.23" y="1007.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (3 samples, 0.01%)</title><rect x="432.8" y="933" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="435.80" y="943.5" ></text>
</g>
<g >
<title>0x11abcf056 (2 samples, 0.01%)</title><rect x="266.7" y="997" width="0.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="269.69" y="1007.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (7 samples, 0.03%)</title><rect x="454.5" y="1029" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="457.50" y="1039.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (18 samples, 0.08%)</title><rect x="116.3" y="645" width="1.0" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="119.30" y="655.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (FUNCALL-I (2 samples, 0.01%)</title><rect x="155.7" y="933" width="0.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="158.69" y="943.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (11 samples, 0.05%)</title><rect x="201.7" y="981" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="204.65" y="991.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (51 samples, 0.23%)</title><rect x="202.3" y="949" width="2.7" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="205.29" y="959.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="120.8" y="597" width="0.1" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="123.79" y="607.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (2 samples, 0.01%)</title><rect x="151.0" y="725" width="0.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="153.99" y="735.5" ></text>
</g>
<g >
<title>0x11a4ee067 (2 samples, 0.01%)</title><rect x="470.4" y="629" width="0.1" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="473.37" y="639.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="457.6" y="549" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="460.60" y="559.5" ></text>
</g>
<g >
<title>0x11e697af9 (3 samples, 0.01%)</title><rect x="15.5" y="501" width="0.1" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="18.45" y="511.5" ></text>
</g>
<g >
<title>`GC_alloc_large (11 samples, 0.05%)</title><rect x="189.8" y="869" width="0.6" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="192.84" y="879.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (4 samples, 0.02%)</title><rect x="146.6" y="149" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="149.55" y="159.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="458.2" y="453" width="0.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="461.19" y="463.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (3 samples, 0.01%)</title><rect x="194.3" y="965" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="197.33" y="975.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (5 samples, 0.02%)</title><rect x="472.0" y="661" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="475.03" y="671.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (92 samples, 0.42%)</title><rect x="463.0" y="677" width="4.9" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="466.00" y="687.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (8 samples, 0.04%)</title><rect x="216.2" y="949" width="0.4" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="219.19" y="959.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="12.7" y="645" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="15.73" y="655.5" ></text>
</g>
<g >
<title>`VASLIST-LENGTH^CORE^FN^^ (2 samples, 0.01%)</title><rect x="152.1" y="677" width="0.1" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="155.11" y="687.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (2 samples, 0.01%)</title><rect x="14.4" y="613" width="0.1" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="17.44" y="623.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (2 samples, 0.01%)</title><rect x="121.2" y="549" width="0.1" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="124.22" y="559.5" ></text>
</g>
<g >
<title>0x11e621b89 (25 samples, 0.11%)</title><rect x="125.5" y="549" width="1.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="128.49" y="559.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2453" width="494.0" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="13.00" y="2463.5" >`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`TRANSLATE-INPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="145.8" y="757" width="0.1" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="148.80" y="767.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="462.8" y="597" width="0.1" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="465.78" y="607.5" ></text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:BEFORE) (T ENTER-INSTRUCTION))^SETFMETHOD (2 samples, 0.01%)</title><rect x="14.2" y="645" width="0.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="17.17" y="655.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="454.7" y="549" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="457.66" y="559.5" ></text>
</g>
<g >
<title>`DO-TIME^CORE^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="3461" width="494.0" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="13.00" y="3471.5" >`DO-TIME^CORE^FN^^</text>
</g>
<g >
<title>0x11abd71e0 (12 samples, 0.05%)</title><rect x="276.2" y="997" width="0.6" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="279.15" y="1007.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (36 samples, 0.16%)</title><rect x="459.4" y="613" width="1.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="462.36" y="623.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (5 samples, 0.02%)</title><rect x="11.4" y="789" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="14.44" y="799.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (3 samples, 0.01%)</title><rect x="17.9" y="581" width="0.1" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="20.86" y="591.5" ></text>
</g>
<g >
<title>0x11a5e3d3b (15 samples, 0.07%)</title><rect x="338.3" y="981" width="0.8" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="341.26" y="991.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (14 samples, 0.06%)</title><rect x="468.9" y="629" width="0.8" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="471.93" y="639.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (4 samples, 0.02%)</title><rect x="184.1" y="853" width="0.2" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text  x="187.12" y="863.5" ></text>
</g>
<g >
<title>0x11a5e3099 (3 samples, 0.01%)</title><rect x="307.3" y="981" width="0.1" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="310.26" y="991.5" ></text>
</g>
<g >
<title>0x11e8917f1 (2 samples, 0.01%)</title><rect x="12.6" y="693" width="0.1" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="15.62" y="703.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (2 samples, 0.01%)</title><rect x="454.4" y="1093" width="0.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="457.39" y="1103.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (10 samples, 0.05%)</title><rect x="422.9" y="933" width="0.5" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="425.86" y="943.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (2,657 samples, 12.03%)</title><rect x="10.9" y="869" width="142.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="13.86" y="879.5" >`copy-function.lis..</text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.01%)</title><rect x="131.4" y="613" width="0.1" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="134.37" y="623.5" ></text>
</g>
<g >
<title>`full-inlining-pass.lisp-full-inlining-pass414^84^TOP-COMPILE-FI (9,244 samples, 41.87%)</title><rect x="10.0" y="1173" width="494.0" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="13.00" y="1183.5" >`full-inlining-pass.lisp-full-inlining-pass414^84^TOP-COMPILE-FI</text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (7 samples, 0.03%)</title><rect x="165.7" y="997" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="168.68" y="1007.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (5 samples, 0.02%)</title><rect x="142.0" y="629" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="145.01" y="639.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (32 samples, 0.14%)</title><rect x="123.7" y="581" width="1.7" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="126.68" y="591.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (5 samples, 0.02%)</title><rect x="469.1" y="597" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="472.14" y="607.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (63 samples, 0.29%)</title><rect x="350.8" y="965" width="3.4" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="353.82" y="975.5" ></text>
</g>
<g >
<title>`cc_enclose (2 samples, 0.01%)</title><rect x="457.2" y="613" width="0.1" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="460.22" y="623.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (5 samples, 0.02%)</title><rect x="456.6" y="613" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="459.64" y="623.5" ></text>
</g>
<g >
<title>0x11e697af9 (6 samples, 0.03%)</title><rect x="473.5" y="709" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="476.52" y="719.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (39 samples, 0.18%)</title><rect x="222.5" y="869" width="2.1" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="225.50" y="879.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (5 samples, 0.02%)</title><rect x="129.8" y="661" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="132.77" y="671.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (265 samples, 1.20%)</title><rect x="118.0" y="693" width="14.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="121.01" y="703.5" ></text>
</g>
<g >
<title>`pthread_getspecific (3 samples, 0.01%)</title><rect x="250.0" y="965" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="253.02" y="975.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (2,457 samples, 11.13%)</title><rect x="11.9" y="789" width="131.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="14.92" y="799.5" >`COPY-FUNCTION-R..</text>
</g>
<g >
<title>`EQL^COMMON-LISP^FN^^ (6 samples, 0.03%)</title><rect x="475.7" y="885" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="478.66" y="895.5" ></text>
</g>
<g >
<title>`inline-function.lisp-inline-function413^3^TOP-COMPILE-FILE (37 samples, 0.17%)</title><rect x="169.5" y="1093" width="2.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="172.48" y="1103.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (10 samples, 0.05%)</title><rect x="124.5" y="565" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="127.48" y="575.5" ></text>
</g>
<g >
<title>`combineInstructionsOverFunction(llvm::Function&amp;, llvm::InstComb (2 samples, 0.01%)</title><rect x="146.7" y="69" width="0.1" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="149.66" y="79.5" ></text>
</g>
<g >
<title>`SEQ-ITERATOR-NEXT^CORE^FN^^ (7 samples, 0.03%)</title><rect x="249.0" y="965" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="252.00" y="975.5" ></text>
</g>
<g >
<title>0x11af4234c (131 samples, 0.59%)</title><rect x="121.8" y="645" width="7.0" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="124.75" y="655.5" ></text>
</g>
<g >
<title>`cc_enclose (4 samples, 0.02%)</title><rect x="171.2" y="997" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="174.19" y="1007.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.01%)</title><rect x="19.1" y="597" width="0.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="22.14" y="607.5" ></text>
</g>
<g >
<title>`TRANSLATE-INPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (8 samples, 0.04%)</title><rect x="115.9" y="645" width="0.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="118.87" y="655.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (51 samples, 0.23%)</title><rect x="202.3" y="965" width="2.7" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="205.29" y="975.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="485" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="149.44" y="495.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.01%)</title><rect x="459.9" y="485" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="462.90" y="495.5" ></text>
</g>
<g >
<title>`cc_makeCell (2 samples, 0.01%)</title><rect x="158.6" y="1045" width="0.1" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="161.63" y="1055.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (3 samples, 0.01%)</title><rect x="165.8" y="917" width="0.2" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="168.79" y="927.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (3 samples, 0.01%)</title><rect x="247.0" y="837" width="0.1" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="249.97" y="847.5" ></text>
</g>
<g >
<title>0x11a5e3104 (3 samples, 0.01%)</title><rect x="336.8" y="981" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="339.81" y="991.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (4 samples, 0.02%)</title><rect x="450.2" y="1029" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="453.22" y="1039.5" ></text>
</g>
<g >
<title>`NTHCDR^COMMON-LISP^FN^^ (4 samples, 0.02%)</title><rect x="196.0" y="981" width="0.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="198.99" y="991.5" ></text>
</g>
<g >
<title>`core::coerce::functionDesignator(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="248.2" y="949" width="0.1" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="251.20" y="959.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="14.7" y="565" width="0.1" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="17.70" y="575.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (2 samples, 0.01%)</title><rect x="443.9" y="917" width="0.1" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="446.92" y="927.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (2 samples, 0.01%)</title><rect x="253.6" y="997" width="0.1" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="256.60" y="1007.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (2 samples, 0.01%)</title><rect x="188.7" y="981" width="0.1" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="191.72" y="991.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (14 samples, 0.06%)</title><rect x="163.5" y="1045" width="0.8" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="166.55" y="1055.5" ></text>
</g>
<g >
<title>`compiler-conditions.lsp-compiler-conditions125^193^TOP-COMPILE- (6 samples, 0.03%)</title><rect x="146.4" y="341" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="149.44" y="351.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="120.8" y="581" width="0.1" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="123.79" y="591.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (17 samples, 0.08%)</title><rect x="457.9" y="613" width="0.9" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="460.86" y="623.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (47 samples, 0.21%)</title><rect x="245.3" y="933" width="2.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="248.26" y="943.5" ></text>
</g>
<g >
<title>0x11b2d9743 (9,244 samples, 41.87%)</title><rect x="10.0" y="3093" width="494.0" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="13.00" y="3103.5" >0x11b2d9743</text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (5 samples, 0.02%)</title><rect x="457.1" y="629" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="460.06" y="639.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.01%)</title><rect x="171.2" y="965" width="0.1" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="174.19" y="975.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (2 samples, 0.01%)</title><rect x="190.6" y="1013" width="0.1" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="193.64" y="1023.5" ></text>
</g>
<g >
<title>`tlv_get_addr (5 samples, 0.02%)</title><rect x="275.6" y="949" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="278.62" y="959.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (2,657 samples, 12.03%)</title><rect x="10.9" y="885" width="142.0" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="13.86" y="895.5" >`COPY-FUNCTION-REC..</text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (10 samples, 0.05%)</title><rect x="460.2" y="533" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="463.16" y="543.5" ></text>
</g>
<g >
<title>0x11a5b60fc (2 samples, 0.01%)</title><rect x="215.3" y="965" width="0.1" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="218.33" y="975.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="15.8" y="501" width="0.1" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="18.83" y="511.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1973" width="494.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="472.8" y="741" width="0.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="475.78" y="751.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (16 samples, 0.07%)</title><rect x="166.6" y="1045" width="0.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="169.65" y="1055.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="471.2" y="709" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="474.23" y="719.5" ></text>
</g>
<g >
<title>0x11e621b89 (2 samples, 0.01%)</title><rect x="472.4" y="629" width="0.1" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="475.40" y="639.5" ></text>
</g>
<g >
<title>`top.lsp-top130^378^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3861" width="494.0" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="13.00" y="3871.5" >`top.lsp-top130^378^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (2 samples, 0.01%)</title><rect x="453.4" y="1077" width="0.1" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="456.38" y="1087.5" ></text>
</g>
<g >
<title>0x11a5b6071 (5 samples, 0.02%)</title><rect x="192.8" y="997" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="195.78" y="1007.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.02%)</title><rect x="132.7" y="677" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="135.66" y="687.5" ></text>
</g>
<g >
<title>`GC_mark_some (462 samples, 2.09%)</title><rect x="478.7" y="741" width="24.7" height="15.0" fill="rgb(208,61,61)" rx="2" ry="2" />
<text  x="481.71" y="751.5" >`..</text>
</g>
<g >
<title>0x11ab7fe4a (3 samples, 0.01%)</title><rect x="12.5" y="725" width="0.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="15.46" y="735.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="145.5" y="773" width="0.1" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="148.54" y="783.5" ></text>
</g>
<g >
<title>0x11e621b89 (4 samples, 0.02%)</title><rect x="469.4" y="565" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="472.41" y="575.5" ></text>
</g>
<g >
<title>0x11e697af9 (15 samples, 0.07%)</title><rect x="465.2" y="581" width="0.8" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="468.19" y="591.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (3 samples, 0.01%)</title><rect x="134.7" y="597" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="137.69" y="607.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2581" width="494.0" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="13.00" y="2591.5" >`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="454.8" y="533" width="0.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="457.76" y="543.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (10 samples, 0.05%)</title><rect x="184.0" y="933" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="187.02" y="943.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (2 samples, 0.01%)</title><rect x="151.0" y="661" width="0.1" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="153.99" y="671.5" ></text>
</g>
<g >
<title>0x11b1fc000 (5 samples, 0.02%)</title><rect x="277.2" y="997" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="280.17" y="1007.5" ></text>
</g>
<g >
<title>0x11e621b89 (2 samples, 0.01%)</title><rect x="458.2" y="469" width="0.1" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="461.19" y="479.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1557" width="494.0" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`GC_clear_stack_inner (3 samples, 0.01%)</title><rect x="423.0" y="805" width="0.2" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="426.02" y="815.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (4 samples, 0.02%)</title><rect x="115.1" y="629" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="118.07" y="639.5" ></text>
</g>
<g >
<title>0x11a5e30dc (12 samples, 0.05%)</title><rect x="323.6" y="981" width="0.7" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="326.61" y="991.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (6 samples, 0.03%)</title><rect x="146.4" y="709" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="149.44" y="719.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (2,456 samples, 11.12%)</title><rect x="12.0" y="773" width="131.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="14.98" y="783.5" >`copy-function.l..</text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::sm (3 samples, 0.01%)</title><rect x="184.5" y="965" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="187.55" y="975.5" ></text>
</g>
<g >
<title>`DELETE^COMMON-LISP^FN^^ (10 samples, 0.05%)</title><rect x="129.2" y="661" width="0.6" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="132.23" y="671.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="457.6" y="501" width="0.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="460.60" y="511.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (28 samples, 0.13%)</title><rect x="165.0" y="1061" width="1.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="167.99" y="1071.5" ></text>
</g>
<g >
<title>0x11abcf1d4 (62 samples, 0.28%)</title><rect x="267.8" y="997" width="3.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="270.82" y="1007.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (3 samples, 0.01%)</title><rect x="111.4" y="453" width="0.1" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="114.38" y="463.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::create(unsigned int, gctools::smart_ptr&lt;co (4 samples, 0.02%)</title><rect x="164.5" y="1029" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="167.51" y="1039.5" ></text>
</g>
<g >
<title>0x11b2d95c8 (9,244 samples, 41.87%)</title><rect x="10.0" y="3109" width="494.0" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="13.00" y="3119.5" >0x11b2d95c8</text>
</g>
<g >
<title>`compile.lsp-compile50^107^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="629" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="149.44" y="639.5" ></text>
</g>
<g >
<title>`COMPILE-TO-MODULE-WITH-RUN-TIME-TABLE^COMPILER^FN^^ (3 samples, 0.01%)</title><rect x="454.5" y="597" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="457.50" y="607.5" ></text>
</g>
<g >
<title>`COMPILE-FILE^COMMON-LISP^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="2741" width="494.0" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="13.00" y="2751.5" >`COMPILE-FILE^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (3 samples, 0.01%)</title><rect x="14.7" y="613" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="17.70" y="623.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (5 samples, 0.02%)</title><rect x="11.4" y="757" width="0.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="14.44" y="767.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="472.2" y="629" width="0.1" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="475.19" y="639.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (2 samples, 0.01%)</title><rect x="16.9" y="485" width="0.1" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="19.89" y="495.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (16 samples, 0.07%)</title><rect x="339.4" y="949" width="0.9" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="342.43" y="959.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="454.6" y="533" width="0.1" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="457.55" y="543.5" ></text>
</g>
<g >
<title>`GC_alloc_large (3 samples, 0.01%)</title><rect x="130.2" y="485" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="133.20" y="495.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (22 samples, 0.10%)</title><rect x="16.5" y="565" width="1.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="19.52" y="575.5" ></text>
</g>
<g >
<title>0x11af4234c (2 samples, 0.01%)</title><rect x="471.2" y="693" width="0.1" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="474.23" y="703.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2437" width="494.0" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="13.00" y="2447.5" >`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (4 samples, 0.02%)</title><rect x="168.2" y="1029" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="171.20" y="1039.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setup(unsigned int, gctools::smart_ptr&lt;core: (2 samples, 0.01%)</title><rect x="171.9" y="1013" width="0.1" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="174.88" y="1023.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (2 samples, 0.01%)</title><rect x="128.5" y="549" width="0.1" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="131.54" y="559.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (11 samples, 0.05%)</title><rect x="244.5" y="869" width="0.6" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="247.51" y="879.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="11.4" y="741" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="14.44" y="751.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (3 samples, 0.01%)</title><rect x="423.0" y="821" width="0.2" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="426.02" y="831.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (4 samples, 0.02%)</title><rect x="152.0" y="693" width="0.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="155.00" y="703.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="462.0" y="549" width="0.1" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="465.03" y="559.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (2 samples, 0.01%)</title><rect x="455.7" y="629" width="0.1" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="458.67" y="639.5" ></text>
</g>
<g >
<title>`cc_save_values (2 samples, 0.01%)</title><rect x="127.2" y="581" width="0.1" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="130.15" y="591.5" ></text>
</g>
<g >
<title>`full-inlining-pass.lisp-full-inlining-pass414^84^TOP-COMPILE-FI (9,244 samples, 41.87%)</title><rect x="10.0" y="1189" width="494.0" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="13.00" y="1199.5" >`full-inlining-pass.lisp-full-inlining-pass414^84^TOP-COMPILE-FI</text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.01%)</title><rect x="451.3" y="965" width="0.1" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="454.29" y="975.5" ></text>
</g>
<g >
<title>`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="1221" width="494.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="13.00" y="1231.5" >`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (28 samples, 0.13%)</title><rect x="464.5" y="597" width="1.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="467.49" y="607.5" ></text>
</g>
<g >
<title>`cc_enclose (2 samples, 0.01%)</title><rect x="455.8" y="661" width="0.1" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="458.83" y="671.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (7 samples, 0.03%)</title><rect x="132.2" y="693" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="135.17" y="703.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (18 samples, 0.08%)</title><rect x="468.9" y="645" width="0.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="471.87" y="655.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="12.1" y="677" width="0.1" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="15.14" y="687.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (307 samples, 1.39%)</title><rect x="455.4" y="773" width="16.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="458.41" y="783.5" ></text>
</g>
<g >
<title>`cc_enclose (35 samples, 0.16%)</title><rect x="153.7" y="901" width="1.9" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="156.71" y="911.5" ></text>
</g>
<g >
<title>`GC_find_header (2 samples, 0.01%)</title><rect x="478.6" y="725" width="0.1" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="481.60" y="735.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (4 samples, 0.02%)</title><rect x="140.1" y="725" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="143.14" y="735.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.01%)</title><rect x="143.0" y="725" width="0.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="145.97" y="735.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (135 samples, 0.61%)</title><rect x="132.9" y="725" width="7.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="135.92" y="735.5" ></text>
</g>
<g >
<title>`GC_notify_or_invoke_finalizers (2 samples, 0.01%)</title><rect x="424.2" y="933" width="0.2" height="15.0" fill="rgb(215,71,71)" rx="2" ry="2" />
<text  x="427.25" y="943.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (5 samples, 0.02%)</title><rect x="152.9" y="869" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="155.91" y="879.5" ></text>
</g>
<g >
<title>`top.lsp-top130^522^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3637" width="494.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="13.00" y="3647.5" >`top.lsp-top130^522^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`gctools::Header_s::validate() const (5 samples, 0.02%)</title><rect x="116.8" y="501" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="119.78" y="511.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (4 samples, 0.02%)</title><rect x="137.1" y="549" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="140.14" y="559.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (1,644 samples, 7.45%)</title><rect x="22.5" y="437" width="87.9" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="25.51" y="447.5" >`GC_collec..</text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="120.8" y="565" width="0.1" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="123.79" y="575.5" ></text>
</g>
<g >
<title>0x11e4093d9 (9,244 samples, 41.87%)</title><rect x="10.0" y="2773" width="494.0" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="13.00" y="2783.5" >0x11e4093d9</text>
</g>
<g >
<title>`GC_clear_marks (64 samples, 0.29%)</title><rect x="22.5" y="405" width="3.4" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="25.51" y="415.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (2,244 samples, 10.16%)</title><rect x="13.0" y="709" width="119.9" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="15.99" y="719.5" >`copy-function..</text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (2 samples, 0.01%)</title><rect x="147.9" y="677" width="0.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="150.94" y="687.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="453.4" y="1093" width="0.1" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="456.38" y="1103.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (15 samples, 0.07%)</title><rect x="136.8" y="613" width="0.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="139.82" y="623.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (26 samples, 0.12%)</title><rect x="165.0" y="1045" width="1.4" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="167.99" y="1055.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (32 samples, 0.14%)</title><rect x="472.9" y="805" width="1.7" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="475.94" y="815.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION^CLEAVIR-PARTIAL-INLINING^FN^^ (386 samples, 1.75%)</title><rect x="455.0" y="885" width="20.7" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="458.03" y="895.5" ></text>
</g>
<g >
<title>`wrapped_core__vaslist_length_VaList_sp (2 samples, 0.01%)</title><rect x="137.5" y="533" width="0.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="140.52" y="543.5" ></text>
</g>
<g >
<title>0x11ab7fe4a (2 samples, 0.01%)</title><rect x="456.4" y="677" width="0.1" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="459.37" y="687.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (5 samples, 0.02%)</title><rect x="129.8" y="629" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="132.77" y="639.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (5 samples, 0.02%)</title><rect x="12.7" y="661" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="15.73" y="671.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (8 samples, 0.04%)</title><rect x="194.7" y="901" width="0.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="197.70" y="911.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (3 samples, 0.01%)</title><rect x="111.9" y="517" width="0.1" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="114.87" y="527.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="139.8" y="661" width="0.1" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="142.82" y="671.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="454.6" y="517" width="0.1" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="457.55" y="527.5" ></text>
</g>
<g >
<title>`0x1105750e6 (3 samples, 0.01%)</title><rect x="443.9" y="965" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="446.92" y="975.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE^COMPILER^FN^^ (7 samples, 0.03%)</title><rect x="454.5" y="1013" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="457.50" y="1023.5" ></text>
</g>
<g >
<title>0x11af4440a (4 samples, 0.02%)</title><rect x="151.7" y="757" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="154.68" y="767.5" ></text>
</g>
<g >
<title>0x11abcf052 (22 samples, 0.10%)</title><rect x="265.5" y="997" width="1.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="268.52" y="1007.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (16 samples, 0.07%)</title><rect x="473.4" y="773" width="0.9" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="476.42" y="783.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (16 samples, 0.07%)</title><rect x="162.5" y="1077" width="0.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="165.53" y="1087.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (27 samples, 0.12%)</title><rect x="203.1" y="901" width="1.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="206.15" y="911.5" ></text>
</g>
<g >
<title>`SUBSTITUTE-OUTPUT^CLEAVIR-IR^((T T T))^METHOD^^ (15 samples, 0.07%)</title><rect x="168.0" y="1061" width="0.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="170.98" y="1071.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (6 samples, 0.03%)</title><rect x="244.8" y="853" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="247.78" y="863.5" ></text>
</g>
<g >
<title>`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="3493" width="494.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="13.00" y="3503.5" >`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="150.0" y="741" width="0.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="153.02" y="751.5" ></text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (4 samples, 0.02%)</title><rect x="459.4" y="517" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="462.41" y="527.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="472.2" y="645" width="0.1" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="475.19" y="655.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (2 samples, 0.01%)</title><rect x="12.5" y="677" width="0.1" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="15.51" y="687.5" ></text>
</g>
<g >
<title>0x11af4234c (56 samples, 0.25%)</title><rect x="135.5" y="677" width="3.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="138.54" y="687.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (2 samples, 0.01%)</title><rect x="445.1" y="853" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="448.14" y="863.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (7 samples, 0.03%)</title><rect x="167.1" y="1029" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="170.13" y="1039.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (4 samples, 0.02%)</title><rect x="234.6" y="933" width="0.2" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="237.63" y="943.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (5 samples, 0.02%)</title><rect x="20.5" y="501" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="23.53" y="511.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (2 samples, 0.01%)</title><rect x="170.2" y="1013" width="0.1" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="173.17" y="1023.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (2 samples, 0.01%)</title><rect x="132.4" y="613" width="0.1" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="135.39" y="623.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (2 samples, 0.01%)</title><rect x="462.4" y="581" width="0.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="465.35" y="591.5" ></text>
</g>
<g >
<title>`DELETE-LIST^CORE^FN^^ (2 samples, 0.01%)</title><rect x="474.3" y="757" width="0.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="477.27" y="767.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (22 samples, 0.10%)</title><rect x="122.2" y="581" width="1.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="125.18" y="591.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (7 samples, 0.03%)</title><rect x="201.8" y="949" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="204.81" y="959.5" ></text>
</g>
<g >
<title>`tlv_get_addr (23 samples, 0.10%)</title><rect x="269.7" y="949" width="1.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="272.74" y="959.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (386 samples, 1.75%)</title><rect x="455.0" y="853" width="20.7" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="458.03" y="863.5" ></text>
</g>
<g >
<title>`CLONE-INITARGS^CLEAVIR-IR^((APPEND) (INSTRUCTION))^METHOD^^ (4 samples, 0.02%)</title><rect x="19.7" y="597" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="22.73" y="607.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (14 samples, 0.06%)</title><rect x="188.5" y="1013" width="0.8" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="191.50" y="1023.5" ></text>
</g>
<g >
<title>0x11a5b61e0 (5 samples, 0.02%)</title><rect x="215.6" y="965" width="0.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="218.60" y="975.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (8 samples, 0.04%)</title><rect x="460.7" y="565" width="0.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="463.70" y="575.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (27 samples, 0.12%)</title><rect x="442.3" y="981" width="1.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="445.31" y="991.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="454.6" y="293" width="0.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="457.55" y="303.5" ></text>
</g>
<g >
<title>`DISCONNECT-PREDECESSOR^CLEAVIR-PARTIAL-INLINING^FN^^ (10 samples, 0.05%)</title><rect x="114.5" y="645" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="117.48" y="655.5" ></text>
</g>
<g >
<title>`tlv_get_addr (12 samples, 0.05%)</title><rect x="339.6" y="933" width="0.7" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="342.65" y="943.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (10 samples, 0.05%)</title><rect x="177.7" y="949" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="180.71" y="959.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.01%)</title><rect x="16.0" y="565" width="0.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="18.99" y="575.5" ></text>
</g>
<g >
<title>`cc_enclose (1,649 samples, 7.47%)</title><rect x="22.3" y="533" width="88.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="25.35" y="543.5" >`cc_enclose</text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (31 samples, 0.14%)</title><rect x="147.9" y="741" width="1.6" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="150.89" y="751.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="2757" width="494.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="13.00" y="2767.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>0x11af4440a (22 samples, 0.10%)</title><rect x="122.2" y="597" width="1.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="125.18" y="607.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (3 samples, 0.01%)</title><rect x="178.5" y="1045" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="181.51" y="1055.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (113 samples, 0.51%)</title><rect x="494.3" y="661" width="6.1" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="497.31" y="671.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (6 samples, 0.03%)</title><rect x="459.4" y="533" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="462.41" y="543.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="885" width="0.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="457.50" y="895.5" ></text>
</g>
<g >
<title>0x11a5b60fc (3 samples, 0.01%)</title><rect x="234.0" y="949" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="237.04" y="959.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (7 samples, 0.03%)</title><rect x="188.8" y="981" width="0.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="191.83" y="991.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (499 samples, 2.26%)</title><rect x="476.7" y="821" width="26.7" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="479.73" y="831.5" >`..</text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (26 samples, 0.12%)</title><rect x="194.5" y="981" width="1.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="197.49" y="991.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2069" width="494.0" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (2 samples, 0.01%)</title><rect x="141.1" y="581" width="0.1" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="144.10" y="591.5" ></text>
</g>
<g >
<title>`top.lsp-top130^378^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3765" width="494.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="13.00" y="3775.5" >`top.lsp-top130^378^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (18 samples, 0.08%)</title><rect x="470.7" y="741" width="1.0" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="473.74" y="751.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (5 samples, 0.02%)</title><rect x="423.0" y="869" width="0.3" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="426.02" y="879.5" ></text>
</g>
<g >
<title>`APPEND^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="20.0" y="629" width="0.1" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="22.99" y="639.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="474.5" y="757" width="0.1" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="477.54" y="767.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (40 samples, 0.18%)</title><rect x="222.4" y="885" width="2.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="225.44" y="895.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (2,395 samples, 10.85%)</title><rect x="12.4" y="741" width="128.0" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="15.41" y="751.5" >`copy-function.l..</text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.01%)</title><rect x="454.8" y="485" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="457.76" y="495.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1749" width="494.0" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="13.00" y="1759.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>0x11e54e08b (4 samples, 0.02%)</title><rect x="19.7" y="613" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="22.73" y="623.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (24 samples, 0.11%)</title><rect x="189.3" y="965" width="1.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="192.31" y="975.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="151.1" y="757" width="0.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="154.09" y="767.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2021" width="494.0" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`DO-INLINING^CLEAVIR-PARTIAL-INLINING^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="1205" width="494.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" >`DO-INLINING^CLEAVIR-PARTIAL-INLINING^FN^^</text>
</g>
<g >
<title>0x11a4ee067 (2 samples, 0.01%)</title><rect x="139.8" y="645" width="0.1" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="142.82" y="655.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2421" width="494.0" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="13.00" y="2431.5" >`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`GC_reclaim_generic (2 samples, 0.01%)</title><rect x="234.4" y="933" width="0.1" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="237.41" y="943.5" ></text>
</g>
<g >
<title>`DELETE-LIST^CORE^FN^^ (3 samples, 0.01%)</title><rect x="466.7" y="629" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="469.74" y="639.5" ></text>
</g>
<g >
<title>`__dynamic_cast (2 samples, 0.01%)</title><rect x="122.2" y="549" width="0.1" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="125.18" y="559.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (329 samples, 1.49%)</title><rect x="455.4" y="805" width="17.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="458.35" y="815.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::sm (26 samples, 0.12%)</title><rect x="366.1" y="949" width="1.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="369.10" y="959.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="161.2" y="1045" width="0.1" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="164.19" y="1055.5" ></text>
</g>
<g >
<title>`cc_enclose (10 samples, 0.05%)</title><rect x="159.5" y="1045" width="0.5" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="162.48" y="1055.5" ></text>
</g>
<g >
<title>0x11e5500e1 (3 samples, 0.01%)</title><rect x="19.6" y="613" width="0.1" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="22.57" y="623.5" ></text>
</g>
<g >
<title>`RUN-ALL/Users/karstenpoeck/lisp/compiler/clasp2/src/lisp/kernel (9,244 samples, 41.87%)</title><rect x="10.0" y="4117" width="494.0" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="13.00" y="4127.5" >`RUN-ALL/Users/karstenpoeck/lisp/compiler/clasp2/src/lisp/kernel</text>
</g>
<g >
<title>0x11a5e3e10 (2 samples, 0.01%)</title><rect x="340.7" y="981" width="0.1" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="343.71" y="991.5" ></text>
</g>
<g >
<title>0x11a3940a8 (4 samples, 0.02%)</title><rect x="192.3" y="997" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="195.30" y="1007.5" ></text>
</g>
<g >
<title>0x11b1fc052 (5 samples, 0.02%)</title><rect x="341.2" y="981" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="344.25" y="991.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.01%)</title><rect x="190.4" y="869" width="0.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="193.43" y="879.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (2 samples, 0.01%)</title><rect x="164.6" y="949" width="0.1" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="167.61" y="959.5" ></text>
</g>
<g >
<title>`CLONE-INITARGS^CLEAVIR-IR^((APPEND) (INSTRUCTION))^METHOD^^ (2 samples, 0.01%)</title><rect x="471.1" y="677" width="0.1" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="474.12" y="687.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (18 samples, 0.08%)</title><rect x="344.0" y="949" width="1.0" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="347.03" y="959.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (22 samples, 0.10%)</title><rect x="271.2" y="981" width="1.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="274.24" y="991.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (21 samples, 0.10%)</title><rect x="235.4" y="917" width="1.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="238.43" y="927.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (3 samples, 0.01%)</title><rect x="443.9" y="949" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="446.92" y="959.5" ></text>
</g>
<g >
<title>0x11abcf1e0 (24 samples, 0.11%)</title><rect x="271.1" y="997" width="1.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="274.13" y="1007.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (6 samples, 0.03%)</title><rect x="246.3" y="917" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="249.28" y="927.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.01%)</title><rect x="145.8" y="677" width="0.1" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="148.80" y="687.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (3 samples, 0.01%)</title><rect x="130.2" y="533" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="133.20" y="543.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (5 samples, 0.02%)</title><rect x="189.5" y="933" width="0.2" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="192.47" y="943.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (24 samples, 0.11%)</title><rect x="1188.7" y="4133" width="1.3" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="1191.72" y="4143.5" ></text>
</g>
<g >
<title>`APPEND^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="121.5" y="661" width="0.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="124.54" y="671.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (18 samples, 0.08%)</title><rect x="193.5" y="997" width="1.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="196.53" y="1007.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.01%)</title><rect x="131.6" y="533" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="134.59" y="543.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2613" width="494.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="13.00" y="2623.5" >`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE</text>
</g>
<g >
<title>0x11b1fc0d6 (3 samples, 0.01%)</title><rect x="342.1" y="981" width="0.1" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="345.05" y="991.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (1,760 samples, 7.97%)</title><rect x="20.1" y="629" width="94.1" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="23.10" y="639.5" >`APPLY^COMM..</text>
</g>
<g >
<title>`DELETE^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="138.7" y="693" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="141.75" y="703.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (47 samples, 0.21%)</title><rect x="468.1" y="709" width="2.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="471.07" y="719.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (4 samples, 0.02%)</title><rect x="144.5" y="629" width="0.2" height="15.0" fill="rgb(239,106,106)" rx="2" ry="2" />
<text  x="147.52" y="639.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.01%)</title><rect x="131.6" y="549" width="0.1" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="134.59" y="559.5" ></text>
</g>
<g >
<title>`SUBSTITUTE^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="168.6" y="1045" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="171.62" y="1055.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (8 samples, 0.04%)</title><rect x="177.7" y="869" width="0.4" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="180.71" y="879.5" ></text>
</g>
<g >
<title>`llvm::MachineFunctionPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="146.4" y="37" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="149.44" y="47.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (7 samples, 0.03%)</title><rect x="454.5" y="917" width="0.4" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="457.50" y="927.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (3 samples, 0.01%)</title><rect x="338.6" y="933" width="0.1" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="341.58" y="943.5" ></text>
</g>
<g >
<title>`NULL^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="476.0" y="885" width="0.1" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="478.98" y="895.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (386 samples, 1.75%)</title><rect x="413.0" y="965" width="20.6" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="415.97" y="975.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (4 samples, 0.02%)</title><rect x="165.8" y="949" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="168.79" y="959.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (34 samples, 0.15%)</title><rect x="25.9" y="389" width="1.8" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="28.93" y="399.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (5 samples, 0.02%)</title><rect x="244.8" y="837" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="247.83" y="847.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (3 samples, 0.01%)</title><rect x="178.2" y="981" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="181.24" y="991.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (3 samples, 0.01%)</title><rect x="201.5" y="965" width="0.2" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="204.49" y="975.5" ></text>
</g>
<g >
<title>`TRANSLATE-INPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (5 samples, 0.02%)</title><rect x="116.0" y="629" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="118.98" y="639.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^107^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="677" width="0.4" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="149.44" y="687.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (4 samples, 0.02%)</title><rect x="444.7" y="869" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="447.66" y="879.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="153.0" y="837" width="0.1" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="156.02" y="847.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (3 samples, 0.01%)</title><rect x="468.9" y="581" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="471.93" y="591.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.01%)</title><rect x="145.5" y="741" width="0.1" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="148.54" y="751.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (5 samples, 0.02%)</title><rect x="423.0" y="853" width="0.3" height="15.0" fill="rgb(239,106,106)" rx="2" ry="2" />
<text  x="426.02" y="863.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (9 samples, 0.04%)</title><rect x="177.7" y="933" width="0.5" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="180.71" y="943.5" ></text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="124.1" y="565" width="0.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="127.05" y="575.5" ></text>
</g>
<g >
<title>`pthread_getspecific (2 samples, 0.01%)</title><rect x="251.2" y="981" width="0.1" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="254.19" y="991.5" ></text>
</g>
<g >
<title>0x11e697af9 (6 samples, 0.03%)</title><rect x="151.9" y="757" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="154.90" y="767.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (25 samples, 0.11%)</title><rect x="459.4" y="565" width="1.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="462.36" y="575.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (28 samples, 0.13%)</title><rect x="220.9" y="885" width="1.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="223.95" y="895.5" ></text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (3 samples, 0.01%)</title><rect x="16.5" y="501" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="19.52" y="511.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (3 samples, 0.01%)</title><rect x="234.7" y="917" width="0.1" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="237.68" y="927.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1509" width="494.0" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="13.00" y="1519.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2085" width="494.0" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`top.lsp-top130^378^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3829" width="494.0" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="13.00" y="3839.5" >`top.lsp-top130^378^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (28 samples, 0.13%)</title><rect x="143.9" y="725" width="1.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="146.88" y="735.5" ></text>
</g>
<g >
<title>0x11abcf2a9 (2 samples, 0.01%)</title><rect x="272.5" y="997" width="0.1" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="275.52" y="1007.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (7 samples, 0.03%)</title><rect x="124.6" y="533" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="127.64" y="543.5" ></text>
</g>
<g >
<title>`translate.lisp-translate451^815^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1413" width="494.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="13.00" y="1423.5" >`translate.lisp-translate451^815^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleVector_O&gt; gctools::GCObjectAppro (2 samples, 0.01%)</title><rect x="16.5" y="453" width="0.1" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="19.52" y="463.5" ></text>
</g>
<g >
<title>`SUBSTITUTE^COMMON-LISP^FN^^ (6 samples, 0.03%)</title><rect x="452.2" y="1061" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="455.20" y="1071.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (2 samples, 0.01%)</title><rect x="472.2" y="597" width="0.1" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="475.19" y="607.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (2 samples, 0.01%)</title><rect x="461.7" y="629" width="0.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="464.66" y="639.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="165.6" y="1029" width="0.1" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="168.58" y="1039.5" ></text>
</g>
<g >
<title>`DISCONNECT-PREDECESSOR^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="458.5" y="597" width="0.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="461.51" y="607.5" ></text>
</g>
<g >
<title>`unwind_phase2 (2 samples, 0.01%)</title><rect x="253.6" y="981" width="0.1" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="256.60" y="991.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (7 samples, 0.03%)</title><rect x="459.8" y="533" width="0.4" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="462.79" y="543.5" ></text>
</g>
<g >
<title>0x11a5b60a8 (10 samples, 0.05%)</title><rect x="233.5" y="949" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="236.50" y="959.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (28 samples, 0.13%)</title><rect x="125.4" y="581" width="1.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="128.39" y="591.5" ></text>
</g>
<g >
<title>0x11b2d9290 (9,244 samples, 41.87%)</title><rect x="10.0" y="3141" width="494.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="13.00" y="3151.5" >0x11b2d9290</text>
</g>
<g >
<title>`core::cl__append(gctools::smart_ptr&lt;core::Vaslist&gt;) (2 samples, 0.01%)</title><rect x="20.0" y="597" width="0.1" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="22.99" y="607.5" ></text>
</g>
<g >
<title>`INPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (34 samples, 0.15%)</title><rect x="157.0" y="1061" width="1.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="160.03" y="1071.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (4 samples, 0.02%)</title><rect x="165.4" y="997" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="168.36" y="1007.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (13 samples, 0.06%)</title><rect x="221.5" y="869" width="0.7" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="224.48" y="879.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="3429" width="494.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="13.00" y="3439.5" >`DO-COMPILATION-UNIT^COMPILER^FN^^</text>
</g>
<g >
<title>0x11e856539 (914 samples, 4.14%)</title><rect x="455.0" y="949" width="48.8" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="457.98" y="959.5" >0x11..</text>
</g>
<g >
<title>0x11a5e3c60 (2 samples, 0.01%)</title><rect x="337.3" y="981" width="0.1" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="340.29" y="991.5" ></text>
</g>
<g >
<title>`GC_find_header (2 samples, 0.01%)</title><rect x="153.4" y="821" width="0.1" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="156.39" y="831.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="146.4" y="261" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="149.44" y="271.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (2 samples, 0.01%)</title><rect x="247.0" y="821" width="0.1" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="250.03" y="831.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1989" width="494.0" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="171.2" y="949" width="0.1" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="174.24" y="959.5" ></text>
</g>
<g >
<title>0x11e697af9 (10 samples, 0.05%)</title><rect x="469.1" y="613" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="472.09" y="623.5" ></text>
</g>
<g >
<title>`EQL^COMMON-LISP^FN^^ (6 samples, 0.03%)</title><rect x="152.9" y="901" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="155.86" y="911.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (8 samples, 0.04%)</title><rect x="141.1" y="645" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="144.10" y="655.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="271.1" y="981" width="0.1" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="274.13" y="991.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="147.5" y="741" width="0.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="150.46" y="751.5" ></text>
</g>
<g >
<title>0x11e621b89 (9 samples, 0.04%)</title><rect x="465.5" y="533" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="468.51" y="543.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (24 samples, 0.11%)</title><rect x="189.3" y="981" width="1.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="192.31" y="991.5" ></text>
</g>
<g >
<title>`ADD-TO-MAPPING^CLEAVIR-PARTIAL-INLINING^((HASH-TABLE T T))^METH (5 samples, 0.02%)</title><rect x="134.6" y="693" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="137.63" y="703.5" ></text>
</g>
<g >
<title>0x11e8918c9 (3 samples, 0.01%)</title><rect x="19.6" y="629" width="0.1" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="22.57" y="639.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (31 samples, 0.14%)</title><rect x="143.7" y="757" width="1.7" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="146.72" y="767.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="2053" width="494.0" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (17 samples, 0.08%)</title><rect x="246.7" y="885" width="0.9" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="249.65" y="895.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (15 samples, 0.07%)</title><rect x="193.7" y="981" width="0.8" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="196.69" y="991.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (2 samples, 0.01%)</title><rect x="141.8" y="629" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="144.85" y="639.5" ></text>
</g>
<g >
<title>0x11b265dec (16 samples, 0.07%)</title><rect x="167.9" y="1077" width="0.9" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="170.93" y="1087.5" ></text>
</g>
<g >
<title>0x11abd71d4 (28 samples, 0.13%)</title><rect x="274.6" y="997" width="1.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="277.60" y="1007.5" ></text>
</g>
<g >
<title>`CALL-WITH-COMPILATION-RESULTS^COMPILER^FN^^ (6 samples, 0.03%)</title><rect x="146.4" y="357" width="0.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="149.44" y="367.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (2 samples, 0.01%)</title><rect x="462.5" y="517" width="0.1" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="465.46" y="527.5" ></text>
</g>
<g >
<title>0x11a5e0d3b (2 samples, 0.01%)</title><rect x="136.2" y="597" width="0.1" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="139.24" y="607.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (21 samples, 0.10%)</title><rect x="203.3" y="869" width="1.1" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="206.31" y="879.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1685" width="494.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="13.00" y="1695.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`top.lsp-top130^378^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="4005" width="494.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="13.00" y="4015.5" >`top.lsp-top130^378^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`wrapped_cl__append_VaList_sp (27 samples, 0.12%)</title><rect x="448.0" y="997" width="1.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="451.03" y="1007.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (25 samples, 0.11%)</title><rect x="154.2" y="869" width="1.3" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="157.19" y="879.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (2 samples, 0.01%)</title><rect x="246.1" y="885" width="0.1" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="249.06" y="895.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (5 samples, 0.02%)</title><rect x="158.1" y="981" width="0.3" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="161.15" y="991.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (3 samples, 0.01%)</title><rect x="164.8" y="1061" width="0.1" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="167.78" y="1071.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="236.6" y="917" width="0.1" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="239.55" y="927.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="455.7" y="661" width="0.1" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="458.67" y="671.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="565" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="149.44" y="575.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (5 samples, 0.02%)</title><rect x="115.3" y="645" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="118.34" y="655.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (16 samples, 0.07%)</title><rect x="239.1" y="853" width="0.8" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="242.06" y="863.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="131.2" y="629" width="0.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="134.21" y="639.5" ></text>
</g>
<g >
<title>`wrapped_cl__make_hash_table_T_spFixnum_spNumber_spReal_spSymbol (6 samples, 0.03%)</title><rect x="171.7" y="1061" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="174.72" y="1071.5" ></text>
</g>
<g >
<title>`wrapped_cl__nthcdr_Integer_spList_sp (3 samples, 0.01%)</title><rect x="240.8" y="917" width="0.1" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="243.77" y="927.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (6 samples, 0.03%)</title><rect x="462.3" y="597" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="465.30" y="607.5" ></text>
</g>
<g >
<title>0x11a5e3d4a (3 samples, 0.01%)</title><rect x="340.5" y="981" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="343.50" y="991.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (2 samples, 0.01%)</title><rect x="460.3" y="453" width="0.1" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="463.27" y="463.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (6 samples, 0.03%)</title><rect x="462.3" y="613" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="465.30" y="623.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (14 samples, 0.06%)</title><rect x="162.6" y="1045" width="0.8" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="165.64" y="1055.5" ></text>
</g>
<g >
<title>0x11e84815d (3 samples, 0.01%)</title><rect x="120.1" y="677" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="123.10" y="687.5" ></text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (2 samples, 0.01%)</title><rect x="472.1" y="645" width="0.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="475.08" y="655.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (3 samples, 0.01%)</title><rect x="13.7" y="613" width="0.2" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="16.74" y="623.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (52 samples, 0.24%)</title><rect x="202.2" y="981" width="2.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="205.24" y="991.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (1,644 samples, 7.45%)</title><rect x="22.5" y="421" width="87.9" height="15.0" fill="rgb(250,122,122)" rx="2" ry="2" />
<text  x="25.51" y="431.5" >`GC_try_to..</text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.01%)</title><rect x="132.7" y="661" width="0.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="135.66" y="671.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="145.8" y="741" width="0.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="148.80" y="751.5" ></text>
</g>
<g >
<title>0x11a5e30e0 (233 samples, 1.06%)</title><rect x="324.3" y="981" width="12.4" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="327.25" y="991.5" ></text>
</g>
<g >
<title>`wrapped_cl__gethash_T_spHashTableBase_spT_sp (2 samples, 0.01%)</title><rect x="252.9" y="1045" width="0.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="255.91" y="1055.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="138.4" y="645" width="0.1" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="141.43" y="655.5" ></text>
</g>
<g >
<title>`CCLASP-LOOP-READ-AND-COMPILE-FILE-FORMS^CLASP-CLEAVIR^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="1445" width="494.0" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="13.00" y="1455.5" >`CCLASP-LOOP-READ-AND-COMPILE-FILE-FORMS^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1573" width="494.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="454.8" y="565" width="0.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="457.76" y="575.5" ></text>
</g>
<g >
<title>`CLONE-INITARGS^CLEAVIR-IR^((APPEND) (INSTRUCTION))^METHOD^^ (3 samples, 0.01%)</title><rect x="120.6" y="629" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="123.63" y="639.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (17 samples, 0.08%)</title><rect x="112.2" y="581" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="115.19" y="591.5" ></text>
</g>
<g >
<title>0x11af4234c (4 samples, 0.02%)</title><rect x="456.0" y="661" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="459.05" y="671.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (63 samples, 0.29%)</title><rect x="22.5" y="389" width="3.4" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="25.51" y="399.5" ></text>
</g>
<g >
<title>0x11e697af9 (34 samples, 0.15%)</title><rect x="135.9" y="629" width="1.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.86" y="639.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (51 samples, 0.23%)</title><rect x="202.3" y="933" width="2.7" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="205.29" y="943.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="469" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="149.44" y="479.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf95^304^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="725" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="149.44" y="735.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (7 samples, 0.03%)</title><rect x="182.6" y="1029" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="185.63" y="1039.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="454.6" y="501" width="0.1" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="457.55" y="511.5" ></text>
</g>
<g >
<title>0x11a4ee067 (2 samples, 0.01%)</title><rect x="146.0" y="709" width="0.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="148.96" y="719.5" ></text>
</g>
<g >
<title>`tlv_get_addr (4 samples, 0.02%)</title><rect x="276.5" y="949" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="279.53" y="959.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="2245" width="494.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="13.00" y="2255.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`saveToMultipleValue0 (2 samples, 0.01%)</title><rect x="212.0" y="949" width="0.1" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="215.02" y="959.5" ></text>
</g>
<g >
<title>`DELETE-LIST^CORE^FN^^ (5 samples, 0.02%)</title><rect x="114.6" y="613" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="117.59" y="623.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (3 samples, 0.01%)</title><rect x="15.6" y="517" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="18.61" y="527.5" ></text>
</g>
<g >
<title>`TRANSLATE-INPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.01%)</title><rect x="462.0" y="613" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="465.03" y="623.5" ></text>
</g>
<g >
<title>0x11d705230 (9,244 samples, 41.87%)</title><rect x="10.0" y="3013" width="494.0" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="13.00" y="3023.5" >0x11d705230</text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2693" width="494.0" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="13.00" y="2703.5" >`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`core::DtreeInterpreter_O::entry_point(core::T_O*, unsigned long (6 samples, 0.03%)</title><rect x="146.4" y="773" width="0.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="149.44" y="783.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (2 samples, 0.01%)</title><rect x="122.4" y="501" width="0.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="125.45" y="511.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (10 samples, 0.05%)</title><rect x="177.7" y="965" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="180.71" y="975.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (11 samples, 0.05%)</title><rect x="276.2" y="981" width="0.6" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="279.21" y="991.5" ></text>
</g>
<g >
<title>`compiler-conditions.lsp-compiler-conditions125^205^TOP-COMPILE- (9,244 samples, 41.87%)</title><rect x="10.0" y="3381" width="494.0" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="13.00" y="3391.5" >`compiler-conditions.lsp-compiler-conditions125^205^TOP-COMPILE-</text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="462.2" y="613" width="0.1" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="465.19" y="623.5" ></text>
</g>
<g >
<title>`cc_enclose (2 samples, 0.01%)</title><rect x="159.3" y="1045" width="0.1" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="162.32" y="1055.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (3 samples, 0.01%)</title><rect x="445.1" y="869" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="448.14" y="879.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (19 samples, 0.09%)</title><rect x="444.5" y="917" width="1.0" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="447.50" y="927.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (12 samples, 0.05%)</title><rect x="176.7" y="1029" width="0.7" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="179.75" y="1039.5" ></text>
</g>
<g >
<title>`GC_alloc_large (30 samples, 0.14%)</title><rect x="222.7" y="821" width="1.6" height="15.0" fill="rgb(254,128,128)" rx="2" ry="2" />
<text  x="225.66" y="831.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (3 samples, 0.01%)</title><rect x="113.6" y="533" width="0.2" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="116.63" y="543.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="533" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="149.44" y="543.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (14 samples, 0.06%)</title><rect x="162.6" y="1061" width="0.8" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="165.64" y="1071.5" ></text>
</g>
<g >
<title>`COPY-SEQ^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="452.3" y="1045" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="455.25" y="1055.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (4 samples, 0.02%)</title><rect x="126.2" y="501" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="129.19" y="511.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (21 samples, 0.10%)</title><rect x="15.0" y="597" width="1.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="18.02" y="607.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (5 samples, 0.02%)</title><rect x="244.5" y="853" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="247.51" y="863.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (2 samples, 0.01%)</title><rect x="462.4" y="517" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="465.35" y="527.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::sm (3 samples, 0.01%)</title><rect x="204.6" y="917" width="0.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="207.59" y="927.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (5 samples, 0.02%)</title><rect x="134.6" y="613" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="137.63" y="623.5" ></text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (3 samples, 0.01%)</title><rect x="451.9" y="1045" width="0.1" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="454.88" y="1055.5" ></text>
</g>
<g >
<title>`GC_mark_thread (12,835 samples, 58.13%)</title><rect x="504.0" y="4197" width="686.0" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="507.04" y="4207.5" >`GC_mark_thread</text>
</g>
<g >
<title>`llvmo::ClaspJIT_O::addModule(gctools::smart_ptr&lt;llvmo::Module_O (2 samples, 0.01%)</title><rect x="146.4" y="149" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="149.44" y="159.5" ></text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (2 samples, 0.01%)</title><rect x="170.2" y="1029" width="0.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="173.17" y="1039.5" ></text>
</g>
<g >
<title>0x11af4234c (5 samples, 0.02%)</title><rect x="456.6" y="629" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="459.64" y="639.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="115.4" y="597" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="118.39" y="607.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (11 samples, 0.05%)</title><rect x="122.3" y="533" width="0.6" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="125.34" y="543.5" ></text>
</g>
<g >
<title>0x11a6e60dc (2 samples, 0.01%)</title><rect x="148.4" y="693" width="0.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="151.42" y="703.5" ></text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (5 samples, 0.02%)</title><rect x="143.9" y="661" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="146.88" y="671.5" ></text>
</g>
<g >
<title>`top.lsp-top130^378^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3845" width="494.0" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="13.00" y="3855.5" >`top.lsp-top130^378^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`FIND-IN-MAPPING^CLEAVIR-PARTIAL-INLINING^((HASH-TABLE T))^METHO (3 samples, 0.01%)</title><rect x="132.3" y="661" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="135.33" y="671.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (26 samples, 0.12%)</title><rect x="194.5" y="965" width="1.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="197.49" y="975.5" ></text>
</g>
<g >
<title>`CLONE-INITARGS^CLEAVIR-IR^((APPEND) (INSTRUCTION))^METHOD^^ (2 samples, 0.01%)</title><rect x="464.2" y="613" width="0.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="467.17" y="623.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (11 samples, 0.05%)</title><rect x="148.9" y="693" width="0.6" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="151.90" y="703.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (15 samples, 0.07%)</title><rect x="116.5" y="613" width="0.8" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="119.46" y="623.5" ></text>
</g>
<g >
<title>0x11e84815d (2 samples, 0.01%)</title><rect x="131.1" y="629" width="0.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="134.11" y="639.5" ></text>
</g>
<g >
<title>0x11a3940a8 (7 samples, 0.03%)</title><rect x="187.1" y="1013" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="190.06" y="1023.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (16 samples, 0.07%)</title><rect x="474.8" y="837" width="0.8" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="477.75" y="847.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (2,626 samples, 11.89%)</title><rect x="11.1" y="837" width="140.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="14.07" y="847.5" >`copy-function.li..</text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2373" width="494.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="13.00" y="2383.5" >`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (1,955 samples, 8.85%)</title><rect x="13.5" y="693" width="104.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="16.47" y="703.5" >`COPY-FUNCTI..</text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (6 samples, 0.03%)</title><rect x="182.6" y="1013" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="185.63" y="1023.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (11 samples, 0.05%)</title><rect x="126.1" y="517" width="0.6" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="129.08" y="527.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.01%)</title><rect x="143.0" y="709" width="0.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="145.97" y="719.5" ></text>
</g>
<g >
<title>`translate.lisp-translate451^815^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1397" width="494.0" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="13.00" y="1407.5" >`translate.lisp-translate451^815^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`GC_reclaim_generic (5 samples, 0.02%)</title><rect x="503.4" y="821" width="0.3" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="506.40" y="831.5" ></text>
</g>
<g >
<title>0x11abcf0fc (4 samples, 0.02%)</title><rect x="267.3" y="997" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="270.28" y="1007.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (18 samples, 0.08%)</title><rect x="177.4" y="997" width="1.0" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="180.44" y="1007.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (55 samples, 0.25%)</title><rect x="143.2" y="789" width="3.0" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="146.24" y="799.5" ></text>
</g>
<g >
<title>`ALL-PARAMETERS-REQUIRED-P^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.02%)</title><rect x="277.5" y="997" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="280.54" y="1007.5" ></text>
</g>
<g >
<title>0x11af4234c (28 samples, 0.13%)</title><rect x="143.9" y="741" width="1.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="146.88" y="751.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (130 samples, 0.59%)</title><rect x="121.8" y="629" width="7.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="124.81" y="639.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (5 samples, 0.02%)</title><rect x="216.3" y="933" width="0.3" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="219.35" y="943.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (8 samples, 0.04%)</title><rect x="460.2" y="485" width="0.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="463.16" y="495.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (2 samples, 0.01%)</title><rect x="459.4" y="453" width="0.1" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="462.41" y="463.5" ></text>
</g>
<g >
<title>0x11a5b60a8 (13 samples, 0.06%)</title><rect x="200.5" y="981" width="0.7" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="203.53" y="991.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (3 samples, 0.01%)</title><rect x="158.8" y="1045" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="161.84" y="1055.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (6 samples, 0.03%)</title><rect x="146.4" y="453" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="149.44" y="463.5" ></text>
</g>
<g >
<title>`top.lsp-top130^378^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3893" width="494.0" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="13.00" y="3903.5" >`top.lsp-top130^378^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="18.1" y="597" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="21.07" y="607.5" ></text>
</g>
<g >
<title>`NTHCDR^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="178.6" y="1029" width="0.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="181.56" y="1039.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (3 samples, 0.01%)</title><rect x="113.2" y="549" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="116.20" y="559.5" ></text>
</g>
<g >
<title>`core::cl__append(gctools::smart_ptr&lt;core::Vaslist&gt;) (2 samples, 0.01%)</title><rect x="121.5" y="629" width="0.1" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="124.54" y="639.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="468.0" y="677" width="0.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="470.97" y="687.5" ></text>
</g>
<g >
<title>0x11e856539 (2,718 samples, 12.31%)</title><rect x="10.4" y="965" width="145.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="13.43" y="975.5" >0x11e856539</text>
</g>
<g >
<title>0x11a5b6071 (6 samples, 0.03%)</title><rect x="175.7" y="1045" width="0.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="178.73" y="1055.5" ></text>
</g>
<g >
<title>`GC_allochblk (30 samples, 0.14%)</title><rect x="222.7" y="805" width="1.6" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="225.66" y="815.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (4 samples, 0.02%)</title><rect x="464.9" y="533" width="0.2" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="467.87" y="543.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="11.0" y="837" width="0.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="13.96" y="847.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (462 samples, 2.09%)</title><rect x="478.7" y="725" width="24.7" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="481.71" y="735.5" >`..</text>
</g>
<g >
<title>`SEQ-ITERATOR-ENDP^CORE^FN^^ (3 samples, 0.01%)</title><rect x="250.6" y="981" width="0.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="253.55" y="991.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="136.7" y="549" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="139.66" y="559.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (3 samples, 0.01%)</title><rect x="459.4" y="469" width="0.2" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="462.41" y="479.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.03%)</title><rect x="146.4" y="789" width="0.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="149.44" y="799.5" ></text>
</g>
<g >
<title>`CATCH-FUNCTION^CORE^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="3605" width="494.0" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="13.00" y="3615.5" >`CATCH-FUNCTION^CORE^FN^^</text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (3 samples, 0.01%)</title><rect x="434.8" y="949" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="437.83" y="959.5" ></text>
</g>
<g >
<title>0x11a5b6000 (2 samples, 0.01%)</title><rect x="232.9" y="949" width="0.1" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="235.86" y="959.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (4 samples, 0.02%)</title><rect x="450.2" y="1045" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="453.22" y="1055.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (2 samples, 0.01%)</title><rect x="12.7" y="613" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="15.73" y="623.5" ></text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="474.0" y="725" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="477.00" y="735.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (35 samples, 0.16%)</title><rect x="234.8" y="949" width="1.9" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="237.84" y="959.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (20 samples, 0.09%)</title><rect x="471.8" y="773" width="1.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="474.81" y="783.5" ></text>
</g>
<g >
<title>`GC_allochblk (11 samples, 0.05%)</title><rect x="239.1" y="789" width="0.6" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="242.12" y="799.5" ></text>
</g>
<g >
<title>0x11e891a8c (2 samples, 0.01%)</title><rect x="471.1" y="709" width="0.1" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="474.12" y="719.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.01%)</title><rect x="224.5" y="853" width="0.1" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="227.47" y="863.5" ></text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="168.2" y="1013" width="0.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="171.20" y="1023.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (1,775 samples, 8.04%)</title><rect x="19.4" y="645" width="94.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="22.41" y="655.5" >`CLONE-INST..</text>
</g>
<g >
<title>`GC_remove_protection (2 samples, 0.01%)</title><rect x="432.7" y="933" width="0.1" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="435.69" y="943.5" ></text>
</g>
<g >
<title>`SEQ-ITERATOR-REF^CORE^FN^^ (6 samples, 0.03%)</title><rect x="249.4" y="965" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="252.38" y="975.5" ></text>
</g>
<g >
<title>`top.lsp-top130^522^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3733" width="494.0" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="13.00" y="3743.5" >`top.lsp-top130^522^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (7 samples, 0.03%)</title><rect x="454.5" y="773" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="457.50" y="783.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (3 samples, 0.01%)</title><rect x="138.9" y="645" width="0.2" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="141.91" y="655.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (33 samples, 0.15%)</title><rect x="108.6" y="373" width="1.8" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="111.61" y="383.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (8 samples, 0.04%)</title><rect x="171.0" y="1013" width="0.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="173.97" y="1023.5" ></text>
</g>
<g >
<title>0x11a5b427d (4 samples, 0.02%)</title><rect x="212.6" y="965" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="215.61" y="975.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="1333" width="494.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="13.00" y="1343.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="472.3" y="645" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="475.35" y="655.5" ></text>
</g>
<g >
<title>0x11e621b89 (5 samples, 0.02%)</title><rect x="142.0" y="613" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="145.01" y="623.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (16 samples, 0.07%)</title><rect x="157.7" y="1029" width="0.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="160.72" y="1039.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (7 samples, 0.03%)</title><rect x="195.9" y="997" width="0.4" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="198.88" y="1007.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="467.4" y="613" width="0.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="470.38" y="623.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (9 samples, 0.04%)</title><rect x="474.9" y="805" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="477.86" y="815.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.02%)</title><rect x="145.9" y="757" width="0.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="148.91" y="767.5" ></text>
</g>
<g >
<title>`CALL-WITH-COMPILATION-RESULTS^COMPILER^FN^^ (7 samples, 0.03%)</title><rect x="454.5" y="677" width="0.4" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="457.50" y="687.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (5 samples, 0.02%)</title><rect x="12.7" y="693" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="15.73" y="703.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (3 samples, 0.01%)</title><rect x="201.7" y="949" width="0.1" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="204.65" y="959.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="501" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="149.44" y="511.5" ></text>
</g>
<g >
<title>`DISCONNECT-PREDECESSOR^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="474.3" y="789" width="0.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="477.27" y="799.5" ></text>
</g>
<g >
<title>0x11e8544ce (917 samples, 4.15%)</title><rect x="454.9" y="1013" width="49.0" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="457.93" y="1023.5" >0x11..</text>
</g>
<g >
<title>`top.lsp-top130^378^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3781" width="494.0" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="13.00" y="3791.5" >`top.lsp-top130^378^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (8 samples, 0.04%)</title><rect x="462.2" y="629" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="465.19" y="639.5" ></text>
</g>
<g >
<title>`GC_free_block_ending_at (3 samples, 0.01%)</title><rect x="27.0" y="341" width="0.2" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="30.05" y="351.5" ></text>
</g>
<g >
<title>0x11e40316e (9,244 samples, 41.87%)</title><rect x="10.0" y="2789" width="494.0" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="13.00" y="2799.5" >0x11e40316e</text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1733" width="494.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="13.00" y="1743.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.02%)</title><rect x="117.7" y="645" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="120.74" y="655.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="125.1" y="517" width="0.1" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="128.07" y="527.5" ></text>
</g>
<g >
<title>0x11b2d90d0 (9,244 samples, 41.87%)</title><rect x="10.0" y="3157" width="494.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="13.00" y="3167.5" >0x11b2d90d0</text>
</g>
<g >
<title>0x11abcf0f4 (2 samples, 0.01%)</title><rect x="267.1" y="997" width="0.1" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="270.12" y="1007.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (50 samples, 0.23%)</title><rect x="464.0" y="661" width="2.7" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="467.01" y="671.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (12 samples, 0.05%)</title><rect x="217.1" y="933" width="0.6" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="220.10" y="943.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.01%)</title><rect x="120.1" y="597" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="123.15" y="607.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="2901" width="494.0" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="13.00" y="2911.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (70 samples, 0.32%)</title><rect x="14.6" y="661" width="3.7" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="17.60" y="671.5" ></text>
</g>
<g >
<title>0x11e891a8c (3 samples, 0.01%)</title><rect x="135.2" y="693" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="138.22" y="703.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (10 samples, 0.05%)</title><rect x="246.9" y="853" width="0.6" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="249.92" y="863.5" ></text>
</g>
<g >
<title>0x11a5e30d8 (2 samples, 0.01%)</title><rect x="323.5" y="981" width="0.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="326.51" y="991.5" ></text>
</g>
<g >
<title>`CCLASP-EVAL^CLASP-CLEAVIR^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="3509" width="494.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="13.00" y="3519.5" >`CCLASP-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (5 samples, 0.02%)</title><rect x="134.6" y="629" width="0.3" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="137.63" y="639.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (11 samples, 0.05%)</title><rect x="157.9" y="997" width="0.6" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="160.88" y="1007.5" ></text>
</g>
<g >
<title>`GC_mark_some (1,543 samples, 6.99%)</title><rect x="27.9" y="389" width="82.5" height="15.0" fill="rgb(250,122,122)" rx="2" ry="2" />
<text  x="30.90" y="399.5" >`GC_mark_..</text>
</g>
<g >
<title>`GC_do_local_mark (462 samples, 2.09%)</title><rect x="478.7" y="693" width="24.7" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="481.71" y="703.5" >`..</text>
</g>
<g >
<title>`LOCATION-OWNER^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="461.9" y="613" width="0.1" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="464.93" y="623.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1541" width="494.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="13.00" y="1551.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.01%)</title><rect x="139.5" y="613" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="142.55" y="623.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="473.7" y="693" width="0.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="476.74" y="703.5" ></text>
</g>
<g >
<title>`top.lsp-top130^522^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3621" width="494.0" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="13.00" y="3631.5" >`top.lsp-top130^522^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`tlv_get_addr (7 samples, 0.03%)</title><rect x="356.2" y="949" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="359.21" y="959.5" ></text>
</g>
<g >
<title>`gctools::return_type core::funcall_consume_valist_&lt;core::Functi (2 samples, 0.01%)</title><rect x="249.9" y="965" width="0.1" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="252.91" y="975.5" ></text>
</g>
<g >
<title>`BYPASS-INSTRUCTION^CLEAVIR-IR^FN^^ (70 samples, 0.32%)</title><rect x="156.5" y="1093" width="3.7" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="159.49" y="1103.5" ></text>
</g>
<g >
<title>0x11abcf01e (16 samples, 0.07%)</title><rect x="264.2" y="997" width="0.9" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="267.24" y="1007.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (2 samples, 0.01%)</title><rect x="451.3" y="1013" width="0.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="454.29" y="1023.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="120.8" y="613" width="0.1" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="123.79" y="623.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (5 samples, 0.02%)</title><rect x="155.3" y="821" width="0.2" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="158.26" y="831.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="137.3" y="533" width="0.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="140.25" y="543.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (24 samples, 0.11%)</title><rect x="14.9" y="613" width="1.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="17.92" y="623.5" ></text>
</g>
<g >
<title>0x11af4234c (18 samples, 0.08%)</title><rect x="468.9" y="661" width="0.9" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="471.87" y="671.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="159.3" y="997" width="0.1" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="162.32" y="1007.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (5 samples, 0.02%)</title><rect x="157.3" y="1029" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="160.35" y="1039.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (510 samples, 2.31%)</title><rect x="476.4" y="837" width="27.3" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="479.41" y="847.5" >`..</text>
</g>
<g >
<title>`ADD-TO-MAPPING^CLEAVIR-PARTIAL-INLINING^((HASH-TABLE T T))^METH (3 samples, 0.01%)</title><rect x="120.1" y="661" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="123.10" y="671.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (9 samples, 0.04%)</title><rect x="240.5" y="949" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="243.45" y="959.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((ENCLOSE-INSTRUCTION (914 samples, 4.14%)</title><rect x="455.0" y="901" width="48.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="457.98" y="911.5" >`COP..</text>
</g>
<g >
<title>0x11e697af9 (2 samples, 0.01%)</title><rect x="12.1" y="661" width="0.1" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="15.14" y="671.5" ></text>
</g>
<g >
<title>`REMOVE-USELESS-INSTRUCTIONS-WITH-WORKLIST^CLEAVIR-REMOVE-USELES (44 samples, 0.20%)</title><rect x="450.6" y="1093" width="2.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="453.60" y="1103.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (41 samples, 0.19%)</title><rect x="464.4" y="613" width="2.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="467.38" y="623.5" ></text>
</g>
<g >
<title>`GC_unmap_old (3 samples, 0.01%)</title><rect x="27.7" y="389" width="0.2" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="30.74" y="399.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::create(unsigned int, gctools::smart_ptr&lt;co (3 samples, 0.01%)</title><rect x="171.9" y="1029" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="174.88" y="1039.5" ></text>
</g>
<g >
<title>0x11e54e08b (3 samples, 0.01%)</title><rect x="147.6" y="773" width="0.1" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="150.57" y="783.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (5 samples, 0.02%)</title><rect x="464.8" y="549" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="467.81" y="559.5" ></text>
</g>
<g >
<title>`GC_alloc_large (8 samples, 0.04%)</title><rect x="195.2" y="853" width="0.5" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="198.24" y="863.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::ModuleHandle (2 samples, 0.01%)</title><rect x="146.4" y="165" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="149.44" y="175.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (4 samples, 0.02%)</title><rect x="423.0" y="837" width="0.2" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="426.02" y="847.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (8 samples, 0.04%)</title><rect x="177.0" y="1013" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="179.96" y="1023.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (3 samples, 0.01%)</title><rect x="243.7" y="901" width="0.1" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="246.66" y="911.5" ></text>
</g>
<g >
<title>0x11e54e08b (11 samples, 0.05%)</title><rect x="121.0" y="645" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="123.95" y="655.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="2725" width="494.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="13.00" y="2735.5" >`APPLY^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="474.5" y="773" width="0.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="477.54" y="783.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="159.9" y="1013" width="0.1" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="162.91" y="1023.5" ></text>
</g>
<g >
<title>`SEQ-ITERATOR-NEXT^CORE^FN^^ (3 samples, 0.01%)</title><rect x="250.7" y="981" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="253.71" y="991.5" ></text>
</g>
<g >
<title>`main (9,244 samples, 41.87%)</title><rect x="10.0" y="4213" width="494.0" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="13.00" y="4223.5" >`main</text>
</g>
<g >
<title>`LINK-INLINE-REMOVE-BUILTINS^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="454.8" y="581" width="0.1" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="457.76" y="591.5" ></text>
</g>
<g >
<title>`compiler-conditions.lsp-compiler-conditions125^193^TOP-COMPILE- (6 samples, 0.03%)</title><rect x="146.4" y="309" width="0.4" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="149.44" y="319.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.01%)</title><rect x="468.9" y="565" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="471.93" y="575.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (24 samples, 0.11%)</title><rect x="125.5" y="533" width="1.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="128.49" y="543.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (54 samples, 0.24%)</title><rect x="147.4" y="805" width="2.9" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="150.41" y="815.5" ></text>
</g>
<g >
<title>0x11e697af9 (4 samples, 0.02%)</title><rect x="472.3" y="677" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="475.29" y="687.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.01%)</title><rect x="131.4" y="597" width="0.1" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="134.37" y="607.5" ></text>
</g>
<g >
<title>0x11af4234c (5 samples, 0.02%)</title><rect x="12.7" y="677" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="15.73" y="687.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (5 samples, 0.02%)</title><rect x="112.7" y="549" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="115.72" y="559.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2,721 samples, 12.32%)</title><rect x="10.4" y="1013" width="145.4" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="13.37" y="1023.5" >`COMBINE-METHOD-FU..</text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="459.9" y="517" width="0.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="462.90" y="527.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (26 samples, 0.12%)</title><rect x="194.5" y="997" width="1.4" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="197.49" y="1007.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (2 samples, 0.01%)</title><rect x="14.7" y="581" width="0.1" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="17.70" y="591.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="451.3" y="1029" width="0.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="454.29" y="1039.5" ></text>
</g>
<g >
<title>`inline-function.lisp-inline-function413^82^TOP-COMPILE-FILE (2,722 samples, 12.33%)</title><rect x="10.3" y="1077" width="145.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="13.32" y="1087.5" >`inline-function.l..</text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (7 samples, 0.03%)</title><rect x="183.1" y="965" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="186.05" y="975.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (4 samples, 0.02%)</title><rect x="166.9" y="1029" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="169.91" y="1039.5" ></text>
</g>
<g >
<title>`cc_invoke_byte_code_interpreter (9,244 samples, 41.87%)</title><rect x="10.0" y="4101" width="494.0" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="13.00" y="4111.5" >`cc_invoke_byte_code_interpreter</text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((T T T ONE-SUC (917 samples, 4.15%)</title><rect x="454.9" y="965" width="49.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="457.93" y="975.5" >`INL..</text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.01%)</title><rect x="451.3" y="981" width="0.1" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="454.29" y="991.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (141 samples, 0.64%)</title><rect x="160.3" y="1093" width="7.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="163.34" y="1103.5" ></text>
</g>
<g >
<title>0x11e891a8c (3 samples, 0.01%)</title><rect x="147.6" y="789" width="0.1" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="150.57" y="799.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (12 samples, 0.05%)</title><rect x="472.0" y="741" width="0.7" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="475.03" y="751.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="725" width="0.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="457.50" y="735.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (4 samples, 0.02%)</title><rect x="456.0" y="693" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="459.05" y="703.5" ></text>
</g>
<g >
<title>0x11a4ee067 (2 samples, 0.01%)</title><rect x="462.5" y="565" width="0.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="465.46" y="575.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((ENCLOSE-INSTRUCTION (2,718 samples, 12.31%)</title><rect x="10.4" y="917" width="145.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="13.43" y="927.5" >`COPY-INSTRUCTION^..</text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (17 samples, 0.08%)</title><rect x="151.6" y="821" width="0.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="154.57" y="831.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (5 samples, 0.02%)</title><rect x="232.4" y="933" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="235.38" y="943.5" ></text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:AFTER) (T T))^SETFMETHOD^^ (2 samples, 0.01%)</title><rect x="451.8" y="1045" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="454.77" y="1055.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (13 samples, 0.06%)</title><rect x="136.9" y="565" width="0.7" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="139.93" y="575.5" ></text>
</g>
<g >
<title>0x11abcf1e3 (2 samples, 0.01%)</title><rect x="272.4" y="997" width="0.1" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="275.41" y="1007.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (2 samples, 0.01%)</title><rect x="151.0" y="613" width="0.1" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="153.99" y="623.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="3525" width="494.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="13.00" y="3535.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="18.1" y="581" width="0.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="21.07" y="591.5" ></text>
</g>
<g >
<title>`GC_alloc_large (11 samples, 0.05%)</title><rect x="239.1" y="805" width="0.6" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="242.12" y="815.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (9 samples, 0.04%)</title><rect x="472.0" y="693" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="475.03" y="703.5" ></text>
</g>
<g >
<title>0x11a5b60a8 (20 samples, 0.09%)</title><rect x="214.3" y="965" width="1.0" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="217.26" y="975.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (2 samples, 0.01%)</title><rect x="131.4" y="629" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="134.37" y="639.5" ></text>
</g>
<g >
<title>`CLONE-INITARGS^CLEAVIR-IR^((APPEND) (INSTRUCTION))^METHOD^^ (3 samples, 0.01%)</title><rect x="19.6" y="597" width="0.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="22.57" y="607.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (3 samples, 0.01%)</title><rect x="165.8" y="901" width="0.2" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="168.79" y="911.5" ></text>
</g>
<g >
<title>`core::byte_code_interpreter(gctools::GCRootsInModule*, gctools: (9,244 samples, 41.87%)</title><rect x="10.0" y="4085" width="494.0" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="13.00" y="4095.5" >`core::byte_code_interpreter(gctools::GCRootsInModule*, gctools:</text>
</g>
<g >
<title>`cc_gatherRestArguments (960 samples, 4.35%)</title><rect x="390.3" y="981" width="51.3" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="393.26" y="991.5" >`cc_g..</text>
</g>
<g >
<title>`GC_reclaim_clear (148 samples, 0.67%)</title><rect x="424.7" y="917" width="7.9" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="427.73" y="927.5" ></text>
</g>
<g >
<title>0x11a4fe6e7 (7 samples, 0.03%)</title><rect x="170.5" y="1029" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="173.55" y="1039.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (3 samples, 0.01%)</title><rect x="462.8" y="581" width="0.1" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="465.78" y="591.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="456.8" y="597" width="0.1" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="459.80" y="607.5" ></text>
</g>
<g >
<title>`FIND-IN-MAPPING^CLEAVIR-PARTIAL-INLINING^((HASH-TABLE T))^METHO (2 samples, 0.01%)</title><rect x="462.0" y="565" width="0.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="465.03" y="575.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (56 samples, 0.25%)</title><rect x="135.5" y="661" width="3.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="138.54" y="671.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (5 samples, 0.02%)</title><rect x="465.2" y="565" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="468.24" y="575.5" ></text>
</g>
<g >
<title>0x11a5e3e23 (2 samples, 0.01%)</title><rect x="340.8" y="981" width="0.1" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="343.82" y="991.5" ></text>
</g>
<g >
<title>0x11abcf0a8 (3 samples, 0.01%)</title><rect x="266.9" y="997" width="0.1" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="269.85" y="1007.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (4 samples, 0.02%)</title><rect x="142.0" y="597" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="145.01" y="607.5" ></text>
</g>
<g >
<title>0x11e891a8c (3 samples, 0.01%)</title><rect x="464.1" y="645" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="467.12" y="655.5" ></text>
</g>
<g >
<title>0x11e84615a (2 samples, 0.01%)</title><rect x="462.0" y="581" width="0.1" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="465.03" y="591.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="437" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="149.44" y="447.5" ></text>
</g>
<g >
<title>`COPY-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T))^MET (2,718 samples, 12.31%)</title><rect x="10.4" y="933" width="145.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="13.43" y="943.5" >`COPY-INSTRUCTION^..</text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (5 samples, 0.02%)</title><rect x="117.7" y="661" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="120.69" y="671.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.01%)</title><rect x="132.0" y="613" width="0.1" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="134.96" y="623.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="454.6" y="357" width="0.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="457.55" y="367.5" ></text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (2 samples, 0.01%)</title><rect x="146.0" y="693" width="0.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="148.96" y="703.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (4 samples, 0.02%)</title><rect x="165.4" y="1013" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="168.36" y="1023.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="130.1" y="629" width="0.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="133.09" y="639.5" ></text>
</g>
<g >
<title>`cc_enclose (3 samples, 0.01%)</title><rect x="169.2" y="1093" width="0.1" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="172.16" y="1103.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (27 samples, 0.12%)</title><rect x="130.7" y="677" width="1.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="133.68" y="687.5" ></text>
</g>
<g >
<title>0x11abd7000 (5 samples, 0.02%)</title><rect x="272.9" y="997" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="275.95" y="1007.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="243.8" y="933" width="0.1" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="246.82" y="943.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (2 samples, 0.01%)</title><rect x="475.9" y="805" width="0.1" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="478.88" y="815.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (8 samples, 0.04%)</title><rect x="345.6" y="949" width="0.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="348.58" y="959.5" ></text>
</g>
<g >
<title>0x11a3941e0 (2 samples, 0.01%)</title><rect x="199.6" y="981" width="0.1" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="202.57" y="991.5" ></text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (3 samples, 0.01%)</title><rect x="11.8" y="773" width="0.1" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="14.76" y="783.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (147 samples, 0.67%)</title><rect x="478.7" y="677" width="7.9" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="481.71" y="687.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (3 samples, 0.01%)</title><rect x="11.8" y="741" width="0.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="14.76" y="751.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (5 samples, 0.02%)</title><rect x="244.8" y="821" width="0.3" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="247.83" y="831.5" ></text>
</g>
<g >
<title>`DISCERN-TRAPPERS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (1,530 samples, 6.93%)</title><rect x="171.5" y="1093" width="81.8" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="174.51" y="1103.5" >`DISCERN-..</text>
</g>
<g >
<title>`wrapped_cl__append_VaList_sp (2 samples, 0.01%)</title><rect x="121.5" y="645" width="0.1" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="124.54" y="655.5" ></text>
</g>
<g >
<title>`TRANSLATE-INPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="142.9" y="741" width="0.1" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="145.86" y="751.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (5 samples, 0.02%)</title><rect x="130.1" y="661" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="133.09" y="671.5" ></text>
</g>
<g >
<title>`GC_find_header (2 samples, 0.01%)</title><rect x="95.7" y="277" width="0.1" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="98.72" y="287.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (2 samples, 0.01%)</title><rect x="155.6" y="901" width="0.1" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="158.58" y="911.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.01%)</title><rect x="450.2" y="1013" width="0.2" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="453.22" y="1023.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (2 samples, 0.01%)</title><rect x="111.1" y="469" width="0.1" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="114.12" y="479.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION^CLEAVIR-PARTIAL-INLINING^FN^^ (2,657 samples, 12.03%)</title><rect x="10.9" y="901" width="142.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="13.86" y="911.5" >`COPY-FUNCTION^CLE..</text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (5 samples, 0.02%)</title><rect x="129.8" y="677" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="132.77" y="687.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (9 samples, 0.04%)</title><rect x="148.9" y="661" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="151.90" y="671.5" ></text>
</g>
<g >
<title>`REPLACE-DATUM^CLEAVIR-IR^FN^^ (24 samples, 0.11%)</title><rect x="167.9" y="1093" width="1.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="170.87" y="1103.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (121 samples, 0.55%)</title><rect x="456.5" y="677" width="6.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="459.53" y="687.5" ></text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (2 samples, 0.01%)</title><rect x="462.5" y="549" width="0.1" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="465.46" y="559.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1605" width="494.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (7 samples, 0.03%)</title><rect x="165.7" y="1029" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="168.68" y="1039.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="474.6" y="805" width="0.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="477.65" y="815.5" ></text>
</g>
<g >
<title>`cc_enclose (6 samples, 0.03%)</title><rect x="152.9" y="885" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="155.86" y="895.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (27 samples, 0.12%)</title><rect x="274.7" y="981" width="1.4" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="277.66" y="991.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="805" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="457.50" y="815.5" ></text>
</g>
<g >
<title>`NTHCDR^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="190.6" y="997" width="0.1" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="193.64" y="1007.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1829" width="494.0" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="13.00" y="1839.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`ADD-TO-MAPPING^CLEAVIR-PARTIAL-INLINING^((HASH-TABLE T T))^METH (2 samples, 0.01%)</title><rect x="151.0" y="741" width="0.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="153.99" y="751.5" ></text>
</g>
<g >
<title>`wrapped_cl__gethash_T_spHashTableBase_spT_sp (2 samples, 0.01%)</title><rect x="252.2" y="1013" width="0.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="255.16" y="1023.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (8 samples, 0.04%)</title><rect x="195.2" y="869" width="0.5" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="198.24" y="879.5" ></text>
</g>
<g >
<title>`ENTER-INSTRUCTION^CLEAVIR-HIR-TRANSFORMATIONS^((INTERIOR-NODE)) (2 samples, 0.01%)</title><rect x="277.1" y="981" width="0.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="280.06" y="991.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.01%)</title><rect x="124.1" y="549" width="0.1" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="127.05" y="559.5" ></text>
</g>
<g >
<title>`DO-LITERAL-TABLE^LITERAL^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="1813" width="494.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="13.00" y="1823.5" >`DO-LITERAL-TABLE^LITERAL^FN^^</text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.01%)</title><rect x="143.9" y="597" width="0.1" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="146.93" y="607.5" ></text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="114.3" y="645" width="0.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="117.27" y="655.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="454.6" y="341" width="0.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="457.55" y="351.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T (2,721 samples, 12.32%)</title><rect x="10.4" y="997" width="145.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="13.37" y="1007.5" >`INLINE-ONE-INSTRU..</text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (15 samples, 0.07%)</title><rect x="136.8" y="597" width="0.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="139.82" y="607.5" ></text>
</g>
<g >
<title>`GC_add_to_black_list_stack (6 samples, 0.03%)</title><rect x="983.8" y="4117" width="0.3" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="986.76" y="4127.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (2 samples, 0.01%)</title><rect x="246.1" y="901" width="0.1" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="249.06" y="911.5" ></text>
</g>
<g >
<title>`INLINE-ONE-INSTRUCTION^CLEAVIR-PARTIAL-INLINING^((:AROUND) (T T (917 samples, 4.15%)</title><rect x="454.9" y="981" width="49.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="457.93" y="991.5" >`INL..</text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (4 samples, 0.02%)</title><rect x="469.4" y="549" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="472.41" y="559.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2517" width="494.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="13.00" y="2527.5" >`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`saveToMultipleValue0 (4 samples, 0.02%)</title><rect x="346.1" y="981" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="349.11" y="991.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="2981" width="494.0" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="13.00" y="2991.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (2 samples, 0.01%)</title><rect x="455.8" y="693" width="0.1" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="458.83" y="703.5" ></text>
</g>
<g >
<title>`core::cl__append(gctools::smart_ptr&lt;core::Vaslist&gt;) (2 samples, 0.01%)</title><rect x="464.3" y="613" width="0.1" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="467.28" y="623.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2533" width="494.0" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="13.00" y="2543.5" >`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.02%)</title><rect x="117.7" y="629" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="120.74" y="639.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (3 samples, 0.01%)</title><rect x="475.8" y="821" width="0.2" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="478.82" y="831.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="145.8" y="693" width="0.1" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="148.80" y="703.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1669" width="494.0" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="13.00" y="1679.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (5 samples, 0.02%)</title><rect x="457.5" y="565" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="460.49" y="575.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (8 samples, 0.04%)</title><rect x="457.4" y="613" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="460.38" y="623.5" ></text>
</g>
<g >
<title>`COMPILE-TO-MODULE^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="454.6" y="485" width="0.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="457.55" y="495.5" ></text>
</g>
<g >
<title>`NSUBSTITUTE^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="160.1" y="1077" width="0.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="163.07" y="1087.5" ></text>
</g>
<g >
<title>0x11e621b89 (14 samples, 0.06%)</title><rect x="136.9" y="581" width="0.7" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="139.88" y="591.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (2 samples, 0.01%)</title><rect x="205.1" y="981" width="0.1" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="208.07" y="991.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (27 samples, 0.12%)</title><rect x="339.1" y="965" width="1.4" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="342.06" y="975.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (32 samples, 0.14%)</title><rect x="143.7" y="773" width="1.7" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="146.66" y="783.5" ></text>
</g>
<g >
<title>0x11e5500e1 (3 samples, 0.01%)</title><rect x="120.6" y="645" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="123.63" y="655.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="821" width="0.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="457.50" y="831.5" ></text>
</g>
<g >
<title>`GC_freehblk (2 samples, 0.01%)</title><rect x="477.9" y="709" width="0.1" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="480.91" y="719.5" ></text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:AFTER) (T T))^SETFMETHOD^^ (2 samples, 0.01%)</title><rect x="14.1" y="645" width="0.1" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="17.06" y="655.5" ></text>
</g>
<g >
<title>`COMPILE-FILE-SERIAL^COMPILER^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="2709" width="494.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="13.00" y="2719.5" >`COMPILE-FILE-SERIAL^COMPILER^FN^^</text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (2 samples, 0.01%)</title><rect x="132.0" y="629" width="0.1" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="134.96" y="639.5" ></text>
</g>
<g >
<title>`GC_unmap_old (4 samples, 0.02%)</title><rect x="478.5" y="741" width="0.2" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="481.49" y="751.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (9 samples, 0.04%)</title><rect x="465.5" y="565" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="468.51" y="575.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (2 samples, 0.01%)</title><rect x="215.9" y="949" width="0.1" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="218.92" y="959.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (3 samples, 0.01%)</title><rect x="126.9" y="581" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="129.94" y="591.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (1,543 samples, 6.99%)</title><rect x="27.9" y="405" width="82.5" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="30.90" y="415.5" >`GC_stopp..</text>
</g>
<g >
<title>`tlv_get_addr (5 samples, 0.02%)</title><rect x="386.8" y="965" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="389.78" y="975.5" ></text>
</g>
<g >
<title>`UPDATE-DESTINIES-MAP^CLEAVIR-PARTIAL-INLINING^FN^^ (28 samples, 0.13%)</title><rect x="453.0" y="1109" width="1.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="456.00" y="1119.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (226 samples, 1.02%)</title><rect x="456.0" y="709" width="12.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="458.99" y="719.5" ></text>
</g>
<g >
<title>0x11a394071 (7 samples, 0.03%)</title><rect x="186.7" y="1013" width="0.4" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="189.69" y="1023.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (2 samples, 0.01%)</title><rect x="120.8" y="533" width="0.1" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="123.79" y="543.5" ></text>
</g>
<g >
<title>0x11af4234c (2 samples, 0.01%)</title><rect x="455.5" y="725" width="0.1" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="458.46" y="735.5" ></text>
</g>
<g >
<title>0x11e621b89 (4 samples, 0.02%)</title><rect x="152.0" y="709" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="155.00" y="719.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.02%)</title><rect x="152.0" y="725" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="155.00" y="735.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (15 samples, 0.07%)</title><rect x="244.4" y="885" width="0.8" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="247.41" y="895.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (21 samples, 0.10%)</title><rect x="130.9" y="645" width="1.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="133.94" y="655.5" ></text>
</g>
<g >
<title>0x11af4234c (41 samples, 0.19%)</title><rect x="464.4" y="629" width="2.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="467.38" y="639.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (6 samples, 0.03%)</title><rect x="437.0" y="965" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="439.97" y="975.5" ></text>
</g>
<g >
<title>`GC_find_header (4 samples, 0.02%)</title><rect x="110.1" y="357" width="0.2" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="113.10" y="367.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (3 samples, 0.01%)</title><rect x="246.0" y="917" width="0.2" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="249.01" y="927.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (16 samples, 0.07%)</title><rect x="244.4" y="933" width="0.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="247.35" y="943.5" ></text>
</g>
<g >
<title>0x11af2e0da (2 samples, 0.01%)</title><rect x="138.2" y="629" width="0.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="141.21" y="639.5" ></text>
</g>
<g >
<title>0x11d70640f (9,244 samples, 41.87%)</title><rect x="10.0" y="2805" width="494.0" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="13.00" y="2815.5" >0x11d70640f</text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (3 samples, 0.01%)</title><rect x="472.5" y="693" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="475.51" y="703.5" ></text>
</g>
<g >
<title>0x11abcf03a (2 samples, 0.01%)</title><rect x="265.4" y="997" width="0.1" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="268.36" y="1007.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2677" width="494.0" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="13.00" y="2687.5" >`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.01%)</title><rect x="131.1" y="581" width="0.1" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="134.11" y="591.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (9 samples, 0.04%)</title><rect x="458.0" y="581" width="0.5" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="461.02" y="591.5" ></text>
</g>
<g >
<title>0x11a5b60a4 (2 samples, 0.01%)</title><rect x="176.1" y="1045" width="0.1" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="179.05" y="1055.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^107^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="965" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="457.50" y="975.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="1269" width="494.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="13.00" y="1279.5" >`TRANSLATE-AST^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.01%)</title><rect x="462.4" y="549" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="465.35" y="559.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.01%)</title><rect x="467.7" y="581" width="0.1" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="470.70" y="591.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="120.4" y="677" width="0.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="123.42" y="687.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (25 samples, 0.11%)</title><rect x="16.5" y="613" width="1.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="19.47" y="623.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (12 samples, 0.05%)</title><rect x="472.0" y="709" width="0.7" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="475.03" y="719.5" ></text>
</g>
<g >
<title>`INSERT-INSTRUCTION-BEFORE^CLEAVIR-IR^FN^^ (6 samples, 0.03%)</title><rect x="169.7" y="1061" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="172.69" y="1071.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.01%)</title><rect x="159.8" y="1013" width="0.1" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="162.75" y="1023.5" ></text>
</g>
<g >
<title>`thread_start (12,835 samples, 58.13%)</title><rect x="504.0" y="4245" width="686.0" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="507.04" y="4255.5" >`thread_start</text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (2 samples, 0.01%)</title><rect x="152.6" y="837" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="155.64" y="847.5" ></text>
</g>
<g >
<title>`INTERPOLATE-FUNCTION^CLEAVIR-PARTIAL-INLINING^FN^^ (289 samples, 1.31%)</title><rect x="156.0" y="1109" width="15.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="159.01" y="1119.5" ></text>
</g>
<g >
<title>0x11a3941d4 (2 samples, 0.01%)</title><rect x="212.0" y="965" width="0.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="215.02" y="975.5" ></text>
</g>
<g >
<title>`DISCONNECT-PREDECESSOR^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.01%)</title><rect x="466.7" y="661" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="469.74" y="671.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (25 samples, 0.11%)</title><rect x="14.9" y="629" width="1.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="17.86" y="639.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (3 samples, 0.01%)</title><rect x="166.1" y="1029" width="0.1" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="169.06" y="1039.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::sm (2 samples, 0.01%)</title><rect x="366.0" y="933" width="0.1" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="368.99" y="943.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (58 samples, 0.26%)</title><rect x="216.6" y="965" width="3.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="219.62" y="975.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="146.3" y="757" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="149.28" y="767.5" ></text>
</g>
<g >
<title>0x11a3940a8 (2 samples, 0.01%)</title><rect x="242.7" y="933" width="0.1" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="245.70" y="943.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="135.7" y="613" width="0.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="138.70" y="623.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (8 samples, 0.04%)</title><rect x="195.2" y="821" width="0.5" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="198.24" y="831.5" ></text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (5 samples, 0.02%)</title><rect x="13.2" y="677" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="16.21" y="687.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (2 samples, 0.01%)</title><rect x="462.5" y="581" width="0.1" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="465.46" y="591.5" ></text>
</g>
<g >
<title>0x11b01a147 (3 samples, 0.01%)</title><rect x="277.0" y="997" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="280.01" y="1007.5" ></text>
</g>
<g >
<title>0x11a5b6071 (25 samples, 0.11%)</title><rect x="212.9" y="965" width="1.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="215.88" y="975.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (13 samples, 0.06%)</title><rect x="420.3" y="949" width="0.7" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="423.29" y="959.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (5 samples, 0.02%)</title><rect x="143.9" y="629" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="146.88" y="639.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.01%)</title><rect x="124.1" y="533" width="0.1" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="127.05" y="543.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE^COMPILER^FN^^ (6 samples, 0.03%)</title><rect x="146.4" y="693" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="149.44" y="703.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="141.4" y="597" width="0.1" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="144.42" y="607.5" ></text>
</g>
<g >
<title>`core::cl__append(gctools::smart_ptr&lt;core::Vaslist&gt;) (6 samples, 0.03%)</title><rect x="282.2" y="981" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="285.19" y="991.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (2 samples, 0.01%)</title><rect x="124.2" y="565" width="0.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="127.16" y="575.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (7 samples, 0.03%)</title><rect x="467.5" y="661" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="470.54" y="671.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.01%)</title><rect x="17.9" y="533" width="0.1" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="20.91" y="543.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1957" width="494.0" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (3 samples, 0.01%)</title><rect x="130.2" y="565" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="133.20" y="575.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (3 samples, 0.01%)</title><rect x="243.7" y="917" width="0.1" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="246.66" y="927.5" ></text>
</g>
<g >
<title>0x11af3027d (2 samples, 0.01%)</title><rect x="111.1" y="485" width="0.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="114.12" y="495.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (46 samples, 0.21%)</title><rect x="458.9" y="629" width="2.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="461.93" y="639.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.01%)</title><rect x="151.0" y="709" width="0.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="153.99" y="719.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (18 samples, 0.08%)</title><rect x="166.5" y="1061" width="1.0" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="169.54" y="1071.5" ></text>
</g>
<g >
<title>0x11a3940a8 (3 samples, 0.01%)</title><rect x="245.7" y="917" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="248.74" y="927.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (11 samples, 0.05%)</title><rect x="457.9" y="597" width="0.6" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="460.92" y="607.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (6 samples, 0.03%)</title><rect x="11.4" y="805" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="14.39" y="815.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (2 samples, 0.01%)</title><rect x="149.9" y="709" width="0.1" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="152.86" y="719.5" ></text>
</g>
<g >
<title>`tlv_get_addr (4 samples, 0.02%)</title><rect x="250.2" y="965" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="253.18" y="975.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (2 samples, 0.01%)</title><rect x="128.5" y="565" width="0.1" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="131.54" y="575.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (2 samples, 0.01%)</title><rect x="115.5" y="501" width="0.1" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="118.50" y="511.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (3 samples, 0.01%)</title><rect x="141.4" y="629" width="0.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="144.37" y="639.5" ></text>
</g>
<g >
<title>0x11e8918c9 (3 samples, 0.01%)</title><rect x="459.0" y="613" width="0.1" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="461.99" y="623.5" ></text>
</g>
<g >
<title>`cc_enclose (6 samples, 0.03%)</title><rect x="475.7" y="869" width="0.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="478.66" y="879.5" ></text>
</g>
<g >
<title>`TRANSLATE-INPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.02%)</title><rect x="467.3" y="645" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="470.27" y="655.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (31 samples, 0.14%)</title><rect x="443.9" y="997" width="1.7" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="446.92" y="1007.5" ></text>
</g>
<g >
<title>`GC_mark_from (1,168 samples, 5.29%)</title><rect x="46.1" y="325" width="62.4" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="49.08" y="335.5" >`GC_ma..</text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (70 samples, 0.32%)</title><rect x="220.8" y="901" width="3.8" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="223.84" y="911.5" ></text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (2 samples, 0.01%)</title><rect x="12.5" y="709" width="0.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="15.51" y="719.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="161.2" y="1029" width="0.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="164.19" y="1039.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^193^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1861" width="494.0" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="13.00" y="1871.5" >`debuginfo.lsp-debuginfo41^193^TOP-COMPILE-FILE</text>
</g>
<g >
<title>0x11af4234c (14 samples, 0.06%)</title><rect x="15.2" y="549" width="0.7" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="18.18" y="559.5" ></text>
</g>
<g >
<title>0x11b2d8ef3 (9,244 samples, 41.87%)</title><rect x="10.0" y="3173" width="494.0" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="13.00" y="3183.5" >0x11b2d8ef3</text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (5 samples, 0.02%)</title><rect x="125.0" y="549" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="128.01" y="559.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (2,251 samples, 10.20%)</title><rect x="12.6" y="725" width="120.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="15.62" y="735.5" >`COPY-FUNCTION..</text>
</g>
<g >
<title>`GC_malloc_kind_global (15 samples, 0.07%)</title><rect x="239.1" y="837" width="0.8" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="242.12" y="847.5" ></text>
</g>
<g >
<title>0x11ab7fe4a (5 samples, 0.02%)</title><rect x="457.1" y="645" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="460.06" y="655.5" ></text>
</g>
<g >
<title>0x11a5e3d39 (2 samples, 0.01%)</title><rect x="338.1" y="981" width="0.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="341.15" y="991.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (9 samples, 0.04%)</title><rect x="458.0" y="549" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="461.02" y="559.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1493" width="494.0" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="13.00" y="1503.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`NSUBSTITUTE^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="168.7" y="1029" width="0.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="171.68" y="1039.5" ></text>
</g>
<g >
<title>`tlv_get_addr (80 samples, 0.36%)</title><rect x="437.3" y="965" width="4.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="440.29" y="975.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (8 samples, 0.04%)</title><rect x="13.5" y="677" width="0.4" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="16.47" y="687.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (368 samples, 1.67%)</title><rect x="455.1" y="821" width="19.7" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="458.09" y="831.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (363 samples, 1.64%)</title><rect x="76.5" y="309" width="19.4" height="15.0" fill="rgb(226,87,87)" rx="2" ry="2" />
<text  x="79.48" y="319.5" ></text>
</g>
<g >
<title>`SEQUENCE-START-END^CORE^FN^^ (2 samples, 0.01%)</title><rect x="466.8" y="613" width="0.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="469.79" y="623.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2629" width="494.0" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="13.00" y="2639.5" >`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.01%)</title><rect x="467.7" y="597" width="0.1" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="470.70" y="607.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (2 samples, 0.01%)</title><rect x="444.5" y="901" width="0.1" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="447.50" y="911.5" ></text>
</g>
<g >
<title>`GC_alloc_large (2 samples, 0.01%)</title><rect x="165.8" y="885" width="0.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="168.84" y="895.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (4 samples, 0.02%)</title><rect x="17.4" y="549" width="0.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="20.38" y="559.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (4 samples, 0.02%)</title><rect x="124.8" y="501" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="127.80" y="511.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE*^COMPILER^FN^^ (6 samples, 0.03%)</title><rect x="146.4" y="293" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="149.44" y="303.5" ></text>
</g>
<g >
<title>0x11e697af9 (71 samples, 0.32%)</title><rect x="123.5" y="597" width="3.8" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="126.46" y="607.5" ></text>
</g>
<g >
<title>0x11d705230 (9,244 samples, 41.87%)</title><rect x="10.0" y="2933" width="494.0" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="13.00" y="2943.5" >0x11d705230</text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (5 samples, 0.02%)</title><rect x="165.3" y="1029" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="168.31" y="1039.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (4 samples, 0.02%)</title><rect x="124.8" y="517" width="0.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="127.80" y="527.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (57 samples, 0.26%)</title><rect x="135.5" y="693" width="3.0" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="138.49" y="703.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (3 samples, 0.01%)</title><rect x="16.5" y="517" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="19.52" y="527.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="125.1" y="533" width="0.1" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="128.07" y="543.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2229" width="494.0" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="13.00" y="2239.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>0x11b2d9c72 (9,244 samples, 41.87%)</title><rect x="10.0" y="3029" width="494.0" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="13.00" y="3039.5" >0x11b2d9c72</text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (3 samples, 0.01%)</title><rect x="464.7" y="517" width="0.1" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="467.65" y="527.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2389" width="494.0" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="13.00" y="2399.5" >`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (47 samples, 0.21%)</title><rect x="147.8" y="789" width="2.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="150.78" y="799.5" ></text>
</g>
<g >
<title>`cc_enclose (2 samples, 0.01%)</title><rect x="16.9" y="501" width="0.1" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="19.89" y="511.5" ></text>
</g>
<g >
<title>0x11abd7056 (2 samples, 0.01%)</title><rect x="273.8" y="997" width="0.1" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="276.80" y="1007.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (2 samples, 0.01%)</title><rect x="121.2" y="533" width="0.1" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="124.22" y="543.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (6 samples, 0.03%)</title><rect x="247.1" y="837" width="0.4" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="250.13" y="847.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.01%)</title><rect x="19.1" y="581" width="0.1" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="22.14" y="591.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (6 samples, 0.03%)</title><rect x="457.5" y="581" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="460.49" y="591.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (3 samples, 0.01%)</title><rect x="122.7" y="517" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="125.66" y="527.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="144.7" y="629" width="0.1" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="147.73" y="639.5" ></text>
</g>
<g >
<title>`wrapped_cl__make_hash_table_T_spFixnum_spNumber_spReal_spSymbol (6 samples, 0.03%)</title><rect x="164.4" y="1061" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="167.40" y="1071.5" ></text>
</g>
<g >
<title>`translate.lisp-translate451^815^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1381" width="494.0" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="13.00" y="1391.5" >`translate.lisp-translate451^815^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`ENDP^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="156.9" y="1045" width="0.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="159.87" y="1055.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf95^304^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="1061" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="457.50" y="1071.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.01%)</title><rect x="16.0" y="581" width="0.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="18.99" y="591.5" ></text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (11 samples, 0.05%)</title><rect x="159.4" y="1061" width="0.6" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="162.43" y="1071.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (5 samples, 0.02%)</title><rect x="111.3" y="485" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="114.33" y="495.5" ></text>
</g>
<g >
<title>`debuginfo.lsp-debuginfo41^193^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1877" width="494.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="13.00" y="1887.5" >`debuginfo.lsp-debuginfo41^193^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="453.4" y="1061" width="0.1" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="456.38" y="1071.5" ></text>
</g>
<g >
<title>`VASLIST-LENGTH^CORE^FN^^ (4 samples, 0.02%)</title><rect x="137.4" y="549" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="140.41" y="559.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="472.8" y="757" width="0.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="475.78" y="767.5" ></text>
</g>
<g >
<title>`EQL^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="114.9" y="613" width="0.1" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="117.86" y="623.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="464.2" y="581" width="0.1" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="467.17" y="591.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2469" width="494.0" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="13.00" y="2479.5" >`compile-file.lsp-compile-file52^33^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (2 samples, 0.01%)</title><rect x="146.7" y="101" width="0.1" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="149.66" y="111.5" ></text>
</g>
<g >
<title>`unw_init_local (5 samples, 0.02%)</title><rect x="445.1" y="901" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="448.09" y="911.5" ></text>
</g>
<g >
<title>`cc_enclose (3 samples, 0.01%)</title><rect x="11.8" y="757" width="0.1" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="14.76" y="767.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (1,946 samples, 8.81%)</title><rect x="14.0" y="677" width="104.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="16.95" y="687.5" >`copy-functi..</text>
</g>
<g >
<title>`cc_gatherVaRestArguments (52 samples, 0.24%)</title><rect x="279.4" y="981" width="2.8" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="282.41" y="991.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="13.5" y="613" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="16.53" y="623.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="136.7" y="565" width="0.1" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="139.66" y="575.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (4 samples, 0.02%)</title><rect x="234.3" y="949" width="0.2" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="237.31" y="959.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1,050 samples, 4.76%)</title><rect x="387.7" y="997" width="56.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="390.75" y="1007.5" >`LIST..</text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.01%)</title><rect x="390.1" y="981" width="0.2" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="393.10" y="991.5" ></text>
</g>
<g >
<title>`CLONE-INITARGS^CLEAVIR-IR^((APPEND) (INSTRUCTION))^METHOD^^ (3 samples, 0.01%)</title><rect x="147.6" y="757" width="0.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="150.57" y="767.5" ></text>
</g>
<g >
<title>`top.lsp-top130^522^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3717" width="494.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="13.00" y="3727.5" >`top.lsp-top130^522^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="146.4" y="245" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="149.44" y="255.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (53 samples, 0.24%)</title><rect x="216.9" y="949" width="2.8" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="219.88" y="959.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="138.4" y="629" width="0.1" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="141.43" y="639.5" ></text>
</g>
<g >
<title>0x11b1fc001 (2 samples, 0.01%)</title><rect x="277.4" y="997" width="0.1" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="280.44" y="1007.5" ></text>
</g>
<g >
<title>0x11af4440a (8 samples, 0.04%)</title><rect x="141.1" y="661" width="0.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="144.10" y="671.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="757" width="0.4" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="457.50" y="767.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (9 samples, 0.04%)</title><rect x="149.5" y="741" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="152.54" y="751.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (27 samples, 0.12%)</title><rect x="457.3" y="629" width="1.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="460.33" y="639.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="18.1" y="613" width="0.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="21.07" y="623.5" ></text>
</g>
<g >
<title>`full-inlining-pass.lisp-full-inlining-pass414^84^TOP-COMPILE-FI (9,244 samples, 41.87%)</title><rect x="10.0" y="1141" width="494.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="13.00" y="1151.5" >`full-inlining-pass.lisp-full-inlining-pass414^84^TOP-COMPILE-FI</text>
</g>
<g >
<title>0x11e697af9 (12 samples, 0.05%)</title><rect x="144.3" y="693" width="0.6" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="147.25" y="703.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="471.2" y="677" width="0.1" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="474.23" y="687.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (5 samples, 0.02%)</title><rect x="115.0" y="645" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="118.02" y="655.5" ></text>
</g>
<g >
<title>`core::cl__list(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="441.6" y="981" width="0.1" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="444.56" y="991.5" ></text>
</g>
<g >
<title>0x11e87f0e0 (3 samples, 0.01%)</title><rect x="162.0" y="1077" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="165.05" y="1087.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (15 samples, 0.07%)</title><rect x="473.4" y="741" width="0.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="476.42" y="751.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (16 samples, 0.07%)</title><rect x="16.5" y="549" width="0.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="19.52" y="559.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="455.5" y="709" width="0.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="458.46" y="719.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (10 samples, 0.05%)</title><rect x="202.6" y="901" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="205.61" y="911.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="139.1" y="709" width="0.1" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="142.07" y="719.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (2 samples, 0.01%)</title><rect x="165.8" y="853" width="0.2" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="168.84" y="863.5" ></text>
</g>
<g >
<title>0x11a394071 (26 samples, 0.12%)</title><rect x="229.9" y="949" width="1.4" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="232.92" y="959.5" ></text>
</g>
<g >
<title>0x11af4234c (22 samples, 0.10%)</title><rect x="16.5" y="581" width="1.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="19.52" y="591.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (2 samples, 0.01%)</title><rect x="115.2" y="581" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="118.18" y="591.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (4 samples, 0.02%)</title><rect x="146.6" y="229" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="149.55" y="239.5" ></text>
</g>
<g >
<title>`GC_finish_collection (37 samples, 0.17%)</title><rect x="476.7" y="757" width="2.0" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="479.73" y="767.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (4 samples, 0.02%)</title><rect x="246.3" y="885" width="0.2" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="249.33" y="895.5" ></text>
</g>
<g >
<title>`core::cl__make_hash_table(gctools::smart_ptr&lt;core::T_O&gt;, gctool (5 samples, 0.02%)</title><rect x="164.5" y="1045" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="167.45" y="1055.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (3 samples, 0.01%)</title><rect x="188.3" y="965" width="0.2" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="191.34" y="975.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (5 samples, 0.02%)</title><rect x="157.3" y="1045" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="160.35" y="1055.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (5 samples, 0.02%)</title><rect x="134.6" y="645" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="137.63" y="655.5" ></text>
</g>
<g >
<title>`DELETE^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="152.5" y="821" width="0.1" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="155.54" y="831.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (4 samples, 0.02%)</title><rect x="464.6" y="533" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="467.60" y="543.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (6 samples, 0.03%)</title><rect x="247.1" y="805" width="0.4" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="250.13" y="815.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (8 samples, 0.04%)</title><rect x="122.9" y="565" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="125.93" y="575.5" ></text>
</g>
<g >
<title>`ltvc_toplevel_funcall (9,244 samples, 41.87%)</title><rect x="10.0" y="4053" width="494.0" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="13.00" y="4063.5" >`ltvc_toplevel_funcall</text>
</g>
<g >
<title>`cc_gatherRestArguments (31 samples, 0.14%)</title><rect x="445.6" y="997" width="1.6" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="448.57" y="1007.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (7 samples, 0.03%)</title><rect x="423.0" y="901" width="0.4" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="426.02" y="911.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (3 samples, 0.01%)</title><rect x="128.1" y="581" width="0.2" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="131.11" y="591.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.01%)</title><rect x="466.9" y="629" width="0.1" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="469.90" y="639.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="474.5" y="789" width="0.1" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="477.54" y="799.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (14 samples, 0.06%)</title><rect x="162.6" y="1029" width="0.8" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="165.64" y="1039.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="144.7" y="661" width="0.1" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="147.73" y="671.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="12.2" y="677" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="15.24" y="687.5" ></text>
</g>
<g >
<title>`SUBSTITUTE-INPUT^CLEAVIR-IR^((T T T))^METHOD^^ (4 samples, 0.02%)</title><rect x="168.9" y="1061" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="171.94" y="1071.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (3 samples, 0.01%)</title><rect x="130.2" y="549" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="133.20" y="559.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (3 samples, 0.01%)</title><rect x="130.2" y="581" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="133.20" y="591.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.01%)</title><rect x="139.4" y="613" width="0.1" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="142.44" y="623.5" ></text>
</g>
<g >
<title>0x11d7053f7 (9,244 samples, 41.87%)</title><rect x="10.0" y="2997" width="494.0" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="13.00" y="3007.5" >0x11d7053f7</text>
</g>
<g >
<title>`DELETE^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="474.3" y="773" width="0.1" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="477.27" y="783.5" ></text>
</g>
<g >
<title>`tlv_get_addr (12 samples, 0.05%)</title><rect x="344.3" y="933" width="0.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="347.35" y="943.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (9 samples, 0.04%)</title><rect x="162.9" y="1013" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="165.90" y="1023.5" ></text>
</g>
<g >
<title>0x11e8420e1 (2 samples, 0.01%)</title><rect x="120.8" y="645" width="0.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="123.79" y="655.5" ></text>
</g>
<g >
<title>0x11a51e001 (2 samples, 0.01%)</title><rect x="161.0" y="1077" width="0.1" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="163.98" y="1087.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (5 samples, 0.02%)</title><rect x="243.6" y="933" width="0.2" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="246.55" y="943.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (12 samples, 0.05%)</title><rect x="137.8" y="645" width="0.6" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="140.79" y="655.5" ></text>
</g>
<g >
<title>0x11d7053f7 (9,244 samples, 41.87%)</title><rect x="10.0" y="2837" width="494.0" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="13.00" y="2847.5" >0x11d7053f7</text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (3 samples, 0.01%)</title><rect x="136.6" y="581" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="139.61" y="591.5" ></text>
</g>
<g >
<title>`GC_alloc_large (4 samples, 0.02%)</title><rect x="184.1" y="885" width="0.2" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="187.12" y="895.5" ></text>
</g>
<g >
<title>`STD-CLASS-ACCESSORS.WRITER.LAMBDA^CLOS^FN^^ (3 samples, 0.01%)</title><rect x="158.8" y="1061" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="161.84" y="1071.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (6 samples, 0.03%)</title><rect x="170.6" y="1013" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="173.60" y="1023.5" ></text>
</g>
<g >
<title>`top.lsp-top130^522^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3669" width="494.0" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="13.00" y="3679.5" >`top.lsp-top130^522^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="454.6" y="453" width="0.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="457.55" y="463.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (5 samples, 0.02%)</title><rect x="475.7" y="853" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="478.71" y="863.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (11 samples, 0.05%)</title><rect x="139.4" y="677" width="0.6" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="142.44" y="687.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (5 samples, 0.02%)</title><rect x="462.7" y="645" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="465.67" y="655.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf95^304^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="741" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="149.44" y="751.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (11 samples, 0.05%)</title><rect x="188.7" y="997" width="0.6" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="191.66" y="1007.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (6 samples, 0.03%)</title><rect x="141.7" y="645" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="144.69" y="655.5" ></text>
</g>
<g >
<title>`IDENTITY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="184.9" y="1029" width="0.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="187.87" y="1039.5" ></text>
</g>
<g >
<title>`MAKE-HASH-TABLE^COMMON-LISP^FN^^ (6 samples, 0.03%)</title><rect x="164.4" y="1077" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="167.40" y="1087.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="152.3" y="773" width="0.1" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="155.32" y="783.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.01%)</title><rect x="120.1" y="629" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="123.15" y="639.5" ></text>
</g>
<g >
<title>`cc_enclose (3 samples, 0.01%)</title><rect x="13.3" y="661" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="16.31" y="671.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.01%)</title><rect x="467.7" y="565" width="0.1" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="470.70" y="575.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="475.1" y="709" width="0.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="478.13" y="719.5" ></text>
</g>
<g >
<title>`core::cl__make_hash_table(gctools::smart_ptr&lt;core::T_O&gt;, gctool (5 samples, 0.02%)</title><rect x="171.8" y="1045" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="174.78" y="1055.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (6 samples, 0.03%)</title><rect x="234.5" y="949" width="0.3" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="237.52" y="959.5" ></text>
</g>
<g >
<title>`CLONE-INITARGS^CLEAVIR-IR^((APPEND) (INSTRUCTION))^METHOD^^ (2 samples, 0.01%)</title><rect x="120.8" y="629" width="0.1" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="123.79" y="639.5" ></text>
</g>
<g >
<title>`cc_enclose (2 samples, 0.01%)</title><rect x="14.7" y="597" width="0.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="17.70" y="607.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="454.6" y="325" width="0.1" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="457.55" y="335.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.01%)</title><rect x="472.4" y="613" width="0.1" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="475.40" y="623.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.01%)</title><rect x="132.5" y="645" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="135.55" y="655.5" ></text>
</g>
<g >
<title>0x11ab7fe4a (4 samples, 0.02%)</title><rect x="455.1" y="805" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="458.14" y="815.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (10 samples, 0.05%)</title><rect x="412.1" y="965" width="0.5" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="415.06" y="975.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::sm (4 samples, 0.02%)</title><rect x="224.6" y="901" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="227.58" y="911.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (5 samples, 0.02%)</title><rect x="17.1" y="517" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="20.05" y="527.5" ></text>
</g>
<g >
<title>0x11a394071 (3 samples, 0.01%)</title><rect x="242.5" y="933" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="245.54" y="943.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (4 samples, 0.02%)</title><rect x="469.4" y="597" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="472.41" y="607.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (224 samples, 1.01%)</title><rect x="421.0" y="949" width="12.0" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="423.99" y="959.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (2 samples, 0.01%)</title><rect x="457.6" y="469" width="0.1" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="460.60" y="479.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (21 samples, 0.10%)</title><rect x="189.4" y="949" width="1.1" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="192.41" y="959.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (3 samples, 0.01%)</title><rect x="117.5" y="629" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="120.53" y="639.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (1,854 samples, 8.40%)</title><rect x="18.3" y="661" width="99.1" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="21.34" y="671.5" >`MAP-LOCAL-..</text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (28 samples, 0.13%)</title><rect x="125.4" y="565" width="1.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="128.39" y="575.5" ></text>
</g>
<g >
<title>`GC_notify_all_builder (4 samples, 0.02%)</title><rect x="424.0" y="933" width="0.2" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="427.03" y="943.5" ></text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (4 samples, 0.02%)</title><rect x="464.6" y="549" width="0.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="467.60" y="559.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (8 samples, 0.04%)</title><rect x="195.2" y="885" width="0.5" height="15.0" fill="rgb(215,73,73)" rx="2" ry="2" />
<text  x="198.24" y="895.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2181" width="494.0" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="13.00" y="2191.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (37 samples, 0.17%)</title><rect x="16.2" y="629" width="2.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="19.20" y="639.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (44 samples, 0.20%)</title><rect x="237.6" y="885" width="2.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="240.57" y="895.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (14 samples, 0.06%)</title><rect x="271.6" y="965" width="0.8" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="274.61" y="975.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (4 samples, 0.02%)</title><rect x="473.5" y="693" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="476.52" y="703.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (9,244 samples, 41.87%)</title><rect x="10.0" y="3589" width="494.0" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="13.00" y="3599.5" >`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo</text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (131 samples, 0.59%)</title><rect x="240.9" y="949" width="7.0" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="243.93" y="959.5" ></text>
</g>
<g >
<title>`GC_mark_local (462 samples, 2.09%)</title><rect x="478.7" y="709" width="24.7" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="481.71" y="719.5" >`..</text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (27 samples, 0.12%)</title><rect x="151.4" y="853" width="1.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="154.41" y="863.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (3 samples, 0.01%)</title><rect x="159.8" y="997" width="0.1" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="162.75" y="1007.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (34 samples, 0.15%)</title><rect x="183.1" y="981" width="1.8" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="186.05" y="991.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="384.2" y="965" width="0.1" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="387.16" y="975.5" ></text>
</g>
<g >
<title>`wrapped_cl__nthcdr_Integer_spList_sp (4 samples, 0.02%)</title><rect x="225.6" y="933" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="228.59" y="943.5" ></text>
</g>
<g >
<title>`cc_makeCell (3 samples, 0.01%)</title><rect x="452.8" y="1077" width="0.1" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="455.79" y="1087.5" ></text>
</g>
<g >
<title>0x11af4234c (36 samples, 0.16%)</title><rect x="459.4" y="597" width="1.9" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="462.36" y="607.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="155.7" y="949" width="0.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="158.69" y="959.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="461.3" y="613" width="0.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="464.28" y="623.5" ></text>
</g>
<g >
<title>`COMPILE^COMMON-LISP^FN^^ (7 samples, 0.03%)</title><rect x="454.5" y="933" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="457.50" y="943.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1,144 samples, 5.18%)</title><rect x="190.7" y="1013" width="61.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="193.75" y="1023.5" >`MAPCA..</text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2197" width="494.0" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="13.00" y="2207.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (6 samples, 0.03%)</title><rect x="150.9" y="789" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="153.93" y="799.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (2 samples, 0.01%)</title><rect x="167.7" y="1077" width="0.1" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="170.66" y="1087.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1797" width="494.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="13.00" y="1807.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`wrapped_cl__append_VaList_sp (2 samples, 0.01%)</title><rect x="20.0" y="613" width="0.1" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="22.99" y="623.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (4 samples, 0.02%)</title><rect x="144.5" y="645" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="147.52" y="655.5" ></text>
</g>
<g >
<title>`top.lsp-top130^378^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3909" width="494.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="13.00" y="3919.5" >`top.lsp-top130^378^TOP-COMPILE-FILE</text>
</g>
<g >
<title>0x11a3940a8 (6 samples, 0.03%)</title><rect x="181.1" y="1029" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="184.13" y="1039.5" ></text>
</g>
<g >
<title>`MAKE-HASH-TABLE^COMMON-LISP^FN^^ (6 samples, 0.03%)</title><rect x="171.7" y="1077" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="174.72" y="1087.5" ></text>
</g>
<g >
<title>`cc_enclose (18 samples, 0.08%)</title><rect x="157.6" y="1045" width="1.0" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="160.61" y="1055.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.02%)</title><rect x="470.3" y="661" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="473.32" y="671.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="454.6" y="565" width="0.1" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="457.55" y="575.5" ></text>
</g>
<g >
<title>0x11e5500e1 (2 samples, 0.01%)</title><rect x="147.5" y="773" width="0.1" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="150.46" y="783.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (20 samples, 0.09%)</title><rect x="110.7" y="501" width="1.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="113.74" y="511.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (3 samples, 0.01%)</title><rect x="138.9" y="677" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="141.91" y="687.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (11 samples, 0.05%)</title><rect x="122.3" y="549" width="0.6" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="125.34" y="559.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2,718 samples, 12.31%)</title><rect x="10.4" y="949" width="145.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="13.43" y="959.5" >`COMBINE-METHOD-FU..</text>
</g>
<g >
<title>`core::core__sequence_start_end(gctools::smart_ptr&lt;core::T_O&gt;, g (2 samples, 0.01%)</title><rect x="129.6" y="629" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="132.61" y="639.5" ></text>
</g>
<g >
<title>`core::Cons_O::length() const (2 samples, 0.01%)</title><rect x="466.8" y="581" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="469.79" y="591.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="146.4" y="229" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="149.44" y="239.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (20 samples, 0.09%)</title><rect x="151.5" y="837" width="1.0" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="154.47" y="847.5" ></text>
</g>
<g >
<title>`DO-MEMORY-RAMP^CORE^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="1349" width="494.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="13.00" y="1359.5" >`DO-MEMORY-RAMP^CORE^FN^^</text>
</g>
<g >
<title>`DISCONNECT-PREDECESSOR^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="145.4" y="773" width="0.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="148.37" y="783.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (3 samples, 0.01%)</title><rect x="130.2" y="517" width="0.2" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="133.20" y="527.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (6 samples, 0.03%)</title><rect x="131.5" y="565" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="134.48" y="575.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (5 samples, 0.02%)</title><rect x="244.8" y="805" width="0.3" height="15.0" fill="rgb(215,73,73)" rx="2" ry="2" />
<text  x="247.83" y="815.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="456.6" y="597" width="0.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="459.64" y="607.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (35 samples, 0.16%)</title><rect x="183.0" y="997" width="1.9" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="186.00" y="1007.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.01%)</title><rect x="145.9" y="741" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="148.91" y="751.5" ></text>
</g>
<g >
<title>0x11a5b60a8 (8 samples, 0.04%)</title><rect x="243.1" y="933" width="0.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="246.07" y="943.5" ></text>
</g>
<g >
<title>0x11e84615a (3 samples, 0.01%)</title><rect x="132.3" y="677" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="135.33" y="687.5" ></text>
</g>
<g >
<title>`top.lsp-top130^522^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3541" width="494.0" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="13.00" y="3551.5" >`top.lsp-top130^522^TOP-COMPILE-FILE</text>
</g>
<g >
<title>0x11abcf0ac (2 samples, 0.01%)</title><rect x="267.0" y="997" width="0.1" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="270.01" y="1007.5" ></text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (2 samples, 0.01%)</title><rect x="151.1" y="725" width="0.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="154.09" y="735.5" ></text>
</g>
<g >
<title>`compiler-conditions.lsp-compiler-conditions125^193^TOP-COMPILE- (7 samples, 0.03%)</title><rect x="454.5" y="645" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="457.50" y="655.5" ></text>
</g>
<g >
<title>0x11b1fc00a (2 samples, 0.01%)</title><rect x="340.9" y="981" width="0.1" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="343.93" y="991.5" ></text>
</g>
<g >
<title>0x11a5e3d47 (27 samples, 0.12%)</title><rect x="339.1" y="981" width="1.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="342.06" y="991.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (2 samples, 0.01%)</title><rect x="248.5" y="949" width="0.1" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="251.52" y="959.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="193.4" y="997" width="0.1" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="196.42" y="1007.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (10 samples, 0.05%)</title><rect x="159.5" y="1029" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="162.48" y="1039.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (4 samples, 0.02%)</title><rect x="459.4" y="501" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="462.41" y="511.5" ></text>
</g>
<g >
<title>`llvm::orc::IRTransformLayer&lt;llvm::orc::IRCompileLayer&lt;llvm::orc (2 samples, 0.01%)</title><rect x="146.4" y="133" width="0.2" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="149.44" y="143.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="837" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="457.50" y="847.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="149.9" y="693" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="152.86" y="703.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="454.6" y="373" width="0.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="457.55" y="383.5" ></text>
</g>
<g >
<title>`cc_enclose (4 samples, 0.02%)</title><rect x="136.6" y="597" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="139.56" y="607.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (4 samples, 0.02%)</title><rect x="447.8" y="997" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="450.82" y="1007.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (6 samples, 0.03%)</title><rect x="224.8" y="901" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="227.79" y="911.5" ></text>
</g>
<g >
<title>0x11a5b6071 (4 samples, 0.02%)</title><rect x="181.9" y="1029" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="184.93" y="1039.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (7 samples, 0.03%)</title><rect x="473.5" y="725" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="476.47" y="735.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="454.8" y="453" width="0.1" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="457.76" y="463.5" ></text>
</g>
<g >
<title>`NTHCDR^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="160.1" y="1061" width="0.1" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="163.07" y="1071.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (4 samples, 0.02%)</title><rect x="466.3" y="597" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="469.31" y="607.5" ></text>
</g>
<g >
<title>0x11e6e916c (9,244 samples, 41.87%)</title><rect x="10.0" y="3445" width="494.0" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="13.00" y="3455.5" >0x11e6e916c</text>
</g>
<g >
<title>`GC_header_cache_miss (3,630 samples, 16.44%)</title><rect x="504.1" y="4133" width="194.1" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="507.15" y="4143.5" >`GC_header_cache_miss</text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="789" width="0.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="457.50" y="799.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (19 samples, 0.09%)</title><rect x="238.9" y="869" width="1.0" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="241.90" y="879.5" ></text>
</g>
<g >
<title>0x11b2d851b (9,244 samples, 41.87%)</title><rect x="10.0" y="3205" width="494.0" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="13.00" y="3215.5" >0x11b2d851b</text>
</g>
<g >
<title>0x11e697af9 (3 samples, 0.01%)</title><rect x="12.7" y="629" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="15.73" y="639.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (4 samples, 0.02%)</title><rect x="17.1" y="469" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="20.05" y="479.5" ></text>
</g>
<g >
<title>`pthread_cond_broadcast (4 samples, 0.02%)</title><rect x="424.0" y="917" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="427.03" y="927.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (6 samples, 0.03%)</title><rect x="456.6" y="661" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="459.58" y="671.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.02%)</title><rect x="467.6" y="629" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="470.64" y="639.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (21 samples, 0.10%)</title><rect x="143.9" y="709" width="1.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="146.88" y="719.5" ></text>
</g>
<g >
<title>0x11ab7fe4a (4 samples, 0.02%)</title><rect x="14.6" y="629" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="17.65" y="639.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="21.0" y="501" width="0.1" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="24.01" y="511.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (3 samples, 0.01%)</title><rect x="455.6" y="725" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="458.62" y="735.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (16 samples, 0.07%)</title><rect x="246.7" y="869" width="0.9" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="249.71" y="879.5" ></text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (4 samples, 0.02%)</title><rect x="450.2" y="1061" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="453.22" y="1071.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (18 samples, 0.08%)</title><rect x="468.9" y="677" width="0.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="471.87" y="687.5" ></text>
</g>
<g >
<title>`gctools::initializeBoehm(int (*)(int, char**, bool&amp;, int&amp;, int&amp; (9,244 samples, 41.87%)</title><rect x="10.0" y="4181" width="494.0" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="13.00" y="4191.5" >`gctools::initializeBoehm(int (*)(int, char**, bool&amp;, int&amp;, int&amp;</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (917 samples, 4.15%)</title><rect x="454.9" y="997" width="49.0" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="457.93" y="1007.5" >`COM..</text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="456.8" y="581" width="0.1" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="459.80" y="591.5" ></text>
</g>
<g >
<title>0x11a5b6071 (6 samples, 0.03%)</title><rect x="233.0" y="949" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="236.02" y="959.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (3 samples, 0.01%)</title><rect x="457.6" y="517" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="460.60" y="527.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (2 samples, 0.01%)</title><rect x="16.5" y="469" width="0.1" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="19.52" y="479.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::reference_raw_(core::Symbol_O*, gcto (33 samples, 0.15%)</title><rect x="384.9" y="965" width="1.7" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="387.86" y="975.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1621" width="494.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (25 samples, 0.11%)</title><rect x="130.7" y="661" width="1.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="133.73" y="671.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (2 samples, 0.01%)</title><rect x="145.5" y="757" width="0.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="148.54" y="767.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="15.3" y="469" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="18.34" y="479.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (2 samples, 0.01%)</title><rect x="159.8" y="981" width="0.1" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="162.80" y="991.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (7 samples, 0.03%)</title><rect x="143.9" y="677" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="146.88" y="687.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (6 samples, 0.03%)</title><rect x="150.9" y="773" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="153.93" y="783.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (136 samples, 0.62%)</title><rect x="121.6" y="661" width="7.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="124.65" y="671.5" ></text>
</g>
<g >
<title>`full-inlining-pass.lisp-full-inlining-pass414^84^TOP-COMPILE-FI (9,242 samples, 41.86%)</title><rect x="10.1" y="1125" width="493.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="13.11" y="1135.5" >`full-inlining-pass.lisp-full-inlining-pass414^84^TOP-COMPILE-FI</text>
</g>
<g >
<title>`MAKE-NOP-INSTRUCTION^CLEAVIR-IR^FN^^ (10 samples, 0.05%)</title><rect x="170.9" y="1061" width="0.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="173.92" y="1071.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="462.0" y="597" width="0.1" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="465.03" y="607.5" ></text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (7 samples, 0.03%)</title><rect x="116.7" y="565" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="119.68" y="575.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (10 samples, 0.05%)</title><rect x="116.7" y="597" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="119.68" y="607.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.02%)</title><rect x="456.0" y="677" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="459.05" y="687.5" ></text>
</g>
<g >
<title>0x11af4234c (5 samples, 0.02%)</title><rect x="12.1" y="709" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="15.14" y="719.5" ></text>
</g>
<g >
<title>0x11e697af9 (3 samples, 0.01%)</title><rect x="456.0" y="613" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="459.05" y="623.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (3 samples, 0.01%)</title><rect x="138.9" y="709" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="141.91" y="719.5" ></text>
</g>
<g >
<title>`core::cl__append(gctools::smart_ptr&lt;core::Vaslist&gt;) (77 samples, 0.35%)</title><rect x="282.9" y="965" width="4.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="285.89" y="975.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (3,672 samples, 16.63%)</title><rect x="253.6" y="1029" width="196.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="256.60" y="1039.5" >`wrapped_cl__mapc_T_spLis..</text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.01%)</title><rect x="461.7" y="613" width="0.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="464.66" y="623.5" ></text>
</g>
<g >
<title>`__dynamic_cast (3 samples, 0.01%)</title><rect x="124.6" y="517" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="127.64" y="527.5" ></text>
</g>
<g >
<title>`TRANSLATE-INPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.01%)</title><rect x="130.4" y="677" width="0.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="133.36" y="687.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1,670 samples, 7.56%)</title><rect x="21.3" y="549" width="89.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="24.33" y="559.5" >`INITIALIZ..</text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (23 samples, 0.10%)</title><rect x="237.7" y="869" width="1.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="240.67" y="879.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (3 samples, 0.01%)</title><rect x="177.5" y="965" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="180.55" y="975.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (4 samples, 0.02%)</title><rect x="475.8" y="837" width="0.2" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="478.77" y="847.5" ></text>
</g>
<g >
<title>0x11af4234c (5 samples, 0.02%)</title><rect x="11.4" y="773" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="14.44" y="783.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (7 samples, 0.03%)</title><rect x="113.5" y="565" width="0.3" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text  x="116.47" y="575.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (3 samples, 0.01%)</title><rect x="455.4" y="757" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="458.41" y="767.5" ></text>
</g>
<g >
<title>`_pthread_start (12,835 samples, 58.13%)</title><rect x="504.0" y="4229" width="686.0" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="507.04" y="4239.5" >`_pthread_start</text>
</g>
<g >
<title>0x11b1fc1a2 (3 samples, 0.01%)</title><rect x="342.9" y="981" width="0.1" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="345.85" y="991.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1,647 samples, 7.46%)</title><rect x="22.4" y="485" width="88.0" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="25.40" y="495.5" >`GC_generi..</text>
</g>
<g >
<title>`top.lsp-top130^522^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3653" width="494.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="13.00" y="3663.5" >`top.lsp-top130^522^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`top.lsp-top130^378^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3877" width="494.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="13.00" y="3887.5" >`top.lsp-top130^378^TOP-COMPILE-FILE</text>
</g>
<g >
<title>0x11e697af9 (12 samples, 0.05%)</title><rect x="16.7" y="533" width="0.6" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="19.68" y="543.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (13 samples, 0.06%)</title><rect x="472.0" y="757" width="0.7" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="474.97" y="767.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (2 samples, 0.01%)</title><rect x="148.7" y="629" width="0.1" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="151.69" y="639.5" ></text>
</g>
<g >
<title>`CALL-WITH-COMPILATION-RESULTS^COMPILER^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="2341" width="494.0" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="13.00" y="2351.5" >`CALL-WITH-COMPILATION-RESULTS^COMPILER^FN^^</text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (2 samples, 0.01%)</title><rect x="470.4" y="613" width="0.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="473.37" y="623.5" ></text>
</g>
<g >
<title>0x11d7068cb (9,244 samples, 41.87%)</title><rect x="10.0" y="2885" width="494.0" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="13.00" y="2895.5" >0x11d7068cb</text>
</g>
<g >
<title>`BCLASP-COMPILE*^COMPILER^FN^^ (7 samples, 0.03%)</title><rect x="454.5" y="613" width="0.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="457.50" y="623.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (2 samples, 0.01%)</title><rect x="215.5" y="949" width="0.1" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="218.49" y="959.5" ></text>
</g>
<g >
<title>`CLEAVIR-COMPILE-FILE-CST^CLASP-CLEAVIR^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="1317" width="494.0" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="13.00" y="1327.5" >`CLEAVIR-COMPILE-FILE-CST^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`GC_apply_to_all_blocks (32 samples, 0.14%)</title><rect x="26.0" y="373" width="1.7" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="28.98" y="383.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="472.8" y="725" width="0.1" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="475.78" y="735.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (8 samples, 0.04%)</title><rect x="128.3" y="613" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="131.33" y="623.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (5 samples, 0.02%)</title><rect x="456.6" y="645" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="459.64" y="655.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (3,672 samples, 16.63%)</title><rect x="253.6" y="1045" width="196.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="256.60" y="1055.5" >`MAPC^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`GC_do_local_mark (12,835 samples, 58.13%)</title><rect x="504.0" y="4149" width="686.0" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="507.04" y="4159.5" >`GC_do_local_mark</text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2213" width="494.0" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="13.00" y="2223.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`compiler-conditions.lsp-compiler-conditions125^205^TOP-COMPILE- (9,244 samples, 41.87%)</title><rect x="10.0" y="3349" width="494.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="13.00" y="3359.5" >`compiler-conditions.lsp-compiler-conditions125^205^TOP-COMPILE-</text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.02%)</title><rect x="470.3" y="677" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="473.32" y="687.5" ></text>
</g>
<g >
<title>0x11b1fc18a (2 samples, 0.01%)</title><rect x="342.6" y="981" width="0.1" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="345.64" y="991.5" ></text>
</g>
<g >
<title>`tlv_get_addr (5 samples, 0.02%)</title><rect x="338.7" y="933" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="341.74" y="943.5" ></text>
</g>
<g >
<title>`inline-function.lisp-inline-function413^82^TOP-COMPILE-FILE (920 samples, 4.17%)</title><rect x="454.9" y="1029" width="49.1" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="457.87" y="1039.5" >`inl..</text>
</g>
<g >
<title>`compiler-conditions.lsp-compiler-conditions125^193^TOP-COMPILE- (9,244 samples, 41.87%)</title><rect x="10.0" y="2309" width="494.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="13.00" y="2319.5" >`compiler-conditions.lsp-compiler-conditions125^193^TOP-COMPILE-</text>
</g>
<g >
<title>`cc_gatherRestArguments (5 samples, 0.02%)</title><rect x="121.2" y="597" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="124.16" y="607.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.02%)</title><rect x="458.1" y="485" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="461.08" y="495.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (4 samples, 0.02%)</title><rect x="22.1" y="501" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="25.13" y="511.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="151.3" y="821" width="0.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="154.25" y="831.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="433.5" y="949" width="0.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="436.49" y="959.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (32 samples, 0.14%)</title><rect x="234.9" y="933" width="1.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="237.95" y="943.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (3 samples, 0.01%)</title><rect x="447.3" y="997" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="450.34" y="1007.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (4 samples, 0.02%)</title><rect x="22.1" y="517" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="25.13" y="527.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp; (2 samples, 0.01%)</title><rect x="146.6" y="117" width="0.1" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="149.55" y="127.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.01%)</title><rect x="126.4" y="485" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="129.40" y="495.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (11 samples, 0.05%)</title><rect x="151.7" y="773" width="0.6" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="154.68" y="783.5" ></text>
</g>
<g >
<title>`GC_allochblk (11 samples, 0.05%)</title><rect x="189.8" y="853" width="0.6" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="192.84" y="863.5" ></text>
</g>
<g >
<title>`VASLIST-LENGTH^CORE^FN^^ (3 samples, 0.01%)</title><rect x="111.6" y="485" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="114.60" y="495.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (5 samples, 0.02%)</title><rect x="142.0" y="645" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="145.01" y="655.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (2 samples, 0.01%)</title><rect x="457.2" y="597" width="0.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="460.22" y="607.5" ></text>
</g>
<g >
<title>`DISCONNECT-PREDECESSOR^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.02%)</title><rect x="150.3" y="805" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="153.29" y="815.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (14 samples, 0.06%)</title><rect x="20.4" y="549" width="0.8" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="23.42" y="559.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (16 samples, 0.07%)</title><rect x="151.6" y="789" width="0.8" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="154.57" y="799.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (15 samples, 0.07%)</title><rect x="239.1" y="821" width="0.8" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="242.12" y="831.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (283 samples, 1.28%)</title><rect x="455.6" y="741" width="15.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="458.62" y="751.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (14 samples, 0.06%)</title><rect x="15.2" y="533" width="0.7" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="18.18" y="543.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (21 samples, 0.10%)</title><rect x="203.3" y="853" width="1.1" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="206.31" y="863.5" ></text>
</g>
<g >
<title>0x11af4440a (6 samples, 0.03%)</title><rect x="459.4" y="549" width="0.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="462.41" y="559.5" ></text>
</g>
<g >
<title>`GC_allochblk (2 samples, 0.01%)</title><rect x="165.8" y="869" width="0.2" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="168.84" y="879.5" ></text>
</g>
<g >
<title>`LOCATION-OWNER^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="467.4" y="629" width="0.1" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="470.38" y="639.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (66 samples, 0.30%)</title><rect x="236.9" y="917" width="3.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="239.87" y="927.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (5 samples, 0.02%)</title><rect x="141.1" y="597" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="144.10" y="607.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (927 samples, 4.20%)</title><rect x="454.5" y="1109" width="49.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="457.50" y="1119.5" >`cor..</text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="455.7" y="709" width="0.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="458.67" y="719.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.01%)</title><rect x="115.4" y="581" width="0.1" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="118.39" y="591.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="383.5" y="933" width="0.1" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="386.52" y="943.5" ></text>
</g>
<g >
<title>0x11a394071 (5 samples, 0.02%)</title><rect x="192.0" y="997" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="194.98" y="1007.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1,649 samples, 7.47%)</title><rect x="22.3" y="517" width="88.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="25.35" y="527.5" >`gctools::..</text>
</g>
<g >
<title>0x11b1fc2a1 (34 samples, 0.15%)</title><rect x="343.2" y="981" width="1.8" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="346.17" y="991.5" ></text>
</g>
<g >
<title>0x11a5e30e4 (2 samples, 0.01%)</title><rect x="336.7" y="981" width="0.1" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="339.71" y="991.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.01%)</title><rect x="151.0" y="677" width="0.1" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="153.99" y="687.5" ></text>
</g>
<g >
<title>0x11a5b60a4 (2 samples, 0.01%)</title><rect x="193.0" y="997" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="196.05" y="1007.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.01%)</title><rect x="387.1" y="981" width="0.1" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="390.10" y="991.5" ></text>
</g>
<g >
<title>`unwind_phase2 (3 samples, 0.01%)</title><rect x="443.9" y="933" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="446.92" y="943.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="147.5" y="725" width="0.1" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="150.46" y="735.5" ></text>
</g>
<g >
<title>`SEQ-ITERATOR-NEXT^CORE^FN^^ (2 samples, 0.01%)</title><rect x="124.3" y="565" width="0.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="127.32" y="575.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (2 samples, 0.01%)</title><rect x="469.7" y="629" width="0.1" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="472.68" y="639.5" ></text>
</g>
<g >
<title>0x11af2e271 (2 samples, 0.01%)</title><rect x="460.3" y="469" width="0.1" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="463.27" y="479.5" ></text>
</g>
<g >
<title>`GC_find_header (12 samples, 0.05%)</title><rect x="423.4" y="933" width="0.6" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="426.39" y="943.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (10 samples, 0.05%)</title><rect x="113.4" y="581" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="116.36" y="591.5" ></text>
</g>
<g >
<title>`NULL^COMMON-LISP^FN^^ (10 samples, 0.05%)</title><rect x="153.2" y="901" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="156.18" y="911.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (31 samples, 0.14%)</title><rect x="443.9" y="981" width="1.7" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="446.92" y="991.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1701" width="494.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="13.00" y="1711.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>0x11abd7052 (2 samples, 0.01%)</title><rect x="273.7" y="997" width="0.1" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="276.69" y="1007.5" ></text>
</g>
<g >
<title>`GC_allochblk (5 samples, 0.02%)</title><rect x="244.8" y="773" width="0.3" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="247.83" y="783.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.01%)</title><rect x="137.3" y="517" width="0.1" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="140.25" y="527.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (2 samples, 0.01%)</title><rect x="139.8" y="613" width="0.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="142.82" y="623.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (4 samples, 0.02%)</title><rect x="25.3" y="357" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="28.29" y="367.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (2,154 samples, 9.76%)</title><rect x="1073.6" y="4117" width="115.1" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="1076.60" y="4127.5" >`GC_push_conte..</text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="144.7" y="677" width="0.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="147.73" y="687.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="869" width="0.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="457.50" y="879.5" ></text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (2 samples, 0.01%)</title><rect x="123.9" y="565" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="126.94" y="575.5" ></text>
</g>
<g >
<title>`GC_find_header (6 samples, 0.03%)</title><rect x="1073.3" y="4101" width="0.3" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="1076.28" y="4111.5" ></text>
</g>
<g >
<title>0x11af4234c (31 samples, 0.14%)</title><rect x="141.0" y="709" width="1.7" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="144.05" y="719.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="3573" width="494.0" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="13.00" y="3583.5" >`CATCH-LAMBDA^CC-GENERATE-AST^FN^^</text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (3,678 samples, 16.66%)</title><rect x="253.3" y="1077" width="196.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="256.28" y="1087.5" >`wrapped_cl__mapc_T_spLis..</text>
</g>
<g >
<title>0x11d78b0be (4 samples, 0.02%)</title><rect x="168.9" y="1077" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="171.94" y="1087.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (6 samples, 0.03%)</title><rect x="220.5" y="901" width="0.3" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="223.52" y="911.5" ></text>
</g>
<g >
<title>`GC_find_header (16 samples, 0.07%)</title><rect x="1072.4" y="4085" width="0.9" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="1075.42" y="4095.5" ></text>
</g>
<g >
<title>0x11e84815d (5 samples, 0.02%)</title><rect x="134.6" y="709" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="137.63" y="719.5" ></text>
</g>
<g >
<title>`GC_reclaim_block (9 samples, 0.04%)</title><rect x="27.2" y="357" width="0.5" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="30.21" y="367.5" ></text>
</g>
<g >
<title>0x11e84815d (2 samples, 0.01%)</title><rect x="151.0" y="757" width="0.1" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="153.99" y="767.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (499 samples, 2.26%)</title><rect x="476.7" y="789" width="26.7" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="479.73" y="799.5" >`..</text>
</g>
<g >
<title>0x11a394071 (11 samples, 0.05%)</title><rect x="198.2" y="981" width="0.6" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="201.18" y="991.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (14 samples, 0.06%)</title><rect x="203.4" y="805" width="0.8" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="206.42" y="815.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (2 samples, 0.01%)</title><rect x="127.8" y="581" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="130.85" y="591.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (2 samples, 0.01%)</title><rect x="475.0" y="725" width="0.1" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="478.02" y="735.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (2 samples, 0.01%)</title><rect x="151.0" y="629" width="0.1" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="153.99" y="639.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (3 samples, 0.01%)</title><rect x="450.2" y="997" width="0.2" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="453.22" y="1007.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (14 samples, 0.06%)</title><rect x="163.5" y="1061" width="0.8" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="166.55" y="1071.5" ></text>
</g>
<g >
<title>`TPL^CORE^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="3749" width="494.0" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="13.00" y="3759.5" >`TPL^CORE^FN^^</text>
</g>
<g >
<title>`GC_malloc_kind_global (36 samples, 0.16%)</title><rect x="222.5" y="853" width="2.0" height="15.0" fill="rgb(215,73,73)" rx="2" ry="2" />
<text  x="225.55" y="863.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (3 samples, 0.01%)</title><rect x="113.6" y="517" width="0.2" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="116.63" y="527.5" ></text>
</g>
<g >
<title>`GC_reclaim_block (9 samples, 0.04%)</title><rect x="478.0" y="709" width="0.5" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="481.01" y="719.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (2 samples, 0.01%)</title><rect x="146.2" y="789" width="0.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="149.18" y="799.5" ></text>
</g>
<g >
<title>0x11ab62d96 (43 samples, 0.19%)</title><rect x="156.7" y="1077" width="2.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="159.71" y="1087.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (4 samples, 0.02%)</title><rect x="466.9" y="661" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="469.90" y="671.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (35 samples, 0.16%)</title><rect x="153.7" y="885" width="1.9" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="156.71" y="895.5" ></text>
</g>
<g >
<title>0x11ab7fe4a (4 samples, 0.02%)</title><rect x="11.7" y="789" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="14.71" y="799.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="456.0" y="629" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="459.05" y="639.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (33 samples, 0.15%)</title><rect x="164.7" y="1077" width="1.8" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="167.72" y="1087.5" ></text>
</g>
<g >
<title>0x11e8918c9 (3 samples, 0.01%)</title><rect x="120.6" y="661" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="123.63" y="671.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="147.5" y="709" width="0.1" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="150.46" y="719.5" ></text>
</g>
<g >
<title>`cc_unwind (20 samples, 0.09%)</title><rect x="444.4" y="949" width="1.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="447.45" y="959.5" ></text>
</g>
<g >
<title>all (22,079 samples, 100%)</title><rect x="10.0" y="4261" width="1180.0" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="13.00" y="4271.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (2 samples, 0.01%)</title><rect x="462.8" y="565" width="0.1" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="465.83" y="575.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (27 samples, 0.12%)</title><rect x="457.3" y="645" width="1.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="460.33" y="655.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (11 samples, 0.05%)</title><rect x="239.1" y="773" width="0.6" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="242.12" y="783.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.01%)</title><rect x="462.4" y="533" width="0.1" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="465.35" y="543.5" ></text>
</g>
<g >
<title>0x11af4234c (9 samples, 0.04%)</title><rect x="458.0" y="565" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="461.02" y="575.5" ></text>
</g>
<g >
<title>`cc_enclose (2 samples, 0.01%)</title><rect x="14.4" y="629" width="0.1" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="17.44" y="639.5" ></text>
</g>
<g >
<title>0x11a5e3047 (2 samples, 0.01%)</title><rect x="307.1" y="981" width="0.1" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="310.10" y="991.5" ></text>
</g>
<g >
<title>0x11a5e3241 (2 samples, 0.01%)</title><rect x="337.0" y="981" width="0.1" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="339.97" y="991.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (10 samples, 0.05%)</title><rect x="460.2" y="517" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="463.16" y="527.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (3 samples, 0.01%)</title><rect x="234.7" y="901" width="0.1" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="237.68" y="911.5" ></text>
</g>
<g >
<title>`CLONE-INITARGS^CLEAVIR-IR^((APPEND) (INSTRUCTION))^METHOD^^ (11 samples, 0.05%)</title><rect x="121.0" y="629" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="123.95" y="639.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (12 samples, 0.05%)</title><rect x="194.5" y="917" width="0.7" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="197.54" y="927.5" ></text>
</g>
<g >
<title>`cc_enclose (2 samples, 0.01%)</title><rect x="12.5" y="693" width="0.1" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="15.51" y="703.5" ></text>
</g>
<g >
<title>0x11ab7fe4a (6 samples, 0.03%)</title><rect x="11.1" y="821" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="14.07" y="831.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (15 samples, 0.07%)</title><rect x="355.8" y="965" width="0.8" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="358.79" y="975.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (4 samples, 0.02%)</title><rect x="129.8" y="613" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="132.82" y="623.5" ></text>
</g>
<g >
<title>`cc_enclose (519 samples, 2.35%)</title><rect x="476.1" y="885" width="27.7" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="479.09" y="895.5" >`..</text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.01%)</title><rect x="459.9" y="501" width="0.1" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="462.90" y="511.5" ></text>
</g>
<g >
<title>`GC_help_marker (12,835 samples, 58.13%)</title><rect x="504.0" y="4181" width="686.0" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="507.04" y="4191.5" >`GC_help_marker</text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (3 samples, 0.01%)</title><rect x="116.5" y="565" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="119.51" y="575.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2549" width="494.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="13.00" y="2559.5" >`compile-file.lsp-compile-file52^262^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`TRANSLATE-INPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.01%)</title><rect x="462.0" y="629" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="465.03" y="639.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (4 samples, 0.02%)</title><rect x="224.3" y="821" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="227.26" y="831.5" ></text>
</g>
<g >
<title>0x11a5b60a4 (3 samples, 0.01%)</title><rect x="233.3" y="949" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="236.34" y="959.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (35 samples, 0.16%)</title><rect x="183.0" y="1013" width="1.9" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="186.00" y="1023.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (4 samples, 0.02%)</title><rect x="146.6" y="213" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="149.55" y="223.5" ></text>
</g>
<g >
<title>0x11a5e30a3 (2 samples, 0.01%)</title><rect x="307.4" y="981" width="0.1" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="310.42" y="991.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (2 samples, 0.01%)</title><rect x="444.7" y="837" width="0.1" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="447.72" y="847.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (4 samples, 0.02%)</title><rect x="152.9" y="853" width="0.2" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="155.91" y="863.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.01%)</title><rect x="143.9" y="613" width="0.1" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="146.93" y="623.5" ></text>
</g>
<g >
<title>`cc_enclose (4 samples, 0.02%)</title><rect x="451.5" y="1029" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="454.45" y="1039.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (6 samples, 0.03%)</title><rect x="20.5" y="517" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="23.48" y="527.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (60 samples, 0.27%)</title><rect x="267.9" y="981" width="3.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="270.92" y="991.5" ></text>
</g>
<g >
<title>`top.lsp-top130^522^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3557" width="494.0" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="13.00" y="3567.5" >`top.lsp-top130^522^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`core::lisp_multipleValues() (3 samples, 0.01%)</title><rect x="383.5" y="949" width="0.1" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="386.47" y="959.5" ></text>
</g>
<g >
<title>0x11af4234c (3 samples, 0.01%)</title><rect x="457.6" y="533" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="460.60" y="543.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^107^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="645" width="0.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="149.44" y="655.5" ></text>
</g>
<g >
<title>0x11a3940fc (2 samples, 0.01%)</title><rect x="232.2" y="949" width="0.1" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="235.17" y="959.5" ></text>
</g>
<g >
<title>`DO-LTV^LITERAL^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="1285" width="494.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="13.00" y="1295.5" >`DO-LTV^LITERAL^FN^^</text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (518 samples, 2.35%)</title><rect x="476.1" y="869" width="27.7" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="479.09" y="879.5" >`..</text>
</g>
<g >
<title>0x11af4440a (3 samples, 0.01%)</title><rect x="16.5" y="533" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="19.52" y="543.5" ></text>
</g>
<g >
<title>`clear_marks_for_block (5 samples, 0.02%)</title><rect x="25.6" y="373" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="28.61" y="383.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (27 samples, 0.12%)</title><rect x="444.1" y="965" width="1.4" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="447.08" y="975.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (3 samples, 0.01%)</title><rect x="473.8" y="725" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="476.84" y="735.5" ></text>
</g>
<g >
<title>`GC_allochblk (8 samples, 0.04%)</title><rect x="195.2" y="837" width="0.5" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="198.24" y="847.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1765" width="494.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="13.00" y="1775.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="1941" width="494.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" >`DO-DBG-FUNCTION^COMPILER^FN^^</text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (2 samples, 0.01%)</title><rect x="472.1" y="629" width="0.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="475.08" y="639.5" ></text>
</g>
<g >
<title>0x11b1fc0d2 (2 samples, 0.01%)</title><rect x="341.9" y="981" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="344.94" y="991.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="141.1" y="549" width="0.1" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="144.10" y="559.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1637" width="494.0" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`compiler-conditions.lsp-compiler-conditions125^205^TOP-COMPILE- (9,244 samples, 41.87%)</title><rect x="10.0" y="3333" width="494.0" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="13.00" y="3343.5" >`compiler-conditions.lsp-compiler-conditions125^205^TOP-COMPILE-</text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="389" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="149.44" y="399.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.01%)</title><rect x="115.5" y="565" width="0.1" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="118.50" y="575.5" ></text>
</g>
<g >
<title>0x11af4440a (3 samples, 0.01%)</title><rect x="468.9" y="613" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="471.93" y="623.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="14.7" y="549" width="0.1" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="17.70" y="559.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (914 samples, 4.14%)</title><rect x="455.0" y="933" width="48.8" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="457.98" y="943.5" >`COM..</text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (68 samples, 0.31%)</title><rect x="236.8" y="933" width="3.7" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="239.82" y="943.5" ></text>
</g>
<g >
<title>`wrapped_cl__list_T_sp (3 samples, 0.01%)</title><rect x="449.7" y="997" width="0.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="452.69" y="1007.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (3 samples, 0.01%)</title><rect x="271.0" y="965" width="0.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="273.97" y="975.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (33 samples, 0.15%)</title><rect x="476.7" y="741" width="1.8" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="479.73" y="751.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (39 samples, 0.18%)</title><rect x="433.6" y="965" width="2.1" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="436.60" y="975.5" ></text>
</g>
<g >
<title>`core::Cons_O::onthcdr(long long) const (2 samples, 0.01%)</title><rect x="225.4" y="933" width="0.1" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="228.43" y="943.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (2 samples, 0.01%)</title><rect x="171.9" y="981" width="0.1" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="174.88" y="991.5" ></text>
</g>
<g >
<title>`core::cl__gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (8 samples, 0.04%)</title><rect x="383.7" y="965" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="386.74" y="975.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (4 samples, 0.02%)</title><rect x="152.0" y="741" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="155.00" y="751.5" ></text>
</g>
<g >
<title>`TRANSLATE-INPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.02%)</title><rect x="461.8" y="629" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="464.82" y="639.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (236 samples, 1.07%)</title><rect x="95.9" y="309" width="12.6" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="98.89" y="319.5" ></text>
</g>
<g >
<title>0x11e54e08b (2 samples, 0.01%)</title><rect x="135.2" y="677" width="0.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="138.22" y="687.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.01%)</title><rect x="131.1" y="565" width="0.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="134.11" y="575.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.01%)</title><rect x="461.7" y="581" width="0.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="464.66" y="591.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (8 samples, 0.04%)</title><rect x="457.4" y="597" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="460.38" y="607.5" ></text>
</g>
<g >
<title>`COMPILE^COMMON-LISP^FN^^ (6 samples, 0.03%)</title><rect x="146.4" y="613" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="149.44" y="623.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (20 samples, 0.09%)</title><rect x="154.5" y="853" width="1.0" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="157.46" y="863.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (197 samples, 0.89%)</title><rect x="346.4" y="997" width="10.6" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="349.43" y="1007.5" ></text>
</g>
<g >
<title>0x11ab7fe4a (9 samples, 0.04%)</title><rect x="14.1" y="661" width="0.4" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="17.06" y="671.5" ></text>
</g>
<g >
<title>`translate.lisp-translate451^758^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1301" width="494.0" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" >`translate.lisp-translate451^758^TOP-COMPILE-FILE</text>
</g>
<g >
<title>0x11d7068cb (9,244 samples, 41.87%)</title><rect x="10.0" y="2965" width="494.0" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="13.00" y="2975.5" >0x11d7068cb</text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="451.3" y="997" width="0.1" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="454.29" y="1007.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="517" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="149.44" y="527.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="454.6" y="389" width="0.1" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="457.55" y="399.5" ></text>
</g>
<g >
<title>`compiler-conditions.lsp-compiler-conditions125^193^TOP-COMPILE- (7 samples, 0.03%)</title><rect x="454.5" y="661" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="457.50" y="671.5" ></text>
</g>
<g >
<title>`wrapped_cl__nthcdr_Integer_spList_sp (2 samples, 0.01%)</title><rect x="178.6" y="1013" width="0.1" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="181.56" y="1023.5" ></text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (7 samples, 0.03%)</title><rect x="131.5" y="597" width="0.4" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="134.48" y="607.5" ></text>
</g>
<g >
<title>0x11af4234c (2 samples, 0.01%)</title><rect x="455.7" y="693" width="0.1" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="458.67" y="703.5" ></text>
</g>
<g >
<title>0x11a51ed3b (2 samples, 0.01%)</title><rect x="161.2" y="1077" width="0.1" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="164.19" y="1087.5" ></text>
</g>
<g >
<title>0x11af4440a (4 samples, 0.02%)</title><rect x="15.2" y="501" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="18.24" y="511.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (304 samples, 1.38%)</title><rect x="455.6" y="757" width="16.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="458.57" y="767.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (25 samples, 0.11%)</title><rect x="189.3" y="1013" width="1.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="192.25" y="1023.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (5 samples, 0.02%)</title><rect x="153.4" y="853" width="0.3" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="156.39" y="863.5" ></text>
</g>
<g >
<title>`DELETE^COMMON-LISP^FN^^ (4 samples, 0.02%)</title><rect x="150.3" y="789" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="153.29" y="799.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (2 samples, 0.01%)</title><rect x="161.2" y="1061" width="0.1" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="164.19" y="1071.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="162.4" y="1077" width="0.1" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="165.37" y="1087.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (4 samples, 0.02%)</title><rect x="153.4" y="837" width="0.2" height="15.0" fill="rgb(252,127,127)" rx="2" ry="2" />
<text  x="156.39" y="847.5" ></text>
</g>
<g >
<title>0x11af4234c (17 samples, 0.08%)</title><rect x="151.6" y="805" width="0.9" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="154.57" y="815.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1,258 samples, 5.70%)</title><rect x="185.0" y="1029" width="67.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="188.03" y="1039.5" >`MAPCAR..</text>
</g>
<g >
<title>0x11a5b4271 (3 samples, 0.01%)</title><rect x="232.6" y="949" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="235.65" y="959.5" ></text>
</g>
<g >
<title>0x11e6e91de (9,244 samples, 41.87%)</title><rect x="10.0" y="3301" width="494.0" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="13.00" y="3311.5" >0x11e6e91de</text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (3 samples, 0.01%)</title><rect x="16.5" y="485" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="19.52" y="495.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (67 samples, 0.30%)</title><rect x="135.0" y="709" width="3.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="137.95" y="719.5" ></text>
</g>
<g >
<title>`DISCONNECT-PREDECESSOR^CLEAVIR-PARTIAL-INLINING^FN^^ (5 samples, 0.02%)</title><rect x="461.4" y="629" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="464.39" y="639.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="2821" width="494.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="13.00" y="2831.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`wrapped_cl__list_T_sp (2 samples, 0.01%)</title><rect x="443.8" y="981" width="0.1" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="446.76" y="991.5" ></text>
</g>
<g >
<title>0x11e697af9 (2 samples, 0.01%)</title><rect x="471.2" y="645" width="0.1" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="474.23" y="655.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.01%)</title><rect x="462.0" y="533" width="0.1" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="465.03" y="543.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (36 samples, 0.16%)</title><rect x="217.7" y="933" width="2.0" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="220.74" y="943.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^107^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="997" width="0.4" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="457.50" y="1007.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.01%)</title><rect x="120.1" y="613" width="0.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="123.15" y="623.5" ></text>
</g>
<g >
<title>0x11af4234c (1,759 samples, 7.97%)</title><rect x="20.1" y="613" width="94.0" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="23.10" y="623.5" >0x11af4234c</text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (6 samples, 0.03%)</title><rect x="146.4" y="597" width="0.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="149.44" y="607.5" ></text>
</g>
<g >
<title>`top.lsp-top130^522^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3685" width="494.0" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="13.00" y="3695.5" >`top.lsp-top130^522^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.01%)</title><rect x="123.1" y="549" width="0.1" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="126.09" y="559.5" ></text>
</g>
<g >
<title>`inline-function.lisp-inline-function413^3^TOP-COMPILE-FILE (34 samples, 0.15%)</title><rect x="169.6" y="1077" width="1.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="172.64" y="1087.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (4 samples, 0.02%)</title><rect x="459.4" y="485" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="462.41" y="495.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="146.7" y="117" width="0.1" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="149.66" y="127.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (3,678 samples, 16.66%)</title><rect x="253.3" y="1061" width="196.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="256.28" y="1071.5" >`core::cl__mapc(gctools::..</text>
</g>
<g >
<title>`compile.lsp-compile50^107^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="661" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="149.44" y="671.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (6 samples, 0.03%)</title><rect x="276.4" y="965" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="279.42" y="975.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (99 samples, 0.45%)</title><rect x="219.9" y="917" width="5.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="222.88" y="927.5" ></text>
</g>
<g >
<title>`core::Lisp_O::run() (9,244 samples, 41.87%)</title><rect x="10.0" y="4149" width="494.0" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="13.00" y="4159.5" >`core::Lisp_O::run()</text>
</g>
<g >
<title>`COERCE-FDESIGNATOR^CORE^FN^^ (2 samples, 0.01%)</title><rect x="455.8" y="677" width="0.1" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="458.83" y="687.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="123.1" y="533" width="0.1" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="126.14" y="543.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (15 samples, 0.07%)</title><rect x="338.3" y="965" width="0.8" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="341.26" y="975.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.01%)</title><rect x="17.9" y="549" width="0.1" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="20.91" y="559.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (36 samples, 0.16%)</title><rect x="222.5" y="837" width="2.0" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="225.55" y="847.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="159.3" y="1013" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="162.32" y="1023.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (4 samples, 0.02%)</title><rect x="115.4" y="613" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="118.39" y="623.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (3,678 samples, 16.66%)</title><rect x="253.3" y="1093" width="196.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="256.28" y="1103.5" >`MAPC^COMMON-LISP^FN^^</text>
</g>
<g >
<title>0x11a5e3000 (8 samples, 0.04%)</title><rect x="262.8" y="997" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="265.85" y="1007.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (100 samples, 0.45%)</title><rect x="219.9" y="933" width="5.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="222.88" y="943.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (5 samples, 0.02%)</title><rect x="215.6" y="949" width="0.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="218.60" y="959.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (22 samples, 0.10%)</title><rect x="16.5" y="597" width="1.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="19.52" y="607.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.01%)</title><rect x="124.5" y="549" width="0.1" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="127.53" y="559.5" ></text>
</g>
<g >
<title>`LOCATION-OWNER^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.01%)</title><rect x="116.1" y="613" width="0.1" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="119.09" y="623.5" ></text>
</g>
<g >
<title>`tlv_get_addr (13 samples, 0.06%)</title><rect x="435.0" y="949" width="0.7" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="437.99" y="959.5" ></text>
</g>
<g >
<title>0x11e8a40d3 (2,722 samples, 12.33%)</title><rect x="10.3" y="1109" width="145.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="13.32" y="1119.5" >0x11e8a40d3</text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::sm (3 samples, 0.01%)</title><rect x="239.9" y="885" width="0.2" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="242.92" y="895.5" ></text>
</g>
<g >
<title>0x11e621b89 (22 samples, 0.10%)</title><rect x="110.7" y="517" width="1.2" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="113.69" y="527.5" ></text>
</g>
<g >
<title>`FIND-IN-MAPPING^CLEAVIR-PARTIAL-INLINING^((HASH-TABLE T))^METHO (2 samples, 0.01%)</title><rect x="139.4" y="645" width="0.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="142.44" y="655.5" ></text>
</g>
<g >
<title>`GC_mark_local (1,510 samples, 6.84%)</title><rect x="27.9" y="357" width="80.7" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="30.90" y="367.5" >`GC_mark_..</text>
</g>
<g >
<title>0x11b1fc2ad (19 samples, 0.09%)</title><rect x="345.0" y="981" width="1.0" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="347.99" y="991.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.01%)</title><rect x="204.4" y="869" width="0.1" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="207.43" y="879.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="471.2" y="661" width="0.1" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="474.23" y="671.5" ></text>
</g>
<g >
<title>0x11e697af9 (4 samples, 0.02%)</title><rect x="475.0" y="741" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="478.02" y="751.5" ></text>
</g>
<g >
<title>`ADD-TO-MAPPING^CLEAVIR-PARTIAL-INLINING^((HASH-TABLE T T))^METH (2 samples, 0.01%)</title><rect x="139.5" y="645" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="142.55" y="655.5" ></text>
</g>
<g >
<title>`NSUBSTITUTE^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="452.4" y="1045" width="0.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="455.36" y="1055.5" ></text>
</g>
<g >
<title>`DISCONNECT-PREDECESSOR^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="152.5" y="837" width="0.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="155.54" y="847.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (7 samples, 0.03%)</title><rect x="12.6" y="709" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="15.62" y="719.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (4 samples, 0.02%)</title><rect x="458.1" y="501" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="461.08" y="511.5" ></text>
</g>
<g >
<title>0x11e891a8c (4 samples, 0.02%)</title><rect x="19.7" y="629" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="22.73" y="639.5" ></text>
</g>
<g >
<title>0x11a5e3c6c (13 samples, 0.06%)</title><rect x="337.4" y="981" width="0.7" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="340.40" y="991.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (2 samples, 0.01%)</title><rect x="151.1" y="709" width="0.1" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="154.09" y="719.5" ></text>
</g>
<g >
<title>`GC_alloc_large (9 samples, 0.04%)</title><rect x="177.7" y="901" width="0.5" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="180.71" y="911.5" ></text>
</g>
<g >
<title>`DO-COMPILER-TIMER^COMPILER^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="2357" width="494.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="13.00" y="2367.5" >`DO-COMPILER-TIMER^COMPILER^FN^^</text>
</g>
<g >
<title>0x11e54e08b (2 samples, 0.01%)</title><rect x="464.2" y="629" width="0.1" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="467.17" y="639.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="176.6" y="1045" width="0.1" height="15.0" fill="rgb(250,122,122)" rx="2" ry="2" />
<text  x="179.59" y="1055.5" ></text>
</g>
<g >
<title>0x11a394071 (9 samples, 0.04%)</title><rect x="174.9" y="1045" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="177.88" y="1055.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (5 samples, 0.02%)</title><rect x="503.4" y="805" width="0.3" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="506.40" y="815.5" ></text>
</g>
<g >
<title>0x11a5b61d4 (2 samples, 0.01%)</title><rect x="215.5" y="965" width="0.1" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="218.49" y="975.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (5 samples, 0.02%)</title><rect x="204.8" y="917" width="0.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="207.75" y="927.5" ></text>
</g>
<g >
<title>0x11e621b89 (5 samples, 0.02%)</title><rect x="17.1" y="485" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="20.05" y="495.5" ></text>
</g>
<g >
<title>`INPUTS^CLEAVIR-IR^((:AFTER) (T T))^SETFMETHOD^^ (2 samples, 0.01%)</title><rect x="451.1" y="1045" width="0.1" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="454.13" y="1055.5" ></text>
</g>
<g >
<title>`APPEND^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="464.3" y="645" width="0.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="467.28" y="655.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (2,533 samples, 11.47%)</title><rect x="11.4" y="821" width="135.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="14.39" y="831.5" >`COPY-FUNCTION-RE..</text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (7 samples, 0.03%)</title><rect x="165.7" y="981" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="168.68" y="991.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (9 samples, 0.04%)</title><rect x="184.1" y="917" width="0.4" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="187.07" y="927.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1,480 samples, 6.70%)</title><rect x="174.0" y="1061" width="79.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="176.97" y="1071.5" >`MAPCAR^C..</text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (3 samples, 0.01%)</title><rect x="138.9" y="693" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="141.91" y="703.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (5 samples, 0.02%)</title><rect x="247.2" y="773" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="250.19" y="783.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (5 samples, 0.02%)</title><rect x="142.3" y="677" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="145.33" y="687.5" ></text>
</g>
<g >
<title>0x11abd70fc (2 samples, 0.01%)</title><rect x="274.3" y="997" width="0.1" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="277.28" y="1007.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.01%)</title><rect x="451.5" y="997" width="0.2" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="454.50" y="1007.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (3 samples, 0.01%)</title><rect x="117.5" y="645" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="120.53" y="655.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (4 samples, 0.02%)</title><rect x="275.9" y="965" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="278.89" y="975.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.01%)</title><rect x="143.0" y="741" width="0.1" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="145.97" y="751.5" ></text>
</g>
<g >
<title>0x11e84615a (2 samples, 0.01%)</title><rect x="139.4" y="661" width="0.1" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="142.44" y="671.5" ></text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="142.6" y="677" width="0.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="145.60" y="687.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.01%)</title><rect x="139.5" y="597" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="142.55" y="607.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (51 samples, 0.23%)</title><rect x="140.4" y="757" width="2.7" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="143.40" y="767.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (2 samples, 0.01%)</title><rect x="199.6" y="965" width="0.1" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="202.57" y="975.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (3 samples, 0.01%)</title><rect x="470.0" y="661" width="0.2" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="473.05" y="671.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (3 samples, 0.01%)</title><rect x="116.5" y="581" width="0.2" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="119.51" y="591.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="113.2" y="565" width="0.2" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="116.20" y="575.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (18 samples, 0.08%)</title><rect x="246.6" y="917" width="1.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="249.60" y="927.5" ></text>
</g>
<g >
<title>`compiler-conditions.lsp-compiler-conditions125^205^TOP-COMPILE- (9,244 samples, 41.87%)</title><rect x="10.0" y="3365" width="494.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="13.00" y="3375.5" >`compiler-conditions.lsp-compiler-conditions125^205^TOP-COMPILE-</text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (6 samples, 0.03%)</title><rect x="146.4" y="373" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="149.44" y="383.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (4 samples, 0.02%)</title><rect x="164.5" y="997" width="0.2" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="167.51" y="1007.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (5 samples, 0.02%)</title><rect x="12.1" y="693" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="15.14" y="703.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="454.6" y="469" width="0.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="457.55" y="479.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.01%)</title><rect x="462.4" y="565" width="0.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="465.35" y="575.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (5 samples, 0.02%)</title><rect x="188.2" y="1013" width="0.3" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="191.24" y="1023.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (18 samples, 0.08%)</title><rect x="177.4" y="1013" width="1.0" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="180.44" y="1023.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.01%)</title><rect x="121.2" y="581" width="0.2" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="124.22" y="591.5" ></text>
</g>
<g >
<title>`GC_add_to_black_list_stack (4 samples, 0.02%)</title><rect x="95.6" y="293" width="0.2" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="98.62" y="303.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.01%)</title><rect x="21.9" y="517" width="0.1" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="24.86" y="527.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (2 samples, 0.01%)</title><rect x="238.8" y="853" width="0.1" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="241.80" y="863.5" ></text>
</g>
<g >
<title>`top.lsp-top130^522^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3701" width="494.0" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="13.00" y="3711.5" >`top.lsp-top130^522^TOP-COMPILE-FILE</text>
</g>
<g >
<title>0x11a5b4000 (2 samples, 0.01%)</title><rect x="212.2" y="965" width="0.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="215.18" y="975.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2101" width="494.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="13.00" y="2111.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (5 samples, 0.02%)</title><rect x="141.1" y="629" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="144.10" y="639.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (72 samples, 0.33%)</title><rect x="458.8" y="645" width="3.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="461.83" y="655.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (2 samples, 0.01%)</title><rect x="115.5" y="485" width="0.1" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="118.50" y="495.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (8 samples, 0.04%)</title><rect x="13.5" y="661" width="0.4" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="16.47" y="671.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (31 samples, 0.14%)</title><rect x="269.3" y="965" width="1.7" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="272.31" y="975.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (6 samples, 0.03%)</title><rect x="146.4" y="277" width="0.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="149.44" y="287.5" ></text>
</g>
<g >
<title>`TRANSLATE-INPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (5 samples, 0.02%)</title><rect x="467.3" y="661" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="470.27" y="671.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (35 samples, 0.16%)</title><rect x="183.0" y="1029" width="1.9" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="186.00" y="1039.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.01%)</title><rect x="168.2" y="997" width="0.1" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="171.20" y="1007.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (3 samples, 0.01%)</title><rect x="249.7" y="965" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="252.70" y="975.5" ></text>
</g>
<g >
<title>0x11e54e08b (3 samples, 0.01%)</title><rect x="459.1" y="597" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="462.15" y="607.5" ></text>
</g>
<g >
<title>0x11e84815d (3 samples, 0.01%)</title><rect x="139.5" y="661" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="142.55" y="671.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (14 samples, 0.06%)</title><rect x="189.8" y="917" width="0.7" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="192.79" y="927.5" ></text>
</g>
<g >
<title>`ENDP^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="159.2" y="1045" width="0.1" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="162.16" y="1055.5" ></text>
</g>
<g >
<title>0x11abcf00c (2 samples, 0.01%)</title><rect x="263.9" y="997" width="0.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="266.91" y="1007.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="454.6" y="309" width="0.1" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="457.55" y="319.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.01%)</title><rect x="141.4" y="613" width="0.1" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="144.37" y="623.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.01%)</title><rect x="139.2" y="693" width="0.1" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="142.18" y="703.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (2 samples, 0.01%)</title><rect x="139.4" y="597" width="0.1" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="142.44" y="607.5" ></text>
</g>
<g >
<title>0x11e8565a9 (2 samples, 0.01%)</title><rect x="155.7" y="965" width="0.1" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="158.69" y="975.5" ></text>
</g>
<g >
<title>`gctools::startupGarbageCollectorAndSystem(int (*)(int, char**,  (9,244 samples, 41.87%)</title><rect x="10.0" y="4197" width="494.0" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="13.00" y="4207.5" >`gctools::startupGarbageCollectorAndSystem(int (*)(int, char**, </text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (31 samples, 0.14%)</title><rect x="141.0" y="693" width="1.7" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="144.05" y="703.5" ></text>
</g>
<g >
<title>0x11abcf2b9 (3 samples, 0.01%)</title><rect x="272.6" y="997" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="275.63" y="1007.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (3 samples, 0.01%)</title><rect x="165.8" y="933" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="168.79" y="943.5" ></text>
</g>
<g >
<title>0x11e5500e1 (2 samples, 0.01%)</title><rect x="459.0" y="597" width="0.1" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="461.99" y="607.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1,384 samples, 6.27%)</title><rect x="178.7" y="1045" width="73.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="181.67" y="1055.5" >`MAPCAR^..</text>
</g>
<g >
<title>`GC_generic_malloc (2 samples, 0.01%)</title><rect x="151.0" y="597" width="0.1" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="153.99" y="607.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="454.6" y="405" width="0.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="457.55" y="415.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (3 samples, 0.01%)</title><rect x="470.0" y="677" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="473.05" y="687.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (2 samples, 0.01%)</title><rect x="19.1" y="613" width="0.1" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="22.14" y="623.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (3 samples, 0.01%)</title><rect x="189.5" y="917" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="192.52" y="927.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (78 samples, 0.35%)</title><rect x="361.9" y="949" width="4.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="364.93" y="959.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (23 samples, 0.10%)</title><rect x="203.3" y="885" width="1.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="206.31" y="895.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.01%)</title><rect x="461.7" y="597" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="464.66" y="607.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (6 samples, 0.03%)</title><rect x="237.2" y="885" width="0.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="240.25" y="895.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (4 samples, 0.02%)</title><rect x="272.1" y="949" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="275.09" y="959.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (12 samples, 0.05%)</title><rect x="441.7" y="981" width="0.6" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="444.67" y="991.5" ></text>
</g>
<g >
<title>0x11af4234c (46 samples, 0.21%)</title><rect x="147.8" y="773" width="2.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="150.78" y="783.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (5 samples, 0.02%)</title><rect x="471.1" y="725" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="474.12" y="735.5" ></text>
</g>
<g >
<title>0x11e8544ce (2,721 samples, 12.32%)</title><rect x="10.4" y="1029" width="145.4" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="13.37" y="1039.5" >0x11e8544ce</text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="472.2" y="613" width="0.1" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="475.19" y="623.5" ></text>
</g>
<g >
<title>0x11d705230 (9,244 samples, 41.87%)</title><rect x="10.0" y="2853" width="494.0" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="13.00" y="2863.5" >0x11d705230</text>
</g>
<g >
<title>0x11ab7fe4a (2 samples, 0.01%)</title><rect x="12.0" y="757" width="0.1" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="14.98" y="767.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (2 samples, 0.01%)</title><rect x="139.2" y="709" width="0.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="142.18" y="719.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (6 samples, 0.03%)</title><rect x="423.0" y="885" width="0.3" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="426.02" y="895.5" ></text>
</g>
<g >
<title>0x11af4440a (14 samples, 0.06%)</title><rect x="20.4" y="565" width="0.8" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="23.42" y="575.5" ></text>
</g>
<g >
<title>`DESTINY-FIND-ENCLOSES^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (3 samples, 0.01%)</title><rect x="453.6" y="1093" width="0.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="456.59" y="1103.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^161^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="454.6" y="549" width="0.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="457.55" y="559.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1653" width="494.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="13.00" y="1663.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`FIND-IN-MAPPING^CLEAVIR-PARTIAL-INLINING^((HASH-TABLE T))^METHO (2 samples, 0.01%)</title><rect x="145.8" y="709" width="0.1" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="148.80" y="719.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (2 samples, 0.01%)</title><rect x="115.5" y="533" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="118.50" y="543.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (5 samples, 0.02%)</title><rect x="12.1" y="725" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="15.14" y="735.5" ></text>
</g>
<g >
<title>`CALL-VALID-P^CLEAVIR-PARTIAL-INLINING^FN^^ (1,110 samples, 5.03%)</title><rect x="287.0" y="997" width="59.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="290.00" y="1007.5" >`CALL-..</text>
</g>
<g >
<title>0x11e697af9 (24 samples, 0.11%)</title><rect x="148.2" y="725" width="1.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="151.21" y="735.5" ></text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (2 samples, 0.01%)</title><rect x="455.2" y="789" width="0.1" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="458.19" y="799.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (36 samples, 0.16%)</title><rect x="459.4" y="581" width="1.9" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="462.36" y="591.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleVector_O&gt; gctools::GCObjectAppro (2 samples, 0.01%)</title><rect x="20.7" y="485" width="0.1" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="23.69" y="495.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.01%)</title><rect x="117.6" y="613" width="0.1" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="120.58" y="623.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.01%)</title><rect x="146.4" y="213" width="0.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="149.44" y="223.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="454.6" y="437" width="0.1" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="457.55" y="447.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1589" width="494.0" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="17.7" y="597" width="0.1" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="20.70" y="607.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="853" width="0.4" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="457.50" y="863.5" ></text>
</g>
<g >
<title>0x11e54e08b (2 samples, 0.01%)</title><rect x="468.7" y="661" width="0.1" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="471.71" y="671.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="246.2" y="917" width="0.1" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="249.17" y="927.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (3 samples, 0.01%)</title><rect x="470.3" y="645" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="473.32" y="655.5" ></text>
</g>
<g >
<title>`CLONE-INITARGS^CLEAVIR-IR^((APPEND) (INSTRUCTION))^METHOD^^ (3 samples, 0.01%)</title><rect x="459.1" y="581" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="462.15" y="591.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="17.6" y="549" width="0.1" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="20.59" y="559.5" ></text>
</g>
<g >
<title>`GC_allochblk (9 samples, 0.04%)</title><rect x="177.7" y="885" width="0.5" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="180.71" y="895.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (4 samples, 0.02%)</title><rect x="340.3" y="949" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="343.29" y="959.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="464.2" y="597" width="0.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="467.17" y="607.5" ></text>
</g>
<g >
<title>`SEQ-ITERATOR-REF^CORE^FN^^ (4 samples, 0.02%)</title><rect x="250.9" y="981" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="253.87" y="991.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (2 samples, 0.01%)</title><rect x="155.8" y="1109" width="0.2" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="158.85" y="1119.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (42 samples, 0.19%)</title><rect x="464.4" y="645" width="2.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="467.38" y="655.5" ></text>
</g>
<g >
<title>`inline-function.lisp-inline-function413^82^TOP-COMPILE-FILE (2,722 samples, 12.33%)</title><rect x="10.3" y="1045" width="145.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="13.32" y="1055.5" >`inline-function.l..</text>
</g>
<g >
<title>0x11a5b60a8 (6 samples, 0.03%)</title><rect x="176.2" y="1045" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="179.16" y="1055.5" ></text>
</g>
<g >
<title>`wrapped_core__vaslist_length_VaList_sp (2 samples, 0.01%)</title><rect x="149.2" y="629" width="0.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="152.17" y="639.5" ></text>
</g>
<g >
<title>0x11e54e08b (2 samples, 0.01%)</title><rect x="471.1" y="693" width="0.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="474.12" y="703.5" ></text>
</g>
<g >
<title>`inline-function.lisp-inline-function413^82^TOP-COMPILE-FILE (920 samples, 4.17%)</title><rect x="454.9" y="1045" width="49.1" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="457.87" y="1055.5" >`inl..</text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="232.7" y="917" width="0.1" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="235.70" y="927.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (2 samples, 0.01%)</title><rect x="195.8" y="933" width="0.1" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="198.77" y="943.5" ></text>
</g>
<g >
<title>`COMPILE-FILE-TO-MODULE^COMPILER^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="2277" width="494.0" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="13.00" y="2287.5" >`COMPILE-FILE-TO-MODULE^COMPILER^FN^^</text>
</g>
<g >
<title>`IDENTITY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="178.4" y="1045" width="0.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="181.40" y="1055.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="111.1" y="453" width="0.1" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="114.12" y="463.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (4 samples, 0.02%)</title><rect x="146.6" y="245" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="149.55" y="255.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (4 samples, 0.02%)</title><rect x="115.4" y="629" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="118.39" y="639.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (6 samples, 0.03%)</title><rect x="202.8" y="885" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="205.77" y="895.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (21 samples, 0.10%)</title><rect x="183.4" y="965" width="1.1" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="186.43" y="975.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (2,400 samples, 10.87%)</title><rect x="12.1" y="757" width="128.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="15.14" y="767.5" >`COPY-FUNCTION-R..</text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (2 samples, 0.01%)</title><rect x="115.5" y="517" width="0.1" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="118.50" y="527.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (5 samples, 0.02%)</title><rect x="143.9" y="645" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="146.88" y="655.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (12 samples, 0.05%)</title><rect x="148.3" y="709" width="0.6" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="151.26" y="719.5" ></text>
</g>
<g >
<title>0x11af4440a (2 samples, 0.01%)</title><rect x="135.7" y="629" width="0.1" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="138.70" y="639.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (2 samples, 0.01%)</title><rect x="454.7" y="581" width="0.1" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="457.66" y="591.5" ></text>
</g>
<g >
<title>0x11a3940a8 (15 samples, 0.07%)</title><rect x="231.4" y="949" width="0.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="234.37" y="959.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="3253" width="494.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="13.00" y="3263.5" >`FUNWIND-PROTECT^CORE^FN^^</text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2261" width="494.0" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="13.00" y="2271.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="21.9" y="533" width="0.1" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="24.86" y="543.5" ></text>
</g>
<g >
<title>`translate.lisp-translate451^815^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1429" width="494.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="13.00" y="1439.5" >`translate.lisp-translate451^815^TOP-COMPILE-FILE</text>
</g>
<g >
<title>0x11af2e271 (5 samples, 0.02%)</title><rect x="112.7" y="565" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="115.72" y="575.5" ></text>
</g>
<g >
<title>`GC_find_header (5 samples, 0.02%)</title><rect x="25.6" y="357" width="0.3" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="28.61" y="367.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="471.1" y="661" width="0.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="474.12" y="671.5" ></text>
</g>
<g >
<title>0x11abd70a8 (3 samples, 0.01%)</title><rect x="274.1" y="997" width="0.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="277.07" y="1007.5" ></text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^CLOS^FN^^ (6 samples, 0.03%)</title><rect x="146.4" y="757" width="0.4" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="149.44" y="767.5" ></text>
</g>
<g >
<title>0x11abcf000 (8 samples, 0.04%)</title><rect x="263.3" y="997" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="266.33" y="1007.5" ></text>
</g>
<g >
<title>0x11ab62d96 (12 samples, 0.05%)</title><rect x="451.1" y="1061" width="0.7" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="454.13" y="1071.5" ></text>
</g>
<g >
<title>`cmpfastgf.lsp-cmpfastgf95^304^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="1045" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="457.50" y="1055.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (4 samples, 0.02%)</title><rect x="145.0" y="709" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="148.00" y="719.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1477" width="494.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="13.00" y="1487.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (2 samples, 0.01%)</title><rect x="131.1" y="597" width="0.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="134.11" y="607.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (4 samples, 0.02%)</title><rect x="451.5" y="1013" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="454.45" y="1023.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.01%)</title><rect x="454.8" y="501" width="0.1" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="457.76" y="511.5" ></text>
</g>
<g >
<title>0x11abcf022 (3 samples, 0.01%)</title><rect x="265.1" y="997" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="268.09" y="1007.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (9 samples, 0.04%)</title><rect x="465.5" y="549" width="0.5" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="468.51" y="559.5" ></text>
</g>
<g >
<title>`llvmo::Pass_O::externalObject() const (2 samples, 0.01%)</title><rect x="131.2" y="613" width="0.1" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="134.21" y="623.5" ></text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2117" width="494.0" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="13.00" y="2127.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="139.4" y="629" width="0.1" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="142.44" y="639.5" ></text>
</g>
<g >
<title>0x11abcf02e (2 samples, 0.01%)</title><rect x="265.3" y="997" width="0.1" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="268.25" y="1007.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (2 samples, 0.01%)</title><rect x="139.5" y="629" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="142.55" y="639.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (7 samples, 0.03%)</title><rect x="454.5" y="693" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="457.50" y="703.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (9 samples, 0.04%)</title><rect x="177.7" y="917" width="0.5" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="180.71" y="927.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (12 samples, 0.05%)</title><rect x="127.4" y="613" width="0.6" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="130.36" y="623.5" ></text>
</g>
<g >
<title>`COPY-FUNCTION-RECUR^CLEAVIR-PARTIAL-INLINING^FN^^ (386 samples, 1.75%)</title><rect x="455.0" y="869" width="20.7" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="458.03" y="879.5" ></text>
</g>
<g >
<title>0x11e87f0ab (6 samples, 0.03%)</title><rect x="161.7" y="1077" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="164.68" y="1087.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (4 samples, 0.02%)</title><rect x="132.7" y="693" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="135.66" y="703.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (7 samples, 0.03%)</title><rect x="450.2" y="1093" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="453.17" y="1103.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.01%)</title><rect x="139.2" y="677" width="0.1" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="142.18" y="687.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (66 samples, 0.30%)</title><rect x="236.9" y="901" width="3.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="239.87" y="911.5" ></text>
</g>
<g >
<title>`GC_find_header (2 samples, 0.01%)</title><rect x="478.3" y="693" width="0.1" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="481.33" y="703.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (7 samples, 0.03%)</title><rect x="475.0" y="773" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="477.97" y="783.5" ></text>
</g>
<g >
<title>0x11e697af9 (2 samples, 0.01%)</title><rect x="455.7" y="645" width="0.1" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="458.67" y="655.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (4 samples, 0.02%)</title><rect x="147.9" y="709" width="0.2" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="150.89" y="719.5" ></text>
</g>
<g >
<title>`CLONE-INITARGS^CLEAVIR-IR^((APPEND) (INSTRUCTION))^METHOD^^ (2 samples, 0.01%)</title><rect x="147.5" y="757" width="0.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="150.46" y="767.5" ></text>
</g>
<g >
<title>0x11af4440a (4 samples, 0.02%)</title><rect x="147.9" y="725" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="150.89" y="735.5" ></text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:AFTER) (T T))^SETFMETHOD^^ (5 samples, 0.02%)</title><rect x="159.2" y="1061" width="0.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="162.16" y="1071.5" ></text>
</g>
<g >
<title>`restoreFromMultipleValue0 (2 samples, 0.01%)</title><rect x="125.9" y="501" width="0.1" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="128.87" y="511.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (2 samples, 0.01%)</title><rect x="141.1" y="565" width="0.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="144.10" y="575.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.01%)</title><rect x="132.5" y="677" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="135.55" y="687.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="246.2" y="901" width="0.1" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="249.17" y="911.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1,756 samples, 7.95%)</title><rect x="20.1" y="597" width="93.8" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="23.10" y="607.5" >`MAKE-INSTA..</text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="421" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="149.44" y="431.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.01%)</title><rect x="146.4" y="197" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="149.44" y="207.5" ></text>
</g>
<g >
<title>0x11a5b60a8 (6 samples, 0.03%)</title><rect x="182.1" y="1029" width="0.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="185.14" y="1039.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (3 samples, 0.01%)</title><rect x="122.7" y="501" width="0.1" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="125.66" y="511.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (9 samples, 0.04%)</title><rect x="195.2" y="901" width="0.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="198.24" y="911.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (3 samples, 0.01%)</title><rect x="116.5" y="549" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="119.51" y="559.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="168.4" y="1045" width="0.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="171.41" y="1055.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (3 samples, 0.01%)</title><rect x="116.5" y="597" width="0.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="119.51" y="607.5" ></text>
</g>
<g >
<title>`INLINE-FUNCTION^CLEAVIR-PARTIAL-INLINING^((T T T T))^METHOD^^ (920 samples, 4.17%)</title><rect x="454.9" y="1077" width="49.1" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="457.87" y="1087.5" >`INL..</text>
</g>
<g >
<title>`GC_clear_stack (2 samples, 0.01%)</title><rect x="422.8" y="933" width="0.1" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="425.75" y="943.5" ></text>
</g>
<g >
<title>`codegen.lsp-codegen49^146^TOP-COMPILE-FILE (2 samples, 0.01%)</title><rect x="454.6" y="421" width="0.1" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="457.55" y="431.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (3,670 samples, 16.62%)</title><rect x="253.7" y="1013" width="196.1" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="256.71" y="1023.5" >`core::cl__mapc(gctools::..</text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.01%)</title><rect x="475.1" y="725" width="0.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="478.13" y="735.5" ></text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (4 samples, 0.02%)</title><rect x="128.1" y="613" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="131.11" y="623.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (2 samples, 0.01%)</title><rect x="146.0" y="661" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="148.96" y="671.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (9 samples, 0.04%)</title><rect x="444.6" y="901" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="447.61" y="911.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^107^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="981" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="457.50" y="991.5" ></text>
</g>
<g >
<title>0x11e84615a (2 samples, 0.01%)</title><rect x="145.8" y="725" width="0.1" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="148.80" y="735.5" ></text>
</g>
<g >
<title>`DELETE^COMMON-LISP^FN^^ (9 samples, 0.04%)</title><rect x="114.5" y="629" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="117.54" y="639.5" ></text>
</g>
<g >
<title>0x11b2d9b4b (9,244 samples, 41.87%)</title><rect x="10.0" y="3045" width="494.0" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="13.00" y="3055.5" >0x11b2d9b4b</text>
</g>
<g >
<title>0x11abcf1ae (3 samples, 0.01%)</title><rect x="267.5" y="997" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="270.55" y="1007.5" ></text>
</g>
<g >
<title>`core::core__sequence_start_end(gctools::smart_ptr&lt;core::T_O&gt;, g (2 samples, 0.01%)</title><rect x="466.8" y="597" width="0.1" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="469.79" y="607.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (9 samples, 0.04%)</title><rect x="184.1" y="901" width="0.4" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="187.07" y="911.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (2 samples, 0.01%)</title><rect x="212.4" y="949" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="215.45" y="959.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (17 samples, 0.08%)</title><rect x="116.4" y="629" width="0.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="119.35" y="639.5" ></text>
</g>
<g >
<title>0x11b2d9438 (9,244 samples, 41.87%)</title><rect x="10.0" y="3125" width="494.0" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="13.00" y="3135.5" >0x11b2d9438</text>
</g>
<g >
<title>`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="2149" width="494.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="13.00" y="2159.5" >`compile-file.lsp-compile-file52^181^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`ONE-POTENTIAL-INLINE^CLEAVIR-PARTIAL-INLINING^FN^^ (5,212 samples, 23.61%)</title><rect x="171.5" y="1109" width="278.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="174.46" y="1119.5" >`ONE-POTENTIAL-INLINE^CLEAVIR-PARTIAL..</text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="146.4" y="85" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="149.44" y="95.5" ></text>
</g>
<g >
<title>`pthread_getspecific (2 samples, 0.01%)</title><rect x="248.4" y="949" width="0.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="251.42" y="959.5" ></text>
</g>
<g >
<title>`__dynamic_cast (5 samples, 0.02%)</title><rect x="166.6" y="1029" width="0.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="169.65" y="1039.5" ></text>
</g>
<g >
<title>`TRANSLATE-INPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="475.4" y="821" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="478.45" y="831.5" ></text>
</g>
<g >
<title>0x11b1fc0da (8 samples, 0.04%)</title><rect x="342.2" y="981" width="0.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="345.21" y="991.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="1253" width="494.0" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" >`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`GC_malloc_kind_global (14 samples, 0.06%)</title><rect x="189.8" y="901" width="0.7" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="192.79" y="911.5" ></text>
</g>
<g >
<title>0x11af4440a (7 samples, 0.03%)</title><rect x="143.9" y="693" width="0.4" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="146.88" y="703.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="455.5" y="741" width="0.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="458.46" y="751.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (7 samples, 0.03%)</title><rect x="165.7" y="1013" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="168.68" y="1023.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (23 samples, 0.10%)</title><rect x="141.1" y="677" width="1.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="144.10" y="687.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (2 samples, 0.01%)</title><rect x="16.8" y="501" width="0.1" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="19.79" y="511.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="741" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="457.50" y="751.5" ></text>
</g>
<g >
<title>0x11e621b89 (2 samples, 0.01%)</title><rect x="475.1" y="693" width="0.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="478.13" y="703.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (14 samples, 0.06%)</title><rect x="15.2" y="565" width="0.7" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="18.18" y="575.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="149.9" y="677" width="0.1" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="152.86" y="687.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (5 samples, 0.02%)</title><rect x="130.1" y="677" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="133.09" y="687.5" ></text>
</g>
<g >
<title>0x11af4234c (8 samples, 0.04%)</title><rect x="13.5" y="645" width="0.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="16.47" y="655.5" ></text>
</g>
<g >
<title>0x11e697af9 (4 samples, 0.02%)</title><rect x="458.1" y="517" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="461.08" y="527.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (24 samples, 0.11%)</title><rect x="189.3" y="997" width="1.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="192.31" y="1007.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (6 samples, 0.03%)</title><rect x="20.8" y="533" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="23.80" y="543.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (7 samples, 0.03%)</title><rect x="183.6" y="933" width="0.4" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="186.59" y="943.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (6 samples, 0.03%)</title><rect x="155.2" y="837" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="158.21" y="847.5" ></text>
</g>
<g >
<title>`GC_allochblk (15 samples, 0.07%)</title><rect x="203.4" y="821" width="0.8" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="206.42" y="831.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (9,244 samples, 41.87%)</title><rect x="10.0" y="3973" width="494.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="13.00" y="3983.5" >`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo</text>
</g>
<g >
<title>`FIND-ENCLOSE-DESTINIES^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (12 samples, 0.05%)</title><rect x="453.7" y="1093" width="0.7" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="456.75" y="1103.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (3 samples, 0.01%)</title><rect x="215.6" y="933" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="218.60" y="943.5" ></text>
</g>
<g >
<title>0x11a5b6071 (10 samples, 0.05%)</title><rect x="200.0" y="981" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="203.00" y="991.5" ></text>
</g>
<g >
<title>`GC_mark_from (315 samples, 1.43%)</title><rect x="486.6" y="677" width="16.8" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="489.56" y="687.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (2 samples, 0.01%)</title><rect x="159.8" y="965" width="0.1" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="162.80" y="975.5" ></text>
</g>
<g >
<title>`core::cl__class_of(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.01%)</title><rect x="162.4" y="1061" width="0.1" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="165.37" y="1071.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.01%)</title><rect x="169.2" y="1061" width="0.1" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="172.16" y="1071.5" ></text>
</g>
<g >
<title>`CLONE-INSTRUCTION^CLEAVIR-IR^FN^^ (10 samples, 0.05%)</title><rect x="474.9" y="821" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="477.86" y="831.5" ></text>
</g>
<g >
<title>`compiler-conditions.lsp-compiler-conditions125^193^TOP-COMPILE- (9,244 samples, 41.87%)</title><rect x="10.0" y="2293" width="494.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="13.00" y="2303.5" >`compiler-conditions.lsp-compiler-conditions125^193^TOP-COMPILE-</text>
</g>
<g >
<title>0x11e8918c9 (2 samples, 0.01%)</title><rect x="464.0" y="645" width="0.1" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="467.01" y="655.5" ></text>
</g>
<g >
<title>`translate.lisp-translate451^815^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1365" width="494.0" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="13.00" y="1375.5" >`translate.lisp-translate451^815^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (11 samples, 0.05%)</title><rect x="464.5" y="565" width="0.6" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="467.55" y="575.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (2 samples, 0.01%)</title><rect x="17.9" y="565" width="0.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="20.91" y="575.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (4 samples, 0.02%)</title><rect x="469.4" y="581" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="472.41" y="591.5" ></text>
</g>
<g >
<title>0x11ab7fdea (5 samples, 0.02%)</title><rect x="451.8" y="1061" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="454.77" y="1071.5" ></text>
</g>
<g >
<title>`top.lsp-top130^378^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="3925" width="494.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="13.00" y="3935.5" >`top.lsp-top130^378^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`pthread_mutex_lock (8 samples, 0.04%)</title><rect x="433.1" y="949" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="436.07" y="959.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (16 samples, 0.07%)</title><rect x="136.0" y="613" width="0.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="138.97" y="623.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (18 samples, 0.08%)</title><rect x="177.4" y="1029" width="1.0" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="180.44" y="1039.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.01%)</title><rect x="127.8" y="565" width="0.2" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="130.85" y="575.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (1,510 samples, 6.84%)</title><rect x="27.9" y="341" width="80.7" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="30.90" y="351.5" >`GC_do_lo..</text>
</g>
<g >
<title>`startup(int, char**, bool&amp;, int&amp;, int&amp;) (9,244 samples, 41.87%)</title><rect x="10.0" y="4165" width="494.0" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="13.00" y="4175.5" >`startup(int, char**, bool&amp;, int&amp;, int&amp;)</text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (5 samples, 0.02%)</title><rect x="14.3" y="645" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="17.28" y="655.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (499 samples, 2.26%)</title><rect x="476.7" y="773" width="26.7" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="479.73" y="783.5" >`..</text>
</g>
<g >
<title>0x11af4234c (12 samples, 0.05%)</title><rect x="472.0" y="725" width="0.7" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="475.03" y="735.5" ></text>
</g>
<g >
<title>`GC_allocobj (1,644 samples, 7.45%)</title><rect x="22.5" y="453" width="87.9" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="25.51" y="463.5" >`GC_allocobj</text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (8 samples, 0.04%)</title><rect x="131.5" y="629" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="134.48" y="639.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (4 samples, 0.02%)</title><rect x="454.7" y="597" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="457.66" y="607.5" ></text>
</g>
<g >
<title>0x11d7624cb (9,244 samples, 41.87%)</title><rect x="10.0" y="2949" width="494.0" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="13.00" y="2959.5" >0x11d7624cb</text>
</g>
<g >
<title>`GC_generic_malloc_many (3 samples, 0.01%)</title><rect x="215.9" y="965" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="218.92" y="975.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (3 samples, 0.01%)</title><rect x="111.4" y="437" width="0.1" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="114.38" y="447.5" ></text>
</g>
<g >
<title>`TRANSLATE-INPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.01%)</title><rect x="145.7" y="773" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="148.75" y="783.5" ></text>
</g>
<g >
<title>`cc_enclose (3 samples, 0.01%)</title><rect x="148.7" y="693" width="0.1" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="151.69" y="703.5" ></text>
</g>
<g >
<title>`GC_clear_hdr_marks (10 samples, 0.05%)</title><rect x="25.0" y="373" width="0.5" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="27.96" y="383.5" ></text>
</g>
<g >
<title>`compiler-conditions.lsp-compiler-conditions125^193^TOP-COMPILE- (7 samples, 0.03%)</title><rect x="454.5" y="629" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="457.50" y="639.5" ></text>
</g>
<g >
<title>`GC_malloc (6 samples, 0.03%)</title><rect x="389.8" y="981" width="0.3" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="392.78" y="991.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (6 samples, 0.03%)</title><rect x="116.7" y="533" width="0.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="119.73" y="543.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (4 samples, 0.02%)</title><rect x="151.7" y="741" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="154.68" y="751.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (3 samples, 0.01%)</title><rect x="130.2" y="453" width="0.2" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="133.20" y="463.5" ></text>
</g>
<g >
<title>`ALL-PARAMETERS-REQUIRED-P^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="253.4" y="1045" width="0.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="256.44" y="1055.5" ></text>
</g>
<g >
<title>`inline-function.lisp-inline-function413^82^TOP-COMPILE-FILE (2,722 samples, 12.33%)</title><rect x="10.3" y="1061" width="145.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="13.32" y="1071.5" >`inline-function.l..</text>
</g>
<g >
<title>`GC_push_contents_hdr (2 samples, 0.01%)</title><rect x="108.5" y="325" width="0.1" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="111.50" y="335.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (2 samples, 0.01%)</title><rect x="146.4" y="69" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="149.44" y="79.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (14 samples, 0.06%)</title><rect x="189.8" y="885" width="0.7" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="192.79" y="895.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (433 samples, 1.96%)</title><rect x="225.8" y="965" width="23.2" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="228.81" y="975.5" >`..</text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (7 samples, 0.03%)</title><rect x="131.5" y="581" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="134.48" y="591.5" ></text>
</g>
<g >
<title>`core::cl__gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (5 samples, 0.02%)</title><rect x="356.6" y="981" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="359.64" y="991.5" ></text>
</g>
<g >
<title>`copy-function.lisp-copy-function411^48^TOP-COMPILE-FILE (329 samples, 1.49%)</title><rect x="455.4" y="789" width="17.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="458.35" y="799.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (70 samples, 0.32%)</title><rect x="236.7" y="949" width="3.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="239.71" y="959.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1,036 samples, 4.69%)</title><rect x="196.3" y="997" width="55.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="199.25" y="1007.5" >`MAPC..</text>
</g>
<g >
<title>0x11af4440a (2 samples, 0.01%)</title><rect x="457.6" y="485" width="0.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="460.60" y="495.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (6 samples, 0.03%)</title><rect x="247.1" y="821" width="0.4" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="250.13" y="831.5" ></text>
</g>
<g >
<title>`core::cl__gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (3 samples, 0.01%)</title><rect x="447.6" y="997" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="450.60" y="1007.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (2 samples, 0.01%)</title><rect x="153.5" y="821" width="0.1" height="15.0" fill="rgb(250,124,124)" rx="2" ry="2" />
<text  x="156.50" y="831.5" ></text>
</g>
<g >
<title>`GC_alloc_large (15 samples, 0.07%)</title><rect x="203.4" y="837" width="0.8" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="206.42" y="847.5" ></text>
</g>
<g >
<title>`unwind_phase2 (3 samples, 0.01%)</title><rect x="445.4" y="901" width="0.1" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="448.36" y="911.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="709" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="457.50" y="719.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="144.1" y="661" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="147.15" y="671.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (9,244 samples, 41.87%)</title><rect x="10.0" y="3957" width="494.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="13.00" y="3967.5" >`CATCH-LAMBDA^CC-GENERATE-AST^FN^^</text>
</g>
<g >
<title>`GC_malloc (7 samples, 0.03%)</title><rect x="412.6" y="965" width="0.4" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="415.60" y="975.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (5 samples, 0.02%)</title><rect x="141.1" y="613" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="144.10" y="623.5" ></text>
</g>
<g >
<title>`DELETE-LIST^CORE^FN^^ (4 samples, 0.02%)</title><rect x="150.3" y="773" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="153.29" y="783.5" ></text>
</g>
<g >
<title>`INSTRUCTION-OWNER^CLEAVIR-PARTIAL-INLINING^FN^^ (576 samples, 2.61%)</title><rect x="357.0" y="997" width="30.7" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="359.96" y="1007.5" >`I..</text>
</g>
<g >
<title>0x11af2e27d (2 samples, 0.01%)</title><rect x="125.9" y="517" width="0.1" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="128.87" y="527.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (3 samples, 0.01%)</title><rect x="121.2" y="565" width="0.2" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="124.22" y="575.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (8 samples, 0.04%)</title><rect x="144.3" y="677" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="147.31" y="687.5" ></text>
</g>
<g >
<title>`core::cl__gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (2 samples, 0.01%)</title><rect x="166.2" y="1029" width="0.1" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="169.22" y="1039.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setup(unsigned int, gctools::smart_ptr&lt;core: (4 samples, 0.02%)</title><rect x="164.5" y="1013" width="0.2" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="167.51" y="1023.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (52 samples, 0.24%)</title><rect x="384.3" y="981" width="2.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="387.27" y="991.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.01%)</title><rect x="146.4" y="181" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="149.44" y="191.5" ></text>
</g>
<g >
<title>`DELETE-LIST^CORE^FN^^ (2 samples, 0.01%)</title><rect x="152.5" y="805" width="0.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="155.54" y="815.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (5 samples, 0.02%)</title><rect x="158.1" y="965" width="0.3" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="161.15" y="975.5" ></text>
</g>
<g >
<title>`compiler-conditions.lsp-compiler-conditions125^205^TOP-COMPILE- (9,244 samples, 41.87%)</title><rect x="10.0" y="3413" width="494.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="13.00" y="3423.5" >`compiler-conditions.lsp-compiler-conditions125^205^TOP-COMPILE-</text>
</g>
<g >
<title>`core::lisp_multipleValues() (10 samples, 0.05%)</title><rect x="275.4" y="965" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="278.35" y="975.5" ></text>
</g>
<g >
<title>`GC_mark_local (12,835 samples, 58.13%)</title><rect x="504.0" y="4165" width="686.0" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="507.04" y="4175.5" >`GC_mark_local</text>
</g>
<g >
<title>`gctools::Header_s::validate() const (5 samples, 0.02%)</title><rect x="167.2" y="1013" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="170.23" y="1023.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (12 samples, 0.05%)</title><rect x="157.9" y="1013" width="0.6" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="160.88" y="1023.5" ></text>
</g>
<g >
<title>0x11ab7fdea (18 samples, 0.08%)</title><rect x="159.1" y="1077" width="0.9" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="162.06" y="1087.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.01%)</title><rect x="252.8" y="1045" width="0.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="255.80" y="1055.5" ></text>
</g>
<g >
<title>0x11a5b60a8 (2 samples, 0.01%)</title><rect x="193.2" y="997" width="0.1" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="196.15" y="1007.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (2 samples, 0.01%)</title><rect x="146.0" y="677" width="0.1" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="148.96" y="687.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="405" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="149.44" y="415.5" ></text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (7 samples, 0.03%)</title><rect x="20.4" y="533" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="23.42" y="543.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1,675 samples, 7.59%)</title><rect x="984.1" y="4117" width="89.5" height="15.0" fill="rgb(250,122,122)" rx="2" ry="2" />
<text  x="987.08" y="4127.5" >`GC_header..</text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (3 samples, 0.01%)</title><rect x="132.3" y="629" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="135.33" y="639.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.01%)</title><rect x="151.7" y="725" width="0.1" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="154.73" y="735.5" ></text>
</g>
<g >
<title>0x11d7053f7 (9,244 samples, 41.87%)</title><rect x="10.0" y="2917" width="494.0" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="13.00" y="2927.5" >0x11d7053f7</text>
</g>
<g >
<title>0x11a4fe174 (12 samples, 0.05%)</title><rect x="170.3" y="1045" width="0.6" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="173.28" y="1055.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (3 samples, 0.01%)</title><rect x="164.6" y="965" width="0.1" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="167.56" y="975.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.01%)</title><rect x="466.3" y="581" width="0.1" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="469.31" y="591.5" ></text>
</g>
<g >
<title>`0x1105750e6 (2 samples, 0.01%)</title><rect x="253.6" y="1013" width="0.1" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="256.60" y="1023.5" ></text>
</g>
<g >
<title>`ADD-TO-MAPPING^CLEAVIR-PARTIAL-INLINING^((HASH-TABLE T T))^METH (2 samples, 0.01%)</title><rect x="131.1" y="613" width="0.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="134.11" y="623.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (45 samples, 0.20%)</title><rect x="147.8" y="757" width="2.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="150.78" y="767.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (4 samples, 0.02%)</title><rect x="15.2" y="485" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="18.24" y="495.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (2 samples, 0.01%)</title><rect x="462.5" y="533" width="0.1" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="465.46" y="543.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.01%)</title><rect x="146.2" y="757" width="0.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="149.18" y="767.5" ></text>
</g>
<g >
<title>`saveToMultipleValue0 (3 samples, 0.01%)</title><rect x="232.6" y="933" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="235.65" y="943.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (5 samples, 0.02%)</title><rect x="121.2" y="613" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="124.16" y="623.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (33 samples, 0.15%)</title><rect x="476.7" y="725" width="1.8" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="479.73" y="735.5" ></text>
</g>
<g >
<title>`DELETE-LIST^CORE^FN^^ (7 samples, 0.03%)</title><rect x="129.3" y="645" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="132.34" y="655.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.01%)</title><rect x="144.6" y="613" width="0.1" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="147.63" y="623.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (5 samples, 0.02%)</title><rect x="116.8" y="517" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="119.78" y="527.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (6 samples, 0.03%)</title><rect x="467.6" y="645" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="470.59" y="655.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="117.4" y="661" width="0.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="120.42" y="671.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (4 samples, 0.02%)</title><rect x="146.6" y="181" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="149.55" y="191.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (40 samples, 0.18%)</title><rect x="135.6" y="645" width="2.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="138.65" y="655.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (5 samples, 0.02%)</title><rect x="235.2" y="917" width="0.2" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="238.16" y="927.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.01%)</title><rect x="139.5" y="581" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="142.55" y="591.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.01%)</title><rect x="117.6" y="597" width="0.1" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="120.58" y="607.5" ></text>
</g>
<g >
<title>`tlv_get_addr (7 samples, 0.03%)</title><rect x="345.6" y="933" width="0.4" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="348.63" y="943.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (2 samples, 0.01%)</title><rect x="13.2" y="661" width="0.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="16.21" y="671.5" ></text>
</g>
<g >
<title>0x11e891634 (3 samples, 0.01%)</title><rect x="19.4" y="629" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="22.41" y="639.5" ></text>
</g>
<g >
<title>`wrapped_cl__append_VaList_sp (84 samples, 0.38%)</title><rect x="282.5" y="981" width="4.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="285.51" y="991.5" ></text>
</g>
<g >
<title>0x11e8918c9 (2 samples, 0.01%)</title><rect x="147.5" y="789" width="0.1" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="150.46" y="799.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (8 samples, 0.04%)</title><rect x="444.7" y="885" width="0.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="447.66" y="895.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (3 samples, 0.01%)</title><rect x="130.2" y="501" width="0.2" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="133.20" y="511.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapcar_T_spList_sp (4 samples, 0.02%)</title><rect x="248.7" y="949" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="251.74" y="959.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^107^TOP-COMPILE-FILE (7 samples, 0.03%)</title><rect x="454.5" y="949" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="457.50" y="959.5" ></text>
</g>
<g >
<title>`ALLOCATE-NEW-INSTANCE^CORE^FN^^ (14 samples, 0.06%)</title><rect x="122.2" y="565" width="0.7" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="125.18" y="575.5" ></text>
</g>
<g >
<title>`compiler-conditions.lsp-compiler-conditions125^193^TOP-COMPILE- (6 samples, 0.03%)</title><rect x="146.4" y="325" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="149.44" y="335.5" ></text>
</g>
<g >
<title>`NTHCDR^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="240.8" y="933" width="0.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="243.77" y="943.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.01%)</title><rect x="131.4" y="581" width="0.1" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="134.37" y="591.5" ></text>
</g>
<g >
<title>`wrapped_core__vaslist_length_VaList_sp (2 samples, 0.01%)</title><rect x="149.3" y="645" width="0.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="152.28" y="655.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (8 samples, 0.04%)</title><rect x="465.6" y="517" width="0.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="468.56" y="527.5" ></text>
</g>
<g >
<title>0x11abd701e (4 samples, 0.02%)</title><rect x="273.2" y="997" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="276.21" y="1007.5" ></text>
</g>
<g >
<title>`compile.lsp-compile50^38^TOP-COMPILE-FILE (6 samples, 0.03%)</title><rect x="146.4" y="549" width="0.4" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="149.44" y="559.5" ></text>
</g>
<g >
<title>`GC_add_to_black_list_stack (38 samples, 0.17%)</title><rect x="1071.2" y="4101" width="2.1" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="1074.25" y="4111.5" ></text>
</g>
<g >
<title>`APPLY^COMMON-LISP^FN^^ (26 samples, 0.12%)</title><rect x="110.6" y="533" width="1.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="113.64" y="543.5" ></text>
</g>
<g >
<title>`ENSURE-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="16.0" y="549" width="0.1" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="19.04" y="559.5" ></text>
</g>
<g >
<title>0x11a394071 (5 samples, 0.02%)</title><rect x="245.5" y="917" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="248.48" y="927.5" ></text>
</g>
<g >
<title>0x11e621b89 (2 samples, 0.01%)</title><rect x="144.7" y="645" width="0.1" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="147.73" y="655.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (5 samples, 0.02%)</title><rect x="134.6" y="677" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="137.63" y="687.5" ></text>
</g>
<g >
<title>`wrapped_cl__gethash_T_spHashTableBase_spT_sp (9 samples, 0.04%)</title><rect x="387.3" y="981" width="0.4" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="390.26" y="991.5" ></text>
</g>
<g >
<title>`core::clasp_to_fixnum(gctools::smart_ptr&lt;core::Integer_O&gt;) (2 samples, 0.01%)</title><rect x="225.7" y="917" width="0.1" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="228.70" y="927.5" ></text>
</g>
<g >
<title>`TRANSLATE-INPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.01%)</title><rect x="130.5" y="677" width="0.1" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="133.52" y="687.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.01%)</title><rect x="115.5" y="549" width="0.1" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="118.50" y="559.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (3 samples, 0.01%)</title><rect x="386.6" y="965" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="389.62" y="975.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUT-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (12 samples, 0.05%)</title><rect x="139.4" y="693" width="0.6" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="142.39" y="703.5" ></text>
</g>
<g >
<title>`TRANSLATE-OUTPUTS-FOR-COPY^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.01%)</title><rect x="146.3" y="789" width="0.1" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="149.28" y="799.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (30 samples, 0.14%)</title><rect x="354.2" y="965" width="1.6" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="357.18" y="975.5" ></text>
</g>
<g >
<title>0x11e621b89 (9 samples, 0.04%)</title><rect x="460.2" y="501" width="0.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="463.16" y="511.5" ></text>
</g>
<g >
<title>`INPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (9 samples, 0.04%)</title><rect x="451.2" y="1045" width="0.5" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="454.24" y="1055.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (339 samples, 1.54%)</title><rect x="28.0" y="325" width="18.1" height="15.0" fill="rgb(248,121,121)" rx="2" ry="2" />
<text  x="30.96" y="335.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (13 samples, 0.06%)</title><rect x="177.5" y="981" width="0.7" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="180.55" y="991.5" ></text>
</g>
<g >
<title>`REMOVE-ENCLOSE-FROM-FUNCTION-DAG^CLEAVIR-HIR-TRANSFORMATIONS^FN (10 samples, 0.05%)</title><rect x="450.0" y="1109" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="453.01" y="1119.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (3 samples, 0.01%)</title><rect x="17.9" y="613" width="0.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="20.86" y="623.5" ></text>
</g>
<g >
<title>`cc_enclose (5 samples, 0.02%)</title><rect x="144.5" y="661" width="0.2" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="147.47" y="671.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (5 samples, 0.02%)</title><rect x="130.1" y="645" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="133.09" y="655.5" ></text>
</g>
<g >
<title>`cc_enclose (10 samples, 0.05%)</title><rect x="153.2" y="885" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="156.18" y="895.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (17 samples, 0.08%)</title><rect x="170.0" y="1061" width="0.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="173.01" y="1071.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.01%)</title><rect x="454.8" y="517" width="0.1" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="457.76" y="527.5" ></text>
</g>
<g >
<title>0x11a5b6071 (3 samples, 0.01%)</title><rect x="187.6" y="1013" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="190.65" y="1023.5" ></text>
</g>
<g >
<title>`epilogue-cclasp.lisp-epilogue-cclasp460^1^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="4021" width="494.0" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="13.00" y="4031.5" >`epilogue-cclasp.lisp-epilogue-cclasp460^1^TOP-COMPILE-FILE</text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (3 samples, 0.01%)</title><rect x="164.6" y="981" width="0.1" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="167.56" y="991.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (2 samples, 0.01%)</title><rect x="159.3" y="1029" width="0.1" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="162.32" y="1039.5" ></text>
</g>
<g >
<title>`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE (9,244 samples, 41.87%)</title><rect x="10.0" y="1525" width="494.0" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="13.00" y="1535.5" >`cmpliteral.lsp-cmpliteral46^656^TOP-COMPILE-FILE</text>
</g>
<g >
<title>0x11e697af9 (18 samples, 0.08%)</title><rect x="459.7" y="549" width="1.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="462.74" y="559.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1,648 samples, 7.46%)</title><rect x="22.3" y="501" width="88.1" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="25.35" y="511.5" >`GC_malloc..</text>
</g>
</g>
</svg>
