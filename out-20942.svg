<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="6486" onload="init(evt)" viewBox="0 0 1200 6486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="6486.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="6469" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="6469" > </text>
<g id="frames">
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (2 samples, 0.08%)</title><rect x="869.9" y="5765" width="0.9" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="872.89" y="5775.5" ></text>
</g>
<g >
<title>`PROCESS-INIT-PARAMETER^CLEAVIR-CST-TO-AST^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="3573" width="63.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="170.24" y="3583.5" >`PROCES..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="401.0" y="3621" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="403.99" y="3631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (304 samples, 12.09%)</title><rect x="130.6" y="4821" width="142.7" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="133.63" y="4831.5" >`core::Funcallable..</text>
</g>
<g >
<title>`GC_generic_malloc (1 samples, 0.04%)</title><rect x="308.1" y="5733" width="0.4" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="311.05" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="405.2" y="5237" width="0.9" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="408.21" y="5247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (40 samples, 1.59%)</title><rect x="232.0" y="3397" width="18.8" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="235.01" y="3407.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="55.1" y="5541" width="0.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="58.06" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4117" width="0.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="408.68" y="4127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (11 samples, 0.44%)</title><rect x="417.4" y="4469" width="5.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="420.41" y="4479.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (3 samples, 0.12%)</title><rect x="534.8" y="5829" width="1.4" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="537.76" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="56.5" y="5765" width="0.4" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="59.47" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="286.9" y="4997" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="289.93" y="5007.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="960.5" y="5781" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="963.48" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="352.6" y="5445" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="355.64" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'IF) T T T))^METHOD (5 samples, 0.20%)</title><rect x="168.2" y="1493" width="2.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="171.18" y="1503.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.9" y="2309" width="0.5" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="412.90" y="2319.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="247.5" y="517" width="1.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="250.50" y="527.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.4" y="1877" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="428.39" y="1887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="276.1" y="4853" width="10.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="279.13" y="4863.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="251.3" y="3253" width="0.9" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="254.26" y="3263.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.4" y="2421" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="412.44" y="2431.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="281.8" y="3061" width="0.4" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="284.77" y="3071.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (2 samples, 0.08%)</title><rect x="601.9" y="5461" width="0.9" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="604.88" y="5471.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="423.0" y="3173" width="1.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="426.05" y="3183.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="828.6" y="5605" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="831.58" y="5615.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm (1 samples, 0.04%)</title><rect x="930.9" y="5861" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="933.91" y="5871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="422.1" y="2709" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="425.11" y="2719.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolutionWrapperPass::runOnFunction(llvm::Function&amp; (3 samples, 0.12%)</title><rect x="929.5" y="5893" width="1.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="932.50" y="5903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="531.5" y="5733" width="0.9" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="534.47" y="5743.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::Function_O&gt; gctools::GCObjectAppropri (1 samples, 0.04%)</title><rect x="604.2" y="5429" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="607.22" y="5439.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="295.8" y="2021" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="298.85" y="2031.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="294.0" y="5397" width="3.3" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="296.97" y="5407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="390.7" y="3349" width="1.4" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="393.66" y="3359.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.04%)</title><rect x="842.7" y="5749" width="0.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="845.67" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="312.7" y="5605" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="315.74" y="5615.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (37 samples, 1.47%)</title><rect x="435.3" y="5653" width="17.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="438.25" y="5663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="370.9" y="5813" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="373.95" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (336 samples, 13.37%)</title><rect x="129.7" y="5413" width="157.7" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="132.69" y="5423.5" >`INTERPRETED-DISCRIM..</text>
</g>
<g >
<title>`(anonymous namespace)::PruneEH::runOnSCC(llvm::CallGraphSCC&amp;) (1 samples, 0.04%)</title><rect x="687.8" y="5909" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="690.77" y="5919.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (5 samples, 0.20%)</title><rect x="549.3" y="5797" width="2.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="552.31" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.2" y="4037" width="0.4" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="424.17" y="4047.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="295.8" y="1829" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="298.85" y="1839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="252.2" y="3109" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="255.20" y="3119.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1:: (1 samples, 0.04%)</title><rect x="579.3" y="5749" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="582.35" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="314.2" y="5317" width="0.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="317.15" y="5327.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="294.9" y="3973" width="1.9" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="297.91" y="3983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3797" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="404.93" y="3807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="405.2" y="5013" width="0.9" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="408.21" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="384.6" y="4229" width="3.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="387.56" y="4239.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="91.7" y="3765" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="94.67" y="3775.5" ></text>
</g>
<g >
<title>`llvm::Value::getType() const (1 samples, 0.04%)</title><rect x="321.2" y="5013" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="324.19" y="5023.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T  (2 samples, 0.08%)</title><rect x="622.5" y="5237" width="1.0" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="625.53" y="5247.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="622.5" y="5157" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="625.53" y="5167.5" ></text>
</g>
<g >
<title>`core::clasp_namestring(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="48.5" y="5461" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="51.49" y="5471.5" ></text>
</g>
<g >
<title>`HOIST-AST^CLASP-CLEAVIR^FN^^ (8 samples, 0.32%)</title><rect x="314.2" y="5557" width="3.7" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="317.15" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.08%)</title><rect x="401.0" y="2789" width="0.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="403.99" y="2799.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::FindKey(llvm::StringRef) const (1 samples, 0.04%)</title><rect x="704.2" y="5813" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="707.20" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="294.0" y="5061" width="2.8" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="296.97" y="5071.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="295.8" y="2165" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="298.85" y="2175.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (3 samples, 0.12%)</title><rect x="36.3" y="4245" width="1.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="39.28" y="4255.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="1893" width="0.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="428.86" y="1903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="427.3" y="1989" width="0.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="430.27" y="1999.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="741" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="171.18" y="751.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="400.0" y="4341" width="2.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="403.05" y="4351.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="123.1" y="2405" width="1.4" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="126.12" y="2415.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1941" width="5.6" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="236.89" y="1951.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="381.3" y="4645" width="0.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="384.27" y="4655.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (43 samples, 1.71%)</title><rect x="252.2" y="3573" width="20.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="255.20" y="3583.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="377.0" y="5765" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="380.05" y="5775.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="300.1" y="5861" width="0.4" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="303.07" y="5871.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (37 samples, 1.47%)</title><rect x="435.3" y="5557" width="17.3" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="438.25" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="390.7" y="3397" width="1.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="393.66" y="3407.5" ></text>
</g>
<g >
<title>0x11a477094 (5 samples, 0.20%)</title><rect x="180.4" y="325" width="2.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="183.38" y="335.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="4181" width="2.8" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="296.97" y="4191.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="287.9" y="4901" width="0.9" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="290.87" y="4911.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getTerminator() const (1 samples, 0.04%)</title><rect x="933.7" y="5829" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="936.72" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="424.5" y="3189" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="427.46" y="3199.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET*) T T T))^METH (9 samples, 0.36%)</title><rect x="235.3" y="805" width="4.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="238.30" y="815.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="278.9" y="773" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="281.95" y="783.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.04%)</title><rect x="832.8" y="5717" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="835.81" y="5727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="407.6" y="5029" width="3.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="410.56" y="5039.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="240.5" y="3141" width="10.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="243.46" y="3151.5" ></text>
</g>
<g >
<title>0x122631094 (3 samples, 0.12%)</title><rect x="279.4" y="1301" width="1.4" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="282.42" y="1311.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (11 samples, 0.44%)</title><rect x="388.3" y="4309" width="5.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="391.31" y="4319.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::reference_raw_(core::Symbol_O*, gcto (1 samples, 0.04%)</title><rect x="298.7" y="5477" width="0.4" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="301.66" y="5487.5" ></text>
</g>
<g >
<title>0x1225e5094 (3 samples, 0.12%)</title><rect x="165.8" y="2005" width="1.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="168.83" y="2015.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="1941" width="0.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="126.59" y="1951.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (24 samples, 0.95%)</title><rect x="16.6" y="4853" width="11.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="19.57" y="4863.5" ></text>
</g>
<g >
<title>`core::ext__class_unboundp(gctools::smart_ptr&lt;core::ClassHolder_ (1 samples, 0.04%)</title><rect x="420.2" y="1893" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="423.23" y="1903.5" ></text>
</g>
<g >
<title>`THES-&gt;TYPEQS^CLEAVIR-KILDALL-TYPE-INFERENCE^FN^^ (1 samples, 0.04%)</title><rect x="344.2" y="4837" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="347.19" y="4847.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="384.6" y="4261" width="3.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="387.56" y="4271.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="427.3" y="3493" width="4.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="430.27" y="3503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="247.5" y="277" width="1.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="250.50" y="287.5" ></text>
</g>
<g >
<title>`wrapped_cl__gethash_T_spHashTableBase_spT_sp (1 samples, 0.04%)</title><rect x="367.2" y="5669" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="370.19" y="5679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="240.5" y="2853" width="0.9" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="243.46" y="2863.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::makeUniqueName(llvm::Value*, llvm::Smal (1 samples, 0.04%)</title><rect x="769.9" y="5765" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="772.91" y="5775.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="623.0" y="5125" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="626.00" y="5135.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.04%)</title><rect x="125.0" y="1733" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="128.00" y="1743.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (1 samples, 0.04%)</title><rect x="844.1" y="5813" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="847.07" y="5823.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="410.8" y="4021" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="413.84" y="4031.5" ></text>
</g>
<g >
<title>`MAKE-SETF-FDEFINITION-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.04%)</title><rect x="434.3" y="5573" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="437.31" y="5583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="423.5" y="2085" width="1.0" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="426.52" y="2095.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (95 samples, 3.78%)</title><rect x="12.3" y="5829" width="44.6" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="15.35" y="5839.5" >`COM..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="379.4" y="5077" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="382.40" y="5087.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="3781" width="4.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="279.60" y="3791.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="708.9" y="5781" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="711.89" y="5791.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (2 samples, 0.08%)</title><rect x="290.2" y="5445" width="1.0" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="293.21" y="5455.5" ></text>
</g>
<g >
<title>`SCANNER-ACTION^CONCRETE-SYNTAX-TREE^((T T T CONS T))^METHOD^^ (2 samples, 0.08%)</title><rect x="121.2" y="3605" width="1.0" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="124.24" y="3615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="172.4" y="53" width="4.7" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="175.40" y="63.5" ></text>
</g>
<g >
<title>`ADD-CREATOR^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="311.8" y="5717" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="314.81" y="5727.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (9 samples, 0.36%)</title><rect x="751.1" y="5797" width="4.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="754.14" y="5807.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="46.6" y="5525" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="49.61" y="5535.5" ></text>
</g>
<g >
<title>`core::type_of_decide_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="233.4" y="2149" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="236.42" y="2159.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="168.2" y="1013" width="1.9" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="171.18" y="1023.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="662.4" y="5573" width="0.5" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="665.43" y="5583.5" ></text>
</g>
<g >
<title>`MAKE-RETURN-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="343.3" y="4837" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="346.25" y="4847.5" ></text>
</g>
<g >
<title>`isBlockInLCSSAForm(llvm::Loop const&amp;, llvm::BasicBlock const&amp;,  (1 samples, 0.04%)</title><rect x="920.6" y="5861" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="923.58" y="5871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="413.7" y="4469" width="1.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="416.66" y="4479.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="170.5" y="1589" width="1.0" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="173.53" y="1599.5" ></text>
</g>
<g >
<title>`DO-MEMORY-RAMP^CORE^FN^^ (1,322 samples, 52.59%)</title><rect x="57.4" y="5957" width="620.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="60.41" y="5967.5" >`DO-MEMORY-RAMP^CORE^FN^^</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="88.4" y="4117" width="3.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="91.39" y="4127.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.4" y="2565" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="412.44" y="2575.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="52.7" y="3941" width="1.9" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="55.71" y="3951.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="3173" width="4.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="279.60" y="3183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4789" width="0.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="408.68" y="4799.5" ></text>
</g>
<g >
<title>`core::core__sl_boundp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="358.7" y="5749" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="361.74" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="417.4" y="1717" width="2.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="420.41" y="1727.5" ></text>
</g>
<g >
<title>`CST-FROM-ELEMENT^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="313.7" y="5429" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="316.68" y="5439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.3" y="1237" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="430.27" y="1247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.0" y="2613" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="411.97" y="2623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.4" y="1925" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="428.39" y="1935.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (23 samples, 0.91%)</title><rect x="423.0" y="4245" width="10.8" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="426.05" y="4255.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="36.3" y="4165" width="1.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="39.28" y="4175.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.04%)</title><rect x="567.6" y="5717" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="570.61" y="5727.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="202.9" y="1109" width="1.4" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="205.91" y="1119.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="421.6" y="2885" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="424.64" y="2895.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="400.0" y="4597" width="2.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="403.05" y="4607.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (3 samples, 0.12%)</title><rect x="752.1" y="5701" width="1.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="755.08" y="5711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="233.9" y="565" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="236.89" y="575.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.04%)</title><rect x="340.0" y="4597" width="0.4" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="342.97" y="4607.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="268.6" y="1221" width="3.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="271.62" y="1231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="393.5" y="4053" width="0.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="396.48" y="4063.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="429.1" y="2293" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="432.15" y="2303.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="276.6" y="1093" width="2.8" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="279.60" y="1103.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (2 samples, 0.08%)</title><rect x="725.8" y="5797" width="0.9" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="728.79" y="5807.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CALL-AST-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="124.1" y="1333" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="127.06" y="1343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="393.5" y="4117" width="0.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="396.48" y="4127.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="423.0" y="2661" width="1.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="426.05" y="2671.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (3 samples, 0.12%)</title><rect x="408.0" y="4357" width="1.4" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="411.03" y="4367.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.7" y="1557" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="430.74" y="1567.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="52.2" y="4805" width="2.9" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="55.24" y="4815.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="281.3" y="3237" width="1.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="284.30" y="3247.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="407.6" y="5253" width="3.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="410.56" y="5263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="123.6" y="965" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="126.59" y="975.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="320.7" y="5365" width="1.0" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="323.72" y="5375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="401.0" y="2805" width="0.9" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="403.99" y="2815.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="1461" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="423.70" y="1471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="3621" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="414.78" y="3631.5" ></text>
</g>
<g >
<title>`wrapped_getInt64Ty_llvm__LLVMContext_ (1 samples, 0.04%)</title><rect x="351.2" y="5317" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="354.23" y="5327.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="336.2" y="4341" width="1.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="339.21" y="4351.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="177.1" y="469" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="180.10" y="479.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (48 samples, 1.91%)</title><rect x="324.5" y="5125" width="22.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="327.48" y="5135.5" >`..</text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (11 samples, 0.44%)</title><rect x="276.1" y="4389" width="5.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="279.13" y="4399.5" ></text>
</g>
<g >
<title>`BUILD-FUNCTION-DAG^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (5 samples, 0.20%)</title><rect x="560.1" y="5829" width="2.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="563.10" y="5839.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;std::__1::pair&lt;llvm::DomTreeNodeBase&lt;llvm (1 samples, 0.04%)</title><rect x="790.1" y="5813" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="793.10" y="5823.5" ></text>
</g>
<g >
<title>`IRC-SETF-FDEFINITION^COMPILER^FN^^ (3 samples, 0.12%)</title><rect x="666.7" y="5637" width="1.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="669.65" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3157" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="414.78" y="3167.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'BLOCK) T T T))^MET (4 samples, 0.16%)</title><rect x="165.4" y="3413" width="1.8" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="168.36" y="3423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (22 samples, 0.88%)</title><rect x="384.1" y="4661" width="10.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="387.09" y="4671.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm:: (1 samples, 0.04%)</title><rect x="645.1" y="5237" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="648.06" y="5247.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (52 samples, 2.07%)</title><rect x="379.4" y="5493" width="24.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="382.40" y="5503.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="124.5" y="1637" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="127.53" y="1647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1573" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="428.86" y="1583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="279.4" y="549" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="282.42" y="559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="1589" width="4.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="279.60" y="1599.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="52.7" y="3765" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="55.71" y="3775.5" ></text>
</g>
<g >
<title>`llvm::GVN::ValueTable::assignExpNewValueNum(llvm::GVN::Expressi (1 samples, 0.04%)</title><rect x="823.9" y="5781" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="826.89" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="167.7" y="2229" width="10.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="170.71" y="2239.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.08%)</title><rect x="143.3" y="4309" width="0.9" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="146.30" y="4319.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="633.3" y="5333" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="636.33" y="5343.5" ></text>
</g>
<g >
<title>`unw_init_local (1 samples, 0.04%)</title><rect x="125.0" y="1685" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="128.00" y="1695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (37 samples, 1.47%)</title><rect x="416.5" y="5173" width="17.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="419.48" y="5183.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.04%)</title><rect x="284.1" y="1061" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="287.11" y="1071.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="398.2" y="2805" width="0.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="401.17" y="2815.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="165.8" y="2789" width="1.4" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="168.83" y="2799.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="29.7" y="4949" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="32.71" y="4959.5" ></text>
</g>
<g >
<title>`core::cl__write_sequence(gctools::smart_ptr&lt;core::T_O&gt;, gctools (1 samples, 0.04%)</title><rect x="42.9" y="4773" width="0.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="45.86" y="4783.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (10 samples, 0.40%)</title><rect x="463.4" y="5829" width="4.7" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="466.41" y="5839.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::findAlignmentLowerBound(llvm::AlignTypeEnum,  (1 samples, 0.04%)</title><rect x="883.0" y="5813" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="886.03" y="5823.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (2 samples, 0.08%)</title><rect x="234.4" y="533" width="0.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="237.36" y="543.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="178.0" y="2277" width="2.4" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="181.04" y="2287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="314.2" y="5269" width="0.9" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="317.15" y="5279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="421.2" y="4197" width="0.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="424.17" y="4207.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="287.4" y="4837" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="290.40" y="4847.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="393.5" y="3781" width="0.9" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="396.48" y="3791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (52 samples, 2.07%)</title><rect x="379.4" y="5365" width="24.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="382.40" y="5375.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (57 samples, 2.27%)</title><rect x="204.3" y="965" width="26.8" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="207.32" y="975.5" >`..</text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (2 samples, 0.08%)</title><rect x="843.1" y="5781" width="1.0" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="846.13" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="165.8" y="1013" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="168.83" y="1023.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1:: (1 samples, 0.04%)</title><rect x="13.3" y="5493" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="16.29" y="5503.5" ></text>
</g>
<g >
<title>`GC_alloc_large (1 samples, 0.04%)</title><rect x="563.4" y="5669" width="0.5" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="566.39" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="276.6" y="949" width="2.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="279.60" y="959.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.04%)</title><rect x="12.8" y="5509" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="15.82" y="5519.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (32 samples, 1.27%)</title><rect x="112.3" y="3973" width="15.0" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="115.32" y="3983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="2309" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="411.97" y="2319.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (35 samples, 1.39%)</title><rect x="15.6" y="5333" width="16.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="18.63" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (11 samples, 0.44%)</title><rect x="276.1" y="4197" width="5.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="279.13" y="4207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3605" width="1.0" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="424.64" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.2" y="4101" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="424.17" y="4111.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="413.2" y="4741" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="416.19" y="4751.5" ></text>
</g>
<g >
<title>`core::coerce::outputStreamDesignator(gctools::smart_ptr&lt;core::T (1 samples, 0.04%)</title><rect x="26.4" y="4533" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="29.43" y="4543.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="409.4" y="3413" width="1.0" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="412.44" y="3423.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="340.0" y="4645" width="0.4" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="342.97" y="4655.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="36.3" y="4597" width="1.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="39.28" y="4607.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="2085" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="423.70" y="2095.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="297.3" y="5477" width="1.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="300.26" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="397.7" y="3957" width="1.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="400.70" y="3967.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="287.4" y="5413" width="1.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="290.40" y="5423.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (7 samples, 0.28%)</title><rect x="51.8" y="5221" width="3.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="54.77" y="5231.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (108 samples, 4.30%)</title><rect x="180.4" y="1525" width="50.7" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="183.38" y="1535.5" >`core..</text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (34 samples, 1.35%)</title><rect x="256.0" y="3093" width="15.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="258.95" y="3103.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="268.6" y="389" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="271.62" y="399.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="621.1" y="5285" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="624.12" y="5295.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (2 samples, 0.08%)</title><rect x="39.1" y="4165" width="0.9" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="42.10" y="4175.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.4" y="3221" width="0.5" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="412.44" y="3231.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LOCALLY) T T T))^M (3 samples, 0.12%)</title><rect x="287.4" y="5461" width="1.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="290.40" y="5471.5" ></text>
</g>
<g >
<title>`cc_enclose (2 samples, 0.08%)</title><rect x="639.0" y="5365" width="0.9" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="641.96" y="5375.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="415.5" y="4901" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="418.54" y="4911.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="180.4" y="405" width="2.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="183.38" y="415.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="124.5" y="2021" width="1.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="127.53" y="2031.5" ></text>
</g>
<g >
<title>`CLOSURE-CALL-OR-INVOKE^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="664.3" y="5621" width="1.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="667.30" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="431.5" y="3525" width="1.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="434.50" y="3535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (3 samples, 0.12%)</title><rect x="409.4" y="3845" width="1.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="412.44" y="3855.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (17 samples, 0.68%)</title><rect x="91.7" y="4133" width="7.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="94.67" y="4143.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (43 samples, 1.71%)</title><rect x="252.2" y="3909" width="20.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="255.20" y="3919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="423.0" y="3637" width="4.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="426.05" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="4453" width="1.4" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="411.03" y="4463.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="345.6" y="4773" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="348.60" y="4783.5" ></text>
</g>
<g >
<title>`llvm::DISubroutineType::getImpl(llvm::LLVMContext&amp;, llvm::DINod (1 samples, 0.04%)</title><rect x="342.3" y="4565" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="345.32" y="4575.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="619.7" y="5205" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="622.71" y="5215.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="3365" width="0.9" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="403.99" y="3375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="17.5" y="4277" width="8.0" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="20.51" y="4287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="424.9" y="1669" width="0.5" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="427.92" y="1679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.4" y="1653" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="428.39" y="1663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (31 samples, 1.23%)</title><rect x="257.4" y="3045" width="14.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="260.36" y="3055.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="55.5" y="5637" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="58.53" y="5647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="427.3" y="2997" width="4.2" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="430.27" y="3007.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoWrapperPass::runOnFunction(llvm::Function&amp;) (4 samples, 0.16%)</title><rect x="784.9" y="5893" width="1.9" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="787.93" y="5903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="379.9" y="5125" width="3.7" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="382.86" y="5135.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (87 samples, 3.46%)</title><rect x="86.5" y="5125" width="40.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="89.51" y="5135.5" >`PR..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="282.7" y="1701" width="1.9" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="285.70" y="1711.5" ></text>
</g>
<g >
<title>`CST-READ^ECLECTOR.CONCRETE-SYNTAX-TREE^FN^^ (95 samples, 3.78%)</title><rect x="12.3" y="5957" width="44.6" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="15.35" y="5967.5" >`CST..</text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="422.1" y="2101" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="425.11" y="2111.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="287.9" y="4965" width="0.9" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="290.87" y="4975.5" ></text>
</g>
<g >
<title>`core::cl__boundp(gctools::smart_ptr&lt;core::Symbol_O&gt;) (1 samples, 0.04%)</title><rect x="599.5" y="5525" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="602.53" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="281.3" y="3541" width="5.6" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="284.30" y="3551.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4709" width="1.4" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="39.28" y="4719.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ATOM-CST-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="327.3" y="4357" width="0.5" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="330.30" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="417.9" y="133" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="420.88" y="143.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="243.3" y="677" width="1.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="246.28" y="687.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="170.5" y="1621" width="1.0" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="173.53" y="1631.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="295.8" y="2325" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="298.85" y="2335.5" ></text>
</g>
<g >
<title>`ELIMINATE-LOAD-TIME-VALUE-INPUTS^CLASP-CLEAVIR^FN^^ (41 samples, 1.63%)</title><rect x="536.6" y="5845" width="19.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="539.63" y="5855.5" ></text>
</g>
<g >
<title>`OF-CLASS-P^CORE^FN^^ (1 samples, 0.04%)</title><rect x="241.9" y="2837" width="0.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="244.87" y="2847.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="395.8" y="4917" width="4.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="398.82" y="4927.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="413.2" y="4901" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="416.19" y="4911.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (1 samples, 0.04%)</title><rect x="26.4" y="4629" width="0.5" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="29.43" y="4639.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="548.8" y="5781" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="551.84" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="66.3" y="4917" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="69.32" y="4927.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="425.9" y="3077" width="0.9" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="428.86" y="3087.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="405.7" y="4405" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="408.68" y="4415.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="422.1" y="2805" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="425.11" y="2815.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="428.7" y="1877" width="0.4" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="431.68" y="1887.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (3 samples, 0.12%)</title><rect x="758.2" y="5781" width="1.4" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="761.18" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="423.0" y="2725" width="1.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="426.05" y="2735.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (305 samples, 12.13%)</title><rect x="130.2" y="5061" width="143.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="133.16" y="5071.5" >`INTERPRETED-DISCR..</text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="124.5" y="3093" width="1.4" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="127.53" y="3103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="3477" width="0.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="403.99" y="3487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="50.8" y="4773" width="0.5" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="53.84" y="4783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="3957" width="0.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="408.68" y="3967.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="106.2" y="3525" width="0.5" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="109.22" y="3535.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="281.3" y="3701" width="5.6" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="284.30" y="3711.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="282.7" y="2853" width="4.2" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="285.70" y="2863.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="92.1" y="3621" width="1.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="95.14" y="3631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="47.5" y="5429" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="50.55" y="5439.5" ></text>
</g>
<g >
<title>`IRC-CCLASP-FUNCTION-CREATE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="633.8" y="5381" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="636.79" y="5391.5" ></text>
</g>
<g >
<title>`LTV/CONS^LITERAL^FN^^ (10 samples, 0.40%)</title><rect x="313.2" y="5669" width="4.7" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="316.21" y="5679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.7" y="1381" width="0.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="430.74" y="1391.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (136 samples, 5.41%)</title><rect x="167.2" y="2981" width="63.9" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="170.24" y="2991.5" >`core::..</text>
</g>
<g >
<title>`AST-INTERPRET-CST^CLASP-CLEAVIR^FN^^ (11 samples, 0.44%)</title><rect x="276.1" y="4581" width="5.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="279.13" y="4591.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="278.9" y="421" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="281.95" y="431.5" ></text>
</g>
<g >
<title>`llvm::MemorySSA::MemorySSA(llvm::Function&amp;, llvm::AAResults*, l (10 samples, 0.40%)</title><rect x="786.8" y="5877" width="4.7" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="789.81" y="5887.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.04%)</title><rect x="653.0" y="5445" width="0.5" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="656.04" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CDR-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="400.5" y="3701" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="403.52" y="3711.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (3 samples, 0.12%)</title><rect x="259.2" y="469" width="1.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="262.24" y="479.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="242.3" y="2853" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="245.34" y="2863.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="172.4" y="101" width="4.7" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="175.40" y="111.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="285.5" y="53" width="1.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="288.52" y="63.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="164.0" y="4309" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="166.95" y="4319.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="384.6" y="4357" width="3.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="387.56" y="4367.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="202.9" y="1077" width="1.4" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="205.91" y="1087.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.04%)</title><rect x="758.6" y="5717" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="761.65" y="5727.5" ></text>
</g>
<g >
<title>`llvm::User::dropAllReferences() (1 samples, 0.04%)</title><rect x="949.2" y="5861" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="952.21" y="5871.5" ></text>
</g>
<g >
<title>`core::core__make_vector(gctools::smart_ptr&lt;core::T_O&gt;, unsigned (1 samples, 0.04%)</title><rect x="393.5" y="3557" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="396.48" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.6" y="2933" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="424.64" y="2943.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.08%)</title><rect x="377.5" y="5813" width="1.0" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="380.52" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (32 samples, 1.27%)</title><rect x="187.4" y="341" width="15.0" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="190.42" y="351.5" ></text>
</g>
<g >
<title>`POSSIBLY-ADD-ITEM^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-STA (3 samples, 0.12%)</title><rect x="115.1" y="3541" width="1.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="118.14" y="3551.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="3653" width="1.0" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="424.64" y="3663.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="723.0" y="5717" width="0.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="725.98" y="5727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="380.3" y="4501" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="383.33" y="4511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="3589" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="417.13" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="398.2" y="3045" width="0.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="401.17" y="3055.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="396.8" y="4245" width="0.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="399.76" y="4255.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="452.6" y="5605" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="455.62" y="5615.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="34.4" y="4837" width="0.9" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="37.41" y="4847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="3637" width="0.9" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="403.99" y="3647.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::Value*, std::__1::allocator&lt;llvm::V (1 samples, 0.04%)</title><rect x="631.9" y="5205" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="634.92" y="5215.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.04%)</title><rect x="46.6" y="5573" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="49.61" y="5583.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (1 samples, 0.04%)</title><rect x="42.4" y="4629" width="0.5" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="45.39" y="4639.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.3" y="4261" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="414.31" y="4271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (57 samples, 2.27%)</title><rect x="204.3" y="501" width="26.8" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="207.32" y="511.5" >`..</text>
</g>
<g >
<title>`gctools::startupGarbageCollectorAndSystem(int (*)(int, char**,  (2,028 samples, 80.67%)</title><rect x="10.0" y="6373" width="951.9" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="13.00" y="6383.5" >`gctools::startupGarbageCollectorAndSystem(int (*)(int, char**, </text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="3061" width="1.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="424.64" y="3071.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (85 samples, 3.38%)</title><rect x="87.4" y="4613" width="39.9" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="90.45" y="4623.5" >`IN..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="179.9" y="2053" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="182.91" y="2063.5" ></text>
</g>
<g >
<title>`wrapped_core__file_kind_T_spbool (1 samples, 0.04%)</title><rect x="951.6" y="6005" width="0.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="954.56" y="6015.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="413.7" y="4485" width="1.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="416.66" y="4495.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="282.7" y="1589" width="1.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="285.70" y="1599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="165.8" y="1365" width="1.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="168.83" y="1375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="409.4" y="3365" width="1.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="412.44" y="3375.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="25.5" y="4325" width="0.5" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="28.49" y="4335.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (3 samples, 0.12%)</title><rect x="118.9" y="3525" width="1.4" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="121.89" y="3535.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="22.2" y="3845" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="25.20" y="3855.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.04%)</title><rect x="906.5" y="5717" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="909.50" y="5727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1413" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="430.74" y="1423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (48 samples, 1.91%)</title><rect x="180.4" y="1253" width="22.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="183.38" y="1263.5" >`..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="276.1" y="3989" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="279.13" y="3999.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="561.0" y="5781" width="0.5" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="564.04" y="5791.5" ></text>
</g>
<g >
<title>`GC_reclaim_block (1 samples, 0.04%)</title><rect x="437.6" y="5413" width="0.5" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="440.60" y="5423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="257.8" y="1621" width="1.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="260.83" y="1631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.20%)</title><rect x="180.4" y="517" width="2.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="183.38" y="527.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="582.6" y="5781" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="585.63" y="5791.5" ></text>
</g>
<g >
<title>`llvm::BlockFrequencyInfo::calculate(llvm::Function const&amp;, llvm (1 samples, 0.04%)</title><rect x="851.1" y="5877" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="854.11" y="5887.5" ></text>
</g>
<g >
<title>`0x10c9da5cd (1 samples, 0.04%)</title><rect x="297.7" y="5333" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="300.72" y="5343.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.04%)</title><rect x="322.6" y="5125" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="325.60" y="5135.5" ></text>
</g>
<g >
<title>`llvm::APInt::sdiv(llvm::APInt const&amp;) const (1 samples, 0.04%)</title><rect x="731.4" y="5781" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="734.42" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="332.9" y="4549" width="1.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="335.93" y="4559.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="1477" width="5.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="175.40" y="1487.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (3 samples, 0.12%)</title><rect x="812.2" y="5669" width="1.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="815.16" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (16 samples, 0.64%)</title><rect x="243.3" y="1717" width="7.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="246.28" y="1727.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (2 samples, 0.08%)</title><rect x="253.1" y="3237" width="1.0" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="256.13" y="3247.5" ></text>
</g>
<g >
<title>`llvmo::APInt_O::makeAPIntWidth(gctools::smart_ptr&lt;core::Integer (1 samples, 0.04%)</title><rect x="665.7" y="5573" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="668.71" y="5583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="92.1" y="3125" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="95.14" y="3135.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (4 samples, 0.16%)</title><rect x="136.7" y="4261" width="1.9" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="139.73" y="4271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="254.1" y="3205" width="1.4" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="257.07" y="3215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="413.7" y="4357" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="416.66" y="4367.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="287.4" y="4933" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="290.40" y="4943.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="335.7" y="4277" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="338.74" y="4287.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (351 samples, 13.96%)</title><rect x="128.8" y="5685" width="164.7" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="131.75" y="5695.5" >`INTERPRETED-DISCRIMI..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (32 samples, 1.27%)</title><rect x="187.4" y="421" width="15.0" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="190.42" y="431.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (137 samples, 5.45%)</title><rect x="167.2" y="3957" width="64.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="170.24" y="3967.5" >`core::..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (305 samples, 12.13%)</title><rect x="130.2" y="4965" width="143.1" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="133.16" y="4975.5" >`core::clos__inter..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="381.7" y="4501" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="384.74" y="4511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="400.0" y="4693" width="2.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="403.05" y="4703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.9" y="2965" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="396.95" y="2975.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="34.4" y="4421" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="37.41" y="4431.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="243.3" y="1397" width="7.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="246.28" y="1407.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="350.3" y="5397" width="1.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="353.29" y="5407.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="285.1" y="981" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="288.05" y="991.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (108 samples, 4.30%)</title><rect x="180.4" y="1941" width="50.7" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="183.38" y="1951.5" >`core..</text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MDTuple*, llvm::de (1 samples, 0.04%)</title><rect x="670.9" y="5685" width="0.4" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="673.88" y="5695.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (1 samples, 0.04%)</title><rect x="919.2" y="5653" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="922.17" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4661" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="408.68" y="4671.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="653.5" y="5493" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="656.51" y="5503.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="167.7" y="1045" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="170.71" y="1055.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="278.9" y="501" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="281.95" y="511.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::sm (1 samples, 0.04%)</title><rect x="465.8" y="5717" width="0.4" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="468.76" y="5727.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCA (1 samples, 0.04%)</title><rect x="854.4" y="5861" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="857.40" y="5871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (3 samples, 0.12%)</title><rect x="390.7" y="2965" width="1.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="393.66" y="2975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="933" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="423.70" y="943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="400.5" y="4053" width="1.4" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="403.52" y="4063.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2485" width="0.5" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="412.90" y="2495.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-FUNCTION^CLEAVIR-CST-TO-AST^FN^^ (5 samples, 0.20%)</title><rect x="284.6" y="1189" width="2.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="287.58" y="1199.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="401.9" y="3973" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="404.93" y="3983.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="325.9" y="4725" width="1.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="328.89" y="4735.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (52 samples, 2.07%)</title><rect x="379.4" y="5205" width="24.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="382.40" y="5215.5" >`..</text>
</g>
<g >
<title>`core::core__sequence_start_end(gctools::smart_ptr&lt;core::T_O&gt;, g (1 samples, 0.04%)</title><rect x="523.0" y="5781" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="526.02" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="287.9" y="5045" width="0.9" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="290.87" y="5055.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="319.8" y="5333" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="322.79" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="1941" width="1.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="426.52" y="1951.5" ></text>
</g>
<g >
<title>`ERROR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="324.5" y="4821" width="0.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="327.48" y="4831.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="104.8" y="3557" width="1.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="107.81" y="3567.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="124.5" y="2261" width="1.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="127.53" y="2271.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (108 samples, 4.30%)</title><rect x="180.4" y="1893" width="50.7" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="183.38" y="1903.5" >`CONV..</text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.04%)</title><rect x="293.0" y="5573" width="0.5" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="296.03" y="5583.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="34.4" y="4565" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="37.41" y="4575.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.04%)</title><rect x="746.4" y="5653" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="749.44" y="5663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (31 samples, 1.23%)</title><rect x="257.4" y="2949" width="14.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="260.36" y="2959.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="354.0" y="5253" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="357.05" y="5263.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="508.5" y="5669" width="0.4" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="511.47" y="5679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (20 samples, 0.80%)</title><rect x="34.4" y="5093" width="9.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="37.41" y="5103.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (4 samples, 0.16%)</title><rect x="623.9" y="5157" width="1.9" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="626.94" y="5167.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="125.9" y="2213" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="128.93" y="2223.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="52.7" y="4181" width="1.9" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="55.71" y="4191.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (1 samples, 0.04%)</title><rect x="48.5" y="5525" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="51.49" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="427.3" y="2261" width="0.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="430.27" y="2271.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="417.4" y="1349" width="2.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="420.41" y="1359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="428.7" y="2181" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="431.68" y="2191.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="260.6" y="373" width="7.6" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="263.64" y="383.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::DecomposeGEPExpression(llvm::Value const*, (4 samples, 0.16%)</title><rect x="806.5" y="5669" width="1.9" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="809.52" y="5679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (137 samples, 5.45%)</title><rect x="167.2" y="3861" width="64.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="170.24" y="3871.5" >`core::..</text>
</g>
<g >
<title>`llvm::BasicAAResult::pointsToConstantMemory(llvm::MemoryLocatio (2 samples, 0.08%)</title><rect x="788.7" y="5797" width="0.9" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="791.69" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (13 samples, 0.52%)</title><rect x="388.3" y="4485" width="6.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="391.31" y="4495.5" ></text>
</g>
<g >
<title>0x11a477094 (136 samples, 5.41%)</title><rect x="167.2" y="2773" width="63.9" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="170.24" y="2783.5" >0x11a47..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.9" y="3029" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="412.90" y="3039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="86.5" y="4917" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="89.51" y="4927.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (1 samples, 0.04%)</title><rect x="44.3" y="5061" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="47.26" y="5071.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="406.1" y="5669" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="409.15" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (1 samples, 0.04%)</title><rect x="287.4" y="5269" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="290.40" y="5279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="4293" width="0.5" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="404.93" y="4303.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="251.3" y="3941" width="0.9" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="254.26" y="3951.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="417.4" y="1381" width="2.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="420.41" y="1391.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="401.0" y="3173" width="0.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="403.99" y="3183.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (24 samples, 0.95%)</title><rect x="276.1" y="5221" width="11.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="279.13" y="5231.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (7 samples, 0.28%)</title><rect x="122.6" y="3349" width="3.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="125.65" y="3359.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="19.9" y="3429" width="0.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="22.86" y="3439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="415.5" y="4149" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="418.54" y="4159.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.3" y="1797" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="430.27" y="1807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="279.9" y="357" width="0.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="282.89" y="367.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (4 samples, 0.16%)</title><rect x="338.1" y="4517" width="1.9" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="341.09" y="4527.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="138.6" y="4277" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="141.61" y="4287.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="3045" width="1.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="427.92" y="3055.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="415.5" y="4229" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="418.54" y="4239.5" ></text>
</g>
<g >
<title>`core::cl__float(gctools::smart_ptr&lt;core::Real_O&gt;, gctools::smar (1 samples, 0.04%)</title><rect x="953.4" y="6005" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="956.44" y="6015.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="92.1" y="3173" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="95.14" y="3183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="413.7" y="4805" width="1.8" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="416.66" y="4815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="1333" width="0.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="434.96" y="1343.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PARSER-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="60.2" y="5269" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="63.22" y="5279.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="43.3" y="4885" width="0.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="46.33" y="4895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.9" y="3061" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="396.95" y="3071.5" ></text>
</g>
<g >
<title>`std::__1::__deque_base&lt;llvm::Function*, std::__1::allocator&lt;llv (1 samples, 0.04%)</title><rect x="857.7" y="5845" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="860.68" y="5855.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (7 samples, 0.28%)</title><rect x="268.6" y="1365" width="3.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="271.62" y="1375.5" ></text>
</g>
<g >
<title>`CHAR-INVALID-P^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="45.7" y="5413" width="0.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="48.67" y="5423.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="52.7" y="3653" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="55.71" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (52 samples, 2.07%)</title><rect x="379.4" y="5509" width="24.4" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="382.40" y="5519.5" >`..</text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInBoundsGEP(llvm::Value*, gctools::sm (1 samples, 0.04%)</title><rect x="645.5" y="5285" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="648.53" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (7 samples, 0.28%)</title><rect x="268.6" y="1077" width="3.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="271.62" y="1087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="421.6" y="2325" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="424.64" y="2335.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="123.6" y="885" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="126.59" y="895.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="342.8" y="4629" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="345.78" y="4639.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="425.9" y="2901" width="0.9" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="428.86" y="2911.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (4 samples, 0.16%)</title><rect x="504.2" y="5573" width="1.9" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="507.25" y="5583.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2821" width="14.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="260.36" y="2831.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::Constant*, llvm::Constant*&gt;* l (1 samples, 0.04%)</title><rect x="726.7" y="5845" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="729.73" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="281.3" y="3125" width="1.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="284.30" y="3135.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (23 samples, 0.91%)</title><rect x="383.6" y="4997" width="10.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="386.62" y="5007.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.04%)</title><rect x="369.1" y="5701" width="0.4" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="372.07" y="5711.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.12%)</title><rect x="587.8" y="5765" width="1.4" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="590.80" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="2917" width="0.9" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="428.86" y="2927.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="489.7" y="5765" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="492.70" y="5775.5" ></text>
</g>
<g >
<title>`SEPARATE-FUNCTION-BODY^CONCRETE-SYNTAX-TREE^((CONS-CST))^METHOD (1 samples, 0.04%)</title><rect x="272.8" y="4597" width="0.5" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="275.85" y="4607.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="260.2" y="53" width="0.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="263.18" y="63.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="324.5" y="4709" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="327.48" y="4719.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (4 samples, 0.16%)</title><rect x="297.3" y="5621" width="1.8" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="300.26" y="5631.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="279.4" y="309" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="282.42" y="319.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="425.9" y="2629" width="0.9" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="428.86" y="2639.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="370.9" y="5781" width="0.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="373.95" y="5791.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (3 samples, 0.12%)</title><rect x="871.8" y="5797" width="1.4" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="874.77" y="5807.5" ></text>
</g>
<g >
<title>`C+ (1 samples, 0.04%)</title><rect x="666.7" y="5605" width="0.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="669.65" y="5615.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="758.6" y="5749" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="761.65" y="5759.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (1 samples, 0.04%)</title><rect x="666.7" y="5589" width="0.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="669.65" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="287.4" y="5365" width="1.4" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="290.40" y="5375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="318.4" y="5349" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="321.38" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-CALLED-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T T T T) (2 samples, 0.08%)</title><rect x="253.1" y="3253" width="1.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="256.13" y="3263.5" ></text>
</g>
<g >
<title>0x1225e5094 (1 samples, 0.04%)</title><rect x="286.9" y="4773" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="289.93" y="4783.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="312.7" y="5717" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="315.74" y="5727.5" ></text>
</g>
<g >
<title>`LITERAL-DNODE-DATUM^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="309.9" y="5829" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="312.93" y="5839.5" ></text>
</g>
<g >
<title>`llvm::CallGraph::addToCallGraph(llvm::Function*) (1 samples, 0.04%)</title><rect x="841.7" y="5893" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="844.73" y="5903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="427.3" y="2501" width="2.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="430.27" y="2511.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="275.7" y="5125" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="278.66" y="5135.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.04%)</title><rect x="488.3" y="5573" width="0.5" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="491.29" y="5583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="455.4" y="5781" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="458.43" y="5791.5" ></text>
</g>
<g >
<title>0x1225e5094 (1 samples, 0.04%)</title><rect x="231.5" y="3573" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="234.54" y="3583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (11 samples, 0.44%)</title><rect x="172.4" y="757" width="5.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="175.40" y="767.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="94.5" y="3685" width="3.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="97.49" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="400.5" y="4133" width="1.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="403.52" y="4143.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="47.5" y="5365" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="50.55" y="5375.5" ></text>
</g>
<g >
<title>`llvm::Function::getContext() const (1 samples, 0.04%)</title><rect x="920.1" y="5557" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="923.11" y="5567.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout con (6 samples, 0.24%)</title><rect x="770.4" y="5813" width="2.8" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="773.38" y="5823.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="347.9" y="5109" width="0.5" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="350.95" y="5119.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="3557" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="414.78" y="3567.5" ></text>
</g>
<g >
<title>`llvm::getOrEnforceKnownAlignment(llvm::Value*, unsigned int, ll (9 samples, 0.36%)</title><rect x="908.4" y="5829" width="4.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="911.38" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="384.1" y="4613" width="10.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="387.09" y="4623.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.04%)</title><rect x="49.0" y="5605" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="51.96" y="5615.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::Function_O&gt; gctools::GCObjectAppropri (1 samples, 0.04%)</title><rect x="626.3" y="5061" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="629.28" y="5071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (23 samples, 0.91%)</title><rect x="383.6" y="5061" width="10.8" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="386.62" y="5071.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="2213" width="5.6" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="236.89" y="2223.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'TAGBODY) T T T))^M (12 samples, 0.48%)</title><rect x="233.9" y="1237" width="5.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="236.89" y="1247.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (4 samples, 0.16%)</title><rect x="165.4" y="3221" width="1.8" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="168.36" y="3231.5" ></text>
</g>
<g >
<title>`SimplifyFunction(llvm::Function*, llvm::CallGraph&amp;) (1 samples, 0.04%)</title><rect x="687.8" y="5893" width="0.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="690.77" y="5903.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="279.9" y="149" width="0.9" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="282.89" y="159.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="949" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="423.70" y="959.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.04%)</title><rect x="368.1" y="5749" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="371.13" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="115.6" y="3493" width="0.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="118.61" y="3503.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.04%)</title><rect x="894.8" y="5733" width="0.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="897.77" y="5743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="431.5" y="3765" width="1.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="434.50" y="3775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="409.4" y="4469" width="1.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="412.44" y="4479.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="165.8" y="2757" width="1.4" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="168.83" y="2767.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="427.3" y="2101" width="0.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="430.27" y="2111.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="39.1" y="4373" width="1.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="42.10" y="4383.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.08%)</title><rect x="594.8" y="5829" width="1.0" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="597.84" y="5839.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateExtractValue(llvm::Value*, gctools::s (1 samples, 0.04%)</title><rect x="627.2" y="5045" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="630.22" y="5055.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="279.4" y="1157" width="1.4" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="282.42" y="1167.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="233.0" y="2357" width="0.9" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="235.95" y="2367.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="343.7" y="4629" width="0.5" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="346.72" y="4639.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="997" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="428.86" y="1007.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="243.3" y="2165" width="7.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="246.28" y="2175.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="678.9" y="5925" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="681.85" y="5935.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="293" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="423.70" y="303.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="413.7" y="4389" width="1.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="416.66" y="4399.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="23.6" y="3861" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="26.61" y="3871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="415.5" y="4917" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="418.54" y="4927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="422.1" y="2245" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="425.11" y="2255.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="364.8" y="5685" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="367.84" y="5695.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="101.5" y="3557" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="104.53" y="3567.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (4 samples, 0.16%)</title><rect x="122.6" y="3189" width="1.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="125.65" y="3199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="52.7" y="4069" width="1.9" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="55.71" y="4079.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="431.5" y="2885" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="434.50" y="2895.5" ></text>
</g>
<g >
<title>`small_malloc_should_clear (1 samples, 0.04%)</title><rect x="925.7" y="5765" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="928.74" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="382.7" y="4869" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="385.68" y="4879.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (159 samples, 6.32%)</title><rect x="378.9" y="5813" width="74.7" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="381.93" y="5823.5" >`core::c..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="385.0" y="3957" width="2.8" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="388.03" y="3967.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="356.4" y="5589" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="359.40" y="5599.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="91.7" y="3749" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="94.67" y="3759.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="354.0" y="5189" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="357.05" y="5199.5" ></text>
</g>
<g >
<title>`DO-INLINING^CLEAVIR-PARTIAL-INLINING^FN^^ (1 samples, 0.04%)</title><rect x="345.1" y="5029" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="348.13" y="5039.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (13 samples, 0.52%)</title><rect x="731.0" y="5845" width="6.1" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="733.95" y="5855.5" ></text>
</g>
<g >
<title>`CST-&gt;AST^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="321.7" y="5429" width="1.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="324.66" y="5439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (77 samples, 3.06%)</title><rect x="12.8" y="5637" width="36.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="15.82" y="5647.5" >`IN..</text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (1 samples, 0.04%)</title><rect x="75.7" y="4997" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="78.71" y="5007.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="55.1" y="5669" width="0.4" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="58.06" y="5679.5" ></text>
</g>
<g >
<title>`llvm::sinkRegion(llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*, llvm (1 samples, 0.04%)</title><rect x="782.1" y="5845" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="785.12" y="5855.5" ></text>
</g>
<g >
<title>`sprintf (1 samples, 0.04%)</title><rect x="409.9" y="1749" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="412.90" y="1759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="316.5" y="5221" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="319.50" y="5231.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.04%)</title><rect x="879.3" y="5685" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="882.28" y="5695.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="393.5" y="4341" width="0.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="396.48" y="4351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="3269" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="412.44" y="3279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="165.4" y="2565" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="168.36" y="2575.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (351 samples, 13.96%)</title><rect x="128.8" y="5701" width="164.7" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="131.75" y="5711.5" >`core::FuncallableIns..</text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="340.0" y="4565" width="0.4" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="342.97" y="4575.5" ></text>
</g>
<g >
<title>`realloc (1 samples, 0.04%)</title><rect x="719.7" y="5813" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="722.69" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2085" width="1.0" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="427.92" y="2095.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (2 samples, 0.08%)</title><rect x="905.1" y="5717" width="0.9" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="908.09" y="5727.5" ></text>
</g>
<g >
<title>`core::type_of_decide_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="203.4" y="853" width="0.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="206.38" y="863.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute (1 samples, 0.04%)</title><rect x="917.8" y="5797" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="920.76" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (23 samples, 0.91%)</title><rect x="383.6" y="4885" width="10.8" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="386.62" y="4895.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="41.9" y="4661" width="1.0" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="44.92" y="4671.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="328.2" y="4469" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="331.23" y="4479.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="294.0" y="4021" width="0.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="296.97" y="4031.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (39 samples, 1.55%)</title><rect x="15.2" y="5477" width="18.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="18.16" y="5487.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction*, unsi (2 samples, 0.08%)</title><rect x="876.0" y="5829" width="0.9" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="878.99" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="428.7" y="1989" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="431.68" y="1999.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="2997" width="4.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="285.70" y="3007.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="640.4" y="5301" width="0.4" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="643.37" y="5311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="405.7" y="4325" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="408.68" y="4335.5" ></text>
</g>
<g >
<title>`MAKE-STRING-OUTPUT-STREAM^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="617.8" y="5317" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="620.84" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="125.9" y="3221" width="1.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="128.93" y="3231.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="268.6" y="1605" width="3.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="271.62" y="1615.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="293.5" y="5493" width="3.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="296.50" y="5503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="276.1" y="4533" width="5.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="279.13" y="4543.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="415.5" y="4069" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="418.54" y="4079.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="170.5" y="1493" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="173.53" y="1503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="400.5" y="4117" width="1.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="403.52" y="4127.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (108 samples, 4.30%)</title><rect x="180.4" y="1669" width="50.7" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="183.38" y="1679.5" >`core..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="393.5" y="3653" width="0.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="396.48" y="3663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="693" width="0.5" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="423.70" y="703.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="408.0" y="4725" width="2.8" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="411.03" y="4735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2277" width="1.0" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="427.92" y="2287.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (9 samples, 0.36%)</title><rect x="282.7" y="1797" width="4.2" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="285.70" y="1807.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="1461" width="4.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="279.60" y="1471.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T SEQUENCE T))^METHOD^^ (1 samples, 0.04%)</title><rect x="36.8" y="3221" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="39.75" y="3231.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.04%)</title><rect x="33.9" y="5365" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="36.94" y="5375.5" ></text>
</g>
<g >
<title>0x1225f7094 (3 samples, 0.12%)</title><rect x="287.4" y="5477" width="1.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="290.40" y="5487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (84 samples, 3.34%)</title><rect x="87.9" y="4453" width="39.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="90.92" y="4463.5" >`IN..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (32 samples, 1.27%)</title><rect x="187.4" y="133" width="15.0" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="190.42" y="143.5" ></text>
</g>
<g >
<title>`MAKE-EXPRESSION-RESULT^ECLECTOR.PARSE-RESULT^((CST-CLIENT T T T (1 samples, 0.04%)</title><rect x="38.2" y="4181" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="41.16" y="4191.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="836.6" y="5765" width="0.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="839.56" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="243.3" y="501" width="0.4" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="246.28" y="511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="420.7" y="917" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="423.70" y="927.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="92.1" y="3493" width="1.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="95.14" y="3503.5" ></text>
</g>
<g >
<title>`core::clasp_namestring(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="952.5" y="5909" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="955.50" y="5919.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (24 samples, 0.95%)</title><rect x="276.1" y="5253" width="11.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="279.13" y="5263.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="235.3" y="549" width="4.2" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="238.30" y="559.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (4 samples, 0.16%)</title><rect x="289.7" y="5541" width="1.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="292.75" y="5551.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="853.5" y="5765" width="0.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="856.46" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="279.9" y="341" width="0.9" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="282.89" y="351.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="1413" width="7.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="246.28" y="1423.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="922.0" y="5765" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="924.99" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="52.2" y="4405" width="2.9" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="55.24" y="4415.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (304 samples, 12.09%)</title><rect x="130.6" y="4869" width="142.7" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="133.63" y="4879.5" >`INTERPRETED-DISCR..</text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="454.0" y="5813" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="457.03" y="5823.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="35.8" y="4805" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="38.82" y="4815.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="38.2" y="4405" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="41.16" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="409.9" y="1845" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="412.90" y="1855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="2757" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="414.78" y="2767.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (20 samples, 0.80%)</title><rect x="112.8" y="3717" width="9.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="115.79" y="3727.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="123.1" y="2293" width="1.4" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="126.12" y="2303.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T GLOBAL-FUNCTION-INFO))^METHOD (1 samples, 0.04%)</title><rect x="165.8" y="965" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="168.83" y="975.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.08%)</title><rect x="461.1" y="5813" width="0.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="464.07" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="965" width="0.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="428.86" y="975.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="255.5" y="3173" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="258.48" y="3183.5" ></text>
</g>
<g >
<title>`core::cl__type_of(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="64.9" y="4997" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="67.92" y="5007.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const (1 samples, 0.04%)</title><rect x="922.5" y="5797" width="0.4" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="925.46" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="3381" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="414.78" y="3391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (54 samples, 2.15%)</title><rect x="379.4" y="5573" width="25.3" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="382.40" y="5583.5" >`..</text>
</g>
<g >
<title>`wrapped_cl__nthcdr_Integer_spList_sp (1 samples, 0.04%)</title><rect x="418.8" y="837" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="421.82" y="847.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="293.5" y="5509" width="3.8" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="296.50" y="5519.5" ></text>
</g>
<g >
<title>`GC_remove_from_fl_at (1 samples, 0.04%)</title><rect x="178.0" y="2085" width="0.5" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="181.04" y="2095.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm:: (1 samples, 0.04%)</title><rect x="611.3" y="5253" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="614.26" y="5263.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="533.3" y="5749" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="536.35" y="5759.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignmentInfo(llvm::AlignTypeEnum, unsigne (1 samples, 0.04%)</title><rect x="883.0" y="5829" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="886.03" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="397.7" y="4341" width="2.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="400.70" y="4351.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisUsage(llvm::Pass*) (1 samples, 0.04%)</title><rect x="929.0" y="5893" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="932.03" y="5903.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="246.1" y="437" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="249.09" y="447.5" ></text>
</g>
<g >
<title>`FIND-CLASS^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="202.9" y="853" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="205.91" y="863.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="276.6" y="1173" width="2.8" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="279.60" y="1183.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="701.4" y="5765" width="0.5" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="704.38" y="5775.5" ></text>
</g>
<g >
<title>`IRC-SET-INSERT-POINT-BASIC-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="619.2" y="5269" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="622.24" y="5279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="390.7" y="3109" width="1.4" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="393.66" y="3119.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="124.5" y="1877" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="127.53" y="1887.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="391.6" y="2405" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="394.60" y="2415.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="247.0" y="37" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="250.03" y="47.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="4597" width="2.8" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="296.97" y="4607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="529.6" y="5765" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="532.59" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="124.5" y="2117" width="1.4" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="127.53" y="2127.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (56 samples, 2.23%)</title><rect x="204.3" y="53" width="26.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="207.32" y="63.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="1877" width="1.0" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="432.62" y="1887.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="637.1" y="5381" width="0.4" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="640.08" y="5391.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (4 samples, 0.16%)</title><rect x="294.9" y="3893" width="1.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="297.91" y="3903.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (3 samples, 0.12%)</title><rect x="897.6" y="5829" width="1.4" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="900.58" y="5839.5" ></text>
</g>
<g >
<title>`core::cl__pathname(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="953.0" y="5893" width="0.4" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="955.97" y="5903.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="105.8" y="3205" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="108.75" y="3215.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::FindKey(llvm::StringRef) const (1 samples, 0.04%)</title><rect x="934.2" y="5765" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="937.19" y="5775.5" ></text>
</g>
<g >
<title>`COMPLETER-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (1 samples, 0.04%)</title><rect x="167.7" y="869" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="170.71" y="879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1173" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="428.86" y="1183.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (57 samples, 2.27%)</title><rect x="407.6" y="5557" width="26.7" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="410.56" y="5567.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (83 samples, 3.30%)</title><rect x="88.4" y="4357" width="38.9" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="91.39" y="4367.5" >`co..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.5" y="4245" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="418.54" y="4255.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="172.4" y="1525" width="5.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="175.40" y="1535.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (EXPLICIT-MULTI-PARAM (1 samples, 0.04%)</title><rect x="61.6" y="4997" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="64.63" y="5007.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (23 samples, 0.91%)</title><rect x="423.0" y="4325" width="10.8" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="426.05" y="4335.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.9" y="3589" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="404.93" y="3599.5" ></text>
</g>
<g >
<title>`llvm::SimplifyGEPInst(llvm::Type*, llvm::ArrayRef&lt;llvm::Value*&gt; (3 samples, 0.12%)</title><rect x="884.4" y="5829" width="1.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="887.44" y="5839.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="398.6" y="3317" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="401.64" y="3327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (56 samples, 2.23%)</title><rect x="204.3" y="213" width="26.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="207.32" y="223.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="417.4" y="1221" width="2.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="420.41" y="1231.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (32 samples, 1.27%)</title><rect x="15.6" y="5141" width="15.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="18.63" y="5151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (4 samples, 0.16%)</title><rect x="413.7" y="4693" width="1.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="416.66" y="4703.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.04%)</title><rect x="557.8" y="5813" width="0.4" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="560.76" y="5823.5" ></text>
</g>
<g >
<title>`computeUnsignedMinMaxValuesFromKnownBits(llvm::KnownBits const&amp; (1 samples, 0.04%)</title><rect x="897.1" y="5829" width="0.5" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="900.11" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="122.6" y="3445" width="4.7" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="125.65" y="3455.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="808.9" y="5541" width="0.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="811.87" y="5551.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="393.9" y="3621" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="396.95" y="3631.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (1 samples, 0.04%)</title><rect x="821.5" y="5669" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="824.54" y="5679.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldTerminator(llvm::BasicBlock*, bool, llvm::Tar (1 samples, 0.04%)</title><rect x="934.2" y="5829" width="0.5" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="937.19" y="5839.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="133.0" y="4469" width="0.4" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="135.98" y="4479.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="123.1" y="2581" width="1.4" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="126.12" y="2591.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (56 samples, 2.23%)</title><rect x="204.3" y="149" width="26.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="207.32" y="159.5" >`..</text>
</g>
<g >
<title>`core::core__file_scope(gctools::smart_ptr&lt;core::T_O&gt;, gctools:: (1 samples, 0.04%)</title><rect x="53.2" y="3797" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="56.18" y="3807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="285.5" y="661" width="1.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="288.52" y="671.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="123.6" y="789" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="126.59" y="799.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (15 samples, 0.60%)</title><rect x="232.5" y="2773" width="7.0" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="235.48" y="2783.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="281.3" y="3301" width="1.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="284.30" y="3311.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="52.7" y="4133" width="1.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="55.71" y="4143.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="108.6" y="3541" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="111.57" y="3551.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="91.7" y="3717" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="94.67" y="3727.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="49.9" y="4581" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="52.90" y="4591.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="278.9" y="309" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="281.95" y="319.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="92.1" y="3573" width="1.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="95.14" y="3583.5" ></text>
</g>
<g >
<title>`llvm::getOrEnforceKnownAlignment(llvm::Value*, unsigned int, ll (1 samples, 0.04%)</title><rect x="916.8" y="5845" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="919.83" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="314.6" y="5061" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="317.62" y="5071.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="425.9" y="2725" width="0.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="428.86" y="2735.5" ></text>
</g>
<g >
<title>`wrapped_cl__gethash_T_spHashTableBase_spT_sp (1 samples, 0.04%)</title><rect x="509.4" y="5733" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="512.41" y="5743.5" ></text>
</g>
<g >
<title>`core::type_of_decide_class(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.08%)</title><rect x="79.9" y="4965" width="1.0" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="82.94" y="4975.5" ></text>
</g>
<g >
<title>`core::core__find_class_holder(gctools::smart_ptr&lt;core::Symbol_O (1 samples, 0.04%)</title><rect x="158.8" y="4261" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="161.79" y="4271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="177.1" y="501" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="180.10" y="511.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="3125" width="1.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="127.53" y="3135.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedUseBits(llvm::Value*, llvm: (2 samples, 0.08%)</title><rect x="878.8" y="5813" width="0.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="881.81" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1365" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="430.27" y="1375.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (152 samples, 6.05%)</title><rect x="598.6" y="5765" width="71.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="601.59" y="5775.5" >`DO-DBG-..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="2661" width="63.9" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="170.24" y="2671.5" >`INTERP..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="2677" width="0.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="428.86" y="2687.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeAllocSize(llvm::Type*) const (1 samples, 0.04%)</title><rect x="735.2" y="5781" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="738.18" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="186.5" y="85" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="189.48" y="95.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="17.5" y="4005" width="5.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="20.51" y="4015.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="247.5" y="245" width="1.9" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="250.50" y="255.5" ></text>
</g>
<g >
<title>`llvmo::LoadInst_O::__class() const (1 samples, 0.04%)</title><rect x="643.2" y="5397" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="646.18" y="5407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="416.5" y="4805" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="419.48" y="4815.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.04%)</title><rect x="496.3" y="5717" width="0.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="499.27" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="92.1" y="3653" width="1.9" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="95.14" y="3663.5" ></text>
</g>
<g >
<title>`LOGAND^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="31.6" y="5157" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="34.59" y="5167.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="661.0" y="5429" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="664.02" y="5439.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="2901" width="3.8" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="420.41" y="2911.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (136 samples, 5.41%)</title><rect x="167.2" y="3445" width="63.9" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="170.24" y="3455.5" >`core::..</text>
</g>
<g >
<title>`ConstructSSAForLoadSet(llvm::LoadInst*, llvm::SmallVectorImpl&lt;l (1 samples, 0.04%)</title><rect x="815.4" y="5781" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="818.44" y="5791.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedBits(llvm::Instruction*, un (1 samples, 0.04%)</title><rect x="879.3" y="5797" width="0.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="882.28" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="2277" width="0.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="428.86" y="2287.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="421.6" y="3797" width="1.0" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="424.64" y="3807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="3541" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="411.03" y="3551.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.04%)</title><rect x="295.8" y="2005" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="298.85" y="2015.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="247.0" y="773" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="250.03" y="783.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="892.4" y="5685" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="895.42" y="5695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="92.1" y="3669" width="1.9" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="95.14" y="3679.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="518.8" y="5781" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="521.80" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (60 samples, 2.39%)</title><rect x="407.1" y="5637" width="28.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="410.09" y="5647.5" >`..</text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.04%)</title><rect x="698.1" y="5781" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="701.10" y="5791.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (79 samples, 3.14%)</title><rect x="12.8" y="5701" width="37.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="15.82" y="5711.5" >`LE..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="430.6" y="2517" width="0.9" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="433.56" y="2527.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="122.2" y="3749" width="5.1" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="125.18" y="3759.5" ></text>
</g>
<g >
<title>`core::core__coerce_to_file_pathname(gctools::smart_ptr&lt;core::T_ (1 samples, 0.04%)</title><rect x="953.0" y="5925" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="955.97" y="5935.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="41.9" y="4677" width="1.0" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="44.92" y="4687.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="123.6" y="1717" width="0.9" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="126.59" y="1727.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="64.4" y="4965" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="67.45" y="4975.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="424.5" y="3093" width="0.4" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="427.46" y="3103.5" ></text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (1 samples, 0.04%)</title><rect x="86.0" y="5061" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="89.04" y="5071.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="626.3" y="5125" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="629.28" y="5135.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (22 samples, 0.88%)</title><rect x="384.1" y="4565" width="10.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="387.09" y="4575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (52 samples, 2.07%)</title><rect x="379.4" y="5285" width="24.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="382.40" y="5295.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (108 samples, 4.30%)</title><rect x="180.4" y="2021" width="50.7" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="183.38" y="2031.5" >`core..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="423.0" y="4437" width="10.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="426.05" y="4447.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="417.4" y="1045" width="2.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="420.41" y="1055.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (24 samples, 0.95%)</title><rect x="16.6" y="4837" width="11.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="19.57" y="4847.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="3685" width="4.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="430.27" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.9" y="4789" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="419.95" y="4799.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(l (23 samples, 0.91%)</title><rect x="804.6" y="5765" width="10.8" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="807.65" y="5775.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (136 samples, 5.41%)</title><rect x="167.2" y="3653" width="63.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="170.24" y="3663.5" >`PROCES..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.9" y="3253" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="412.90" y="3263.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="36.3" y="4613" width="1.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="39.28" y="4623.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.04%)</title><rect x="49.0" y="5589" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="51.96" y="5599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (19 samples, 0.76%)</title><rect x="259.2" y="1061" width="9.0" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="262.24" y="1071.5" ></text>
</g>
<g >
<title>`SYNTAX-TYPE^ECLECTOR.READTABLE^((READTABLE T))^METHOD^^ (1 samples, 0.04%)</title><rect x="53.7" y="3845" width="0.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="56.65" y="3855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="268.6" y="1509" width="3.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="271.62" y="1519.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="124.5" y="1621" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="127.53" y="1631.5" ></text>
</g>
<g >
<title>`std::__1::enable_if&lt;is_hashable_data&lt;llvm::Metadata* const&gt;::va (1 samples, 0.04%)</title><rect x="862.8" y="5733" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="865.85" y="5743.5" ></text>
</g>
<g >
<title>0x1225e9094 (108 samples, 4.30%)</title><rect x="180.4" y="1829" width="50.7" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="183.38" y="1839.5" >0x122..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="242.8" y="1989" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="245.81" y="1999.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (10 samples, 0.40%)</title><rect x="122.6" y="3493" width="4.7" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="125.65" y="3503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="3717" width="1.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="411.03" y="3727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="3349" width="4.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="285.70" y="3359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="2805" width="4.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="285.70" y="2815.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="611.3" y="5269" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="614.26" y="5279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="3045" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="127.53" y="3055.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="427.3" y="2645" width="4.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="430.27" y="2655.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="48.0" y="5397" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="51.02" y="5407.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="36.3" y="4421" width="1.4" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="39.28" y="4431.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.04%)</title><rect x="83.2" y="4981" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="86.22" y="4991.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="421.2" y="3925" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="424.17" y="3935.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="268.2" y="1365" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="271.15" y="1375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="3765" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="417.13" y="3775.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Value*&gt;::insert(llvm::Value*) (1 samples, 0.04%)</title><rect x="754.9" y="5781" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="757.89" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="242.8" y="2885" width="8.0" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="245.81" y="2895.5" ></text>
</g>
<g >
<title>`0x10c6cc104 (1 samples, 0.04%)</title><rect x="17.5" y="3973" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="20.51" y="3983.5" ></text>
</g>
<g >
<title>0x11a477094 (4 samples, 0.16%)</title><rect x="168.2" y="965" width="1.9" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="171.18" y="975.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="166.3" y="965" width="0.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="169.30" y="975.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="427.3" y="2677" width="4.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="430.27" y="2687.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="410.4" y="3381" width="0.4" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="413.37" y="3391.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="1045" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="428.86" y="1055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="397.7" y="3621" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="400.70" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3861" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="404.93" y="3871.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="3925" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="408.68" y="3935.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const (1 samples, 0.04%)</title><rect x="922.5" y="5861" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="925.46" y="5871.5" ></text>
</g>
<g >
<title>`core::ext__class_get(gctools::smart_ptr&lt;core::ClassHolder_O&gt;) (1 samples, 0.04%)</title><rect x="564.8" y="5797" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="567.80" y="5807.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (EXPLICIT-MULTI-PARAM (1 samples, 0.04%)</title><rect x="62.1" y="4997" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="65.10" y="5007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="407.6" y="5109" width="3.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="410.56" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4037" width="0.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="408.68" y="4047.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="182.7" y="133" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="185.73" y="143.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(__gmp_expr&lt;__mpz_struct [1], __mpz_stru (1 samples, 0.04%)</title><rect x="462.5" y="5797" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="465.47" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (9 samples, 0.36%)</title><rect x="235.3" y="485" width="4.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="238.30" y="495.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="3013" width="4.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="285.70" y="3023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (113 samples, 4.49%)</title><rect x="178.0" y="2549" width="53.1" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="181.04" y="2559.5" >`INTE..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="1941" width="1.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="168.83" y="1951.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (3 samples, 0.12%)</title><rect x="134.4" y="4357" width="1.4" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="137.38" y="4367.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="166.8" y="1493" width="0.4" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="169.77" y="1503.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.04%)</title><rect x="401.9" y="3157" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="404.93" y="3167.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="61.6" y="5061" width="1.0" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="64.63" y="5071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="396.8" y="4373" width="0.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="399.76" y="4383.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="99.2" y="3685" width="0.4" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="102.18" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="400.5" y="3957" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="403.52" y="3967.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="429.1" y="2229" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="432.15" y="2239.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.04%)</title><rect x="239.5" y="2853" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="242.52" y="2863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="3989" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="417.13" y="3999.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="427.3" y="2085" width="0.9" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="430.27" y="2095.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="391.6" y="2805" width="0.5" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="394.60" y="2815.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (1 samples, 0.04%)</title><rect x="780.2" y="5733" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="783.24" y="5743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="396.8" y="3925" width="0.9" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="399.76" y="3935.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="409.4" y="3717" width="1.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="412.44" y="3727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.0" y="2421" width="0.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="411.97" y="2431.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="785.4" y="5733" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="788.40" y="5743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="258.8" y="1477" width="0.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="261.77" y="1487.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (3 samples, 0.12%)</title><rect x="808.4" y="5621" width="1.4" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="811.40" y="5631.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisPass(void const*) (1 samples, 0.04%)</title><rect x="921.1" y="5845" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="924.05" y="5855.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (4 samples, 0.16%)</title><rect x="165.4" y="4165" width="1.8" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="168.36" y="4175.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="382.2" y="4341" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="385.21" y="4351.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="242.8" y="2821" width="8.0" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="245.81" y="2831.5" ></text>
</g>
<g >
<title>`instructionClobbersQuery(llvm::MemoryDef*, llvm::MemoryUseOrDef (2 samples, 0.08%)</title><rect x="787.7" y="5829" width="1.0" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="790.75" y="5839.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.04%)</title><rect x="357.3" y="5829" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="360.33" y="5839.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (3 samples, 0.12%)</title><rect x="123.1" y="2213" width="1.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="126.12" y="2223.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'IF) T T T))^METHOD (2 samples, 0.08%)</title><rect x="295.4" y="2597" width="0.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="298.38" y="2607.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.04%)</title><rect x="17.0" y="4357" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="20.04" y="4367.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (3 samples, 0.12%)</title><rect x="325.9" y="4773" width="1.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="328.89" y="4783.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="172.4" y="1733" width="5.6" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="175.40" y="1743.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="233.9" y="709" width="1.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="236.89" y="719.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3125" width="3.8" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="420.41" y="3135.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="336.2" y="4293" width="1.0" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="339.21" y="4303.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleBaseString_O, unsigned  (1 samples, 0.04%)</title><rect x="34.9" y="4069" width="0.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="37.88" y="4079.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="384.6" y="4293" width="3.2" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="387.56" y="4303.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="91.7" y="4165" width="7.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="94.67" y="4175.5" ></text>
</g>
<g >
<title>`SYNTAX-TYPE^ECLECTOR.READTABLE^((READTABLE T))^METHOD^^ (1 samples, 0.04%)</title><rect x="22.2" y="3861" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="25.20" y="3871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (15 samples, 0.60%)</title><rect x="232.5" y="2805" width="7.0" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="235.48" y="2815.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (2 samples, 0.08%)</title><rect x="646.5" y="5317" width="0.9" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="649.47" y="5327.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="350.3" y="5365" width="1.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="353.29" y="5375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="165.8" y="1125" width="1.0" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="168.83" y="1135.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PHINode*, llvm::de (1 samples, 0.04%)</title><rect x="934.7" y="5813" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="937.66" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="409.4" y="4133" width="1.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="412.44" y="4143.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="287.4" y="4885" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="290.40" y="4895.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomT (1 samples, 0.04%)</title><rect x="854.4" y="5845" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="857.40" y="5855.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="36.3" y="3893" width="0.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="39.28" y="3903.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="427.3" y="3141" width="4.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="430.27" y="3151.5" ></text>
</g>
<g >
<title>`core::core__file_scope(gctools::smart_ptr&lt;core::T_O&gt;, gctools:: (1 samples, 0.04%)</title><rect x="42.9" y="4805" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="45.86" y="4815.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="393.9" y="3077" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="396.95" y="3087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="231.1" y="3701" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="234.07" y="3711.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.04%)</title><rect x="832.8" y="5701" width="0.5" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="835.81" y="5711.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="244.7" y="485" width="0.5" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="247.69" y="495.5" ></text>
</g>
<g >
<title>`HOIST-LOAD-TIME-VALUE^CLASP-CLEAVIR-AST^FN^^ (91 samples, 3.62%)</title><rect x="313.2" y="5733" width="42.7" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="316.21" y="5743.5" >`HOI..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (56 samples, 2.23%)</title><rect x="204.3" y="37" width="26.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="207.32" y="47.5" >`..</text>
</g>
<g >
<title>`IRC-EXTRACT-VALUE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="627.2" y="5125" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="630.22" y="5135.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="81.3" y="4997" width="2.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="84.34" y="5007.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="34.4" y="4821" width="0.9" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="37.41" y="4831.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (1 samples, 0.04%)</title><rect x="527.7" y="5653" width="0.5" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="530.72" y="5663.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.04%)</title><rect x="164.9" y="4133" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="167.89" y="4143.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="353.1" y="5461" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="356.11" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (6 samples, 0.24%)</title><rect x="294.0" y="5029" width="2.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="296.97" y="5039.5" ></text>
</g>
<g >
<title>`core::lambdaListHandler_createBindings(gctools::smart_ptr&lt;core: (1 samples, 0.04%)</title><rect x="623.9" y="5109" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="626.94" y="5119.5" ></text>
</g>
<g >
<title>`HOIST-LOAD-TIME-VALUE^CLASP-CLEAVIR-AST^FN^^ (3 samples, 0.12%)</title><rect x="336.2" y="4533" width="1.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="339.21" y="4543.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="284.6" y="1269" width="2.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="287.58" y="1279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="400.0" y="4437" width="2.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="403.05" y="4447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="421.6" y="2725" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="424.64" y="2735.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.0" y="4677" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="419.01" y="4687.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::freePass(llvm::Pass*, llvm::StringRef, llv (6 samples, 0.24%)</title><rect x="924.8" y="5877" width="2.8" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="927.81" y="5887.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::getSCEVAtScope(llvm::SCEV const*, llvm:: (1 samples, 0.04%)</title><rect x="920.1" y="5717" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="923.11" y="5727.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.04%)</title><rect x="831.4" y="5765" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="834.40" y="5775.5" ></text>
</g>
<g >
<title>`llvm::SSAUpdater::GetValueAtEndOfBlockInternal(llvm::BasicBlock (1 samples, 0.04%)</title><rect x="815.4" y="5749" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="818.44" y="5759.5" ></text>
</g>
<g >
<title>0x1225ef094 (17 samples, 0.68%)</title><rect x="242.8" y="2597" width="8.0" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="245.81" y="2607.5" ></text>
</g>
<g >
<title>`CALLING-CONVENTION-VA-LIST*^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="317.0" y="5253" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="319.97" y="5263.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="172.4" y="1637" width="5.6" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="175.40" y="1647.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="695.3" y="5669" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="698.28" y="5679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3253" width="1.8" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="168.36" y="3263.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'IF) T T T))^METHOD (22 samples, 0.88%)</title><rect x="240.5" y="3285" width="10.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="243.46" y="3295.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="455.9" y="5605" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="458.90" y="5615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="417.4" y="1973" width="3.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="420.41" y="1983.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="414.1" y="4037" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="417.13" y="4047.5" ></text>
</g>
<g >
<title>0x11a477094 (6 samples, 0.24%)</title><rect x="294.0" y="4325" width="2.8" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="296.97" y="4335.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="172.4" y="741" width="5.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="175.40" y="751.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="341.8" y="4629" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="344.85" y="4639.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="125.9" y="2901" width="1.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="128.93" y="2911.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="424.9" y="3253" width="1.0" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="427.92" y="3263.5" ></text>
</g>
<g >
<title>`COMPILE-TOPLEVEL^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="355.9" y="5717" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="358.93" y="5727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="104.8" y="3397" width="1.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="107.81" y="3407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="295.4" y="2645" width="0.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="298.38" y="2655.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="853.5" y="5781" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="856.46" y="5791.5" ></text>
</g>
<g >
<title>`llvm::CodeMetrics::analyzeBasicBlock(llvm::BasicBlock const*, l (1 samples, 0.04%)</title><rect x="919.6" y="5845" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="922.64" y="5855.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (1 samples, 0.04%)</title><rect x="563.9" y="5797" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="566.86" y="5807.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (60 samples, 2.39%)</title><rect x="202.9" y="1237" width="28.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="205.91" y="1247.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="401.9" y="4053" width="0.5" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="404.93" y="4063.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (2 samples, 0.08%)</title><rect x="758.6" y="5765" width="1.0" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="761.65" y="5775.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="276.1" y="4933" width="10.8" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="279.13" y="4943.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="423.0" y="3253" width="1.9" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="426.05" y="3263.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (7 samples, 0.28%)</title><rect x="332.9" y="4597" width="3.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="335.93" y="4607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="709" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="423.70" y="719.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'BLOCK) T T T))^MET (15 samples, 0.60%)</title><rect x="232.5" y="3109" width="7.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="235.48" y="3119.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (15 samples, 0.60%)</title><rect x="232.5" y="3061" width="7.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="235.48" y="3071.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="124.5" y="2389" width="1.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="127.53" y="2399.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CorrelatedValuePropagation::runOnFunctio (17 samples, 0.68%)</title><rect x="690.1" y="5893" width="8.0" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="693.12" y="5903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="238.1" y="53" width="1.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="241.11" y="63.5" ></text>
</g>
<g >
<title>`core::Pathname_O::makePathname(gctools::smart_ptr&lt;core::T_O&gt;, g (1 samples, 0.04%)</title><rect x="951.6" y="5909" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="954.56" y="5919.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="186.0" y="181" width="1.0" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="189.01" y="191.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="60.2" y="5141" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="63.22" y="5151.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="233.9" y="501" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="236.89" y="511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.9" y="3557" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="396.95" y="3567.5" ></text>
</g>
<g >
<title>`core::core__file_scope(gctools::smart_ptr&lt;core::T_O&gt;, gctools:: (1 samples, 0.04%)</title><rect x="26.4" y="4581" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="29.43" y="4591.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (7 samples, 0.28%)</title><rect x="88.4" y="4293" width="3.3" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="91.39" y="4303.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="454.5" y="5717" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="457.49" y="5727.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="340.9" y="4485" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="343.91" y="4495.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="114.2" y="3509" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="117.20" y="3519.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (1 samples, 0.04%)</title><rect x="278.9" y="885" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="281.95" y="895.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (13 samples, 0.52%)</title><rect x="824.8" y="5797" width="6.1" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="827.83" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="281.3" y="3525" width="5.6" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="284.30" y="3535.5" ></text>
</g>
<g >
<title>`core::core__find_class_holder(gctools::smart_ptr&lt;core::Symbol_O (1 samples, 0.04%)</title><rect x="86.0" y="5045" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="89.04" y="5055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (5 samples, 0.20%)</title><rect x="400.0" y="4885" width="2.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="403.05" y="4895.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (4 samples, 0.16%)</title><rect x="724.9" y="5861" width="1.8" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="727.85" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="279.9" y="437" width="0.9" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="282.89" y="447.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="2181" width="50.7" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="183.38" y="2191.5" >`INTE..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="393.9" y="3173" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="396.95" y="3183.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="47.5" y="5493" width="1.0" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="50.55" y="5503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="295.4" y="3125" width="0.9" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="298.38" y="3135.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="241.4" y="2901" width="1.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="244.40" y="2911.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="247.5" y="357" width="1.9" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="250.50" y="367.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="88.4" y="4245" width="3.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="91.39" y="4255.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getEdgeValue(llvm::Va (1 samples, 0.04%)</title><rect x="693.9" y="5797" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="696.87" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="415.1" y="4597" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="418.07" y="4607.5" ></text>
</g>
<g >
<title>`llvm::APInt::udiv(llvm::APInt const&amp;) const (1 samples, 0.04%)</title><rect x="868.5" y="5781" width="0.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="871.48" y="5791.5" ></text>
</g>
<g >
<title>`CST-TO-AST^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="336.2" y="4405" width="1.0" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="339.21" y="4415.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (145 samples, 5.77%)</title><rect x="59.8" y="5397" width="68.0" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="62.75" y="5407.5" >`core::..</text>
</g>
<g >
<title>0x11a477094 (6 samples, 0.24%)</title><rect x="167.7" y="1653" width="2.8" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="170.71" y="1663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="410.8" y="4277" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="413.84" y="4287.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="126.4" y="2245" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="129.40" y="2255.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="1221" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="423.70" y="1231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (43 samples, 1.71%)</title><rect x="383.6" y="5173" width="20.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="386.62" y="5183.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.4" y="1829" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="428.39" y="1839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="240.0" y="2901" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="242.99" y="2911.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="321.7" y="5125" width="0.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="324.66" y="5135.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (11 samples, 0.44%)</title><rect x="122.2" y="3701" width="5.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="125.18" y="3711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.3" y="3429" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="414.31" y="3439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="279.4" y="885" width="1.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="282.42" y="895.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="388.3" y="4245" width="4.7" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="391.31" y="4255.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (136 samples, 5.41%)</title><rect x="167.2" y="3125" width="63.9" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="170.24" y="3135.5" >`core::..</text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="254.1" y="3013" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="257.07" y="3023.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="393.0" y="4197" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="396.01" y="4207.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="168.2" y="1045" width="1.9" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="171.18" y="1055.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="268.6" y="869" width="3.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="271.62" y="879.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.04%)</title><rect x="370.9" y="5717" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="373.95" y="5727.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.04%)</title><rect x="947.3" y="5893" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="950.33" y="5903.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (145 samples, 5.77%)</title><rect x="59.8" y="5573" width="68.0" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="62.75" y="5583.5" >`CONVER..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="144.2" y="4341" width="1.9" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="147.24" y="4351.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="725" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="423.70" y="735.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (48 samples, 1.91%)</title><rect x="180.4" y="901" width="22.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="183.38" y="911.5" >`..</text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4117" width="1.4" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="39.28" y="4127.5" ></text>
</g>
<g >
<title>`REGISTER-FUNCTION^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="300.5" y="5909" width="1.0" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="303.54" y="5919.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.04%)</title><rect x="588.7" y="5717" width="0.5" height="15.0" fill="rgb(248,121,121)" rx="2" ry="2" />
<text  x="591.74" y="5727.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (305 samples, 12.13%)</title><rect x="130.2" y="5093" width="143.1" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="133.16" y="5103.5" >`CONVERT-CST^CLEAV..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="4213" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="414.31" y="4223.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.0" y="1749" width="0.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="411.97" y="1759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1765" width="2.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="420.41" y="1775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="120.8" y="3557" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="123.77" y="3567.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="142.4" y="4293" width="0.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="145.36" y="4303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="452.6" y="5541" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="455.62" y="5551.5" ></text>
</g>
<g >
<title>`AST-&gt;HIR^CLASP-CLEAVIR^FN^^ (179 samples, 7.12%)</title><rect x="369.5" y="5877" width="84.1" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="372.54" y="5887.5" >`AST-&gt;HIR..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="94.5" y="3669" width="3.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="97.49" y="3679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="2373" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="412.90" y="2383.5" ></text>
</g>
<g >
<title>`ITEM-EQUAL^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-ITEM))^MET (1 samples, 0.04%)</title><rect x="116.1" y="3477" width="0.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="119.08" y="3487.5" ></text>
</g>
<g >
<title>`PARSE-FUNCTION-TYPE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="324.5" y="4853" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="327.48" y="4863.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (20 samples, 0.80%)</title><rect x="16.6" y="4565" width="9.4" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="19.57" y="4575.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="669.5" y="5701" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="672.47" y="5711.5" ></text>
</g>
<g >
<title>`cc_unwind (2 samples, 0.08%)</title><rect x="14.2" y="5541" width="1.0" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="17.22" y="5551.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::BasicBlock&gt;, llvm::S (4 samples, 0.16%)</title><rect x="949.7" y="5877" width="1.9" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="952.68" y="5887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="49.9" y="5397" width="5.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="52.90" y="5407.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eql(core::Hash1Generator&amp;, gctools::s (1 samples, 0.04%)</title><rect x="152.7" y="4261" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="155.69" y="4271.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (4 samples, 0.16%)</title><rect x="748.8" y="5765" width="1.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="751.79" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (13 samples, 0.52%)</title><rect x="427.3" y="3845" width="6.1" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="430.27" y="3855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.0" y="1861" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="411.97" y="1871.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (2 samples, 0.08%)</title><rect x="295.4" y="2853" width="0.9" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="298.38" y="2863.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="167.2" y="2341" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="170.24" y="2351.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="18.0" y="3557" width="0.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="20.98" y="3567.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="2741" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="414.78" y="2751.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="168.2" y="901" width="1.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="171.18" y="911.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="3413" width="3.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="420.41" y="3423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="415.5" y="4085" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="418.54" y="4095.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.04%)</title><rect x="26.9" y="4677" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="29.90" y="4687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="410.8" y="4165" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="413.84" y="4175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5189" width="0.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="408.21" y="5199.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="314.2" y="5189" width="0.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="317.15" y="5199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="1477" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="423.70" y="1487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="4485" width="1.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="411.03" y="4495.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.3" y="3301" width="0.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="414.31" y="3311.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="350.3" y="5381" width="1.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="353.29" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CDR-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="388.3" y="3797" width="1.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="391.31" y="3807.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;std::__1::pair&lt;llvm::DomTreeNodeBase&lt;llvm (1 samples, 0.04%)</title><rect x="922.0" y="5813" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="924.99" y="5823.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (17 samples, 0.68%)</title><rect x="232.5" y="3253" width="8.0" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="235.48" y="3263.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="125.5" y="1829" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="128.47" y="1839.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (1 samples, 0.04%)</title><rect x="747.4" y="5781" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="750.38" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="388.3" y="3925" width="3.8" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="391.31" y="3935.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="396.3" y="4693" width="3.7" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="399.29" y="4703.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'BLOCK) T T T))^MET (43 samples, 1.71%)</title><rect x="252.2" y="3701" width="20.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="255.20" y="3711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="421.6" y="3285" width="1.0" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="424.64" y="3295.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (3 samples, 0.12%)</title><rect x="590.6" y="5733" width="1.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="593.61" y="5743.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.04%)</title><rect x="735.2" y="5797" width="0.4" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="738.18" y="5807.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::Grow(unsigned int) (1 samples, 0.04%)</title><rect x="708.9" y="5797" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="711.89" y="5807.5" ></text>
</g>
<g >
<title>`PARSE-FUNCTION-TYPE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="94.0" y="3669" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="97.02" y="3679.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="340.9" y="4421" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="343.91" y="4431.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="231.5" y="3589" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="234.54" y="3599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="423.5" y="1925" width="1.0" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="426.52" y="1935.5" ></text>
</g>
<g >
<title>`LITERAL-DATUM-P^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="681.2" y="5941" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="684.20" y="5951.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="135.8" y="4277" width="0.9" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="138.79" y="4287.5" ></text>
</g>
<g >
<title>`core::clasp_write_char(int, gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="24.6" y="4101" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="27.55" y="4111.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (31 samples, 1.23%)</title><rect x="257.4" y="2341" width="14.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="260.36" y="2351.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="277" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="423.70" y="287.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="2709" width="4.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="279.60" y="2719.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="410.8" y="5141" width="5.7" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="413.84" y="5151.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="580.8" y="5765" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="583.76" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="2645" width="3.8" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="420.41" y="2655.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="295.8" y="1973" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="298.85" y="1983.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="604.7" y="5461" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="607.69" y="5471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="242.8" y="2037" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="245.81" y="2047.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="134.9" y="4309" width="0.4" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="137.85" y="4319.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="593.9" y="5765" width="0.5" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="596.90" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (15 samples, 0.60%)</title><rect x="232.5" y="2629" width="7.0" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="235.48" y="2639.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="122.6" y="2629" width="1.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="125.65" y="2639.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="282.7" y="2133" width="4.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="285.70" y="2143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="417.4" y="2197" width="3.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="420.41" y="2207.5" ></text>
</g>
<g >
<title>`llvm::InstructionCombiningPass::runOnFunction(llvm::Function&amp;) (130 samples, 5.17%)</title><rect x="858.2" y="5893" width="61.0" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="861.15" y="5903.5" >`llvm:..</text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="425.9" y="3285" width="0.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="428.86" y="3295.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="401.9" y="3269" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="404.93" y="3279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="114.2" y="3493" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="117.20" y="3503.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="311.3" y="5765" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="314.34" y="5775.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="922.0" y="5781" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="924.99" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="516.0" y="5781" width="2.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="518.98" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="423.5" y="2325" width="1.0" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="426.52" y="2335.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="4069" width="0.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="254.26" y="4079.5" ></text>
</g>
<g >
<title>`unw_init_local (1 samples, 0.04%)</title><rect x="513.2" y="5685" width="0.4" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="516.17" y="5695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="386.4" y="3109" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="389.44" y="3119.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction*, llvm::Sma (1 samples, 0.04%)</title><rect x="794.8" y="5829" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="797.79" y="5839.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.04%)</title><rect x="358.3" y="5733" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="361.27" y="5743.5" ></text>
</g>
<g >
<title>`HOIST-AST^CLASP-CLEAVIR^FN^^ (48 samples, 1.91%)</title><rect x="324.5" y="5221" width="22.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="327.48" y="5231.5" >`..</text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(l (1 samples, 0.04%)</title><rect x="821.5" y="5701" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="824.54" y="5711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="242.8" y="2949" width="8.0" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="245.81" y="2959.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.04%)</title><rect x="352.2" y="5445" width="0.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="355.17" y="5455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="390.7" y="3093" width="1.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="393.66" y="3103.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="308.5" y="5845" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="311.52" y="5855.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (EXPLICIT-MULTI-PARAM (1 samples, 0.04%)</title><rect x="84.6" y="4933" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="87.63" y="4943.5" ></text>
</g>
<g >
<title>`free_small (1 samples, 0.04%)</title><rect x="692.9" y="5797" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="695.94" y="5807.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.04%)</title><rect x="98.2" y="3765" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="101.24" y="3775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2101" width="4.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="285.70" y="2111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1845" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="427.92" y="1855.5" ></text>
</g>
<g >
<title>`llvm::APInt::clearUnusedBits() (1 samples, 0.04%)</title><rect x="915.9" y="5813" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="918.89" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1573" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="427.92" y="1583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="182.7" y="341" width="4.7" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="185.73" y="351.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (43 samples, 1.71%)</title><rect x="252.2" y="4005" width="20.2" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="255.20" y="4015.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (8 samples, 0.32%)</title><rect x="18.0" y="3925" width="3.7" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="20.98" y="3935.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.04%)</title><rect x="750.2" y="5621" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="753.20" y="5631.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="423.5" y="2069" width="1.0" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="426.52" y="2079.5" ></text>
</g>
<g >
<title>`cc_unwind (2 samples, 0.08%)</title><rect x="287.9" y="4485" width="0.9" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="290.87" y="4495.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="165.4" y="2789" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="168.36" y="2799.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="422.1" y="2389" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="425.11" y="2399.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="38.6" y="4485" width="2.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="41.63" y="4495.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="285.5" y="277" width="1.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="288.52" y="287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="422.1" y="2517" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="425.11" y="2527.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="416.5" y="4981" width="0.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="419.48" y="4991.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="1829" width="7.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="246.28" y="1839.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm:: (1 samples, 0.04%)</title><rect x="904.2" y="5813" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="907.15" y="5823.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="36.8" y="3461" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="39.75" y="3471.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (3 samples, 0.12%)</title><rect x="250.8" y="4245" width="1.4" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="253.79" y="4255.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="340.4" y="4581" width="1.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="343.44" y="4591.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="247.0" y="181" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="250.03" y="191.5" ></text>
</g>
<g >
<title>`CST-FROM-ELEMENT^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="5221" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="327.01" y="5231.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="86.5" y="4997" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="89.51" y="5007.5" ></text>
</g>
<g >
<title>`llvm::ReplaceableMetadataImpl::getOrCreate(llvm::Metadata&amp;) (1 samples, 0.04%)</title><rect x="604.7" y="5381" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="607.69" y="5391.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (6 samples, 0.24%)</title><rect x="52.2" y="4677" width="2.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="55.24" y="4687.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="423.5" y="1765" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="426.52" y="1775.5" ></text>
</g>
<g >
<title>`llvm::LPPassManager::runOnFunction(llvm::Function&amp;) (5 samples, 0.20%)</title><rect x="919.2" y="5893" width="2.3" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="922.17" y="5903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="291.2" y="5509" width="0.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="294.15" y="5519.5" ></text>
</g>
<g >
<title>`COMMA^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="34.4" y="4581" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="37.41" y="4591.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.04%)</title><rect x="461.5" y="5733" width="0.5" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="464.54" y="5743.5" ></text>
</g>
<g >
<title>`llvm::GVN::runImpl(llvm::Function&amp;, llvm::AssumptionCache&amp;, llv (69 samples, 2.74%)</title><rect x="801.4" y="5877" width="32.3" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="804.36" y="5887.5" >`l..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="86.5" y="4949" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="89.51" y="4959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="379.9" y="4933" width="3.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="382.86" y="4943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2757" width="1.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="427.92" y="2767.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="340.0" y="4629" width="0.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="342.97" y="4639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="3205" width="0.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="428.86" y="3215.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="423.0" y="2453" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="426.05" y="2463.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="124.5" y="2789" width="1.4" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="127.53" y="2799.5" ></text>
</g>
<g >
<title>`PROCESS-CAPTURED-VARIABLES^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="330.1" y="4469" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="333.11" y="4479.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.0" y="1669" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="411.97" y="1679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (36 samples, 1.43%)</title><rect x="416.9" y="5029" width="16.9" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="419.95" y="5039.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.04%)</title><rect x="94.0" y="3557" width="0.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="97.02" y="3567.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="2469" width="4.2" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="285.70" y="2479.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.04%)</title><rect x="234.8" y="405" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="237.83" y="415.5" ></text>
</g>
<g >
<title>`POSSIBLY-ADD-ITEM^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-STA (1 samples, 0.04%)</title><rect x="258.8" y="1525" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="261.77" y="1535.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="413.7" y="3957" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="416.66" y="3967.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (1 samples, 0.04%)</title><rect x="18.0" y="3461" width="0.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="20.98" y="3471.5" ></text>
</g>
<g >
<title>`SL-BOUNDP^CORE^FN^^ (1 samples, 0.04%)</title><rect x="127.3" y="5221" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="130.34" y="5231.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="236.2" y="213" width="3.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="239.24" y="223.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (9 samples, 0.36%)</title><rect x="276.6" y="2277" width="4.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="279.60" y="2287.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (55 samples, 2.19%)</title><rect x="60.7" y="5141" width="25.8" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="63.69" y="5151.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (514 samples, 20.45%)</title><rect x="58.3" y="5845" width="241.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="61.35" y="5855.5" >`core::clos__interpret_dtree_pro..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (136 samples, 5.41%)</title><rect x="167.2" y="3157" width="63.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="170.24" y="3167.5" >`CONVER..</text>
</g>
<g >
<title>`small_malloc_should_clear (1 samples, 0.04%)</title><rect x="754.9" y="5669" width="0.5" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="757.89" y="5679.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="19.9" y="3573" width="0.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="22.86" y="3583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="424.9" y="2117" width="1.0" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="427.92" y="2127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3349" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="414.78" y="3359.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.4" y="3237" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="412.44" y="3247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="61.6" y="5045" width="1.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="64.63" y="5055.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SimplifyCFGOpt::SimplifyCondBranch(llvm: (4 samples, 0.16%)</title><rect x="834.7" y="5829" width="1.9" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="837.69" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="418.8" y="933" width="1.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="421.82" y="943.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="1829" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="428.86" y="1839.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="554.5" y="5765" width="0.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="557.47" y="5775.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="185.1" y="165" width="0.4" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="188.08" y="175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="428.7" y="2021" width="0.4" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="431.68" y="2031.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.0" y="2213" width="0.4" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="411.97" y="2223.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (181 samples, 7.20%)</title><rect x="593.0" y="5877" width="84.9" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="595.96" y="5887.5" >`TRANSLAT..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="2869" width="1.4" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="411.03" y="2879.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="115.1" y="3557" width="1.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="118.14" y="3567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="423.0" y="2485" width="0.5" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="426.05" y="2495.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="677.4" y="5861" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="680.45" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="314.6" y="5125" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="317.62" y="5135.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (7 samples, 0.28%)</title><rect x="268.6" y="1173" width="3.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="271.62" y="1183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="1925" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="434.96" y="1935.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="240.0" y="2789" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="242.99" y="2799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2533" width="0.5" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="412.44" y="2543.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="254.1" y="2997" width="0.4" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="257.07" y="3007.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="1749" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="423.70" y="1759.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (3 samples, 0.12%)</title><rect x="165.8" y="1621" width="1.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="168.83" y="1631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((MULTIPLE-VALUE-FOREIGN-CALL-AS (1 samples, 0.04%)</title><rect x="387.4" y="3829" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="390.37" y="3839.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::StringOutputStream_O&gt; gctools::GCObjec (1 samples, 0.04%)</title><rect x="33.0" y="5205" width="0.5" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="36.00" y="5215.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::dumpUsedSet(llvm::Pass const*) const (1 samples, 0.04%)</title><rect x="791.5" y="5893" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="794.50" y="5903.5" ></text>
</g>
<g >
<title>`core::coerce::outputStreamDesignator(gctools::smart_ptr&lt;core::T (1 samples, 0.04%)</title><rect x="42.4" y="4533" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="45.39" y="4543.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="613" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="171.18" y="623.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="693" width="9.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="262.24" y="703.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.3" y="1317" width="0.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="430.27" y="1327.5" ></text>
</g>
<g >
<title>`core::interpreter_lookup_function_or_error(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="433.8" y="5477" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="436.84" y="5487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="249.4" y="485" width="0.4" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="252.38" y="495.5" ></text>
</g>
<g >
<title>`std::__1::enable_if&lt;!(std::is_array&lt;llvm::LoopAccessInfo&gt;::valu (1 samples, 0.04%)</title><rect x="846.4" y="5829" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="849.42" y="5839.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="242.8" y="2773" width="8.0" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="245.81" y="2783.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="351.2" y="5269" width="0.5" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="354.23" y="5279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="417.4" y="1957" width="3.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="420.41" y="1967.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="424.9" y="2501" width="1.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="427.92" y="2511.5" ></text>
</g>
<g >
<title>`llvm::GEPOperator::hasAllZeroIndices() const (1 samples, 0.04%)</title><rect x="874.6" y="5765" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="877.58" y="5775.5" ></text>
</g>
<g >
<title>`wrapped_Create_llvm__LLVMContext_const_llvm__Twine_llvm__Functi (1 samples, 0.04%)</title><rect x="633.3" y="5349" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="636.33" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5125" width="0.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="408.21" y="5135.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="423.0" y="2261" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="426.05" y="2271.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.04%)</title><rect x="402.9" y="5013" width="0.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="405.86" y="5023.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.08%)</title><rect x="101.1" y="3653" width="0.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="104.06" y="3663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="432.0" y="1765" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="434.96" y="1775.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (1 samples, 0.04%)</title><rect x="38.2" y="4245" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="41.16" y="4255.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="112.3" y="3749" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="115.32" y="3759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.5" y="4613" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="418.54" y="4623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.2" y="4021" width="0.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="424.17" y="4031.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (2 samples, 0.08%)</title><rect x="79.9" y="4949" width="1.0" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="82.94" y="4959.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4133" width="1.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="39.28" y="4143.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="381.7" y="4373" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="384.74" y="4383.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="401.0" y="3589" width="0.9" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="403.99" y="3599.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.7" y="1781" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="430.74" y="1791.5" ></text>
</g>
<g >
<title>`__gmp_default_allocate (1 samples, 0.04%)</title><rect x="961.9" y="6421" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="964.89" y="6431.5" ></text>
</g>
<g >
<title>`core::cl__class_of(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="464.4" y="5813" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="467.35" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="401.0" y="3253" width="0.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="403.99" y="3263.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="243.3" y="933" width="4.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="246.28" y="943.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="669.5" y="5749" width="0.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="672.47" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="251.3" y="3765" width="0.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="254.26" y="3775.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="385.0" y="3781" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="388.03" y="3791.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="790.6" y="5781" width="0.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="793.56" y="5791.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="298.2" y="5221" width="0.5" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="301.19" y="5231.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="416.5" y="4277" width="0.4" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="419.48" y="4287.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="51.8" y="5189" width="3.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="54.77" y="5199.5" ></text>
</g>
<g >
<title>`llvm::isMallocOrCallocLikeFn(llvm::Value const*, llvm::TargetLi (2 samples, 0.08%)</title><rect x="766.2" y="5733" width="0.9" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="769.16" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="379.4" y="5125" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="382.40" y="5135.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolutionWrapperPass::releaseMemory() (1 samples, 0.04%)</title><rect x="927.2" y="5861" width="0.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="930.15" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="3141" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="412.90" y="3151.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="427.3" y="2757" width="4.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="430.27" y="2767.5" ></text>
</g>
<g >
<title>`cc_error_type_error (2 samples, 0.08%)</title><rect x="297.7" y="5381" width="1.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="300.72" y="5391.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (24 samples, 0.95%)</title><rect x="101.1" y="3749" width="11.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="104.06" y="3759.5" ></text>
</g>
<g >
<title>`GC_malloc_atomic (1 samples, 0.04%)</title><rect x="380.3" y="4357" width="0.5" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="383.33" y="4367.5" ></text>
</g>
<g >
<title>`IRC-CREATE-FUNCTION-DESCRIPTION^COMPILER^FN^^ (10 samples, 0.40%)</title><rect x="671.8" y="5813" width="4.7" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="674.81" y="5823.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="121.2" y="3557" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="124.24" y="3567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="234.4" y="581" width="0.9" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="237.36" y="591.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="49.9" y="5093" width="1.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="52.90" y="5103.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (2 samples, 0.08%)</title><rect x="810.7" y="5605" width="1.0" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="813.75" y="5615.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="281.3" y="3429" width="5.6" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="284.30" y="3439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="332.9" y="4341" width="0.5" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="335.93" y="4351.5" ></text>
</g>
<g >
<title>`CST-TO-AST^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="318.4" y="5605" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="321.38" y="5615.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="23.6" y="3893" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="26.61" y="3903.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="320.7" y="5349" width="1.0" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="323.72" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.4" y="2421" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="435.43" y="2431.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="99.2" y="3749" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="102.18" y="3759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (31 samples, 1.23%)</title><rect x="257.4" y="2661" width="14.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="260.36" y="2671.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="255.5" y="3013" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="258.48" y="3023.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="243.3" y="437" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="246.28" y="447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="395.8" y="4965" width="4.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="398.82" y="4975.5" ></text>
</g>
<g >
<title>`EXPAND-COMPILER-MACRO^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="239.5" y="2917" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="242.52" y="2927.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="51.8" y="5157" width="3.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="54.77" y="5167.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.3" y="3877" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="414.31" y="3887.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::sm (1 samples, 0.04%)</title><rect x="591.1" y="5701" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="594.08" y="5711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="276.1" y="4293" width="5.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="279.13" y="4303.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="336.2" y="4277" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="339.21" y="4287.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="172.4" y="293" width="4.7" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="175.40" y="303.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="232.0" y="3365" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="235.01" y="3375.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="666.2" y="5525" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="669.18" y="5535.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="285.1" y="869" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="288.05" y="879.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (12 samples, 0.48%)</title><rect x="233.9" y="1765" width="5.6" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="236.89" y="1775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (19 samples, 0.76%)</title><rect x="259.2" y="1141" width="9.0" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="262.24" y="1151.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="421.2" y="3893" width="0.4" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="424.17" y="3903.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="390.7" y="3333" width="1.4" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="393.66" y="3343.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (34 samples, 1.35%)</title><rect x="256.0" y="3189" width="15.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="258.95" y="3199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3445" width="1.0" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="424.64" y="3455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="413.2" y="4949" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="416.19" y="4959.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="398.2" y="2821" width="0.4" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="401.17" y="2831.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="287.9" y="5125" width="0.9" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="290.87" y="5135.5" ></text>
</g>
<g >
<title>0x1225e5094 (12 samples, 0.48%)</title><rect x="281.3" y="4501" width="5.6" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="284.30" y="4511.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="276.1" y="5109" width="10.8" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="279.13" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="384.6" y="4149" width="3.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="387.56" y="4159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2677" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="412.90" y="2687.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (17 samples, 0.68%)</title><rect x="232.5" y="3285" width="8.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="235.48" y="3295.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="416.5" y="4133" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="419.48" y="4143.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="411.8" y="3925" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="414.78" y="3935.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (7 samples, 0.28%)</title><rect x="417.4" y="2085" width="3.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="420.41" y="2095.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DILocation*, llvm: (1 samples, 0.04%)</title><rect x="624.9" y="5029" width="0.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="627.88" y="5039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="122.6" y="2725" width="1.9" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="125.65" y="2735.5" ></text>
</g>
<g >
<title>`__error (1 samples, 0.04%)</title><rect x="44.3" y="4997" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="47.26" y="5007.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="61.6" y="4917" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="64.63" y="4927.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="383.2" y="5045" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="386.15" y="5055.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="295.4" y="3349" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="298.38" y="3359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="410.8" y="4805" width="1.9" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="413.84" y="4815.5" ></text>
</g>
<g >
<title>`default_zone_malloc (1 samples, 0.04%)</title><rect x="708.9" y="5749" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="711.89" y="5759.5" ></text>
</g>
<g >
<title>`core::LambdaListHandler_O::createBindingsInScopeVaList(unsigned (1 samples, 0.04%)</title><rect x="649.3" y="5269" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="652.28" y="5279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="2389" width="1.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="432.62" y="2399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.9" y="2821" width="0.5" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="412.90" y="2831.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="345.6" y="4901" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="348.60" y="4911.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="645" width="1.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="288.52" y="655.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (2 samples, 0.08%)</title><rect x="943.1" y="5829" width="0.9" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="946.11" y="5839.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.04%)</title><rect x="807.5" y="5621" width="0.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="810.46" y="5631.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="268.6" y="789" width="3.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="271.62" y="799.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="409.0" y="2485" width="0.4" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="411.97" y="2495.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="1077" width="5.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="175.40" y="1087.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.5" y="2597" width="0.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="404.46" y="2607.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.0" y="3173" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="388.97" y="3183.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="398.2" y="2837" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="401.17" y="2847.5" ></text>
</g>
<g >
<title>`HOIST-LOAD-TIME-VALUE^CLASP-CLEAVIR-AST^FN^^ (2 samples, 0.08%)</title><rect x="318.8" y="5413" width="1.0" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="321.85" y="5423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="278.9" y="709" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="281.95" y="719.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="124.5" y="1541" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="127.53" y="1551.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="1669" width="4.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="279.60" y="1679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (48 samples, 1.91%)</title><rect x="180.4" y="1141" width="22.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="183.38" y="1151.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="1861" width="1.0" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="432.62" y="1871.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((:AROUND) (T T CLASP))^METHOD (10 samples, 0.40%)</title><rect x="288.8" y="5637" width="4.7" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="291.81" y="5647.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="259.2" y="341" width="1.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="262.24" y="351.5" ></text>
</g>
<g >
<title>`core::clasp_array_elttype(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="39.1" y="4085" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="42.10" y="4095.5" ></text>
</g>
<g >
<title>`GC_clear_hdr_marks (1 samples, 0.04%)</title><rect x="470.5" y="5589" width="0.4" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="473.45" y="5599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="123.6" y="1205" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="126.59" y="1215.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="2325" width="0.4" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="428.86" y="2335.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::IntegerType_O&gt; gctools::GCObjectAppro (1 samples, 0.04%)</title><rect x="301.0" y="5877" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="304.01" y="5887.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="533.8" y="5797" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="536.82" y="5807.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="664.3" y="5573" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="667.30" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.08%)</title><rect x="423.5" y="2357" width="1.0" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="426.52" y="2367.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.04%)</title><rect x="787.7" y="5749" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="790.75" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="653.5" y="5525" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="656.51" y="5535.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="279.4" y="581" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="282.42" y="591.5" ></text>
</g>
<g >
<title>`FIND-SLOT-DEFINITION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="508.5" y="5733" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="511.47" y="5743.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (16 samples, 0.64%)</title><rect x="243.3" y="2117" width="7.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="246.28" y="2127.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2325" width="4.2" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="279.60" y="2335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3269" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="414.78" y="3279.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="518.8" y="5797" width="0.5" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="521.80" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (17 samples, 0.68%)</title><rect x="242.8" y="2341" width="8.0" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="245.81" y="2351.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="421.6" y="2533" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="424.64" y="2543.5" ></text>
</g>
<g >
<title>0x11a477094 (12 samples, 0.48%)</title><rect x="233.9" y="1573" width="5.6" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="236.89" y="1583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="423.0" y="2309" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="426.05" y="2319.5" ></text>
</g>
<g >
<title>`llvm::DIBasicType::getImpl(llvm::LLVMContext&amp;, unsigned int, ll (1 samples, 0.04%)</title><rect x="656.3" y="5429" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="659.32" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="400.0" y="4869" width="2.4" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="403.05" y="4879.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (16 samples, 0.64%)</title><rect x="360.2" y="5749" width="7.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="363.15" y="5759.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="233.0" y="2197" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="235.95" y="2207.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="281.3" y="4133" width="5.6" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="284.30" y="4143.5" ></text>
</g>
<g >
<title>0x11a477094 (9 samples, 0.36%)</title><rect x="282.7" y="2869" width="4.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="285.70" y="2879.5" ></text>
</g>
<g >
<title>`OPTIMIZED-SETF-FDEFINITION-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="434.3" y="5557" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="437.31" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="233.9" y="1381" width="5.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="236.89" y="1391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="1973" width="4.2" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="279.60" y="1983.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.04%)</title><rect x="40.5" y="4357" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="43.51" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.08%)</title><rect x="427.3" y="2357" width="0.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="430.27" y="2367.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (5 samples, 0.20%)</title><rect x="448.4" y="5365" width="2.3" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="451.39" y="5375.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (2 samples, 0.08%)</title><rect x="169.1" y="725" width="1.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="172.12" y="735.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="429.6" y="2165" width="1.0" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="432.62" y="2175.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="167.7" y="821" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="170.71" y="831.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="1621" width="5.6" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="236.89" y="1631.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="125.9" y="2197" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="128.93" y="2207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="411.8" y="4005" width="0.5" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="414.78" y="4015.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (4 samples, 0.16%)</title><rect x="413.7" y="4613" width="1.8" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="416.66" y="4623.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (19 samples, 0.76%)</title><rect x="259.2" y="1765" width="9.0" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="262.24" y="1775.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.04%)</title><rect x="731.9" y="5765" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="734.89" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="165.8" y="1253" width="1.0" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="168.83" y="1263.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="256.0" y="2933" width="1.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="258.95" y="2943.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="232.5" y="3349" width="8.0" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="235.48" y="3359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="251.3" y="3845" width="0.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="254.26" y="3855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="276.1" y="4069" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="279.13" y="4079.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::ValueHand (1 samples, 0.04%)</title><rect x="841.7" y="5829" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="844.73" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="423.0" y="2597" width="1.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="426.05" y="2607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="390.7" y="3189" width="1.4" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="393.66" y="3199.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="92.6" y="3253" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="95.61" y="3263.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="564.3" y="5781" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="567.33" y="5791.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (1 samples, 0.04%)</title><rect x="830.0" y="5765" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="832.99" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="168.2" y="1285" width="1.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="171.18" y="1295.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="137.2" y="4245" width="0.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="140.20" y="4255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="2245" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="411.97" y="2255.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((ORDINARY-KEY-PARAMETER T (137 samples, 5.45%)</title><rect x="167.2" y="3749" width="64.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="170.24" y="3759.5" >`PROCES..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="400.5" y="4005" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="403.52" y="4015.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3893" width="0.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="254.26" y="3903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="336.7" y="3957" width="0.5" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="339.68" y="3967.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (1 samples, 0.04%)</title><rect x="943.1" y="5765" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="946.11" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="395.4" y="5045" width="7.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="398.35" y="5055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="3957" width="1.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="412.44" y="3967.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (5 samples, 0.20%)</title><rect x="244.7" y="629" width="2.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="247.69" y="639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1029" width="0.5" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="423.70" y="1039.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (43 samples, 1.71%)</title><rect x="252.2" y="3781" width="20.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="255.20" y="3791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="2485" width="1.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="427.92" y="2495.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="433.4" y="4165" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="436.37" y="4175.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (20 samples, 0.80%)</title><rect x="569.5" y="5813" width="9.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="572.49" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="61.6" y="4949" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="64.63" y="4959.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="31.6" y="5253" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="34.59" y="5263.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="669.5" y="5717" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="672.47" y="5727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="294.0" y="4549" width="2.8" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="296.97" y="4559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2677" width="0.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="412.44" y="2687.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.3" y="3733" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="414.31" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="3509" width="1.4" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="412.44" y="3519.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.04%)</title><rect x="787.7" y="5717" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="790.75" y="5727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="433.8" y="5509" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="436.84" y="5519.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (178 samples, 7.08%)</title><rect x="167.2" y="4149" width="83.6" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="170.24" y="4159.5" >`core::Fu..</text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.08%)</title><rect x="526.8" y="5749" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="529.78" y="5759.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(l (1 samples, 0.04%)</title><rect x="821.5" y="5717" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="824.54" y="5727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="165.4" y="3061" width="1.8" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="168.36" y="3071.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="341.8" y="4677" width="1.0" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="344.85" y="4687.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.04%)</title><rect x="724.4" y="5797" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="727.38" y="5807.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (39 samples, 1.55%)</title><rect x="15.2" y="5461" width="18.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="18.16" y="5471.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ModuleBitcodeWriter::writeConstants(unsi (1 samples, 0.04%)</title><rect x="954.4" y="5893" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="957.38" y="5903.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitGetElementPtrInst(llvm::GetElementPtrI (11 samples, 0.44%)</title><rect x="881.2" y="5845" width="5.1" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="884.15" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="2661" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="414.78" y="2671.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.3" y="1813" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="430.27" y="1823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="340.4" y="4549" width="1.0" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="343.44" y="4559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="295.4" y="2229" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="298.38" y="2239.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="412.3" y="3861" width="0.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="415.25" y="3871.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (11 samples, 0.44%)</title><rect x="276.1" y="4229" width="5.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="279.13" y="4239.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (EXPLICIT-MULTI-PARAM (1 samples, 0.04%)</title><rect x="260.2" y="101" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="263.18" y="111.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (55 samples, 2.19%)</title><rect x="323.5" y="5365" width="25.9" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="326.54" y="5375.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="419.3" y="757" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="422.29" y="767.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (60 samples, 2.39%)</title><rect x="202.9" y="1221" width="28.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="205.91" y="1231.5" >`..</text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (4 samples, 0.16%)</title><rect x="18.0" y="3653" width="1.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="20.98" y="3663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="532.9" y="5781" width="0.9" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="535.88" y="5791.5" ></text>
</g>
<g >
<title>`llvm::PredIteratorCache::GetPreds(llvm::BasicBlock*) (1 samples, 0.04%)</title><rect x="822.5" y="5765" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="825.48" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="281.3" y="3925" width="5.6" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="284.30" y="3935.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="599.5" y="5621" width="1.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="602.53" y="5631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="401.9" y="3333" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="404.93" y="3343.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="421.6" y="2405" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="424.64" y="2415.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeWrapperPass::runOnFunction(llvm::Function&amp;) (8 samples, 0.32%)</title><rect x="716.9" y="5893" width="3.7" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="719.87" y="5903.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1685" width="2.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="420.41" y="1695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="428.7" y="2229" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="431.68" y="2239.5" ></text>
</g>
<g >
<title>`PROCESS-LTV^CLASP-CLEAVIR-AST^FN^^ (7 samples, 0.28%)</title><rect x="314.2" y="5525" width="3.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="317.15" y="5535.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (1 samples, 0.04%)</title><rect x="351.7" y="5429" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="354.70" y="5439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="397.7" y="4101" width="1.9" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="400.70" y="4111.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="247.0" y="213" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="250.03" y="223.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="92.1" y="2949" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="95.14" y="2959.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="871.3" y="5717" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="874.30" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.9" y="3189" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="404.93" y="3199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="408.0" y="4741" width="2.8" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="411.03" y="4751.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="2837" width="0.9" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="428.86" y="2847.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (178 samples, 7.08%)</title><rect x="167.2" y="4133" width="83.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="170.24" y="4143.5" >`INTERPRE..</text>
</g>
<g >
<title>`core::core__file_scope(gctools::smart_ptr&lt;core::T_O&gt;, gctools:: (2 samples, 0.08%)</title><rect x="677.9" y="5925" width="1.0" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="680.92" y="5935.5" ></text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::isFnAttrDi (1 samples, 0.04%)</title><rect x="820.1" y="5637" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="823.14" y="5647.5" ></text>
</g>
<g >
<title>`isMinMaxWithLoads(llvm::Value*) (1 samples, 0.04%)</title><rect x="730.5" y="5845" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="733.49" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="431.5" y="3477" width="1.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="434.50" y="3487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="424.9" y="2293" width="1.0" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="427.92" y="2303.5" ></text>
</g>
<g >
<title>`getValueFromCondition(llvm::Value*, llvm::Value*, bool, llvm::D (1 samples, 0.04%)</title><rect x="703.7" y="5733" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="706.73" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.6" y="2309" width="0.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="424.64" y="2319.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="366.7" y="5717" width="1.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="369.72" y="5727.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="125.9" y="3333" width="1.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="128.93" y="3343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="254.1" y="3061" width="0.4" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="257.07" y="3071.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="186.5" y="53" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="189.48" y="63.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (41 samples, 1.63%)</title><rect x="325.4" y="4901" width="19.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="328.42" y="4911.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="19.9" y="3525" width="0.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="22.86" y="3535.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (87 samples, 3.46%)</title><rect x="86.5" y="5061" width="40.8" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="89.51" y="5071.5" >`PR..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3621" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="415.25" y="3631.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="2037" width="5.6" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="236.89" y="2047.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="423.0" y="3605" width="3.8" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="426.05" y="3615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="243.3" y="469" width="0.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="246.28" y="479.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="410.4" y="3333" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="413.37" y="3343.5" ></text>
</g>
<g >
<title>`GC_mark_from (26 samples, 1.03%)</title><rect x="438.5" y="5381" width="12.2" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="441.54" y="5391.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (85 samples, 3.38%)</title><rect x="87.4" y="4693" width="39.9" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="90.45" y="4703.5" >`CO..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="423.0" y="3909" width="10.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="426.05" y="3919.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="49.9" y="4693" width="0.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="52.90" y="4703.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="272.8" y="4629" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="275.85" y="4639.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="2549" width="0.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="412.90" y="2559.5" ></text>
</g>
<g >
<title>`PROCESS-LTV^CLASP-CLEAVIR-AST^FN^^ (102 samples, 4.06%)</title><rect x="309.5" y="5861" width="47.8" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="312.46" y="5871.5" >`PRO..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.9" y="2389" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="412.90" y="2399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="1077" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="428.86" y="1087.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="424.9" y="1317" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="427.92" y="1327.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (148 samples, 5.89%)</title><rect x="599.1" y="5669" width="69.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="602.06" y="5679.5" >`DO-DEB..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.9" y="1877" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="412.90" y="1887.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (1 samples, 0.04%)</title><rect x="10.0" y="6005" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="13.00" y="6015.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="393.0" y="4261" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="396.01" y="4271.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3733" width="1.8" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="168.36" y="3743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="396.8" y="4085" width="0.9" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="399.76" y="4095.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (10 samples, 0.40%)</title><rect x="172.4" y="133" width="4.7" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="175.40" y="143.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (48 samples, 1.91%)</title><rect x="180.4" y="1125" width="22.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="183.38" y="1135.5" >`..</text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (17 samples, 0.68%)</title><rect x="242.8" y="2261" width="8.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="245.81" y="2271.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (32 samples, 1.27%)</title><rect x="187.4" y="117" width="15.0" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="190.42" y="127.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="432.0" y="1509" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="434.96" y="1519.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="202.4" y="645" width="0.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="205.44" y="655.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="293.5" y="5573" width="3.8" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="296.50" y="5583.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpInstWithConstant(llvm::ICmpInst&amp;) (1 samples, 0.04%)</title><rect x="877.4" y="5845" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="880.40" y="5855.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((NULL T))^METHOD^^ (2 samples, 0.08%)</title><rect x="58.8" y="5749" width="1.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="61.81" y="5759.5" ></text>
</g>
<g >
<title>0x1225e9094 (17 samples, 0.68%)</title><rect x="242.8" y="2869" width="8.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="245.81" y="2879.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="52.7" y="3621" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="55.71" y="3631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="413.7" y="4581" width="1.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="416.66" y="4591.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="124.5" y="2325" width="1.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="127.53" y="2335.5" ></text>
</g>
<g >
<title>`AST-&gt;HIR^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="344.7" y="5061" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="347.66" y="5071.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="318.4" y="5509" width="0.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="321.38" y="5519.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="405.7" y="4213" width="0.4" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="408.68" y="4223.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="47.5" y="5317" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="50.55" y="5327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (19 samples, 0.76%)</title><rect x="259.2" y="885" width="9.0" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="262.24" y="895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="398.2" y="3445" width="0.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="401.17" y="3455.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.04%)</title><rect x="534.3" y="5765" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="537.29" y="5775.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::MemCpyOptLegacyPass::runOnFunction(llvm: (1 samples, 0.04%)</title><rect x="705.1" y="5893" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="708.14" y="5903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="232.5" y="3333" width="8.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="235.48" y="3343.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="414.1" y="3269" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="417.13" y="3279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="23.6" y="4069" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="26.61" y="4079.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (4 samples, 0.16%)</title><rect x="112.8" y="3653" width="1.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="115.79" y="3663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="276.6" y="997" width="2.8" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="279.60" y="1007.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="467.6" y="5797" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="470.64" y="5807.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="310.9" y="5781" width="0.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="313.87" y="5791.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.04%)</title><rect x="337.2" y="4405" width="0.4" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="340.15" y="4415.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="421.6" y="2389" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="424.64" y="2399.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="342.8" y="4597" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="345.78" y="4607.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="90.3" y="3861" width="1.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="93.26" y="3871.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.04%)</title><rect x="26.9" y="4709" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="29.90" y="4719.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="393.9" y="3109" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="396.95" y="3119.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="165.4" y="2693" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="168.36" y="2703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="2533" width="1.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="432.62" y="2543.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="603.3" y="5461" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="606.29" y="5471.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="582.6" y="5749" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="585.63" y="5759.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerABIAlignment(unsigned int) const (1 samples, 0.04%)</title><rect x="744.1" y="5797" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="747.10" y="5807.5" ></text>
</g>
<g >
<title>`core::core__get_sysprop(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.04%)</title><rect x="124.5" y="1477" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="127.53" y="1487.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="510.8" y="5749" width="2.4" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="513.82" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (34 samples, 1.35%)</title><rect x="256.0" y="3173" width="15.9" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="258.95" y="3183.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="390.7" y="3173" width="1.4" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="393.66" y="3183.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PointerIntPair&lt;llv (1 samples, 0.04%)</title><rect x="942.2" y="5861" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="945.17" y="5871.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="1733" width="50.7" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="183.38" y="1743.5" >`COMB..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3477" width="0.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="254.26" y="3487.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (23 samples, 0.91%)</title><rect x="16.6" y="4773" width="10.8" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="19.57" y="4783.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (5 samples, 0.20%)</title><rect x="183.7" y="213" width="2.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="186.67" y="223.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="105.8" y="3349" width="0.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="108.75" y="3359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3141" width="1.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="411.03" y="3151.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="171.5" y="1669" width="0.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="174.46" y="1679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="390.7" y="3013" width="1.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="393.66" y="3023.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::getExistingSCEV(llvm::Value*) (1 samples, 0.04%)</title><rect x="846.4" y="5637" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="849.42" y="5647.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (3 samples, 0.12%)</title><rect x="36.3" y="4021" width="1.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="39.28" y="4031.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.9" y="2533" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="412.90" y="2543.5" ></text>
</g>
<g >
<title>`LTV/BASE-STRING^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="311.8" y="5733" width="0.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="314.81" y="5743.5" ></text>
</g>
<g >
<title>`LISTP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="344.7" y="4981" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="347.66" y="4991.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="20.3" y="3173" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="23.33" y="3183.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="179.0" y="2181" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="181.97" y="2191.5" ></text>
</g>
<g >
<title>`ERROR^COMMON-LISP^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="4565" width="0.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="290.87" y="4575.5" ></text>
</g>
<g >
<title>`llvm::MDNode::classof(llvm::Metadata const*) (1 samples, 0.04%)</title><rect x="604.7" y="5365" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="607.69" y="5375.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (23 samples, 0.91%)</title><rect x="16.6" y="4789" width="10.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="19.57" y="4799.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (55 samples, 2.19%)</title><rect x="60.7" y="5253" width="25.8" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="63.69" y="5263.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="43.8" y="5125" width="0.9" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="46.79" y="5135.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3685" width="0.9" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="254.26" y="3695.5" ></text>
</g>
<g >
<title>`core::core__get_sysprop(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.04%)</title><rect x="64.4" y="4981" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="67.45" y="4991.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="938.9" y="5797" width="0.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="941.89" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (12 samples, 0.48%)</title><rect x="233.9" y="1493" width="5.6" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="236.89" y="1503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="4277" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="414.31" y="4287.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="397.7" y="4005" width="1.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="400.70" y="4015.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="336.2" y="4469" width="1.0" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="339.21" y="4479.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="422.1" y="2837" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="425.11" y="2847.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="332.9" y="4485" width="1.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="335.93" y="4495.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="393.9" y="3189" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="396.95" y="3199.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.08%)</title><rect x="373.3" y="5813" width="0.9" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="376.29" y="5823.5" ></text>
</g>
<g >
<title>`CST-&gt;AST^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="332.9" y="4581" width="1.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="335.93" y="4591.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="5029" width="0.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="290.87" y="5039.5" ></text>
</g>
<g >
<title>`llvm::CallSiteBase&lt;llvm::Function const, llvm::BasicBlock const (1 samples, 0.04%)</title><rect x="803.7" y="5765" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="806.71" y="5775.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="167.7" y="997" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="170.71" y="1007.5" ></text>
</g>
<g >
<title>`llvmo::ArrayType_O::get(gctools::smart_ptr&lt;llvmo::Type_O&gt;, unsi (1 samples, 0.04%)</title><rect x="355.0" y="5509" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="357.99" y="5519.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="295.4" y="2501" width="0.9" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="298.38" y="2511.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (2 samples, 0.08%)</title><rect x="891.5" y="5701" width="0.9" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="894.48" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1765" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="430.74" y="1775.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (3 samples, 0.12%)</title><rect x="256.0" y="3077" width="1.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="258.95" y="3087.5" ></text>
</g>
<g >
<title>`CONVERT-CALLED-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T T T T) (7 samples, 0.28%)</title><rect x="88.4" y="4021" width="3.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="91.39" y="4031.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="291.2" y="5477" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="294.15" y="5487.5" ></text>
</g>
<g >
<title>`IRC-CREATE-CALL^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="636.1" y="5349" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="639.14" y="5359.5" ></text>
</g>
<g >
<title>`GC_finish_collection (3 samples, 0.12%)</title><rect x="471.4" y="5621" width="1.4" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="474.39" y="5631.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.04%)</title><rect x="879.3" y="5717" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="882.28" y="5727.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="586.9" y="5797" width="0.4" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="589.86" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="428.7" y="1941" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="431.68" y="1951.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (48 samples, 1.91%)</title><rect x="180.4" y="1093" width="22.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="183.38" y="1103.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="396.8" y="3733" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="399.76" y="3743.5" ></text>
</g>
<g >
<title>`llvm::DILocation::getImpl(llvm::LLVMContext&amp;, unsigned int, uns (1 samples, 0.04%)</title><rect x="620.2" y="5157" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="623.18" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2773" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="412.44" y="2783.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="294.0" y="5269" width="3.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="296.97" y="5279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="400.5" y="4181" width="1.4" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="403.52" y="4191.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="648.3" y="5365" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="651.35" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="400.0" y="4485" width="2.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="403.05" y="4495.5" ></text>
</g>
<g >
<title>`ASSERT-CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="385.5" y="3621" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="388.50" y="3631.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (1 samples, 0.04%)</title><rect x="525.4" y="5749" width="0.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="528.37" y="5759.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (1 samples, 0.04%)</title><rect x="888.2" y="5749" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="891.19" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="414.1" y="3861" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="417.13" y="3871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="388.3" y="4037" width="3.8" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="391.31" y="4047.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CDR-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="397.7" y="3701" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="400.70" y="3711.5" ></text>
</g>
<g >
<title>`VALID-KEYWORDS-FROM-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="113.3" y="3493" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="116.26" y="3503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="254.1" y="3045" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="257.07" y="3055.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="125.9" y="2133" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="128.93" y="2143.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="431.5" y="3141" width="1.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="434.50" y="3151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (22 samples, 0.88%)</title><rect x="423.0" y="4229" width="10.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="426.05" y="4239.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="34.4" y="4869" width="0.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="37.41" y="4879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="3525" width="1.4" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="412.44" y="3535.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="251.3" y="3669" width="0.9" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="254.26" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="423.0" y="2117" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="426.05" y="2127.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (16 samples, 0.64%)</title><rect x="260.6" y="229" width="7.6" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="263.64" y="239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="232.0" y="3045" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="235.01" y="3055.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="951.6" y="5861" width="0.4" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="954.56" y="5871.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (5 samples, 0.20%)</title><rect x="284.6" y="1541" width="2.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="287.58" y="1551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (86 samples, 3.42%)</title><rect x="87.0" y="4853" width="40.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="89.98" y="4863.5" >`co..</text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="812.6" y="5605" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="815.63" y="5615.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.04%)</title><rect x="713.1" y="5829" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="716.12" y="5839.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (2 samples, 0.08%)</title><rect x="810.7" y="5621" width="1.0" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="813.75" y="5631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="242.8" y="2389" width="8.0" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="245.81" y="2399.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4485" width="1.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="39.28" y="4495.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="1733" width="4.2" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="279.60" y="1743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="284.6" y="1301" width="2.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="287.58" y="1311.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (12 samples, 0.48%)</title><rect x="172.4" y="1781" width="5.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="175.40" y="1791.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (1 samples, 0.04%)</title><rect x="163.0" y="4405" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="166.02" y="4415.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1637" width="5.6" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="236.89" y="1647.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="1333" width="5.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="236.89" y="1343.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (20 samples, 0.80%)</title><rect x="16.6" y="4517" width="9.4" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="19.57" y="4527.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::LookupBucketFor(llvm::StringRef) (1 samples, 0.04%)</title><rect x="350.8" y="5237" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="353.76" y="5247.5" ></text>
</g>
<g >
<title>0x11a477094 (7 samples, 0.28%)</title><rect x="268.6" y="981" width="3.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="271.62" y="991.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;llvm::DILocation*, llvm:: (1 samples, 0.04%)</title><rect x="624.9" y="5045" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="627.88" y="5055.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="355.9" y="5749" width="1.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="358.93" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="427.3" y="3269" width="4.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="430.27" y="3279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4277" width="2.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="55.24" y="4287.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="294.0" y="4725" width="2.8" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="296.97" y="4735.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (6 samples, 0.24%)</title><rect x="318.8" y="5445" width="2.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="321.85" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="235.3" y="661" width="4.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="238.30" y="671.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.04%)</title><rect x="901.8" y="5749" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="904.81" y="5759.5" ></text>
</g>
<g >
<title>`llvm::MemorySSA::OptimizeUses::optimizeUses() (8 samples, 0.32%)</title><rect x="786.8" y="5845" width="3.8" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="789.81" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="414.1" y="4213" width="1.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="417.13" y="4223.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (17 samples, 0.68%)</title><rect x="242.8" y="2405" width="8.0" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="245.81" y="2415.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2261" width="14.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="260.36" y="2271.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="506.1" y="5797" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="509.13" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="268.6" y="1029" width="3.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="271.62" y="1039.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="401.0" y="3349" width="0.9" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="403.99" y="3359.5" ></text>
</g>
<g >
<title>`llvm::DIBuilder::getOrCreateTypeArray(llvm::ArrayRef&lt;llvm::Meta (1 samples, 0.04%)</title><rect x="670.9" y="5701" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="673.88" y="5711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.0" y="2293" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="411.97" y="2303.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (43 samples, 1.71%)</title><rect x="252.2" y="3637" width="20.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="255.20" y="3647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="168.2" y="933" width="1.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="171.18" y="943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="398.2" y="3653" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="401.17" y="3663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (93 samples, 3.70%)</title><rect x="12.8" y="5749" width="43.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="15.82" y="5759.5" >`INT..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (9 samples, 0.36%)</title><rect x="243.3" y="1125" width="4.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="246.28" y="1135.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (15 samples, 0.60%)</title><rect x="232.5" y="2725" width="7.0" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="235.48" y="2735.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="281.3" y="3605" width="5.6" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="284.30" y="3615.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (37 samples, 1.47%)</title><rect x="435.3" y="5493" width="17.3" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="438.25" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="423.0" y="3125" width="1.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="426.05" y="3135.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="240.5" y="2869" width="0.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="243.46" y="2879.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="295.4" y="2117" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="298.38" y="2127.5" ></text>
</g>
<g >
<title>`llvm::AliasSet::aliasesPointer(llvm::Value const*, unsigned lon (1 samples, 0.04%)</title><rect x="919.2" y="5765" width="0.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="922.17" y="5775.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T SEQUENCE T))^METHOD^^ (1 samples, 0.04%)</title><rect x="21.3" y="3669" width="0.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="24.26" y="3679.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="831.4" y="5733" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="834.40" y="5743.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisPass(void const*) (4 samples, 0.16%)</title><rect x="711.2" y="5845" width="1.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="714.24" y="5855.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="789" width="26.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="207.32" y="799.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="287.4" y="4965" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="290.40" y="4975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="411.8" y="3173" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="414.78" y="3183.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="422.1" y="2309" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="425.11" y="2319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="2533" width="0.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="428.86" y="2543.5" ></text>
</g>
<g >
<title>`getAllocationData(llvm::Value const*, AllocType, llvm::TargetLi (1 samples, 0.04%)</title><rect x="777.4" y="5813" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="780.42" y="5823.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (8 samples, 0.32%)</title><rect x="808.4" y="5669" width="3.8" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="811.40" y="5679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="247.0" y="405" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="250.03" y="415.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIntPtrType(llvm::Type*) const (1 samples, 0.04%)</title><rect x="826.2" y="5637" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="829.24" y="5647.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="1493" width="7.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="246.28" y="1503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="1349" width="7.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="246.28" y="1359.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (87 samples, 3.46%)</title><rect x="86.5" y="5045" width="40.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="89.51" y="5055.5" >`SE..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.3" y="3477" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="414.31" y="3487.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerABIAlignment(unsigned int) const (1 samples, 0.04%)</title><rect x="873.6" y="5797" width="0.5" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="876.64" y="5807.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="241.9" y="2869" width="0.4" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="244.87" y="2879.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="631.9" y="5253" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="634.92" y="5263.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoBase&lt;llvm::BasicBlock, llvm::Loop&gt;::analyze(llvm: (3 samples, 0.12%)</title><rect x="921.5" y="5877" width="1.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="924.52" y="5887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="386.0" y="3125" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="388.97" y="3135.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (87 samples, 3.46%)</title><rect x="86.5" y="5221" width="40.8" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="89.51" y="5231.5" >`IN..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="122.6" y="3317" width="3.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="125.65" y="3327.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="3221" width="1.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="424.64" y="3231.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="415.1" y="4581" width="0.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="418.07" y="4591.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="23.6" y="3845" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="26.61" y="3855.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="312.7" y="5653" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="315.74" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (7 samples, 0.28%)</title><rect x="268.6" y="965" width="3.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="271.62" y="975.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (11 samples, 0.44%)</title><rect x="37.7" y="4693" width="5.2" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="40.69" y="4703.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="286.9" y="4501" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="289.93" y="4511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="1941" width="1.0" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="432.62" y="1951.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="125.9" y="2485" width="1.0" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="128.93" y="2495.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="287.4" y="4645" width="0.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="290.40" y="4655.5" ></text>
</g>
<g >
<title>`wrapped_core__source_pos_info_column_T_sp (1 samples, 0.04%)</title><rect x="616.4" y="5413" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="619.43" y="5423.5" ></text>
</g>
<g >
<title>`llvm::PointerType::get(llvm::Type*, unsigned int) (1 samples, 0.04%)</title><rect x="650.7" y="5285" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="653.69" y="5295.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="565.7" y="5797" width="0.5" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="568.74" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="427.3" y="2821" width="4.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="430.27" y="2831.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="241.9" y="2789" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="244.87" y="2799.5" ></text>
</g>
<g >
<title>`llvm::TrackingMDRef::~TrackingMDRef() (1 samples, 0.04%)</title><rect x="609.9" y="5285" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="612.86" y="5295.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (2 samples, 0.08%)</title><rect x="253.1" y="3205" width="1.0" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="256.13" y="3215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1333" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="430.74" y="1343.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (2 samples, 0.08%)</title><rect x="253.1" y="3221" width="1.0" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="256.13" y="3231.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (43 samples, 1.71%)</title><rect x="252.2" y="4165" width="20.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="255.20" y="4175.5" ></text>
</g>
<g >
<title>`wrapped_cl__error_T_spList_sp (1 samples, 0.04%)</title><rect x="332.0" y="4469" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="334.99" y="4479.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="508.5" y="5797" width="4.7" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="511.47" y="5807.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((FUNCALL-INSTRUCTIO (1 samples, 0.04%)</title><rect x="316.5" y="5141" width="0.5" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="319.50" y="5151.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="530.1" y="5733" width="0.4" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="533.06" y="5743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="413.7" y="4725" width="1.8" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="416.66" y="4735.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="268.6" y="565" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="271.62" y="575.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="332.9" y="4437" width="1.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="335.93" y="4447.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="178.0" y="2341" width="2.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="181.04" y="2351.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="92.1" y="3413" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="95.14" y="3423.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="470.5" y="5573" width="0.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="473.45" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="382.2" y="4117" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="385.21" y="4127.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="242.8" y="2277" width="8.0" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="245.81" y="2287.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (11 samples, 0.44%)</title><rect x="122.2" y="3829" width="5.1" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="125.18" y="3839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (40 samples, 1.59%)</title><rect x="232.0" y="3877" width="18.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="235.01" y="3887.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="333.4" y="4357" width="0.9" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="336.40" y="4367.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="424.9" y="2389" width="1.0" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="427.92" y="2399.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="412.7" y="5013" width="1.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="415.72" y="5023.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="125.9" y="1877" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="128.93" y="1887.5" ></text>
</g>
<g >
<title>`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="326.4" y="4677" width="0.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="329.36" y="4687.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="489.7" y="5749" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="492.70" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="2773" width="4.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="285.70" y="2783.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="295.4" y="3253" width="1.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="298.38" y="3263.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4549" width="2.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="55.24" y="4559.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (10 samples, 0.40%)</title><rect x="134.4" y="4405" width="4.7" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="137.38" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="428.2" y="2341" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="431.21" y="2351.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="341.8" y="4421" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="344.85" y="4431.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.3" y="1701" width="0.4" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="430.27" y="1711.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((ORDINARY-REST-PARA (1 samples, 0.04%)</title><rect x="231.5" y="4037" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="234.54" y="4047.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="276.6" y="917" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="279.60" y="927.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="167.2" y="2373" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="170.24" y="2383.5" ></text>
</g>
<g >
<title>`core::cl__error(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.04%)</title><rect x="332.0" y="4453" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="334.99" y="4463.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="400.0" y="4661" width="2.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="403.05" y="4671.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (15 samples, 0.60%)</title><rect x="35.8" y="4885" width="7.1" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="38.82" y="4895.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="1749" width="4.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="279.60" y="1759.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction*, unsigned  (1 samples, 0.04%)</title><rect x="866.1" y="5829" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="869.13" y="5839.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInBoundsGEP(llvm::Value*, gctools::sm (1 samples, 0.04%)</title><rect x="629.6" y="5109" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="632.57" y="5119.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="405.7" y="4373" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="408.68" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="3029" width="0.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="428.86" y="3039.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="295.8" y="2373" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="298.85" y="2383.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (136 samples, 5.41%)</title><rect x="167.2" y="3397" width="63.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="170.24" y="3407.5" >`core::..</text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="783.1" y="5733" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="786.05" y="5743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (57 samples, 2.27%)</title><rect x="204.3" y="1029" width="26.8" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="207.32" y="1039.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="423.0" y="2853" width="1.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="426.05" y="2863.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.04%)</title><rect x="455.9" y="5621" width="0.5" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="458.90" y="5631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="294.0" y="4229" width="2.8" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="296.97" y="4239.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::getSmallConstantTripCount(llvm::Loop con (1 samples, 0.04%)</title><rect x="920.1" y="5845" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="923.11" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (136 samples, 5.41%)</title><rect x="167.2" y="2949" width="63.9" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="170.24" y="2959.5" >`core::..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.2" y="3877" width="0.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="424.17" y="3887.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="3285" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="403.99" y="3295.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::ScalarEvolution(llvm::Function&amp;, llvm::T (2 samples, 0.08%)</title><rect x="930.0" y="5877" width="0.9" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="932.97" y="5887.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="2949" width="3.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="420.41" y="2959.5" ></text>
</g>
<g >
<title>`wrapped_core__generalp_T_sp (1 samples, 0.04%)</title><rect x="363.0" y="5701" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="365.97" y="5711.5" ></text>
</g>
<g >
<title>`TREAT-AS-SPECIAL-OPERATOR-P^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="58.8" y="5701" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="61.81" y="5711.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="124.5" y="2821" width="1.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="127.53" y="2831.5" ></text>
</g>
<g >
<title>0x1225e5094 (4 samples, 0.16%)</title><rect x="122.6" y="2805" width="1.9" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="125.65" y="2815.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.04%)</title><rect x="307.1" y="5749" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="310.11" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="3781" width="0.5" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="414.78" y="3791.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::__1:: (1 samples, 0.04%)</title><rect x="793.4" y="5845" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="796.38" y="5855.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (4 samples, 0.16%)</title><rect x="748.8" y="5685" width="1.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="751.79" y="5695.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="123.6" y="1877" width="0.9" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="126.59" y="1887.5" ></text>
</g>
<g >
<title>`llvmo::FunctionType_O::get(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="660.5" y="5557" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="663.55" y="5567.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="427.3" y="3749" width="4.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="430.27" y="3759.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (3 samples, 0.12%)</title><rect x="295.4" y="3557" width="1.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="298.38" y="3567.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="277.1" y="677" width="1.8" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="280.07" y="687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3605" width="0.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="415.25" y="3615.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.PARSE-RESULT^FN^^ (95 samples, 3.78%)</title><rect x="12.3" y="5941" width="44.6" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="15.35" y="5951.5" >`REA..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (136 samples, 5.41%)</title><rect x="167.2" y="3061" width="63.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="170.24" y="3071.5" >`CONVER..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="4709" width="5.6" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="284.30" y="4719.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.28%)</title><rect x="268.6" y="1269" width="3.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="271.62" y="1279.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.04%)</title><rect x="139.5" y="4277" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="142.55" y="4287.5" ></text>
</g>
<g >
<title>`SCANNER-ACTION^CONCRETE-SYNTAX-TREE^((T T T CONS T))^METHOD^^ (3 samples, 0.12%)</title><rect x="84.2" y="5029" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="87.16" y="5039.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.04%)</title><rect x="581.2" y="5781" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="584.23" y="5791.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.04%)</title><rect x="252.7" y="3253" width="0.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="255.67" y="3263.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="331.1" y="4485" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="334.05" y="4495.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="422.1" y="2821" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="425.11" y="2831.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (17 samples, 0.68%)</title><rect x="585.0" y="5813" width="8.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="587.98" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="146.6" y="4341" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="149.59" y="4351.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="269.1" y="389" width="2.8" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="272.09" y="399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="424.9" y="2325" width="1.0" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="427.92" y="2335.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.4" y="1557" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="428.39" y="1567.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getEdgeValue(llvm::Va (1 samples, 0.04%)</title><rect x="701.9" y="5749" width="0.4" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="704.85" y="5759.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInsertValue(llvm::Value*, llvm::Value (1 samples, 0.04%)</title><rect x="611.3" y="5317" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="614.26" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (23 samples, 0.91%)</title><rect x="257.4" y="1877" width="10.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="260.36" y="1887.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="693.4" y="5685" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="696.40" y="5695.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (18 samples, 0.72%)</title><rect x="514.6" y="5829" width="8.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="517.57" y="5839.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="341.8" y="4373" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="344.85" y="4383.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (16 samples, 0.64%)</title><rect x="243.3" y="1381" width="7.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="246.28" y="1391.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (5 samples, 0.20%)</title><rect x="614.1" y="5365" width="2.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="617.08" y="5375.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="423.0" y="2325" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="426.05" y="2335.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="2309" width="3.8" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="420.41" y="2319.5" ></text>
</g>
<g >
<title>`addArgumentAttrs(llvm::SmallSetVector&lt;llvm::Function*, 8u&gt; cons (2 samples, 0.08%)</title><rect x="686.4" y="5893" width="0.9" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="689.36" y="5903.5" ></text>
</g>
<g >
<title>`isDereferenceableAndAlignedPointer(llvm::Value const*, unsigned (1 samples, 0.04%)</title><rect x="773.2" y="5797" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="776.20" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="416.5" y="4469" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="419.48" y="4479.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="351.7" y="5573" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="354.70" y="5583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="285.1" y="1013" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="288.05" y="1023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="121.7" y="3557" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="124.71" y="3567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="965" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="423.70" y="975.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="125.9" y="3061" width="1.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="128.93" y="3071.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="2997" width="3.8" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="420.41" y="3007.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (56 samples, 2.23%)</title><rect x="204.3" y="197" width="26.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="207.32" y="207.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="400.5" y="3829" width="1.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="403.52" y="3839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="431.5" y="2869" width="1.4" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="434.50" y="2879.5" ></text>
</g>
<g >
<title>`core::core__file_scope(gctools::smart_ptr&lt;core::T_O&gt;, gctools:: (2 samples, 0.08%)</title><rect x="29.7" y="5029" width="1.0" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="32.71" y="5039.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.04%)</title><rect x="354.0" y="5285" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="357.05" y="5295.5" ></text>
</g>
<g >
<title>`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^ (278 samples, 11.06%)</title><rect x="462.5" y="5861" width="130.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="465.47" y="5871.5" >`MY-HIR-TRANSFOR..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="424.9" y="2821" width="1.0" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="427.92" y="2831.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromAssume(llvm::Value const*, llvm::KnownBits&amp; (1 samples, 0.04%)</title><rect x="756.8" y="5765" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="759.77" y="5775.5" ></text>
</g>
<g >
<title>`llvm::FindAvailableLoadedValue(llvm::LoadInst*, llvm::BasicBloc (8 samples, 0.32%)</title><rect x="904.2" y="5829" width="3.7" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="907.15" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="4037" width="1.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="412.44" y="4047.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="326.4" y="4629" width="0.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="329.36" y="4639.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="3205" width="4.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="279.60" y="3215.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="412.3" y="3413" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="415.25" y="3423.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="233.9" y="1861" width="5.6" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="236.89" y="1871.5" ></text>
</g>
<g >
<title>`llvm::APInt::operator-=(llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="834.7" y="5813" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="837.69" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="424.9" y="2661" width="1.0" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="427.92" y="2671.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="235.3" y="197" width="0.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="238.30" y="207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="390.7" y="3237" width="1.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="393.66" y="3247.5" ></text>
</g>
<g >
<title>`llvm::isAllocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo (1 samples, 0.04%)</title><rect x="893.8" y="5797" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="896.83" y="5807.5" ></text>
</g>
<g >
<title>`core::core__get_sysprop(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.04%)</title><rect x="256.9" y="2757" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="259.89" y="2767.5" ></text>
</g>
<g >
<title>`MAKE-EXPRESSION-RESULT^ECLECTOR.PARSE-RESULT^((CST-CLIENT T T T (1 samples, 0.04%)</title><rect x="21.3" y="3733" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="24.26" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="425.9" y="3189" width="0.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="428.86" y="3199.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="131.6" y="4597" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="134.57" y="4607.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (108 samples, 4.30%)</title><rect x="180.4" y="1301" width="50.7" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="183.38" y="1311.5" >`CONV..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="295.4" y="3781" width="1.4" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="298.38" y="3791.5" ></text>
</g>
<g >
<title>`DO-INLINING^CLEAVIR-PARTIAL-INLINING^FN^^ (138 samples, 5.49%)</title><rect x="468.1" y="5845" width="64.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="471.11" y="5855.5" >`DO-INL..</text>
</g>
<g >
<title>0x1225f1094 (8 samples, 0.32%)</title><rect x="293.5" y="5653" width="3.8" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="296.50" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="252.2" y="3189" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="255.20" y="3199.5" ></text>
</g>
<g >
<title>`PROCESS-INIT-PARAMETER^CLEAVIR-CST-TO-AST^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="3733" width="63.9" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="170.24" y="3743.5" >`PROCES..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="232.0" y="3349" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="235.01" y="3359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="36.3" y="4725" width="1.4" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="39.28" y="4735.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::Instruction&gt;, llvm:: (1 samples, 0.04%)</title><rect x="934.2" y="5797" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="937.19" y="5807.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.04%)</title><rect x="203.4" y="773" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="206.38" y="783.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="321.2" y="5253" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="324.19" y="5263.5" ></text>
</g>
<g >
<title>`ITEM-EQUAL^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-ITEM))^MET (1 samples, 0.04%)</title><rect x="281.8" y="2965" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="284.77" y="2975.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="626.3" y="5029" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="629.28" y="5039.5" ></text>
</g>
<g >
<title>`OPTIMIZED-RULE-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="133.0" y="4533" width="0.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="135.98" y="4543.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="165.4" y="3541" width="1.8" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="168.36" y="3551.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (8 samples, 0.32%)</title><rect x="18.0" y="3893" width="3.7" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="20.98" y="3903.5" ></text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (1 samples, 0.04%)</title><rect x="533.3" y="5765" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="536.35" y="5775.5" ></text>
</g>
<g >
<title>`llvm::Value::deleteValue() (1 samples, 0.04%)</title><rect x="950.2" y="5829" width="0.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="953.15" y="5839.5" ></text>
</g>
<g >
<title>`MAKE-CONDITION^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="312.7" y="5413" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="315.74" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="3365" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="417.13" y="3375.5" ></text>
</g>
<g >
<title>`ADD-ATOMS^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="43.8" y="4981" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="46.79" y="4991.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="317.9" y="5605" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="320.91" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="424.0" y="1685" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="426.99" y="1695.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="23.6" y="3973" width="0.5" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="26.61" y="3983.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="286.9" y="4885" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="289.93" y="4895.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="18.0" y="3493" width="0.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="20.98" y="3503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="242.8" y="2789" width="8.0" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="245.81" y="2799.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.08%)</title><rect x="575.6" y="5765" width="0.9" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="578.59" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="410.8" y="4389" width="1.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="413.84" y="4399.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (83 samples, 3.30%)</title><rect x="88.4" y="4325" width="38.9" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="91.39" y="4335.5" >`co..</text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.04%)</title><rect x="308.1" y="5749" width="0.4" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="311.05" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="393.9" y="3509" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="396.95" y="3519.5" ></text>
</g>
<g >
<title>`core::Cons_O::nreverse() (1 samples, 0.04%)</title><rect x="685.0" y="5973" width="0.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="687.96" y="5983.5" ></text>
</g>
<g >
<title>`wrapped_APInt_O__makeAPIntWidth_core__Integer_spuintbool (1 samples, 0.04%)</title><rect x="672.3" y="5781" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="675.28" y="5791.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((FLOAT-SUB-INSTRUCT (1 samples, 0.04%)</title><rect x="643.7" y="5429" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="646.65" y="5439.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="167.7" y="1525" width="2.8" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="170.71" y="1535.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getTerminator() const (1 samples, 0.04%)</title><rect x="721.6" y="5861" width="0.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="724.57" y="5871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.9" y="3141" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="396.95" y="3151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="381.7" y="4485" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="384.74" y="4495.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="251.3" y="3045" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="254.26" y="3055.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="279.4" y="869" width="1.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="282.42" y="879.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="273.3" y="5125" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="276.32" y="5135.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.08%)</title><rect x="77.6" y="4949" width="0.9" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="80.59" y="4959.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (137 samples, 5.45%)</title><rect x="167.2" y="4037" width="64.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="170.24" y="4047.5" >`PROCES..</text>
</g>
<g >
<title>`WRITE-BITCODE^COMPILER^FN^^ (16 samples, 0.64%)</title><rect x="953.9" y="5989" width="7.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="956.91" y="5999.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="53.2" y="3877" width="0.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="56.18" y="3887.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="579.3" y="5781" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="582.35" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4837" width="2.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="55.24" y="4847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3829" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="414.78" y="3839.5" ></text>
</g>
<g >
<title>`OPTIMIZED-EQ-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="418.8" y="885" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="421.82" y="895.5" ></text>
</g>
<g >
<title>`MAKE-FAST-METHOD-CALL^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="284.6" y="981" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="287.58" y="991.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="387.4" y="3781" width="0.4" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="390.37" y="3791.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.08%)</title><rect x="313.2" y="5509" width="1.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="316.21" y="5519.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="23.6" y="3749" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="26.61" y="3759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="416.0" y="4773" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="419.01" y="4783.5" ></text>
</g>
<g >
<title>`WRITE-TO-STRING^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="617.8" y="5333" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="620.84" y="5343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="452.6" y="5509" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="455.62" y="5519.5" ></text>
</g>
<g >
<title>`HIR-TO-MIR^CLEAVIR-HIR-TO-MIR^FN^^ (7 samples, 0.28%)</title><rect x="453.6" y="5861" width="3.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="456.56" y="5871.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="249.4" y="453" width="0.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="252.38" y="463.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="421.2" y="4005" width="0.4" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="424.17" y="4015.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.4" y="2485" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="412.44" y="2495.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (6 samples, 0.24%)</title><rect x="38.6" y="4469" width="2.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="41.63" y="4479.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (7 samples, 0.28%)</title><rect x="384.6" y="4389" width="3.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="387.56" y="4399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="332.9" y="4229" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="335.93" y="4239.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="122.6" y="2709" width="1.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="125.65" y="2719.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="269.1" y="85" width="0.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="272.09" y="95.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="268.2" y="1333" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="271.15" y="1343.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="235.3" y="757" width="4.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="238.30" y="767.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="386.0" y="2981" width="0.4" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="388.97" y="2991.5" ></text>
</g>
<g >
<title>`COMPILE-GENERAL-LAMBDA-LIST-CODE^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="634.7" y="5397" width="1.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="637.73" y="5407.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="651.6" y="5413" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="654.63" y="5423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="284.6" y="1685" width="2.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="287.58" y="1695.5" ></text>
</g>
<g >
<title>`COMPILE-TAG-CHECK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="622.5" y="5189" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="625.53" y="5199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="3029" width="4.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="285.70" y="3039.5" ></text>
</g>
<g >
<title>`COMPILER-TIMER-ELAPSED^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="301.5" y="5877" width="0.4" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="304.48" y="5887.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (1 samples, 0.04%)</title><rect x="821.5" y="5685" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="824.54" y="5695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (40 samples, 1.59%)</title><rect x="232.0" y="3797" width="18.8" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="235.01" y="3807.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="276.6" y="1221" width="2.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="279.60" y="1231.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="269.1" y="181" width="0.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="272.09" y="191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="352.2" y="5493" width="0.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="355.17" y="5503.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.3" y="3669" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="414.31" y="3679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="165.4" y="3029" width="1.8" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="168.36" y="3039.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="24.1" y="3941" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="27.08" y="3951.5" ></text>
</g>
<g >
<title>`wrapped_Create_llvm__LLVMContext_const_llvm__Twine_llvm__Functi (1 samples, 0.04%)</title><rect x="339.5" y="4469" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="342.50" y="4479.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="412.3" y="4165" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="415.25" y="4175.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.12%)</title><rect x="431.5" y="2917" width="1.4" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="434.50" y="2927.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="301.0" y="5845" width="0.5" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="304.01" y="5855.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="295.8" y="2277" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="298.85" y="2287.5" ></text>
</g>
<g >
<title>`core::type_of(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="165.4" y="2469" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="168.36" y="2479.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="388.8" y="3781" width="0.9" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="391.78" y="3791.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.04%)</title><rect x="13.8" y="5509" width="0.4" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="16.75" y="5519.5" ></text>
</g>
<g >
<title>`cc_error_type_error (1 samples, 0.04%)</title><rect x="336.7" y="4165" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="339.68" y="4175.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="422.1" y="2565" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="425.11" y="2575.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (1 samples, 0.04%)</title><rect x="232.0" y="3189" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="235.01" y="3199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.3" y="917" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="430.27" y="927.5" ></text>
</g>
<g >
<title>`llvm::getConstantDataArrayInfo(llvm::Value const*, llvm::Consta (1 samples, 0.04%)</title><rect x="829.1" y="5669" width="0.4" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="832.05" y="5679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="49.9" y="4405" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="52.90" y="4415.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getValueOnEdge(llvm:: (5 samples, 0.20%)</title><rect x="692.0" y="5845" width="2.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="695.00" y="5855.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="231.5" y="3749" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="234.54" y="3759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="4517" width="1.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="412.44" y="4527.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="415.5" y="4213" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="418.54" y="4223.5" ></text>
</g>
<g >
<title>`CONVERT-VARIABLE^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="297.3" y="5237" width="0.4" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="300.26" y="5247.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="398.2" y="3189" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="401.17" y="3199.5" ></text>
</g>
<g >
<title>`IRC-BIT-CAST^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="645.1" y="5365" width="0.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="648.06" y="5375.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="171.5" y="1733" width="0.9" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="174.46" y="1743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.3" y="1493" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="430.27" y="1503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (3 samples, 0.12%)</title><rect x="408.0" y="3397" width="1.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="411.03" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="1797" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="411.97" y="1807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="423.0" y="3333" width="2.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="426.05" y="3343.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitGetElementPtrInst(llvm::GetElementPtrI (1 samples, 0.04%)</title><rect x="918.2" y="5861" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="921.23" y="5871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="295.4" y="2725" width="0.9" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="298.38" y="2735.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="276.1" y="4549" width="5.2" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="279.13" y="4559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (231 samples, 9.19%)</title><rect x="164.0" y="4501" width="108.4" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="166.95" y="4511.5" >`core::Funcal..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="138.6" y="4293" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="141.61" y="4303.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="319.8" y="5317" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="322.79" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="243.3" y="869" width="1.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="246.28" y="879.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (2 samples, 0.08%)</title><rect x="294.0" y="3845" width="0.9" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="296.97" y="3855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="276.6" y="3989" width="4.7" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="279.60" y="3999.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (17 samples, 0.68%)</title><rect x="585.0" y="5829" width="8.0" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="587.98" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.5" y="4357" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="418.54" y="4367.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="19.9" y="3365" width="0.9" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="22.86" y="3375.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const (1 samples, 0.04%)</title><rect x="838.0" y="5813" width="0.4" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="840.97" y="5823.5" ></text>
</g>
<g >
<title>`HOIST-AST^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="334.3" y="4565" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="337.34" y="4575.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (203 samples, 8.07%)</title><rect x="842.2" y="5909" width="95.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="845.20" y="5919.5" >`llvm::FPPa..</text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="679.8" y="5957" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="682.79" y="5967.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="268.2" y="1541" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="271.15" y="1551.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="257.4" y="1429" width="0.4" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="260.36" y="1439.5" ></text>
</g>
<g >
<title>`llvm::SimplifyCall(llvm::ImmutableCallSite, llvm::SimplifyQuery (1 samples, 0.04%)</title><rect x="831.9" y="5797" width="0.4" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="834.87" y="5807.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedInstructionBits(llvm::Instr (2 samples, 0.08%)</title><rect x="878.8" y="5829" width="0.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="881.81" y="5839.5" ></text>
</g>
<g >
<title>`core::core__generalp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="332.0" y="4341" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="334.99" y="4351.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="386.0" y="3205" width="0.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="388.97" y="3215.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="285.5" y="741" width="1.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="288.52" y="751.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.08%)</title><rect x="430.6" y="2101" width="0.9" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="433.56" y="2111.5" ></text>
</g>
<g >
<title>`PROCESS-LTV^CLASP-CLEAVIR-AST^FN^^ (9 samples, 0.36%)</title><rect x="327.3" y="4661" width="4.2" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="330.30" y="4671.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="318.4" y="5365" width="0.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="321.38" y="5375.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="398.2" y="3029" width="0.4" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="401.17" y="3039.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION-IMPL^COMPILER^FN^^ (5 samples, 0.20%)</title><rect x="614.1" y="5413" width="2.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="617.08" y="5423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="243.3" y="917" width="4.2" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="246.28" y="927.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.0" y="2133" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="434.96" y="2143.5" ></text>
</g>
<g >
<title>`llvm::LoopPass::assignPassManager(llvm::PMStack&amp;, llvm::PassMan (1 samples, 0.04%)</title><rect x="685.4" y="5909" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="688.43" y="5919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="283.6" y="1125" width="1.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="286.64" y="1135.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="52.7" y="3957" width="1.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="55.71" y="3967.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (77 samples, 3.06%)</title><rect x="12.8" y="5605" width="36.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="15.82" y="5615.5" >`CO..</text>
</g>
<g >
<title>`free_small (1 samples, 0.04%)</title><rect x="794.8" y="5813" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="797.79" y="5823.5" ></text>
</g>
<g >
<title>`GC_unmap_old (1 samples, 0.04%)</title><rect x="472.3" y="5605" width="0.5" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="475.33" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2293" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="412.44" y="2303.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="233.9" y="453" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="236.89" y="463.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="455.9" y="5797" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="458.90" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.0" y="1909" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="411.97" y="1919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="415.5" y="4725" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="418.54" y="4735.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (EXPLICIT-MULTI-PARAM (1 samples, 0.04%)</title><rect x="121.7" y="3509" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="124.71" y="3519.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="1317" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="423.70" y="1327.5" ></text>
</g>
<g >
<title>`llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo  (8 samples, 0.32%)</title><rect x="932.8" y="5861" width="3.7" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="935.78" y="5871.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="100.6" y="3653" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="103.59" y="3663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="242.8" y="2965" width="8.0" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="245.81" y="2975.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="287.4" y="4917" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="290.40" y="4927.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="416.5" y="4917" width="0.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="419.48" y="4927.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="495.3" y="5781" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="498.33" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="294.9" y="3989" width="1.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="297.91" y="3999.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="235.3" y="597" width="4.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="238.30" y="607.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.04%)</title><rect x="894.8" y="5749" width="0.4" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="897.77" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="96.4" y="3461" width="1.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="99.36" y="3471.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="44.7" y="5333" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="47.73" y="5343.5" ></text>
</g>
<g >
<title>`core::type_of(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="233.4" y="2165" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="236.42" y="2175.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="166.3" y="661" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="169.30" y="671.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="335.7" y="4501" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="338.74" y="4511.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENTER-INSTRUCTION  (1 samples, 0.04%)</title><rect x="626.3" y="5205" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="629.28" y="5215.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="501.0" y="5717" width="0.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="503.96" y="5727.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::releaseMemory() (1 samples, 0.04%)</title><rect x="793.9" y="5861" width="0.4" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="796.85" y="5871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="422.1" y="2741" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="425.11" y="2751.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="285.1" y="837" width="0.4" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="288.05" y="847.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="416.0" y="4901" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="419.01" y="4911.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.04%)</title><rect x="133.0" y="4485" width="0.4" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="135.98" y="4495.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (51 samples, 2.03%)</title><rect x="139.1" y="4405" width="23.9" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="142.08" y="4415.5" >`..</text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (5 samples, 0.20%)</title><rect x="614.1" y="5381" width="2.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="617.08" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="417.9" y="821" width="0.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="420.88" y="831.5" ></text>
</g>
<g >
<title>`CST-EVAL^CLEAVIR-ENVIRONMENT^((T T NULL T))^METHOD^^ (1 samples, 0.04%)</title><rect x="286.9" y="5109" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="289.93" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1941" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="428.86" y="1951.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2,028 samples, 80.67%)</title><rect x="10.0" y="6213" width="951.9" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="13.00" y="6223.5" >`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo</text>
</g>
<g >
<title>`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.04%)</title><rect x="22.7" y="3797" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="25.67" y="3807.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.04%)</title><rect x="425.4" y="1413" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="428.39" y="1423.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="1845" width="4.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="285.70" y="1855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="172.4" y="677" width="5.2" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="175.40" y="687.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (35 samples, 1.39%)</title><rect x="417.4" y="4773" width="16.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="420.41" y="4783.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="726.7" y="5797" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="729.73" y="5807.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (2 samples, 0.08%)</title><rect x="92.6" y="3381" width="0.9" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="95.61" y="3391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="423.0" y="4117" width="10.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="426.05" y="4127.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="156.4" y="4261" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="159.44" y="4271.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="326.8" y="4549" width="0.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="329.83" y="4559.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="259.2" y="421" width="1.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="262.24" y="431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="413.7" y="4709" width="1.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="416.66" y="4719.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="177.1" y="549" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="180.10" y="559.5" ></text>
</g>
<g >
<title>`llvm::APInt::sdiv_ov(llvm::APInt const&amp;, bool&amp;) const (1 samples, 0.04%)</title><rect x="905.1" y="5653" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="908.09" y="5663.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::untrack(void*, llvm::Metadata&amp;) (1 samples, 0.04%)</title><rect x="738.5" y="5829" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="741.46" y="5839.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="256.0" y="2869" width="1.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="258.95" y="2879.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (172 samples, 6.84%)</title><rect x="596.7" y="5861" width="80.7" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="599.71" y="5871.5" >`MEMOIZED..</text>
</g>
<g >
<title>`cc_rewind_va_list (1 samples, 0.04%)</title><rect x="347.5" y="5109" width="0.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="350.48" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="425.9" y="3093" width="0.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="428.86" y="3103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="324.5" y="4949" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="327.48" y="4959.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T LEXICAL-VARIABLE-INFO))^METHO (1 samples, 0.04%)</title><rect x="255.5" y="2837" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="258.48" y="2847.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="1285" width="5.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="175.40" y="1295.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="167.7" y="2213" width="10.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="170.71" y="2223.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="295.4" y="3077" width="0.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="298.38" y="3087.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (15 samples, 0.60%)</title><rect x="243.3" y="1237" width="7.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="246.28" y="1247.5" ></text>
</g>
<g >
<title>`llvmo::llvm_sys__writeBitcodeToFile(gctools::smart_ptr&lt;llvmo::M (16 samples, 0.64%)</title><rect x="953.9" y="5957" width="7.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="956.91" y="5967.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="422.1" y="2725" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="425.11" y="2735.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="268.6" y="485" width="0.5" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="271.62" y="495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4693" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="419.48" y="4703.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="54.6" y="4197" width="0.5" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="57.59" y="4207.5" ></text>
</g>
<g >
<title>`ADD-ATOMS^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="273.3" y="5157" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="276.32" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (10 samples, 0.40%)</title><rect x="327.3" y="4741" width="4.7" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="330.30" y="4751.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="723.4" y="5797" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="726.44" y="5807.5" ></text>
</g>
<g >
<title>`core::core__get_sysprop(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.04%)</title><rect x="245.6" y="453" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="248.62" y="463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="416.5" y="4725" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="419.48" y="4735.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="3909" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="417.13" y="3919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1093" width="2.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="420.41" y="1103.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.04%)</title><rect x="715.0" y="5845" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="718.00" y="5855.5" ></text>
</g>
<g >
<title>`core::cl__values(gctools::smart_ptr&lt;core::Vaslist&gt;) (1 samples, 0.04%)</title><rect x="310.4" y="5781" width="0.5" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="313.40" y="5791.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.08%)</title><rect x="493.0" y="5781" width="0.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="495.98" y="5791.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="423.0" y="2085" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="426.05" y="2095.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="1861" width="50.7" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="183.38" y="1871.5" >`INTE..</text>
</g>
<g >
<title>`MAKE-EQ-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="421.2" y="3765" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="424.17" y="3775.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="49.9" y="4885" width="1.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="52.90" y="4895.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (145 samples, 5.77%)</title><rect x="59.8" y="5381" width="68.0" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="62.75" y="5391.5" >`INTERP..</text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoCache::hasCachedValueInfo(l (1 samples, 0.04%)</title><rect x="696.7" y="5765" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="699.69" y="5775.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="3429" width="4.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="279.60" y="3439.5" ></text>
</g>
<g >
<title>`CST-TO-AST^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="4821" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="290.87" y="4831.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (18 samples, 0.72%)</title><rect x="17.0" y="4437" width="8.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="20.04" y="4447.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="1701" width="0.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="126.59" y="1711.5" ></text>
</g>
<g >
<title>`LITERAL-DNODE-DATUM^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="680.3" y="5957" width="0.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="683.26" y="5967.5" ></text>
</g>
<g >
<title>`IRC-CALCULATE-ENTRY^COMPILER^FN^^ (5 samples, 0.20%)</title><rect x="644.1" y="5381" width="2.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="647.12" y="5391.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="410.8" y="5157" width="5.7" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="413.84" y="5167.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="1493" width="4.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="279.60" y="1503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="585.4" y="5781" width="1.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="588.45" y="5791.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (23 samples, 0.91%)</title><rect x="276.1" y="4821" width="10.8" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="279.13" y="4831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="343.7" y="4789" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="346.72" y="4799.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="3909" width="3.8" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="420.41" y="3919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="423.0" y="3509" width="3.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="426.05" y="3519.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="90.3" y="3925" width="1.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="93.26" y="3935.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="166.8" y="1477" width="0.4" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="169.77" y="1487.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="410.8" y="4037" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="413.84" y="4047.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="353.6" y="5413" width="0.9" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="356.58" y="5423.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="134.9" y="4325" width="0.4" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="137.85" y="4335.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (14 samples, 0.56%)</title><rect x="91.7" y="3813" width="6.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="94.67" y="3823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="431.5" y="3045" width="1.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="434.50" y="3055.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="623.0" y="5141" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="626.00" y="5151.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="409.4" y="4485" width="1.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="412.44" y="4495.5" ></text>
</g>
<g >
<title>`MAKE-ARRAY^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="55.1" y="5397" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="58.06" y="5407.5" ></text>
</g>
<g >
<title>`llvmo::llvm_sys__FunctionCreate(gctools::smart_ptr&lt;llvmo::Funct (1 samples, 0.04%)</title><rect x="346.1" y="4965" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="349.07" y="4975.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="3269" width="4.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="279.60" y="3279.5" ></text>
</g>
<g >
<title>`core::input_stream_read_byte8(gctools::smart_ptr&lt;core::T_O&gt;, un (1 samples, 0.04%)</title><rect x="22.7" y="3845" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="25.67" y="3855.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="324.5" y="4885" width="0.4" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="327.48" y="4895.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (64 samples, 2.55%)</title><rect x="321.7" y="5461" width="30.0" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="324.66" y="5471.5" >`C..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (85 samples, 3.38%)</title><rect x="87.4" y="4677" width="39.9" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="90.45" y="4687.5" >`CO..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="423.0" y="3429" width="3.8" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="426.05" y="3439.5" ></text>
</g>
<g >
<title>`CONVERT-CALLED-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T T T T) (1 samples, 0.04%)</title><rect x="249.4" y="613" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="252.38" y="623.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="338.6" y="4261" width="0.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="341.56" y="4271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="414.1" y="3573" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="417.13" y="3583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="268.6" y="1397" width="3.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="271.62" y="1407.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="412.3" y="3637" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="415.25" y="3647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="1061" width="1.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="288.52" y="1071.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.04%)</title><rect x="327.3" y="4309" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="330.30" y="4319.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.04%)</title><rect x="913.5" y="5765" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="916.54" y="5775.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.04%)</title><rect x="850.6" y="5861" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="853.64" y="5871.5" ></text>
</g>
<g >
<title>`HOIST-AST^CLASP-CLEAVIR^FN^^ (145 samples, 5.77%)</title><rect x="301.5" y="5893" width="68.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="304.48" y="5903.5" >`HOIST-..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (19 samples, 0.76%)</title><rect x="259.2" y="1221" width="9.0" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="262.24" y="1231.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="393.9" y="2837" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="396.95" y="2847.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2677" width="4.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="279.60" y="2687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (22 samples, 0.88%)</title><rect x="384.1" y="4581" width="10.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="387.09" y="4591.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4325" width="2.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="55.24" y="4335.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="847.8" y="5845" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="850.83" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="295.4" y="2357" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="298.38" y="2367.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="38.2" y="4373" width="0.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="41.16" y="4383.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="400.0" y="4501" width="2.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="403.05" y="4511.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="240.5" y="2917" width="0.9" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="243.46" y="2927.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="295.4" y="3269" width="1.4" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="298.38" y="3279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="277.1" y="709" width="1.8" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="280.07" y="719.5" ></text>
</g>
<g >
<title>`MAKE-EXPRESSION-RESULT^ECLECTOR.PARSE-RESULT^((CST-CLIENT T T T (1 samples, 0.04%)</title><rect x="43.8" y="5077" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="46.79" y="5087.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::addAttribute(llvm::LLVMContext&amp;, unsigned  (1 samples, 0.04%)</title><rect x="342.8" y="4565" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="345.78" y="4575.5" ></text>
</g>
<g >
<title>`wrapped_core__generalp_T_sp (1 samples, 0.04%)</title><rect x="429.1" y="2181" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="432.15" y="2191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="284.6" y="1509" width="2.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="287.58" y="1519.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="416.5" y="5061" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="419.48" y="5071.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="38.2" y="4133" width="0.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="41.16" y="4143.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="324.5" y="5029" width="0.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="327.48" y="5039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3749" width="1.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="411.03" y="3759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="233.9" y="581" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="236.89" y="591.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="828.6" y="5541" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="831.58" y="5551.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="412.3" y="3493" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="415.25" y="3503.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (20 samples, 0.80%)</title><rect x="112.8" y="3733" width="9.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="115.79" y="3743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="36.8" y="3381" width="0.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="39.75" y="3391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="276.6" y="3909" width="4.7" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="279.60" y="3919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="242.8" y="2053" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="245.81" y="2063.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET*) T T T))^METH (12 samples, 0.48%)</title><rect x="281.3" y="4037" width="5.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="284.30" y="4047.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="55.5" y="5701" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="58.53" y="5711.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.04%)</title><rect x="18.4" y="3413" width="0.5" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="21.45" y="3423.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="401.0" y="3269" width="0.9" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="403.99" y="3279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="385.0" y="4037" width="2.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="388.03" y="4047.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="1829" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="412.90" y="1839.5" ></text>
</g>
<g >
<title>`wrapped_get_llvm__LLVMContext_const_llvm__APInt_ (1 samples, 0.04%)</title><rect x="609.4" y="5381" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="612.39" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="2869" width="4.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="430.27" y="2879.5" ></text>
</g>
<g >
<title>`llvm::PostDominatorTreeWrapperPass::runOnFunction(llvm::Functio (1 samples, 0.04%)</title><rect x="800.0" y="5893" width="0.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="802.95" y="5903.5" ></text>
</g>
<g >
<title>`_pthread_body (485 samples, 19.29%)</title><rect x="962.4" y="6389" width="227.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="965.35" y="6399.5" >`_pthread_body</text>
</g>
<g >
<title>`llvm::Function::Function(llvm::FunctionType*, llvm::GlobalValue (1 samples, 0.04%)</title><rect x="346.1" y="4949" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="349.07" y="4959.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, (anonymous (1 samples, 0.04%)</title><rect x="946.9" y="5829" width="0.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="949.87" y="5839.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-UINTPTR_T^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="609.4" y="5397" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="612.39" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="390.7" y="3157" width="1.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="393.66" y="3167.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (17 samples, 0.68%)</title><rect x="242.8" y="2933" width="8.0" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="245.81" y="2943.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((NULL))^METHOD^^ (1 samples, 0.04%)</title><rect x="268.6" y="245" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="271.62" y="255.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (2 samples, 0.08%)</title><rect x="169.1" y="773" width="1.0" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="172.12" y="783.5" ></text>
</g>
<g >
<title>`ENSURE-ORIGIN^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="303.4" y="5861" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="306.36" y="5871.5" ></text>
</g>
<g >
<title>`MAKE-LITERAL-NODE-CREATOR^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="311.8" y="5685" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="314.81" y="5695.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.04%)</title><rect x="845.0" y="5829" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="848.01" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.3" y="1781" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="430.27" y="1791.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="34.4" y="4485" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="37.41" y="4495.5" ></text>
</g>
<g >
<title>`core::core__coerce_to_filename(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="951.6" y="5957" width="0.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="954.56" y="5967.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (5 samples, 0.20%)</title><rect x="400.0" y="4789" width="2.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="403.05" y="4799.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="538.0" y="5797" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="541.04" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="2709" width="1.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="168.83" y="2719.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="1429" width="5.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="175.40" y="1439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="92.1" y="3189" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="95.14" y="3199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="268.6" y="1333" width="3.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="271.62" y="1343.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="23.6" y="4101" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="26.61" y="4111.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="179.0" y="2117" width="0.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="181.97" y="2127.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="1525" width="0.9" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="126.59" y="1535.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.04%)</title><rect x="755.4" y="5765" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="758.36" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="398.6" y="3349" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="401.64" y="3359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="382.2" y="4453" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="385.21" y="4463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="408.0" y="4613" width="2.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="411.03" y="4623.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="279.4" y="437" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="282.42" y="447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="286.9" y="5093" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="289.93" y="5103.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (231 samples, 9.19%)</title><rect x="164.0" y="4421" width="108.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="166.95" y="4431.5" >`INTERPRETED-..</text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="255.5" y="2805" width="0.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="258.48" y="2815.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="324.5" y="4981" width="0.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="327.48" y="4991.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="276.1" y="4645" width="5.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="279.13" y="4655.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="514.1" y="5605" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="517.11" y="5615.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatticeElement, llvm::D (1 samples, 0.04%)</title><rect x="948.3" y="5845" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="951.27" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="279.9" y="373" width="0.9" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="282.89" y="383.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="276.6" y="1237" width="2.8" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="279.60" y="1247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="427.3" y="2421" width="0.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="430.27" y="2431.5" ></text>
</g>
<g >
<title>`CST-&gt;AST^CLASP-CLEAVIR^FN^^ (514 samples, 20.45%)</title><rect x="58.3" y="5909" width="241.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="61.35" y="5919.5" >`CST-&gt;AST^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="335.7" y="4453" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="338.74" y="4463.5" ></text>
</g>
<g >
<title>0x11a477094 (4 samples, 0.16%)</title><rect x="165.4" y="3845" width="1.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="168.36" y="3855.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, ll (1 samples, 0.04%)</title><rect x="879.3" y="5765" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="882.28" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="408.0" y="4693" width="2.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="411.03" y="4703.5" ></text>
</g>
<g >
<title>`core::interpreter_lookup_function_or_error(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="669.0" y="5701" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="672.00" y="5711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="424.9" y="2741" width="1.0" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="427.92" y="2751.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="115.1" y="3573" width="1.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="118.14" y="3583.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="828.6" y="5573" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="831.58" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="125.9" y="2981" width="1.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="128.93" y="2991.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="308.1" y="5797" width="0.4" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="311.05" y="5807.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="460.1" y="5797" width="0.5" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="463.13" y="5807.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="732.4" y="5733" width="0.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="735.36" y="5743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="409.4" y="4373" width="1.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="412.44" y="4383.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (5 samples, 0.20%)</title><rect x="842.7" y="5845" width="2.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="845.67" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1109" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="423.70" y="1119.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="427.3" y="1333" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="430.27" y="1343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (17 samples, 0.68%)</title><rect x="242.8" y="3029" width="8.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="245.81" y="3039.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="294.9" y="4053" width="1.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="297.91" y="4063.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (23 samples, 0.91%)</title><rect x="276.1" y="5157" width="10.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="279.13" y="5167.5" ></text>
</g>
<g >
<title>`llvm::ReassociatePass::run(llvm::Function&amp;, llvm::AnalysisManag (2 samples, 0.08%)</title><rect x="705.6" y="5877" width="0.9" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="708.61" y="5887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="423.0" y="2181" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="426.05" y="2191.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3077" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="414.78" y="3087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="2197" width="1.0" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="426.52" y="2207.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="287.9" y="5061" width="0.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="290.87" y="5071.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (10 samples, 0.40%)</title><rect x="476.6" y="5525" width="4.6" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="479.56" y="5535.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="167.7" y="1589" width="2.8" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="170.71" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (4 samples, 0.16%)</title><rect x="423.0" y="3285" width="1.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="426.05" y="3295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="2965" width="3.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="420.41" y="2975.5" ></text>
</g>
<g >
<title>`CALCULATE-FUNCTION-INFO^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="596.7" y="5829" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="599.71" y="5839.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="645.1" y="5253" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="648.06" y="5263.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="356.4" y="5653" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="359.40" y="5663.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="125.9" y="1893" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="128.93" y="1903.5" ></text>
</g>
<g >
<title>0x11a477094 (9 samples, 0.36%)</title><rect x="276.6" y="1893" width="4.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="279.60" y="1903.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (70 samples, 2.78%)</title><rect x="13.8" y="5557" width="32.8" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="16.75" y="5567.5" >`R..</text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (5 samples, 0.20%)</title><rect x="284.6" y="1285" width="2.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="287.58" y="1295.5" ></text>
</g>
<g >
<title>`CONVERT-GLOBAL-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T T T CL (1 samples, 0.04%)</title><rect x="231.1" y="3349" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="234.07" y="3359.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="695.3" y="5717" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="698.28" y="5727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="400.0" y="4645" width="2.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="403.05" y="4655.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:BEFORE) (T T CLASP-64BIT))^METHOD (1 samples, 0.04%)</title><rect x="240.0" y="2517" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="242.99" y="2527.5" ></text>
</g>
<g >
<title>`GET-SYSPROP^CORE^FN^^ (1 samples, 0.04%)</title><rect x="183.7" y="197" width="0.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="186.67" y="207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1429" width="2.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="420.41" y="1439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="3301" width="0.9" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="428.86" y="3311.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (36 samples, 1.43%)</title><rect x="416.9" y="4917" width="16.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="419.95" y="4927.5" ></text>
</g>
<g >
<title>`REPLACE-DATUM^CLEAVIR-IR^FN^^ (3 samples, 0.12%)</title><rect x="507.1" y="5813" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="510.06" y="5823.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (2 samples, 0.08%)</title><rect x="19.9" y="3557" width="0.9" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="22.86" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="385.0" y="4069" width="2.8" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="388.03" y="4079.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4565" width="2.9" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="55.24" y="4575.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.04%)</title><rect x="501.0" y="5749" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="503.96" y="5759.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="60.2" y="5205" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="63.22" y="5215.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="295.4" y="2533" width="0.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="298.38" y="2543.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3797" width="1.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="168.36" y="3807.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="5013" width="2.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="55.24" y="5023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="4869" width="2.8" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="296.97" y="4879.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="397.7" y="4357" width="2.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="400.70" y="4367.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (43 samples, 1.71%)</title><rect x="252.2" y="4085" width="20.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="255.20" y="4095.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.9" y="2901" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="412.90" y="2911.5" ></text>
</g>
<g >
<title>`core::cl__append(gctools::smart_ptr&lt;core::Vaslist&gt;) (1 samples, 0.04%)</title><rect x="417.4" y="853" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="420.41" y="863.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="123.6" y="1477" width="0.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="126.59" y="1487.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="295.4" y="2037" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="298.38" y="2047.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.28%)</title><rect x="88.4" y="4197" width="3.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="91.39" y="4207.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="2149" width="4.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="279.60" y="2159.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (17 samples, 0.68%)</title><rect x="242.8" y="3109" width="8.0" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="245.81" y="3119.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.9" y="2949" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="412.90" y="2959.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (20 samples, 0.80%)</title><rect x="34.4" y="5125" width="9.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="37.41" y="5135.5" ></text>
</g>
<g >
<title>`isIntrinsicCall(llvm::ImmutableCallSite, llvm::Intrinsic::ID) (1 samples, 0.04%)</title><rect x="764.7" y="5733" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="767.75" y="5743.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (8 samples, 0.32%)</title><rect x="293.5" y="5525" width="3.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="296.50" y="5535.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::DecomposeGEPExpression(llvm::Value const*, (1 samples, 0.04%)</title><rect x="818.3" y="5637" width="0.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="821.26" y="5647.5" ></text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (1 samples, 0.04%)</title><rect x="179.0" y="2149" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="181.97" y="2159.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="165.4" y="3509" width="1.8" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="168.36" y="3519.5" ></text>
</g>
<g >
<title>`llvm::CallSiteBase&lt;llvm::Function, llvm::BasicBlock, llvm::Valu (1 samples, 0.04%)</title><rect x="686.8" y="5877" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="689.83" y="5887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="255.5" y="2949" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="258.48" y="2959.5" ></text>
</g>
<g >
<title>`llvm::GVN::processLoad(llvm::LoadInst*) (24 samples, 0.95%)</title><rect x="804.2" y="5813" width="11.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="807.18" y="5823.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.04%)</title><rect x="336.2" y="4197" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="339.21" y="4207.5" ></text>
</g>
<g >
<title>0x11a477094 (40 samples, 1.59%)</title><rect x="232.0" y="3445" width="18.8" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="235.01" y="3455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="165.8" y="2197" width="1.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="168.83" y="2207.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.08%)</title><rect x="169.1" y="741" width="1.0" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="172.12" y="751.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="185.5" y="101" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="188.54" y="111.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="677" width="1.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="288.52" y="687.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (5 samples, 0.20%)</title><rect x="587.3" y="5781" width="2.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="590.33" y="5791.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="342.8" y="4437" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="345.78" y="4447.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (22 samples, 0.88%)</title><rect x="167.7" y="2261" width="10.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="170.71" y="2271.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="417.4" y="1781" width="2.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="420.41" y="1791.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="645.1" y="5349" width="0.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="648.06" y="5359.5" ></text>
</g>
<g >
<title>0x1225e9094 (40 samples, 1.59%)</title><rect x="232.0" y="3573" width="18.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="235.01" y="3583.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="453.1" y="5781" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="456.09" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="427.3" y="2149" width="0.9" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="430.27" y="2159.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="421.6" y="3669" width="1.0" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="424.64" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="413.7" y="3829" width="0.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="416.66" y="3839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="393.5" y="3797" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="396.48" y="3807.5" ></text>
</g>
<g >
<title>`HOIST-AST^CLASP-CLEAVIR^FN^^ (9 samples, 0.36%)</title><rect x="327.3" y="4693" width="4.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="330.30" y="4703.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="401.0" y="2933" width="0.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="403.99" y="2943.5" ></text>
</g>
<g >
<title>`POSITION^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="282.7" y="1141" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="285.70" y="1151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="396.8" y="3813" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="399.76" y="3823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="388.3" y="4053" width="3.8" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="391.31" y="4063.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1589" width="2.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="420.41" y="1599.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.04%)</title><rect x="573.2" y="5733" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="576.25" y="5743.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="165.4" y="2773" width="0.4" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="168.36" y="2783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="430.6" y="2181" width="0.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="433.56" y="2191.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="52.2" y="4821" width="2.9" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="55.24" y="4831.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (14 samples, 0.56%)</title><rect x="171.5" y="1861" width="6.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="174.46" y="1871.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="80.9" y="4997" width="0.4" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="83.88" y="5007.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (9 samples, 0.36%)</title><rect x="395.8" y="4901" width="4.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="398.82" y="4911.5" ></text>
</g>
<g >
<title>`cc_error_type_error (1 samples, 0.04%)</title><rect x="94.0" y="3653" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="97.02" y="3663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="2965" width="1.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="427.92" y="2975.5" ></text>
</g>
<g >
<title>`llvm::scc_iterator&lt;llvm::Function const*, llvm::GraphTraits&lt;llv (2 samples, 0.08%)</title><rect x="853.0" y="5845" width="0.9" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="855.99" y="5855.5" ></text>
</g>
<g >
<title>0x11a477094 (48 samples, 1.91%)</title><rect x="180.4" y="1013" width="22.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="183.38" y="1023.5" >0..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2853" width="4.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="279.60" y="2863.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.08%)</title><rect x="428.2" y="2245" width="0.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="431.21" y="2255.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.04%)</title><rect x="845.5" y="5829" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="848.48" y="5839.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (11 samples, 0.44%)</title><rect x="172.4" y="693" width="5.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="175.40" y="703.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.04%)</title><rect x="610.3" y="5397" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="613.33" y="5407.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (32 samples, 1.27%)</title><rect x="187.4" y="245" width="15.0" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="190.42" y="255.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="90.3" y="3909" width="1.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="93.26" y="3919.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="167.7" y="1765" width="3.8" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="170.71" y="1775.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="345.1" y="4981" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="348.13" y="4991.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="283.2" y="1109" width="0.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="286.17" y="1119.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (3 samples, 0.12%)</title><rect x="279.4" y="853" width="1.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="282.42" y="863.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="660.5" y="5477" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="663.55" y="5487.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (6 samples, 0.24%)</title><rect x="38.6" y="4549" width="2.8" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="41.63" y="4559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="2277" width="1.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="426.52" y="2287.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="125.9" y="2693" width="1.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="128.93" y="2703.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="408.0" y="4805" width="2.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="411.03" y="4815.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (183 samples, 7.28%)</title><rect x="164.9" y="4261" width="85.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="167.89" y="4271.5" >`core::clo..</text>
</g>
<g >
<title>`host_get_clock_service (1 samples, 0.04%)</title><rect x="596.2" y="5813" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="599.25" y="5823.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'FUNCTION) T T T))^ (304 samples, 12.09%)</title><rect x="130.6" y="4757" width="142.7" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="133.63" y="4767.5" >`CONVERT-SPECIAL^C..</text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (1 samples, 0.04%)</title><rect x="750.7" y="5749" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="753.67" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="417.4" y="1477" width="2.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="420.41" y="1487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="405.7" y="4293" width="0.4" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="408.68" y="4303.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (6 samples, 0.24%)</title><rect x="722.0" y="5829" width="2.9" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="725.04" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="428.7" y="1797" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="431.68" y="1807.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getPredicateOnEdge(unsigned int, llvm::Val (7 samples, 0.28%)</title><rect x="694.8" y="5845" width="3.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="697.81" y="5855.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="342.3" y="4581" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="345.32" y="4591.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="18.0" y="3973" width="5.1" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="20.98" y="3983.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="268.2" y="1173" width="0.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="271.15" y="1183.5" ></text>
</g>
<g >
<title>0x12254f0c9 (1 samples, 0.04%)</title><rect x="84.6" y="4949" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="87.63" y="4959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4517" width="0.4" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="408.68" y="4527.5" ></text>
</g>
<g >
<title>`INSTRUCTIONS-OF-TYPE^CLEAVIR-IR^FN^^ (10 samples, 0.40%)</title><rect x="524.0" y="5813" width="4.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="526.96" y="5823.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="235.3" y="149" width="0.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="238.30" y="159.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="948.7" y="5941" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="951.74" y="5951.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="413.7" y="3797" width="0.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="416.66" y="3807.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (8 samples, 0.32%)</title><rect x="268.2" y="1989" width="3.7" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="271.15" y="1999.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (514 samples, 20.45%)</title><rect x="58.3" y="5877" width="241.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="61.35" y="5887.5" >`core::FuncallableInstance_O::fu..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (1 samples, 0.04%)</title><rect x="278.9" y="277" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="281.95" y="287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="340.4" y="4533" width="1.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="343.44" y="4543.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="427.3" y="2373" width="0.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="430.27" y="2383.5" ></text>
</g>
<g >
<title>`isUseTriviallyOptimizableToLiveOnEntry(llvm::AAResults&amp;, llvm:: (2 samples, 0.08%)</title><rect x="788.7" y="5829" width="0.9" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="791.69" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.9" y="4869" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="419.95" y="4879.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.04%)</title><rect x="99.2" y="3797" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="102.18" y="3807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="123.1" y="2373" width="1.4" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="126.12" y="2383.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="417.9" y="549" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="420.88" y="559.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (35 samples, 1.39%)</title><rect x="15.6" y="5349" width="16.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="18.63" y="5359.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="60.2" y="5253" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="63.22" y="5263.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="646.9" y="5269" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="649.94" y="5279.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="285.1" y="805" width="0.4" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="288.05" y="815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="423.0" y="2709" width="1.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="426.05" y="2719.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="355.9" y="5685" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="358.93" y="5695.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;std::__1::pair&lt;llvm::BasicBlock*, llvm::T (1 samples, 0.04%)</title><rect x="785.4" y="5797" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="788.40" y="5807.5" ></text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="283.2" y="1125" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="286.17" y="1135.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="39.1" y="4341" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="42.10" y="4351.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (11 samples, 0.44%)</title><rect x="172.4" y="1221" width="5.2" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="175.40" y="1231.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="1493" width="0.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="126.59" y="1503.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="232.5" y="3237" width="8.0" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="235.48" y="3247.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="3205" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="414.78" y="3215.5" ></text>
</g>
<g >
<title>`INTERPRET-DTREE-PROGRAM^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="160.7" y="4325" width="0.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="163.67" y="4335.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="168.2" y="1109" width="1.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="171.18" y="1119.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (12 samples, 0.48%)</title><rect x="281.3" y="3797" width="5.6" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="284.30" y="3807.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="525.8" y="5749" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="528.84" y="5759.5" ></text>
</g>
<g >
<title>0x11a477094 (12 samples, 0.48%)</title><rect x="281.3" y="4197" width="5.6" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="284.30" y="4207.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.04%)</title><rect x="28.3" y="5013" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="31.31" y="5023.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.7" y="1605" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="430.74" y="1615.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((NULL T))^METHOD^^ (1 samples, 0.04%)</title><rect x="123.6" y="533" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="126.59" y="543.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="167.7" y="1877" width="3.8" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="170.71" y="1887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="135.8" y="4357" width="3.3" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="138.79" y="4367.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="125.9" y="3173" width="1.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="128.93" y="3183.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (136 samples, 5.41%)</title><rect x="167.2" y="3605" width="63.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="170.24" y="3615.5" >`core::..</text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.08%)</title><rect x="135.8" y="4261" width="0.9" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="138.79" y="4271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="293.5" y="5621" width="3.8" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="296.50" y="5631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="391.6" y="2373" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="394.60" y="2383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3781" width="0.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="415.25" y="3791.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="4741" width="2.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="296.97" y="4751.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="409.4" y="3733" width="1.4" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="412.44" y="3743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="258.8" y="1573" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="261.77" y="1583.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="286.9" y="4437" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="289.93" y="4447.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="327.8" y="4437" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="330.76" y="4447.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="278.0" y="533" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="281.01" y="543.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="294.0" y="5333" width="3.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="296.97" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3557" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="404.93" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (35 samples, 1.39%)</title><rect x="417.4" y="4805" width="16.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="420.41" y="4815.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="413.7" y="4325" width="0.4" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="416.66" y="4335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4885" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="408.68" y="4895.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="623.0" y="5173" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="626.00" y="5183.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="332.0" y="4533" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="334.99" y="4543.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="281.3" y="4421" width="5.6" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="284.30" y="4431.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.08%)</title><rect x="233.0" y="2485" width="0.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="235.95" y="2495.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="5093" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="327.01" y="5103.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="168.2" y="917" width="1.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="171.18" y="927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (12 samples, 0.48%)</title><rect x="410.8" y="5045" width="5.7" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="413.84" y="5055.5" ></text>
</g>
<g >
<title>`cc_error_type_error (1 samples, 0.04%)</title><rect x="125.9" y="2021" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="128.93" y="2031.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.04%)</title><rect x="694.8" y="5765" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="697.81" y="5775.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (17 samples, 0.68%)</title><rect x="515.0" y="5813" width="8.0" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="518.04" y="5823.5" ></text>
</g>
<g >
<title>`_pthread_start (485 samples, 19.29%)</title><rect x="962.4" y="6405" width="227.6" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="965.35" y="6415.5" >`_pthread_start</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="295.4" y="3429" width="1.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="298.38" y="3439.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (4 samples, 0.16%)</title><rect x="827.6" y="5733" width="1.9" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="830.65" y="5743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="415.1" y="4533" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="418.07" y="4543.5" ></text>
</g>
<g >
<title>`llvm::SmallVector&lt;llvm::Instruction*, 4u&gt;::SmallVector(llvm::Sm (1 samples, 0.04%)</title><rect x="823.0" y="5765" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="825.95" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="317.4" y="5445" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="320.44" y="5455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (14 samples, 0.56%)</title><rect x="91.7" y="3845" width="6.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="94.67" y="3855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (10 samples, 0.40%)</title><rect x="395.4" y="4981" width="4.6" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="398.35" y="4991.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.4" y="1733" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="428.39" y="1743.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitStoreInst(llvm::StoreInst&amp;) (2 samples, 0.08%)</title><rect x="913.1" y="5845" width="0.9" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="916.07" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="424.9" y="1381" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="427.92" y="1391.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4981" width="2.9" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="55.24" y="4991.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="754.9" y="5701" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="757.89" y="5711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="172.4" y="197" width="4.7" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="175.40" y="207.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="268.2" y="1669" width="3.7" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="271.15" y="1679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="427.3" y="2917" width="4.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="430.27" y="2927.5" ></text>
</g>
<g >
<title>`wrapped_core__copy_instance_T_sp (2 samples, 0.08%)</title><rect x="367.7" y="5797" width="0.9" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="370.66" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="247.5" y="229" width="1.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="250.50" y="239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="410.8" y="4533" width="1.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="413.84" y="4543.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (2 samples, 0.08%)</title><rect x="184.6" y="197" width="0.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="187.61" y="207.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction const*, uns (1 samples, 0.04%)</title><rect x="958.6" y="5813" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="961.60" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="2981" width="1.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="411.03" y="2991.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="413.2" y="4869" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="416.19" y="4879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.6" y="2773" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="424.64" y="2783.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="278.9" y="933" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="281.95" y="943.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="123.6" y="1813" width="0.9" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="126.59" y="1823.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((ORDINARY-KEY-PARAMETER T (137 samples, 5.45%)</title><rect x="167.2" y="3909" width="64.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="170.24" y="3919.5" >`PROCES..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="92.1" y="3605" width="1.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="95.14" y="3615.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (352 samples, 14.00%)</title><rect x="128.3" y="5717" width="165.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="131.28" y="5727.5" >`CONVERT-CST^CLEAVIR-..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1269" width="0.5" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="427.92" y="1279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="283.2" y="1445" width="1.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="286.17" y="1455.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm::Str (1 samples, 0.04%)</title><rect x="628.2" y="5013" width="0.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="631.16" y="5023.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="25.5" y="4357" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="28.49" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="384.6" y="4325" width="3.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="387.56" y="4335.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="3973" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="414.78" y="3983.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="410.8" y="4149" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="413.84" y="4159.5" ></text>
</g>
<g >
<title>`sprintf (1 samples, 0.04%)</title><rect x="408.5" y="2645" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="411.50" y="2655.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="182.7" y="389" width="4.7" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="185.73" y="399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.0" y="2213" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="434.96" y="2223.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="431.5" y="3589" width="1.9" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="434.50" y="3599.5" ></text>
</g>
<g >
<title>`ERROR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="94.0" y="3637" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="97.02" y="3647.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (14 samples, 0.56%)</title><rect x="36.3" y="4821" width="6.6" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="39.28" y="4831.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (304 samples, 12.09%)</title><rect x="130.6" y="4837" width="142.7" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="133.63" y="4847.5" >`CONVERT-CST^CLEAV..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="405.2" y="5173" width="0.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="408.21" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="423.0" y="2533" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="426.05" y="2543.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="424.5" y="3125" width="0.4" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="427.46" y="3135.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="2645" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="414.78" y="2655.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (305 samples, 12.13%)</title><rect x="130.2" y="5045" width="143.1" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="133.16" y="5055.5" >`core::clos__inter..</text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (22 samples, 0.88%)</title><rect x="34.4" y="5461" width="10.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="37.41" y="5471.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="243.7" y="453" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="246.75" y="463.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="376.6" y="5685" width="0.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="379.58" y="5695.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (1 samples, 0.04%)</title><rect x="23.6" y="4005" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="26.61" y="4015.5" ></text>
</g>
<g >
<title>`inferAllPrototypeAttributes(llvm::Module&amp;, llvm::TargetLibraryI (1 samples, 0.04%)</title><rect x="841.3" y="5925" width="0.4" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="844.26" y="5935.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="235.3" y="213" width="0.9" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="238.30" y="223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1669" width="2.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="420.41" y="1679.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="233.9" y="1125" width="5.6" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="236.89" y="1135.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="278.5" y="629" width="0.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="281.48" y="639.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="165.4" y="2613" width="0.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="168.36" y="2623.5" ></text>
</g>
<g >
<title>0x1225ef094 (12 samples, 0.48%)</title><rect x="281.3" y="3733" width="5.6" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="284.30" y="3743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="424.9" y="1893" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="427.92" y="1903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="243.3" y="1109" width="4.2" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="246.28" y="1119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="3013" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="412.44" y="3023.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="286.9" y="4693" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="289.93" y="4703.5" ></text>
</g>
<g >
<title>`PARSE-FUNCTION-TYPE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="125.9" y="2037" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="128.93" y="2047.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="243.3" y="1365" width="7.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="246.28" y="1375.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout con (4 samples, 0.16%)</title><rect x="914.9" y="5845" width="1.9" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="917.95" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="123.6" y="1925" width="0.9" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="126.59" y="1935.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="52.2" y="4629" width="2.9" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="55.24" y="4639.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="123.6" y="1605" width="0.9" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="126.59" y="1615.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2901" width="4.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="285.70" y="2911.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (11 samples, 0.44%)</title><rect x="860.5" y="5861" width="5.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="863.50" y="5871.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="660.5" y="5509" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="663.55" y="5519.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.0" y="2341" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="411.97" y="2351.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="52.7" y="3973" width="1.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="55.71" y="3983.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.04%)</title><rect x="125.0" y="1717" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="128.00" y="1727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="425.9" y="3333" width="0.9" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="428.86" y="3343.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="425.4" y="1477" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="428.39" y="1487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="285.5" y="629" width="1.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="288.52" y="639.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="99.2" y="3893" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="102.18" y="3903.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="23.6" y="4037" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="26.61" y="4047.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="167.7" y="1781" width="3.8" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="170.71" y="1791.5" ></text>
</g>
<g >
<title>`MAKE-TEMPS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="404.7" y="5765" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="407.74" y="5775.5" ></text>
</g>
<g >
<title>`LITERAL-NODE-SIDE-EFFECT-ARGUMENTS^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="679.8" y="5973" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="682.79" y="5983.5" ></text>
</g>
<g >
<title>`core::cl__write_sequence(gctools::smart_ptr&lt;core::T_O&gt;, gctools (1 samples, 0.04%)</title><rect x="678.4" y="5893" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="681.39" y="5903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="167.7" y="2101" width="10.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="170.71" y="2111.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="124.1" y="1301" width="0.4" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="127.06" y="1311.5" ></text>
</g>
<g >
<title>`computeUnsignedMinMaxValuesFromKnownBits(llvm::KnownBits const&amp; (1 samples, 0.04%)</title><rect x="900.4" y="5813" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="903.40" y="5823.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="164.9" y="4181" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="167.89" y="4191.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="416.5" y="4629" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="419.48" y="4639.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (20 samples, 0.80%)</title><rect x="16.6" y="4501" width="9.4" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="19.57" y="4511.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="386.4" y="3205" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="389.44" y="3215.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (37 samples, 1.47%)</title><rect x="416.5" y="5157" width="17.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="419.48" y="5167.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (6 samples, 0.24%)</title><rect x="244.7" y="805" width="2.8" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="247.69" y="815.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (86 samples, 3.42%)</title><rect x="87.0" y="4885" width="40.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="89.98" y="4895.5" >`co..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="257.4" y="1701" width="1.8" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="260.36" y="1711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="411.8" y="4245" width="0.9" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="414.78" y="4255.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="347.9" y="5125" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="350.95" y="5135.5" ></text>
</g>
<g >
<title>`core::type_of(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="281.3" y="3045" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="284.30" y="3055.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (9 samples, 0.36%)</title><rect x="276.6" y="2085" width="4.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="279.60" y="2095.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="281.3" y="3189" width="1.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="284.30" y="3199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="168.2" y="1189" width="1.9" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="171.18" y="1199.5" ></text>
</g>
<g >
<title>`AST-&gt;HIR^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="314.2" y="5365" width="0.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="317.15" y="5375.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="513.2" y="5669" width="0.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="516.17" y="5679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="430.6" y="2165" width="0.9" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="433.56" y="2175.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="414.1" y="3733" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="417.13" y="3743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="234.8" y="357" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="237.83" y="367.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="401.9" y="3445" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="404.93" y="3455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="413.7" y="4245" width="0.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="416.66" y="4255.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="605.6" y="5445" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="608.63" y="5455.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="4005" width="5.6" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="284.30" y="4015.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="261" width="1.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="288.52" y="271.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="182.7" y="309" width="4.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="185.73" y="319.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (4 samples, 0.16%)</title><rect x="257.4" y="1717" width="1.8" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="260.36" y="1727.5" ></text>
</g>
<g >
<title>`MAKE-FUNCTION-METADATA^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="342.3" y="4661" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="345.32" y="4671.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="396.8" y="4021" width="0.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="399.76" y="4031.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="853" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="423.70" y="863.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.04%)</title><rect x="906.0" y="5701" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="909.03" y="5711.5" ></text>
</g>
<g >
<title>`core::StringOutputStream_O::getAndReset() (1 samples, 0.04%)</title><rect x="671.8" y="5733" width="0.5" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="674.81" y="5743.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.04%)</title><rect x="295.8" y="2293" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="298.85" y="2303.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (3 samples, 0.12%)</title><rect x="500.0" y="5813" width="1.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="503.02" y="5823.5" ></text>
</g>
<g >
<title>`RIGHT-PARENTHESIS^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="23.1" y="4133" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="26.14" y="4143.5" ></text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (1 samples, 0.04%)</title><rect x="281.3" y="2997" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="284.30" y="3007.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="425.9" y="2869" width="0.9" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="428.86" y="2879.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="416.9" y="4757" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="419.95" y="4767.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::verifyPreservedAnalysis(llvm::Pass*) (1 samples, 0.04%)</title><rect x="799.5" y="5893" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="802.48" y="5903.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (32 samples, 1.27%)</title><rect x="618.8" y="5381" width="15.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="621.77" y="5391.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (1 samples, 0.04%)</title><rect x="283.6" y="1061" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="286.64" y="1071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="3861" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="414.31" y="3871.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.04%)</title><rect x="202.4" y="693" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="205.44" y="703.5" ></text>
</g>
<g >
<title>`CALLING-CONVENTION-USE-ONLY-REGISTERS^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="345.6" y="4805" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="348.60" y="4815.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="427.3" y="3509" width="4.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="430.27" y="3519.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction*, unsigned  (1 samples, 0.04%)</title><rect x="738.0" y="5845" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="741.00" y="5855.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.04%)</title><rect x="10.5" y="5941" width="0.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="13.47" y="5951.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="55.1" y="5461" width="0.4" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="58.06" y="5471.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="1957" width="4.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="285.70" y="1967.5" ></text>
</g>
<g >
<title>`llvm::GVN::ValueTable::clear() (1 samples, 0.04%)</title><rect x="801.4" y="5829" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="804.36" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="101.1" y="3605" width="0.9" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="104.06" y="3615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="423.0" y="3525" width="3.8" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="426.05" y="3535.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="410.8" y="4565" width="1.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="413.84" y="4575.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="469.0" y="5797" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="472.05" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="400.0" y="4613" width="2.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="403.05" y="4623.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.3" y="3413" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="414.31" y="3423.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (7 samples, 0.28%)</title><rect x="294.0" y="5349" width="3.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="296.97" y="5359.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.04%)</title><rect x="166.8" y="1429" width="0.4" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="169.77" y="1439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (21 samples, 0.84%)</title><rect x="384.6" y="4533" width="9.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="387.56" y="4543.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="429.6" y="2069" width="1.0" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="432.62" y="2079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4261" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="408.68" y="4271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="232.5" y="2565" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="235.48" y="2575.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="238.1" y="133" width="1.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="241.11" y="143.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="412.3" y="4069" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="415.25" y="4079.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (26 samples, 1.03%)</title><rect x="16.6" y="5045" width="12.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="19.57" y="5055.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="249.8" y="949" width="0.5" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="252.85" y="959.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="584.5" y="5781" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="587.51" y="5791.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="453.1" y="5797" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="456.09" y="5807.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getEdgeValue(llvm::Va (4 samples, 0.16%)</title><rect x="692.0" y="5829" width="1.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="695.00" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (38 samples, 1.51%)</title><rect x="15.6" y="5429" width="17.9" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="18.63" y="5439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="281.3" y="4021" width="5.6" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="284.30" y="4031.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="2581" width="1.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="434.50" y="2591.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (5 samples, 0.20%)</title><rect x="180.4" y="245" width="2.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="183.38" y="255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3381" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="404.93" y="3391.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout con (1 samples, 0.04%)</title><rect x="913.5" y="5813" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="916.54" y="5823.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="119.4" y="3461" width="0.4" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="122.36" y="3471.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (35 samples, 1.39%)</title><rect x="417.4" y="4597" width="16.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="420.41" y="4607.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="385.0" y="3941" width="2.8" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="388.03" y="3951.5" ></text>
</g>
<g >
<title>`CCLASP-EVAL^CLASP-CLEAVIR^FN^^ (2,028 samples, 80.67%)</title><rect x="10.0" y="6133" width="951.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="13.00" y="6143.5" >`CCLASP-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="660.5" y="5493" width="0.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="663.55" y="5503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="247.0" y="165" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="250.03" y="175.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="823.0" y="5749" width="0.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="825.95" y="5759.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="648.8" y="5365" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="651.81" y="5375.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.04%)</title><rect x="52.2" y="4165" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="55.24" y="4175.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (9 samples, 0.36%)</title><rect x="564.3" y="5813" width="4.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="567.33" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="417.9" y="533" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="420.88" y="543.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (182 samples, 7.24%)</title><rect x="165.4" y="4213" width="85.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="168.36" y="4223.5" >`core::Fun..</text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="283.6" y="1077" width="0.5" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="286.64" y="1087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (3 samples, 0.12%)</title><rect x="408.0" y="4437" width="1.4" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="411.03" y="4447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="1077" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="423.70" y="1087.5" ></text>
</g>
<g >
<title>`llvm::TypeBasedAAResult::getModRefBehavior(llvm::ImmutableCallS (1 samples, 0.04%)</title><rect x="767.1" y="5749" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="770.10" y="5759.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.04%)</title><rect x="268.6" y="261" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="271.62" y="271.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="297.3" y="5381" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="300.26" y="5391.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (2 samples, 0.08%)</title><rect x="810.7" y="5589" width="1.0" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="813.75" y="5599.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.9" y="3285" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="435.90" y="3295.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="167.7" y="1141" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="170.71" y="1151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3381" width="1.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="411.03" y="3391.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="296.3" y="3141" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="299.32" y="3151.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="203.9" y="869" width="0.4" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="206.85" y="879.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="281.3" y="4581" width="5.6" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="284.30" y="4591.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="397.7" y="4229" width="2.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="400.70" y="4239.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.04%)</title><rect x="380.8" y="4517" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="383.80" y="4527.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="254.1" y="3093" width="1.4" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="257.07" y="3103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="167.7" y="2421" width="10.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="170.71" y="2431.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="409.4" y="4149" width="1.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="412.44" y="4159.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="255.5" y="3221" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="258.48" y="3231.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="289.7" y="5557" width="1.9" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="292.75" y="5567.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="428.7" y="2037" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="431.68" y="2047.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3221" width="0.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="254.26" y="3231.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="423.0" y="2501" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="426.05" y="2511.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.04%)</title><rect x="295.8" y="2197" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="298.85" y="2207.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="417.4" y="4357" width="5.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="420.41" y="4367.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="44.7" y="5317" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="47.73" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="2261" width="1.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="426.52" y="2271.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="178.0" y="2229" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="181.04" y="2239.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="109.5" y="3557" width="1.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="112.51" y="3567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.0" y="2517" width="0.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="411.97" y="2527.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="279.9" y="389" width="0.9" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="282.89" y="399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="382.2" y="4021" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="385.21" y="4031.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (145 samples, 5.77%)</title><rect x="59.8" y="5621" width="68.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="62.75" y="5631.5" >`COMBIN..</text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="167.7" y="837" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="170.71" y="847.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="247.0" y="469" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="250.03" y="479.5" ></text>
</g>
<g >
<title>`GC_finish_collection (3 samples, 0.12%)</title><rect x="436.7" y="5461" width="1.4" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="439.66" y="5471.5" ></text>
</g>
<g >
<title>`cc_enclose (2 samples, 0.08%)</title><rect x="310.9" y="5797" width="0.9" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="313.87" y="5807.5" ></text>
</g>
<g >
<title>`HOIST-LOAD-TIME-VALUE^CLASP-CLEAVIR-AST^FN^^ (41 samples, 1.63%)</title><rect x="325.4" y="5061" width="19.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="328.42" y="5071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="382.7" y="4853" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="385.68" y="4863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5429" width="0.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="408.21" y="5439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="400.5" y="3925" width="1.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="403.52" y="3935.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="425.9" y="2581" width="0.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="428.86" y="2591.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (2 samples, 0.08%)</title><rect x="639.0" y="5349" width="0.9" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="641.96" y="5359.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="397.7" y="4021" width="1.9" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="400.70" y="4031.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="417.9" y="693" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="420.88" y="703.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="136.3" y="4213" width="0.4" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="139.26" y="4223.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (63 samples, 2.51%)</title><rect x="133.9" y="4501" width="29.6" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="136.91" y="4511.5" >`c..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="123.6" y="629" width="0.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="126.59" y="639.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="332.0" y="4613" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="334.99" y="4623.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2709" width="1.4" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="127.53" y="2719.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.04%)</title><rect x="808.9" y="5509" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="811.87" y="5519.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::Grow(unsigned int) (1 samples, 0.04%)</title><rect x="960.9" y="5861" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="963.95" y="5871.5" ></text>
</g>
<g >
<title>`llvm::Twine::getSingleStringRef() const (1 samples, 0.04%)</title><rect x="656.8" y="5365" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="659.79" y="5375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="180.4" y="261" width="2.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="183.38" y="271.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (87 samples, 3.46%)</title><rect x="86.5" y="5253" width="40.8" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="89.51" y="5263.5" >`PR..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="933" width="5.2" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="175.40" y="943.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="123.6" y="853" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="126.59" y="863.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (87 samples, 3.46%)</title><rect x="86.5" y="5189" width="40.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="89.51" y="5199.5" >`PR..</text>
</g>
<g >
<title>`(anonymous namespace)::PostOrderFunctionAttrsLegacyPass::runOnS (3 samples, 0.12%)</title><rect x="686.4" y="5909" width="1.4" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="689.36" y="5919.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.04%)</title><rect x="747.9" y="5685" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="750.85" y="5695.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="314.2" y="5205" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="317.15" y="5215.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::ImmutableCallSite, llvm::M (5 samples, 0.20%)</title><rect x="904.6" y="5765" width="2.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="907.62" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="283.6" y="1109" width="1.0" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="286.64" y="1119.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="665.2" y="5525" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="668.24" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="233.9" y="1557" width="5.6" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="236.89" y="1567.5" ></text>
</g>
<g >
<title>`llvm::User::operator new(unsigned long) (1 samples, 0.04%)</title><rect x="790.6" y="5813" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="793.56" y="5823.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::tryOptimizeCall(llvm::CallInst*) (1 samples, 0.04%)</title><rect x="740.8" y="5813" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="743.81" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="167.2" y="2469" width="10.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="170.24" y="2479.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="50.8" y="4709" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="53.84" y="4719.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="165.4" y="3829" width="1.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="168.36" y="3839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="55.5" y="5685" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="58.53" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="430.6" y="1701" width="0.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="433.56" y="1711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="285.5" y="805" width="1.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="288.52" y="815.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;void const*, llvm:: (1 samples, 0.04%)</title><rect x="850.6" y="5829" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="853.64" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="3301" width="4.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="430.27" y="3311.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="664.3" y="5509" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="667.30" y="5519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="1061" width="0.4" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="428.86" y="1071.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="423.0" y="2677" width="1.5" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="426.05" y="2687.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="414.1" y="3557" width="0.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="417.13" y="3567.5" ></text>
</g>
<g >
<title>`DESCRIBE-FORM^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="56.9" y="5957" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="59.94" y="5967.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.04%)</title><rect x="539.0" y="5781" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="541.98" y="5791.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="454.5" y="5765" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="457.49" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (100 samples, 3.98%)</title><rect x="406.1" y="5733" width="47.0" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="409.15" y="5743.5" >`cor..</text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (3 samples, 0.12%)</title><rect x="386.0" y="3573" width="1.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="388.97" y="3583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="251.3" y="4021" width="0.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="254.26" y="4031.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="661" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="423.70" y="671.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="765.2" y="5653" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="768.22" y="5663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="570.9" y="5765" width="2.8" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="573.90" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="423.5" y="2165" width="1.0" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="426.52" y="2175.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="431.5" y="3557" width="1.9" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="434.50" y="3567.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::computeExitLimitFromCondImpl(llvm::Scala (1 samples, 0.04%)</title><rect x="920.1" y="5749" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="923.11" y="5759.5" ></text>
</g>
<g >
<title>`SEQ-ITERATOR-NEXT^CORE^FN^^ (1 samples, 0.04%)</title><rect x="386.4" y="2933" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="389.44" y="2943.5" ></text>
</g>
<g >
<title>`core::core__integer_to_string(gctools::smart_ptr&lt;core::StrNs_O&gt; (1 samples, 0.04%)</title><rect x="408.5" y="2661" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="411.50" y="2671.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="506.6" y="5797" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="509.60" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="257.4" y="1525" width="0.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="260.36" y="1535.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="423.5" y="2501" width="1.0" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="426.52" y="2511.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="232.0" y="3301" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="235.01" y="3311.5" ></text>
</g>
<g >
<title>0x11a477094 (513 samples, 20.41%)</title><rect x="58.8" y="5797" width="240.8" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="61.81" y="5807.5" >0x11a477094</text>
</g>
<g >
<title>`COMPILE-FILE-PATHNAME^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="961.4" y="6053" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="964.42" y="6063.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="393.9" y="3397" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="396.95" y="3407.5" ></text>
</g>
<g >
<title>`core::cl__error(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.04%)</title><rect x="336.7" y="4117" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="339.68" y="4127.5" ></text>
</g>
<g >
<title>`ThreadCmpOverSelect(llvm::CmpInst::Predicate, llvm::Value*, llv (2 samples, 0.08%)</title><rect x="843.1" y="5829" width="1.0" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="846.13" y="5839.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="520.7" y="5749" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="523.68" y="5759.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (3 samples, 0.12%)</title><rect x="125.9" y="2885" width="1.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="128.93" y="2895.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="247.5" y="165" width="1.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="250.50" y="175.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="3157" width="4.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="279.60" y="3167.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="393.5" y="4085" width="0.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="396.48" y="4095.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (2 samples, 0.08%)</title><rect x="251.3" y="3509" width="0.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="254.26" y="3519.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.04%)</title><rect x="99.6" y="4197" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="102.65" y="4207.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (31 samples, 1.23%)</title><rect x="257.4" y="2277" width="14.5" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="260.36" y="2287.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="278.9" y="325" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="281.95" y="335.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="1845" width="9.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="262.24" y="1855.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (4 samples, 0.16%)</title><rect x="465.8" y="5813" width="1.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="468.76" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="393.9" y="3157" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="396.95" y="3167.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="52.7" y="3893" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="55.71" y="3903.5" ></text>
</g>
<g >
<title>`FIND-SLOT-DEFINITION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="455.9" y="5653" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="458.90" y="5663.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.04%)</title><rect x="394.9" y="5045" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="397.88" y="5055.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="255.5" y="3029" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="258.48" y="3039.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="319.3" y="5349" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="322.32" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="1733" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="411.97" y="1743.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (43 samples, 1.71%)</title><rect x="252.2" y="4149" width="20.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="255.20" y="4159.5" ></text>
</g>
<g >
<title>0x11a477094 (31 samples, 1.23%)</title><rect x="257.4" y="2437" width="14.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="260.36" y="2447.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="34.4" y="4629" width="0.9" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="37.41" y="4639.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="1797" width="7.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="246.28" y="1807.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="319.8" y="5301" width="0.5" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="322.79" y="5311.5" ></text>
</g>
<g >
<title>`small_malloc_should_clear (1 samples, 0.04%)</title><rect x="938.9" y="5781" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="941.89" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="409.9" y="2501" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="412.90" y="2511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="1477" width="0.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="434.96" y="1487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (10 samples, 0.40%)</title><rect x="172.4" y="613" width="4.7" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="175.40" y="623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="4229" width="1.0" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="424.64" y="4239.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solveBlockValueImpl(l (4 samples, 0.16%)</title><rect x="696.2" y="5797" width="1.9" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="699.22" y="5807.5" ></text>
</g>
<g >
<title>`core::core__sl_boundp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="452.6" y="5253" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="455.62" y="5263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="3477" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="414.78" y="3487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="417.4" y="2021" width="3.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="420.41" y="2031.5" ></text>
</g>
<g >
<title>`llvm::ValueEnumerator::incorporateFunction(llvm::Function const (3 samples, 0.12%)</title><rect x="955.8" y="5877" width="1.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="958.78" y="5887.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (3 samples, 0.12%)</title><rect x="388.3" y="3813" width="1.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="391.31" y="3823.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="342.8" y="4453" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="345.78" y="4463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.5" y="4533" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="418.54" y="4543.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (48 samples, 1.91%)</title><rect x="180.4" y="741" width="22.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="183.38" y="751.5" >`..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="92.1" y="3397" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="95.14" y="3407.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="287.4" y="5077" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="290.40" y="5087.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="38.6" y="4517" width="2.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="41.63" y="4527.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="415.1" y="4517" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="418.07" y="4527.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="247.5" y="293" width="1.9" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="250.50" y="303.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="164.0" y="4357" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="166.95" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="417.9" y="229" width="0.5" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="420.88" y="239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="401.9" y="3813" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="404.93" y="3823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="132.0" y="4501" width="1.0" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="135.04" y="4511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="240.0" y="2613" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="242.99" y="2623.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="769.9" y="5733" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="772.91" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="2949" width="1.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="424.64" y="2959.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="285.5" y="853" width="1.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="288.52" y="863.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="125.9" y="2789" width="1.0" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="128.93" y="2799.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="348.9" y="5285" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="351.89" y="5295.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.04%)</title><rect x="454.5" y="5701" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="457.49" y="5711.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="424.9" y="917" width="0.5" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="427.92" y="927.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (137 samples, 5.45%)</title><rect x="167.2" y="3797" width="64.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="170.24" y="3807.5" >`core::..</text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="232.0" y="3093" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="235.01" y="3103.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="427.3" y="2565" width="4.2" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="430.27" y="2575.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (1 samples, 0.04%)</title><rect x="456.4" y="5845" width="0.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="459.37" y="5855.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (6 samples, 0.24%)</title><rect x="294.0" y="4565" width="2.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="296.97" y="4575.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="172.4" y="485" width="4.7" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="175.40" y="495.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T LEXICAL-VARIABLE-INFO T T))^ (1 samples, 0.04%)</title><rect x="100.6" y="3525" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="103.59" y="3535.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="423.5" y="1893" width="1.0" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="426.52" y="1903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="424.9" y="2229" width="1.0" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="427.92" y="2239.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="61.6" y="4981" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="64.63" y="4991.5" ></text>
</g>
<g >
<title>`core::core__find_class_holder(gctools::smart_ptr&lt;core::Symbol_O (2 samples, 0.08%)</title><rect x="119.4" y="3493" width="0.9" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="122.36" y="3503.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="714.1" y="5877" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="717.06" y="5887.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1:: (1 samples, 0.04%)</title><rect x="493.0" y="5749" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="495.98" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (18 samples, 0.72%)</title><rect x="91.7" y="4293" width="8.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="94.67" y="4303.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="167.7" y="1189" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="170.71" y="1199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="405.7" y="4837" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="408.68" y="4847.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="257.4" y="1637" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="260.36" y="1647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="427.3" y="1909" width="0.9" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="430.27" y="1919.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="231.5" y="3797" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="234.54" y="3807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="125.9" y="2933" width="1.4" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="128.93" y="2943.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="50.8" y="4789" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="53.84" y="4799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="423.0" y="2629" width="1.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="426.05" y="2639.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getEdgeValue(llvm::Va (1 samples, 0.04%)</title><rect x="703.7" y="5765" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="706.73" y="5775.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (1 samples, 0.04%)</title><rect x="887.3" y="5717" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="890.26" y="5727.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.5" y="4117" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="418.54" y="4127.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (25 samples, 0.99%)</title><rect x="16.6" y="4933" width="11.7" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="19.57" y="4943.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="432.0" y="1733" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="434.96" y="1743.5" ></text>
</g>
<g >
<title>`MAKE-TEMPS^CLEAVIR-AST-TO-HIR^FN^^ (37 samples, 1.47%)</title><rect x="435.3" y="5685" width="17.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="438.25" y="5695.5" ></text>
</g>
<g >
<title>`OPTIMIZED-LEXICAL-LOCATION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="340.9" y="4453" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="343.91" y="4463.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="352.2" y="5525" width="1.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="355.17" y="5535.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="281.8" y="2997" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="284.77" y="3007.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (1 samples, 0.04%)</title><rect x="278.9" y="549" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="281.95" y="559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="2933" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="414.78" y="2943.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="295.4" y="3061" width="0.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="298.38" y="3071.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (57 samples, 2.27%)</title><rect x="204.3" y="1141" width="26.8" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="207.32" y="1151.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (312 samples, 12.41%)</title><rect x="129.7" y="5253" width="146.4" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="132.69" y="5263.5" >`core::Funcallable..</text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="583.6" y="5797" width="0.4" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="586.57" y="5807.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="632.4" y="5269" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="635.39" y="5279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3445" width="0.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="415.25" y="3455.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="165.4" y="3477" width="1.8" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="168.36" y="3487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="268.6" y="1317" width="3.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="271.62" y="1327.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="3877" width="1.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="411.03" y="3887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="423.0" y="2901" width="1.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="426.05" y="2911.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldGetElementPtr(llvm::Type*, llvm::Constant*, b (1 samples, 0.04%)</title><rect x="843.6" y="5653" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="846.60" y="5663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="4325" width="1.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="411.03" y="4335.5" ></text>
</g>
<g >
<title>`CONVERT-CALLED-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T T T T) (7 samples, 0.28%)</title><rect x="94.5" y="3637" width="3.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="97.49" y="3647.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (2 samples, 0.08%)</title><rect x="746.4" y="5733" width="1.0" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="749.44" y="5743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="101.1" y="3637" width="0.9" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="104.06" y="3647.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="421.2" y="3733" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="424.17" y="3743.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="167.7" y="789" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="170.71" y="799.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="125.9" y="3045" width="1.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="128.93" y="3055.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="455.0" y="5717" width="0.4" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="457.96" y="5727.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="645.1" y="5333" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="648.06" y="5343.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="285.1" y="949" width="0.4" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="288.05" y="959.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (5 samples, 0.20%)</title><rect x="710.8" y="5861" width="2.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="713.77" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="268.6" y="1045" width="3.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="271.62" y="1055.5" ></text>
</g>
<g >
<title>`llvm::PredicatedScalarEvolution::getBackedgeTakenCount() (1 samples, 0.04%)</title><rect x="846.4" y="5781" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="849.42" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="172.4" y="853" width="5.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="175.40" y="863.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="243.3" y="725" width="1.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="246.28" y="735.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="812.6" y="5589" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="815.63" y="5599.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((MEMSET2-INSTRUCTIO (1 samples, 0.04%)</title><rect x="648.8" y="5429" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="651.81" y="5439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="416.5" y="4661" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="419.48" y="4671.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (9 samples, 0.36%)</title><rect x="276.6" y="2885" width="4.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="279.60" y="2895.5" ></text>
</g>
<g >
<title>`__sfvwrite (1 samples, 0.04%)</title><rect x="408.5" y="2581" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="411.50" y="2591.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.04%)</title><rect x="41.0" y="4357" width="0.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="43.98" y="4367.5" ></text>
</g>
<g >
<title>`FUNCTION-NAME-FROM-SOURCE-INFO^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="331.1" y="4437" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="334.05" y="4447.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (33 samples, 1.31%)</title><rect x="15.6" y="5221" width="15.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="18.63" y="5231.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (19 samples, 0.76%)</title><rect x="259.2" y="1813" width="9.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="262.24" y="1823.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LABELS) T T T))^ME (113 samples, 4.49%)</title><rect x="178.0" y="2613" width="53.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="181.04" y="2623.5" >`CONV..</text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (41 samples, 1.63%)</title><rect x="469.5" y="5717" width="19.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="472.51" y="5727.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="233.9" y="693" width="1.4" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="236.89" y="703.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="621.1" y="5237" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="624.12" y="5247.5" ></text>
</g>
<g >
<title>`IRC-EXTRACT-VALUE^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="647.4" y="5349" width="0.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="650.41" y="5359.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeAllocSize(llvm::Type*) const (1 samples, 0.04%)</title><rect x="811.2" y="5573" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="814.22" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4693" width="0.4" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="408.68" y="4703.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="409.4" y="3461" width="1.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="412.44" y="3471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="125.9" y="2101" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="128.93" y="2111.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="287.4" y="4949" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="290.40" y="4959.5" ></text>
</g>
<g >
<title>0x1225e5094 (1 samples, 0.04%)</title><rect x="278.9" y="293" width="0.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="281.95" y="303.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="427.3" y="2965" width="4.2" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="430.27" y="2975.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="92.1" y="3029" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="95.14" y="3039.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="405.2" y="5525" width="0.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="408.21" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="309" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="423.70" y="319.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.08%)</title><rect x="269.1" y="213" width="0.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="272.09" y="223.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="320.3" y="5301" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="323.25" y="5311.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="247.0" y="757" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="250.03" y="767.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (34 samples, 1.35%)</title><rect x="256.0" y="3157" width="15.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="258.95" y="3167.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="186.0" y="197" width="1.0" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="189.01" y="207.5" ></text>
</g>
<g >
<title>`core::core__find_class_holder(gctools::smart_ptr&lt;core::Symbol_O (1 samples, 0.04%)</title><rect x="203.4" y="805" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="206.38" y="815.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="415.5" y="4549" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="418.54" y="4559.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (3 samples, 0.12%)</title><rect x="245.2" y="485" width="1.4" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="248.16" y="495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="423.0" y="3621" width="3.8" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="426.05" y="3631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="379.4" y="5141" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="382.40" y="5151.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="2533" width="1.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="168.83" y="2543.5" ></text>
</g>
<g >
<title>`ENVIRONMENT-POLICY^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.04%)</title><rect x="298.7" y="5525" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="301.66" y="5535.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="423.0" y="3749" width="4.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="426.05" y="3759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="243.3" y="533" width="0.4" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="246.28" y="543.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (4 samples, 0.16%)</title><rect x="157.4" y="4277" width="1.9" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="160.38" y="4287.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.04%)</title><rect x="125.0" y="1637" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="128.00" y="1647.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.4" y="3205" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="412.44" y="3215.5" ></text>
</g>
<g >
<title>`SIMPLE-TYPE-PREDICATE^CORE^FN^^ (1 samples, 0.04%)</title><rect x="259.2" y="165" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="262.24" y="175.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="793.9" y="5845" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="796.85" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3381" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="415.25" y="3391.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (7 samples, 0.28%)</title><rect x="890.5" y="5797" width="3.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="893.54" y="5807.5" ></text>
</g>
<g >
<title>`wrapped_cl__error_T_spList_sp (1 samples, 0.04%)</title><rect x="336.7" y="4133" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="339.68" y="4143.5" ></text>
</g>
<g >
<title>`core::core__find_class_holder(gctools::smart_ptr&lt;core::Symbol_O (4 samples, 0.16%)</title><rect x="77.6" y="4965" width="1.9" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="80.59" y="4975.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="2357" width="5.6" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="236.89" y="2367.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (231 samples, 9.19%)</title><rect x="164.0" y="4373" width="108.4" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="166.95" y="4383.5" >`SET-OR-BIND-..</text>
</g>
<g >
<title>`GC_reclaim_block (2 samples, 0.08%)</title><rect x="504.7" y="5509" width="1.0" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="507.72" y="5519.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="424.0" y="1733" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="426.99" y="1743.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="417.9" y="469" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="420.88" y="479.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="431.5" y="3381" width="1.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="434.50" y="3391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3605" width="1.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="411.03" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="410.8" y="4453" width="1.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="413.84" y="4463.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="26.0" y="4469" width="0.4" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="28.96" y="4479.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="255.5" y="3109" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="258.48" y="3119.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="36.8" y="3541" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="39.75" y="3551.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.04%)</title><rect x="162.1" y="4277" width="0.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="165.08" y="4287.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="287.4" y="5157" width="0.5" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="290.40" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="400.0" y="4629" width="2.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="403.05" y="4639.5" ></text>
</g>
<g >
<title>`CONS-TABLE^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="250.3" y="1269" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="253.32" y="1279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="125.9" y="2229" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="128.93" y="2239.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (1 samples, 0.04%)</title><rect x="783.1" y="5797" width="0.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="786.05" y="5807.5" ></text>
</g>
<g >
<title>`READ-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="18.0" y="3477" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="20.98" y="3487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="2213" width="0.4" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="428.86" y="2223.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="423.0" y="3093" width="1.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="426.05" y="3103.5" ></text>
</g>
<g >
<title>`core::lisp_true() (1 samples, 0.04%)</title><rect x="46.1" y="5381" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="49.14" y="5391.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.08%)</title><rect x="527.7" y="5733" width="1.0" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="530.72" y="5743.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-I64^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="665.7" y="5605" width="0.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="668.71" y="5615.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="321.7" y="5077" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="324.66" y="5087.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="34.9" y="4229" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="37.88" y="4239.5" ></text>
</g>
<g >
<title>`TREAT-AS-SPECIAL-OPERATOR-P^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="58.8" y="5717" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="61.81" y="5727.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="380.3" y="4421" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="383.33" y="4431.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="165.8" y="2485" width="1.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="168.83" y="2495.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (2 samples, 0.08%)</title><rect x="943.1" y="5861" width="0.9" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="946.11" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="123.1" y="2245" width="1.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="126.12" y="2255.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.04%)</title><rect x="415.5" y="3973" width="0.5" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="418.54" y="3983.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="295.4" y="2261" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="298.38" y="2271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="2949" width="4.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="430.27" y="2959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (13 samples, 0.52%)</title><rect x="427.3" y="3877" width="6.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="430.27" y="3887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="416.5" y="4565" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="419.48" y="4575.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="165.4" y="3973" width="1.8" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="168.36" y="3983.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="34.4" y="4597" width="0.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="37.41" y="4607.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (23 samples, 0.91%)</title><rect x="276.1" y="4917" width="10.8" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="279.13" y="4927.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION-IMPL^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="604.7" y="5493" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="607.69" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="422.1" y="2357" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="425.11" y="2367.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="618.3" y="5365" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="621.31" y="5375.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="389.7" y="3781" width="2.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="392.72" y="3791.5" ></text>
</g>
<g >
<title>0x114bc4094 (3 samples, 0.12%)</title><rect x="279.4" y="1045" width="1.4" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="282.42" y="1055.5" ></text>
</g>
<g >
<title>`wrapped_cl__type_of_T_sp (2 samples, 0.08%)</title><rect x="202.9" y="885" width="1.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="205.91" y="895.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="114.7" y="3621" width="7.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="117.67" y="3631.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (8 samples, 0.32%)</title><rect x="268.2" y="1621" width="3.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="271.15" y="1631.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="392.1" y="3989" width="0.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="395.07" y="3999.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="627.7" y="5109" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="630.69" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="428.7" y="2085" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="431.68" y="2095.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="413.7" y="4005" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="416.66" y="4015.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (35 samples, 1.39%)</title><rect x="417.4" y="4693" width="16.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="420.41" y="4703.5" ></text>
</g>
<g >
<title>`CST-TO-AST^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="321.7" y="5413" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="324.66" y="5423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="243.3" y="1333" width="7.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="246.28" y="1343.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="331.5" y="4597" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="334.52" y="4607.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="169.1" y="645" width="1.0" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="172.12" y="655.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::run() (110 samples, 4.38%)</title><rect x="866.6" y="5861" width="51.6" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="869.60" y="5871.5" >`llvm..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="4917" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="408.68" y="4927.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (3 samples, 0.12%)</title><rect x="655.4" y="5493" width="1.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="658.39" y="5503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="339.0" y="4437" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="342.03" y="4447.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="284.6" y="1573" width="2.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="287.58" y="1583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (108 samples, 4.30%)</title><rect x="180.4" y="1573" width="50.7" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="183.38" y="1583.5" >`core..</text>
</g>
<g >
<title>`core::cl__integerp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="528.2" y="5717" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="531.19" y="5727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="355.9" y="5653" width="0.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="358.93" y="5663.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.04%)</title><rect x="627.2" y="5013" width="0.5" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="630.22" y="5023.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="36.3" y="3941" width="1.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="39.28" y="3951.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="232.5" y="3141" width="8.0" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="235.48" y="3151.5" ></text>
</g>
<g >
<title>`FUDGE-VALUES-TYPE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="93.5" y="3397" width="0.5" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="96.55" y="3407.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="391.6" y="2277" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="394.60" y="2287.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="393.5" y="3989" width="0.9" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="396.48" y="3999.5" ></text>
</g>
<g >
<title>`AST-&gt;HIR^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="349.8" y="5397" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="352.82" y="5407.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.3" y="1205" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="430.27" y="1215.5" ></text>
</g>
<g >
<title>`llvm::Type::getInt1Ty(llvm::LLVMContext&amp;) (1 samples, 0.04%)</title><rect x="895.2" y="5813" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="898.23" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="410.8" y="5077" width="5.7" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="413.84" y="5087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="1205" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="423.70" y="1215.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="413.7" y="4117" width="0.4" height="15.0" fill="rgb(75,222,75)" rx="2" ry="2" />
<text  x="416.66" y="4127.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="291.2" y="5461" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="294.15" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (23 samples, 0.91%)</title><rect x="383.6" y="4981" width="10.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="386.62" y="4991.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (28 samples, 1.11%)</title><rect x="472.8" y="5557" width="13.1" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="475.80" y="5567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (32 samples, 1.27%)</title><rect x="187.4" y="293" width="15.0" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="190.42" y="303.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="425.9" y="1509" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="428.86" y="1519.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="419.3" y="661" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="422.29" y="671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="2389" width="3.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="420.41" y="2399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="386.0" y="3381" width="0.9" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="388.97" y="3391.5" ></text>
</g>
<g >
<title>`BASIC-BLOCKS^CLEAVIR-BASIC-BLOCKS^FN^^ (7 samples, 0.28%)</title><rect x="593.0" y="5861" width="3.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="595.96" y="5871.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="165.8" y="1269" width="1.0" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="168.83" y="1279.5" ></text>
</g>
<g >
<title>`QUASIQUOTE^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="122.6" y="2549" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="125.65" y="2559.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (1 samples, 0.04%)</title><rect x="948.7" y="6005" width="0.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="951.74" y="6015.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="401.9" y="3685" width="0.5" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="404.93" y="3695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="123.6" y="949" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="126.59" y="959.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="244.7" y="789" width="2.8" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="247.69" y="799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="2021" width="1.0" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="426.52" y="2031.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="243.3" y="1077" width="4.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="246.28" y="1087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="424.9" y="2789" width="1.0" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="427.92" y="2799.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="358.3" y="5749" width="0.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="361.27" y="5759.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (19 samples, 0.76%)</title><rect x="259.2" y="1493" width="9.0" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="262.24" y="1503.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="36.8" y="3445" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="39.75" y="3455.5" ></text>
</g>
<g >
<title>`llvm::canSinkOrHoistInst(llvm::Instruction&amp;, llvm::AAResults*,  (1 samples, 0.04%)</title><rect x="781.2" y="5829" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="784.18" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="125.9" y="2453" width="1.0" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="128.93" y="2463.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="165.8" y="1317" width="1.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="168.83" y="1327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="337.2" y="4453" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="340.15" y="4463.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="240.0" y="2821" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="242.99" y="2831.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="1909" width="0.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="126.59" y="1919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="382.2" y="4613" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="385.21" y="4623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="389.7" y="3813" width="2.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="392.72" y="3823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3525" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="414.78" y="3535.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="233.9" y="133" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="236.89" y="143.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (1 samples, 0.04%)</title><rect x="418.8" y="853" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="421.82" y="863.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, void (llvmo::Module_O::*)()&gt;::method_e (5 samples, 0.20%)</title><rect x="949.2" y="5957" width="2.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="952.21" y="5967.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="421.6" y="3973" width="1.0" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="424.64" y="3983.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="166.3" y="565" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="169.30" y="575.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.04%)</title><rect x="161.6" y="4181" width="0.5" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="164.61" y="4191.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="401.0" y="3669" width="0.9" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="403.99" y="3679.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="124.5" y="1797" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="127.53" y="1807.5" ></text>
</g>
<g >
<title>`UNSAFE-FUNCALL1^CORE^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="757" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="171.18" y="767.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="261" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="423.70" y="271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="272.8" y="4645" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="275.85" y="4655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="2549" width="4.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="430.27" y="2559.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeWrapperPass::releaseMemory() (3 samples, 0.12%)</title><rect x="925.7" y="5861" width="1.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="928.74" y="5871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="416.5" y="4821" width="0.4" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="419.48" y="4831.5" ></text>
</g>
<g >
<title>`MAKE-CATCH-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="384.6" y="4133" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="387.56" y="4143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="428.7" y="2165" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="431.68" y="2175.5" ></text>
</g>
<g >
<title>`cc_error_type_error (1 samples, 0.04%)</title><rect x="324.5" y="4837" width="0.4" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="327.48" y="4847.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (20 samples, 0.80%)</title><rect x="112.8" y="3765" width="9.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="115.79" y="3775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="294.9" y="4117" width="1.9" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="297.91" y="4127.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="297.3" y="5301" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="300.26" y="5311.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.04%)</title><rect x="932.8" y="5781" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="935.78" y="5791.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (3 samples, 0.12%)</title><rect x="827.6" y="5669" width="1.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="830.65" y="5679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="281.3" y="3637" width="5.6" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="284.30" y="3647.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="418.4" y="773" width="0.4" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="421.35" y="783.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (35 samples, 1.39%)</title><rect x="417.4" y="4821" width="16.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="420.41" y="4831.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="384.6" y="4453" width="3.7" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="387.56" y="4463.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="409.4" y="4501" width="1.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="412.44" y="4511.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (48 samples, 1.91%)</title><rect x="180.4" y="1029" width="22.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="183.38" y="1039.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="398.2" y="3429" width="0.9" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="401.17" y="3439.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="421.2" y="3973" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="424.17" y="3983.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="165.8" y="1717" width="1.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="168.83" y="1727.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (3 samples, 0.12%)</title><rect x="165.8" y="2549" width="1.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="168.83" y="2559.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="321.2" y="5077" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="324.19" y="5087.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.04%)</title><rect x="609.9" y="5333" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="612.86" y="5343.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="501.0" y="5765" width="0.4" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="503.96" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="2229" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="423.70" y="2239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="385.5" y="3765" width="1.9" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="388.50" y="3775.5" ></text>
</g>
<g >
<title>`core::core__find_class_holder(gctools::smart_ptr&lt;core::Symbol_O (1 samples, 0.04%)</title><rect x="165.4" y="2405" width="0.4" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="168.36" y="2415.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="322.1" y="5077" width="0.5" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="325.13" y="5087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="1541" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="423.70" y="1551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="167.2" y="2357" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="170.24" y="2367.5" ></text>
</g>
<g >
<title>`BUILD-CST^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="177.1" y="581" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="180.10" y="591.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.04%)</title><rect x="40.5" y="4341" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="43.51" y="4351.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'FUNCTION) T T T))^ (145 samples, 5.77%)</title><rect x="59.8" y="5429" width="68.0" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="62.75" y="5439.5" >`CONVER..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="2261" width="4.2" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="285.70" y="2271.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="235.3" y="677" width="4.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="238.30" y="687.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="138.6" y="4309" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="141.61" y="4319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="167.2" y="2389" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="170.24" y="2399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="4117" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="414.31" y="4127.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="392.1" y="4005" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="395.07" y="4015.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="33.5" y="5365" width="0.4" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="36.47" y="5375.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="19.9" y="3413" width="0.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="22.86" y="3423.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="172.4" y="453" width="4.7" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="175.40" y="463.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (6 samples, 0.24%)</title><rect x="868.9" y="5797" width="2.9" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="871.95" y="5807.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="831.4" y="5749" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="834.40" y="5759.5" ></text>
</g>
<g >
<title>0x122f2b094 (24 samples, 0.95%)</title><rect x="276.1" y="5205" width="11.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="279.13" y="5215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="3205" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="412.90" y="3215.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (35 samples, 1.39%)</title><rect x="256.0" y="3349" width="16.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="258.95" y="3359.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="637.1" y="5365" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="640.08" y="5375.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="112.3" y="3829" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="115.32" y="3839.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="379.4" y="4997" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="382.40" y="5007.5" ></text>
</g>
<g >
<title>`MAKE-LOAD-FORM^COMMON-LISP^((AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="356.9" y="5749" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="359.87" y="5759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="3013" width="1.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="434.50" y="3023.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="400.0" y="4165" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="403.05" y="4175.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="279.9" y="453" width="0.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="282.89" y="463.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="664.3" y="5541" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="667.30" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (5 samples, 0.20%)</title><rect x="397.7" y="4293" width="2.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="400.70" y="4303.5" ></text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (1 samples, 0.04%)</title><rect x="426.3" y="2373" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="429.33" y="2383.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="386.4" y="3221" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="389.44" y="3231.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="324.5" y="4917" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="327.48" y="4927.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="2149" width="5.6" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="236.89" y="2159.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="252.7" y="3237" width="0.4" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="255.67" y="3247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="34.4" y="5301" width="10.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="37.41" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2997" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="412.90" y="3007.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="381.3" y="4629" width="0.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="384.27" y="4639.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="356.4" y="5557" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="359.40" y="5567.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (4 samples, 0.16%)</title><rect x="504.2" y="5653" width="1.9" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="507.25" y="5663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="295.4" y="2981" width="0.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="298.38" y="2991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3765" width="1.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="411.03" y="3775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="3845" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="414.31" y="3855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="379.9" y="4901" width="2.8" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="382.86" y="4911.5" ></text>
</g>
<g >
<title>`_Unwind_GetLanguageSpecificData (1 samples, 0.04%)</title><rect x="232.5" y="2405" width="0.5" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="235.48" y="2415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="409.4" y="3349" width="1.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="412.44" y="3359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="2469" width="3.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="420.41" y="2479.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.04%)</title><rect x="251.7" y="3093" width="0.5" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="254.73" y="3103.5" ></text>
</g>
<g >
<title>`SETUP-CALLING-CONVENTION^COMPILER^FN^^ (3 samples, 0.12%)</title><rect x="631.4" y="5349" width="1.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="634.45" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="100.6" y="3685" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="103.59" y="3695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="427.3" y="2597" width="4.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="430.27" y="2607.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="649.3" y="5349" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="652.28" y="5359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="2037" width="0.9" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="126.59" y="2047.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (4 samples, 0.16%)</title><rect x="353.6" y="5557" width="1.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="356.58" y="5567.5" ></text>
</g>
<g >
<title>`core::core__generalp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="577.5" y="5781" width="0.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="580.47" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="1189" width="5.6" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="236.89" y="1199.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="177.1" y="485" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="180.10" y="495.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="52.7" y="3605" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="55.71" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (8 samples, 0.32%)</title><rect x="336.2" y="4581" width="3.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="339.21" y="4591.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION-IMPL^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="606.1" y="5477" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="609.10" y="5487.5" ></text>
</g>
<g >
<title>`CST-FROM-ELEMENT^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="4981" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="327.01" y="4991.5" ></text>
</g>
<g >
<title>`wrapped_core__ltvc_write_string_T_spT_spsize_t (1 samples, 0.04%)</title><rect x="684.5" y="5941" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="687.49" y="5951.5" ></text>
</g>
<g >
<title>`llvm::Value::getValueName() const (1 samples, 0.04%)</title><rect x="950.2" y="5781" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="953.15" y="5791.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (4 samples, 0.16%)</title><rect x="49.9" y="5125" width="1.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="52.90" y="5135.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="524.9" y="5733" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="527.90" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2725" width="4.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="279.60" y="2735.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="1797" width="4.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="279.60" y="1807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="186.5" y="133" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="189.48" y="143.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2981" width="4.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="279.60" y="2991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="397.7" y="3877" width="1.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="400.70" y="3887.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (5 samples, 0.20%)</title><rect x="244.7" y="773" width="2.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="247.69" y="783.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="316.5" y="5157" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="319.50" y="5167.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="3333" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="414.78" y="3343.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.9" y="4149" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="404.93" y="4159.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatticeElement, llvm::D (1 samples, 0.04%)</title><rect x="693.4" y="5749" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="696.40" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="1765" width="50.7" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="183.38" y="1775.5" >`INTE..</text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="356.4" y="5477" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="359.40" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1333" width="0.4" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="428.86" y="1343.5" ></text>
</g>
<g >
<title>`CST-&gt;AST^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="318.4" y="5621" width="0.4" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="321.38" y="5631.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (1 samples, 0.04%)</title><rect x="44.7" y="5285" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="47.73" y="5295.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="329.6" y="4389" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="332.64" y="4399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="427.3" y="2405" width="0.9" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="430.27" y="2415.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="423.0" y="3077" width="1.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="426.05" y="3087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="88.4" y="4229" width="3.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="91.39" y="4239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1237" width="2.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="420.41" y="1247.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="2405" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="414.78" y="2415.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="276.1" y="4053" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="279.13" y="4063.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (21 samples, 0.84%)</title><rect x="384.6" y="4501" width="9.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="387.56" y="4511.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="2309" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="428.86" y="2319.5" ></text>
</g>
<g >
<title>`llvm::Instruction::getMetadataImpl(unsigned int) const (1 samples, 0.04%)</title><rect x="902.7" y="5829" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="905.74" y="5839.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (22 samples, 0.88%)</title><rect x="34.4" y="5349" width="10.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="37.41" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'TAGBODY) T T T))^M (19 samples, 0.76%)</title><rect x="259.2" y="1077" width="9.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="262.24" y="1087.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1413" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="423.70" y="1423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="3989" width="1.0" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="424.64" y="3999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="430.6" y="1877" width="0.4" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="433.56" y="1887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="279.9" y="565" width="0.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="282.89" y="575.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="23.6" y="3909" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="26.61" y="3919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="741" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="423.70" y="751.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_combine_recursive_helper::combine(u (1 samples, 0.04%)</title><rect x="752.5" y="5621" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="755.55" y="5631.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (32 samples, 1.27%)</title><rect x="187.4" y="469" width="15.0" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="190.42" y="479.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="135.8" y="4229" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="138.79" y="4239.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="424.5" y="3045" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="427.46" y="3055.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="385.0" y="4117" width="2.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="388.03" y="4127.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="243.3" y="1013" width="4.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="246.28" y="1023.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.04%)</title><rect x="653.0" y="5413" width="0.5" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="656.04" y="5423.5" ></text>
</g>
<g >
<title>`llvm::getConstantStringInfo(llvm::Value const*, llvm::StringRef (1 samples, 0.04%)</title><rect x="807.5" y="5605" width="0.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="810.46" y="5615.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (1 samples, 0.04%)</title><rect x="271.9" y="3221" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="274.91" y="3231.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::removeNotPreservedAnalysis(llvm::Pass*) (1 samples, 0.04%)</title><rect x="685.9" y="5861" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="688.89" y="5871.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.04%)</title><rect x="526.8" y="5733" width="0.4" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="529.78" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="390.2" y="3653" width="1.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="393.19" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="2293" width="1.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="432.62" y="2303.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="627.2" y="5109" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="630.22" y="5119.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((:AROUND) (T T CLASP))^METHOD (1 samples, 0.04%)</title><rect x="126.9" y="2805" width="0.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="129.87" y="2815.5" ></text>
</g>
<g >
<title>`void llvm::SmallVectorImpl&lt;llvm::Value*&gt;::append&lt;llvm::Use*, vo (1 samples, 0.04%)</title><rect x="885.8" y="5829" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="888.85" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1781" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="428.86" y="1791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="295.4" y="2149" width="0.4" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="298.38" y="2159.5" ></text>
</g>
<g >
<title>`core::clasp_mergePathnames(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="951.6" y="5925" width="0.4" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="954.56" y="5935.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="2293" width="1.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="168.83" y="2303.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (6 samples, 0.24%)</title><rect x="574.7" y="5797" width="2.8" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="577.65" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="136.7" y="4309" width="1.9" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="139.73" y="4319.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="26.0" y="4389" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="28.96" y="4399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="125.9" y="3317" width="1.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="128.93" y="3327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="255.0" y="2885" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="258.01" y="2895.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="124.5" y="1909" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="127.53" y="1919.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="247.0" y="517" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="250.03" y="527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3765" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="415.25" y="3775.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (60 samples, 2.39%)</title><rect x="323.5" y="5429" width="28.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="326.54" y="5439.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (145 samples, 5.77%)</title><rect x="59.8" y="5653" width="68.0" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="62.75" y="5663.5" >`INTERP..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (40 samples, 1.59%)</title><rect x="232.0" y="3381" width="18.8" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="235.01" y="3391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="340.4" y="4597" width="1.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="343.44" y="4607.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="26.0" y="4485" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="28.96" y="4495.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::BasicBlock*&gt;::insert(llvm::BasicBlo (1 samples, 0.04%)</title><rect x="918.7" y="5861" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="921.70" y="5871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3525" width="0.4" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="415.25" y="3535.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="2501" width="1.4" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="168.83" y="2511.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (6 samples, 0.24%)</title><rect x="269.1" y="565" width="2.8" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="272.09" y="575.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="172.4" y="1829" width="5.6" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="175.40" y="1839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="428.2" y="2293" width="0.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="431.21" y="2303.5" ></text>
</g>
<g >
<title>`SLOT-EXISTS-P^COMMON-LISP^FN^^ (3 samples, 0.12%)</title><rect x="358.3" y="5797" width="1.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="361.27" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="234.4" y="453" width="0.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="237.36" y="463.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="172.4" y="1605" width="5.6" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="175.40" y="1615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (48 samples, 1.91%)</title><rect x="180.4" y="773" width="22.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="183.38" y="783.5" >`..</text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (16 samples, 0.64%)</title><rect x="243.3" y="2181" width="7.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="246.28" y="2191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="232.5" y="3221" width="8.0" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="235.48" y="3231.5" ></text>
</g>
<g >
<title>`llvmo::DIBuilder_O::getOrCreateTypeArray(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="670.9" y="5717" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="673.88" y="5727.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="452.6" y="5301" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="455.62" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1493" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="428.86" y="1503.5" ></text>
</g>
<g >
<title>`POSSIBLY-ADD-ITEM^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-STA (2 samples, 0.08%)</title><rect x="145.2" y="4293" width="0.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="148.18" y="4303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="4453" width="1.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="412.44" y="4463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (35 samples, 1.39%)</title><rect x="417.4" y="4757" width="16.4" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="420.41" y="4767.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="247.0" y="309" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="250.03" y="319.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (2 samples, 0.08%)</title><rect x="362.5" y="5717" width="0.9" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="365.50" y="5727.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="123.6" y="1237" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="126.59" y="1247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="417.9" y="437" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="420.88" y="447.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="52.7" y="3637" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="55.71" y="3647.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="180.4" y="549" width="2.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="183.38" y="559.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.04%)</title><rect x="563.4" y="5717" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="566.39" y="5727.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="95.9" y="3413" width="0.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="98.89" y="3423.5" ></text>
</g>
<g >
<title>`wrapped_cl__error_T_spList_sp (1 samples, 0.04%)</title><rect x="312.7" y="5477" width="0.5" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="315.74" y="5487.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.04%)</title><rect x="427.7" y="725" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="430.74" y="735.5" ></text>
</g>
<g >
<title>`llvm::recognizeBSwapOrBitReverseIdiom(llvm::Instruction*, bool, (1 samples, 0.04%)</title><rect x="773.7" y="5813" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="776.67" y="5823.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getTerminator() const (1 samples, 0.04%)</title><rect x="700.4" y="5829" width="0.5" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="703.45" y="5839.5" ></text>
</g>
<g >
<title>`llvm::FoldingSetBase::FindNodeOrInsertPos(llvm::FoldingSetNodeI (1 samples, 0.04%)</title><rect x="676.5" y="5653" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="679.51" y="5663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="416.5" y="4181" width="0.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="419.48" y="4191.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (1 samples, 0.04%)</title><rect x="309.0" y="5845" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="311.99" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="429.6" y="1845" width="1.0" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="432.62" y="1855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="2741" width="3.8" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="420.41" y="2751.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (19 samples, 0.76%)</title><rect x="259.2" y="1749" width="9.0" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="262.24" y="1759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="2261" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="434.96" y="2271.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="259.2" y="405" width="1.4" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="262.24" y="415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3413" width="1.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="411.03" y="3423.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (1 samples, 0.04%)</title><rect x="124.5" y="1509" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="127.53" y="1519.5" ></text>
</g>
<g >
<title>`llvm::getConstantDataArrayInfo(llvm::Value const*, llvm::Consta (2 samples, 0.08%)</title><rect x="874.6" y="5797" width="0.9" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="877.58" y="5807.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="23.6" y="4085" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="26.61" y="4095.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="235.3" y="437" width="4.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="238.30" y="447.5" ></text>
</g>
<g >
<title>`STORE-TMV^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="316.5" y="5093" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="319.50" y="5103.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2245" width="1.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="127.53" y="2255.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="423.5" y="2309" width="1.0" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="426.52" y="2319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="393.9" y="3269" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="396.95" y="3279.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="165.8" y="1925" width="1.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="168.83" y="1935.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="33.5" y="5349" width="0.4" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="36.47" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (19 samples, 0.76%)</title><rect x="259.2" y="997" width="9.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="262.24" y="1007.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="409.4" y="4293" width="1.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="412.44" y="4303.5" ></text>
</g>
<g >
<title>`SEGREGATE-LEXICALS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (2 samples, 0.08%)</title><rect x="578.9" y="5829" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="581.88" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="3621" width="4.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="430.27" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.0" y="4869" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="419.01" y="4879.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (19 samples, 0.76%)</title><rect x="259.2" y="629" width="9.0" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="262.24" y="639.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="279.4" y="1237" width="1.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="282.42" y="1247.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (3 samples, 0.12%)</title><rect x="259.2" y="453" width="1.4" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="262.24" y="463.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((CONSP-INSTRUCTION  (1 samples, 0.04%)</title><rect x="622.5" y="5205" width="0.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="625.53" y="5215.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.3" y="3829" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="414.31" y="3839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="276.6" y="1077" width="2.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="279.60" y="1087.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (4 samples, 0.16%)</title><rect x="748.8" y="5749" width="1.9" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="751.79" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="427.3" y="2005" width="0.9" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="430.27" y="2015.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (17 samples, 0.68%)</title><rect x="91.7" y="3925" width="7.9" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="94.67" y="3935.5" ></text>
</g>
<g >
<title>`core::lisp_getStaticClass(gctools::Header_s::Value) (1 samples, 0.04%)</title><rect x="658.7" y="5557" width="0.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="661.67" y="5567.5" ></text>
</g>
<g >
<title>`GC_alloc_large (1 samples, 0.04%)</title><rect x="376.1" y="5685" width="0.5" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="379.11" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="427.3" y="1925" width="0.9" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="430.27" y="1935.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="242.3" y="2821" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="245.34" y="2831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="3669" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="417.13" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="410.8" y="4085" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="413.84" y="4095.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="312.7" y="5637" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="315.74" y="5647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="125.9" y="3029" width="1.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="128.93" y="3039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="243.3" y="2005" width="7.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="246.28" y="2015.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="2341" width="1.0" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="426.52" y="2351.5" ></text>
</g>
<g >
<title>`PRIMITIVE-VARARGS^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="636.6" y="5333" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="639.61" y="5343.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="231.5" y="3397" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="234.54" y="3407.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="55.1" y="5477" width="0.4" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="58.06" y="5487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="401.0" y="2741" width="0.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="403.99" y="2751.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="97.8" y="3669" width="0.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="100.77" y="3679.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1:: (1 samples, 0.04%)</title><rect x="19.4" y="3381" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="22.39" y="3391.5" ></text>
</g>
<g >
<title>`MAKE-EQ-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="385.0" y="3813" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="388.03" y="3823.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2965" width="4.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="285.70" y="2975.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="243.3" y="1429" width="7.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="246.28" y="1439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="349.8" y="5365" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="352.82" y="5375.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="492.0" y="5717" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="495.04" y="5727.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Type*, llvm::Point (1 samples, 0.04%)</title><rect x="650.7" y="5253" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="653.69" y="5263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3989" width="1.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="168.36" y="3999.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="391.6" y="2837" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="394.60" y="2847.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="499.6" y="5749" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="502.55" y="5759.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (35 samples, 1.39%)</title><rect x="67.7" y="5029" width="16.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="70.73" y="5039.5" ></text>
</g>
<g >
<title>`wrapped_cl__type_of_T_sp (1 samples, 0.04%)</title><rect x="294.4" y="3829" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="297.44" y="3839.5" ></text>
</g>
<g >
<title>`IRC-LOAD^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="356.4" y="5493" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="359.40" y="5503.5" ></text>
</g>
<g >
<title>`GC_new_hblk (1 samples, 0.04%)</title><rect x="567.6" y="5637" width="0.5" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="570.61" y="5647.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.04%)</title><rect x="624.9" y="4981" width="0.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="627.88" y="4991.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="336.2" y="4389" width="1.0" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="339.21" y="4399.5" ></text>
</g>
<g >
<title>`core::core__get_sysprop(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.04%)</title><rect x="279.4" y="325" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="282.42" y="335.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="172.4" y="1669" width="5.6" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="175.40" y="1679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="244.7" y="741" width="2.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="247.69" y="751.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3877" width="3.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="420.41" y="3887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="281.8" y="2981" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="284.77" y="2991.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="2981" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="414.78" y="2991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4357" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="408.68" y="4367.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="44.7" y="5157" width="0.5" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="47.73" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4245" width="0.4" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="419.48" y="4255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="3605" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="414.31" y="3615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (25 samples, 0.99%)</title><rect x="100.6" y="3861" width="11.7" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="103.59" y="3871.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (2 samples, 0.08%)</title><rect x="287.9" y="4645" width="0.9" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="290.87" y="4655.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="395.4" y="5029" width="7.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="398.35" y="5039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="424.9" y="2949" width="1.0" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="427.92" y="2959.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="630.5" y="5141" width="0.5" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="633.51" y="5151.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="845.0" y="5797" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="848.01" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="401.9" y="3893" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="404.93" y="3903.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="418.4" y="757" width="0.4" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="421.35" y="767.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="92.6" y="3269" width="0.5" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="95.61" y="3279.5" ></text>
</g>
<g >
<title>`getValueFromCondition(llvm::Value*, llvm::Value*, bool) (2 samples, 0.08%)</title><rect x="692.9" y="5813" width="1.0" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="695.94" y="5823.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="233.4" y="2197" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="236.42" y="2207.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="287.4" y="5397" width="1.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="290.40" y="5407.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomT (1 samples, 0.04%)</title><rect x="855.8" y="5845" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="858.81" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="430.6" y="2021" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="433.56" y="2031.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="243.3" y="981" width="4.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="246.28" y="991.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="284.6" y="1333" width="2.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="287.58" y="1343.5" ></text>
</g>
<g >
<title>`0x10c916266 (1 samples, 0.04%)</title><rect x="513.2" y="5733" width="0.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="516.17" y="5743.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="282.2" y="3029" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="285.24" y="3039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.3" y="4229" width="0.5" height="15.0" fill="rgb(75,222,75)" rx="2" ry="2" />
<text  x="414.31" y="4239.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="106.7" y="3557" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="109.69" y="3567.5" ></text>
</g>
<g >
<title>`llvm::ReplaceableMetadataImpl::getIfExists(llvm::Metadata&amp;) (1 samples, 0.04%)</title><rect x="914.5" y="5813" width="0.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="917.48" y="5823.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (3 samples, 0.12%)</title><rect x="465.8" y="5765" width="1.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="468.76" y="5775.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::BasicBlock(llvm::LLVMContext&amp;, llvm::Twine co (1 samples, 0.04%)</title><rect x="671.3" y="5813" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="674.34" y="5823.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="5125" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="327.01" y="5135.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="48.5" y="5493" width="0.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="51.49" y="5503.5" ></text>
</g>
<g >
<title>0x11a477094 (22 samples, 0.88%)</title><rect x="167.7" y="2021" width="10.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="170.71" y="2031.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (4 samples, 0.16%)</title><rect x="552.1" y="5765" width="1.9" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="555.12" y="5775.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::IntegerType_O&gt; gctools::GCObjectAppro (1 samples, 0.04%)</title><rect x="662.4" y="5589" width="0.5" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="665.43" y="5599.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="233.9" y="533" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="236.89" y="543.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (2 samples, 0.08%)</title><rect x="843.1" y="5749" width="1.0" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="846.13" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="232.5" y="3317" width="8.0" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="235.48" y="3327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="4213" width="1.0" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="424.64" y="4223.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.04%)</title><rect x="251.3" y="3109" width="0.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="254.26" y="3119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3765" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="414.78" y="3775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2533" width="1.0" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="427.92" y="2543.5" ></text>
</g>
<g >
<title>0x1225c10c9 (1 samples, 0.04%)</title><rect x="257.4" y="1573" width="0.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="260.36" y="1583.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.16%)</title><rect x="413.7" y="4773" width="1.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="416.66" y="4783.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (108 samples, 4.30%)</title><rect x="180.4" y="2133" width="50.7" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="183.38" y="2143.5" >`core..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="396.8" y="4277" width="0.9" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="399.76" y="4287.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.04%)</title><rect x="697.6" y="5781" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="700.63" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="417.9" y="885" width="0.9" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="420.88" y="895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="400.0" y="4309" width="2.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="403.05" y="4319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="410.8" y="5173" width="5.7" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="413.84" y="5183.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="813.1" y="5605" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="816.09" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1493" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="430.74" y="1503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="99.2" y="3653" width="0.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="102.18" y="3663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="125.9" y="2245" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="128.93" y="2255.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (10 samples, 0.40%)</title><rect x="731.0" y="5813" width="4.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="733.95" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.9" y="3205" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="396.95" y="3215.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="421.6" y="4245" width="1.0" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="424.64" y="4255.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="334.8" y="4565" width="1.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="337.81" y="4575.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="409.0" y="2053" width="0.4" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="411.97" y="2063.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="401.9" y="3925" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="404.93" y="3935.5" ></text>
</g>
<g >
<title>`MAKE-CONDITION^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="336.7" y="4069" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="339.68" y="4079.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="395.4" y="5013" width="7.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="398.35" y="5023.5" ></text>
</g>
<g >
<title>`LITERAL-DNODE-P^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="682.1" y="5941" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="685.14" y="5951.5" ></text>
</g>
<g >
<title>`HIR-&gt;MIR^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="345.1" y="5061" width="0.5" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="348.13" y="5071.5" ></text>
</g>
<g >
<title>0x1225e30f4 (1 samples, 0.04%)</title><rect x="285.1" y="789" width="0.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="288.05" y="799.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (56 samples, 2.23%)</title><rect x="407.6" y="5397" width="26.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="410.56" y="5407.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2613" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="412.90" y="2623.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="496.3" y="5781" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="499.27" y="5791.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (4 samples, 0.16%)</title><rect x="270.0" y="165" width="1.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="273.03" y="175.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="165.8" y="1893" width="1.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="168.83" y="1903.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="790.6" y="5749" width="0.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="793.56" y="5759.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.04%)</title><rect x="698.1" y="5765" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="701.10" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="281.3" y="3461" width="5.6" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="284.30" y="3471.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="34.9" y="4149" width="0.4" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="37.88" y="4159.5" ></text>
</g>
<g >
<title>`%SIZE_T^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="640.4" y="5413" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="643.37" y="5423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (32 samples, 1.27%)</title><rect x="112.3" y="3957" width="15.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="115.32" y="3967.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (7 samples, 0.28%)</title><rect x="51.8" y="5205" width="3.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="54.77" y="5215.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (9 samples, 0.36%)</title><rect x="282.7" y="3189" width="4.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="285.70" y="3199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="2565" width="4.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="285.70" y="2575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="410.8" y="4293" width="1.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="413.84" y="4303.5" ></text>
</g>
<g >
<title>`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^ (4 samples, 0.16%)</title><rect x="328.7" y="4485" width="1.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="331.70" y="4495.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="405.2" y="5093" width="0.9" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="408.21" y="5103.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (3 samples, 0.12%)</title><rect x="408.0" y="3317" width="1.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="411.03" y="3327.5" ></text>
</g>
<g >
<title>`runImpl(llvm::Function&amp;, llvm::SimplifyQuery const&amp;, llvm::Opti (9 samples, 0.36%)</title><rect x="842.2" y="5877" width="4.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="845.20" y="5887.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="295.4" y="2213" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="298.38" y="2223.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="84.6" y="4997" width="1.0" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="87.63" y="5007.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.04%)</title><rect x="134.4" y="4341" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="137.38" y="4351.5" ></text>
</g>
<g >
<title>`EXPAND^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="122.6" y="2533" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="125.65" y="2543.5" ></text>
</g>
<g >
<title>`llvm::GVN::ValueTable::lookupOrAddCall(llvm::CallInst*) (1 samples, 0.04%)</title><rect x="803.7" y="5797" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="806.71" y="5807.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="286.9" y="4421" width="0.5" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="289.93" y="4431.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::Value const*, unsigned int&gt;* l (1 samples, 0.04%)</title><rect x="956.7" y="5829" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="959.72" y="5839.5" ></text>
</g>
<g >
<title>`core::interpreter_lookup_function_or_error(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="177.1" y="453" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="180.10" y="463.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="235.3" y="37" width="0.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="238.30" y="47.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="676.5" y="5797" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="679.51" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="429.6" y="2213" width="1.0" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="432.62" y="2223.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="92.1" y="3045" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="95.14" y="3055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3685" width="1.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="424.64" y="3695.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.04%)</title><rect x="671.8" y="5701" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="674.81" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="411.8" y="4213" width="0.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="414.78" y="4223.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="328.2" y="4437" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="331.23" y="4447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (85 samples, 3.38%)</title><rect x="87.4" y="4629" width="39.9" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="90.45" y="4639.5" >`co..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="125.9" y="2853" width="1.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="128.93" y="2863.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="379.9" y="4869" width="2.8" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="382.86" y="4879.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="296.3" y="3109" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="299.32" y="3119.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (1 samples, 0.04%)</title><rect x="240.5" y="2821" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="243.46" y="2831.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (20 samples, 0.80%)</title><rect x="112.8" y="3685" width="9.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="115.79" y="3695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="417.4" y="1941" width="3.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="420.41" y="1951.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2933" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="412.90" y="2943.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (4 samples, 0.16%)</title><rect x="151.3" y="4293" width="1.9" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="154.28" y="4303.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="165.8" y="2597" width="1.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="168.83" y="2607.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.04%)</title><rect x="329.2" y="4325" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="332.17" y="4335.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="18.0" y="3813" width="3.7" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="20.98" y="3823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (23 samples, 0.91%)</title><rect x="276.1" y="5045" width="10.8" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="279.13" y="5055.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (14 samples, 0.56%)</title><rect x="17.5" y="4149" width="6.6" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="20.51" y="4159.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="401.9" y="4117" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="404.93" y="4127.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="557.8" y="5797" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="560.76" y="5807.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="47.5" y="5381" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="50.55" y="5391.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION-IMPL^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="620.2" y="5269" width="0.5" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="623.18" y="5279.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="99.2" y="3781" width="0.4" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="102.18" y="3791.5" ></text>
</g>
<g >
<title>`llvm::Value::doRAUW(llvm::Value*, bool) (1 samples, 0.04%)</title><rect x="935.6" y="5813" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="938.60" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.04%)</title><rect x="429.6" y="1685" width="0.5" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="432.62" y="1695.5" ></text>
</g>
<g >
<title>`__dynamic_cast (2 samples, 0.08%)</title><rect x="561.5" y="5765" width="1.0" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="564.51" y="5775.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="343.7" y="4709" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="346.72" y="4719.5" ></text>
</g>
<g >
<title>`llvm::ObjectSizeOffsetVisitor::compute(llvm::Value*) (1 samples, 0.04%)</title><rect x="817.8" y="5621" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="820.79" y="5631.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (43 samples, 1.71%)</title><rect x="252.2" y="3893" width="20.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="255.20" y="3903.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="423.5" y="2133" width="1.0" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="426.52" y="2143.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="424.9" y="3125" width="1.0" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="427.92" y="3135.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="316.5" y="5189" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="319.50" y="5199.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (48 samples, 1.91%)</title><rect x="180.4" y="1237" width="22.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="183.38" y="1247.5" >`..</text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="252.2" y="3045" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="255.20" y="3055.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldGetElementPtr(llvm::Type*, llvm::Constant*, b (1 samples, 0.04%)</title><rect x="812.6" y="5573" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="815.63" y="5583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="395.4" y="4949" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="398.35" y="4959.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="413.7" y="4053" width="0.4" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="416.66" y="4063.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="4437" width="5.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="284.30" y="4447.5" ></text>
</g>
<g >
<title>`READ-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="45.2" y="5493" width="1.4" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="48.20" y="5503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="124.5" y="1685" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="127.53" y="1695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="167.7" y="885" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="170.71" y="895.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="249.8" y="997" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="252.85" y="1007.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="393.9" y="2933" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="396.95" y="2943.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="3941" width="3.8" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="420.41" y="3951.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="594.4" y="5813" width="0.4" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="597.37" y="5823.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (1 samples, 0.04%)</title><rect x="247.0" y="117" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="250.03" y="127.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="413.7" y="5013" width="2.8" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="416.66" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1093" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="428.86" y="1103.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::~ScalarEvolution() (1 samples, 0.04%)</title><rect x="927.2" y="5845" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="930.15" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="2997" width="1.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="411.03" y="3007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="417.9" y="149" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="420.88" y="159.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="676.5" y="5765" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="679.51" y="5775.5" ></text>
</g>
<g >
<title>0x11a477094 (25 samples, 0.99%)</title><rect x="100.6" y="3877" width="11.7" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="103.59" y="3887.5" ></text>
</g>
<g >
<title>`GC_clear_marks (3 samples, 0.12%)</title><rect x="435.3" y="5461" width="1.4" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="438.25" y="5471.5" ></text>
</g>
<g >
<title>`LTV/CONS^LITERAL^FN^^ (7 samples, 0.28%)</title><rect x="314.2" y="5477" width="3.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="317.15" y="5487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="167.7" y="1701" width="3.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="170.71" y="1711.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std:: (1 samples, 0.04%)</title><rect x="854.9" y="5829" width="0.4" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="857.87" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="423.0" y="2949" width="1.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="426.05" y="2959.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (20 samples, 0.80%)</title><rect x="16.6" y="4533" width="9.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="19.57" y="4543.5" ></text>
</g>
<g >
<title>0x11a477094 (4 samples, 0.16%)</title><rect x="168.2" y="1221" width="1.9" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="171.18" y="1231.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="399.6" y="4085" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="402.58" y="4095.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="410.8" y="4869" width="1.9" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="413.84" y="4879.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="1397" width="9.0" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="262.24" y="1407.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="91.7" y="3973" width="7.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="94.67" y="3983.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (4 samples, 0.16%)</title><rect x="165.4" y="3685" width="1.8" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="168.36" y="3695.5" ></text>
</g>
<g >
<title>`llvm::Module::dropAllReferences() (5 samples, 0.20%)</title><rect x="949.2" y="5909" width="2.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="952.21" y="5919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="427.3" y="1861" width="0.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="430.27" y="1871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="2229" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="428.86" y="2239.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="235.3" y="533" width="4.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="238.30" y="543.5" ></text>
</g>
<g >
<title>`CST-FROM-ELEMENT^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="313.7" y="5477" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="316.68" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="2101" width="1.0" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="426.52" y="2111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="2885" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="403.99" y="2895.5" ></text>
</g>
<g >
<title>`SIMPLE-TYPE-PREDICATE^CORE^FN^^ (2 samples, 0.08%)</title><rect x="63.5" y="4997" width="0.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="66.51" y="5007.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Pass*, llvm::Analy (1 samples, 0.04%)</title><rect x="799.0" y="5861" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="802.01" y="5871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="388.3" y="3829" width="3.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="391.31" y="3839.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (2 samples, 0.08%)</title><rect x="33.5" y="5397" width="0.9" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="36.47" y="5407.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="295.4" y="2405" width="0.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="298.38" y="2415.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="34.4" y="4549" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="37.41" y="4559.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="335.7" y="4437" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="338.74" y="4447.5" ></text>
</g>
<g >
<title>`MAKE-ENCLOSE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.08%)</title><rect x="390.7" y="2933" width="0.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="393.66" y="2943.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.04%)</title><rect x="384.1" y="4485" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="387.09" y="4495.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="34.4" y="5173" width="10.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="37.41" y="5183.5" ></text>
</g>
<g >
<title>`wrapped_cl__get_internal_run_time_ (1 samples, 0.04%)</title><rect x="462.5" y="5829" width="0.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="465.47" y="5839.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="583.6" y="5813" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="586.57" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (23 samples, 0.91%)</title><rect x="167.2" y="2565" width="10.8" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="170.24" y="2575.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="427.3" y="3429" width="4.2" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="430.27" y="3439.5" ></text>
</g>
<g >
<title>0x11a477094 (6 samples, 0.24%)</title><rect x="294.0" y="5189" width="2.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="296.97" y="5199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="2085" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="434.96" y="2095.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.04%)</title><rect x="167.2" y="2309" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="170.24" y="2319.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.04%)</title><rect x="165.8" y="917" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="168.83" y="927.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="386.0" y="3509" width="0.9" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="388.97" y="3519.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="511.3" y="5669" width="0.5" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="514.29" y="5679.5" ></text>
</g>
<g >
<title>0x1225f1094 (2 samples, 0.08%)</title><rect x="295.4" y="3045" width="0.9" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="298.38" y="3055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="2677" width="1.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="434.50" y="2687.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="257.4" y="1621" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="260.36" y="1631.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="595.8" y="5845" width="0.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="598.78" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="413.7" y="5029" width="2.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="416.66" y="5039.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="269.1" y="261" width="2.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="272.09" y="271.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'FUNCTION) T T T))^ (3 samples, 0.12%)</title><rect x="279.4" y="773" width="1.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="282.42" y="783.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="373.8" y="5781" width="0.4" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="376.76" y="5791.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::getStructValueState(llvm::Va (2 samples, 0.08%)</title><rect x="945.9" y="5877" width="1.0" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="948.93" y="5887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="125.9" y="3189" width="1.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="128.93" y="3199.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="19.9" y="3461" width="0.9" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="22.86" y="3471.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCA (1 samples, 0.04%)</title><rect x="783.1" y="5781" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="786.05" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="400.5" y="4037" width="1.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="403.52" y="4047.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (43 samples, 1.71%)</title><rect x="252.2" y="4069" width="20.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="255.20" y="4079.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="341.8" y="4357" width="0.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="344.85" y="4367.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (1 samples, 0.04%)</title><rect x="826.2" y="5621" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="829.24" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="390.2" y="3541" width="1.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="393.19" y="3551.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (7 samples, 0.28%)</title><rect x="122.6" y="3413" width="3.3" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="125.65" y="3423.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (2,028 samples, 80.67%)</title><rect x="10.0" y="6149" width="951.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="13.00" y="6159.5" >`CATCH-LAMBDA^CC-GENERATE-AST^FN^^</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="3157" width="1.4" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="127.53" y="3167.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="981" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="428.86" y="991.5" ></text>
</g>
<g >
<title>0x1225ef094 (6 samples, 0.24%)</title><rect x="294.0" y="4501" width="2.8" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="296.97" y="4511.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (4 samples, 0.16%)</title><rect x="18.0" y="3685" width="1.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="20.98" y="3695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="393.5" y="3701" width="0.9" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="396.48" y="3711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="293.5" y="5413" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="296.50" y="5423.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="268.6" y="581" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="271.62" y="591.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="166.3" y="741" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="169.30" y="751.5" ></text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (1 samples, 0.04%)</title><rect x="203.4" y="821" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="206.38" y="831.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.04%)</title><rect x="111.4" y="3557" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="114.38" y="3567.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="318.4" y="5333" width="0.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="321.38" y="5343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="243.3" y="2101" width="7.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="246.28" y="2111.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="49.4" y="5653" width="0.5" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="52.43" y="5663.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="394.4" y="4997" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="397.42" y="5007.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="130.6" y="4597" width="1.0" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="133.63" y="4607.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="417.4" y="1029" width="2.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="420.41" y="1039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="415.5" y="4885" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="418.54" y="4895.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (2 samples, 0.08%)</title><rect x="39.1" y="4181" width="0.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="42.10" y="4191.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="107.2" y="3541" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="110.16" y="3551.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="407.6" y="5061" width="3.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="410.56" y="5071.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.20%)</title><rect x="284.6" y="1637" width="2.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="287.58" y="1647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="419.3" y="805" width="0.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="422.29" y="815.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="634.7" y="5365" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="637.73" y="5375.5" ></text>
</g>
<g >
<title>`UNIVERSAL-ERROR-HANDLER^CORE^FN^^ (1 samples, 0.04%)</title><rect x="127.8" y="5589" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="130.81" y="5599.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (55 samples, 2.19%)</title><rect x="378.9" y="5717" width="25.8" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="381.93" y="5727.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="431.5" y="3573" width="1.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="434.50" y="3583.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (3 samples, 0.12%)</title><rect x="436.7" y="5429" width="1.4" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="439.66" y="5439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="125.5" y="1797" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="128.47" y="1807.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (2 samples, 0.08%)</title><rect x="943.1" y="5893" width="0.9" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="946.11" y="5903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="202.9" y="1029" width="1.4" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="205.91" y="1039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="232.0" y="2869" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="235.01" y="2879.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="249.4" y="901" width="0.4" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="252.38" y="911.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="1925" width="4.2" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="285.70" y="1935.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.9" y="3269" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="435.90" y="3279.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (55 samples, 2.19%)</title><rect x="60.7" y="5093" width="25.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="63.69" y="5103.5" >`..</text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="326.8" y="4693" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="329.83" y="4703.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (17 samples, 0.68%)</title><rect x="35.3" y="4997" width="8.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="38.35" y="5007.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (1 samples, 0.04%)</title><rect x="401.5" y="2581" width="0.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="404.46" y="2591.5" ></text>
</g>
<g >
<title>`core::cl__length(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="162.5" y="4293" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="165.55" y="4303.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="407.6" y="4901" width="3.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="410.56" y="4911.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.04%)</title><rect x="754.9" y="5765" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="757.89" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="100.6" y="3573" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="103.59" y="3583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="285.5" y="357" width="1.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="288.52" y="367.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.3" y="3653" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="414.31" y="3663.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((PRECALC-VALUE-INST (1 samples, 0.04%)</title><rect x="356.4" y="5509" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="359.40" y="5519.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$_Unwind_GetLanguageSpecificData (1 samples, 0.04%)</title><rect x="94.0" y="3493" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="97.02" y="3503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (20 samples, 0.80%)</title><rect x="34.4" y="5077" width="9.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="37.41" y="5087.5" ></text>
</g>
<g >
<title>`READ-CHAR^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="13.3" y="5573" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="16.29" y="5583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="390.7" y="3445" width="1.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="393.66" y="3455.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="259.2" y="229" width="1.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="262.24" y="239.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="88.4" y="4213" width="3.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="91.39" y="4223.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (57 samples, 2.27%)</title><rect x="204.3" y="805" width="26.8" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="207.32" y="815.5" >`..</text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="295.4" y="3461" width="1.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="298.38" y="3471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="233.9" y="1413" width="5.6" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="236.89" y="1423.5" ></text>
</g>
<g >
<title>`APPEND^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="352.2" y="5461" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="355.17" y="5471.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromAssume(llvm::Value const*, llvm::KnownBits&amp; (1 samples, 0.04%)</title><rect x="901.8" y="5717" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="904.81" y="5727.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="792.9" y="5861" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="795.91" y="5871.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.08%)</title><rect x="522.1" y="5797" width="0.9" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="525.08" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="379.9" y="4805" width="2.8" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="382.86" y="4815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="452.6" y="5557" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="455.62" y="5567.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="49.9" y="4709" width="0.9" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="52.90" y="4719.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="430.6" y="2501" width="0.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="433.56" y="2511.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (1 samples, 0.04%)</title><rect x="755.4" y="5781" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="758.36" y="5791.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (337 samples, 13.40%)</title><rect x="129.2" y="5461" width="158.2" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="132.22" y="5471.5" >`CONVERT-SPECIAL^CLE..</text>
</g>
<g >
<title>`TRANSFORM-QUASIQUOTE-ARGUMENT^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="122.6" y="2421" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="125.65" y="2431.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="123.6" y="805" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="126.59" y="815.5" ></text>
</g>
<g >
<title>`COMPLETER-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (8 samples, 0.32%)</title><rect x="63.5" y="5029" width="3.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="66.51" y="5039.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (1 samples, 0.04%)</title><rect x="336.2" y="4261" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="339.21" y="4271.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="2421" width="3.8" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="420.41" y="2431.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="4357" width="2.8" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="296.97" y="4367.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.0" y="1925" width="0.4" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="411.97" y="1935.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="158.3" y="4229" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="161.32" y="4239.5" ></text>
</g>
<g >
<title>`OPTIMIZED-FIXED-TO-MULTIPLE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^ (1 samples, 0.04%)</title><rect x="424.9" y="981" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="427.92" y="991.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="244.7" y="597" width="2.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="247.69" y="607.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (31 samples, 1.23%)</title><rect x="257.4" y="2965" width="14.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="260.36" y="2975.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="234.4" y="597" width="0.9" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="237.36" y="607.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::Value*, llvm::ValueLatticeElem (1 samples, 0.04%)</title><rect x="695.3" y="5749" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="698.28" y="5759.5" ></text>
</g>
<g >
<title>`llvm::APInt::udiv(llvm::APInt const&amp;) const (1 samples, 0.04%)</title><rect x="751.6" y="5669" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="754.61" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2597" width="1.0" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="427.92" y="2607.5" ></text>
</g>
<g >
<title>`llvm::AliasSetTracker::add(llvm::BasicBlock&amp;) (1 samples, 0.04%)</title><rect x="780.2" y="5845" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="783.24" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="104.8" y="3429" width="1.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="107.81" y="3439.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="347.9" y="5077" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="350.95" y="5087.5" ></text>
</g>
<g >
<title>0x11a477094 (5 samples, 0.20%)</title><rect x="284.6" y="1365" width="2.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="287.58" y="1375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (84 samples, 3.34%)</title><rect x="87.9" y="4437" width="39.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="90.92" y="4447.5" >`co..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="396.8" y="3877" width="0.4" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="399.76" y="3887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="17.5" y="4085" width="5.6" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="20.51" y="4095.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="294.0" y="5429" width="3.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="296.97" y="5439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (52 samples, 2.07%)</title><rect x="379.4" y="5413" width="24.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="382.40" y="5423.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="385.5" y="3797" width="1.9" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="388.50" y="3807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="391.6" y="2917" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="394.60" y="2927.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.04%)</title><rect x="301.0" y="5829" width="0.5" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="304.01" y="5839.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (23 samples, 0.91%)</title><rect x="276.1" y="5093" width="10.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="279.13" y="5103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="4133" width="3.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="420.41" y="4143.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="410.8" y="4997" width="1.9" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="413.84" y="5007.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="135.8" y="4389" width="3.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="138.79" y="4399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.04%)</title><rect x="381.7" y="4389" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="384.74" y="4399.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="585.4" y="5765" width="1.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="588.45" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="278.9" y="101" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="281.95" y="111.5" ></text>
</g>
<g >
<title>`boost::basic_format&lt;char, std::__1::char_traits&lt;char&gt;, std::__1 (1 samples, 0.04%)</title><rect x="644.1" y="5301" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="647.12" y="5311.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="168.2" y="997" width="1.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="171.18" y="1007.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (4 samples, 0.16%)</title><rect x="104.8" y="3573" width="1.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="107.81" y="3583.5" ></text>
</g>
<g >
<title>0x1225f1094 (23 samples, 0.91%)</title><rect x="167.2" y="2629" width="10.8" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="170.24" y="2639.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PARSER-CONSTRUCTOR^KEYWORD^FN^^ (2 samples, 0.08%)</title><rect x="133.0" y="4597" width="0.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="135.98" y="4607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="425.9" y="3253" width="0.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="428.86" y="3263.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="633.3" y="5253" width="0.5" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="636.33" y="5263.5" ></text>
</g>
<g >
<title>`HOIST-AST^CLASP-CLEAVIR^FN^^ (91 samples, 3.62%)</title><rect x="313.2" y="5749" width="42.7" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="316.21" y="5759.5" >`HOI..</text>
</g>
<g >
<title>`CONVERT-CALLED-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T T T T) (5 samples, 0.20%)</title><rect x="240.5" y="3029" width="2.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="243.46" y="3039.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="695.3" y="5685" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="698.28" y="5695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="202.9" y="933" width="1.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="205.91" y="943.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="537.6" y="5797" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="540.57" y="5807.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (2 samples, 0.08%)</title><rect x="294.0" y="3861" width="0.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="296.97" y="3871.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldBinaryInstruction(unsigned int, llvm::Constan (1 samples, 0.04%)</title><rect x="666.2" y="5477" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="669.18" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (19 samples, 0.76%)</title><rect x="259.2" y="485" width="9.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="262.24" y="495.5" ></text>
</g>
<g >
<title>`INSTRUCTIONS-OF-TYPE^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="329.2" y="4437" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="332.17" y="4447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="259.2" y="437" width="1.4" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="262.24" y="447.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3269" width="0.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="254.26" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (55 samples, 2.19%)</title><rect x="378.9" y="5765" width="25.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="381.93" y="5775.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="278.9" y="213" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="281.95" y="223.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="250.8" y="4197" width="1.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="253.79" y="4207.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.3" y="949" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="430.27" y="959.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="50.8" y="4645" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="53.84" y="4655.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="424.9" y="1749" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="427.92" y="1759.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (6 samples, 0.24%)</title><rect x="716.9" y="5861" width="2.8" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="719.87" y="5871.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (43 samples, 1.71%)</title><rect x="252.2" y="4117" width="20.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="255.20" y="4127.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="414.1" y="4149" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="417.13" y="4159.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="400.0" y="4837" width="2.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="403.05" y="4847.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="289.7" y="5477" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="292.75" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="314.6" y="4997" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="317.62" y="5007.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="632.4" y="5189" width="0.5" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="635.39" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="125.9" y="2357" width="1.0" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="128.93" y="2367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="2517" width="0.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="428.86" y="2527.5" ></text>
</g>
<g >
<title>`unw_init_local (1 samples, 0.04%)</title><rect x="98.2" y="3813" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="101.24" y="3823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.3" y="1637" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="430.27" y="1647.5" ></text>
</g>
<g >
<title>`core::SimpleCharacterString_O::get_std_string() const (1 samples, 0.04%)</title><rect x="303.4" y="5829" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="306.36" y="5839.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (1 samples, 0.04%)</title><rect x="646.0" y="5317" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="649.00" y="5327.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="4389" width="1.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="411.03" y="4399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="427.3" y="2325" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="430.27" y="2335.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="430.6" y="2229" width="0.9" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="433.56" y="2239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="2373" width="4.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="285.70" y="2383.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="432.0" y="1285" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="434.96" y="1295.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="315.6" y="5221" width="0.4" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="318.56" y="5231.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="1509" width="4.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="279.60" y="1519.5" ></text>
</g>
<g >
<title>`IRC-TMV-PRIMARY^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="649.3" y="5381" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="652.28" y="5391.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="356.4" y="5717" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="359.40" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="100.6" y="3557" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="103.59" y="3567.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="2933" width="1.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="411.03" y="2943.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="609.9" y="5381" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="612.86" y="5391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (54 samples, 2.15%)</title><rect x="379.4" y="5653" width="25.3" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="382.40" y="5663.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="338.6" y="4357" width="0.4" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="341.56" y="4367.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="455.0" y="5685" width="0.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="457.96" y="5695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="122.6" y="2997" width="1.9" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="125.65" y="3007.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.04%)</title><rect x="960.0" y="5893" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="963.01" y="5903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="393.5" y="4181" width="0.9" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="396.48" y="4191.5" ></text>
</g>
<g >
<title>`calloc (1 samples, 0.04%)</title><rect x="350.8" y="5205" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="353.76" y="5215.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (3 samples, 0.12%)</title><rect x="808.4" y="5653" width="1.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="811.40" y="5663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="417.9" y="613" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="420.88" y="623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="393.5" y="4309" width="0.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="396.48" y="4319.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="341.8" y="4549" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="344.85" y="4559.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (4 samples, 0.16%)</title><rect x="245.2" y="501" width="1.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="248.16" y="511.5" ></text>
</g>
<g >
<title>`APPEND^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="494.4" y="5797" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="497.39" y="5807.5" ></text>
</g>
<g >
<title>`STORE-TMV^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="647.4" y="5381" width="0.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="650.41" y="5391.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (1 samples, 0.04%)</title><rect x="783.1" y="5829" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="786.05" y="5839.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="321.2" y="5301" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="324.19" y="5311.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (86 samples, 3.42%)</title><rect x="87.0" y="4901" width="40.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="89.98" y="4911.5" >`SE..</text>
</g>
<g >
<title>`ThreadCmpOverPHI(llvm::CmpInst::Predicate, llvm::Value*, llvm:: (1 samples, 0.04%)</title><rect x="842.7" y="5797" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="845.67" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="27.4" y="4789" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="30.37" y="4799.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (24 samples, 0.95%)</title><rect x="16.6" y="4885" width="11.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="19.57" y="4895.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::reference_raw_(core::Symbol_O*, gcto (1 samples, 0.04%)</title><rect x="348.9" y="5157" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="351.89" y="5167.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="331.5" y="4629" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="334.52" y="4639.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="166.3" y="917" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="169.30" y="927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="4277" width="3.8" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="420.41" y="4287.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="501.0" y="5781" width="0.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="503.96" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="417.4" y="1989" width="3.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="420.41" y="1999.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="391.6" y="2885" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="394.60" y="2895.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'CLEAVIR-PRIMOP:LET (9 samples, 0.36%)</title><rect x="276.6" y="1557" width="4.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="279.60" y="1567.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="391.6" y="2293" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="394.60" y="2303.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (5 samples, 0.20%)</title><rect x="593.4" y="5845" width="2.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="596.43" y="5855.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="790.1" y="5781" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="793.10" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="381.7" y="4565" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="384.74" y="4575.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (2 samples, 0.08%)</title><rect x="92.6" y="3413" width="0.9" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="95.61" y="3423.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (136 samples, 5.41%)</title><rect x="167.2" y="2853" width="63.9" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="170.24" y="2863.5" >`core::..</text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (7 samples, 0.28%)</title><rect x="88.4" y="4085" width="3.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="91.39" y="4095.5" ></text>
</g>
<g >
<title>0x115792116 (2,028 samples, 80.67%)</title><rect x="10.0" y="6085" width="951.9" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="13.00" y="6095.5" >0x115792116</text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="327.3" y="4485" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="330.30" y="4495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="1957" width="1.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="426.52" y="1967.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="785.4" y="5701" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="788.40" y="5711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="409.4" y="3781" width="1.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="412.44" y="3791.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="643.7" y="5317" width="0.4" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="646.65" y="5327.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="240.5" y="2933" width="0.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="243.46" y="2943.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="136.7" y="4293" width="1.9" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="139.73" y="4303.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="42.9" y="4757" width="0.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="45.86" y="4767.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="405.7" y="4133" width="0.4" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="408.68" y="4143.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="424.0" y="1653" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="426.99" y="1663.5" ></text>
</g>
<g >
<title>`CST-FROM-ELEMENT^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="313.2" y="5493" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="316.21" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="1717" width="1.0" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="432.62" y="1727.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="329.2" y="4405" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="332.17" y="4415.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="294.0" y="3957" width="0.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="296.97" y="3967.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="202.9" y="1141" width="1.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="205.91" y="1151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (16 samples, 0.64%)</title><rect x="395.4" y="4997" width="7.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="398.35" y="5007.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.04%)</title><rect x="789.2" y="5717" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="792.16" y="5727.5" ></text>
</g>
<g >
<title>`EXPAND-MACRO^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="128.3" y="5701" width="0.5" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="131.28" y="5711.5" ></text>
</g>
<g >
<title>`GET-OR-DECLARE-FUNCTION-OR-ERROR^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="350.3" y="5317" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="353.29" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (16 samples, 0.64%)</title><rect x="243.3" y="1749" width="7.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="246.28" y="1759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="88.4" y="4261" width="3.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="91.39" y="4271.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'CLEAVIR-PRIMOP:FUN (4 samples, 0.16%)</title><rect x="168.2" y="1061" width="1.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="171.18" y="1071.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (4 samples, 0.16%)</title><rect x="165.4" y="2821" width="1.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="168.36" y="2831.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (1 samples, 0.04%)</title><rect x="962.4" y="6341" width="0.4" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="965.35" y="6351.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="235.3" y="421" width="4.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="238.30" y="431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="1557" width="0.4" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="434.96" y="1567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="379.4" y="5093" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="382.40" y="5103.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4789" width="2.9" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="55.24" y="4799.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="295.8" y="1861" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="298.85" y="1871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="415.5" y="4325" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="418.54" y="4335.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (13 samples, 0.52%)</title><rect x="388.3" y="4453" width="6.1" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="391.31" y="4463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="3285" width="1.0" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="427.92" y="3295.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="405.2" y="5509" width="0.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="408.21" y="5519.5" ></text>
</g>
<g >
<title>`gctools::GCVector_moveable&lt;core::DynamicBinding&gt;::GCVector_move (1 samples, 0.04%)</title><rect x="348.4" y="5173" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="351.42" y="5183.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (31 samples, 1.23%)</title><rect x="257.4" y="2693" width="14.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="260.36" y="2703.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="725.3" y="5813" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="728.32" y="5823.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.04%)</title><rect x="299.1" y="5733" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="302.13" y="5743.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.04%)</title><rect x="697.2" y="5765" width="0.4" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="700.16" y="5775.5" ></text>
</g>
<g >
<title>`GC_finish_collection (3 samples, 0.12%)</title><rect x="504.2" y="5557" width="1.5" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="507.25" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.9" y="3285" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="396.95" y="3295.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="239.5" y="2933" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="242.52" y="2943.5" ></text>
</g>
<g >
<title>`operator delete(void*) (1 samples, 0.04%)</title><rect x="734.2" y="5781" width="0.5" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="737.24" y="5791.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.04%)</title><rect x="167.7" y="805" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="170.71" y="815.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.04%)</title><rect x="409.9" y="1797" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="412.90" y="1807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="233.9" y="165" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="236.89" y="175.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="425.4" y="1381" width="0.5" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="428.39" y="1391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="396.3" y="4629" width="3.7" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="399.29" y="4639.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (8 samples, 0.32%)</title><rect x="417.4" y="4213" width="3.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="420.41" y="4223.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.04%)</title><rect x="746.4" y="5685" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="749.44" y="5695.5" ></text>
</g>
<g >
<title>`GC_release_mark_lock (1 samples, 0.04%)</title><rect x="365.8" y="5685" width="0.5" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="368.78" y="5695.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::Constant_O&gt; gctools::GCObjectAppropri (1 samples, 0.04%)</title><rect x="676.0" y="5781" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="679.04" y="5791.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (1 samples, 0.04%)</title><rect x="777.4" y="5781" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="780.42" y="5791.5" ></text>
</g>
<g >
<title>`CONVERT-CALLED-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T T T T) (1 samples, 0.04%)</title><rect x="295.8" y="2341" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="298.85" y="2351.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="25.5" y="4293" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="28.49" y="4303.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (43 samples, 1.71%)</title><rect x="252.2" y="4181" width="20.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="255.20" y="4191.5" ></text>
</g>
<g >
<title>`MAKE-EXPRESSION-RESULT^ECLECTOR.PARSE-RESULT^((CST-CLIENT T T T (1 samples, 0.04%)</title><rect x="56.5" y="5749" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="59.47" y="5759.5" ></text>
</g>
<g >
<title>`JIT-FUNCTION-NAME^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="331.1" y="4453" width="0.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="334.05" y="4463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="452.6" y="5589" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="455.62" y="5599.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="312.7" y="5557" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="315.74" y="5567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="125.9" y="2117" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="128.93" y="2127.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::removeNotPreservedAnalysis(llvm::Pass*) (6 samples, 0.24%)</title><rect x="796.7" y="5893" width="2.8" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="799.67" y="5903.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (2 samples, 0.08%)</title><rect x="67.7" y="4981" width="1.0" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="70.73" y="4991.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="180.4" y="277" width="2.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="183.38" y="287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="427.3" y="2037" width="0.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="430.27" y="2047.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="1973" width="1.4" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="168.83" y="1983.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="254.1" y="3365" width="1.9" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="257.07" y="3375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="400.0" y="4421" width="2.4" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="403.05" y="4431.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3669" width="1.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="168.36" y="3679.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.04%)</title><rect x="399.1" y="3573" width="0.5" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="402.11" y="3583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3813" width="0.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="254.26" y="3823.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (34 samples, 1.35%)</title><rect x="472.8" y="5621" width="16.0" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="475.80" y="5631.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="308.1" y="5829" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="311.05" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="235.3" y="293" width="4.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="238.30" y="303.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.08%)</title><rect x="171.5" y="1813" width="0.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="174.46" y="1823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="297.3" y="5365" width="0.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="300.26" y="5375.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getValueInBlock(llvm: (2 samples, 0.08%)</title><rect x="691.1" y="5845" width="0.9" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="694.06" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.08%)</title><rect x="393.5" y="4213" width="0.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="396.48" y="4223.5" ></text>
</g>
<g >
<title>`llvm::CallInst::onlyReadsMemory() const (1 samples, 0.04%)</title><rect x="917.8" y="5813" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="920.76" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (21 samples, 0.84%)</title><rect x="16.6" y="4629" width="9.8" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="19.57" y="4639.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="379.4" y="5029" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="382.40" y="5039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3701" width="1.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="424.64" y="3711.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="646.0" y="5349" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="649.00" y="5359.5" ></text>
</g>
<g >
<title>`wrapped_cl__get_internal_run_time_ (1 samples, 0.04%)</title><rect x="301.5" y="5861" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="304.48" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="423.0" y="3829" width="4.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="426.05" y="3839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.4" y="3317" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="389.44" y="3327.5" ></text>
</g>
<g >
<title>`GC_mark_local (28 samples, 1.11%)</title><rect x="472.8" y="5573" width="13.1" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="475.80" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTI (1 samples, 0.04%)</title><rect x="231.1" y="3413" width="0.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="234.07" y="3423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="410.8" y="5061" width="5.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="413.84" y="5071.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (136 samples, 5.41%)</title><rect x="167.2" y="2693" width="63.9" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="170.24" y="2703.5" >`CONVER..</text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (10 samples, 0.40%)</title><rect x="313.2" y="5589" width="4.7" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="316.21" y="5599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.9" y="2229" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="412.90" y="2239.5" ></text>
</g>
<g >
<title>`wrapped_cl__append_VaList_sp (1 samples, 0.04%)</title><rect x="122.6" y="2357" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="125.65" y="2367.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="416.5" y="4485" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="419.48" y="4495.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2661" width="4.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="285.70" y="2671.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.08%)</title><rect x="554.5" y="5781" width="0.9" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="557.47" y="5791.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (37 samples, 1.47%)</title><rect x="435.3" y="5637" width="17.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="438.25" y="5647.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (17 samples, 0.68%)</title><rect x="35.3" y="5013" width="8.0" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="38.35" y="5023.5" ></text>
</g>
<g >
<title>`llvm::ObjectSizeOffsetVisitor::visitGlobalVariable(llvm::Global (1 samples, 0.04%)</title><rect x="805.1" y="5637" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="808.12" y="5647.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="61.2" y="4981" width="0.4" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="64.16" y="4991.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="287.4" y="5109" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="290.40" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="3445" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="417.13" y="3455.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="170.5" y="1541" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="173.53" y="1551.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorTemplateBase&lt;llvm::BasicBlock*, true&gt;::push_ba (1 samples, 0.04%)</title><rect x="786.3" y="5877" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="789.34" y="5887.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="278.9" y="469" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="281.95" y="479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1765" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="427.92" y="1775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="17.5" y="4053" width="5.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="20.51" y="4063.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (2 samples, 0.08%)</title><rect x="92.6" y="3349" width="0.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="95.61" y="3359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="431.5" y="2965" width="1.4" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="434.50" y="2975.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="3093" width="1.4" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="411.03" y="3103.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="257.4" y="1589" width="0.4" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="260.36" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="2373" width="1.0" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="432.62" y="2383.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (3 samples, 0.12%)</title><rect x="123.1" y="2421" width="1.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="126.12" y="2431.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonEqual(llvm::Value const*, llvm::Value const*, l (1 samples, 0.04%)</title><rect x="844.1" y="5829" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="847.07" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="276.6" y="1189" width="2.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="279.60" y="1199.5" ></text>
</g>
<g >
<title>0x1225ef094 (9 samples, 0.36%)</title><rect x="235.3" y="501" width="4.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="238.30" y="511.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (8 samples, 0.32%)</title><rect x="751.1" y="5781" width="3.8" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="754.14" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="407.6" y="4997" width="3.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="410.56" y="5007.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="52.2" y="4133" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="55.24" y="4143.5" ></text>
</g>
<g >
<title>`core::cl__write_sequence(gctools::smart_ptr&lt;core::T_O&gt;, gctools (1 samples, 0.04%)</title><rect x="26.4" y="4549" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="29.43" y="4559.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (37 samples, 1.47%)</title><rect x="435.3" y="5573" width="17.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="438.25" y="5583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="232.0" y="3157" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="235.01" y="3167.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="166.3" y="693" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="169.30" y="703.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="419.3" y="597" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="422.29" y="607.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (11 samples, 0.44%)</title><rect x="457.3" y="5845" width="5.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="460.31" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (40 samples, 1.59%)</title><rect x="232.0" y="3621" width="18.8" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="235.01" y="3631.5" ></text>
</g>
<g >
<title>`MAKE-ENCLOSE-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="407.1" y="5573" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="410.09" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="419.3" y="725" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="422.29" y="735.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="33.9" y="5333" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="36.94" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3397" width="1.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="168.36" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="401.9" y="3365" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="404.93" y="3375.5" ></text>
</g>
<g >
<title>`llvm::removeUnreachableBlocks(llvm::Function&amp;, llvm::LazyValueI (2 samples, 0.08%)</title><rect x="837.5" y="5877" width="0.9" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="840.50" y="5887.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.04%)</title><rect x="563.4" y="5637" width="0.5" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="566.39" y="5647.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="660.5" y="5461" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="663.55" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="412.3" y="3125" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="415.25" y="3135.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="683.1" y="5909" width="0.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="686.08" y="5919.5" ></text>
</g>
<g >
<title>`llvm::Twine::toStringRef(llvm::SmallVectorImpl&lt;char&gt;&amp;) const (1 samples, 0.04%)</title><rect x="769.4" y="5781" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="772.44" y="5791.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="275.7" y="5093" width="0.4" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="278.66" y="5103.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="241.9" y="2821" width="0.4" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="244.87" y="2831.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.3" y="1541" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="430.27" y="1551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="17.5" y="4389" width="8.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="20.51" y="4399.5" ></text>
</g>
<g >
<title>`llvm::Value::getPointerAlignment(llvm::DataLayout const&amp;) const (1 samples, 0.04%)</title><rect x="755.4" y="5749" width="0.4" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="758.36" y="5759.5" ></text>
</g>
<g >
<title>`szone_realloc (1 samples, 0.04%)</title><rect x="719.7" y="5781" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="722.69" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="276.6" y="1061" width="2.8" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="279.60" y="1071.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="19.9" y="3445" width="0.9" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="22.86" y="3455.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="18.0" y="3733" width="3.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="20.98" y="3743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="401.9" y="3605" width="0.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="404.93" y="3615.5" ></text>
</g>
<g >
<title>`llvm::DILocation* llvm::MDNode::storeImpl&lt;llvm::DILocation, llv (1 samples, 0.04%)</title><rect x="624.9" y="5061" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="627.88" y="5071.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="287.4" y="4677" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="290.40" y="4687.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.04%)</title><rect x="249.4" y="581" width="0.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="252.38" y="591.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="666.2" y="5605" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="669.18" y="5615.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="609.9" y="5349" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="612.86" y="5359.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="260.6" y="197" width="7.6" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="263.64" y="207.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="254.5" y="3077" width="1.0" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="257.54" y="3087.5" ></text>
</g>
<g >
<title>`MAKE-FIXED-TO-MULTIPLE-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="424.9" y="997" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="427.92" y="1007.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="86.5" y="5029" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="89.51" y="5039.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (48 samples, 1.91%)</title><rect x="180.4" y="997" width="22.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="183.38" y="1007.5" >`..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'BLOCK) T T T))^MET (17 samples, 0.68%)</title><rect x="242.8" y="2853" width="8.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="245.81" y="2863.5" ></text>
</g>
<g >
<title>`PROCESS-LTV^CLASP-CLEAVIR-AST^FN^^ (90 samples, 3.58%)</title><rect x="313.2" y="5717" width="42.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="316.21" y="5727.5" >`PR..</text>
</g>
<g >
<title>`core::interpreter_lookup_function_or_error(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="244.7" y="421" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="247.69" y="431.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="34.9" y="4037" width="0.4" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="37.88" y="4047.5" ></text>
</g>
<g >
<title>`llvmo::convert_sequence_types_to_vector(gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="660.5" y="5541" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="663.55" y="5551.5" ></text>
</g>
<g >
<title>`llvm::Module::getNamedValue(llvm::StringRef) const (1 samples, 0.04%)</title><rect x="354.5" y="5397" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="357.52" y="5407.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::BasicBlock*, llvm::SmallPtrSet&lt;llvm::Ba (1 samples, 0.04%)</title><rect x="785.4" y="5829" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="788.40" y="5839.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="287.4" y="5173" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="290.40" y="5183.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.04%)</title><rect x="888.7" y="5637" width="0.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="891.66" y="5647.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldGetElementPtr(llvm::Type*, llvm::Constant*, b (2 samples, 0.08%)</title><rect x="649.8" y="5285" width="0.9" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="652.75" y="5295.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (2 samples, 0.08%)</title><rect x="864.7" y="5813" width="1.0" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="867.73" y="5823.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="167.7" y="1365" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="170.71" y="1375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="3141" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="403.99" y="3151.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (23 samples, 0.91%)</title><rect x="276.1" y="4837" width="10.8" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="279.13" y="4847.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (1 samples, 0.04%)</title><rect x="631.9" y="5189" width="0.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="634.92" y="5199.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="429.6" y="1813" width="1.0" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="432.62" y="1823.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="324.5" y="4965" width="0.4" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="327.48" y="4975.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="232.0" y="3317" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="235.01" y="3327.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="597" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="171.18" y="607.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="429.1" y="2277" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="432.15" y="2287.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="295.4" y="2325" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="298.38" y="2335.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.04%)</title><rect x="313.2" y="5381" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="316.21" y="5391.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="172.4" y="1237" width="5.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="175.40" y="1247.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.04%)</title><rect x="425.4" y="1365" width="0.5" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="428.39" y="1375.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorTemplateBase&lt;llvm::Pass*, true&gt;::push_back(llv (1 samples, 0.04%)</title><rect x="685.4" y="5845" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="688.43" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="249.4" y="661" width="0.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="252.38" y="671.5" ></text>
</g>
<g >
<title>`ltvc_toplevel_funcall (2,028 samples, 80.67%)</title><rect x="10.0" y="6229" width="951.9" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="13.00" y="6239.5" >`ltvc_toplevel_funcall</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="279.4" y="1173" width="1.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="282.42" y="1183.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (1 samples, 0.04%)</title><rect x="747.9" y="5765" width="0.4" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="750.85" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="251.3" y="4053" width="0.9" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="254.26" y="4063.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (31 samples, 1.23%)</title><rect x="257.4" y="2709" width="14.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="260.36" y="2719.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="240.0" y="2549" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="242.99" y="2559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="285.5" y="917" width="1.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="288.52" y="927.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (13 samples, 0.52%)</title><rect x="427.3" y="3829" width="6.1" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="430.27" y="3839.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="232.5" y="2453" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="235.48" y="2463.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="21.7" y="3909" width="1.0" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="24.73" y="3919.5" ></text>
</g>
<g >
<title>`MAKE-TEMPS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="343.7" y="4757" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="346.72" y="4767.5" ></text>
</g>
<g >
<title>`OF-CLASS-P^CORE^FN^^ (1 samples, 0.04%)</title><rect x="244.2" y="421" width="0.5" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="247.22" y="431.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (17 samples, 0.68%)</title><rect x="242.8" y="2725" width="8.0" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="245.81" y="2735.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="396.8" y="4181" width="0.9" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="399.76" y="4191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5701" width="0.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="408.21" y="5711.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="246.1" y="453" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="249.09" y="463.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (3 samples, 0.12%)</title><rect x="856.3" y="5829" width="1.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="859.28" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="250.8" y="4165" width="1.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="253.79" y="4175.5" ></text>
</g>
<g >
<title>0x12254f0c9 (1 samples, 0.04%)</title><rect x="182.7" y="213" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="185.73" y="223.5" ></text>
</g>
<g >
<title>`CST-FROM-ELEMENT^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.9" y="5077" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="327.95" y="5087.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="432.0" y="1957" width="0.4" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="434.96" y="1967.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (3 samples, 0.12%)</title><rect x="504.2" y="5541" width="1.5" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="507.25" y="5551.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="279.4" y="421" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="282.42" y="431.5" ></text>
</g>
<g >
<title>`BIT-VECTOR-P^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="674.2" y="5733" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="677.16" y="5743.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (1 samples, 0.04%)</title><rect x="505.7" y="5493" width="0.4" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="508.66" y="5503.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="341.8" y="4597" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="344.85" y="4607.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="423.0" y="2053" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="426.05" y="2063.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="257.4" y="1813" width="1.8" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="260.36" y="1823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.5" y="4677" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="418.54" y="4687.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="396.8" y="3797" width="0.4" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="399.76" y="3807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="269.1" y="597" width="2.8" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="272.09" y="607.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="165.8" y="1877" width="1.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="168.83" y="1887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="384.6" y="4197" width="3.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="387.56" y="4207.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1:: (1 samples, 0.04%)</title><rect x="684.5" y="5861" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="687.49" y="5871.5" ></text>
</g>
<g >
<title>`ASSERT-CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="382.7" y="4821" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="385.68" y="4831.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="34.4" y="4789" width="0.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="37.41" y="4799.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="127.3" y="5285" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="130.34" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1061" width="0.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="430.27" y="1071.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="232.0" y="2901" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="235.01" y="2911.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.28%)</title><rect x="268.6" y="741" width="3.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="271.62" y="751.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="284.6" y="1413" width="2.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="287.58" y="1423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="427.3" y="3333" width="4.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="430.27" y="3343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.0" y="1781" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="434.96" y="1791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="312.7" y="5733" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="315.74" y="5743.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'BLOCK) T T T))^MET (2 samples, 0.08%)</title><rect x="251.3" y="3429" width="0.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="254.26" y="3439.5" ></text>
</g>
<g >
<title>`GC_freehblk (1 samples, 0.04%)</title><rect x="437.1" y="5413" width="0.5" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="440.13" y="5423.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="276.6" y="3797" width="4.7" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="279.60" y="3807.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (19 samples, 0.76%)</title><rect x="259.2" y="581" width="9.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="262.24" y="591.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="431.5" y="2469" width="1.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="434.50" y="2479.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="568.1" y="5781" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="571.08" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="285.5" y="981" width="1.4" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="288.52" y="991.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="231.5" y="3333" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="234.54" y="3343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="396.8" y="4197" width="0.9" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="399.76" y="4207.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (233 samples, 9.27%)</title><rect x="163.5" y="4597" width="109.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="166.48" y="4607.5" >`core::clos__..</text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="356.4" y="5605" width="0.5" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="359.40" y="5615.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="455.0" y="5781" width="0.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="457.96" y="5791.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;void const*, llvm:: (1 samples, 0.04%)</title><rect x="713.6" y="5845" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="716.59" y="5855.5" ></text>
</g>
<g >
<title>`STD-CLASS-ACCESSORS.READER.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="307.1" y="5765" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="310.11" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="243.7" y="485" width="1.0" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="246.75" y="495.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="381.7" y="4725" width="1.0" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="384.74" y="4735.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (6 samples, 0.24%)</title><rect x="294.0" y="4837" width="2.8" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="296.97" y="4847.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="294.0" y="4581" width="2.8" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="296.97" y="4591.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="255.0" y="2917" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="258.01" y="2927.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="636.6" y="5349" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="639.61" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (3 samples, 0.12%)</title><rect x="408.0" y="3925" width="1.4" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="411.03" y="3935.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="178.0" y="2309" width="2.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="181.04" y="2319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (43 samples, 1.71%)</title><rect x="252.2" y="3765" width="20.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="255.20" y="3775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (510 samples, 20.29%)</title><rect x="59.8" y="5733" width="239.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="62.75" y="5743.5" >`core::clos__interpret_dtree_pr..</text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="684.0" y="5909" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="687.02" y="5919.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="409.0" y="1893" width="0.4" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="411.97" y="1903.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (4 samples, 0.16%)</title><rect x="347.0" y="5221" width="1.9" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="350.01" y="5231.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="398.2" y="3605" width="0.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="401.17" y="3615.5" ></text>
</g>
<g >
<title>0x1225e5094 (337 samples, 13.40%)</title><rect x="129.2" y="5477" width="158.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="132.22" y="5487.5" >0x1225e5094</text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (7 samples, 0.28%)</title><rect x="51.8" y="5109" width="3.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="54.77" y="5119.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (3 samples, 0.12%)</title><rect x="513.2" y="5813" width="1.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="516.17" y="5823.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.08%)</title><rect x="655.9" y="5477" width="0.9" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="658.86" y="5487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="278.9" y="53" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="281.95" y="63.5" ></text>
</g>
<g >
<title>`DBG-CREATE-PARAMETER-VARIABLE^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="654.4" y="5509" width="1.0" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="657.45" y="5519.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="405.2" y="5733" width="0.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="408.21" y="5743.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="465.3" y="5813" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="468.29" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="126.4" y="2261" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="129.40" y="2271.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="386.4" y="2949" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="389.44" y="2959.5" ></text>
</g>
<g >
<title>`__gmpz_init_set_si (1 samples, 0.04%)</title><rect x="301.5" y="5829" width="0.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="304.48" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="1989" width="0.4" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="411.97" y="1999.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (23 samples, 0.91%)</title><rect x="257.4" y="1957" width="10.8" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="260.36" y="1967.5" ></text>
</g>
<g >
<title>`llvm::SparseSolver&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anon (1 samples, 0.04%)</title><rect x="937.5" y="5925" width="0.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="940.48" y="5935.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="247.5" y="181" width="1.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="250.50" y="191.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="423.5" y="2469" width="1.0" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="426.52" y="2479.5" ></text>
</g>
<g >
<title>`ALLOCA^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="320.7" y="5285" width="0.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="323.72" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1621" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="423.70" y="1631.5" ></text>
</g>
<g >
<title>`VALID-KEYWORDS-FROM-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.7" y="741" width="0.5" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="430.74" y="751.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="281.3" y="3381" width="5.6" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="284.30" y="3391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="385.5" y="3749" width="1.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="388.50" y="3759.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="279.4" y="917" width="1.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="282.42" y="927.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceWrapperPass::releaseMemory() (2 samples, 0.08%)</title><rect x="794.3" y="5861" width="1.0" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="797.32" y="5871.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.08%)</title><rect x="243.7" y="549" width="1.0" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="246.75" y="559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="384.6" y="4181" width="3.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="387.56" y="4191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2341" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="412.90" y="2351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="430.6" y="2373" width="0.9" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="433.56" y="2383.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="422.1" y="2917" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="425.11" y="2927.5" ></text>
</g>
<g >
<title>`NEW-DATUM-ALLOCA^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="617.8" y="5381" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="620.84" y="5391.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.04%)</title><rect x="25.5" y="4389" width="0.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="28.49" y="4399.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="233.9" y="981" width="5.6" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="236.89" y="991.5" ></text>
</g>
<g >
<title>`llvm::DemandedBits::performAnalysis() (1 samples, 0.04%)</title><rect x="707.5" y="5861" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="710.49" y="5871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="171.5" y="1477" width="0.4" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="174.46" y="1487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="417.9" y="661" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="420.88" y="671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1845" width="2.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="420.41" y="1855.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="301.0" y="5861" width="0.5" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="304.01" y="5871.5" ></text>
</g>
<g >
<title>`FUNCTION-DESCRIPTION-NAME^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="671.8" y="5797" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="674.81" y="5807.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (4 samples, 0.16%)</title><rect x="334.3" y="4581" width="1.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="337.34" y="4591.5" ></text>
</g>
<g >
<title>`llvm::ValueEnumerator::EnumerateValue(llvm::Value const*) (2 samples, 0.08%)</title><rect x="956.3" y="5861" width="0.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="959.25" y="5871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="3765" width="4.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="430.27" y="3775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="397.7" y="3925" width="1.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="400.70" y="3935.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="399.6" y="4069" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="402.58" y="4079.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="1221" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="428.86" y="1231.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="282.7" y="1301" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="285.70" y="1311.5" ></text>
</g>
<g >
<title>`HOIST-LOAD-TIME-VALUE^CLASP-CLEAVIR-AST^FN^^ (143 samples, 5.69%)</title><rect x="302.4" y="5877" width="67.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="305.42" y="5887.5" >`HOIST-..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="390.2" y="3605" width="1.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="393.19" y="3615.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (48 samples, 1.91%)</title><rect x="180.4" y="1061" width="22.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="183.38" y="1071.5" >`..</text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="324.5" y="4677" width="0.4" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="327.48" y="4687.5" ></text>
</g>
<g >
<title>`core::Cons_O::length() const (1 samples, 0.04%)</title><rect x="523.0" y="5765" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="526.02" y="5775.5" ></text>
</g>
<g >
<title>`void boost::io::detail::distribute&lt;char, std::__1::char_traits&lt; (1 samples, 0.04%)</title><rect x="331.1" y="4373" width="0.4" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="334.05" y="4383.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="243.3" y="773" width="1.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="246.28" y="783.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (95 samples, 3.78%)</title><rect x="312.7" y="5813" width="44.6" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="315.74" y="5823.5" >`LTV..</text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="38.2" y="4325" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="41.16" y="4335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="382.2" y="4229" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="385.21" y="4239.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (15 samples, 0.60%)</title><rect x="232.5" y="2917" width="7.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="235.48" y="2927.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="388.3" y="4325" width="5.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="391.31" y="4335.5" ></text>
</g>
<g >
<title>`core::core__reallocate_instance(gctools::smart_ptr&lt;core::Instan (2 samples, 0.08%)</title><rect x="368.6" y="5781" width="0.9" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="371.60" y="5791.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (3 samples, 0.12%)</title><rect x="649.8" y="5317" width="1.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="652.75" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1333" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="423.70" y="1343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="125.9" y="2805" width="1.0" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="128.93" y="2815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="2437" width="0.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="428.86" y="2447.5" ></text>
</g>
<g >
<title>`core::core__coerce_to_file_pathname(gctools::smart_ptr&lt;core::T_ (1 samples, 0.04%)</title><rect x="951.6" y="5941" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="954.56" y="5951.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="125.0" y="1893" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="128.00" y="1903.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.6" y="2501" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="424.64" y="2511.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="405.7" y="3877" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="408.68" y="3887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="415.5" y="4821" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="418.54" y="4831.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="393.5" y="3829" width="0.9" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="396.48" y="3839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="1621" width="4.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="279.60" y="1631.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="27.8" y="4885" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="30.84" y="4895.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (1 samples, 0.04%)</title><rect x="756.8" y="5797" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="759.77" y="5807.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="260.2" y="181" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="263.18" y="191.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="508.9" y="5717" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="511.94" y="5727.5" ></text>
</g>
<g >
<title>`wrapped_cl__type_of_T_sp (1 samples, 0.04%)</title><rect x="114.7" y="3573" width="0.4" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="117.67" y="3583.5" ></text>
</g>
<g >
<title>`wrapped_core__vaslist_length_VaList_sp (1 samples, 0.04%)</title><rect x="296.3" y="3029" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="299.32" y="3039.5" ></text>
</g>
<g >
<title>`ERROR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="312.7" y="5493" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="315.74" y="5503.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (1 samples, 0.04%)</title><rect x="294.4" y="3781" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="297.44" y="3791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="401.9" y="3173" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="404.93" y="3183.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="1925" width="4.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="279.60" y="1935.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Type*, llvm::Point (1 samples, 0.04%)</title><rect x="891.9" y="5637" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="894.95" y="5647.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (3 samples, 0.12%)</title><rect x="295.4" y="3749" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="298.38" y="3759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="251.3" y="3157" width="0.9" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="254.26" y="3167.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="933" width="26.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="207.32" y="943.5" >`..</text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="643.7" y="5333" width="0.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="646.65" y="5343.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="168.2" y="1253" width="1.9" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="171.18" y="1263.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.04%)</title><rect x="627.2" y="5029" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="630.22" y="5039.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="4261" width="5.6" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="284.30" y="4271.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="18.0" y="3845" width="3.7" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="20.98" y="3855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="319.3" y="5381" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="322.32" y="5391.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="599.5" y="5509" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="602.53" y="5519.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (29 samples, 1.15%)</title><rect x="147.1" y="4341" width="13.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="150.06" y="4351.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2757" width="4.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="285.70" y="2767.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="251.3" y="3493" width="0.9" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="254.26" y="3503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (18 samples, 0.72%)</title><rect x="91.7" y="4261" width="8.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="94.67" y="4271.5" ></text>
</g>
<g >
<title>`core::core__file_scope(gctools::smart_ptr&lt;core::T_O&gt;, gctools:: (1 samples, 0.04%)</title><rect x="33.0" y="5253" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="36.00" y="5263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="427.3" y="2021" width="0.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="430.27" y="2031.5" ></text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (1 samples, 0.04%)</title><rect x="233.4" y="2117" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="236.42" y="2127.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="294.0" y="4005" width="0.9" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="296.97" y="4015.5" ></text>
</g>
<g >
<title>`core::type_of_decide_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="185.5" y="165" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="188.54" y="175.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="397.7" y="4325" width="2.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="400.70" y="4335.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="52.7" y="4037" width="1.9" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="55.71" y="4047.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (8 samples, 0.32%)</title><rect x="379.9" y="5093" width="3.7" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="382.86" y="5103.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="26.0" y="4421" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="28.96" y="4431.5" ></text>
</g>
<g >
<title>`READ-CHAR^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="20.3" y="3221" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="23.33" y="3231.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (8 samples, 0.32%)</title><rect x="327.8" y="4533" width="3.7" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="330.76" y="4543.5" ></text>
</g>
<g >
<title>`NORMALIZE-FTYPE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="252.7" y="3285" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="255.67" y="3295.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (2 samples, 0.08%)</title><rect x="240.5" y="2981" width="0.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="243.46" y="2991.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (4 samples, 0.16%)</title><rect x="552.1" y="5797" width="1.9" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="555.12" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2181" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="412.90" y="2191.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="323.1" y="5317" width="0.4" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="326.07" y="5327.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="249.4" y="645" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="252.38" y="655.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="313.7" y="5493" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="316.68" y="5503.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="287.4" y="4997" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="290.40" y="5007.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (1 samples, 0.04%)</title><rect x="55.1" y="5509" width="0.4" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="58.06" y="5519.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.04%)</title><rect x="805.1" y="5621" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="808.12" y="5631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="240.5" y="3077" width="2.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="243.46" y="3087.5" ></text>
</g>
<g >
<title>`llvm::PassManagerBuilder::addFunctionSimplificationPasses(llvm: (1 samples, 0.04%)</title><rect x="685.9" y="5925" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="688.89" y="5935.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="165.4" y="2581" width="0.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="168.36" y="2591.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.04%)</title><rect x="543.7" y="5765" width="0.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="546.68" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (56 samples, 2.23%)</title><rect x="407.6" y="5365" width="26.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="410.56" y="5375.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="421.2" y="3845" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="424.17" y="3855.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.04%)</title><rect x="683.1" y="5845" width="0.4" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="686.08" y="5855.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="165.4" y="2709" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="168.36" y="2719.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (7 samples, 0.28%)</title><rect x="352.2" y="5605" width="3.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="355.17" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="390.7" y="3061" width="1.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="393.66" y="3071.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="618.3" y="5349" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="621.31" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (48 samples, 1.91%)</title><rect x="324.5" y="5109" width="22.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="327.48" y="5119.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="121.7" y="3541" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="124.71" y="3551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="279.9" y="197" width="0.9" height="15.0" fill="rgb(75,222,75)" rx="2" ry="2" />
<text  x="282.89" y="207.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (12 samples, 0.48%)</title><rect x="233.9" y="2245" width="5.6" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="236.89" y="2255.5" ></text>
</g>
<g >
<title>`core::make_unbound_setf_symbol_function(gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="370.5" y="5749" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="373.48" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="233.9" y="789" width="1.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="236.89" y="799.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (36 samples, 1.43%)</title><rect x="416.9" y="4933" width="16.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="419.95" y="4943.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="399.1" y="3589" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="402.11" y="3599.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="19.9" y="3317" width="0.9" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="22.86" y="3327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="413.2" y="4837" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="416.19" y="4847.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="315.1" y="5301" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="318.09" y="5311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="168.6" y="725" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="171.65" y="735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="390.7" y="3317" width="1.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="393.66" y="3327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="295.8" y="2389" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="298.85" y="2399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="4037" width="1.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="424.64" y="4047.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Constant*, llvm::Constant*, llvm::DenseMap (1 samples, 0.04%)</title><rect x="865.7" y="5829" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="868.66" y="5839.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (4 samples, 0.16%)</title><rect x="825.3" y="5701" width="1.9" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="828.30" y="5711.5" ></text>
</g>
<g >
<title>`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="790.6" y="5717" width="0.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="793.56" y="5727.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="2261" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="428.86" y="2271.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="286.9" y="4485" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="289.93" y="4495.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (3 samples, 0.12%)</title><rect x="285.5" y="901" width="1.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="288.52" y="911.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (311 samples, 12.37%)</title><rect x="130.2" y="5205" width="145.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="133.16" y="5215.5" >`COMBINE-METHOD-FU..</text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="125.0" y="1877" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="128.00" y="1887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="105.8" y="3237" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="108.75" y="3247.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="933" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="430.27" y="943.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="387.8" y="4261" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="390.84" y="4271.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4997" width="2.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="55.24" y="5007.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="626.3" y="5045" width="0.5" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="629.28" y="5055.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="165.8" y="1461" width="1.0" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="168.83" y="1471.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CAR-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="428.7" y="1733" width="0.4" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="431.68" y="1743.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="611.3" y="5285" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="614.26" y="5295.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (3 samples, 0.12%)</title><rect x="673.7" y="5781" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="676.69" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="3253" width="4.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="279.60" y="3263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="202.9" y="949" width="1.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="205.91" y="959.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="100.6" y="3541" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="103.59" y="3551.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="21.3" y="3781" width="0.4" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="24.26" y="3791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (7 samples, 0.28%)</title><rect x="407.6" y="5013" width="3.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="410.56" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.2" y="4213" width="0.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="424.17" y="4223.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="381.7" y="4629" width="0.5" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="384.74" y="4639.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="279.4" y="725" width="1.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="282.42" y="735.5" ></text>
</g>
<g >
<title>`ENVIRONMENT-POLICY^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.04%)</title><rect x="299.6" y="5893" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="302.60" y="5903.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (158 samples, 6.28%)</title><rect x="597.2" y="5829" width="74.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="600.18" y="5839.5" >`DO-DBG-..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.7" y="1717" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="430.74" y="1727.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (15 samples, 0.60%)</title><rect x="232.5" y="2981" width="7.0" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="235.48" y="2991.5" ></text>
</g>
<g >
<title>`llvmo::StructType_O::get(gctools::smart_ptr&lt;llvmo::LLVMContext_ (1 samples, 0.04%)</title><rect x="661.0" y="5557" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="664.02" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (5 samples, 0.20%)</title><rect x="180.4" y="597" width="2.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="183.38" y="607.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.04%)</title><rect x="789.2" y="5749" width="0.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="792.16" y="5759.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="379.4" y="5013" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="382.40" y="5023.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="427.3" y="2837" width="4.2" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="430.27" y="2847.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="383.6" y="5029" width="10.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="386.62" y="5039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="3397" width="3.8" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="420.41" y="3407.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="285.5" y="117" width="1.4" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="288.52" y="127.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="243.3" y="1861" width="7.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="246.28" y="1871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="430.6" y="2293" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="433.56" y="2303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="409.4" y="3285" width="1.0" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="412.44" y="3295.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisPass(void const*) (1 samples, 0.04%)</title><rect x="713.1" y="5845" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="716.12" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="390.7" y="3029" width="1.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="393.66" y="3039.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="24.6" y="4069" width="0.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="27.55" y="4079.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="276.6" y="4085" width="4.7" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="279.60" y="4095.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="281.3" y="2965" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="284.30" y="2975.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="165.4" y="2725" width="0.4" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="168.36" y="2735.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="24.1" y="4021" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="27.08" y="4031.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1429" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="430.74" y="1439.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="424.5" y="3157" width="0.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="427.46" y="3167.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="559.6" y="5797" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="562.63" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (2 samples, 0.08%)</title><rect x="251.3" y="3701" width="0.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="254.26" y="3711.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.04%)</title><rect x="898.5" y="5781" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="901.52" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="417.4" y="965" width="1.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="420.41" y="975.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="382.2" y="4485" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="385.21" y="4495.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="421.6" y="2565" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="424.64" y="2575.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="49.9" y="4661" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="52.90" y="4671.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisPass(void const*) (1 samples, 0.04%)</title><rect x="850.6" y="5845" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="853.64" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="396.8" y="4069" width="0.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="399.76" y="4079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="427.7" y="917" width="0.5" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="430.74" y="927.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="94.5" y="3605" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="97.49" y="3615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="3749" width="4.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="279.60" y="3759.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.04%)</title><rect x="239.5" y="2901" width="0.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="242.52" y="2911.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="92.1" y="3205" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="95.14" y="3215.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (37 samples, 1.47%)</title><rect x="435.3" y="5541" width="17.3" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="438.25" y="5551.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="345.6" y="5029" width="1.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="348.60" y="5039.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="400.0" y="4949" width="2.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="403.05" y="4959.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.04%)</title><rect x="861.9" y="5749" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="864.91" y="5759.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.04%)</title><rect x="845.0" y="5813" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="848.01" y="5823.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_short(char const*, unsigned long, u (1 samples, 0.04%)</title><rect x="813.1" y="5541" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="816.09" y="5551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="356.9" y="5765" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="359.87" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="269.1" y="117" width="0.9" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="272.09" y="127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2245" width="1.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="427.92" y="2255.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="167.7" y="1893" width="3.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="170.71" y="1903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="167.7" y="1093" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="170.71" y="1103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (14 samples, 0.56%)</title><rect x="91.7" y="3877" width="6.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="94.67" y="3887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="231.1" y="3365" width="0.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="234.07" y="3375.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.04%)</title><rect x="905.6" y="5621" width="0.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="908.56" y="5631.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="674.2" y="5749" width="0.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="677.16" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="39.1" y="4293" width="0.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="42.10" y="4303.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="4133" width="1.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="411.03" y="4143.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="15.6" y="5029" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="18.63" y="5039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="165.8" y="2565" width="1.4" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="168.83" y="2575.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (1 samples, 0.04%)</title><rect x="52.7" y="3781" width="0.5" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="55.71" y="3791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="52.2" y="4741" width="2.9" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="55.24" y="4751.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (22 samples, 0.88%)</title><rect x="16.6" y="4693" width="10.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="19.57" y="4703.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (31 samples, 1.23%)</title><rect x="257.4" y="2597" width="14.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="260.36" y="2607.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedUseBits(llvm::Value*, llvm: (3 samples, 0.12%)</title><rect x="900.9" y="5797" width="1.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="903.87" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="38.6" y="4533" width="2.8" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="41.63" y="4543.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::GetNonLocalInfoForBlock(llvm::In (1 samples, 0.04%)</title><rect x="821.5" y="5749" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="824.54" y="5759.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.04%)</title><rect x="894.3" y="5797" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="897.30" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="423.0" y="3477" width="3.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="426.05" y="3487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="182.7" y="229" width="1.0" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="185.73" y="239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="393.9" y="3493" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="396.95" y="3503.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (31 samples, 1.23%)</title><rect x="257.4" y="2517" width="14.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="260.36" y="2527.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="401.9" y="3653" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="404.93" y="3663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="388.3" y="3957" width="3.8" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="391.31" y="3967.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="172.4" y="1813" width="5.6" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="175.40" y="1823.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (3 samples, 0.12%)</title><rect x="526.3" y="5765" width="1.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="529.31" y="5775.5" ></text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (1 samples, 0.04%)</title><rect x="823.9" y="5717" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="826.89" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="2837" width="63.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="170.24" y="2847.5" >`INTERP..</text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.04%)</title><rect x="125.0" y="1653" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="128.00" y="1663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="2181" width="4.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="279.60" y="2191.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="123.6" y="693" width="0.5" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="126.59" y="703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (11 samples, 0.44%)</title><rect x="417.4" y="4309" width="5.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="420.41" y="4319.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="287.9" y="4933" width="0.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="290.87" y="4943.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="234.4" y="565" width="0.9" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="237.36" y="575.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="514.1" y="5621" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="517.11" y="5631.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (87 samples, 3.46%)</title><rect x="86.5" y="5141" width="40.8" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="89.51" y="5151.5" >`co..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="431.5" y="3493" width="1.9" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="434.50" y="3503.5" ></text>
</g>
<g >
<title>`GC_allocobj (1 samples, 0.04%)</title><rect x="567.6" y="5653" width="0.5" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="570.61" y="5663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="386.4" y="3189" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="389.44" y="3199.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T CST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="250.3" y="1285" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="253.32" y="1295.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="295.8" y="2101" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="298.85" y="2111.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="19.4" y="3397" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="22.39" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1109" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="428.86" y="1119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="245" width="0.5" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="423.70" y="255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="1989" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="434.96" y="1999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1845" width="0.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="428.86" y="1855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (34 samples, 1.35%)</title><rect x="256.0" y="3221" width="15.9" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="258.95" y="3231.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (5 samples, 0.20%)</title><rect x="587.3" y="5797" width="2.4" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="590.33" y="5807.5" ></text>
</g>
<g >
<title>`IRC-MAKE-TMV^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="611.3" y="5397" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="614.26" y="5407.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="419.3" y="901" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="422.29" y="911.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="393.9" y="3093" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="396.95" y="3103.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4789" width="1.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="39.28" y="4799.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoWrapperPass* llvm::Pass::getAnalysisIfAvailable&lt;l (1 samples, 0.04%)</title><rect x="850.6" y="5877" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="853.64" y="5887.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="319.8" y="5285" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="322.79" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="386.0" y="3141" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="388.97" y="3151.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="421.6" y="3829" width="1.0" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="424.64" y="3839.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="258.3" y="1525" width="0.5" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="261.30" y="1535.5" ></text>
</g>
<g >
<title>`IRC-BR^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="605.6" y="5493" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="608.63" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="423.0" y="3461" width="3.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="426.05" y="3471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="270.0" y="53" width="1.9" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="273.03" y="63.5" ></text>
</g>
<g >
<title>`core::type_of(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="294.4" y="3813" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="297.44" y="3823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="172.4" y="565" width="4.7" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="175.40" y="575.5" ></text>
</g>
<g >
<title>`core::Cons_O::length() const (1 samples, 0.04%)</title><rect x="507.5" y="5749" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="510.53" y="5759.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.04%)</title><rect x="879.7" y="5813" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="882.75" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="169.1" y="613" width="1.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="172.12" y="623.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (341 samples, 13.56%)</title><rect x="128.8" y="5637" width="160.0" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="131.75" y="5647.5" >`CONVERT^CLEAVIR-CST..</text>
</g>
<g >
<title>`POSITION-IF-NOT^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="282.7" y="1157" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="285.70" y="1167.5" ></text>
</g>
<g >
<title>`__v2printf (1 samples, 0.04%)</title><rect x="409.9" y="1717" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="412.90" y="1727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="101.1" y="3621" width="0.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="104.06" y="3631.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="390.2" y="3493" width="1.9" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="393.19" y="3503.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (3 samples, 0.12%)</title><rect x="748.8" y="5653" width="1.4" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="751.79" y="5663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="160.7" y="4341" width="1.8" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="163.67" y="4351.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="348.9" y="5205" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="351.89" y="5215.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="260.2" y="165" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="263.18" y="175.5" ></text>
</g>
<g >
<title>`DATUM-KIND^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="332.5" y="4661" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="335.46" y="4671.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="202.4" y="661" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="205.44" y="671.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (3 samples, 0.12%)</title><rect x="554.0" y="5797" width="1.4" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="557.00" y="5807.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (2 samples, 0.08%)</title><rect x="905.1" y="5669" width="0.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="908.09" y="5679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="295.4" y="2373" width="0.4" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="298.38" y="2383.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (4 samples, 0.16%)</title><rect x="504.2" y="5685" width="1.9" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="507.25" y="5695.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.04%)</title><rect x="25.5" y="4373" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="28.49" y="4383.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="172.4" y="325" width="4.7" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="175.40" y="335.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.04%)</title><rect x="884.0" y="5829" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="886.97" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="428.2" y="2373" width="1.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="431.21" y="2383.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (78 samples, 3.10%)</title><rect x="318.8" y="5621" width="36.7" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="321.85" y="5631.5" >`TR..</text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="62.1" y="4917" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="65.10" y="4927.5" ></text>
</g>
<g >
<title>`POSSIBLY-ADD-ITEM^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-STA (1 samples, 0.04%)</title><rect x="255.0" y="2965" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="258.01" y="2975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="4037" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="415.25" y="4047.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (32 samples, 1.27%)</title><rect x="187.4" y="197" width="15.0" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="190.42" y="207.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="95.9" y="3445" width="0.5" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="98.89" y="3455.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="773.7" y="5765" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="776.67" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1605" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="423.70" y="1615.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (3 samples, 0.12%)</title><rect x="165.8" y="2677" width="1.4" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="168.83" y="2687.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="124.5" y="1701" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="127.53" y="1711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="373" width="26.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="207.32" y="383.5" >`..</text>
</g>
<g >
<title>0x11a477094 (12 samples, 0.48%)</title><rect x="281.3" y="3877" width="5.6" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="284.30" y="3887.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="255.5" y="2901" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="258.48" y="2911.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="429.6" y="1989" width="1.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="432.62" y="1999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="4085" width="0.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="414.31" y="4095.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="433.4" y="4197" width="0.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="436.37" y="4207.5" ></text>
</g>
<g >
<title>`MAKE-LOAD-TIME-VALUE-AST^CLEAVIR-AST^FN^^ (1 samples, 0.04%)</title><rect x="293.5" y="5317" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="296.50" y="5327.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.04%)</title><rect x="466.7" y="5733" width="0.5" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="469.70" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="3221" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="414.78" y="3231.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="165.8" y="1509" width="1.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="168.83" y="1519.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="123.1" y="2501" width="1.4" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="126.12" y="2511.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="36.3" y="4373" width="1.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="39.28" y="4383.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="123.6" y="1845" width="0.9" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="126.59" y="1855.5" ></text>
</g>
<g >
<title>`core::clasp_namestring(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="34.9" y="4117" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="37.88" y="4127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="2229" width="0.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="411.97" y="2239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="3829" width="0.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="408.68" y="3839.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="133.0" y="4501" width="0.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="135.98" y="4511.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="124.5" y="3221" width="1.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="127.53" y="3231.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (5 samples, 0.20%)</title><rect x="400.0" y="4805" width="2.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="403.05" y="4815.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorBase::grow_pod(void*, unsigned long, unsigned  (1 samples, 0.04%)</title><rect x="889.1" y="5733" width="0.5" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="892.13" y="5743.5" ></text>
</g>
<g >
<title>`llvm::DemandedBits::isInstructionDead(llvm::Instruction*) (3 samples, 0.12%)</title><rect x="708.0" y="5877" width="1.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="710.96" y="5887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="287.4" y="5125" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="290.40" y="5135.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="409.4" y="4005" width="1.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="412.44" y="4015.5" ></text>
</g>
<g >
<title>`ESCAPE-AND-JOIN-JIT-NAME^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="634.3" y="5365" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="637.26" y="5375.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::BasicBlock*, llvm::SmallPtrSet&lt;llvm::Ba (1 samples, 0.04%)</title><rect x="785.4" y="5813" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="788.40" y="5823.5" ></text>
</g>
<g >
<title>`llvm::AttributeSetNode::get(llvm::LLVMContext&amp;, llvm::AttrBuild (1 samples, 0.04%)</title><rect x="676.5" y="5685" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="679.51" y="5695.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="2933" width="63.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="170.24" y="2943.5" >`INTERP..</text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.08%)</title><rect x="386.0" y="3557" width="0.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="388.97" y="3567.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="287.9" y="4693" width="0.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="290.87" y="4703.5" ></text>
</g>
<g >
<title>`PARSE-FUNCTION-TYPE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="332.0" y="4517" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="334.99" y="4527.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="166.3" y="613" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="169.30" y="623.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitAnd(llvm::BinaryOperator&amp;) (2 samples, 0.08%)</title><rect x="739.9" y="5845" width="0.9" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="742.87" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="413.7" y="4965" width="2.8" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="416.66" y="4975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="352.2" y="5509" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="355.17" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="431.5" y="3701" width="1.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="434.50" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="393.5" y="4389" width="0.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="396.48" y="4399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (77 samples, 3.06%)</title><rect x="12.8" y="5653" width="36.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="15.82" y="5663.5" >`co..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="432.0" y="1365" width="0.4" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="434.96" y="1375.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (10 samples, 0.40%)</title><rect x="313.2" y="5605" width="4.7" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="316.21" y="5615.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="166.3" y="805" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="169.30" y="815.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="380.3" y="4389" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="383.33" y="4399.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="427.3" y="3237" width="4.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="430.27" y="3247.5" ></text>
</g>
<g >
<title>0x1225f7094 (9 samples, 0.36%)</title><rect x="276.6" y="2021" width="4.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="279.60" y="2031.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="319.8" y="5349" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="322.79" y="5359.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="167.7" y="1909" width="3.8" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="170.71" y="1919.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="388.8" y="3749" width="0.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="391.78" y="3759.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitGetElementPtrInst(llvm::GetElementPtrI (5 samples, 0.20%)</title><rect x="743.6" y="5845" width="2.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="746.63" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="124.5" y="2613" width="1.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="127.53" y="2623.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="4533" width="5.6" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="284.30" y="4543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (23 samples, 0.91%)</title><rect x="423.0" y="4373" width="10.8" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="426.05" y="4383.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="405.2" y="5301" width="0.9" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="408.21" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="869" width="5.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="175.40" y="879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (35 samples, 1.39%)</title><rect x="417.4" y="4789" width="16.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="420.41" y="4799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="401.0" y="2869" width="0.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="403.99" y="2879.5" ></text>
</g>
<g >
<title>`llvm::AssumptionCache::assumptionsFor(llvm::Value const*) (1 samples, 0.04%)</title><rect x="694.3" y="5829" width="0.5" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="697.34" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="4069" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="414.78" y="4079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="414.1" y="4005" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="417.13" y="4015.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="403.8" y="5525" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="406.80" y="5535.5" ></text>
</g>
<g >
<title>`core::core__stack_monitor(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="649.3" y="5221" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="652.28" y="5231.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="178.0" y="2149" width="0.5" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="181.04" y="2159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="427.3" y="2277" width="0.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="430.27" y="2287.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="295.4" y="2437" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="298.38" y="2447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (15 samples, 0.60%)</title><rect x="243.3" y="1189" width="7.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="246.28" y="1199.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasGEP(llvm::GEPOperator const*, unsigne (1 samples, 0.04%)</title><rect x="821.5" y="5637" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="824.54" y="5647.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (48 samples, 1.91%)</title><rect x="180.4" y="1221" width="22.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="183.38" y="1231.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="432.0" y="1429" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="434.96" y="1439.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.16%)</title><rect x="379.9" y="4741" width="1.8" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="382.86" y="4751.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.3" y="981" width="0.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="430.27" y="991.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="388.3" y="4197" width="4.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="391.31" y="4207.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::makeUniqueName(llvm::Value*, llvm::Smal (1 samples, 0.04%)</title><rect x="611.3" y="5237" width="0.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="614.26" y="5247.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="56.0" y="5701" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="59.00" y="5711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="92.1" y="3317" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="95.14" y="3327.5" ></text>
</g>
<g >
<title>`PARSE-FUNCTION-TYPE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="336.7" y="4181" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="339.68" y="4191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (38 samples, 1.51%)</title><rect x="15.6" y="5413" width="17.9" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="18.63" y="5423.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="342.8" y="4405" width="0.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="345.78" y="4415.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="233.9" y="389" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="236.89" y="399.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="294.9" y="4037" width="1.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="297.91" y="4047.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="386.0" y="3397" width="0.9" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="388.97" y="3407.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="231.1" y="3685" width="0.4" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="234.07" y="3695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="1205" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="428.86" y="1215.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="295.4" y="3157" width="0.9" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="298.38" y="3167.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'TAGBODY) T T T))^M (6 samples, 0.24%)</title><rect x="247.5" y="1125" width="2.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="250.50" y="1135.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="62.1" y="4965" width="0.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="65.10" y="4975.5" ></text>
</g>
<g >
<title>`llvm::scc_iterator&lt;llvm::CallGraph*, llvm::GraphTraits&lt;llvm::Ca (1 samples, 0.04%)</title><rect x="840.8" y="5877" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="843.79" y="5887.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="723.0" y="5797" width="0.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="725.98" y="5807.5" ></text>
</g>
<g >
<title>`APPEND^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="122.6" y="2373" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="125.65" y="2383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="229" width="0.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="423.70" y="239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="429.6" y="2053" width="1.0" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="432.62" y="2063.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="311.8" y="5637" width="0.5" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="314.81" y="5647.5" ></text>
</g>
<g >
<title>`llvm::ReassociatePass::BuildRankMap(llvm::Function&amp;, llvm::Reve (1 samples, 0.04%)</title><rect x="705.6" y="5861" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="708.61" y="5871.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="240.0" y="2757" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="242.99" y="2767.5" ></text>
</g>
<g >
<title>`llvm::LoadInst::setAlignment(unsigned int) (1 samples, 0.04%)</title><rect x="907.9" y="5829" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="910.91" y="5839.5" ></text>
</g>
<g >
<title>`PROCESS-LTV^CLASP-CLEAVIR-AST^FN^^ (48 samples, 1.91%)</title><rect x="324.5" y="5189" width="22.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="327.48" y="5199.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="3605" width="1.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="412.44" y="3615.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="88.4" y="3957" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="91.39" y="3967.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (31 samples, 1.23%)</title><rect x="257.4" y="2069" width="14.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="260.36" y="2079.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="123.6" y="1301" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="126.59" y="1311.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (12 samples, 0.48%)</title><rect x="281.3" y="3717" width="5.6" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="284.30" y="3727.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (47 samples, 1.87%)</title><rect x="180.4" y="613" width="22.0" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="183.38" y="623.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="268.2" y="1429" width="0.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="271.15" y="1439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="318.4" y="5589" width="0.4" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="321.38" y="5599.5" ></text>
</g>
<g >
<title>`core::cl__error(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.04%)</title><rect x="127.8" y="5605" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="130.81" y="5615.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="626.8" y="5125" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="629.75" y="5135.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="323.1" y="5301" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="326.07" y="5311.5" ></text>
</g>
<g >
<title>`unw_init_local (1 samples, 0.04%)</title><rect x="15.2" y="5397" width="0.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="18.16" y="5407.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="665.2" y="5445" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="668.24" y="5455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="38.2" y="4197" width="0.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="41.16" y="4207.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (47 samples, 1.87%)</title><rect x="180.4" y="645" width="22.0" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="183.38" y="655.5" >`..</text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="397.7" y="3589" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="400.70" y="3599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="380.3" y="4533" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="383.33" y="4543.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="125.9" y="2581" width="1.0" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="128.93" y="2591.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (1 samples, 0.04%)</title><rect x="919.2" y="5717" width="0.4" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="922.17" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2037" width="4.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="285.70" y="2047.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="675.6" y="5765" width="0.4" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="678.57" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="24.1" y="4213" width="1.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="27.08" y="4223.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (2 samples, 0.08%)</title><rect x="295.4" y="2421" width="0.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="298.38" y="2431.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::init(unsigned int) (1 samples, 0.04%)</title><rect x="350.8" y="5221" width="0.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="353.76" y="5231.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (57 samples, 2.27%)</title><rect x="204.3" y="597" width="26.8" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="207.32" y="607.5" >`..</text>
</g>
<g >
<title>`MAKE-PROGN-AST^CLEAVIR-AST^FN^^ (1 samples, 0.04%)</title><rect x="164.9" y="4213" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="167.89" y="4223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3013" width="1.0" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="424.64" y="3023.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="421.6" y="2485" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="424.64" y="2495.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="123.1" y="2357" width="1.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="126.12" y="2367.5" ></text>
</g>
<g >
<title>`MULTIPLE-VALUE-FUNCALL^CORE^FN^^ (95 samples, 3.78%)</title><rect x="12.3" y="5925" width="44.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="15.35" y="5935.5" >`MUL..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (31 samples, 1.23%)</title><rect x="257.4" y="2405" width="14.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="260.36" y="2415.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="171.5" y="1717" width="0.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="174.46" y="1727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="125.9" y="3301" width="1.4" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="128.93" y="3311.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="385.5" y="3781" width="1.9" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="388.50" y="3791.5" ></text>
</g>
<g >
<title>`GC_allocobj (1 samples, 0.04%)</title><rect x="372.8" y="5653" width="0.5" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="375.82" y="5663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="260.6" y="309" width="7.6" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="263.64" y="319.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="393.5" y="3909" width="0.9" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="396.48" y="3919.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="167.7" y="1429" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="170.71" y="1439.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="276.1" y="4517" width="5.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="279.13" y="4527.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="49.9" y="5061" width="1.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="52.90" y="5071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="388.3" y="3909" width="3.8" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="391.31" y="3919.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (3 samples, 0.12%)</title><rect x="285.5" y="421" width="1.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="288.52" y="431.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="242.8" y="2565" width="8.0" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="245.81" y="2575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="3093" width="4.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="430.27" y="3103.5" ></text>
</g>
<g >
<title>`IN^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="608.9" y="5413" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="611.92" y="5423.5" ></text>
</g>
<g >
<title>`core::core__ltvc_write_object(gctools::smart_ptr&lt;core::T_O&gt;, gc (1 samples, 0.04%)</title><rect x="684.0" y="5925" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="687.02" y="5935.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((:AROUND) (T T CLASP))^METHOD (1 samples, 0.04%)</title><rect x="177.1" y="613" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="180.10" y="623.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="633.3" y="5317" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="636.33" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (11 samples, 0.44%)</title><rect x="417.4" y="4549" width="5.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="420.41" y="4559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="295.4" y="3093" width="0.9" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="298.38" y="3103.5" ></text>
</g>
<g >
<title>`core::core__make_string_output_stream_from_string(gctools::smar (1 samples, 0.04%)</title><rect x="27.8" y="4773" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="30.84" y="4783.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="202.9" y="1061" width="1.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="205.91" y="1071.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="281.3" y="4517" width="5.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="284.30" y="4527.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.04%)</title><rect x="831.4" y="5717" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="834.40" y="5727.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (1 samples, 0.04%)</title><rect x="824.8" y="5717" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="827.83" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="415.5" y="4805" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="418.54" y="4815.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.04%)</title><rect x="49.0" y="5685" width="0.4" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="51.96" y="5695.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="369.1" y="5733" width="0.4" height="15.0" fill="rgb(217,74,74)" rx="2" ry="2" />
<text  x="372.07" y="5743.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (133 samples, 5.29%)</title><rect x="600.5" y="5621" width="62.4" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="603.47" y="5631.5" >`LAYOU..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="279.9" y="181" width="0.9" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="282.89" y="191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="5109" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="419.48" y="5119.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="276.6" y="1109" width="2.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="279.60" y="1119.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="123.6" y="1669" width="0.9" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="126.59" y="1679.5" ></text>
</g>
<g >
<title>`CONVERT-CALLED-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T T T T) (24 samples, 0.95%)</title><rect x="101.1" y="3717" width="11.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="104.06" y="3727.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (12 samples, 0.48%)</title><rect x="172.4" y="1589" width="5.6" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="175.40" y="1599.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="340.9" y="4501" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="343.91" y="4511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="283.2" y="1269" width="1.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="286.17" y="1279.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T LEXICAL-VARIABLE-INFO T T))^ (1 samples, 0.04%)</title><rect x="282.7" y="1221" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="285.70" y="1231.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="421.6" y="2645" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="424.64" y="2655.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="869" width="5.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="236.89" y="879.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (17 samples, 0.68%)</title><rect x="242.8" y="2517" width="8.0" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="245.81" y="2527.5" ></text>
</g>
<g >
<title>0x11a477094 (23 samples, 0.91%)</title><rect x="167.2" y="2517" width="10.8" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="170.24" y="2527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="396.3" y="4741" width="3.7" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="399.29" y="4751.5" ></text>
</g>
<g >
<title>`DO-LITERAL-TABLE^LITERAL^FN^^ (1,438 samples, 57.20%)</title><rect x="10.5" y="6005" width="674.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="13.47" y="6015.5" >`DO-LITERAL-TABLE^LITERAL^FN^^</text>
</g>
<g >
<title>`LOGAND^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="28.8" y="4997" width="0.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="31.77" y="5007.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="289.7" y="5445" width="0.5" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="292.75" y="5455.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="412.3" y="4005" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="415.25" y="4015.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="343.7" y="4661" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="346.72" y="4671.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="145.6" y="4277" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="148.65" y="4287.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (2 samples, 0.08%)</title><rect x="29.7" y="5061" width="1.0" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="32.71" y="5071.5" ></text>
</g>
<g >
<title>`llvm::hash_value(llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="723.4" y="5749" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="726.44" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="43.8" y="4949" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="46.79" y="4959.5" ></text>
</g>
<g >
<title>0x114bc4094 (5 samples, 0.20%)</title><rect x="284.6" y="1477" width="2.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="287.58" y="1487.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="231.1" y="3733" width="0.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="234.07" y="3743.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (4 samples, 0.16%)</title><rect x="450.7" y="5429" width="1.9" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="453.74" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="382.2" y="4197" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="385.21" y="4207.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="345.6" y="4853" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="348.60" y="4863.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CATCH-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="384.6" y="4117" width="0.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="387.56" y="4127.5" ></text>
</g>
<g >
<title>`0x10b6adfa3 (1 samples, 0.04%)</title><rect x="15.6" y="5093" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="18.63" y="5103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="115.6" y="3525" width="0.9" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="118.61" y="3535.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="52.7" y="3829" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="55.71" y="3839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="253.1" y="3269" width="1.0" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="256.13" y="3279.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="243.3" y="885" width="4.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="246.28" y="895.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="394.4" y="5029" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="397.42" y="5039.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="34.4" y="5381" width="10.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="37.41" y="5391.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="289.7" y="5461" width="0.5" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="292.75" y="5471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="510.8" y="5717" width="2.4" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="513.82" y="5727.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="285.1" y="677" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="288.05" y="687.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="167.7" y="2165" width="10.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="170.71" y="2175.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="410.8" y="4325" width="1.0" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="413.84" y="4335.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="123.6" y="1653" width="0.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="126.59" y="1663.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="530.1" y="5749" width="0.4" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="533.06" y="5759.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.04%)</title><rect x="521.1" y="5733" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="524.15" y="5743.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (5 samples, 0.20%)</title><rect x="817.3" y="5669" width="2.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="820.32" y="5679.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="413.2" y="4773" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="416.19" y="4783.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (2 samples, 0.08%)</title><rect x="294.0" y="3925" width="0.9" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="296.97" y="3935.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="123.6" y="1749" width="0.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="126.59" y="1759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="3221" width="0.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="403.99" y="3231.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (4 samples, 0.16%)</title><rect x="504.2" y="5637" width="1.9" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="507.25" y="5647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="2533" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="414.78" y="2543.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="4005" width="0.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="254.26" y="4015.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (23 samples, 0.91%)</title><rect x="276.1" y="4997" width="10.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="279.13" y="5007.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="501.9" y="5781" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="504.90" y="5791.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="327.3" y="4405" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="330.30" y="4415.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (12 samples, 0.48%)</title><rect x="233.9" y="885" width="5.6" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="236.89" y="895.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (58 samples, 2.31%)</title><rect x="100.1" y="4005" width="27.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="103.12" y="4015.5" >`..</text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="355.9" y="5573" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="358.93" y="5583.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="889.1" y="5717" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="892.13" y="5727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="373" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="423.70" y="383.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomT (1 samples, 0.04%)</title><rect x="783.1" y="5765" width="0.4" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="786.05" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="295.4" y="3589" width="1.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="298.38" y="3599.5" ></text>
</g>
<g >
<title>`default_zone_malloc (1 samples, 0.04%)</title><rect x="303.4" y="5765" width="0.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="306.36" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="144.2" y="4309" width="1.9" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="147.24" y="4319.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="489.2" y="5797" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="492.23" y="5807.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="313.2" y="5397" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="316.21" y="5407.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="172.4" y="85" width="4.7" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="175.40" y="95.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="257.4" y="1477" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="260.36" y="1487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="247.0" y="629" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="250.03" y="639.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (108 samples, 4.30%)</title><rect x="180.4" y="1909" width="50.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="183.38" y="1919.5" >`core..</text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="58.8" y="5765" width="1.0" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="61.81" y="5775.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::EarlyCSELegacyCommonPass&lt;true&gt;::runOnFun (5 samples, 0.20%)</title><rect x="698.1" y="5893" width="2.3" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="701.10" y="5903.5" ></text>
</g>
<g >
<title>`CST-FROM-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="323.1" y="5429" width="0.4" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="326.07" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="165.8" y="1685" width="1.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="168.83" y="1695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="401.0" y="3493" width="0.9" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="403.99" y="3503.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="619.7" y="5237" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="622.71" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="165.4" y="2997" width="1.8" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="168.36" y="3007.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="28.3" y="4997" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="31.31" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (108 samples, 4.30%)</title><rect x="180.4" y="1397" width="50.7" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="183.38" y="1407.5" >`CONV..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.9" y="2069" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="412.90" y="2079.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (4 samples, 0.16%)</title><rect x="73.8" y="4997" width="1.9" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="76.83" y="5007.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (1 samples, 0.04%)</title><rect x="53.2" y="3845" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="56.18" y="3855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="417.4" y="2101" width="3.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="420.41" y="2111.5" ></text>
</g>
<g >
<title>`core::clasp_write_string(std::__1::basic_string&lt;char, std::__1: (1 samples, 0.04%)</title><rect x="948.7" y="5973" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="951.74" y="5983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="381.7" y="4405" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="384.74" y="4415.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="314.6" y="5013" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="317.62" y="5023.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (1 samples, 0.04%)</title><rect x="171.9" y="1557" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="174.93" y="1567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="3333" width="4.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="279.60" y="3343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3301" width="3.8" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="420.41" y="3311.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.9" y="2629" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="412.90" y="2639.5" ></text>
</g>
<g >
<title>`VALID-KEYWORDS-FROM-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="455.4" y="5701" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="458.43" y="5711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="165.4" y="2549" width="0.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="168.36" y="2559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="396.3" y="4597" width="3.7" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="399.29" y="4607.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="278.9" y="901" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="281.95" y="911.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="421.6" y="3637" width="1.0" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="424.64" y="3647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="3509" width="5.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="284.30" y="3519.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="107.6" y="3541" width="1.0" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="110.63" y="3551.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="466.7" y="5685" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="469.70" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="4005" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="414.31" y="4015.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="239.5" y="3029" width="1.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="242.52" y="3039.5" ></text>
</g>
<g >
<title>`IMMEDIATE-OBJECT-OR-NIL^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="672.8" y="5781" width="0.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="675.75" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="396.8" y="4453" width="3.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="399.76" y="4463.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.04%)</title><rect x="310.4" y="5765" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="313.40" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="231.5" y="4005" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="234.54" y="4015.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.04%)</title><rect x="725.8" y="5765" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="728.79" y="5775.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="287.4" y="4741" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="290.40" y="4751.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="92.1" y="3061" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="95.14" y="3071.5" ></text>
</g>
<g >
<title>`%MAKE-FUNCTION-INFO^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="596.7" y="5797" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="599.71" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="260.6" y="277" width="7.6" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="263.64" y="287.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (6 samples, 0.24%)</title><rect x="269.1" y="645" width="2.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="272.09" y="655.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="353.6" y="5381" width="0.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="356.58" y="5391.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="758.6" y="5685" width="0.5" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="761.65" y="5695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="430.6" y="1925" width="0.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="433.56" y="1935.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.9" y="3413" width="0.5" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="404.93" y="3423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (35 samples, 1.39%)</title><rect x="256.0" y="3381" width="16.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="258.95" y="3391.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.04%)</title><rect x="765.2" y="5669" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="768.22" y="5679.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="631.0" y="5077" width="0.4" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="633.98" y="5087.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (79 samples, 3.14%)</title><rect x="318.4" y="5653" width="37.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="321.38" y="5663.5" >`CO..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (25 samples, 0.99%)</title><rect x="100.6" y="3909" width="11.7" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="103.59" y="3919.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="166.3" y="837" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="169.30" y="847.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.04%)</title><rect x="698.1" y="5749" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="701.10" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="2645" width="1.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="427.92" y="2655.5" ></text>
</g>
<g >
<title>`REDUCE-TYPEQS^CC-HIR-TO-MIR^FN^^ (1 samples, 0.04%)</title><rect x="320.3" y="5381" width="0.4" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="323.25" y="5391.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (10 samples, 0.40%)</title><rect x="122.6" y="3557" width="4.7" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="125.65" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.4" y="1605" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="428.39" y="1615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="279.4" y="1269" width="1.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="282.42" y="1279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (49 samples, 1.95%)</title><rect x="410.8" y="5205" width="23.0" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="413.84" y="5215.5" >`..</text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (4 samples, 0.16%)</title><rect x="390.2" y="3461" width="1.9" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="393.19" y="3471.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="2869" width="4.2" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="279.60" y="2879.5" ></text>
</g>
<g >
<title>`MAKE-EQ-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="431.5" y="2405" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="434.50" y="2415.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.0" y="1461" width="0.4" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="434.96" y="1471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (100 samples, 3.98%)</title><rect x="406.1" y="5717" width="47.0" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="409.15" y="5727.5" >`COM..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="3829" width="5.6" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="284.30" y="3839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="4261" width="3.8" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="420.41" y="4271.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="4053" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="414.78" y="4063.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="251.3" y="3989" width="0.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="254.26" y="3999.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="239.5" y="2869" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="242.52" y="2879.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="36.3" y="4437" width="1.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="39.28" y="4447.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="125.9" y="2053" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="128.93" y="2063.5" ></text>
</g>
<g >
<title>`FIND-SLOT-DEFINITION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="359.7" y="5781" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="362.68" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="202.9" y="997" width="1.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="205.91" y="1007.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="268.6" y="1285" width="3.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="271.62" y="1295.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="231.5" y="4021" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="234.54" y="4031.5" ></text>
</g>
<g >
<title>`llvm::getObjectSize(llvm::Value const*, unsigned long long&amp;, ll (2 samples, 0.08%)</title><rect x="804.6" y="5669" width="1.0" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="807.65" y="5679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="386.4" y="3269" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="389.44" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1269" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="430.74" y="1279.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (24 samples, 0.95%)</title><rect x="332.0" y="4789" width="11.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="334.99" y="4799.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="382.2" y="4149" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="385.21" y="4159.5" ></text>
</g>
<g >
<title>`core::Symbol_O::create(gctools::smart_ptr&lt;core::SimpleString_O&gt; (1 samples, 0.04%)</title><rect x="132.0" y="4421" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="135.04" y="4431.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="424.0" y="1749" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="426.99" y="1759.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getConstantOnEdge(llvm::Value*, llvm::Basi (2 samples, 0.08%)</title><rect x="701.4" y="5813" width="0.9" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="704.38" y="5823.5" ></text>
</g>
<g >
<title>`core::generic_write_vector(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="48.5" y="5429" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="51.49" y="5439.5" ></text>
</g>
<g >
<title>`MAKE-CALL-AST^CLEAVIR-AST^FN^^ (1 samples, 0.04%)</title><rect x="124.1" y="1349" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="127.06" y="1359.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="170.5" y="1557" width="1.0" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="173.53" y="1567.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.3" y="3637" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="414.31" y="3647.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="405.7" y="3733" width="0.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="408.68" y="3743.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (31 samples, 1.23%)</title><rect x="257.4" y="2549" width="14.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="260.36" y="2559.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (1 samples, 0.04%)</title><rect x="422.1" y="2005" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="425.11" y="2015.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="379.9" y="5157" width="3.7" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="382.86" y="5167.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((SETF-FDEFINITION-I (3 samples, 0.12%)</title><rect x="666.7" y="5653" width="1.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="669.65" y="5663.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (10 samples, 0.40%)</title><rect x="861.0" y="5829" width="4.7" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="863.97" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="400.0" y="4277" width="1.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="403.05" y="4287.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="122.6" y="3461" width="4.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="125.65" y="3471.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="386.9" y="3557" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="389.91" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((MULTIPLE-VALUE-FOREIGN-CALL-AS (1 samples, 0.04%)</title><rect x="399.1" y="3637" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="402.11" y="3647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="281.3" y="4661" width="5.6" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="284.30" y="4671.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="1125" width="9.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="262.24" y="1135.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3525" width="1.8" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="168.36" y="3535.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="666.2" y="5541" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="669.18" y="5551.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="425.9" y="869" width="0.4" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="428.86" y="879.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (2 samples, 0.08%)</title><rect x="644.1" y="5349" width="1.0" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="647.12" y="5359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="231.1" y="3717" width="0.4" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="234.07" y="3727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="885" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="423.70" y="895.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="52.2" y="4581" width="2.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="55.24" y="4591.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2293" width="1.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="127.53" y="2303.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="47.5" y="5397" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="50.55" y="5407.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.9" y="2741" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="412.90" y="2751.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="268.6" y="597" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="271.62" y="607.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="534.3" y="5797" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="537.29" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2069" width="1.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="127.53" y="2079.5" ></text>
</g>
<g >
<title>0x1225e5094 (11 samples, 0.44%)</title><rect x="172.4" y="901" width="5.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="175.40" y="911.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="869" width="1.4" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="288.52" y="879.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="3525" width="63.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="170.24" y="3535.5" >`INTERP..</text>
</g>
<g >
<title>0x11a477094 (19 samples, 0.76%)</title><rect x="259.2" y="1509" width="9.0" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="262.24" y="1519.5" ></text>
</g>
<g >
<title>`wrapped_core__generalp_T_sp (1 samples, 0.04%)</title><rect x="577.5" y="5797" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="580.47" y="5807.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (7 samples, 0.28%)</title><rect x="122.6" y="3333" width="3.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="125.65" y="3343.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="428.7" y="1973" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="431.68" y="1983.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (231 samples, 9.19%)</title><rect x="164.0" y="4517" width="108.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="166.95" y="4527.5" >`PROCESS-PARA..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.4" y="2709" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="412.44" y="2719.5" ></text>
</g>
<g >
<title>`core::lisp_true() (1 samples, 0.04%)</title><rect x="93.1" y="3317" width="0.4" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="96.08" y="3327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="2917" width="1.4" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="411.03" y="2927.5" ></text>
</g>
<g >
<title>`core::core__make_vector(gctools::smart_ptr&lt;core::T_O&gt;, unsigned (1 samples, 0.04%)</title><rect x="391.6" y="2229" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="394.60" y="2239.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (1 samples, 0.04%)</title><rect x="887.3" y="5733" width="0.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="890.26" y="5743.5" ></text>
</g>
<g >
<title>`CST-TO-AST^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="324.5" y="5077" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="327.48" y="5087.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="2133" width="4.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="279.60" y="2143.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (56 samples, 2.23%)</title><rect x="204.3" y="117" width="26.3" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="207.32" y="127.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (32 samples, 1.27%)</title><rect x="187.4" y="213" width="15.0" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="190.42" y="223.5" ></text>
</g>
<g >
<title>`COMPLETER-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (1 samples, 0.04%)</title><rect x="233.0" y="2213" width="0.4" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="235.95" y="2223.5" ></text>
</g>
<g >
<title>`LITERAL-DNODE-DATUM^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="673.2" y="5765" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="676.22" y="5775.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="251.3" y="3061" width="0.4" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="254.26" y="3071.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.08%)</title><rect x="294.0" y="4133" width="0.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="296.97" y="4143.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="421.6" y="2837" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="424.64" y="2847.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::addAttributes(llvm::LLVMContext&amp;, unsigned (1 samples, 0.04%)</title><rect x="686.4" y="5845" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="689.36" y="5855.5" ></text>
</g>
<g >
<title>`0x10c6cc104 (1 samples, 0.04%)</title><rect x="37.7" y="4645" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="40.69" y="4655.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="260.6" y="165" width="7.6" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="263.64" y="175.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.0" y="2117" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="411.97" y="2127.5" ></text>
</g>
<g >
<title>`llvm::SimplifyGEPInst(llvm::Type*, llvm::ArrayRef&lt;llvm::Value*&gt; (1 samples, 0.04%)</title><rect x="914.0" y="5845" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="917.01" y="5855.5" ></text>
</g>
<g >
<title>`llvm::ValueHandleBase::AddToUseList() (1 samples, 0.04%)</title><rect x="841.7" y="5845" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="844.73" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="244.7" y="645" width="2.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="247.69" y="655.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="183.2" y="181" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="186.20" y="191.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="395.4" y="4837" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="398.35" y="4847.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (19 samples, 0.76%)</title><rect x="259.2" y="1173" width="9.0" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="262.24" y="1183.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="859.6" y="5813" width="0.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="862.56" y="5823.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Instruction*, llvm::SmallPtrSet&lt;llvm::Poin (1 samples, 0.04%)</title><rect x="794.8" y="5845" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="797.79" y="5855.5" ></text>
</g>
<g >
<title>`core::Cache_O::vector_hash_key(gctools::Vec0&lt;gctools::smart_ptr (1 samples, 0.04%)</title><rect x="602.8" y="5461" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="605.82" y="5471.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T CST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="177.1" y="597" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="180.10" y="607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (305 samples, 12.13%)</title><rect x="130.2" y="5125" width="143.1" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="133.16" y="5135.5" >`INTERPRETED-DISCR..</text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (21 samples, 0.84%)</title><rect x="112.3" y="3861" width="9.9" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="115.32" y="3871.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="662.9" y="5573" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="665.90" y="5583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="36.8" y="3605" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="39.75" y="3615.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="384.6" y="4069" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="387.56" y="4079.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="452.6" y="5477" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="455.62" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1925" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="423.70" y="1935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="396.3" y="4501" width="3.7" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="399.29" y="4511.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="139.5" y="4325" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="142.55" y="4335.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="409.4" y="4165" width="1.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="412.44" y="4175.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (1 samples, 0.04%)</title><rect x="28.3" y="4965" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="31.31" y="4975.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::FindKey(llvm::StringRef) const (1 samples, 0.04%)</title><rect x="950.6" y="5845" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="953.62" y="5855.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.04%)</title><rect x="888.7" y="5749" width="0.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="891.66" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="396.3" y="4789" width="3.7" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="399.29" y="4799.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="808.9" y="5525" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="811.87" y="5535.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="294.0" y="5157" width="2.8" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="296.97" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (79 samples, 3.14%)</title><rect x="318.4" y="5637" width="37.1" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="321.38" y="5647.5" >`CO..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (63 samples, 2.51%)</title><rect x="133.9" y="4469" width="29.6" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="136.91" y="4479.5" >`c..</text>
</g>
<g >
<title>`MAKE-EXPRESSION-RESULT^ECLECTOR.PARSE-RESULT^((CST-CLIENT T T T (1 samples, 0.04%)</title><rect x="34.4" y="4405" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="37.41" y="4415.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (5 samples, 0.20%)</title><rect x="244.7" y="757" width="2.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="247.69" y="767.5" ></text>
</g>
<g >
<title>`SUBSTITUTE-INPUT^CLEAVIR-IR^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="507.5" y="5797" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="510.53" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="279.4" y="997" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="282.42" y="1007.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (3 samples, 0.12%)</title><rect x="165.8" y="2069" width="1.4" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="168.83" y="2079.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET*) T T T))^METH (4 samples, 0.16%)</title><rect x="247.5" y="693" width="1.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="250.50" y="703.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (3 samples, 0.12%)</title><rect x="285.5" y="965" width="1.4" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="288.52" y="975.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (23 samples, 0.91%)</title><rect x="16.6" y="4821" width="10.8" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="19.57" y="4831.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="423.0" y="2757" width="1.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="426.05" y="2767.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="5045" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="327.01" y="5055.5" ></text>
</g>
<g >
<title>`core::core__get_sysprop(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.04%)</title><rect x="233.0" y="2165" width="0.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="235.95" y="2175.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (1 samples, 0.04%)</title><rect x="427.3" y="789" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="430.27" y="799.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="386.0" y="3461" width="0.9" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="388.97" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2597" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="412.90" y="2607.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (178 samples, 7.08%)</title><rect x="167.2" y="4117" width="83.6" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="170.24" y="4127.5" >`core::cl..</text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="489.7" y="5781" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="492.70" y="5791.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (7 samples, 0.28%)</title><rect x="236.2" y="149" width="3.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="239.24" y="159.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="605.6" y="5461" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="608.63" y="5471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="172.4" y="709" width="5.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="175.40" y="719.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm:: (8 samples, 0.32%)</title><rect x="763.8" y="5781" width="3.8" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="766.81" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="49.9" y="5269" width="5.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="52.90" y="5279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1013" width="2.4" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="420.41" y="1023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="423.0" y="3925" width="10.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="426.05" y="3935.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="276.6" y="3877" width="4.7" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="279.60" y="3887.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="415.5" y="4005" width="0.5" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="418.54" y="4015.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="94.5" y="3573" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="97.49" y="3583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="428.7" y="1893" width="0.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="431.68" y="1903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="416.5" y="5013" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="419.48" y="5023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.3" y="3893" width="0.5" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="414.31" y="3903.5" ></text>
</g>
<g >
<title>`malloc_zone_realloc (1 samples, 0.04%)</title><rect x="719.7" y="5797" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="722.69" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="251.3" y="3333" width="0.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="254.26" y="3343.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="511.8" y="5685" width="1.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="514.76" y="5695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (58 samples, 2.31%)</title><rect x="100.1" y="4213" width="27.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="103.12" y="4223.5" >`..</text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="535.2" y="5765" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="538.23" y="5775.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (11 samples, 0.44%)</title><rect x="49.9" y="5333" width="5.2" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="52.90" y="5343.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.04%)</title><rect x="943.6" y="5765" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="946.58" y="5775.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilderBase_O::SetCurrentDebugLocationToLineColumnScop (1 samples, 0.04%)</title><rect x="616.0" y="5349" width="0.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="618.96" y="5359.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2085" width="1.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="127.53" y="2095.5" ></text>
</g>
<g >
<title>`SHARPSIGN-PLUS-MINUS^ECLECTOR.READER^FN^^ (3 samples, 0.12%)</title><rect x="19.9" y="3669" width="1.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="22.86" y="3679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="38.2" y="4277" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="41.16" y="4287.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="249.4" y="917" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="252.38" y="927.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::recordAvailableAnalysis(llvm::Pass*) (1 samples, 0.04%)</title><rect x="783.5" y="5877" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="786.52" y="5887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="3157" width="4.2" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="285.70" y="3167.5" ></text>
</g>
<g >
<title>`unw_init_local (1 samples, 0.04%)</title><rect x="40.5" y="4405" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="43.51" y="4415.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpIntrinsicWithConstant(llvm::ICmpIns (1 samples, 0.04%)</title><rect x="761.0" y="5813" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="763.99" y="5823.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="349.4" y="5285" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="352.36" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="233.9" y="1829" width="5.6" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="236.89" y="1839.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="40.5" y="4389" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="43.51" y="4399.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="2053" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="423.70" y="2063.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="380.8" y="4533" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="383.80" y="4543.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="322.1" y="5045" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="325.13" y="5055.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="243.3" y="1061" width="4.2" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="246.28" y="1071.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((FUNCALL-INSTRUCTIO (3 samples, 0.12%)</title><rect x="664.3" y="5653" width="1.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="667.30" y="5663.5" ></text>
</g>
<g >
<title>`IRC-SET-INSERT-POINT-BASIC-BLOCK^COMPILER^FN^^ (5 samples, 0.20%)</title><rect x="601.9" y="5493" width="2.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="604.88" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="409.0" y="1973" width="0.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="411.97" y="1983.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="894.8" y="5781" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="897.77" y="5791.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="2069" width="50.7" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="183.38" y="2079.5" >`CONV..</text>
</g>
<g >
<title>`PROCESS-LTV^CLASP-CLEAVIR-AST^FN^^ (70 samples, 2.78%)</title><rect x="318.8" y="5573" width="32.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="321.85" y="5583.5" >`P..</text>
</g>
<g >
<title>`llvm::DataLayout::getPointerPrefAlignment(unsigned int) const (1 samples, 0.04%)</title><rect x="903.7" y="5829" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="906.68" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="276.1" y="3957" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="279.13" y="3967.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="390.7" y="3429" width="1.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="393.66" y="3439.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (31 samples, 1.23%)</title><rect x="257.4" y="2373" width="14.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="260.36" y="2383.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="2613" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="414.78" y="2623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="381.7" y="4677" width="0.5" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="384.74" y="4687.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="649.8" y="5253" width="0.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="652.75" y="5263.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (2 samples, 0.08%)</title><rect x="843.1" y="5797" width="1.0" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="846.13" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="427.3" y="3637" width="4.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="430.27" y="3647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="337.2" y="4389" width="0.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="340.15" y="4399.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="390.7" y="2997" width="1.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="393.66" y="3007.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.0" y="1509" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="426.99" y="1519.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="410.4" y="3413" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="413.37" y="3423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="427.3" y="2229" width="0.9" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="430.27" y="2239.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (41 samples, 1.63%)</title><rect x="469.5" y="5653" width="19.3" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="472.51" y="5663.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::removeDeadPasses(llvm::Pass*, llvm::String (8 samples, 0.32%)</title><rect x="792.9" y="5893" width="3.8" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="795.91" y="5903.5" ></text>
</g>
<g >
<title>`small_malloc_from_free_list (1 samples, 0.04%)</title><rect x="693.4" y="5653" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="696.40" y="5663.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.08%)</title><rect x="646.5" y="5349" width="0.9" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="649.47" y="5359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="268.2" y="1765" width="3.7" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="271.15" y="1775.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (5 samples, 0.20%)</title><rect x="748.8" y="5781" width="2.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="751.79" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="401.0" y="2709" width="0.9" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="403.99" y="2719.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3845" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="415.25" y="3855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="414.1" y="3701" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="417.13" y="3711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="278.9" y="917" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="281.95" y="927.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="125.9" y="2373" width="1.0" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="128.93" y="2383.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="423.5" y="1909" width="1.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="426.52" y="1919.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="307.6" y="5797" width="0.5" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="310.58" y="5807.5" ></text>
</g>
<g >
<title>`IRC-CALCULATE-ENTRY^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="664.3" y="5605" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="667.30" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1269" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="428.86" y="1279.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="171.9" y="1573" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="174.93" y="1583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="2293" width="3.8" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="420.41" y="2303.5" ></text>
</g>
<g >
<title>`HIR-&gt;MIR^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="315.1" y="5365" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="318.09" y="5375.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.04%)</title><rect x="653.0" y="5461" width="0.5" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="656.04" y="5471.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="416.0" y="4725" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="419.01" y="4735.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Instruction*, unsigned int, llvm::DenseMap (1 samples, 0.04%)</title><rect x="866.1" y="5845" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="869.13" y="5855.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (2 samples, 0.08%)</title><rect x="283.6" y="1093" width="1.0" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="286.64" y="1103.5" ></text>
</g>
<g >
<title>`core::Cons_O::copyList() const (1 samples, 0.04%)</title><rect x="951.6" y="5877" width="0.4" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="954.56" y="5887.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="123.1" y="2517" width="1.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="126.12" y="2527.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="240.5" y="3349" width="10.3" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="243.46" y="3359.5" ></text>
</g>
<g >
<title>`GC_help_marker (485 samples, 19.29%)</title><rect x="962.4" y="6357" width="227.6" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="965.35" y="6367.5" >`GC_help_marker</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="4229" width="5.6" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="284.30" y="4239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="85.1" y="4885" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="88.10" y="4895.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="42.4" y="4597" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="45.39" y="4607.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (20 samples, 0.80%)</title><rect x="886.8" y="5829" width="9.4" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="889.79" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="2469" width="5.6" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="236.89" y="2479.5" ></text>
</g>
<g >
<title>`core::generic_write_vector(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="30.2" y="4981" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="33.18" y="4991.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="281.3" y="3269" width="1.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="284.30" y="3279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="34.4" y="4965" width="0.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="37.41" y="4975.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="231.5" y="3461" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="234.54" y="3471.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.04%)</title><rect x="921.1" y="5861" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="924.05" y="5871.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (304 samples, 12.09%)</title><rect x="130.6" y="4661" width="142.7" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="133.63" y="4671.5" >`CONVERT-CODE^CLEA..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="294.0" y="4693" width="2.8" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="296.97" y="4703.5" ></text>
</g>
<g >
<title>`MAKE-EXPRESSION-RESULT^ECLECTOR.PARSE-RESULT^((CST-CLIENT T T T (3 samples, 0.12%)</title><rect x="47.1" y="5525" width="1.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="50.08" y="5535.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="414.1" y="3493" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="417.13" y="3503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (40 samples, 1.59%)</title><rect x="232.0" y="3669" width="18.8" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="235.01" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="401.9" y="4197" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="404.93" y="4207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3205" width="3.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="420.41" y="3215.5" ></text>
</g>
<g >
<title>`BASIC-BLOCKS^CLEAVIR-BASIC-BLOCKS^FN^^ (1 samples, 0.04%)</title><rect x="330.6" y="4485" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="333.58" y="4495.5" ></text>
</g>
<g >
<title>`unsigned int llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorT (1 samples, 0.04%)</title><rect x="800.0" y="5845" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="802.95" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="2149" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="423.70" y="2159.5" ></text>
</g>
<g >
<title>`wrapped_Create_llvm__LLVMContext_const_llvm__Twine_llvm__Functi (1 samples, 0.04%)</title><rect x="350.8" y="5333" width="0.4" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="353.76" y="5343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="3093" width="4.2" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="285.70" y="3103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="277.1" y="837" width="1.8" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="280.07" y="847.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="410.8" y="4501" width="1.9" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="413.84" y="4511.5" ></text>
</g>
<g >
<title>`llvm::scc_iterator&lt;llvm::CallGraph*, llvm::GraphTraits&lt;llvm::Ca (1 samples, 0.04%)</title><rect x="840.8" y="5909" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="843.79" y="5919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="410.8" y="4885" width="1.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="413.84" y="4895.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CastGEPIndices(llvm::Type*, llvm::ArrayR (1 samples, 0.04%)</title><rect x="724.9" y="5813" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="727.85" y="5823.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.04%)</title><rect x="496.3" y="5653" width="0.4" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="499.27" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="2341" width="1.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="427.92" y="2351.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (4 samples, 0.16%)</title><rect x="590.6" y="5749" width="1.9" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="593.61" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="36.3" y="4053" width="1.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="39.28" y="4063.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (3 samples, 0.12%)</title><rect x="18.4" y="3493" width="1.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="21.45" y="3503.5" ></text>
</g>
<g >
<title>`llvm::PointerType::get(llvm::Type*, unsigned int) (1 samples, 0.04%)</title><rect x="891.9" y="5669" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="894.95" y="5679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="56.0" y="5685" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="59.00" y="5695.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.04%)</title><rect x="322.1" y="4997" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="325.13" y="5007.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="581.7" y="5797" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="584.69" y="5807.5" ></text>
</g>
<g >
<title>`ADD-CREATOR^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="323.5" y="5269" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="326.54" y="5279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="112.3" y="3797" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="115.32" y="3807.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="165.8" y="1397" width="1.0" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="168.83" y="1407.5" ></text>
</g>
<g >
<title>0x11a477094 (4 samples, 0.16%)</title><rect x="168.2" y="1397" width="1.9" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="171.18" y="1407.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="393.5" y="4021" width="0.9" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="396.48" y="4031.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="415.5" y="4853" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="418.54" y="4863.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="656.8" y="5477" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="659.79" y="5487.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="424.9" y="2149" width="1.0" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="427.92" y="2159.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="124.5" y="1589" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="127.53" y="1599.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.04%)</title><rect x="366.3" y="5701" width="0.4" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="369.25" y="5711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="2213" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="412.90" y="2223.5" ></text>
</g>
<g >
<title>`std::__1::enable_if&lt;!(std::is_array&lt;llvm::MemoryDef&gt;::value), s (1 samples, 0.04%)</title><rect x="791.0" y="5861" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="794.03" y="5871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="268.6" y="1189" width="3.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="271.62" y="1199.5" ></text>
</g>
<g >
<title>`core::clasp_make_string_output_stream(long long, bool) (1 samples, 0.04%)</title><rect x="39.6" y="4101" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="42.57" y="4111.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="400.5" y="3845" width="1.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="403.52" y="3855.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="124.5" y="1861" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="127.53" y="1871.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (4 samples, 0.16%)</title><rect x="562.5" y="5813" width="1.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="565.45" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="240.0" y="2885" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="242.99" y="2895.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="38.2" y="4485" width="0.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="41.16" y="4495.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="622.5" y="5221" width="1.0" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="625.53" y="5231.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass* (1 samples, 0.04%)</title><rect x="713.1" y="5813" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="716.12" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="413.7" y="4629" width="1.8" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="416.66" y="4639.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="382.2" y="3957" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="385.21" y="3967.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="853.5" y="5797" width="0.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="856.46" y="5807.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (3 samples, 0.12%)</title><rect x="566.7" y="5749" width="1.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="569.67" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="416.5" y="5077" width="0.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="419.48" y="5087.5" ></text>
</g>
<g >
<title>`instructionClobbersQuery(llvm::MemoryDef*, llvm::MemoryLocation (2 samples, 0.08%)</title><rect x="787.7" y="5813" width="1.0" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="790.75" y="5823.5" ></text>
</g>
<g >
<title>`llvm::MemoryLocation::operator==(llvm::MemoryLocation const&amp;) c (1 samples, 0.04%)</title><rect x="809.8" y="5637" width="0.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="812.81" y="5647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="410.8" y="4405" width="1.9" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="413.84" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="380.3" y="4469" width="0.5" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="383.33" y="4479.5" ></text>
</g>
<g >
<title>`HOIST-LOAD-TIME-VALUE^CLASP-CLEAVIR-AST^FN^^ (1 samples, 0.04%)</title><rect x="334.3" y="4549" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="337.34" y="4559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="251.3" y="3909" width="0.9" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="254.26" y="3919.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="125.9" y="2677" width="1.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="128.93" y="2687.5" ></text>
</g>
<g >
<title>`llvm::JumpThreadingPass::ProcessThreadableEdges(llvm::Value*, l (4 samples, 0.16%)</title><rect x="700.9" y="5845" width="1.9" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="703.91" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="165.4" y="3205" width="1.8" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="168.36" y="3215.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (4 samples, 0.16%)</title><rect x="400.0" y="4213" width="1.9" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="403.05" y="4223.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (1 samples, 0.04%)</title><rect x="800.0" y="5861" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="802.95" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="268.6" y="1589" width="3.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="271.62" y="1599.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="661.0" y="5461" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="664.02" y="5471.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (14 samples, 0.56%)</title><rect x="91.7" y="3829" width="6.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="94.67" y="3839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="412.3" y="3509" width="0.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="415.25" y="3519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="423.0" y="2789" width="1.5" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="426.05" y="2799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="423.0" y="3861" width="4.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="426.05" y="3871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="37.7" y="4757" width="5.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="40.69" y="4767.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="424.9" y="3221" width="1.0" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="427.92" y="3231.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="2981" width="1.0" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="424.64" y="2991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.0" y="4949" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="419.01" y="4959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1189" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="427.92" y="1199.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;std::__1::pair&lt;llvm::WeakTrackingVH, llvm (1 samples, 0.04%)</title><rect x="841.7" y="5861" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="844.73" y="5871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="321.7" y="5397" width="1.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="324.66" y="5407.5" ></text>
</g>
<g >
<title>`MAKE-FUNCTION-INFO^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="596.7" y="5813" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="599.71" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="166.3" y="1013" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="169.30" y="1023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="427.3" y="2069" width="0.9" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="430.27" y="2079.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="393.5" y="4229" width="0.9" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="396.48" y="4239.5" ></text>
</g>
<g >
<title>`wrapped_cl__error_T_spList_sp (1 samples, 0.04%)</title><rect x="94.0" y="3621" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="97.02" y="3631.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (3 samples, 0.12%)</title><rect x="655.4" y="5509" width="1.4" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="658.39" y="5519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="789" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="423.70" y="799.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (15 samples, 0.60%)</title><rect x="243.3" y="1221" width="7.0" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="246.28" y="1231.5" ></text>
</g>
<g >
<title>`CONVERT-LET*^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="235.3" y="741" width="4.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="238.30" y="751.5" ></text>
</g>
<g >
<title>`CST-FROM-ELEMENT^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="5029" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="327.01" y="5039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (23 samples, 0.91%)</title><rect x="276.1" y="4949" width="10.8" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="279.13" y="4959.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="122.6" y="3173" width="1.9" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="125.65" y="3183.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="276.6" y="1157" width="2.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="279.60" y="1167.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="34.4" y="5429" width="10.3" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="37.41" y="5439.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="254.1" y="3237" width="1.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="257.07" y="3247.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.08%)</title><rect x="421.6" y="3269" width="1.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="424.64" y="3279.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (1 samples, 0.04%)</title><rect x="454.5" y="5685" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="457.49" y="5695.5" ></text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (1 samples, 0.04%)</title><rect x="625.8" y="5189" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="628.82" y="5199.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="3573" width="1.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="411.03" y="3583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1173" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="430.27" y="1183.5" ></text>
</g>
<g >
<title>`ALL-EQL-SPECIALIZED-P^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="130.6" y="4549" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="133.63" y="4559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.0" y="1541" width="0.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="434.96" y="1551.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="281.3" y="3333" width="1.4" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="284.30" y="3343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="314.6" y="5189" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="317.62" y="5199.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.7" y="949" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="430.74" y="959.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((NULL))^METHOD^^ (1 samples, 0.04%)</title><rect x="298.7" y="5509" width="0.4" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="301.66" y="5519.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (1 samples, 0.04%)</title><rect x="44.3" y="5077" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="47.26" y="5087.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="637.1" y="5349" width="0.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="640.08" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'FUNCTION) T T T))^ (8 samples, 0.32%)</title><rect x="268.2" y="1733" width="3.7" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="271.15" y="1743.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="652.6" y="5413" width="0.4" height="15.0" fill="rgb(206,58,58)" rx="2" ry="2" />
<text  x="655.57" y="5423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="421.6" y="2629" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="424.64" y="2639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CDR-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="430.6" y="1605" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="433.56" y="1615.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (SINGLETON-PARAMETER- (2 samples, 0.08%)</title><rect x="113.7" y="3573" width="1.0" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="116.73" y="3583.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (1 samples, 0.04%)</title><rect x="278.9" y="821" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="281.95" y="831.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="670.9" y="5765" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="673.88" y="5775.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="135.8" y="4197" width="0.5" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="138.79" y="4207.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="413.7" y="4213" width="0.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="416.66" y="4223.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="100.6" y="3765" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="103.59" y="3775.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (10 samples, 0.40%)</title><rect x="276.6" y="3925" width="4.7" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="279.60" y="3935.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.04%)</title><rect x="287.4" y="4709" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="290.40" y="4719.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (11 samples, 0.44%)</title><rect x="417.4" y="4373" width="5.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="420.41" y="4383.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="137.7" y="4229" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="140.67" y="4239.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.4" y="2725" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="412.44" y="2735.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="295.4" y="3397" width="1.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="298.38" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1685" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="428.86" y="1695.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="165.8" y="1381" width="1.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="168.83" y="1391.5" ></text>
</g>
<g >
<title>`intersect(llvm::ValueLatticeElement const&amp;, llvm::ValueLatticeE (1 samples, 0.04%)</title><rect x="702.3" y="5765" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="705.32" y="5775.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="381.3" y="4613" width="0.4" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="384.27" y="4623.5" ></text>
</g>
<g >
<title>`SHARPSIGN-PLUS^ECLECTOR.READER^FN^^ (12 samples, 0.48%)</title><rect x="49.9" y="5701" width="5.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="52.90" y="5711.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'FUNCTION) T T T))^ (4 samples, 0.16%)</title><rect x="254.1" y="3429" width="1.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="257.07" y="3439.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (5 samples, 0.20%)</title><rect x="63.5" y="5013" width="2.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="66.51" y="5023.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorTemplateBase&lt;llvm::Instruction*, true&gt;::push_b (1 samples, 0.04%)</title><rect x="778.4" y="5861" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="781.36" y="5871.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getEdgeValue(llvm::Va (2 samples, 0.08%)</title><rect x="702.8" y="5797" width="0.9" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="705.79" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="417.9" y="117" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="420.88" y="127.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="675.1" y="5797" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="678.10" y="5807.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="320.3" y="5269" width="0.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="323.25" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T CONSTANT-VARIABLE-INFO T T)) (1 samples, 0.04%)</title><rect x="297.3" y="5173" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="300.26" y="5183.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="386.0" y="3269" width="0.4" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="388.97" y="3279.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (77 samples, 3.06%)</title><rect x="12.8" y="5621" width="36.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="15.82" y="5631.5" >`co..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="123.6" y="1957" width="0.9" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="126.59" y="1967.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (13 samples, 0.52%)</title><rect x="388.3" y="4437" width="6.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="391.31" y="4447.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="2357" width="1.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="168.83" y="2367.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (5 samples, 0.20%)</title><rect x="614.1" y="5397" width="2.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="617.08" y="5407.5" ></text>
</g>
<g >
<title>`PHIsEqualValue(llvm::PHINode*, llvm::Value*, llvm::SmallPtrSetI (1 samples, 0.04%)</title><rect x="774.1" y="5829" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="777.14" y="5839.5" ></text>
</g>
<g >
<title>`IRC-SET-INSERT-POINT-BASIC-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="670.4" y="5813" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="673.41" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="425.9" y="2981" width="0.9" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="428.86" y="2991.5" ></text>
</g>
<g >
<title>`MAKE-TEMPS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="402.9" y="5061" width="0.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="405.86" y="5071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="430.6" y="2389" width="0.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="433.56" y="2399.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="356.4" y="5429" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="359.40" y="5439.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (64 samples, 2.55%)</title><rect x="321.7" y="5477" width="30.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="324.66" y="5487.5" >`L..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="178.0" y="2405" width="2.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="181.04" y="2415.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="429.6" y="1621" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="432.62" y="1631.5" ></text>
</g>
<g >
<title>`MAKE-FIXED-TO-MULTIPLE-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="406.6" y="5685" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="409.62" y="5695.5" ></text>
</g>
<g >
<title>`GC_build_fl (2 samples, 0.08%)</title><rect x="550.2" y="5733" width="1.0" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="553.25" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="431.5" y="3621" width="1.9" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="434.50" y="3631.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::ImmutableCallSite, llvm::M (7 samples, 0.28%)</title><rect x="764.3" y="5765" width="3.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="767.28" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (35 samples, 1.39%)</title><rect x="417.4" y="4853" width="16.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="420.41" y="4863.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="1301" width="5.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="236.89" y="1311.5" ></text>
</g>
<g >
<title>`ITEMIZE-LAMBDA-LIST^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="131.6" y="4629" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="134.57" y="4639.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="260.6" y="181" width="7.6" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="263.64" y="191.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="427.3" y="1157" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="430.27" y="1167.5" ></text>
</g>
<g >
<title>`llvm::APInt::clearUnusedBits() (1 samples, 0.04%)</title><rect x="909.3" y="5733" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="912.32" y="5743.5" ></text>
</g>
<g >
<title>`vsprintf_l (1 samples, 0.04%)</title><rect x="402.9" y="4949" width="0.4" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="405.86" y="4959.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (6 samples, 0.24%)</title><rect x="88.9" y="3941" width="2.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="91.85" y="3951.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="104.8" y="3493" width="1.4" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="107.81" y="3503.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (41 samples, 1.63%)</title><rect x="469.5" y="5765" width="19.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="472.51" y="5775.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (20 samples, 0.80%)</title><rect x="16.6" y="4469" width="9.4" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="19.57" y="4479.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (31 samples, 1.23%)</title><rect x="257.4" y="2805" width="14.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="260.36" y="2815.5" ></text>
</g>
<g >
<title>`core::cl__truename(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="953.0" y="5957" width="0.4" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="955.97" y="5967.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="36.3" y="3829" width="0.9" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="39.28" y="3839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="423.0" y="3045" width="1.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="426.05" y="3055.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="254.1" y="3221" width="1.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="257.07" y="3231.5" ></text>
</g>
<g >
<title>`eliminateLoadsAcrossLoops(llvm::Function&amp;, llvm::LoopInfo&amp;, llv (1 samples, 0.04%)</title><rect x="846.4" y="5877" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="849.42" y="5887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="260.2" y="133" width="0.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="263.18" y="143.5" ></text>
</g>
<g >
<title>`runIPSCCP(llvm::Module&amp;, llvm::DataLayout const&amp;, llvm::TargetL (10 samples, 0.40%)</title><rect x="944.0" y="5925" width="4.7" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="947.05" y="5935.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.04%)</title><rect x="295.8" y="2133" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="298.85" y="2143.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1:: (1 samples, 0.04%)</title><rect x="246.1" y="421" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="249.09" y="431.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="276.1" y="3797" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="279.13" y="3807.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;std::__1::pair&lt;llvm::Type*, u (1 samples, 0.04%)</title><rect x="355.0" y="5493" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="357.99" y="5503.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="100.6" y="3749" width="0.5" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="103.59" y="3759.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="52.7" y="3749" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="55.71" y="3759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="294.9" y="3845" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="297.91" y="3855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="424.9" y="2709" width="1.0" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="427.92" y="2719.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="723.0" y="5813" width="0.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="725.98" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="287.4" y="5429" width="1.4" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="290.40" y="5439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="165.4" y="3925" width="1.8" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="168.36" y="3935.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (27 samples, 1.07%)</title><rect x="16.6" y="5061" width="12.6" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="19.57" y="5071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1349" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="427.92" y="1359.5" ></text>
</g>
<g >
<title>`llvm::isSafeToSpeculativelyExecute(llvm::Value const*, llvm::In (1 samples, 0.04%)</title><rect x="933.3" y="5813" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="936.25" y="5823.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.08%)</title><rect x="561.5" y="5781" width="1.0" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="564.51" y="5791.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeWrapperPass::runOnFunction(llvm::Function&amp;) (8 samples, 0.32%)</title><rect x="853.9" y="5893" width="3.8" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="856.93" y="5903.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedBits(llvm::Instruction*, un (3 samples, 0.12%)</title><rect x="900.9" y="5813" width="1.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="903.87" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-FILE-TO-MODULE^COMPILER^FN^^ (2,000 samples, 79.55%)</title><rect x="10.0" y="6037" width="938.7" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="13.00" y="6047.5" >`COMPILE-FILE-TO-MODULE^COMPILER^FN^^</text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="577.9" y="5749" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="580.94" y="5759.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="424.0" y="1461" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="426.99" y="1471.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.9" y="5061" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="327.95" y="5071.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const (1 samples, 0.04%)</title><rect x="922.0" y="5845" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="924.99" y="5855.5" ></text>
</g>
<g >
<title>`ADD-SIDE-EFFECT-CALL^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="317.9" y="5653" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="320.91" y="5663.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.04%)</title><rect x="553.1" y="5717" width="0.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="556.06" y="5727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="389.7" y="3749" width="2.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="392.72" y="3759.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="55.1" y="5589" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="58.06" y="5599.5" ></text>
</g>
<g >
<title>`llvm::DenseMapInfo&lt;std::__1::pair&lt;llvm::Value*, unsigned int&gt; &gt; (1 samples, 0.04%)</title><rect x="946.4" y="5845" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="949.40" y="5855.5" ></text>
</g>
<g >
<title>`llvm::GVN::iterateOnFunction(llvm::Function&amp;) (68 samples, 2.70%)</title><rect x="801.4" y="5861" width="31.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="804.36" y="5871.5" >`l..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="294.0" y="4789" width="2.8" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="296.97" y="4799.5" ></text>
</g>
<g >
<title>`POSITION-IF-NOT^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="789" width="0.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="171.18" y="799.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="122.2" y="3845" width="5.1" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="125.18" y="3855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="417.4" y="2165" width="3.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="420.41" y="2175.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="3301" width="0.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="414.78" y="3311.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="960.5" y="5797" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="963.48" y="5807.5" ></text>
</g>
<g >
<title>`unw_init_local (1 samples, 0.04%)</title><rect x="49.0" y="5653" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="51.96" y="5663.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::getHash() const (1 samples, 0.04%)</title><rect x="752.1" y="5637" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="755.08" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5205" width="0.9" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="408.21" y="5215.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="417.9" y="341" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="420.88" y="351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1605" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="428.86" y="1615.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction*, unsi (1 samples, 0.04%)</title><rect x="730.0" y="5845" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="733.02" y="5855.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="329.2" y="4373" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="332.17" y="4383.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="125.9" y="2437" width="1.0" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="128.93" y="2447.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (2 samples, 0.08%)</title><rect x="24.6" y="4149" width="0.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="27.55" y="4159.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (87 samples, 3.46%)</title><rect x="86.5" y="5093" width="40.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="89.51" y="5103.5" >`IN..</text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DILocation*, llvm: (3 samples, 0.12%)</title><rect x="614.6" y="5285" width="1.4" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="617.55" y="5295.5" ></text>
</g>
<g >
<title>`llvm::APInt::clearUnusedBits() (1 samples, 0.04%)</title><rect x="666.2" y="5429" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="669.18" y="5439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1909" width="5.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="236.89" y="1919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="165.4" y="2677" width="0.4" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="168.36" y="2687.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (41 samples, 1.63%)</title><rect x="325.4" y="4965" width="19.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="328.42" y="4975.5" ></text>
</g>
<g >
<title>`SPECIALIZE^CLEAVIR-HIR-TO-MIR^((:AROUND) (T T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="454.5" y="5845" width="1.9" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="457.49" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (340 samples, 13.52%)</title><rect x="129.2" y="5557" width="159.6" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="132.22" y="5567.5" >`core::clos__interpr..</text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (4 samples, 0.16%)</title><rect x="390.2" y="3477" width="1.9" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="393.19" y="3487.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (3 samples, 0.12%)</title><rect x="887.3" y="5797" width="1.4" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="890.26" y="5807.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="633.3" y="5269" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="636.33" y="5279.5" ></text>
</g>
<g >
<title>0x1225e5094 (10 samples, 0.40%)</title><rect x="276.6" y="4069" width="4.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="279.60" y="4079.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="123.1" y="2309" width="1.4" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="126.12" y="2319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="295.4" y="3605" width="1.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="298.38" y="3615.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (32 samples, 1.27%)</title><rect x="112.3" y="3925" width="15.0" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="115.32" y="3935.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="327.8" y="4453" width="0.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="330.76" y="4463.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::ImmutableCallSite, llvm::M (1 samples, 0.04%)</title><rect x="787.7" y="5781" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="790.75" y="5791.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="418.4" y="805" width="0.4" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="421.35" y="815.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="295.4" y="2549" width="0.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="298.38" y="2559.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="164.0" y="4261" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="166.95" y="4271.5" ></text>
</g>
<g >
<title>0x1225e9094 (19 samples, 0.76%)</title><rect x="259.2" y="1365" width="9.0" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="262.24" y="1375.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (63 samples, 2.51%)</title><rect x="133.9" y="4533" width="29.6" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="136.91" y="4543.5" >`c..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (40 samples, 1.59%)</title><rect x="232.0" y="3477" width="18.8" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="235.01" y="3487.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (1 samples, 0.04%)</title><rect x="700.0" y="5829" width="0.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="702.98" y="5839.5" ></text>
</g>
<g >
<title>`llvm::CompositeType::getTypeAtIndex(llvm::Value const*) const (1 samples, 0.04%)</title><rect x="868.9" y="5765" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="871.95" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="2133" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="412.90" y="2143.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="416.5" y="4501" width="0.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="419.48" y="4511.5" ></text>
</g>
<g >
<title>`core::Str8Ns_O::make(unsigned long, unsigned char, bool, gctool (1 samples, 0.04%)</title><rect x="44.7" y="5205" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="47.73" y="5215.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="49.9" y="4757" width="0.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="52.90" y="4767.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="714.1" y="5829" width="0.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="717.06" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="279.4" y="837" width="1.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="282.42" y="847.5" ></text>
</g>
<g >
<title>`llvm::SmallVector&lt;llvm::Value const*, 4u&gt;::SmallVector&lt;llvm::Us (1 samples, 0.04%)</title><rect x="919.6" y="5813" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="922.64" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="412.7" y="5029" width="1.0" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="415.72" y="5039.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="661.0" y="5477" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="664.02" y="5487.5" ></text>
</g>
<g >
<title>0x1225e5094 (2 samples, 0.08%)</title><rect x="251.3" y="3717" width="0.9" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="254.26" y="3727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="1269" width="5.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="236.89" y="1279.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="320.3" y="5333" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="323.25" y="5343.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.04%)</title><rect x="747.4" y="5733" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="750.38" y="5743.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="654.0" y="5477" width="0.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="656.98" y="5487.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="295.4" y="3013" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="298.38" y="3023.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (1 samples, 0.04%)</title><rect x="278.9" y="357" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="281.95" y="367.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (56 samples, 2.23%)</title><rect x="407.6" y="5301" width="26.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="410.56" y="5311.5" >`..</text>
</g>
<g >
<title>`core::synonym_write_char(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="948.7" y="5957" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="951.74" y="5967.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="635.2" y="5349" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="638.20" y="5359.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (65 samples, 2.59%)</title><rect x="133.0" y="4613" width="30.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="135.98" y="4623.5" >`P..</text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="165.4" y="3077" width="1.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="168.36" y="3087.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="398.6" y="3301" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="401.64" y="3311.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="758.6" y="5621" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="761.65" y="5631.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="242.8" y="2085" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="245.81" y="2095.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="234.8" y="389" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="237.83" y="399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="231.5" y="3525" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="234.54" y="3535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1189" width="0.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="430.27" y="1199.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.04%)</title><rect x="301.0" y="5813" width="0.5" height="15.0" fill="rgb(215,73,73)" rx="2" ry="2" />
<text  x="304.01" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.4" y="2581" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="412.44" y="2591.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (4 samples, 0.16%)</title><rect x="52.7" y="4117" width="1.9" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="55.71" y="4127.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (100 samples, 3.98%)</title><rect x="310.4" y="5829" width="46.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="313.40" y="5839.5" >`LOA..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="55.1" y="5573" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="58.06" y="5583.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="594.8" y="5797" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="597.84" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="1509" width="5.6" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="236.89" y="1519.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="384.1" y="4645" width="10.3" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="387.09" y="4655.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (57 samples, 2.27%)</title><rect x="204.3" y="405" width="26.8" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="207.32" y="415.5" >`..</text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="326.8" y="4629" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="329.83" y="4639.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="321.7" y="5269" width="1.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="324.66" y="5279.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.04%)</title><rect x="319.8" y="5269" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="322.79" y="5279.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="91.7" y="3653" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="94.67" y="3663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="92.1" y="3237" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="95.14" y="3247.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (145 samples, 5.77%)</title><rect x="59.8" y="5669" width="68.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="62.75" y="5679.5" >`core::..</text>
</g>
<g >
<title>`llvm::MDNodeKeyImpl&lt;llvm::DILocation&gt;::isKeyOf(llvm::DILocation (1 samples, 0.04%)</title><rect x="620.2" y="5125" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="623.18" y="5135.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.08%)</title><rect x="519.3" y="5781" width="0.9" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="522.27" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (138 samples, 5.49%)</title><rect x="167.2" y="4085" width="64.8" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="170.24" y="4095.5" >`core::..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="1653" width="9.0" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="262.24" y="1663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="123.6" y="1269" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="126.59" y="1279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="2453" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="412.90" y="2463.5" ></text>
</g>
<g >
<title>`unsigned int llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorT (2 samples, 0.08%)</title><rect x="719.7" y="5861" width="0.9" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="722.69" y="5871.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.04%)</title><rect x="322.1" y="5013" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="325.13" y="5023.5" ></text>
</g>
<g >
<title>`ALLOCA-SIZE_T^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="320.7" y="5301" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="323.72" y="5311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="172.4" y="501" width="4.7" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="175.40" y="511.5" ></text>
</g>
<g >
<title>`CONVERT-VARIABLE^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="125.5" y="1893" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="128.47" y="1903.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="123.6" y="1893" width="0.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="126.59" y="1903.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="3605" width="4.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="430.27" y="3615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="400.5" y="4021" width="1.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="403.52" y="4031.5" ></text>
</g>
<g >
<title>0x1225e9094 (15 samples, 0.60%)</title><rect x="232.5" y="3125" width="7.0" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="235.48" y="3135.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (94 samples, 3.74%)</title><rect x="12.3" y="5797" width="44.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="15.35" y="5807.5" >`REA..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="398.2" y="3589" width="0.9" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="401.17" y="3599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (25 samples, 0.99%)</title><rect x="100.6" y="3829" width="11.7" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="103.59" y="3839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="4261" width="1.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="411.03" y="4271.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="3173" width="0.5" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="412.90" y="3183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="452.6" y="5701" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="455.62" y="5711.5" ></text>
</g>
<g >
<title>`COMPLETER-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (4 samples, 0.16%)</title><rect x="114.7" y="3605" width="1.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="117.67" y="3615.5" ></text>
</g>
<g >
<title>`ThreadCmpOverSelect(llvm::CmpInst::Predicate, llvm::Value*, llv (4 samples, 0.16%)</title><rect x="825.3" y="5781" width="1.9" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="828.30" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="425.9" y="3237" width="0.9" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="428.86" y="3247.5" ></text>
</g>
<g >
<title>`SIGNAL^COMMON-LISP^FN^^ (2 samples, 0.08%)</title><rect x="33.5" y="5461" width="0.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="36.47" y="5471.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="647.9" y="5269" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="650.88" y="5279.5" ></text>
</g>
<g >
<title>0x1225e5094 (6 samples, 0.24%)</title><rect x="294.0" y="5045" width="2.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="296.97" y="5055.5" ></text>
</g>
<g >
<title>`llvm::APInt::isMinSignedValue() const (1 samples, 0.04%)</title><rect x="760.5" y="5813" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="763.53" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="51.3" y="4869" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="54.30" y="4879.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="125.9" y="2149" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="128.93" y="2159.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="328.7" y="4437" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="331.70" y="4447.5" ></text>
</g>
<g >
<title>`DATUM-KIND^LITERAL^FN^^ (3 samples, 0.12%)</title><rect x="310.4" y="5813" width="1.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="313.40" y="5823.5" ></text>
</g>
<g >
<title>`wrapped_core__make_vector_T_sp_________________________________ (1 samples, 0.04%)</title><rect x="55.1" y="5349" width="0.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="58.06" y="5359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="295.4" y="2997" width="0.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="298.38" y="3007.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="337.6" y="4485" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="340.62" y="4495.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="276.6" y="1029" width="2.8" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="279.60" y="1039.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="605.6" y="5413" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="608.63" y="5423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="168.2" y="1349" width="1.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="171.18" y="1359.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="1589" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="423.70" y="1599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="168.2" y="1237" width="1.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="171.18" y="1247.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="427.3" y="2053" width="0.9" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="430.27" y="2063.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="431.5" y="3221" width="1.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="434.50" y="3231.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (29 samples, 1.15%)</title><rect x="15.6" y="5109" width="13.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="18.63" y="5119.5" ></text>
</g>
<g >
<title>`LIST*^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="664.8" y="5605" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="667.77" y="5615.5" ></text>
</g>
<g >
<title>`OF-CLASS-P^CORE^FN^^ (1 samples, 0.04%)</title><rect x="340.0" y="4549" width="0.4" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="342.97" y="4559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (58 samples, 2.31%)</title><rect x="100.1" y="4293" width="27.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="103.12" y="4303.5" >`..</text>
</g>
<g >
<title>`PHIsEqualValue(llvm::PHINode*, llvm::Value*, llvm::SmallPtrSetI (1 samples, 0.04%)</title><rect x="774.1" y="5813" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="777.14" y="5823.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (3 samples, 0.12%)</title><rect x="202.9" y="917" width="1.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="205.91" y="927.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ENTER-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="386.0" y="2933" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="388.97" y="2943.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="36.8" y="3493" width="0.4" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="39.75" y="3503.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="272.4" y="4565" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="275.38" y="4575.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="789.2" y="5701" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="792.16" y="5711.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (6 samples, 0.24%)</title><rect x="52.2" y="4229" width="2.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="55.24" y="4239.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.08%)</title><rect x="233.0" y="2469" width="0.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="235.95" y="2479.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (2 samples, 0.08%)</title><rect x="491.6" y="5749" width="0.9" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="494.58" y="5759.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="597.7" y="5717" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="600.65" y="5727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="424.9" y="3029" width="1.0" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="427.92" y="3039.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (10 samples, 0.40%)</title><rect x="172.4" y="405" width="4.7" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="175.40" y="415.5" ></text>
</g>
<g >
<title>`main (2,028 samples, 80.67%)</title><rect x="10.0" y="6389" width="951.9" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="13.00" y="6399.5" >`main</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="424.0" y="1573" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="426.99" y="1583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="424.9" y="1125" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="427.92" y="1135.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="49.9" y="4565" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="52.90" y="4575.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="122.2" y="3781" width="5.1" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="125.18" y="3791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="276.6" y="4021" width="4.7" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="279.60" y="4031.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="314.6" y="5045" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="317.62" y="5055.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="247.5" y="437" width="1.9" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="250.50" y="447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="421.2" y="4085" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="424.17" y="4095.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.08%)</title><rect x="401.0" y="3381" width="0.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="403.99" y="3391.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="281.3" y="3893" width="5.6" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="284.30" y="3903.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3413" width="0.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="254.26" y="3423.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (10 samples, 0.40%)</title><rect x="116.5" y="3605" width="4.7" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="119.55" y="3615.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T CST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="280.8" y="3765" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="283.83" y="3775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="917" width="5.6" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="236.89" y="927.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="555.9" y="5829" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="558.88" y="5839.5" ></text>
</g>
<g >
<title>`NEW-DATUM-VARIABLE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="618.3" y="5397" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="621.31" y="5407.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (1 samples, 0.04%)</title><rect x="331.1" y="4389" width="0.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="334.05" y="4399.5" ></text>
</g>
<g >
<title>`REMOVE-USELESS-INSTRUCTIONS-WITH-WORKLIST^CLEAVIR-REMOVE-USELES (1 samples, 0.04%)</title><rect x="523.5" y="5813" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="526.49" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="417.4" y="2213" width="3.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="420.41" y="2223.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="243.3" y="1605" width="7.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="246.28" y="1615.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="24.1" y="4069" width="0.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="27.08" y="4079.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1317" width="2.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="420.41" y="1327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="279.9" y="645" width="0.9" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="282.89" y="655.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="122.6" y="3285" width="3.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="125.65" y="3295.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (6 samples, 0.24%)</title><rect x="770.4" y="5797" width="2.8" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="773.38" y="5807.5" ></text>
</g>
<g >
<title>0x1225f5094 (9 samples, 0.36%)</title><rect x="235.3" y="821" width="4.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="238.30" y="831.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="1653" width="5.6" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="236.89" y="1663.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.04%)</title><rect x="807.0" y="5653" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="809.99" y="5663.5" ></text>
</g>
<g >
<title>`GC_mark_some (34 samples, 1.35%)</title><rect x="472.8" y="5605" width="16.0" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="475.80" y="5615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="382.7" y="4805" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="385.68" y="4815.5" ></text>
</g>
<g >
<title>`llvm::APInt::flipAllBits() (1 samples, 0.04%)</title><rect x="844.1" y="5797" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="847.07" y="5807.5" ></text>
</g>
<g >
<title>`OPTIMIZED-LEXICAL-AST-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="300.1" y="5877" width="0.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="303.07" y="5887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="172.4" y="1493" width="5.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="175.40" y="1503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3669" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="414.78" y="3679.5" ></text>
</g>
<g >
<title>`core::core__integer_to_string(gctools::smart_ptr&lt;core::StrNs_O&gt; (1 samples, 0.04%)</title><rect x="402.9" y="4981" width="0.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="405.86" y="4991.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (48 samples, 1.91%)</title><rect x="180.4" y="1077" width="22.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="183.38" y="1087.5" >`..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="235.3" y="309" width="4.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="238.30" y="319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.4" y="1509" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="428.39" y="1519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1445" width="0.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="430.27" y="1455.5" ></text>
</g>
<g >
<title>`llvm::AnalysisResolver::addAnalysisImplsPair(void const*, llvm: (2 samples, 0.08%)</title><rect x="715.5" y="5893" width="0.9" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="718.47" y="5903.5" ></text>
</g>
<g >
<title>`%FSUB^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="643.7" y="5413" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="646.65" y="5423.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="125.0" y="1701" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="128.00" y="1711.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="276.6" y="1141" width="2.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="279.60" y="1151.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (40 samples, 1.59%)</title><rect x="232.0" y="3925" width="18.8" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="235.01" y="3935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="2901" width="1.4" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="411.03" y="2911.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.04%)</title><rect x="793.4" y="5829" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="796.38" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (57 samples, 2.27%)</title><rect x="407.6" y="5541" width="26.7" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="410.56" y="5551.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="230.6" y="181" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="233.60" y="191.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="168.2" y="1429" width="2.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="171.18" y="1439.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (23 samples, 0.91%)</title><rect x="423.0" y="4309" width="10.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="426.05" y="4319.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="3477" width="1.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="411.03" y="3487.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="3557" width="1.4" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="411.03" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.5" y="4869" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="418.54" y="4879.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="2309" width="1.0" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="427.92" y="2319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.9" y="3301" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="396.95" y="3311.5" ></text>
</g>
<g >
<title>`wrapped_core__sl_boundp_T_sp (1 samples, 0.04%)</title><rect x="243.3" y="389" width="0.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="246.28" y="399.5" ></text>
</g>
<g >
<title>`SAFE-CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="709" width="0.4" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="171.18" y="719.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="242.8" y="2485" width="8.0" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="245.81" y="2495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="428.7" y="1845" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="431.68" y="1855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="423.5" y="2293" width="1.0" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="426.52" y="2303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4149" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="419.48" y="4159.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="249.4" y="437" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="252.38" y="447.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (7 samples, 0.28%)</title><rect x="332.9" y="4629" width="3.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="335.93" y="4639.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="865.2" y="5797" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="868.19" y="5807.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="834.2" y="5749" width="0.5" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="837.22" y="5759.5" ></text>
</g>
<g >
<title>`TRANSLATE-FUNCALL^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="626.8" y="5189" width="1.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="629.75" y="5199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="247.5" y="501" width="1.9" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="250.50" y="511.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="231.1" y="3605" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="234.07" y="3615.5" ></text>
</g>
<g >
<title>`COERCE-FDESIGNATOR^CORE^FN^^ (1 samples, 0.04%)</title><rect x="284.6" y="965" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="287.58" y="975.5" ></text>
</g>
<g >
<title>`ONE-POTENTIAL-INLINE^CLEAVIR-PARTIAL-INLINING^FN^^ (3 samples, 0.12%)</title><rect x="513.2" y="5829" width="1.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="516.17" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="413.7" y="4085" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="416.66" y="4095.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="287.4" y="4853" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="290.40" y="4863.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="635.7" y="5301" width="0.4" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="638.67" y="5311.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="925.7" y="5829" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="928.74" y="5839.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.04%)</title><rect x="912.6" y="5813" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="915.60" y="5823.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.04%)</title><rect x="832.8" y="5765" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="835.81" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="26.0" y="4309" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="28.96" y="4319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="242.3" y="2869" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="245.34" y="2879.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="268.6" y="757" width="3.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="271.62" y="767.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="279.9" y="613" width="0.9" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="282.89" y="623.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (1 samples, 0.04%)</title><rect x="13.3" y="5541" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="16.29" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="4101" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="404.93" y="4111.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="393.5" y="4325" width="0.9" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="396.48" y="4335.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilderBase_O::SetCurrentDebugLocationToLineColumnScop (3 samples, 0.12%)</title><rect x="614.6" y="5333" width="1.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="617.55" y="5343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="293.5" y="5365" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="296.50" y="5375.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="508.0" y="5781" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="511.00" y="5791.5" ></text>
</g>
<g >
<title>`UNIVERSAL-ERROR-HANDLER^CORE^FN^^ (1 samples, 0.04%)</title><rect x="336.7" y="4101" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="339.68" y="4111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="4021" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="414.78" y="4031.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="3653" width="0.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="403.99" y="3663.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="393.5" y="3573" width="0.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="396.48" y="3583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="382.2" y="4069" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="385.21" y="4079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="1909" width="0.4" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="434.96" y="1919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="409.4" y="3317" width="1.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="412.44" y="3327.5" ></text>
</g>
<g >
<title>`core::core__find_class_holder(gctools::smart_ptr&lt;core::Symbol_O (1 samples, 0.04%)</title><rect x="242.8" y="1845" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="245.81" y="1855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="279.9" y="277" width="0.9" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="282.89" y="287.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.4" y="2629" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="412.44" y="2639.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (21 samples, 0.84%)</title><rect x="621.6" y="5269" width="9.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="624.59" y="5279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="287.4" y="5237" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="290.40" y="5247.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (1 samples, 0.04%)</title><rect x="634.7" y="5237" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="637.73" y="5247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="276.6" y="3829" width="4.7" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="279.60" y="3839.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="322.1" y="5061" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="325.13" y="5071.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (87 samples, 3.46%)</title><rect x="86.5" y="5205" width="40.8" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="89.51" y="5215.5" >`co..</text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="660.1" y="5525" width="0.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="663.08" y="5535.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="34.4" y="4949" width="0.9" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="37.41" y="4959.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="626.8" y="5061" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="629.75" y="5071.5" ></text>
</g>
<g >
<title>`cc_error_type_error (1 samples, 0.04%)</title><rect x="312.7" y="5509" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="315.74" y="5519.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.04%)</title><rect x="723.4" y="5765" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="726.44" y="5775.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="338.6" y="4469" width="0.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="341.56" y="4479.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (4 samples, 0.16%)</title><rect x="711.2" y="5829" width="1.9" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="714.24" y="5839.5" ></text>
</g>
<g >
<title>`llvm::JumpThreadingPass::ProcessBlock(llvm::BasicBlock*) (7 samples, 0.28%)</title><rect x="700.9" y="5861" width="3.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="703.91" y="5871.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (1 samples, 0.04%)</title><rect x="328.7" y="4421" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="331.70" y="4431.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="251.3" y="3557" width="0.9" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="254.26" y="3567.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.04%)</title><rect x="813.1" y="5573" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="816.09" y="5583.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (5 samples, 0.20%)</title><rect x="891.5" y="5749" width="2.3" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="894.48" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (57 samples, 2.27%)</title><rect x="204.3" y="469" width="26.8" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="207.32" y="479.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="401.0" y="2677" width="0.9" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="403.99" y="2687.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="453" width="26.8" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="207.32" y="463.5" >`..</text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="328.2" y="4453" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="331.23" y="4463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="242.8" y="2629" width="8.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="245.81" y="2639.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="242.8" y="2229" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="245.81" y="2239.5" ></text>
</g>
<g >
<title>0x11a477094 (17 samples, 0.68%)</title><rect x="242.8" y="3013" width="8.0" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="245.81" y="3023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.3" y="4149" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="414.31" y="4159.5" ></text>
</g>
<g >
<title>`CST-FROM-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="327.3" y="4533" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="330.30" y="4543.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="384.6" y="4437" width="3.7" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="387.56" y="4447.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.04%)</title><rect x="513.6" y="5669" width="0.5" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="516.64" y="5679.5" ></text>
</g>
<g >
<title>`llvm::MemorySSA::CachingWalker::getClobberingMemoryAccess(llvm: (1 samples, 0.04%)</title><rect x="789.6" y="5813" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="792.63" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="393.5" y="3861" width="0.9" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="396.48" y="3871.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="343.7" y="4725" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="346.72" y="4735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (52 samples, 2.07%)</title><rect x="379.4" y="5429" width="24.4" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="382.40" y="5439.5" >`..</text>
</g>
<g >
<title>`REMOVE-USELESS-INSTRUCTIONS-FROM^CLEAVIR-REMOVE-USELESS-INSTRUC (1 samples, 0.04%)</title><rect x="523.5" y="5829" width="0.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="526.49" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="122.6" y="3221" width="1.9" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="125.65" y="3231.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Value const*&gt;::insert(llvm::Value c (1 samples, 0.04%)</title><rect x="861.4" y="5781" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="864.44" y="5791.5" ></text>
</g>
<g >
<title>`CALLING-CONVENTION-USE-ONLY-REGISTERS^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="338.6" y="4277" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="341.56" y="4287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="408.0" y="4853" width="2.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="411.03" y="4863.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.04%)</title><rect x="758.6" y="5701" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="761.65" y="5711.5" ></text>
</g>
<g >
<title>`llvm::write_integer(llvm::raw_ostream&amp;, unsigned long long, uns (1 samples, 0.04%)</title><rect x="645.1" y="5205" width="0.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="648.06" y="5215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="432.4" y="2341" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="435.43" y="2351.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (46 samples, 1.83%)</title><rect x="250.8" y="4293" width="21.6" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="253.79" y="4303.5" >`..</text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.04%)</title><rect x="754.4" y="5733" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="757.42" y="5743.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.04%)</title><rect x="98.2" y="3781" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="101.24" y="3791.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="287.9" y="4725" width="0.9" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="290.87" y="4735.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (3 samples, 0.12%)</title><rect x="233.9" y="629" width="1.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="236.89" y="639.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (62 samples, 2.47%)</title><rect x="134.4" y="4421" width="29.1" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="137.38" y="4431.5" >`P..</text>
</g>
<g >
<title>`llvm::hashing::detail::hash_short(char const*, unsigned long, u (1 samples, 0.04%)</title><rect x="871.8" y="5717" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="874.77" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="3445" width="5.6" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="284.30" y="3455.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.04%)</title><rect x="466.7" y="5749" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="469.70" y="5759.5" ></text>
</g>
<g >
<title>`std::__1::locale::id::__get() (1 samples, 0.04%)</title><rect x="331.1" y="4309" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="334.05" y="4319.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="396.8" y="4341" width="0.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="399.76" y="4351.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.0" y="2597" width="0.4" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="411.97" y="2607.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="353.6" y="5317" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="356.58" y="5327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="321.2" y="5269" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="324.19" y="5279.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="503.3" y="5669" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="506.31" y="5679.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.04%)</title><rect x="747.4" y="5717" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="750.38" y="5727.5" ></text>
</g>
<g >
<title>`DATUM-NAME-AS-STRING^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="631.0" y="5189" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="633.98" y="5199.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (60 samples, 2.39%)</title><rect x="202.9" y="1253" width="28.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="205.91" y="1263.5" >`..</text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="36.3" y="3877" width="0.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="39.28" y="3887.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (2 samples, 0.08%)</title><rect x="788.7" y="5781" width="0.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="791.69" y="5791.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (77 samples, 3.06%)</title><rect x="12.8" y="5669" width="36.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="15.82" y="5679.5" >`RE..</text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="42.9" y="4821" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="45.86" y="4831.5" ></text>
</g>
<g >
<title>0x11a477094 (40 samples, 1.59%)</title><rect x="232.0" y="3989" width="18.8" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="235.01" y="3999.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="43.3" y="4869" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="46.33" y="4879.5" ></text>
</g>
<g >
<title>`wrapped_FunctionType_O__get_core__T_spcore__T_spcore__T_sp (1 samples, 0.04%)</title><rect x="660.5" y="5573" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="663.55" y="5583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.9" y="3333" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="435.90" y="3343.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (8 samples, 0.32%)</title><rect x="842.7" y="5861" width="3.7" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="845.67" y="5871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="335.7" y="4373" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="338.74" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="386.0" y="3477" width="0.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="388.97" y="3487.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="579.3" y="5765" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="582.35" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="2581" width="1.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="168.83" y="2591.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="421.6" y="2469" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="424.64" y="2479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4965" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="419.48" y="4975.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.04%)</title><rect x="316.5" y="5045" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="319.50" y="5055.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::Constant*, llvm::Constant*&gt;* l (1 samples, 0.04%)</title><rect x="865.7" y="5845" width="0.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="868.66" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="419.3" y="837" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="422.29" y="847.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (9 samples, 0.36%)</title><rect x="276.6" y="2821" width="4.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="279.60" y="2831.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.04%)</title><rect x="379.4" y="4981" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="382.40" y="4991.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="167.7" y="1253" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="170.71" y="1263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="97.8" y="3685" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="100.77" y="3695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="382.2" y="4565" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="385.21" y="4575.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="180.4" y="389" width="2.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="183.38" y="399.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="353.1" y="5509" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="356.11" y="5519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="277.1" y="757" width="1.8" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="280.07" y="767.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="380.3" y="4517" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="383.33" y="4527.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.04%)</title><rect x="19.9" y="3253" width="0.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="22.86" y="3263.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (5 samples, 0.20%)</title><rect x="400.0" y="4373" width="2.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="403.05" y="4383.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="421.2" y="4069" width="0.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="424.17" y="4079.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.04%)</title><rect x="497.2" y="5749" width="0.5" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="500.21" y="5759.5" ></text>
</g>
<g >
<title>`llvm::DemandedBits::getDemandedBits(llvm::Instruction*) (2 samples, 0.08%)</title><rect x="707.0" y="5877" width="1.0" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="710.02" y="5887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="4165" width="3.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="420.41" y="4175.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="386.0" y="3221" width="0.4" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="388.97" y="3231.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (3 samples, 0.12%)</title><rect x="325.9" y="4789" width="1.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="328.89" y="4799.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_short(char const*, unsigned long, u (1 samples, 0.04%)</title><rect x="723.4" y="5733" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="726.44" y="5743.5" ></text>
</g>
<g >
<title>`llvm::Value* SimplifyCall&lt;llvm::Use*&gt;(llvm::ImmutableCallSite,  (1 samples, 0.04%)</title><rect x="831.9" y="5781" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="834.87" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="390.7" y="3077" width="1.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="393.66" y="3087.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitOr(llvm::BinaryOperator&amp;) (1 samples, 0.04%)</title><rect x="773.7" y="5845" width="0.4" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="776.67" y="5855.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Value const*&gt;::insert(llvm::Value c (1 samples, 0.04%)</title><rect x="807.5" y="5557" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="810.46" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="297.3" y="5509" width="1.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="300.26" y="5519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="122.6" y="3589" width="4.7" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="125.65" y="3599.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (41 samples, 1.63%)</title><rect x="469.5" y="5701" width="19.3" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="472.51" y="5711.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="240.0" y="2645" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="242.99" y="2655.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="332.9" y="4293" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="335.93" y="4303.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="126.4" y="2197" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="129.40" y="2207.5" ></text>
</g>
<g >
<title>`MAKE-BLOCK-AST^CLEAVIR-AST^FN^^ (1 samples, 0.04%)</title><rect x="231.5" y="3269" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="234.54" y="3279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="287.9" y="4805" width="0.9" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="290.87" y="4815.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENTER-INSTRUCTION  (1 samples, 0.04%)</title><rect x="341.8" y="4501" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="344.85" y="4511.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="316.5" y="5237" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="319.50" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="431.5" y="3541" width="1.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="434.50" y="3551.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="669.9" y="5781" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="672.94" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.08%)</title><rect x="393.5" y="4197" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="396.48" y="4207.5" ></text>
</g>
<g >
<title>`CONSTANTLY-T^CORE^FN^^ (1 samples, 0.04%)</title><rect x="524.9" y="5749" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="527.90" y="5759.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="639.4" y="5333" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="642.43" y="5343.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpUsingKnownBits(llvm::ICmpInst&amp;) (5 samples, 0.20%)</title><rect x="899.9" y="5829" width="2.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="902.93" y="5839.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="332.0" y="4565" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="334.99" y="4575.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::getBackedgeTakenInfo(llvm::Loop const*) (1 samples, 0.04%)</title><rect x="920.1" y="5829" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="923.11" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="123.6" y="597" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="126.59" y="607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="242.8" y="2181" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="245.81" y="2191.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1909" width="2.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="420.41" y="1919.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (305 samples, 12.13%)</title><rect x="130.2" y="4933" width="143.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="133.16" y="4943.5" >`CONVERT^CLEAVIR-C..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="295.4" y="3701" width="1.4" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="298.38" y="3711.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="344.2" y="4789" width="0.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="347.19" y="4799.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="321.2" y="5093" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="324.19" y="5103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="424.9" y="1989" width="1.0" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="427.92" y="1999.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="405.2" y="5653" width="0.9" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="408.21" y="5663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="405.7" y="4645" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="408.68" y="4655.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (2 samples, 0.08%)</title><rect x="279.9" y="69" width="0.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="282.89" y="79.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="430.6" y="1573" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="433.56" y="1583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="423.0" y="4165" width="10.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="426.05" y="4175.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="123.6" y="1461" width="0.9" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="126.59" y="1471.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="123.6" y="709" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="126.59" y="719.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="429.1" y="2325" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="432.15" y="2335.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="124.5" y="1941" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="127.53" y="1951.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.08%)</title><rect x="494.9" y="5797" width="0.9" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="497.86" y="5807.5" ></text>
</g>
<g >
<title>`CST-TO-AST^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="286.9" y="5013" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="289.93" y="5023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="454.5" y="5733" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="457.49" y="5743.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInBoundsGEP(llvm::Value*, gctools::sm (1 samples, 0.04%)</title><rect x="656.8" y="5445" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="659.79" y="5455.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::DITypeRefArr (1 samples, 0.04%)</title><rect x="670.9" y="5733" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="673.88" y="5743.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="2437" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="414.78" y="2447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="398.2" y="2933" width="0.4" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="401.17" y="2943.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="235.3" y="405" width="4.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="238.30" y="415.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction const* (2 samples, 0.08%)</title><rect x="957.2" y="5845" width="0.9" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="960.19" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="123.1" y="2341" width="1.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="126.12" y="2351.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="320.7" y="5333" width="1.0" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="323.72" y="5343.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (3 samples, 0.12%)</title><rect x="165.8" y="2405" width="1.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="168.83" y="2415.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="295.4" y="2517" width="0.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="298.38" y="2527.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="414.1" y="3621" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="417.13" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="2965" width="0.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="403.99" y="2975.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="252.2" y="3381" width="1.9" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="255.20" y="3391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2517" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="412.44" y="2527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="452.6" y="5637" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="455.62" y="5647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="124.5" y="2725" width="1.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="127.53" y="2735.5" ></text>
</g>
<g >
<title>`wrapped_core__reallocate_instance_Instance_spInstance_spsize_t (2 samples, 0.08%)</title><rect x="368.6" y="5797" width="0.9" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="371.60" y="5807.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="402.4" y="4949" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="405.39" y="4959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="2373" width="3.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="420.41" y="2383.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="534.3" y="5781" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="537.29" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="49.9" y="5173" width="1.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="52.90" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="400.5" y="3973" width="1.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="403.52" y="3983.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="121.7" y="3429" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="124.71" y="3439.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (86 samples, 3.42%)</title><rect x="87.0" y="4757" width="40.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="89.98" y="4767.5" >`CO..</text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.04%)</title><rect x="645.5" y="5301" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="648.53" y="5311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="424.9" y="1477" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="427.92" y="1487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.9" y="3829" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="404.93" y="3839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="294.9" y="3925" width="1.9" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="297.91" y="3935.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.4" y="3109" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="412.44" y="3119.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="1621" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="126.59" y="1631.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="1765" width="4.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="285.70" y="1775.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (1 samples, 0.04%)</title><rect x="239.5" y="2837" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="242.52" y="2847.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.0" y="1877" width="0.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="434.96" y="1887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.9" y="3253" width="0.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="404.93" y="3263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="382.7" y="4917" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="385.68" y="4927.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="632.9" y="5349" width="0.4" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="635.86" y="5359.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.08%)</title><rect x="461.1" y="5829" width="0.9" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="464.07" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="41.0" y="4389" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="43.98" y="4399.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="165.8" y="1093" width="1.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="168.83" y="1103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="416.5" y="4581" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="419.48" y="4591.5" ></text>
</g>
<g >
<title>`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std:: (1 samples, 0.04%)</title><rect x="960.5" y="5845" width="0.4" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="963.48" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="257.4" y="1461" width="0.4" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="260.36" y="1471.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (1 samples, 0.04%)</title><rect x="240.0" y="2933" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="242.99" y="2943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="428.7" y="2101" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="431.68" y="2111.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (156 samples, 6.21%)</title><rect x="597.2" y="5813" width="73.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="600.18" y="5823.5" >`DO-DEBU..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4869" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="408.68" y="4879.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (2 samples, 0.08%)</title><rect x="644.1" y="5333" width="1.0" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="647.12" y="5343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="424.9" y="3061" width="1.0" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="427.92" y="3071.5" ></text>
</g>
<g >
<title>`ENSURE-DYNAMIC-LOCATION-AVAILABLE^CLEAVIR-HIR-TRANSFORMATIONS^F (1 samples, 0.04%)</title><rect x="568.6" y="5813" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="571.55" y="5823.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (113 samples, 4.49%)</title><rect x="178.0" y="2501" width="53.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="181.04" y="2511.5" >`CONV..</text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="665.2" y="5557" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="668.24" y="5567.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="19.9" y="3589" width="0.9" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="22.86" y="3599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="421.2" y="3989" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="424.17" y="3999.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="247.5" y="37" width="1.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="250.50" y="47.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="396.8" y="4037" width="0.9" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="399.76" y="4047.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="606.1" y="5461" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="609.10" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="297.3" y="5541" width="1.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="300.26" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3957" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="404.93" y="3967.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="413.7" y="4517" width="1.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="416.66" y="4527.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2469" width="4.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="279.60" y="2479.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (4 samples, 0.16%)</title><rect x="601.9" y="5477" width="1.9" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="604.88" y="5487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="294.0" y="4085" width="0.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="296.97" y="4095.5" ></text>
</g>
<g >
<title>`llvm::MemorySSA::placePHINodes(llvm::SmallPtrSetImpl&lt;llvm::Basi (1 samples, 0.04%)</title><rect x="790.6" y="5845" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="793.56" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="167.2" y="2581" width="10.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="170.24" y="2591.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (56 samples, 2.23%)</title><rect x="407.6" y="5317" width="26.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="410.56" y="5327.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="270.0" y="133" width="1.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="273.03" y="143.5" ></text>
</g>
<g >
<title>`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="335.3" y="4549" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="338.27" y="4559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (14 samples, 0.56%)</title><rect x="36.3" y="4837" width="6.6" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="39.28" y="4847.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="234.4" y="469" width="0.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="237.36" y="479.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="122.6" y="2645" width="1.9" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="125.65" y="2655.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (2 samples, 0.08%)</title><rect x="905.1" y="5685" width="0.9" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="908.09" y="5695.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.04%)</title><rect x="699.5" y="5813" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="702.51" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="423.0" y="4101" width="10.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="426.05" y="4111.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="165.8" y="1813" width="1.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="168.83" y="1823.5" ></text>
</g>
<g >
<title>`core::cl__write_sequence(gctools::smart_ptr&lt;core::T_O&gt;, gctools (1 samples, 0.04%)</title><rect x="50.8" y="4661" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="53.84" y="4671.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="240.0" y="2693" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="242.99" y="2703.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="49.9" y="4629" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="52.90" y="4639.5" ></text>
</g>
<g >
<title>`CONVERT-LET*^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="281.3" y="3973" width="5.6" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="284.30" y="3983.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="423.5" y="2229" width="1.0" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="426.52" y="2239.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (4 samples, 0.16%)</title><rect x="294.9" y="4085" width="1.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="297.91" y="4095.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (43 samples, 1.71%)</title><rect x="252.2" y="3973" width="20.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="255.20" y="3983.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="295.4" y="2869" width="0.9" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="298.38" y="2879.5" ></text>
</g>
<g >
<title>`LITERAL-NODE-INDEX^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="673.2" y="5781" width="0.5" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="676.22" y="5791.5" ></text>
</g>
<g >
<title>`GC_is_black_listed (1 samples, 0.04%)</title><rect x="308.1" y="5669" width="0.4" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="311.05" y="5679.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="789.2" y="5685" width="0.4" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="792.16" y="5695.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="75.2" y="4965" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="78.24" y="4975.5" ></text>
</g>
<g >
<title>`llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::calculate(llvm: (1 samples, 0.04%)</title><rect x="851.1" y="5861" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="854.11" y="5871.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="621.1" y="5269" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="624.12" y="5279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="3765" width="5.6" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="284.30" y="3775.5" ></text>
</g>
<g >
<title>`REFERENCED-CONS-TABLE^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="275.7" y="5157" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="278.66" y="5167.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.04%)</title><rect x="405.2" y="4901" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="408.21" y="4911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="413.7" y="4453" width="1.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="416.66" y="4463.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (67 samples, 2.67%)</title><rect x="15.2" y="5541" width="31.4" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="18.16" y="5551.5" >`c..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="171.5" y="1557" width="0.4" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="174.46" y="1567.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="50.4" y="4581" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="53.37" y="4591.5" ></text>
</g>
<g >
<title>`core::make_absolute_pathname(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="953.0" y="5941" width="0.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="955.97" y="5951.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="55.1" y="5637" width="0.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="58.06" y="5647.5" ></text>
</g>
<g >
<title>`llvmo::Type_O::getPointerTo(int) (1 samples, 0.04%)</title><rect x="598.1" y="5685" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="601.12" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (52 samples, 2.07%)</title><rect x="379.4" y="5445" width="24.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="382.40" y="5455.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="26.0" y="4501" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="28.96" y="4511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="3701" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="414.31" y="3711.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="166.3" y="853" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="169.30" y="863.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="242.8" y="2453" width="8.0" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="245.81" y="2463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="182.7" y="325" width="4.7" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="185.73" y="335.5" ></text>
</g>
<g >
<title>`IRC-CREATE-FUNCTION-DESCRIPTION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="351.2" y="5333" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="354.23" y="5343.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="278.9" y="197" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="281.95" y="207.5" ></text>
</g>
<g >
<title>`llvm::CFLSteensAAWrapperPass* llvm::Pass::getAnalysisIfAvailabl (1 samples, 0.04%)</title><rect x="713.1" y="5877" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="716.12" y="5887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="285.1" y="1029" width="0.4" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="288.05" y="1039.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="234.4" y="517" width="0.4" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="237.36" y="527.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="431.5" y="3285" width="1.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="434.50" y="3295.5" ></text>
</g>
<g >
<title>`llvm::TerminatorInst::getNumSuccessors() const (1 samples, 0.04%)</title><rect x="857.2" y="5797" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="860.22" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="1733" width="0.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="428.86" y="1743.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="278.9" y="261" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="281.95" y="271.5" ></text>
</g>
<g >
<title>0x11a477094 (8 samples, 0.32%)</title><rect x="167.7" y="1829" width="3.8" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="170.71" y="1839.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (9 samples, 0.36%)</title><rect x="276.6" y="3685" width="4.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="279.60" y="3695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="49.9" y="5525" width="5.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="52.90" y="5535.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (2 samples, 0.08%)</title><rect x="578.9" y="5813" width="0.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="581.88" y="5823.5" ></text>
</g>
<g >
<title>`llvm::Module::~Module() (5 samples, 0.20%)</title><rect x="949.2" y="5925" width="2.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="952.21" y="5935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4949" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="419.48" y="4959.5" ></text>
</g>
<g >
<title>`core::Symbol_O::fmakunbound_setf() (1 samples, 0.04%)</title><rect x="370.5" y="5765" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="373.48" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="382.2" y="4357" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="385.21" y="4367.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;std::__1::__tree_iterator&lt;std::__1::__value_type (1 samples, 0.04%)</title><rect x="342.8" y="4517" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="345.78" y="4527.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="313.2" y="5461" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="316.21" y="5471.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (17 samples, 0.68%)</title><rect x="17.5" y="4357" width="8.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="20.51" y="4367.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (146 samples, 5.81%)</title><rect x="59.8" y="5701" width="68.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="62.75" y="5711.5" >`MAKE-C..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (56 samples, 2.23%)</title><rect x="407.6" y="5285" width="26.2" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="410.56" y="5295.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="276.1" y="4709" width="5.2" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="279.13" y="4719.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="382.2" y="4629" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="385.21" y="4639.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="171.5" y="1589" width="0.4" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="174.46" y="1599.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::Type*, std::__1::allocator&lt;llvm::Ty (1 samples, 0.04%)</title><rect x="661.0" y="5525" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="664.02" y="5535.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="535.7" y="5813" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="538.70" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="2933" width="4.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="430.27" y="2943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="2565" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="414.78" y="2575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4677" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="419.48" y="4687.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="753.0" y="5637" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="756.02" y="5647.5" ></text>
</g>
<g >
<title>`LITERAL-DNODE-DATUM^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="681.7" y="5941" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="684.67" y="5951.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="416.9" y="4741" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="419.95" y="4751.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="125.9" y="2341" width="1.0" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="128.93" y="2351.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.7" y="805" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="430.74" y="815.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="417.9" y="197" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="420.88" y="207.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::track(void*, llvm::Metadata&amp;, llvm::Poi (1 samples, 0.04%)</title><rect x="604.7" y="5397" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="607.69" y="5407.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4341" width="2.9" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="55.24" y="4351.5" ></text>
</g>
<g >
<title>`wrapped_cl__make_string_output_stream_Symbol_sp (1 samples, 0.04%)</title><rect x="617.8" y="5301" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="620.84" y="5311.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.08%)</title><rect x="646.5" y="5333" width="0.9" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="649.47" y="5343.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (3 samples, 0.12%)</title><rect x="277.1" y="645" width="1.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="280.07" y="655.5" ></text>
</g>
<g >
<title>`unw_set_reg (1 samples, 0.04%)</title><rect x="514.1" y="5637" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="517.11" y="5647.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="413.7" y="4549" width="1.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="416.66" y="4559.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="5109" width="0.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="290.87" y="5119.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="489.2" y="5765" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="492.23" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="393.5" y="3637" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="396.48" y="3647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (57 samples, 2.27%)</title><rect x="204.3" y="677" width="26.8" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="207.32" y="687.5" >`..</text>
</g>
<g >
<title>`llvm::DILocation::getImpl(llvm::LLVMContext&amp;, unsigned int, uns (3 samples, 0.12%)</title><rect x="614.6" y="5301" width="1.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="617.55" y="5311.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (9 samples, 0.36%)</title><rect x="276.6" y="2757" width="4.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="279.60" y="2767.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="283.2" y="1301" width="1.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="286.17" y="1311.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="639.0" y="5333" width="0.4" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="641.96" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="417.9" y="53" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="420.88" y="63.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="232.5" y="2373" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="235.48" y="2383.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="424.9" y="2869" width="1.0" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="427.92" y="2879.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (58 samples, 2.31%)</title><rect x="100.1" y="4309" width="27.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="103.12" y="4319.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="2213" width="7.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="246.28" y="2223.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="295.4" y="3733" width="1.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="298.38" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.2" y="3941" width="0.4" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="424.17" y="3951.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (4 samples, 0.16%)</title><rect x="748.8" y="5717" width="1.9" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="751.79" y="5727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="397.7" y="3653" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="400.70" y="3663.5" ></text>
</g>
<g >
<title>`NORMALIZE-FTYPE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="98.2" y="3877" width="0.5" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="101.24" y="3887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="391.6" y="2757" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="394.60" y="2767.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="122.6" y="3381" width="3.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="125.65" y="3391.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="233.9" y="645" width="1.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="236.89" y="655.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="415.5" y="4293" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="418.54" y="4303.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::APInt_O&gt; gctools::GCObjectAppropriate (1 samples, 0.04%)</title><rect x="640.4" y="5333" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="643.37" y="5343.5" ></text>
</g>
<g >
<title>`PROCESS-LTV^CLASP-CLEAVIR-AST^FN^^ (1 samples, 0.04%)</title><rect x="318.8" y="5397" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="321.85" y="5407.5" ></text>
</g>
<g >
<title>`RIGHT-PARENTHESIS^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="33.5" y="5477" width="0.9" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="36.47" y="5487.5" ></text>
</g>
<g >
<title>`llvmo::Type_O::getPointerTo(int) (1 samples, 0.04%)</title><rect x="627.7" y="5045" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="630.69" y="5055.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.04%)</title><rect x="653.0" y="5397" width="0.5" height="15.0" fill="rgb(239,108,108)" rx="2" ry="2" />
<text  x="656.04" y="5407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="1397" width="5.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="175.40" y="1407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (9 samples, 0.36%)</title><rect x="427.3" y="3781" width="4.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="430.27" y="3791.5" ></text>
</g>
<g >
<title>`EXPAND^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="128.3" y="5685" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="131.28" y="5695.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((MULTIPLE-VALUE-FOR (1 samples, 0.04%)</title><rect x="649.3" y="5429" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="652.28" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="282.7" y="1381" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="285.70" y="1391.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="412.3" y="4085" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="415.25" y="4095.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getTerminator() const (2 samples, 0.08%)</title><rect x="856.3" y="5813" width="0.9" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="859.28" y="5823.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.04%)</title><rect x="551.2" y="5781" width="0.5" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="554.19" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (136 samples, 5.41%)</title><rect x="167.2" y="3477" width="63.9" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="170.24" y="3487.5" >`core::..</text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (3 samples, 0.12%)</title><rect x="124.5" y="2741" width="1.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="127.53" y="2751.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (137 samples, 5.45%)</title><rect x="167.2" y="3925" width="64.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="170.24" y="3935.5" >`core::..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="336.7" y="4245" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="339.68" y="4255.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (14 samples, 0.56%)</title><rect x="171.5" y="1893" width="6.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="174.46" y="1903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (137 samples, 5.45%)</title><rect x="167.2" y="3845" width="64.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="170.24" y="3855.5" >`INTERP..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="409.4" y="3989" width="1.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="412.44" y="3999.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="241.4" y="2933" width="1.4" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="244.40" y="2943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3429" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="414.78" y="3439.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="652.6" y="5429" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="655.57" y="5439.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (2 samples, 0.08%)</title><rect x="347.0" y="5157" width="0.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="350.01" y="5167.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (19 samples, 0.76%)</title><rect x="259.2" y="533" width="9.0" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="262.24" y="543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="396.8" y="3909" width="0.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="399.76" y="3919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="3589" width="1.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="412.44" y="3599.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (2 samples, 0.08%)</title><rect x="159.3" y="4293" width="0.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="162.26" y="4303.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (57 samples, 2.27%)</title><rect x="204.3" y="1077" width="26.8" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="207.32" y="1087.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="407.6" y="4981" width="3.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="410.56" y="4991.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.04%)</title><rect x="308.1" y="5781" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="311.05" y="5791.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::M (4 samples, 0.16%)</title><rect x="838.9" y="5925" width="1.9" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="841.91" y="5935.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="247.5" y="1077" width="2.8" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="250.50" y="1087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (56 samples, 2.23%)</title><rect x="407.6" y="5381" width="26.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="410.56" y="5391.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="385.0" y="3861" width="2.8" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="388.03" y="3871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="238.1" y="37" width="1.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="241.11" y="47.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="2773" width="4.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="279.60" y="2783.5" ></text>
</g>
<g >
<title>`CONS-TABLE^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.08%)</title><rect x="274.7" y="5157" width="1.0" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="277.73" y="5167.5" ></text>
</g>
<g >
<title>`llvm::Argument::addAttr(llvm::Attribute::AttrKind) (1 samples, 0.04%)</title><rect x="686.4" y="5877" width="0.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="689.36" y="5887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="123.6" y="1333" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="126.59" y="1343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="178.0" y="2437" width="2.4" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="181.04" y="2447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="414.1" y="3813" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="417.13" y="3823.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="285.1" y="1077" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="288.05" y="1087.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (303 samples, 12.05%)</title><rect x="130.6" y="4645" width="142.2" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="133.63" y="4655.5" >`CONVERT-CODE^CLEA..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="410.8" y="5029" width="1.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="413.84" y="5039.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Type*, llvm::PointerTyp (1 samples, 0.04%)</title><rect x="598.1" y="5669" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="601.12" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4533" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="419.48" y="4543.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.04%)</title><rect x="308.1" y="5685" width="0.4" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="311.05" y="5695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="429.6" y="2309" width="1.0" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="432.62" y="2319.5" ></text>
</g>
<g >
<title>`llvm::raw_svector_ostream::raw_svector_ostream(llvm::SmallVecto (1 samples, 0.04%)</title><rect x="611.3" y="5221" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="614.26" y="5231.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="347.9" y="5141" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="350.95" y="5151.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="36.3" y="4085" width="1.4" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="39.28" y="4095.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="62.1" y="4901" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="65.10" y="4911.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="122.6" y="3237" width="1.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="125.65" y="3247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="2693" width="0.9" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="428.86" y="2703.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="318.4" y="5477" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="321.38" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.6" y="2869" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="424.64" y="2879.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="423.5" y="1733" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="426.52" y="1743.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (1 samples, 0.04%)</title><rect x="331.1" y="4405" width="0.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="334.05" y="4415.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="125.9" y="2597" width="1.0" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="128.93" y="2607.5" ></text>
</g>
<g >
<title>`ALLOCA-SIZE_T^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="597.7" y="5765" width="0.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="600.65" y="5775.5" ></text>
</g>
<g >
<title>`OF-CLASS-P^CORE^FN^^ (1 samples, 0.04%)</title><rect x="512.7" y="5653" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="515.70" y="5663.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (1 samples, 0.04%)</title><rect x="34.9" y="4245" width="0.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="37.88" y="4255.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.04%)</title><rect x="888.7" y="5701" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="891.66" y="5711.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (1 samples, 0.04%)</title><rect x="255.5" y="3189" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="258.48" y="3199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (87 samples, 3.46%)</title><rect x="86.5" y="5237" width="40.8" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="89.51" y="5247.5" >`co..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="34.4" y="4741" width="0.9" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="37.41" y="4751.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (36 samples, 1.43%)</title><rect x="416.9" y="4997" width="16.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="419.95" y="5007.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="232.0" y="2965" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="235.01" y="2975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((THE-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1253" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="430.27" y="1263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="242.8" y="2309" width="8.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="245.81" y="2319.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="285.1" y="997" width="0.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="288.05" y="1007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3541" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="404.93" y="3551.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="288.3" y="4437" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="291.34" y="4447.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (70 samples, 2.78%)</title><rect x="318.8" y="5541" width="32.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="321.85" y="5551.5" >`L..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="122.6" y="3141" width="1.9" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="125.65" y="3151.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="240.0" y="2709" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="242.99" y="2719.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="247.5" y="613" width="1.9" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="250.50" y="623.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="645.1" y="5269" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="648.06" y="5279.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="785.4" y="5749" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="788.40" y="5759.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (1 samples, 0.04%)</title><rect x="338.6" y="4341" width="0.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="341.56" y="4351.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="251.3" y="3077" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="254.26" y="3087.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="424.9" y="949" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="427.92" y="959.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (21 samples, 0.84%)</title><rect x="16.6" y="4645" width="9.8" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="19.57" y="4655.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="268.2" y="1925" width="3.7" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="271.15" y="1935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="382.2" y="4037" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="385.21" y="4047.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::GVN::Expression, u (1 samples, 0.04%)</title><rect x="823.9" y="5749" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="826.89" y="5759.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="294.0" y="4933" width="2.8" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="296.97" y="4943.5" ></text>
</g>
<g >
<title>`ADD-ATOMS^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="288.8" y="5605" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="291.81" y="5615.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getNonLocalPointerDepFromBB(llvm (17 samples, 0.68%)</title><rect x="815.9" y="5781" width="8.0" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="818.91" y="5791.5" ></text>
</g>
<g >
<title>`POLICY-VALUE^CLEAVIR-COMPILATION-POLICY^FN^^ (1 samples, 0.04%)</title><rect x="458.2" y="5813" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="461.25" y="5823.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.08%)</title><rect x="558.7" y="5813" width="0.9" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="561.70" y="5823.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.04%)</title><rect x="162.1" y="4293" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="165.08" y="4303.5" ></text>
</g>
<g >
<title>`0x10b6adfa3 (1 samples, 0.04%)</title><rect x="51.8" y="5077" width="0.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="54.77" y="5087.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (1 samples, 0.04%)</title><rect x="821.5" y="5653" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="824.54" y="5663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="269.1" y="517" width="2.8" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="272.09" y="527.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (1 samples, 0.04%)</title><rect x="10.0" y="5989" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="13.00" y="5999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="400.5" y="3893" width="1.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="403.52" y="3903.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="370.0" y="5781" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="373.01" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="408.0" y="4757" width="2.8" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="411.03" y="4767.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="293.5" y="5477" width="3.8" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="296.50" y="5487.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (4 samples, 0.16%)</title><rect x="732.4" y="5749" width="1.8" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="735.36" y="5759.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (32 samples, 1.27%)</title><rect x="187.4" y="389" width="15.0" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="190.42" y="399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TYPEQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3205" width="0.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="415.25" y="3215.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="416.0" y="4917" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="419.01" y="4927.5" ></text>
</g>
<g >
<title>`core::core__get_sysprop(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.04%)</title><rect x="76.2" y="4997" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="79.18" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (108 samples, 4.30%)</title><rect x="180.4" y="1365" width="50.7" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="183.38" y="1375.5" >`CONV..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="427.3" y="2453" width="2.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="430.27" y="2463.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="38.2" y="4453" width="0.4" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="41.16" y="4463.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.08%)</title><rect x="594.8" y="5813" width="1.0" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="597.84" y="5823.5" ></text>
</g>
<g >
<title>`POSITION-IF-NOT^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="93.5" y="3381" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="96.55" y="3391.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="398.2" y="3397" width="0.9" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="401.17" y="3407.5" ></text>
</g>
<g >
<title>`core::core__clock_gettime_nanoseconds() (1 samples, 0.04%)</title><rect x="301.5" y="5845" width="0.4" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="304.48" y="5855.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (2 samples, 0.08%)</title><rect x="287.9" y="4453" width="0.9" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="290.87" y="4463.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="423.0" y="2469" width="0.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="426.05" y="2479.5" ></text>
</g>
<g >
<title>0x1225f1094 (3 samples, 0.12%)</title><rect x="233.9" y="821" width="1.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="236.89" y="831.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (2 samples, 0.08%)</title><rect x="943.1" y="5797" width="0.9" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="946.11" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="517" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="423.70" y="527.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (17 samples, 0.68%)</title><rect x="17.5" y="4325" width="8.0" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="20.51" y="4335.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::pop_binding() (1 samples, 0.04%)</title><rect x="668.1" y="5653" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="671.06" y="5663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="38.2" y="4629" width="3.7" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="41.16" y="4639.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="321.7" y="5141" width="0.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="324.66" y="5151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="423.0" y="3301" width="2.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="426.05" y="3311.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (4 samples, 0.16%)</title><rect x="294.9" y="3877" width="1.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="297.91" y="3887.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1173" width="2.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="420.41" y="1183.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (4 samples, 0.16%)</title><rect x="277.1" y="917" width="1.8" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="280.07" y="927.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (38 samples, 1.51%)</title><rect x="15.6" y="5381" width="17.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="18.63" y="5391.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="432.4" y="2309" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="435.43" y="2319.5" ></text>
</g>
<g >
<title>`FUDGE-VALUES-TYPE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="126.4" y="2181" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="129.40" y="2191.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.5" y="3141" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="427.46" y="3151.5" ></text>
</g>
<g >
<title>`CLOSURE-CALL-OR-INVOKE^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="626.8" y="5173" width="1.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="629.75" y="5183.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="252.2" y="3349" width="1.9" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="255.20" y="3359.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="269.1" y="485" width="2.8" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="272.09" y="495.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="336.7" y="4005" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="339.68" y="4015.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="422.1" y="2869" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="425.11" y="2879.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="294.4" y="3733" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="297.44" y="3743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="281.3" y="4613" width="5.6" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="284.30" y="4623.5" ></text>
</g>
<g >
<title>`core::type_of_decide_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="114.7" y="3541" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="117.67" y="3551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="122.6" y="3365" width="3.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="125.65" y="3375.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.04%)</title><rect x="73.8" y="4965" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="76.83" y="4975.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="257.4" y="1685" width="1.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="260.36" y="1695.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="127.8" y="5557" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="130.81" y="5567.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="283.2" y="1237" width="1.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="286.17" y="1247.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="423.0" y="2421" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="426.05" y="2431.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="400.5" y="4149" width="1.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="403.52" y="4159.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.04%)</title><rect x="828.1" y="5605" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="831.11" y="5615.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.04%)</title><rect x="297.7" y="5317" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="300.72" y="5327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="295.4" y="3541" width="1.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="298.38" y="3551.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="422.6" y="4453" width="0.4" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="425.58" y="4463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2629" width="1.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="127.53" y="2639.5" ></text>
</g>
<g >
<title>`GC_mark_from (463 samples, 18.42%)</title><rect x="972.7" y="6309" width="217.3" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="975.68" y="6319.5" >`GC_mark_from</text>
</g>
<g >
<title>`GC_mark_from (1 samples, 0.04%)</title><rect x="505.7" y="5477" width="0.4" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="508.66" y="5487.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (1 samples, 0.04%)</title><rect x="16.6" y="4437" width="0.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="19.57" y="4447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="1749" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="428.86" y="1759.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (8 samples, 0.32%)</title><rect x="293.5" y="5557" width="3.8" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="296.50" y="5567.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::BasicBlock*&gt;::insert(llvm::BasicBlo (1 samples, 0.04%)</title><rect x="838.0" y="5861" width="0.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="840.97" y="5871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="165.4" y="4069" width="1.8" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="168.36" y="4079.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (1 samples, 0.04%)</title><rect x="26.4" y="4613" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="29.43" y="4623.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.7" y="1317" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="430.74" y="1327.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="327.8" y="4357" width="0.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="330.76" y="4367.5" ></text>
</g>
<g >
<title>`simplifyFunctionCFG(llvm::Function&amp;, llvm::TargetTransformInfo  (10 samples, 0.40%)</title><rect x="833.7" y="5893" width="4.7" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="836.75" y="5903.5" ></text>
</g>
<g >
<title>`llvm::EliminateDuplicatePHINodes(llvm::BasicBlock*) (1 samples, 0.04%)</title><rect x="934.7" y="5829" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="937.66" y="5839.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (2 samples, 0.08%)</title><rect x="709.4" y="5861" width="0.9" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="712.36" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.4" y="1813" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="428.39" y="1823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="410.8" y="4421" width="1.9" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="413.84" y="4431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3221" width="3.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="420.41" y="3231.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (2 samples, 0.08%)</title><rect x="765.2" y="5717" width="1.0" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="768.22" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="424.9" y="1301" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="427.92" y="1311.5" ></text>
</g>
<g >
<title>0x11a477060 (1 samples, 0.04%)</title><rect x="58.3" y="5797" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="61.35" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="124.5" y="1781" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="127.53" y="1791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="388.3" y="4149" width="4.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="391.31" y="4159.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (9 samples, 0.36%)</title><rect x="276.6" y="1365" width="4.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="279.60" y="1375.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="231.1" y="3653" width="0.4" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="234.07" y="3663.5" ></text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="98.7" y="3733" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="101.71" y="3743.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (22 samples, 0.88%)</title><rect x="240.5" y="3173" width="10.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="243.46" y="3183.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="719.2" y="5765" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="722.22" y="5775.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="320.3" y="5317" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="323.25" y="5327.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="386.0" y="2997" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="388.97" y="3007.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="34.9" y="4453" width="0.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="37.88" y="4463.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="429.6" y="2517" width="1.0" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="432.62" y="2527.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="416.5" y="4213" width="0.4" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="419.48" y="4223.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="276.1" y="4277" width="5.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="279.13" y="4287.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="379.9" y="4981" width="3.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="382.86" y="4991.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="599.1" y="5621" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="602.06" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3653" width="3.8" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="420.41" y="3663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="167.7" y="2149" width="10.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="170.71" y="2159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.9" y="3221" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="396.95" y="3231.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="422.1" y="2469" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="425.11" y="2479.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (1 samples, 0.04%)</title><rect x="179.0" y="2165" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="181.97" y="2175.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="2181" width="1.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="168.83" y="2191.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="256.0" y="2821" width="1.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="258.95" y="2831.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="286.9" y="4565" width="0.5" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="289.93" y="4575.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="533" width="1.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="288.52" y="543.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="314.6" y="5157" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="317.62" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="395.4" y="4885" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="398.35" y="4895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="393.5" y="3877" width="0.9" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="396.48" y="3887.5" ></text>
</g>
<g >
<title>`core::Lisp_O::getOrRegisterFileScope(std::__1::basic_string&lt;cha (1 samples, 0.04%)</title><rect x="334.3" y="4501" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="337.34" y="4511.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="433.8" y="5493" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="436.84" y="5503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (52 samples, 2.07%)</title><rect x="379.4" y="5317" width="24.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="382.40" y="5327.5" >`..</text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="353.6" y="5493" width="0.9" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="356.58" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (12 samples, 0.48%)</title><rect x="281.3" y="4485" width="5.6" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="284.30" y="4495.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (52 samples, 2.07%)</title><rect x="379.4" y="5253" width="24.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="382.40" y="5263.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="1109" width="5.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="175.40" y="1119.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="279.4" y="469" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="282.42" y="479.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (EXPLICIT-MULTI-PARAM (4 samples, 0.16%)</title><rect x="136.7" y="4325" width="1.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="139.73" y="4335.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="49.9" y="5189" width="1.9" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="52.90" y="5199.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="286.9" y="4965" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="289.93" y="4975.5" ></text>
</g>
<g >
<title>`COMPUTE-INSTRUCTION-OWNERS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (8 samples, 0.32%)</title><rect x="490.2" y="5829" width="3.7" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="493.17" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="1109" width="5.6" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="236.89" y="1119.5" ></text>
</g>
<g >
<title>`INTERPRET-DTREE-PROGRAM^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="385.5" y="3589" width="0.5" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="388.50" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1573" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="430.74" y="1583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="294.0" y="4661" width="2.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="296.97" y="4671.5" ></text>
</g>
<g >
<title>`CONVERT-VARIABLE^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="126.4" y="2293" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="129.40" y="2303.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="424.9" y="3157" width="1.0" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="427.92" y="3167.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::schedulePass(llvm::Pass*) (1 samples, 0.04%)</title><rect x="685.9" y="5909" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="688.89" y="5919.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="379.9" y="5109" width="3.7" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="382.86" y="5119.5" ></text>
</g>
<g >
<title>`llvm::APInt::clearUnusedBits() (1 samples, 0.04%)</title><rect x="810.7" y="5557" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="813.75" y="5567.5" ></text>
</g>
<g >
<title>`unw_init_local (1 samples, 0.04%)</title><rect x="324.5" y="4693" width="0.4" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="327.48" y="4703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1925" width="0.4" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="428.86" y="1935.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="232.5" y="3157" width="8.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="235.48" y="3167.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="769.9" y="5701" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="772.91" y="5711.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::addAttributes(llvm::LLVMContext&amp;, unsigned (1 samples, 0.04%)</title><rect x="676.5" y="5701" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="679.51" y="5711.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpWithConstant(llvm::ICmpInst&amp;) (1 samples, 0.04%)</title><rect x="902.3" y="5829" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="905.28" y="5839.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.04%)</title><rect x="828.6" y="5621" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="831.58" y="5631.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="339.5" y="4453" width="0.5" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="342.50" y="4463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="41.0" y="4437" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="43.98" y="4447.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="232.5" y="2517" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="235.48" y="2527.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="604.7" y="5477" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="607.69" y="5487.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.04%)</title><rect x="168.6" y="757" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="171.65" y="767.5" ></text>
</g>
<g >
<title>0x11a477094 (16 samples, 0.64%)</title><rect x="243.3" y="1733" width="7.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="246.28" y="1743.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (2 samples, 0.08%)</title><rect x="152.2" y="4277" width="1.0" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="155.22" y="4287.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="240.5" y="2805" width="0.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="243.46" y="2815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="391.6" y="2549" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="394.60" y="2559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (19 samples, 0.76%)</title><rect x="259.2" y="853" width="9.0" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="262.24" y="863.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="413.7" y="3717" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="416.66" y="3727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3461" width="1.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="168.36" y="3471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="285.5" y="1045" width="1.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="288.52" y="1055.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="247.5" y="725" width="1.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="250.50" y="735.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (4 samples, 0.16%)</title><rect x="504.2" y="5669" width="1.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="507.25" y="5679.5" ></text>
</g>
<g >
<title>0x1225f1094 (5 samples, 0.20%)</title><rect x="168.2" y="1509" width="2.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="171.18" y="1519.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.7" y="1285" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="430.74" y="1295.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ModuleBitcodeWriter::write() (12 samples, 0.48%)</title><rect x="954.4" y="5909" width="5.6" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="957.38" y="5919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="413.7" y="4741" width="1.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="416.66" y="4751.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (2 samples, 0.08%)</title><rect x="235.3" y="53" width="0.9" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="238.30" y="63.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (2 samples, 0.08%)</title><rect x="347.0" y="5141" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="350.01" y="5151.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (304 samples, 12.09%)</title><rect x="130.6" y="4805" width="142.7" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="133.63" y="4815.5" >`INTERPRETED-DISCR..</text>
</g>
<g >
<title>`REGISTER-CLASS^CORE^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="581" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="171.18" y="591.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="681.7" y="5925" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="684.67" y="5935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="2997" width="0.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="428.86" y="3007.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="34.9" y="4213" width="0.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="37.88" y="4223.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="425.9" y="2501" width="0.9" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="428.86" y="2511.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.9" y="2437" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="412.90" y="2447.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (15 samples, 0.60%)</title><rect x="243.3" y="1301" width="7.0" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="246.28" y="1311.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="254.5" y="3045" width="1.0" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="257.54" y="3055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3109" width="1.0" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="424.64" y="3119.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="168.2" y="1381" width="1.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="171.18" y="1391.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="337.2" y="4485" width="0.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="340.15" y="4495.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((NULL T))^METHOD^^ (1 samples, 0.04%)</title><rect x="124.5" y="1525" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="127.53" y="1535.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::Value*, llvm::ValueLatticeElem (1 samples, 0.04%)</title><rect x="693.4" y="5765" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="696.40" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="3205" width="1.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="411.03" y="3215.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="396.3" y="4773" width="3.7" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="399.29" y="4783.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="417.4" y="981" width="1.4" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="420.41" y="991.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="401.9" y="3765" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="404.93" y="3775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (32 samples, 1.27%)</title><rect x="187.4" y="53" width="15.0" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="190.42" y="63.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="997" width="5.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="175.40" y="1007.5" ></text>
</g>
<g >
<title>`REFERENCED-CONS-TABLE^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="36.8" y="3205" width="0.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="39.75" y="3215.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="133.0" y="4453" width="0.4" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="135.98" y="4463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (35 samples, 1.39%)</title><rect x="256.0" y="3333" width="16.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="258.95" y="3343.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="670.4" y="5797" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="673.41" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="332.9" y="4405" width="1.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="335.93" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.0" y="4885" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="419.01" y="4895.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="172.4" y="469" width="4.7" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="175.40" y="479.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="169.1" y="629" width="1.0" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="172.12" y="639.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="331.5" y="4693" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="334.52" y="4703.5" ></text>
</g>
<g >
<title>`llvm::RecursivelyDeleteTriviallyDeadInstructions(llvm::Value*,  (1 samples, 0.04%)</title><rect x="934.2" y="5813" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="937.19" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="417.4" y="1893" width="2.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="420.41" y="1903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="268.6" y="517" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="271.62" y="527.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3093" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="404.93" y="3103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1509" width="0.5" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="430.74" y="1519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="3429" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="417.13" y="3439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="407.6" y="4885" width="3.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="410.56" y="4895.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::MaxMin_match&lt;llvm::ICmpInst, llvm::Pat (1 samples, 0.04%)</title><rect x="827.2" y="5781" width="0.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="830.18" y="5791.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="112.8" y="3621" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="115.79" y="3631.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="269.1" y="325" width="2.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="272.09" y="335.5" ></text>
</g>
<g >
<title>`CONVERT-CALLED-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T T T T) (1 samples, 0.04%)</title><rect x="92.1" y="3013" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="95.14" y="3023.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.04%)</title><rect x="74.8" y="4949" width="0.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="77.77" y="4959.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="416.0" y="4661" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="419.01" y="4671.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (8 samples, 0.32%)</title><rect x="336.2" y="4565" width="3.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="339.21" y="4575.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="355.5" y="5685" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="358.46" y="5695.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (23 samples, 0.91%)</title><rect x="276.1" y="4885" width="10.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="279.13" y="4895.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (14 samples, 0.56%)</title><rect x="966.1" y="6309" width="6.6" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="969.11" y="6319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="427.3" y="3669" width="4.2" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="430.27" y="3679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="125.9" y="2309" width="1.0" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="128.93" y="2319.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::BasicBlock*, std::__1::unique_ptr&lt;llvm::Do (1 samples, 0.04%)</title><rect x="925.7" y="5845" width="0.5" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="928.74" y="5855.5" ></text>
</g>
<g >
<title>`getValueFromCondition(llvm::Value*, llvm::Value*, bool, llvm::D (1 samples, 0.04%)</title><rect x="695.3" y="5781" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="698.28" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="412.3" y="3653" width="0.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="415.25" y="3663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="243.3" y="2133" width="7.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="246.28" y="2143.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (46 samples, 1.83%)</title><rect x="250.8" y="4277" width="21.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="253.79" y="4287.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="16.6" y="4741" width="10.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="19.57" y="4751.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.04%)</title><rect x="41.4" y="4549" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="44.45" y="4559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="231.5" y="3413" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="234.54" y="3423.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.04%)</title><rect x="871.8" y="5749" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="874.77" y="5759.5" ></text>
</g>
<g >
<title>`llvm::getObjectSize(llvm::Value const*, unsigned long long&amp;, ll (1 samples, 0.04%)</title><rect x="919.2" y="5685" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="922.17" y="5695.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="327.8" y="4341" width="0.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="330.76" y="4351.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="18.0" y="3525" width="0.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="20.98" y="3535.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::add(llvm::Pass*, bool) (1 samples, 0.04%)</title><rect x="685.9" y="5877" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="688.89" y="5887.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisUsage(llvm::Pass*) (1 samples, 0.04%)</title><rect x="923.4" y="5877" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="926.40" y="5887.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.04%)</title><rect x="513.2" y="5621" width="0.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="516.17" y="5631.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="401.0" y="2821" width="0.9" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="403.99" y="2831.5" ></text>
</g>
<g >
<title>`core::core__find_class_holder(gctools::smart_ptr&lt;core::Symbol_O (1 samples, 0.04%)</title><rect x="142.8" y="4245" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="145.83" y="4255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="393.5" y="3733" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="396.48" y="3743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="233.9" y="261" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="236.89" y="271.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (3 samples, 0.12%)</title><rect x="238.1" y="85" width="1.4" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="241.11" y="95.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="2853" width="0.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="403.99" y="2863.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (8 samples, 0.32%)</title><rect x="167.7" y="1925" width="3.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="170.71" y="1935.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.04%)</title><rect x="699.5" y="5829" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="702.51" y="5839.5" ></text>
</g>
<g >
<title>`void boost::io::detail::distribute&lt;char, std::__1::char_traits&lt; (1 samples, 0.04%)</title><rect x="677.0" y="5749" width="0.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="679.98" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (38 samples, 1.51%)</title><rect x="15.6" y="5397" width="17.9" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="18.63" y="5407.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="279.4" y="645" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="282.42" y="655.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="412.3" y="3797" width="0.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="415.25" y="3807.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="251.3" y="3093" width="0.4" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="254.26" y="3103.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="421.6" y="2709" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="424.64" y="2719.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="424.9" y="1445" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="427.92" y="1455.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="247.0" y="341" width="0.5" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="250.03" y="351.5" ></text>
</g>
<g >
<title>`llvm::Instruction::mayWriteToMemory() const (1 samples, 0.04%)</title><rect x="917.8" y="5829" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="920.76" y="5839.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="604.7" y="5445" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="607.69" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (10 samples, 0.40%)</title><rect x="276.6" y="3957" width="4.7" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="279.60" y="3967.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="423.0" y="3493" width="3.8" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="426.05" y="3503.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="429.1" y="2197" width="0.5" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="432.15" y="2207.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="320.3" y="5349" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="323.25" y="5359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="278.9" y="229" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="281.95" y="239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="43.3" y="4997" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="46.33" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (35 samples, 1.39%)</title><rect x="256.0" y="3365" width="16.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="258.95" y="3375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="401.9" y="3301" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="404.93" y="3311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="165.4" y="2757" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="168.36" y="2767.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="432.0" y="1269" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="434.96" y="1279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="401.0" y="2773" width="0.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="403.99" y="2783.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="400.5" y="3749" width="1.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="403.52" y="3759.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="125.9" y="2613" width="1.0" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="128.93" y="2623.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((:AROUND) (T T CLASP))^METHOD (6 samples, 0.24%)</title><rect x="273.3" y="5189" width="2.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="276.32" y="5199.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="274.3" y="5061" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="277.26" y="5071.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="180.4" y="453" width="2.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="183.38" y="463.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (145 samples, 5.77%)</title><rect x="59.8" y="5349" width="68.0" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="62.75" y="5359.5" >`COMBIN..</text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="251.3" y="3861" width="0.9" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="254.26" y="3871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="279.9" y="229" width="0.9" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="282.89" y="239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="2405" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="411.97" y="2415.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="243.3" y="1541" width="7.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="246.28" y="1551.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="317.4" y="5525" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="320.44" y="5535.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="168.2" y="1173" width="1.9" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="171.18" y="1183.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="2837" width="4.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="285.70" y="2847.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.7" y="1365" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="430.74" y="1375.5" ></text>
</g>
<g >
<title>`POSITION-IF-NOT^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="233.9" y="85" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="236.89" y="95.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="644.6" y="5285" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="647.59" y="5295.5" ></text>
</g>
<g >
<title>`OPTIMIZE-STACK-ENCLOSE^CLASP-CLEAVIR^FN^^ (9 samples, 0.36%)</title><rect x="555.9" y="5845" width="4.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="558.88" y="5855.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.04%)</title><rect x="289.7" y="5429" width="0.5" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="292.75" y="5439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="202.9" y="1093" width="1.4" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="205.91" y="1103.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="287.4" y="4597" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="290.40" y="4607.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.04%)</title><rect x="576.5" y="5765" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="579.53" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="255.0" y="2997" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="258.01" y="3007.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="44.7" y="5445" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="47.73" y="5455.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="507.5" y="5781" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="510.53" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="242.8" y="2165" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="245.81" y="2175.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="719.2" y="5749" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="722.22" y="5759.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="467.6" y="5813" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="470.64" y="5823.5" ></text>
</g>
<g >
<title>`llvm::AliasSetTracker::mergeAliasSetsForPointer(llvm::Value con (1 samples, 0.04%)</title><rect x="780.2" y="5781" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="783.24" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="165.8" y="1221" width="1.0" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="168.83" y="1231.5" ></text>
</g>
<g >
<title>`IRC-BR^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="619.7" y="5285" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="622.71" y="5295.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::HashTableEq_O&gt; gctools::GCObjectApprop (1 samples, 0.04%)</title><rect x="126.9" y="2693" width="0.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="129.87" y="2703.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="859.1" y="5781" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="862.09" y="5791.5" ></text>
</g>
<g >
<title>`__vfprintf (1 samples, 0.04%)</title><rect x="432.4" y="2197" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="435.43" y="2207.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="167.7" y="1717" width="3.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="170.71" y="1727.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (4 samples, 0.16%)</title><rect x="101.1" y="3669" width="1.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="104.06" y="3679.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.04%)</title><rect x="787.7" y="5685" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="790.75" y="5695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="336.2" y="4357" width="1.0" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="339.21" y="4367.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.4" y="2549" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="412.44" y="2559.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_combine_recursive_helper::combine(u (1 samples, 0.04%)</title><rect x="934.7" y="5797" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="937.66" y="5807.5" ></text>
</g>
<g >
<title>`szone_realloc (1 samples, 0.04%)</title><rect x="834.2" y="5781" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="837.22" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="407.6" y="4949" width="3.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="410.56" y="4959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1685" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="427.92" y="1695.5" ></text>
</g>
<g >
<title>0x122f2b094 (2 samples, 0.08%)</title><rect x="287.9" y="5205" width="0.9" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="290.87" y="5215.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="294.0" y="5301" width="3.3" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="296.97" y="5311.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="4149" width="3.8" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="420.41" y="4159.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="38.2" y="4357" width="0.4" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="41.16" y="4367.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp_big(void const*) (1 samples, 0.04%)</title><rect x="754.9" y="5749" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="757.89" y="5759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="417.9" y="565" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="420.88" y="575.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="655.4" y="5477" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="658.39" y="5487.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="49.9" y="5413" width="5.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="52.90" y="5423.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="4069" width="1.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="411.03" y="4079.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (10 samples, 0.40%)</title><rect x="327.3" y="4773" width="4.7" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="330.30" y="4783.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="232.0" y="3333" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="235.01" y="3343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="123.6" y="1221" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="126.59" y="1231.5" ></text>
</g>
<g >
<title>`cc_pushLandingPadFrame (1 samples, 0.04%)</title><rect x="32.5" y="5285" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="35.53" y="5295.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="428.2" y="2197" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="431.21" y="2207.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="1973" width="7.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="246.28" y="1983.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="635.7" y="5285" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="638.67" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (1 samples, 0.04%)</title><rect x="231.1" y="3573" width="0.4" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="234.07" y="3583.5" ></text>
</g>
<g >
<title>`llvm::AliasSetTracker::add(llvm::LoadInst*) (1 samples, 0.04%)</title><rect x="919.2" y="5829" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="922.17" y="5839.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (35 samples, 1.39%)</title><rect x="256.0" y="3429" width="16.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="258.95" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="379.9" y="5013" width="3.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="382.86" y="5023.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="356.9" y="5797" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="359.87" y="5807.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (11 samples, 0.44%)</title><rect x="49.9" y="5669" width="5.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="52.90" y="5679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="421.6" y="2693" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="424.64" y="2703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4437" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="408.68" y="4447.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2821" width="4.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="285.70" y="2831.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="431.5" y="2533" width="1.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="434.50" y="2543.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (35 samples, 1.39%)</title><rect x="417.4" y="4581" width="16.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="420.41" y="4591.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1877" width="5.6" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="236.89" y="1887.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="398.2" y="2949" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="401.17" y="2959.5" ></text>
</g>
<g >
<title>`LISTP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="386.4" y="2917" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="389.44" y="2927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (11 samples, 0.44%)</title><rect x="417.4" y="4405" width="5.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="420.41" y="4415.5" ></text>
</g>
<g >
<title>`COERCE-FDESIGNATOR^CORE^FN^^ (1 samples, 0.04%)</title><rect x="132.5" y="4437" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="135.51" y="4447.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (86 samples, 3.42%)</title><rect x="87.0" y="4773" width="40.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="89.98" y="4783.5" >`PR..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="397.7" y="3829" width="1.9" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="400.70" y="3839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="382.2" y="4405" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="385.21" y="4415.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="421.6" y="2229" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="424.64" y="2239.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="279.9" y="293" width="0.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="282.89" y="303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="414.1" y="4277" width="1.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="417.13" y="4287.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="599.5" y="5589" width="1.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="602.53" y="5599.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="324.9" y="4917" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="327.95" y="4927.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="393.9" y="2949" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="396.95" y="2959.5" ></text>
</g>
<g >
<title>`core::core__find_class_holder(gctools::smart_ptr&lt;core::Symbol_O (1 samples, 0.04%)</title><rect x="185.5" y="117" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="188.54" y="127.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2277" width="1.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="127.53" y="2287.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="1813" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="428.86" y="1823.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (8 samples, 0.32%)</title><rect x="384.6" y="4405" width="3.7" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="387.56" y="4415.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (52 samples, 2.07%)</title><rect x="379.4" y="5477" width="24.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="382.40" y="5487.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="401.0" y="3077" width="0.9" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="403.99" y="3087.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="417.9" y="101" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="420.88" y="111.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="417.4" y="2133" width="3.3" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="420.41" y="2143.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="401.0" y="3029" width="0.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="403.99" y="3039.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="424.9" y="1637" width="0.5" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="427.92" y="1647.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4757" width="0.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="419.48" y="4767.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="2261" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="423.70" y="2271.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="232.5" y="2581" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="235.48" y="2591.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Instruction const*, unsigned int, llvm::De (1 samples, 0.04%)</title><rect x="958.6" y="5829" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="961.60" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="231.5" y="3909" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="234.54" y="3919.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="646.0" y="5269" width="0.5" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="649.00" y="5279.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (4 samples, 0.16%)</title><rect x="153.2" y="4293" width="1.8" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="156.16" y="4303.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (137 samples, 5.45%)</title><rect x="167.2" y="3877" width="64.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="170.24" y="3887.5" >`SET-OR..</text>
</g>
<g >
<title>`TRANSLATE-LOGICAL-PATHNAME^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="961.4" y="6037" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="964.42" y="6047.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.04%)</title><rect x="461.5" y="5765" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="464.54" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (36 samples, 1.43%)</title><rect x="416.9" y="5077" width="16.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="419.95" y="5087.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="279.4" y="485" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="282.42" y="495.5" ></text>
</g>
<g >
<title>`INITIALIZE-CALLING-CONVENTION^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="631.9" y="5333" width="1.0" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="634.92" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="4197" width="3.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="420.41" y="4207.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="122.6" y="2613" width="1.9" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="125.65" y="2623.5" ></text>
</g>
<g >
<title>0x11a477094 (4 samples, 0.16%)</title><rect x="122.6" y="2949" width="1.9" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="125.65" y="2959.5" ></text>
</g>
<g >
<title>`core::cl__find_package(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="123.6" y="469" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="126.59" y="479.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (1 samples, 0.04%)</title><rect x="677.0" y="5781" width="0.4" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="679.98" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="396.8" y="4117" width="0.9" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="399.76" y="4127.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.04%)</title><rect x="700.0" y="5813" width="0.4" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="702.98" y="5823.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (3 samples, 0.12%)</title><rect x="295.4" y="3285" width="1.4" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="298.38" y="3295.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (15 samples, 0.60%)</title><rect x="232.5" y="2901" width="7.0" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="235.48" y="2911.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="3029" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="414.78" y="3039.5" ></text>
</g>
<g >
<title>`llvm::AAResults::pointsToConstantMemory(llvm::MemoryLocation co (2 samples, 0.08%)</title><rect x="788.7" y="5813" width="0.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="791.69" y="5823.5" ></text>
</g>
<g >
<title>`OPTIMIZED-OPTIMIZE-INFO-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="299.6" y="5845" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="302.60" y="5855.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.04%)</title><rect x="422.1" y="2037" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="425.11" y="2047.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="3365" width="4.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="430.27" y="3375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="413.7" y="4821" width="1.8" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="416.66" y="4831.5" ></text>
</g>
<g >
<title>`llvm::TargetTransformInfo::getUserCost(llvm::User const*) const (1 samples, 0.04%)</title><rect x="919.6" y="5829" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="922.64" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="286.9" y="5141" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="289.93" y="5151.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (11 samples, 0.44%)</title><rect x="49.9" y="5445" width="5.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="52.90" y="5455.5" ></text>
</g>
<g >
<title>`core::type_of(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="142.8" y="4309" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="145.83" y="4319.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.04%)</title><rect x="737.1" y="5845" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="740.06" y="5855.5" ></text>
</g>
<g >
<title>`ADD-CREATOR^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="659.1" y="5525" width="1.0" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="662.14" y="5535.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (23 samples, 0.91%)</title><rect x="276.1" y="4773" width="10.8" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="279.13" y="4783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="2213" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="423.70" y="2223.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisUsage(llvm::Pass*) (1 samples, 0.04%)</title><rect x="799.0" y="5877" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="802.01" y="5887.5" ></text>
</g>
<g >
<title>`wrapped_cl__getf_List_spT_spT_sp (1 samples, 0.04%)</title><rect x="636.6" y="5317" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="639.61" y="5327.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.04%)</title><rect x="654.9" y="5285" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="657.92" y="5295.5" ></text>
</g>
<g >
<title>`core::type_of(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="185.5" y="181" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="188.54" y="191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="242.8" y="3077" width="8.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="245.81" y="3087.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="432.4" y="2277" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="435.43" y="2287.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::computeExitLimitFromCondCached(llvm::Sca (1 samples, 0.04%)</title><rect x="920.1" y="5765" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="923.11" y="5775.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="626.8" y="5045" width="0.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="629.75" y="5055.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="725" width="26.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="207.32" y="735.5" >`..</text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (11 samples, 0.44%)</title><rect x="172.4" y="1509" width="5.2" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="175.40" y="1519.5" ></text>
</g>
<g >
<title>`llvm::GVN::cleanupGlobalSets() (1 samples, 0.04%)</title><rect x="801.4" y="5845" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="804.36" y="5855.5" ></text>
</g>
<g >
<title>`wrapped_cl__error_T_spList_sp (1 samples, 0.04%)</title><rect x="125.9" y="1989" width="0.5" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="128.93" y="1999.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="165.8" y="1333" width="1.0" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="168.83" y="1343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="422.1" y="2661" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="425.11" y="2671.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="29.7" y="4965" width="0.5" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="32.71" y="4975.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (1 samples, 0.04%)</title><rect x="42.9" y="4837" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="45.86" y="4847.5" ></text>
</g>
<g >
<title>`core::core__generalp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="536.2" y="5813" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="539.17" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="131.6" y="4613" width="0.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="134.57" y="4623.5" ></text>
</g>
<g >
<title>`llvm::removeUnreachableBlocks(llvm::Function&amp;, llvm::LazyValueI (3 samples, 0.12%)</title><rect x="839.4" y="5893" width="1.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="842.38" y="5903.5" ></text>
</g>
<g >
<title>`core::General_O::eql_(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="283.2" y="1093" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="286.17" y="1103.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (43 samples, 1.71%)</title><rect x="252.2" y="3733" width="20.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="255.20" y="3743.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::GetNonLocalInfoForBlock(llvm::In (9 samples, 0.36%)</title><rect x="816.8" y="5765" width="4.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="819.85" y="5775.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (1 samples, 0.04%)</title><rect x="387.8" y="4245" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="390.84" y="4255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="422.1" y="2261" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="425.11" y="2271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (87 samples, 3.46%)</title><rect x="86.5" y="5301" width="40.8" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="89.51" y="5311.5" >`co..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="418.8" y="917" width="1.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="421.82" y="927.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="402.9" y="4997" width="0.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="405.86" y="5007.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="23.6" y="3941" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="26.61" y="3951.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (3 samples, 0.12%)</title><rect x="888.7" y="5781" width="1.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="891.66" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="3829" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="417.13" y="3839.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (136 samples, 5.41%)</title><rect x="167.2" y="2789" width="63.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="170.24" y="2799.5" >`CONVER..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="391.6" y="2645" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="394.60" y="2655.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="165.4" y="3125" width="1.8" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="168.36" y="3135.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="382.2" y="4533" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="385.21" y="4543.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solve() (1 samples, 0.04%)</title><rect x="701.9" y="5781" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="704.85" y="5791.5" ></text>
</g>
<g >
<title>`wrapped_core__generalp_T_sp (2 samples, 0.08%)</title><rect x="458.7" y="5813" width="1.0" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="461.72" y="5823.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.04%)</title><rect x="681.7" y="5909" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="684.67" y="5919.5" ></text>
</g>
<g >
<title>0x12262f094 (9 samples, 0.36%)</title><rect x="282.7" y="2005" width="4.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="285.70" y="2015.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="384.6" y="4053" width="0.4" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="387.56" y="4063.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="401.9" y="4165" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="404.93" y="4175.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (1 samples, 0.04%)</title><rect x="50.4" y="4597" width="0.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="53.37" y="4607.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (1 samples, 0.04%)</title><rect x="906.0" y="5653" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="909.03" y="5663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (20 samples, 0.80%)</title><rect x="112.8" y="3845" width="9.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="115.79" y="3855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (5 samples, 0.20%)</title><rect x="417.4" y="1413" width="2.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="420.41" y="1423.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (GRAMMAR))^METHOD^^ (1 samples, 0.04%)</title><rect x="133.0" y="4549" width="0.4" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="135.98" y="4559.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (14 samples, 0.56%)</title><rect x="171.5" y="1877" width="6.5" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="174.46" y="1887.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="268.2" y="1237" width="0.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="271.15" y="1247.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.12%)</title><rect x="390.7" y="3045" width="1.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="393.66" y="3055.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (4 samples, 0.16%)</title><rect x="641.3" y="5397" width="1.9" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="644.30" y="5407.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="49.9" y="4357" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="52.90" y="4367.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (8 samples, 0.32%)</title><rect x="716.9" y="5877" width="3.7" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="719.87" y="5887.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (43 samples, 1.71%)</title><rect x="252.2" y="3845" width="20.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="255.20" y="3855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="279.4" y="741" width="1.4" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="282.42" y="751.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="168.2" y="1205" width="1.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="171.18" y="1215.5" ></text>
</g>
<g >
<title>`ThreadCmpOverPHI(llvm::CmpInst::Predicate, llvm::Value*, llvm:: (1 samples, 0.04%)</title><rect x="824.8" y="5781" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="827.83" y="5791.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (10 samples, 0.40%)</title><rect x="122.6" y="3477" width="4.7" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="125.65" y="3487.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.04%)</title><rect x="749.7" y="5637" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="752.73" y="5647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (15 samples, 0.60%)</title><rect x="232.5" y="2645" width="7.0" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="235.48" y="2655.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="1445" width="50.7" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="183.38" y="1455.5" >`INTE..</text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (2 samples, 0.08%)</title><rect x="770.9" y="5733" width="0.9" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="773.85" y="5743.5" ></text>
</g>
<g >
<title>0x11a477094 (9 samples, 0.36%)</title><rect x="235.3" y="325" width="4.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="238.30" y="335.5" ></text>
</g>
<g >
<title>`LTV-GLOBAL^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="335.7" y="4309" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="338.74" y="4319.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.3" y="1477" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="430.27" y="1487.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.04%)</title><rect x="98.2" y="3845" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="101.24" y="3855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="3589" width="3.8" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="420.41" y="3599.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.04%)</title><rect x="318.4" y="5237" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="321.38" y="5247.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="2069" width="4.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="279.60" y="2079.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="353.6" y="5301" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="356.58" y="5311.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeWrapperPass::releaseMemory() (1 samples, 0.04%)</title><rect x="793.4" y="5861" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="796.38" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2581" width="14.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="260.36" y="2591.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (479 samples, 19.05%)</title><rect x="965.2" y="6325" width="224.8" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="968.17" y="6335.5" >`GC_do_local_mark</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (20 samples, 0.80%)</title><rect x="112.8" y="3829" width="9.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="115.79" y="3839.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (25 samples, 0.99%)</title><rect x="100.6" y="3973" width="11.7" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="103.59" y="3983.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (10 samples, 0.40%)</title><rect x="172.4" y="437" width="4.7" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="175.40" y="447.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="549.3" y="5781" width="0.5" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="552.31" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="630.5" y="5157" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="633.51" y="5167.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="656.8" y="5493" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="659.79" y="5503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="268.6" y="917" width="3.3" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="271.62" y="927.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="397.7" y="3557" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="400.70" y="3567.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="169.1" y="709" width="1.0" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="172.12" y="719.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="202.9" y="981" width="1.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="205.91" y="991.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="104.3" y="3605" width="7.6" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="107.34" y="3615.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (35 samples, 1.39%)</title><rect x="417.4" y="4677" width="16.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="420.41" y="4687.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="13.3" y="5509" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="16.29" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="423.0" y="2293" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="426.05" y="2303.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="380.3" y="4629" width="1.0" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="383.33" y="4639.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::LookupBucketFor(llvm::StringRef) (1 samples, 0.04%)</title><rect x="643.7" y="5253" width="0.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="646.65" y="5263.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (63 samples, 2.51%)</title><rect x="133.9" y="4437" width="29.6" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="136.91" y="4447.5" >`c..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="423.0" y="2981" width="1.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="426.05" y="2991.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (63 samples, 2.51%)</title><rect x="133.9" y="4565" width="29.6" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="136.91" y="4575.5" >`c..</text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (1 samples, 0.04%)</title><rect x="142.8" y="4277" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="145.83" y="4287.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.04%)</title><rect x="23.1" y="4069" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="26.14" y="4079.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (22 samples, 0.88%)</title><rect x="167.7" y="2357" width="10.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="170.71" y="2367.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="294.0" y="4341" width="2.8" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="296.97" y="4351.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::recordAvailableAnalysis(llvm::Pass*) (1 samples, 0.04%)</title><rect x="923.9" y="5893" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="926.87" y="5903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="5141" width="2.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="296.97" y="5151.5" ></text>
</g>
<g >
<title>`llvm::APInt::clearUnusedBits() (1 samples, 0.04%)</title><rect x="756.3" y="5781" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="759.30" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (52 samples, 2.07%)</title><rect x="379.4" y="5525" width="24.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="382.40" y="5535.5" >`..</text>
</g>
<g >
<title>0x1225f1094 (56 samples, 2.23%)</title><rect x="204.3" y="101" width="26.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="207.32" y="111.5" >0..</text>
</g>
<g >
<title>`llvm::KnownBits::resetAll() (1 samples, 0.04%)</title><rect x="912.1" y="5765" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="915.13" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="393.9" y="2997" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="396.95" y="3007.5" ></text>
</g>
<g >
<title>`core::Lisp_O::getOrRegisterFileScope(std::__1::basic_string&lt;cha (1 samples, 0.04%)</title><rect x="50.4" y="4565" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="53.37" y="4575.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm:: (1 samples, 0.04%)</title><rect x="626.8" y="5013" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="629.75" y="5023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="3445" width="1.4" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="411.03" y="3455.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="179.4" y="2165" width="1.0" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="182.44" y="2175.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="5157" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="327.01" y="5167.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((HEADERQ-INSTRUCTIO (2 samples, 0.08%)</title><rect x="609.9" y="5429" width="0.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="612.86" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (4 samples, 0.16%)</title><rect x="165.4" y="3141" width="1.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="168.36" y="3151.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="268.6" y="1525" width="3.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="271.62" y="1535.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="316.0" y="5237" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="319.03" y="5247.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="397.2" y="3861" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="400.23" y="3871.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (4 samples, 0.16%)</title><rect x="257.4" y="1653" width="1.8" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="260.36" y="1663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="276.1" y="3941" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="279.13" y="3951.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (3 samples, 0.12%)</title><rect x="431.5" y="2837" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="434.50" y="2847.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="243.3" y="1701" width="7.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="246.28" y="1711.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (3 samples, 0.12%)</title><rect x="810.3" y="5653" width="1.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="813.28" y="5663.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.04%)</title><rect x="11.9" y="5925" width="0.4" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="14.88" y="5935.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="3685" width="3.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="420.41" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="2037" width="1.0" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="432.62" y="2047.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1:: (1 samples, 0.04%)</title><rect x="48.5" y="5381" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="51.49" y="5391.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="168.2" y="1269" width="1.9" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="171.18" y="1279.5" ></text>
</g>
<g >
<title>`cc_error_type_error (1 samples, 0.04%)</title><rect x="127.8" y="5653" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="130.81" y="5663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="413.2" y="4997" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="416.19" y="5007.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (138 samples, 5.49%)</title><rect x="167.2" y="4069" width="64.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="170.24" y="4079.5" >`INTERP..</text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (9 samples, 0.36%)</title><rect x="427.3" y="3189" width="4.2" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="430.27" y="3199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="391.6" y="2629" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="394.60" y="2639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="1573" width="0.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="434.96" y="1583.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="52.2" y="5029" width="2.9" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="55.24" y="5039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="2421" width="1.0" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="426.52" y="2431.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="3237" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="414.78" y="3247.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="417.4" y="4501" width="5.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="420.41" y="4511.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.9" y="3749" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="404.93" y="3759.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (3 samples, 0.12%)</title><rect x="812.2" y="5685" width="1.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="815.16" y="5695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="2741" width="4.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="285.70" y="2751.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="401.9" y="4005" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="404.93" y="4015.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="239.5" y="3061" width="1.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="242.52" y="3071.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (11 samples, 0.44%)</title><rect x="106.7" y="3573" width="5.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="109.69" y="3583.5" ></text>
</g>
<g >
<title>`FIND-OR-CREATE-LOCATION^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="425.4" y="1493" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="428.39" y="1503.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="86.0" y="5029" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="89.04" y="5039.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="52.7" y="3845" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="55.71" y="3855.5" ></text>
</g>
<g >
<title>`INSTRUCTION-MAY-BE-REMOVED-P^CLEAVIR-REMOVE-USELESS-INSTRUCTION (3 samples, 0.12%)</title><rect x="531.0" y="5749" width="1.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="534.00" y="5759.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="348.9" y="5237" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="351.89" y="5247.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (35 samples, 1.39%)</title><rect x="539.5" y="5829" width="16.4" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="542.45" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (36 samples, 1.43%)</title><rect x="416.9" y="4901" width="16.9" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="419.95" y="4911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="581" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="423.70" y="591.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (43 samples, 1.71%)</title><rect x="383.6" y="5109" width="20.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="386.62" y="5119.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.04%)</title><rect x="311.8" y="5589" width="0.5" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="314.81" y="5599.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.08%)</title><rect x="562.9" y="5797" width="1.0" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="565.92" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="410.8" y="4757" width="1.9" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="413.84" y="4767.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="17.5" y="3925" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="20.51" y="3935.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="322.6" y="5157" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="325.60" y="5167.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="165.8" y="1029" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="168.83" y="1039.5" ></text>
</g>
<g >
<title>`void llvm::AAResults::addAAResult&lt;llvm::TypeBasedAAResult&gt;(llvm (1 samples, 0.04%)</title><rect x="715.0" y="5877" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="718.00" y="5887.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (158 samples, 6.28%)</title><rect x="378.9" y="5797" width="74.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="381.93" y="5807.5" >`COMPILE..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="260.6" y="325" width="7.6" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="263.64" y="335.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="247.5" y="565" width="1.9" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="250.50" y="575.5" ></text>
</g>
<g >
<title>`llvm::SymbolTableListTraits&lt;llvm::Instruction&gt;::removeNodeFromL (1 samples, 0.04%)</title><rect x="931.4" y="5845" width="0.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="934.38" y="5855.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;std::__1::pair&lt;llvm (1 samples, 0.04%)</title><rect x="814.0" y="5669" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="817.03" y="5679.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (4 samples, 0.16%)</title><rect x="724.9" y="5829" width="1.8" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="727.85" y="5839.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.04%)</title><rect x="905.6" y="5605" width="0.4" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="908.56" y="5615.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T CST T))^METHOD^^ (10 samples, 0.40%)</title><rect x="288.8" y="5621" width="4.7" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="291.81" y="5631.5" ></text>
</g>
<g >
<title>`llvm::GEPOperator::getSourceElementType() const (1 samples, 0.04%)</title><rect x="754.0" y="5717" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="756.95" y="5727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="281.3" y="3749" width="5.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="284.30" y="3759.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (9 samples, 0.36%)</title><rect x="276.6" y="2357" width="4.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="279.60" y="2367.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="18.4" y="3525" width="1.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="21.45" y="3535.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="417.9" y="325" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="420.88" y="335.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (19 samples, 0.76%)</title><rect x="259.2" y="917" width="9.0" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="262.24" y="927.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="499.6" y="5733" width="0.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="502.55" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (35 samples, 1.39%)</title><rect x="15.6" y="5301" width="16.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="18.63" y="5311.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="250.3" y="1205" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="253.32" y="1215.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.4" y="1573" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="428.39" y="1583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="396.8" y="3941" width="0.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="399.76" y="3951.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="570.4" y="5781" width="3.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="573.43" y="5791.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorTemplateBase&lt;unsigned long long, true&gt;::push_b (1 samples, 0.04%)</title><rect x="954.4" y="5877" width="0.4" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="957.38" y="5887.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="251.7" y="3061" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="254.73" y="3071.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="805" width="0.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="430.27" y="815.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="312.7" y="5573" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="315.74" y="5583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (136 samples, 5.41%)</title><rect x="167.2" y="3285" width="63.9" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="170.24" y="3295.5" >`core::..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (87 samples, 3.46%)</title><rect x="86.5" y="5109" width="40.8" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="89.51" y="5119.5" >`co..</text>
</g>
<g >
<title>`MAKE-ENTER-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="395.8" y="4869" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="398.82" y="4879.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="268.2" y="1189" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="271.15" y="1199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="384.6" y="4309" width="3.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="387.56" y="4319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="430.6" y="1685" width="0.4" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="433.56" y="1695.5" ></text>
</g>
<g >
<title>`core::core__get_sysprop(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.04%)</title><rect x="185.1" y="181" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="188.08" y="191.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getPredicateAt(unsigned int, llvm::Value*, (3 samples, 0.12%)</title><rect x="702.8" y="5845" width="1.4" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="705.79" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="165.4" y="2917" width="1.8" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="168.36" y="2927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3957" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="415.25" y="3967.5" ></text>
</g>
<g >
<title>0x11a477094 (40 samples, 1.59%)</title><rect x="232.0" y="3717" width="18.8" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="235.01" y="3727.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="342.8" y="4645" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="345.78" y="4655.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="409.4" y="4309" width="1.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="412.44" y="4319.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (58 samples, 2.31%)</title><rect x="100.1" y="4085" width="27.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="103.12" y="4095.5" >`..</text>
</g>
<g >
<title>`std::__1::__vector_base&lt;std::__1::unique_ptr&lt;clang::ast_matcher (1 samples, 0.04%)</title><rect x="714.5" y="5877" width="0.5" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="717.53" y="5887.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="268.6" y="645" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="271.62" y="655.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="240.5" y="3237" width="10.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="243.46" y="3247.5" ></text>
</g>
<g >
<title>`llvm::IRBuilderBase::SetInsertPoint(llvm::Instruction*) (1 samples, 0.04%)</title><rect x="727.2" y="5861" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="730.20" y="5871.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="626.3" y="5093" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="629.28" y="5103.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="336.2" y="4325" width="1.0" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="339.21" y="4335.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="294.0" y="4965" width="2.8" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="296.97" y="4975.5" ></text>
</g>
<g >
<title>`llvm::ValueLatticeElement::get(llvm::Constant*) (1 samples, 0.04%)</title><rect x="691.5" y="5797" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="694.53" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="500.5" y="5749" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="503.49" y="5759.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (1 samples, 0.04%)</title><rect x="38.2" y="4101" width="0.4" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="41.16" y="4111.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (49 samples, 1.95%)</title><rect x="410.8" y="5253" width="23.0" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="413.84" y="5263.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="411.8" y="4277" width="0.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="414.78" y="4287.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (3 samples, 0.12%)</title><rect x="104.8" y="3445" width="1.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="107.81" y="3455.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (1 samples, 0.04%)</title><rect x="48.5" y="5509" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="51.49" y="5519.5" ></text>
</g>
<g >
<title>`OPTIMIZED-OPTIMIZE-INFO-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="318.4" y="5269" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="321.38" y="5279.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="247.0" y="677" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="250.03" y="687.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.9" y="2277" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="412.90" y="2287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="396.8" y="3829" width="0.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="399.76" y="3839.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="311.8" y="5669" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="314.81" y="5679.5" ></text>
</g>
<g >
<title>`IRC-BASIC-BLOCK-CREATE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="634.7" y="5349" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="637.73" y="5359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="167.7" y="1397" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="170.71" y="1407.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="431.5" y="3205" width="1.4" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="434.50" y="3215.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="39.1" y="4277" width="0.9" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="42.10" y="4287.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="3045" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="412.90" y="3055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:BEFORE) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="385.5" y="3637" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="388.50" y="3647.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="2117" width="5.6" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="236.89" y="2127.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="287.9" y="4741" width="0.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="290.87" y="4751.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="281.3" y="4101" width="5.6" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="284.30" y="4111.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="455.4" y="5765" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="458.43" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (23 samples, 0.91%)</title><rect x="423.0" y="4421" width="10.8" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="426.05" y="4431.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (3 samples, 0.12%)</title><rect x="281.3" y="3349" width="1.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="284.30" y="3359.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="335.7" y="4533" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="338.74" y="4543.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (56 samples, 2.23%)</title><rect x="60.2" y="5285" width="26.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="63.22" y="5295.5" >`..</text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="347.9" y="5093" width="0.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="350.95" y="5103.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (5 samples, 0.20%)</title><rect x="375.2" y="5781" width="2.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="378.17" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="319.3" y="5397" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="322.32" y="5407.5" ></text>
</g>
<g >
<title>0x1225e30f4 (1 samples, 0.04%)</title><rect x="85.1" y="4949" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="88.10" y="4959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="410.4" y="3349" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="413.37" y="3359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="283.2" y="1253" width="1.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="286.17" y="1263.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (22 samples, 0.88%)</title><rect x="34.4" y="5445" width="10.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="37.41" y="5455.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (10 samples, 0.40%)</title><rect x="122.6" y="3637" width="4.7" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="125.65" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2325" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="412.90" y="2335.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="291.6" y="5589" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="294.62" y="5599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="386.0" y="3541" width="0.9" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="388.97" y="3551.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="166.8" y="1445" width="0.4" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="169.77" y="1455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="327.8" y="4421" width="0.4" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="330.76" y="4431.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="407.6" y="4869" width="3.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="410.56" y="4879.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="400.5" y="4101" width="1.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="403.52" y="4111.5" ></text>
</g>
<g >
<title>`ALLOCA-REGISTER-SAVE-AREA^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="658.2" y="5541" width="0.5" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="661.20" y="5551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (31 samples, 1.23%)</title><rect x="257.4" y="2565" width="14.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="260.36" y="2575.5" ></text>
</g>
<g >
<title>`llvm::LoopAccessInfo::canAnalyzeLoop() (1 samples, 0.04%)</title><rect x="846.4" y="5797" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="849.42" y="5807.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="389.7" y="3701" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="392.72" y="3711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="423.5" y="1989" width="1.0" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="426.52" y="1999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="2837" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="414.78" y="2847.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="469" width="1.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="288.52" y="479.5" ></text>
</g>
<g >
<title>`COMPILE-LAMBDA-LIST-CODE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="321.2" y="5173" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="324.19" y="5183.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="233.9" y="517" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="236.89" y="527.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="490.6" y="5781" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="493.64" y="5791.5" ></text>
</g>
<g >
<title>`DO-LTV^LITERAL^FN^^ (1,321 samples, 52.55%)</title><rect x="57.9" y="5925" width="620.0" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="60.88" y="5935.5" >`DO-LTV^LITERAL^FN^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1685" width="0.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="430.27" y="1695.5" ></text>
</g>
<g >
<title>`llvm::APInt::APInt(unsigned int, unsigned long long, bool) (1 samples, 0.04%)</title><rect x="817.3" y="5621" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="820.32" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-TOPLEVEL^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="344.7" y="5045" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="347.66" y="5055.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="279.9" y="421" width="0.9" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="282.89" y="431.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="333.9" y="4309" width="0.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="336.87" y="4319.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1989" width="5.6" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="236.89" y="1999.5" ></text>
</g>
<g >
<title>0x1225f9094 (1 samples, 0.04%)</title><rect x="276.1" y="3861" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="279.13" y="3871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="285.1" y="901" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="288.05" y="911.5" ></text>
</g>
<g >
<title>`UNIVERSAL-ERROR-HANDLER^CORE^FN^^ (1 samples, 0.04%)</title><rect x="332.0" y="4437" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="334.99" y="4447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="385.0" y="4133" width="2.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="388.03" y="4143.5" ></text>
</g>
<g >
<title>`ITEM-EQUAL^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-ITEM))^MET (1 samples, 0.04%)</title><rect x="179.9" y="2069" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="182.91" y="2079.5" ></text>
</g>
<g >
<title>`core::type_of(gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.12%)</title><rect x="118.9" y="3557" width="1.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="121.89" y="3567.5" ></text>
</g>
<g >
<title>`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^ (2,028 samples, 80.67%)</title><rect x="10.0" y="6117" width="951.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="13.00" y="6127.5" >`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="231.1" y="3397" width="0.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="234.07" y="3407.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Constant*, llvm::Constant*, llvm::DenseMap (1 samples, 0.04%)</title><rect x="726.7" y="5829" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="729.73" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="379.9" y="5061" width="3.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="382.86" y="5071.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="13.8" y="5525" width="0.4" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="16.75" y="5535.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="329.2" y="4389" width="0.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="332.17" y="4399.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="592.5" y="5797" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="595.49" y="5807.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AssertingVH&lt;llvm::Value (1 samples, 0.04%)</title><rect x="705.6" y="5797" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="708.61" y="5807.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.08%)</title><rect x="584.0" y="5797" width="1.0" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="587.04" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="429.6" y="2325" width="1.0" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="432.62" y="2335.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="168.6" y="821" width="1.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="171.65" y="831.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3909" width="1.4" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="411.03" y="3919.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solve() (1 samples, 0.04%)</title><rect x="703.7" y="5797" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="706.73" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="336.7" y="3973" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="339.68" y="3983.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="167.7" y="1637" width="2.8" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="170.71" y="1647.5" ></text>
</g>
<g >
<title>`IRC-BEGIN-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="619.2" y="5285" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="622.24" y="5295.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="233.9" y="405" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="236.89" y="415.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (2 samples, 0.08%)</title><rect x="256.4" y="2805" width="1.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="259.42" y="2815.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (33 samples, 1.31%)</title><rect x="539.9" y="5813" width="15.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="542.92" y="5823.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (19 samples, 0.76%)</title><rect x="259.2" y="645" width="9.0" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="262.24" y="655.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="167.7" y="1269" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="170.71" y="1279.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="49.9" y="5045" width="1.9" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="52.90" y="5055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="410.8" y="4597" width="1.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="413.84" y="4607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1029" width="5.6" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="236.89" y="1039.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="313.7" y="5445" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="316.68" y="5455.5" ></text>
</g>
<g >
<title>`AST-INTERPRET-CST^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="286.9" y="5029" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="289.93" y="5039.5" ></text>
</g>
<g >
<title>`ENSURE-DATUM-ALLOCA^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="617.8" y="5397" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="620.84" y="5407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="3685" width="63.9" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="170.24" y="3695.5" >`INTERP..</text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.08%)</title><rect x="562.9" y="5781" width="1.0" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="565.92" y="5791.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="679.8" y="5941" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="682.79" y="5951.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="397.7" y="4117" width="1.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="400.70" y="4127.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="651.2" y="5365" width="0.4" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="654.16" y="5375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="167.7" y="1957" width="10.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="170.71" y="1967.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (11 samples, 0.44%)</title><rect x="172.4" y="885" width="5.2" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="175.40" y="895.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (57 samples, 2.27%)</title><rect x="204.3" y="869" width="26.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="207.32" y="879.5" >`..</text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="359.7" y="5765" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="362.68" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="421.6" y="2549" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="424.64" y="2559.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (2 samples, 0.08%)</title><rect x="725.8" y="5781" width="0.9" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="728.79" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="422.1" y="2229" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="425.11" y="2239.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (27 samples, 1.07%)</title><rect x="618.8" y="5333" width="12.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="621.77" y="5343.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="397.7" y="3765" width="1.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="400.70" y="3775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="276.6" y="3845" width="4.7" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="279.60" y="3855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="47.1" y="5557" width="1.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="50.08" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (22 samples, 0.88%)</title><rect x="423.0" y="3957" width="10.4" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="426.05" y="3967.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="599.5" y="5605" width="1.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="602.53" y="5615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="124.5" y="2533" width="1.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="127.53" y="2543.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="355.9" y="5701" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="358.93" y="5711.5" ></text>
</g>
<g >
<title>`core::Cons_O::member1(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="370.9" y="5653" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="373.95" y="5663.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.04%)</title><rect x="12.8" y="5573" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="15.82" y="5583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="386.0" y="3285" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="388.97" y="3295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="430.6" y="1637" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="433.56" y="1647.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="165.4" y="4037" width="1.8" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="168.36" y="4047.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="406.1" y="5653" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="409.15" y="5663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="933" width="5.6" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="236.89" y="943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="2597" width="0.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="428.86" y="2607.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.04%)</title><rect x="321.7" y="5045" width="0.4" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="324.66" y="5055.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="323.1" y="5381" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="326.07" y="5391.5" ></text>
</g>
<g >
<title>0x11a477094 (22 samples, 0.88%)</title><rect x="240.5" y="3189" width="10.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="243.46" y="3199.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="393.9" y="3333" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="396.95" y="3343.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="49.4" y="5685" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="52.43" y="5695.5" ></text>
</g>
<g >
<title>0x1225e30d4 (1 samples, 0.04%)</title><rect x="171.5" y="1541" width="0.4" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="174.46" y="1551.5" ></text>
</g>
<g >
<title>`DATUM-KIND^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="683.1" y="5925" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="686.08" y="5935.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="255.5" y="3285" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="258.48" y="3295.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (16 samples, 0.64%)</title><rect x="243.3" y="2053" width="7.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="246.28" y="2063.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="167.7" y="1013" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="170.71" y="1023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="164.0" y="4325" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="166.95" y="4335.5" ></text>
</g>
<g >
<title>`CONVERT-VARIABLE^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="332.9" y="4181" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="335.93" y="4191.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (22 samples, 0.88%)</title><rect x="167.7" y="1941" width="10.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="170.71" y="1951.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::SCEV const*, llvm::SmallVector&lt;std::__1::p (1 samples, 0.04%)</title><rect x="930.4" y="5861" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="933.44" y="5871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (57 samples, 2.27%)</title><rect x="204.3" y="1061" width="26.8" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="207.32" y="1071.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="423.0" y="3157" width="1.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="426.05" y="3167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1349" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="430.74" y="1359.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="646.9" y="5253" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="649.94" y="5263.5" ></text>
</g>
<g >
<title>0x122f2b094 (6 samples, 0.24%)</title><rect x="294.0" y="4773" width="2.8" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="296.97" y="4783.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((ORDINARY-REST-PARA (1 samples, 0.04%)</title><rect x="255.5" y="2997" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="258.48" y="3007.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="21.3" y="3701" width="0.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="24.26" y="3711.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="660.5" y="5429" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="663.55" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="2549" width="3.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="420.41" y="2559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (19 samples, 0.76%)</title><rect x="259.2" y="1109" width="9.0" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="262.24" y="1119.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="286.9" y="4677" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="289.93" y="4687.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="276.1" y="4037" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="279.13" y="4047.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="112.3" y="3701" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="115.32" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (7 samples, 0.28%)</title><rect x="407.6" y="5093" width="3.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="410.56" y="5103.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="125.9" y="3381" width="1.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="128.93" y="3391.5" ></text>
</g>
<g >
<title>0x11a479094 (5 samples, 0.20%)</title><rect x="284.6" y="1221" width="2.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="287.58" y="1231.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="423.5" y="2053" width="1.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="426.52" y="2063.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Pass*, llvm::Small (1 samples, 0.04%)</title><rect x="924.3" y="5877" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="927.34" y="5887.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="37.7" y="4597" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="40.69" y="4607.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="1525" width="1.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="168.83" y="1535.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="417.4" y="2069" width="3.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="420.41" y="2079.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="430.6" y="2341" width="0.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="433.56" y="2351.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="232.0" y="3013" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="235.01" y="3023.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="24.6" y="4085" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="27.55" y="4095.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (54 samples, 2.15%)</title><rect x="379.4" y="5701" width="25.3" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="382.40" y="5711.5" >`..</text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (16 samples, 0.64%)</title><rect x="243.3" y="1653" width="7.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="246.28" y="1663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="2933" width="4.2" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="279.60" y="2943.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (1 samples, 0.04%)</title><rect x="842.7" y="5733" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="845.67" y="5743.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="656.8" y="5397" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="659.79" y="5407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="242.8" y="2693" width="8.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="245.81" y="2703.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="388.3" y="4277" width="4.7" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="391.31" y="4287.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="611.3" y="5349" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="614.26" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5461" width="0.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="408.21" y="5471.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENTER-INSTRUCTION  (1 samples, 0.04%)</title><rect x="662.9" y="5653" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="665.90" y="5663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="3461" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="414.78" y="3471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="427.3" y="2469" width="2.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="430.27" y="2479.5" ></text>
</g>
<g >
<title>`PROCESS-CLEAVIR-LAMBDA-LIST^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="637.1" y="5397" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="640.08" y="5407.5" ></text>
</g>
<g >
<title>`HIR-&gt;MIR^CLASP-CLEAVIR^FN^^ (297 samples, 11.81%)</title><rect x="453.6" y="5877" width="139.4" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="456.56" y="5887.5" >`HIR-&gt;MIR^CLASP-C..</text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (1 samples, 0.04%)</title><rect x="631.0" y="5109" width="0.4" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="633.98" y="5119.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="2725" width="63.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="170.24" y="2735.5" >`INTERP..</text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (12 samples, 0.48%)</title><rect x="281.3" y="3397" width="5.6" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="284.30" y="3407.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="126.4" y="2213" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="129.40" y="2223.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (34 samples, 1.35%)</title><rect x="256.0" y="3125" width="15.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="258.95" y="3135.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="12.8" y="5557" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="15.82" y="5567.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.04%)</title><rect x="889.6" y="5765" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="892.60" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="285.1" y="821" width="0.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="288.05" y="831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="417.9" y="581" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="420.88" y="591.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="2181" width="1.0" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="432.62" y="2191.5" ></text>
</g>
<g >
<title>`OPTIMIZED-LEXICAL-LOCATION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="425.4" y="1461" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="428.39" y="1471.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="249.4" y="933" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="252.38" y="943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="423.5" y="2437" width="1.0" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="426.52" y="2447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="314.2" y="5333" width="0.9" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="317.15" y="5343.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="3845" width="3.8" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="420.41" y="3855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="3733" width="1.4" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="411.03" y="3743.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="279.4" y="501" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="282.42" y="511.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="43.3" y="5013" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="46.33" y="5023.5" ></text>
</g>
<g >
<title>`MAKE-DYNAMIC-ENVIRONMENT-AST^CLEAVIR-AST^FN^^ (1 samples, 0.04%)</title><rect x="300.1" y="5893" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="303.07" y="5903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="269.1" y="373" width="2.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="272.09" y="383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.6" y="4197" width="0.5" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="417.60" y="4207.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="327.3" y="4373" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="330.30" y="4383.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="960.5" y="5765" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="963.48" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="414.1" y="4085" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="417.13" y="4095.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="4085" width="1.4" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="411.03" y="4095.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="279.4" y="1205" width="1.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="282.42" y="1215.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="388.3" y="4357" width="5.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="391.31" y="4367.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="166.3" y="1029" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="169.30" y="1039.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="249.4" y="853" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="252.38" y="863.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T LEXICAL-VARIABLE-INFO T T))^ (1 samples, 0.04%)</title><rect x="93.5" y="3445" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="96.55" y="3455.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="104.8" y="3413" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="107.81" y="3423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="123.6" y="1397" width="0.9" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="126.59" y="1407.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="417.4" y="4421" width="5.2" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="420.41" y="4431.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (2 samples, 0.08%)</title><rect x="708.4" y="5829" width="1.0" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="711.42" y="5839.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="415.5" y="3989" width="0.5" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="418.54" y="3999.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="529.6" y="5749" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="532.59" y="5759.5" ></text>
</g>
<g >
<title>`GC_alloc_large (1 samples, 0.04%)</title><rect x="496.3" y="5669" width="0.4" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="499.27" y="5679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="295.4" y="3829" width="1.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="298.38" y="3839.5" ></text>
</g>
<g >
<title>0x11a477094 (9 samples, 0.36%)</title><rect x="276.6" y="2437" width="4.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="279.60" y="2447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="294.0" y="5093" width="2.8" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="296.97" y="5103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="423.0" y="2933" width="1.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="426.05" y="2943.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (4 samples, 0.16%)</title><rect x="49.9" y="5237" width="1.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="52.90" y="5247.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.04%)</title><rect x="888.7" y="5685" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="891.66" y="5695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.7" y="1045" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="430.74" y="1055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="4261" width="1.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="412.44" y="4271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="260.6" y="53" width="7.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="263.64" y="63.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="165.4" y="2501" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="168.36" y="2511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="24.1" y="4229" width="1.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="27.08" y="4239.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoBase&lt;llvm::BasicBlock, llvm::Loop&gt;::analyze(llvm: (3 samples, 0.12%)</title><rect x="784.9" y="5877" width="1.4" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="787.93" y="5887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.3" y="885" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="430.27" y="895.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="268.6" y="1381" width="3.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="271.62" y="1391.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="295.4" y="3637" width="1.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="298.38" y="3647.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="257.4" y="1733" width="1.8" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="260.36" y="1743.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="403.3" y="5061" width="0.5" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="406.33" y="5071.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="410.8" y="4117" width="0.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="413.84" y="4127.5" ></text>
</g>
<g >
<title>0x11a477094 (22 samples, 0.88%)</title><rect x="167.7" y="2341" width="10.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="170.71" y="2351.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.04%)</title><rect x="698.1" y="5797" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="701.10" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="31.6" y="5237" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="34.59" y="5247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="254.1" y="3189" width="1.4" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="257.07" y="3199.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::StringOutputStream_O&gt; gctools::GCObjec (1 samples, 0.04%)</title><rect x="27.8" y="4757" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="30.84" y="4767.5" ></text>
</g>
<g >
<title>`COMPILE-ONLY-REG-AND-OPT-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="662.9" y="5621" width="0.5" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="665.90" y="5631.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::Type*, std::__1::allocator&lt;llvm::Ty (1 samples, 0.04%)</title><rect x="660.5" y="5525" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="663.55" y="5535.5" ></text>
</g>
<g >
<title>`DO-TIME^CORE^FN^^ (2,028 samples, 80.67%)</title><rect x="10.0" y="6101" width="951.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="13.00" y="6111.5" >`DO-TIME^CORE^FN^^</text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="363.4" y="5733" width="2.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="366.44" y="5743.5" ></text>
</g>
<g >
<title>`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="960.5" y="5749" width="0.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="963.48" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="4453" width="2.8" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="296.97" y="4463.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1429" width="5.6" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="236.89" y="1439.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (1 samples, 0.04%)</title><rect x="287.9" y="4421" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="290.87" y="4431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="391.6" y="2469" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="394.60" y="2479.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="119.8" y="3445" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="122.83" y="3455.5" ></text>
</g>
<g >
<title>`malloc (3 samples, 0.12%)</title><rect x="732.8" y="5717" width="1.4" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="735.83" y="5727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="278.5" y="645" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="281.48" y="655.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="424.9" y="1157" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="427.92" y="1167.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="255.5" y="3269" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="258.48" y="3279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="4549" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="408.68" y="4559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (233 samples, 9.27%)</title><rect x="163.5" y="4629" width="109.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="166.48" y="4639.5" >`core::Funcal..</text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (9 samples, 0.36%)</title><rect x="908.4" y="5797" width="4.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="911.38" y="5807.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="123.6" y="1013" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="126.59" y="1023.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2917" width="1.4" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="127.53" y="2927.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="417.4" y="1125" width="2.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="420.41" y="1135.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="167.7" y="1989" width="10.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="170.71" y="1999.5" ></text>
</g>
<g >
<title>`FIND-SLOT-DEFINITION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="358.3" y="5781" width="0.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="361.27" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="295.4" y="3765" width="1.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="298.38" y="3775.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="645.5" y="5333" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="648.53" y="5343.5" ></text>
</g>
<g >
<title>`core::clasp_namestring(gctools::smart_ptr&lt;core::T_O&gt;, int) (2 samples, 0.08%)</title><rect x="677.9" y="5909" width="1.0" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="680.92" y="5919.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass* (1 samples, 0.04%)</title><rect x="847.4" y="5845" width="0.4" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="850.36" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.4" y="1749" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="428.39" y="1759.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (1 samples, 0.04%)</title><rect x="51.8" y="4997" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="54.77" y="5007.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CDR-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="400.5" y="3685" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="403.52" y="3695.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::StringMapIterator&lt;llvm::Value*&gt;, bool&gt; llv (1 samples, 0.04%)</title><rect x="643.7" y="5269" width="0.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="646.65" y="5279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="408.0" y="4565" width="2.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="411.03" y="4575.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="247.5" y="981" width="2.3" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="250.50" y="991.5" ></text>
</g>
<g >
<title>`small_malloc_should_clear (1 samples, 0.04%)</title><rect x="702.8" y="5637" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="705.79" y="5647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="613" width="9.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="262.24" y="623.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="86.5" y="4981" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="89.51" y="4991.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="4677" width="0.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="290.87" y="4687.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="349.8" y="5317" width="0.5" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="352.82" y="5327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="416.0" y="4741" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="419.01" y="4751.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="5189" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="327.01" y="5199.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="279.4" y="357" width="0.5" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="282.42" y="367.5" ></text>
</g>
<g >
<title>`MAKE-EXPRESSION-RESULT^ECLECTOR.PARSE-RESULT^((CST-CLIENT T T T (1 samples, 0.04%)</title><rect x="36.8" y="3285" width="0.4" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="39.75" y="3295.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="92.1" y="3445" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="95.14" y="3455.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="411.8" y="4325" width="0.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="414.78" y="4335.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LegacyLICMPass::runOnLoop(llvm::Loop*, l (5 samples, 0.20%)</title><rect x="780.2" y="5877" width="2.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="783.24" y="5887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="36.3" y="4645" width="1.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="39.28" y="4655.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (4 samples, 0.16%)</title><rect x="858.6" y="5829" width="1.9" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="861.62" y="5839.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="124.1" y="1317" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="127.06" y="1327.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="281.3" y="4245" width="5.6" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="284.30" y="4255.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (20 samples, 0.80%)</title><rect x="112.8" y="3813" width="9.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="115.79" y="3823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="285.1" y="757" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="288.05" y="767.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="177.1" y="565" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="180.10" y="575.5" ></text>
</g>
<g >
<title>`wrapped_cl__listSTAR_VaList_sp (1 samples, 0.04%)</title><rect x="664.8" y="5589" width="0.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="667.77" y="5599.5" ></text>
</g>
<g >
<title>`CHAR^COMMON-LISP^SETF^^ (1 samples, 0.04%)</title><rect x="21.7" y="3813" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="24.73" y="3823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="400.0" y="4389" width="2.4" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="403.05" y="4399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3077" width="1.4" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="411.03" y="3087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="427.3" y="2181" width="0.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="430.27" y="2191.5" ></text>
</g>
<g >
<title>`llvm::isSafeToLoadUnconditionally(llvm::Value*, unsigned int, l (1 samples, 0.04%)</title><rect x="773.2" y="5829" width="0.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="776.20" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="5061" width="2.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="55.24" y="5071.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CONTEXT-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="410.8" y="4053" width="0.5" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="413.84" y="4063.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.0" y="2629" width="0.4" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="411.97" y="2639.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="714.1" y="5845" width="0.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="717.06" y="5855.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::computeExitLimit(llvm::Loop const*, llvm (1 samples, 0.04%)</title><rect x="846.4" y="5717" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="849.42" y="5727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="424.9" y="1013" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="427.92" y="1023.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="105.8" y="3269" width="0.4" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="108.75" y="3279.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="97.8" y="3637" width="0.4" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="100.77" y="3647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (20 samples, 0.80%)</title><rect x="112.8" y="3701" width="9.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="115.79" y="3711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="432.0" y="1349" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="434.96" y="1359.5" ></text>
</g>
<g >
<title>`MAKE-CONDITION^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="98.7" y="3765" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="101.71" y="3775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="417.4" y="1733" width="2.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="420.41" y="1743.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4693" width="2.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="55.24" y="4703.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="430.1" y="1685" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="433.09" y="1695.5" ></text>
</g>
<g >
<title>`llvm::MemorySSAWalker::getClobberingMemoryAccess(llvm::Instruct (1 samples, 0.04%)</title><rect x="789.6" y="5829" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="792.63" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="452.6" y="5525" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="455.62" y="5535.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="828.6" y="5589" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="831.58" y="5599.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.04%)</title><rect x="322.1" y="5093" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="325.13" y="5103.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.04%)</title><rect x="66.8" y="4997" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="69.79" y="5007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4501" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="408.68" y="4511.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (11 samples, 0.44%)</title><rect x="172.4" y="1365" width="5.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="175.40" y="1375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="430.6" y="1957" width="0.4" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="433.56" y="1967.5" ></text>
</g>
<g >
<title>0x11a477094 (23 samples, 0.91%)</title><rect x="276.1" y="5077" width="10.8" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="279.13" y="5087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="432.0" y="1237" width="0.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="434.96" y="1247.5" ></text>
</g>
<g >
<title>`BUILD-FUNCTION-DAG^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (43 samples, 1.71%)</title><rect x="468.6" y="5829" width="20.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="471.58" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="242.8" y="2677" width="8.0" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="245.81" y="2687.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="723.4" y="5813" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="726.44" y="5823.5" ></text>
</g>
<g >
<title>`llvm::iterator_range&lt;llvm::po_iterator&lt;llvm::BasicBlock*, llvm: (1 samples, 0.04%)</title><rect x="785.4" y="5845" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="788.40" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.3" y="837" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="430.27" y="847.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="284.6" y="1157" width="2.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="287.58" y="1167.5" ></text>
</g>
<g >
<title>`CONVERT-LOCAL-FUNCTION^CLEAVIR-CST-TO-AST^FN^^ (23 samples, 0.91%)</title><rect x="257.4" y="1973" width="10.8" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="260.36" y="1983.5" ></text>
</g>
<g >
<title>`IRC-LOAD^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="664.3" y="5589" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="667.30" y="5599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="52.7" y="4165" width="1.9" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="55.71" y="4175.5" ></text>
</g>
<g >
<title>`core::clasp_mergePathnames(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="953.0" y="5909" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="955.97" y="5919.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (802 samples, 31.90%)</title><rect x="301.5" y="5909" width="376.4" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="304.48" y="5919.5" >`TRANSLATE-AST^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`llvm::GetIfCondition(llvm::BasicBlock*, llvm::BasicBlock*&amp;, llv (1 samples, 0.04%)</title><rect x="935.1" y="5829" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="938.13" y="5839.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (46 samples, 1.83%)</title><rect x="325.4" y="5093" width="21.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="328.42" y="5103.5" >`..</text>
</g>
<g >
<title>`llvm::ScalarEvolution::computeExitLimitFromCond(llvm::Loop cons (1 samples, 0.04%)</title><rect x="920.1" y="5781" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="923.11" y="5791.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.04%)</title><rect x="765.2" y="5685" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="768.22" y="5695.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_combine_recursive_helper::combine(u (1 samples, 0.04%)</title><rect x="654.9" y="5237" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="657.92" y="5247.5" ></text>
</g>
<g >
<title>`llvm::Value::setValueName(llvm::StringMapEntry&lt;llvm::Value*&gt;*) (1 samples, 0.04%)</title><rect x="704.7" y="5813" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="707.67" y="5823.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="344.7" y="4997" width="0.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="347.66" y="5007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETF-FDEFINITION-AST T))^METHO (2 samples, 0.08%)</title><rect x="434.3" y="5589" width="1.0" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="437.31" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="424.9" y="1589" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="427.92" y="1599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="2661" width="3.8" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="420.41" y="2671.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="38.6" y="4501" width="2.8" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="41.63" y="4511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="231.1" y="3557" width="0.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="234.07" y="3567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="125.9" y="2533" width="1.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="128.93" y="2543.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="122.6" y="3077" width="1.9" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="125.65" y="3087.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="1797" width="50.7" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="183.38" y="1807.5" >`CONV..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="425.9" y="3349" width="0.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="428.86" y="3359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (23 samples, 0.91%)</title><rect x="276.1" y="5061" width="10.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="279.13" y="5071.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="421.6" y="2213" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="424.64" y="2223.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (16 samples, 0.64%)</title><rect x="260.6" y="69" width="7.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="263.64" y="79.5" ></text>
</g>
<g >
<title>`core::cl__append(gctools::smart_ptr&lt;core::Vaslist&gt;) (1 samples, 0.04%)</title><rect x="122.6" y="2341" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="125.65" y="2351.5" ></text>
</g>
<g >
<title>`IRC-INT-TO-PTR^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="632.4" y="5301" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="635.39" y="5311.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="410.8" y="4549" width="1.9" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="413.84" y="4559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.7" y="1477" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="430.74" y="1487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="332.9" y="4197" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="335.93" y="4207.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (21 samples, 0.84%)</title><rect x="16.6" y="4597" width="9.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="19.57" y="4607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="3621" width="5.6" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="284.30" y="3631.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIndexedOffsetInType(llvm::Type*, llvm::Arr (1 samples, 0.04%)</title><rect x="873.2" y="5797" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="876.17" y="5807.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="631.9" y="5269" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="634.92" y="5279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="3269" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="412.90" y="3279.5" ></text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (1 samples, 0.04%)</title><rect x="242.8" y="1861" width="0.5" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="245.81" y="1871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="414.1" y="3973" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="417.13" y="3983.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (1 samples, 0.04%)</title><rect x="233.0" y="2181" width="0.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="235.95" y="2191.5" ></text>
</g>
<g >
<title>`llvm::APInt::clearUnusedBits() (1 samples, 0.04%)</title><rect x="741.8" y="5781" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="744.75" y="5791.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.04%)</title><rect x="787.7" y="5701" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="790.75" y="5711.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (7 samples, 0.28%)</title><rect x="268.6" y="1237" width="3.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="271.62" y="1247.5" ></text>
</g>
<g >
<title>`llvm::FoldBranchToCommonDest(llvm::BranchInst*, unsigned int) (1 samples, 0.04%)</title><rect x="835.2" y="5813" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="838.16" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="388.3" y="4005" width="3.8" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="391.31" y="4015.5" ></text>
</g>
<g >
<title>`LOCATION-OWNER^CLEAVIR-PARTIAL-INLINING^FN^^ (1 samples, 0.04%)</title><rect x="501.4" y="5797" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="504.43" y="5807.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (4 samples, 0.16%)</title><rect x="825.3" y="5765" width="1.9" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="828.30" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="423.0" y="3589" width="3.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="426.05" y="3599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="414.1" y="3413" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="417.13" y="3423.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="393.5" y="3621" width="0.4" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="396.48" y="3631.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="145.6" y="4197" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="148.65" y="4207.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (3 samples, 0.12%)</title><rect x="124.5" y="3269" width="1.4" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="127.53" y="3279.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="2197" width="4.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="285.70" y="2207.5" ></text>
</g>
<g >
<title>`llvm::Function::addAttribute(unsigned int, llvm::Attribute::Att (1 samples, 0.04%)</title><rect x="676.5" y="5733" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="679.51" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="423.0" y="2885" width="1.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="426.05" y="2895.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.08%)</title><rect x="580.3" y="5781" width="0.9" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="583.29" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="414.1" y="3925" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="417.13" y="3935.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (108 samples, 4.30%)</title><rect x="180.4" y="2197" width="50.7" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="183.38" y="2207.5" >`core..</text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="124.5" y="1733" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="127.53" y="1743.5" ></text>
</g>
<g >
<title>`cc_error_type_error (1 samples, 0.04%)</title><rect x="125.0" y="1829" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="128.00" y="1839.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.04%)</title><rect x="425.9" y="885" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="428.86" y="895.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CONS-CST-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="296.8" y="5157" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="299.79" y="5167.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (1 samples, 0.04%)</title><rect x="697.6" y="5765" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="700.63" y="5775.5" ></text>
</g>
<g >
<title>`core::cl__error(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.04%)</title><rect x="298.2" y="5333" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="301.19" y="5343.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (PARSER))^METHOD^^ (2 samples, 0.08%)</title><rect x="133.0" y="4581" width="0.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="135.98" y="4591.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="268.6" y="549" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="271.62" y="559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="4021" width="3.8" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="420.41" y="4031.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="4021" width="1.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="412.44" y="4031.5" ></text>
</g>
<g >
<title>`promoteMemoryToRegister(llvm::Function&amp;, llvm::DominatorTree&amp;,  (1 samples, 0.04%)</title><rect x="931.4" y="5893" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="934.38" y="5903.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="683.1" y="5877" width="0.4" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="686.08" y="5887.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.04%)</title><rect x="496.3" y="5733" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="499.27" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="247.5" y="917" width="1.9" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="250.50" y="927.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="424.9" y="1557" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="427.92" y="1567.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="15.2" y="5381" width="0.4" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="18.16" y="5391.5" ></text>
</g>
<g >
<title>`HOIST-LOAD-TIME-VALUE^CLASP-CLEAVIR-AST^FN^^ (56 samples, 2.23%)</title><rect x="323.5" y="5397" width="26.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="326.54" y="5407.5" >`..</text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="951.6" y="5845" width="0.4" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="954.56" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="172.4" y="549" width="4.7" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="175.40" y="559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="405.7" y="4805" width="0.4" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="408.68" y="4815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="424.9" y="3093" width="1.0" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="427.92" y="3103.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (1 samples, 0.04%)</title><rect x="456.8" y="5845" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="459.84" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="123.6" y="821" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="126.59" y="831.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="401.0" y="3013" width="0.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="403.99" y="3023.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (11 samples, 0.44%)</title><rect x="172.4" y="965" width="5.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="175.40" y="975.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.08%)</title><rect x="580.3" y="5813" width="0.9" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="583.29" y="5823.5" ></text>
</g>
<g >
<title>`core::type_of_decide_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="142.8" y="4293" width="0.5" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="145.83" y="4303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="901" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="430.74" y="911.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="821" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="171.18" y="831.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="430.6" y="1845" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="433.56" y="1855.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.04%)</title><rect x="871.8" y="5765" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="874.77" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1829" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="430.27" y="1839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="393.5" y="3941" width="0.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="396.48" y="3951.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="424.5" y="3061" width="0.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="427.46" y="3071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (49 samples, 1.95%)</title><rect x="410.8" y="5269" width="23.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="413.84" y="5279.5" >`..</text>
</g>
<g >
<title>`C+ (5 samples, 0.20%)</title><rect x="637.5" y="5397" width="2.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="640.55" y="5407.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="318.4" y="5253" width="0.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="321.38" y="5263.5" ></text>
</g>
<g >
<title>`FIND-SLOT-DEFINITION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="127.3" y="5237" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="130.34" y="5247.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.04%)</title><rect x="12.8" y="5477" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="15.82" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="415.5" y="4181" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="418.54" y="4191.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (34 samples, 1.35%)</title><rect x="256.0" y="3237" width="15.9" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="258.95" y="3247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="1061" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="423.70" y="1071.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="165.8" y="1237" width="1.0" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="168.83" y="1247.5" ></text>
</g>
<g >
<title>`LTV/SYMBOL^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="311.8" y="5765" width="0.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="314.81" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="4181" width="3.8" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="420.41" y="4191.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="161.6" y="4277" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="164.61" y="4287.5" ></text>
</g>
<g >
<title>`llvm::hash_value(llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="750.2" y="5605" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="753.20" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="2981" width="0.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="403.99" y="2991.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="36.3" y="4661" width="1.4" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="39.28" y="4671.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::track(void*, llvm::Metadata&amp;, llvm::Poi (1 samples, 0.04%)</title><rect x="605.6" y="5381" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="608.63" y="5391.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="3941" width="1.4" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="411.03" y="3951.5" ></text>
</g>
<g >
<title>`POSITION^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="773" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="171.18" y="783.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="34.9" y="4405" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="37.88" y="4415.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (8 samples, 0.32%)</title><rect x="336.2" y="4613" width="3.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="339.21" y="4623.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="42.9" y="4901" width="0.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="45.86" y="4911.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="608.0" y="5461" width="0.4" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="610.98" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (40 samples, 1.59%)</title><rect x="232.0" y="3813" width="18.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="235.01" y="3823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="431.5" y="3413" width="1.9" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="434.50" y="3423.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="549" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="423.70" y="559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="276.1" y="3909" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="279.13" y="3919.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="3525" width="1.4" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="411.03" y="3535.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (1 samples, 0.04%)</title><rect x="505.7" y="5525" width="0.4" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="508.66" y="5535.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.04%)</title><rect x="893.4" y="5733" width="0.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="896.36" y="5743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (305 samples, 12.13%)</title><rect x="130.2" y="4997" width="143.1" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="133.16" y="5007.5" >`core::Funcallable..</text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="60.2" y="5189" width="0.5" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="63.22" y="5199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="382.2" y="4213" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="385.21" y="4223.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="1301" width="9.0" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="262.24" y="1311.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="654.9" y="5461" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="657.92" y="5471.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^FN^^ (2 samples, 0.08%)</title><rect x="358.3" y="5765" width="0.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="361.27" y="5775.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="254.1" y="3317" width="1.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="257.07" y="3327.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="657.7" y="5445" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="660.73" y="5455.5" ></text>
</g>
<g >
<title>`POSSIBLY-ADD-ITEM^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-STA (1 samples, 0.04%)</title><rect x="186.5" y="165" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="189.48" y="175.5" ></text>
</g>
<g >
<title>`C+ (3 samples, 0.12%)</title><rect x="666.7" y="5621" width="1.4" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="669.65" y="5631.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="85.1" y="4901" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="88.10" y="4911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="400.5" y="3733" width="1.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="403.52" y="3743.5" ></text>
</g>
<g >
<title>`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="347.0" y="5189" width="1.4" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="350.01" y="5199.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="380.3" y="4613" width="1.0" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="383.33" y="4623.5" ></text>
</g>
<g >
<title>0x11a477094 (17 samples, 0.68%)</title><rect x="242.8" y="2421" width="8.0" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="245.81" y="2431.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="390.2" y="3525" width="1.9" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="393.19" y="3535.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="389" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="423.70" y="399.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.04%)</title><rect x="372.8" y="5701" width="0.5" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="375.82" y="5711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="250.8" y="4149" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="253.79" y="4159.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (12 samples, 0.48%)</title><rect x="281.3" y="4565" width="5.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="284.30" y="4575.5" ></text>
</g>
<g >
<title>`llvm::BranchProbabilityInfo::updatePostDominatedByColdCall(llvm (1 samples, 0.04%)</title><rect x="852.5" y="5861" width="0.5" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="855.52" y="5871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="412.3" y="4181" width="0.4" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="415.25" y="4191.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="409.4" y="4085" width="1.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="412.44" y="4095.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="413.2" y="4917" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="416.19" y="4927.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="240.0" y="2773" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="242.99" y="2783.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="533" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="423.70" y="543.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="231.5" y="3317" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="234.54" y="3327.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="335.7" y="4469" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="338.74" y="4479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="417.4" y="917" width="1.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="420.41" y="927.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="577.9" y="5717" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="580.94" y="5727.5" ></text>
</g>
<g >
<title>`COMPILE-WRONG-NUMBER-ARGUMENTS-BLOCK^COMPILER^FN^^ (3 samples, 0.12%)</title><rect x="635.7" y="5381" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="638.67" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="4197" width="0.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="414.31" y="4207.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="172.4" y="373" width="4.7" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="175.40" y="383.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="242.8" y="2501" width="8.0" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="245.81" y="2511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="382.2" y="4373" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="385.21" y="4383.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="247.5" y="789" width="1.9" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="250.50" y="799.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.0" y="2629" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="403.99" y="2639.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="243.3" y="741" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="246.28" y="751.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="43.8" y="5029" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="46.79" y="5039.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (19 samples, 0.76%)</title><rect x="259.2" y="757" width="9.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="262.24" y="767.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="130.6" y="4565" width="1.0" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="133.63" y="4575.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="167.7" y="1973" width="10.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="170.71" y="1983.5" ></text>
</g>
<g >
<title>`SEPARATE-FUNCTION-BODY^CONCRETE-SYNTAX-TREE^((CONS-CST))^METHOD (1 samples, 0.04%)</title><rect x="272.4" y="4581" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="275.38" y="4591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="416.5" y="4853" width="0.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="419.48" y="4863.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.04%)</title><rect x="960.9" y="5893" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="963.95" y="5903.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="397.7" y="3573" width="0.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="400.70" y="3583.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="785.4" y="5717" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="788.40" y="5727.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="785.4" y="5765" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="788.40" y="5775.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.04%)</title><rect x="920.6" y="5829" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="923.58" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2325" width="14.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="260.36" y="2335.5" ></text>
</g>
<g >
<title>`ERROR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="125.9" y="2005" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="128.93" y="2015.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="412.3" y="3397" width="0.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="415.25" y="3407.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (2 samples, 0.08%)</title><rect x="169.1" y="757" width="1.0" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="172.12" y="767.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (1 samples, 0.04%)</title><rect x="746.4" y="5701" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="749.44" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="417.9" y="837" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="420.88" y="847.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="279.4" y="965" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="282.42" y="975.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (1 samples, 0.04%)</title><rect x="34.9" y="4165" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="37.88" y="4175.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="167.7" y="1221" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="170.71" y="1231.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="421.6" y="3077" width="1.0" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="424.64" y="3087.5" ></text>
</g>
<g >
<title>0x11a477094 (23 samples, 0.91%)</title><rect x="276.1" y="4901" width="10.8" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="279.13" y="4911.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (4 samples, 0.16%)</title><rect x="165.4" y="3957" width="1.8" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="168.36" y="3967.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.04%)</title><rect x="372.8" y="5717" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="375.82" y="5727.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (2 samples, 0.08%)</title><rect x="294.0" y="3989" width="0.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="296.97" y="3999.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="3397" width="4.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="279.60" y="3407.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (35 samples, 1.39%)</title><rect x="15.6" y="5285" width="16.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="18.63" y="5295.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="242.8" y="2645" width="8.0" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="245.81" y="2655.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (7 samples, 0.28%)</title><rect x="88.4" y="4309" width="3.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="91.39" y="4319.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="321.7" y="5221" width="1.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="324.66" y="5231.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="320.7" y="5413" width="1.0" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="323.72" y="5423.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="297.7" y="5269" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="300.72" y="5279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.0" y="2453" width="0.4" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="411.97" y="2463.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Function* (llvmo::Module_O::*)(g (1 samples, 0.04%)</title><rect x="354.5" y="5445" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="357.52" y="5455.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="432.0" y="2389" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="434.96" y="2399.5" ></text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (2 samples, 0.08%)</title><rect x="119.4" y="3509" width="0.9" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="122.36" y="3519.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="417.4" y="1141" width="2.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="420.41" y="1151.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="279.4" y="693" width="1.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="282.42" y="703.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="312.7" y="5589" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="315.74" y="5599.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (1 samples, 0.04%)</title><rect x="800.0" y="5877" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="802.95" y="5887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="360.2" y="5781" width="7.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="363.15" y="5791.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="331.1" y="4469" width="0.4" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="334.05" y="4479.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.3" y="1125" width="0.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="430.27" y="1135.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="122.2" y="3733" width="5.1" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="125.18" y="3743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="570.4" y="5797" width="3.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="573.43" y="5807.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (2 samples, 0.08%)</title><rect x="29.7" y="5077" width="1.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="32.71" y="5087.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="98.2" y="3797" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="101.24" y="3807.5" ></text>
</g>
<g >
<title>`ENTRY-FROM-PARAMETER^CLEAVIR-CST-TO-AST^((ORDINARY-KEY-PARAMETE (1 samples, 0.04%)</title><rect x="132.0" y="4485" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="135.04" y="4495.5" ></text>
</g>
<g >
<title>`TRANSLATE-FUNCALL^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="316.5" y="5125" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="319.50" y="5135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="3861" width="1.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="412.44" y="3871.5" ></text>
</g>
<g >
<title>`llvm::isNoAliasFn(llvm::Value const*, llvm::TargetLibraryInfo c (1 samples, 0.04%)</title><rect x="820.1" y="5701" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="823.14" y="5711.5" ></text>
</g>
<g >
<title>0x11a479094 (1 samples, 0.04%)</title><rect x="231.1" y="3509" width="0.4" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="234.07" y="3519.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="865.7" y="5765" width="0.4" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="868.66" y="5775.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, ll (1 samples, 0.04%)</title><rect x="901.8" y="5781" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="904.81" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (23 samples, 0.91%)</title><rect x="423.0" y="4453" width="10.8" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="426.05" y="4463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.6" y="2341" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="424.64" y="2351.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (25 samples, 0.99%)</title><rect x="16.6" y="5013" width="11.7" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="19.57" y="5023.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="295.8" y="2117" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="298.85" y="2127.5" ></text>
</g>
<g >
<title>`llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBloc (1 samples, 0.04%)</title><rect x="623.0" y="5093" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="626.00" y="5103.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (1 samples, 0.04%)</title><rect x="952.0" y="5909" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="955.03" y="5919.5" ></text>
</g>
<g >
<title>`OF-CLASS-P^CORE^FN^^ (1 samples, 0.04%)</title><rect x="249.4" y="421" width="0.4" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="252.38" y="431.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="2101" width="4.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="279.60" y="2111.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (4 samples, 0.16%)</title><rect x="465.8" y="5781" width="1.8" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="468.76" y="5791.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::PointerType_O&gt; gctools::GCObjectAppro (1 samples, 0.04%)</title><rect x="326.8" y="4565" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="329.83" y="4575.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="279.4" y="709" width="1.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="282.42" y="719.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="247.5" y="741" width="1.9" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="250.50" y="751.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="401.0" y="3317" width="0.9" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="403.99" y="3327.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT))^ (1 samples, 0.04%)</title><rect x="268.6" y="229" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="271.62" y="239.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="427.3" y="997" width="0.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="430.27" y="1007.5" ></text>
</g>
<g >
<title>`llvm::StoreInst::StoreInst(llvm::Value*, llvm::Value*, bool, un (1 samples, 0.04%)</title><rect x="641.3" y="5301" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="644.30" y="5311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="341.8" y="4581" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="344.85" y="4591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="390.7" y="2981" width="1.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="393.66" y="2991.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="256.0" y="2965" width="1.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="258.95" y="2975.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="1333" width="5.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="175.40" y="1343.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((PRECALC-VALUE-INST (1 samples, 0.04%)</title><rect x="335.7" y="4325" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="338.74" y="4335.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1:: (1 samples, 0.04%)</title><rect x="340.9" y="4405" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="343.91" y="4415.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="432.0" y="1669" width="0.4" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="434.96" y="1679.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="425.9" y="2101" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="428.86" y="2111.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (17 samples, 0.68%)</title><rect x="242.8" y="2997" width="8.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="245.81" y="3007.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="2053" width="1.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="427.92" y="2063.5" ></text>
</g>
<g >
<title>`core::ext__class_unboundp(gctools::smart_ptr&lt;core::ClassHolder_ (1 samples, 0.04%)</title><rect x="309.0" y="5829" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="311.99" y="5839.5" ></text>
</g>
<g >
<title>`__v2printf (1 samples, 0.04%)</title><rect x="432.4" y="2213" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="435.43" y="2223.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.04%)</title><rect x="831.4" y="5781" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="834.40" y="5791.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="382.2" y="3973" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="385.21" y="3983.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="243.3" y="581" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="246.28" y="591.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.04%)</title><rect x="432.4" y="2293" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="435.43" y="2303.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="318.4" y="5493" width="0.4" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="321.38" y="5503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="146.6" y="4325" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="149.59" y="4335.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (48 samples, 1.91%)</title><rect x="324.5" y="5157" width="22.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="327.48" y="5167.5" >`..</text>
</g>
<g >
<title>`PROCESS-CAPTURED-VARIABLES^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="331.5" y="4645" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="334.52" y="4655.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;llvm::PoisoningVH&lt;llvm:: (1 samples, 0.04%)</title><rect x="691.1" y="5797" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="694.06" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="337.2" y="4357" width="0.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="340.15" y="4367.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="491.1" y="5797" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="494.11" y="5807.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.04%)</title><rect x="918.7" y="5845" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="921.70" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="2437" width="1.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="168.83" y="2447.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="177.6" y="1541" width="0.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="180.57" y="1551.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="386.0" y="3605" width="1.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="388.97" y="3615.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="409.9" y="1781" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="412.90" y="1791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="405.7" y="4677" width="0.4" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="408.68" y="4687.5" ></text>
</g>
<g >
<title>`TRANSLATE-FUNCALL^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="664.3" y="5637" width="1.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="667.30" y="5647.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="579.3" y="5797" width="0.5" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="582.35" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="2693" width="3.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="420.41" y="2703.5" ></text>
</g>
<g >
<title>`wrapped_ArrayType_O__get_Type_spuint64_t (1 samples, 0.04%)</title><rect x="355.0" y="5525" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="357.99" y="5535.5" ></text>
</g>
<g >
<title>`llvm::StoreInst::StoreInst(llvm::Value*, llvm::Value*, bool, ll (1 samples, 0.04%)</title><rect x="641.3" y="5317" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="644.30" y="5327.5" ></text>
</g>
<g >
<title>`COMMA^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="36.8" y="3685" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="39.75" y="3695.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="287.4" y="5445" width="1.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="290.40" y="5455.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="36.3" y="4229" width="1.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="39.28" y="4239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="3701" width="1.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="411.03" y="3711.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="937.0" y="5893" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="940.01" y="5903.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatt (1 samples, 0.04%)</title><rect x="948.3" y="5829" width="0.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="951.27" y="5839.5" ></text>
</g>
<g >
<title>`BYPASS-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.08%)</title><rect x="532.9" y="5829" width="0.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="535.88" y="5839.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (2 samples, 0.08%)</title><rect x="858.6" y="5797" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="861.62" y="5807.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="836.6" y="5781" width="0.4" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="839.56" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="392.1" y="4117" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="395.07" y="4127.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="393.5" y="4005" width="0.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="396.48" y="4015.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="297.3" y="5253" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="300.26" y="5263.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="416.5" y="4373" width="0.4" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="419.48" y="4383.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="282.7" y="1509" width="1.9" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="285.70" y="1519.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="284.6" y="1237" width="2.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="287.58" y="1247.5" ></text>
</g>
<g >
<title>`HOIST-AST^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="336.2" y="4549" width="1.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="339.21" y="4559.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="653.0" y="5509" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="656.04" y="5519.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="345.6" y="4997" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="348.60" y="5007.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (2 samples, 0.08%)</title><rect x="14.2" y="5509" width="1.0" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="17.22" y="5519.5" ></text>
</g>
<g >
<title>`PROCESS-CAPTURED-VARIABLES^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="315.1" y="5333" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="318.09" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (14 samples, 0.56%)</title><rect x="171.5" y="1845" width="6.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="174.46" y="1855.5" ></text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (1 samples, 0.04%)</title><rect x="828.1" y="5589" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="831.11" y="5599.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (19 samples, 0.76%)</title><rect x="259.2" y="1445" width="9.0" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="262.24" y="1455.5" ></text>
</g>
<g >
<title>`IRC-PERSONALITY-FUNCTION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="350.3" y="5333" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="353.29" y="5343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="86.5" y="5013" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="89.51" y="5023.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (1 samples, 0.04%)</title><rect x="231.5" y="3973" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="234.54" y="3983.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="581.2" y="5797" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="584.23" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="329.6" y="4421" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="332.64" y="4431.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="425.9" y="3141" width="0.9" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="428.86" y="3151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3733" width="3.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="420.41" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="392.1" y="4053" width="0.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="395.07" y="4063.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (108 samples, 4.30%)</title><rect x="180.4" y="2101" width="50.7" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="183.38" y="2111.5" >`core..</text>
</g>
<g >
<title>`core::type_of(gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.12%)</title><rect x="79.5" y="4981" width="1.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="82.47" y="4991.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="400.5" y="3765" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="403.52" y="3775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="255.0" y="3013" width="0.5" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="258.01" y="3023.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.04%)</title><rect x="125.9" y="1829" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="128.93" y="1839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="413.2" y="4965" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="416.19" y="4975.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="4469" width="1.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="411.03" y="4479.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="295.4" y="2197" width="0.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="298.38" y="2207.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="88.4" y="4053" width="3.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="91.39" y="4063.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="391.6" y="2245" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="394.60" y="2255.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Symbol_O&gt; gctools::GCObjectAllocator&lt;c (1 samples, 0.04%)</title><rect x="405.2" y="4869" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="408.21" y="4879.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="398.2" y="3525" width="0.9" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="401.17" y="3535.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'IF) T T T))^METHOD (1 samples, 0.04%)</title><rect x="249.4" y="869" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="252.38" y="879.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="365.3" y="5653" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="368.31" y="5663.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="327.3" y="4261" width="0.5" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="330.30" y="4271.5" ></text>
</g>
<g >
<title>`IRC-STORE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="316.5" y="5077" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="319.50" y="5087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="410.8" y="4101" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="413.84" y="4111.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="34.4" y="4453" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="37.41" y="4463.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (3 samples, 0.12%)</title><rect x="283.2" y="1349" width="1.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="286.17" y="1359.5" ></text>
</g>
<g >
<title>`llvm::JumpThreadingPass::ComputeValueKnownInPredecessors(llvm:: (4 samples, 0.16%)</title><rect x="700.9" y="5829" width="1.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="703.91" y="5839.5" ></text>
</g>
<g >
<title>`core::core__get_sysprop(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.04%)</title><rect x="282.2" y="3045" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="285.24" y="3055.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="2725" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="412.90" y="2735.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="92.1" y="3109" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="95.14" y="3119.5" ></text>
</g>
<g >
<title>`ThreadCmpOverPHI(llvm::CmpInst::Predicate, llvm::Value*, llvm:: (3 samples, 0.12%)</title><rect x="887.3" y="5813" width="1.4" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="890.26" y="5823.5" ></text>
</g>
<g >
<title>`llvm::InstructionCombiningPass::runOnFunction(llvm::Function&amp;) (126 samples, 5.01%)</title><rect x="720.6" y="5893" width="59.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="723.63" y="5903.5" >`llvm:..</text>
</g>
<g >
<title>`GET-OR-DECLARE-FUNCTION-OR-ERROR^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="631.4" y="5285" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="634.45" y="5295.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="2933" width="1.8" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="168.36" y="2943.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.3" y="3813" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="414.31" y="3823.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (9 samples, 0.36%)</title><rect x="276.6" y="1637" width="4.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="279.60" y="1647.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="33.9" y="5317" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="36.94" y="5327.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="127.3" y="5269" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="130.34" y="5279.5" ></text>
</g>
<g >
<title>`llvm::CallInst::isNoBuiltin() const (1 samples, 0.04%)</title><rect x="820.1" y="5653" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="823.14" y="5663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="405.2" y="5157" width="0.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="408.21" y="5167.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="321.7" y="5365" width="1.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="324.66" y="5375.5" ></text>
</g>
<g >
<title>`small_free_list_remove_ptr_no_clear (1 samples, 0.04%)</title><rect x="794.8" y="5797" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="797.79" y="5807.5" ></text>
</g>
<g >
<title>`MAKE-EXPRESSION-RESULT^ECLECTOR.PARSE-RESULT^((CST-CLIENT T T T (1 samples, 0.04%)</title><rect x="32.5" y="5301" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="35.53" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="286.9" y="4901" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="289.93" y="4911.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="257.4" y="1909" width="10.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="260.36" y="1919.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="3893" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="414.78" y="3903.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="4341" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="411.03" y="4351.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="421.6" y="2149" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="424.64" y="2159.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="401.0" y="3509" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="403.99" y="3519.5" ></text>
</g>
<g >
<title>0x11a477094 (9 samples, 0.36%)</title><rect x="243.3" y="965" width="4.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="246.28" y="975.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="3077" width="4.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="279.60" y="3087.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::createSCEV(llvm::Value*) (1 samples, 0.04%)</title><rect x="920.1" y="5573" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="923.11" y="5583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="295.4" y="3413" width="1.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="298.38" y="3423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="3445" width="1.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="412.44" y="3455.5" ></text>
</g>
<g >
<title>`core::clasp_namestring(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="44.7" y="5237" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="47.73" y="5247.5" ></text>
</g>
<g >
<title>`GC_freehblk (2 samples, 0.08%)</title><rect x="504.7" y="5493" width="1.0" height="15.0" fill="rgb(248,121,121)" rx="2" ry="2" />
<text  x="507.72" y="5503.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="316.5" y="5061" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="319.50" y="5071.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="36.8" y="3701" width="0.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="39.75" y="3711.5" ></text>
</g>
<g >
<title>`DELETE-INSTRUCTION^CLEAVIR-IR^FN^^ (4 samples, 0.16%)</title><rect x="528.7" y="5797" width="1.8" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="531.66" y="5807.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::computeExitLimitFromICmp(llvm::Loop cons (1 samples, 0.04%)</title><rect x="846.4" y="5653" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="849.42" y="5663.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="643.7" y="5349" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="646.65" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.0" y="3045" width="0.4" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="388.97" y="3055.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Pass*, llvm::Small (2 samples, 0.08%)</title><rect x="795.7" y="5861" width="1.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="798.73" y="5871.5" ></text>
</g>
<g >
<title>`__vfprintf (1 samples, 0.04%)</title><rect x="408.5" y="2597" width="0.5" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="411.50" y="2607.5" ></text>
</g>
<g >
<title>`llvmo::convert_sequence_types_to_vector(gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="661.0" y="5541" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="664.02" y="5551.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilderBase_O::SetCurrentDebugLocationToLineColumnScop (3 samples, 0.12%)</title><rect x="624.4" y="5109" width="1.4" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="627.41" y="5119.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatt (1 samples, 0.04%)</title><rect x="695.3" y="5765" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="698.28" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (58 samples, 2.31%)</title><rect x="407.1" y="5589" width="27.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="410.09" y="5599.5" >`..</text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (3 samples, 0.12%)</title><rect x="698.1" y="5829" width="1.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="701.10" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="422.1" y="2277" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="425.11" y="2287.5" ></text>
</g>
<g >
<title>`core::eformat_write_char(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="10.0" y="5957" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="13.00" y="5967.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.04%)</title><rect x="165.4" y="2373" width="0.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="168.36" y="2383.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="647.9" y="5317" width="0.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="650.88" y="5327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="382.2" y="4085" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="385.21" y="4095.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (77 samples, 3.06%)</title><rect x="12.8" y="5685" width="36.2" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="15.82" y="5695.5" >`RE..</text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock const*, unsi (1 samples, 0.04%)</title><rect x="853.0" y="5829" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="855.99" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="390.2" y="3685" width="1.9" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="393.19" y="3695.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T LEXICAL-VARIABLE-INFO))^METHO (1 samples, 0.04%)</title><rect x="164.0" y="4293" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="166.95" y="4303.5" ></text>
</g>
<g >
<title>`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="926.7" y="5797" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="929.68" y="5807.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="603.3" y="5429" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="606.29" y="5439.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.04%)</title><rect x="496.3" y="5701" width="0.4" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="499.27" y="5711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="1333" width="50.7" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="183.38" y="1343.5" >`INTE..</text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="234.4" y="485" width="0.4" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="237.36" y="495.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (6 samples, 0.24%)</title><rect x="868.9" y="5781" width="2.9" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="871.95" y="5791.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENTER-INSTRUCTION  (6 samples, 0.24%)</title><rect x="634.7" y="5429" width="2.8" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="637.73" y="5439.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="256.0" y="2741" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="258.95" y="2751.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (24 samples, 0.95%)</title><rect x="422.6" y="4517" width="11.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="425.58" y="4527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="422.1" y="2773" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="425.11" y="2783.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.04%)</title><rect x="906.5" y="5733" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="909.50" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="3381" width="0.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="428.86" y="3391.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (2 samples, 0.08%)</title><rect x="874.6" y="5829" width="0.9" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="877.58" y="5839.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.04%)</title><rect x="94.0" y="3541" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="97.02" y="3551.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="295.4" y="2933" width="0.9" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="298.38" y="2943.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="405.2" y="4917" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="408.21" y="4927.5" ></text>
</g>
<g >
<title>`llvm::Type::getScalarSizeInBits() const (1 samples, 0.04%)</title><rect x="879.7" y="5797" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="882.75" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="4181" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="404.93" y="4191.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="269.1" y="453" width="2.8" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="272.09" y="463.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="417.9" y="309" width="0.5" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="420.88" y="319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="390.7" y="3125" width="1.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="393.66" y="3135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="390.7" y="2949" width="1.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="393.66" y="2959.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (183 samples, 7.28%)</title><rect x="164.9" y="4245" width="85.9" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="167.89" y="4255.5" >`PROCESS-P..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="247.5" y="837" width="1.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="250.50" y="847.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (4 samples, 0.16%)</title><rect x="349.8" y="5413" width="1.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="352.82" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (6 samples, 0.24%)</title><rect x="167.7" y="1573" width="2.8" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="170.71" y="1583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="243.3" y="661" width="1.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="246.28" y="671.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="34.4" y="4437" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="37.41" y="4447.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="420.7" y="1429" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="423.70" y="1439.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="303.4" y="5781" width="0.4" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="306.36" y="5791.5" ></text>
</g>
<g >
<title>`CST-&gt;AST^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="324.5" y="5093" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="327.48" y="5103.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="279.9" y="37" width="0.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="282.89" y="47.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="4117" width="3.8" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="420.41" y="4127.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="25.5" y="4309" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="28.49" y="4319.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (25 samples, 0.99%)</title><rect x="100.6" y="3797" width="11.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="103.59" y="3807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="2101" width="1.0" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="432.62" y="2111.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="240.5" y="3253" width="10.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="243.46" y="3263.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="870.8" y="5733" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="873.83" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (22 samples, 0.88%)</title><rect x="423.0" y="3893" width="10.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="426.05" y="3903.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (EXPLICIT-MULTI-PARAM (1 samples, 0.04%)</title><rect x="171.5" y="1525" width="0.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="174.46" y="1535.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_package_T_sp (1 samples, 0.04%)</title><rect x="123.6" y="485" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="126.59" y="495.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="243.3" y="453" width="0.4" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="246.28" y="463.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="166.8" y="1461" width="0.4" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="169.77" y="1471.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.08%)</title><rect x="580.3" y="5797" width="0.9" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="583.29" y="5807.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="285.1" y="1061" width="0.4" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="288.05" y="1071.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="413.7" y="4181" width="0.4" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="416.66" y="4191.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="905.6" y="5589" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="908.56" y="5599.5" ></text>
</g>
<g >
<title>`SIGNAL^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="23.1" y="4117" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="26.14" y="4127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="417.9" y="389" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="420.88" y="399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="417.9" y="789" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="420.88" y="799.5" ></text>
</g>
<g >
<title>0x11a477094 (108 samples, 4.30%)</title><rect x="180.4" y="1701" width="50.7" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="183.38" y="1711.5" >0x11a..</text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="252.2" y="3029" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="255.20" y="3039.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (4 samples, 0.16%)</title><rect x="748.8" y="5733" width="1.9" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="751.79" y="5743.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="790.6" y="5733" width="0.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="793.56" y="5743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="297.3" y="5189" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="300.26" y="5199.5" ></text>
</g>
<g >
<title>`BUILD-FUNCTION-DAG^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="330.1" y="4453" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="333.11" y="4463.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatt (1 samples, 0.04%)</title><rect x="693.4" y="5781" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="696.40" y="5791.5" ></text>
</g>
<g >
<title>`core::parse_ltvc_toplevel_funcall(gctools::GCRootsInModule*, gc (2,028 samples, 80.67%)</title><rect x="10.0" y="6245" width="951.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="13.00" y="6255.5" >`core::parse_ltvc_toplevel_funcall(gctools::GCRootsInModule*, gc</text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="661" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="171.18" y="671.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="259.2" y="213" width="1.4" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="262.24" y="223.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.04%)</title><rect x="232.5" y="2469" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="235.48" y="2479.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="172.4" y="1269" width="5.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="175.40" y="1279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="2469" width="1.0" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="432.62" y="2479.5" ></text>
</g>
<g >
<title>0x1225e5094 (9 samples, 0.36%)</title><rect x="282.7" y="2725" width="4.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="285.70" y="2735.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="511.8" y="5669" width="1.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="514.76" y="5679.5" ></text>
</g>
<g >
<title>`llvm::Value::destroyValueName() (1 samples, 0.04%)</title><rect x="950.2" y="5797" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="953.15" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="421.6" y="2277" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="424.64" y="2287.5" ></text>
</g>
<g >
<title>`llvm::GlobalValue::getGlobalIdentifier() const (1 samples, 0.04%)</title><rect x="960.5" y="5893" width="0.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="963.48" y="5903.5" ></text>
</g>
<g >
<title>`llvm::GVN::ValueTable::lookupOrAdd(llvm::Value*) (2 samples, 0.08%)</title><rect x="803.2" y="5813" width="1.0" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="806.24" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="36.3" y="4501" width="1.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="39.28" y="4511.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="292.6" y="5573" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="295.56" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (337 samples, 13.40%)</title><rect x="129.2" y="5445" width="158.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="132.22" y="5455.5" >`CONVERT-SEQUENCE^CL..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="414.1" y="3381" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="417.13" y="3391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="393.5" y="4261" width="0.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="396.48" y="4271.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="398.2" y="3077" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="401.17" y="3087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="424.9" y="1365" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="427.92" y="1375.5" ></text>
</g>
<g >
<title>`core::core__file_scope(gctools::smart_ptr&lt;core::T_O&gt;, gctools:: (1 samples, 0.04%)</title><rect x="50.8" y="4693" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="53.84" y="4703.5" ></text>
</g>
<g >
<title>0x1225f5094 (12 samples, 0.48%)</title><rect x="281.3" y="4053" width="5.6" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="284.30" y="4063.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="93.5" y="3493" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="96.55" y="3503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="398.2" y="2917" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="401.17" y="2927.5" ></text>
</g>
<g >
<title>`GC_reclaim_block (1 samples, 0.04%)</title><rect x="471.9" y="5573" width="0.4" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="474.86" y="5583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="81.8" y="4981" width="1.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="84.81" y="4991.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="277" width="26.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="207.32" y="287.5" >`..</text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (4 samples, 0.16%)</title><rect x="724.9" y="5845" width="1.8" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="727.85" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="2325" width="5.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="236.89" y="2335.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="234.8" y="293" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="237.83" y="303.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="92.6" y="3301" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="95.61" y="3311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="313.2" y="5445" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="316.21" y="5455.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::LookupBucketFor(llvm::StringRef) (1 samples, 0.04%)</title><rect x="656.3" y="5381" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="659.32" y="5391.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="577.9" y="5765" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="580.94" y="5775.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (3 samples, 0.12%)</title><rect x="520.2" y="5765" width="1.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="523.21" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="386.0" y="3189" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="388.97" y="3199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="396.3" y="4549" width="3.7" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="399.29" y="4559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.4" y="2869" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="412.44" y="2879.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="102.0" y="3653" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="105.00" y="3663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="393.5" y="4357" width="0.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="396.48" y="4367.5" ></text>
</g>
<g >
<title>`SIMPLE-TYPE-PREDICATE^CORE^FN^^ (1 samples, 0.04%)</title><rect x="184.1" y="197" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="187.14" y="207.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="329.2" y="4277" width="0.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="332.17" y="4287.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.04%)</title><rect x="333.9" y="4325" width="0.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="336.87" y="4335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="429.1" y="2261" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="432.15" y="2271.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.04%)</title><rect x="295.4" y="2085" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="298.38" y="2095.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="178.0" y="2165" width="0.5" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="181.04" y="2175.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (4 samples, 0.16%)</title><rect x="827.6" y="5717" width="1.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="830.65" y="5727.5" ></text>
</g>
<g >
<title>`FUNCTION-NAME-FROM-SOURCE-INFO^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="346.5" y="4997" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="349.54" y="5007.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="3941" width="5.6" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="284.30" y="3951.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="53.2" y="3749" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="56.18" y="3759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="36.8" y="3733" width="0.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="39.75" y="3743.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="834.2" y="5765" width="0.5" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="837.22" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="242.3" y="2837" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="245.34" y="2847.5" ></text>
</g>
<g >
<title>0x11a477094 (11 samples, 0.44%)</title><rect x="276.1" y="4469" width="5.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="279.13" y="4479.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.04%)</title><rect x="245.6" y="437" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="248.62" y="447.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="393.5" y="3669" width="0.9" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="396.48" y="3679.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="17.5" y="3909" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="20.51" y="3919.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="428.2" y="2309" width="0.9" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="431.21" y="2319.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (31 samples, 1.23%)</title><rect x="257.4" y="2213" width="14.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="260.36" y="2223.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (10 samples, 0.40%)</title><rect x="172.4" y="69" width="4.7" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="175.40" y="79.5" ></text>
</g>
<g >
<title>`NOTE-SKIPPED-INPUT^ECLECTOR.READER^((PARSE-RESULT-CLIENT T T))^ (2 samples, 0.08%)</title><rect x="53.2" y="3909" width="0.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="56.18" y="3919.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="169.1" y="677" width="1.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="172.12" y="687.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="37.7" y="4677" width="4.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="40.69" y="4687.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.04%)</title><rect x="750.7" y="5717" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="753.67" y="5727.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3941" width="1.8" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="168.36" y="3951.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="231.5" y="3813" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="234.54" y="3823.5" ></text>
</g>
<g >
<title>`llvm::Instruction::isIdenticalToWhenDefined(llvm::Instruction c (1 samples, 0.04%)</title><rect x="907.4" y="5797" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="910.44" y="5807.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInBoundsGEP(llvm::Value*, gctools::sm (1 samples, 0.04%)</title><rect x="666.2" y="5557" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="669.18" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-NAMED-FUNCTION^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="231.1" y="3477" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="234.07" y="3487.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="233.9" y="373" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="236.89" y="383.5" ></text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::getNumTota (1 samples, 0.04%)</title><rect x="782.1" y="5781" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="785.12" y="5791.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="497.2" y="5781" width="0.5" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="500.21" y="5791.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="392.1" y="4021" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="395.07" y="4031.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.04%)</title><rect x="496.3" y="5637" width="0.4" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="499.27" y="5647.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="345.6" y="4965" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="348.60" y="4975.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (1 samples, 0.04%)</title><rect x="14.7" y="5477" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="17.69" y="5487.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="527.2" y="5733" width="0.5" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="530.25" y="5743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="251.3" y="3733" width="0.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="254.26" y="3743.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::computeExitLimitFromCondImpl(llvm::Scala (1 samples, 0.04%)</title><rect x="846.4" y="5669" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="849.42" y="5679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="92.1" y="3541" width="1.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="95.14" y="3551.5" ></text>
</g>
<g >
<title>`GC_mark_local (484 samples, 19.25%)</title><rect x="962.8" y="6341" width="227.2" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="965.82" y="6351.5" >`GC_mark_local</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="100.6" y="3701" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="103.59" y="3711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="416.5" y="4885" width="0.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="419.48" y="4895.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="242.8" y="2805" width="8.0" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="245.81" y="2815.5" ></text>
</g>
<g >
<title>`CHILDREN^CLEAVIR-AST^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="306.2" y="5797" width="0.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="309.17" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.3" y="4037" width="0.5" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="414.31" y="4047.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.16%)</title><rect x="385.5" y="3733" width="1.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="388.50" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="410.8" y="4965" width="1.9" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="413.84" y="4975.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (90 samples, 3.58%)</title><rect x="313.2" y="5685" width="42.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="316.21" y="5695.5" >`LO..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="165.8" y="997" width="0.5" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="168.83" y="1007.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="600.0" y="5573" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="603.00" y="5583.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (336 samples, 13.37%)</title><rect x="129.7" y="5381" width="157.7" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="132.69" y="5391.5" >`COMBINE-METHOD-FUNC..</text>
</g>
<g >
<title>`core::type_of(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="244.7" y="453" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="247.69" y="463.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.04%)</title><rect x="61.2" y="4997" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="64.16" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="124.5" y="2405" width="1.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="127.53" y="2415.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldConstant(llvm::Constant const*, llvm::DataLay (5 samples, 0.20%)</title><rect x="858.2" y="5861" width="2.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="861.15" y="5871.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SimplifyCFGOpt::run(llvm::BasicBlock*) (8 samples, 0.32%)</title><rect x="932.8" y="5845" width="3.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="935.78" y="5855.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeAllocSize(llvm::Type*) const (1 samples, 0.04%)</title><rect x="884.0" y="5813" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="886.97" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="677" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="423.70" y="687.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (1 samples, 0.04%)</title><rect x="466.7" y="5701" width="0.5" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="469.70" y="5711.5" ></text>
</g>
<g >
<title>`LTV/CONS^LITERAL^FN^^ (3 samples, 0.12%)</title><rect x="659.1" y="5541" width="1.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="662.14" y="5551.5" ></text>
</g>
<g >
<title>`SL-BOUNDP^CORE^FN^^ (1 samples, 0.04%)</title><rect x="94.5" y="3557" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="97.49" y="3567.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (1 samples, 0.04%)</title><rect x="555.4" y="5813" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="558.41" y="5823.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="783.1" y="5749" width="0.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="786.05" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.0" y="2037" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="411.97" y="2047.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="50.8" y="4757" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="53.84" y="4767.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="396.3" y="4485" width="3.7" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="399.29" y="4495.5" ></text>
</g>
<g >
<title>`llvm::FunctionPass::assignPassManager(llvm::PMStack&amp;, llvm::Pas (1 samples, 0.04%)</title><rect x="685.4" y="5877" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="688.43" y="5887.5" ></text>
</g>
<g >
<title>`core::Cons_O::getf(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smar (1 samples, 0.04%)</title><rect x="636.6" y="5301" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="639.61" y="5311.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (21 samples, 0.84%)</title><rect x="16.6" y="4677" width="9.8" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="19.57" y="4687.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="622.5" y="5141" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="625.53" y="5151.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock const*, (1 samples, 0.04%)</title><rect x="921.5" y="5861" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="924.52" y="5871.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.04%)</title><rect x="654.9" y="5269" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="657.92" y="5279.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.08%)</title><rect x="460.1" y="5813" width="1.0" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="463.13" y="5823.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.04%)</title><rect x="756.8" y="5781" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="759.77" y="5791.5" ></text>
</g>
<g >
<title>`llvm::getConstantStringInfo(llvm::Value const*, llvm::StringRef (2 samples, 0.08%)</title><rect x="874.6" y="5813" width="0.9" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="877.58" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.0" y="2725" width="0.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="411.97" y="2735.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (17 samples, 0.68%)</title><rect x="867.5" y="5845" width="8.0" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="870.54" y="5855.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="605.6" y="5429" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="608.63" y="5439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.7" y="1541" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="430.74" y="1551.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="635.7" y="5317" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="638.67" y="5327.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (12 samples, 0.48%)</title><rect x="731.0" y="5829" width="5.6" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="733.95" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (58 samples, 2.31%)</title><rect x="100.1" y="4181" width="27.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="103.12" y="4191.5" >`..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (7 samples, 0.28%)</title><rect x="268.6" y="1093" width="3.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="271.62" y="1103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5269" width="0.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="408.21" y="5279.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.6" y="2661" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="424.64" y="2671.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="178.0" y="2421" width="2.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="181.04" y="2431.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="408.0" y="4821" width="2.8" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="411.03" y="4831.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="52.2" y="4485" width="2.9" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="55.24" y="4495.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="823.4" y="5685" width="0.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="826.42" y="5695.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AssumptionCacheTra (1 samples, 0.04%)</title><rect x="929.5" y="5861" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="932.50" y="5871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.9" y="2981" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="396.95" y="2991.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="3333" width="1.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="411.03" y="3343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="429.1" y="2245" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="432.15" y="2255.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="421.6" y="2789" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="424.64" y="2799.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="431.5" y="2613" width="1.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="434.50" y="2623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="430.6" y="2037" width="0.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="433.56" y="2047.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="180.4" y="469" width="2.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="183.38" y="479.5" ></text>
</g>
<g >
<title>`llvm::APInt::udiv(llvm::APInt const&amp;) const (1 samples, 0.04%)</title><rect x="722.5" y="5797" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="725.51" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2373" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="412.44" y="2383.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="105.8" y="3301" width="0.4" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="108.75" y="3311.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="345.1" y="4997" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="348.13" y="5007.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="410.8" y="4917" width="1.9" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="413.84" y="4927.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="4213" width="1.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="411.03" y="4223.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (40 samples, 1.59%)</title><rect x="232.0" y="3653" width="18.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="235.01" y="3663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (40 samples, 1.59%)</title><rect x="232.0" y="3733" width="18.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="235.01" y="3743.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="598.1" y="5749" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="601.12" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="1397" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="423.70" y="1407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="581" width="26.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="207.32" y="591.5" >`..</text>
</g>
<g >
<title>`INPUTS^CLEAVIR-IR^((:BEFORE) (T T))^SETFMETHOD^^ (1 samples, 0.04%)</title><rect x="532.9" y="5765" width="0.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="535.88" y="5775.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (5 samples, 0.20%)</title><rect x="575.1" y="5781" width="2.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="578.12" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="417.9" y="709" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="420.88" y="719.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="620.2" y="5253" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="623.18" y="5263.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="240.0" y="2917" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="242.99" y="2927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="2853" width="0.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="428.86" y="2863.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="961.9" y="6405" width="0.5" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="964.89" y="6415.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="422.6" y="4437" width="0.4" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="425.58" y="4447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="255.5" y="2981" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="258.48" y="2991.5" ></text>
</g>
<g >
<title>`PARSE-FUNCTION-TYPE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="4597" width="0.9" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="290.87" y="4607.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="432.0" y="2181" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="434.96" y="2191.5" ></text>
</g>
<g >
<title>`INTERPRET-DTREE-PROGRAM^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="542.7" y="5781" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="545.74" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="240.0" y="2597" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="242.99" y="2607.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (1 samples, 0.04%)</title><rect x="913.5" y="5797" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="916.54" y="5807.5" ></text>
</g>
<g >
<title>`core::lambdaListHandler_createBindings(gctools::smart_ptr&lt;core: (1 samples, 0.04%)</title><rect x="649.3" y="5285" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="652.28" y="5295.5" ></text>
</g>
<g >
<title>`GC_mark_some (1 samples, 0.04%)</title><rect x="505.7" y="5541" width="0.4" height="15.0" fill="rgb(226,87,87)" rx="2" ry="2" />
<text  x="508.66" y="5551.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPreferredAlignment(llvm::GlobalVariable co (1 samples, 0.04%)</title><rect x="772.3" y="5733" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="775.26" y="5743.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="354.5" y="5477" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="357.52" y="5487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="243.3" y="1925" width="7.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="246.28" y="1935.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="352.2" y="5557" width="1.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="355.17" y="5567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="3717" width="4.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="279.60" y="3727.5" ></text>
</g>
<g >
<title>`DATUM-VARIABLE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="618.3" y="5381" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="621.31" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="332.9" y="4357" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="335.93" y="4367.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (12 samples, 0.48%)</title><rect x="17.5" y="4133" width="5.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="20.51" y="4143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3749" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="414.78" y="3759.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (11 samples, 0.44%)</title><rect x="37.7" y="4805" width="5.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="40.69" y="4815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1253" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="428.86" y="1263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="2085" width="7.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="246.28" y="2095.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="604.2" y="5445" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="607.22" y="5455.5" ></text>
</g>
<g >
<title>`llvm::Value::getPointerAlignment(llvm::DataLayout const&amp;) const (1 samples, 0.04%)</title><rect x="697.6" y="5749" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="700.63" y="5759.5" ></text>
</g>
<g >
<title>`IN^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="648.3" y="5397" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="651.35" y="5407.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="495.8" y="5797" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="498.80" y="5807.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ASSIGNMENT-INSTRUC (1 samples, 0.04%)</title><rect x="625.8" y="5205" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="628.82" y="5215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.4" y="1861" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="428.39" y="1871.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="12.8" y="5525" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="15.82" y="5535.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="168.6" y="613" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="171.65" y="623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.0" y="3237" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="388.97" y="3247.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (136 samples, 5.41%)</title><rect x="167.2" y="3029" width="63.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="170.24" y="3039.5" >`CONVER..</text>
</g>
<g >
<title>`boost::io::basic_altstringbuf&lt;char, std::__1::char_traits&lt;char&gt; (1 samples, 0.04%)</title><rect x="677.0" y="5669" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="679.98" y="5679.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (2 samples, 0.08%)</title><rect x="24.6" y="4165" width="0.9" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="27.55" y="4175.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="403.3" y="5077" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="406.33" y="5087.5" ></text>
</g>
<g >
<title>`OUT^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="651.2" y="5413" width="0.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="654.16" y="5423.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getConstantOnEdge(llvm::Value*, llvm::Basi (5 samples, 0.20%)</title><rect x="692.0" y="5861" width="2.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="695.00" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (51 samples, 2.03%)</title><rect x="139.1" y="4389" width="23.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="142.08" y="4399.5" >`..</text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (95 samples, 3.78%)</title><rect x="12.3" y="5893" width="44.6" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="15.35" y="5903.5" >`REA..</text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="34.9" y="4437" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="37.88" y="4447.5" ></text>
</g>
<g >
<title>`BACKQUOTE^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="34.4" y="5029" width="0.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="37.41" y="5039.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (35 samples, 1.39%)</title><rect x="417.4" y="4837" width="16.4" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="420.41" y="4847.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="122.2" y="3877" width="5.1" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="125.18" y="3887.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="565" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="423.70" y="575.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="888.7" y="5653" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="891.66" y="5663.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (12 samples, 0.48%)</title><rect x="233.9" y="2437" width="5.6" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="236.89" y="2447.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="36.8" y="3397" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="39.75" y="3407.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (12 samples, 0.48%)</title><rect x="233.9" y="1317" width="5.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="236.89" y="1327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="417.9" y="69" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="420.88" y="79.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="347.9" y="5157" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="350.95" y="5167.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="230.6" y="213" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="233.60" y="223.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="349.8" y="5349" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="352.82" y="5359.5" ></text>
</g>
<g >
<title>`core::Cons_O::onthcdr(long long) const (1 samples, 0.04%)</title><rect x="392.1" y="3957" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="395.07" y="3967.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_O, gctools::smar (1 samples, 0.04%)</title><rect x="332.5" y="4629" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="335.46" y="4639.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="411.3" y="3349" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="414.31" y="3359.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (3 samples, 0.12%)</title><rect x="124.5" y="2309" width="1.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="127.53" y="2319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2853" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="412.90" y="2863.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="38.2" y="4389" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="41.16" y="4399.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="542.3" y="5797" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="545.27" y="5807.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="605.6" y="5509" width="1.0" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="608.63" y="5519.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="414.1" y="3653" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="417.13" y="3663.5" ></text>
</g>
<g >
<title>`NOTE-SKIPPED-INPUT^ECLECTOR.READER^((PARSE-RESULT-CLIENT T T))^ (1 samples, 0.04%)</title><rect x="26.0" y="4357" width="0.4" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="28.96" y="4367.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="398.2" y="3269" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="401.17" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="355.9" y="5621" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="358.93" y="5631.5" ></text>
</g>
<g >
<title>`llvm::getObjectSize(llvm::Value const*, unsigned long long&amp;, ll (2 samples, 0.08%)</title><rect x="817.3" y="5637" width="1.0" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="820.32" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2533" width="14.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="260.36" y="2543.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="427.3" y="1765" width="0.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="430.27" y="1775.5" ></text>
</g>
<g >
<title>`REDUCE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="21.3" y="3653" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="24.26" y="3663.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::getHash() const (1 samples, 0.04%)</title><rect x="808.9" y="5477" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="811.87" y="5487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="255.5" y="2965" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="258.48" y="2975.5" ></text>
</g>
<g >
<title>`core::cl__truename(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="952.5" y="5941" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="955.50" y="5951.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (5 samples, 0.20%)</title><rect x="337.6" y="4549" width="2.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="340.62" y="4559.5" ></text>
</g>
<g >
<title>0x1225f1094 (3 samples, 0.12%)</title><rect x="124.5" y="2677" width="1.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="127.53" y="2687.5" ></text>
</g>
<g >
<title>`IRC-GEP-VARIABLE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="354.0" y="5349" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="357.05" y="5359.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.04%)</title><rect x="887.3" y="5685" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="890.26" y="5695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="243.3" y="629" width="1.4" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="246.28" y="639.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (35 samples, 1.39%)</title><rect x="256.0" y="3413" width="16.4" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="258.95" y="3423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="413.7" y="3941" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="416.66" y="3951.5" ></text>
</g>
<g >
<title>0x11a477094 (336 samples, 13.37%)</title><rect x="129.7" y="5349" width="157.7" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="132.69" y="5359.5" >0x11a477094</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="397.7" y="4181" width="2.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="400.70" y="4191.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (7 samples, 0.28%)</title><rect x="314.2" y="5461" width="3.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="317.15" y="5471.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="295.4" y="3317" width="1.4" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="298.38" y="3327.5" ></text>
</g>
<g >
<title>`core::Str8Ns_O::make(unsigned long, unsigned char, bool, gctool (1 samples, 0.04%)</title><rect x="39.6" y="4085" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="42.57" y="4095.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (2 samples, 0.08%)</title><rect x="295.4" y="3109" width="0.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="298.38" y="3119.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="182.7" y="165" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="185.73" y="175.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.4" y="2501" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="412.44" y="2511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="145.6" y="4213" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="148.65" y="4223.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="423.5" y="2213" width="1.0" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="426.52" y="2223.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="351.7" y="5413" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="354.70" y="5423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (136 samples, 5.41%)</title><rect x="167.2" y="3509" width="63.9" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="170.24" y="3519.5" >`core::..</text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((ORDINARY-KEY-PARAMETER T (136 samples, 5.41%)</title><rect x="167.2" y="3589" width="63.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="170.24" y="3599.5" >`PROCES..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="249.4" y="837" width="0.4" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="252.38" y="847.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromAssume(llvm::Value const*, llvm::KnownBits&amp; (1 samples, 0.04%)</title><rect x="911.2" y="5749" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="914.19" y="5759.5" ></text>
</g>
<g >
<title>`CONVERT-VARIABLE^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="232.0" y="2917" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="235.01" y="2927.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="19.9" y="3653" width="0.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="22.86" y="3663.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.08%)</title><rect x="241.9" y="2885" width="0.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="244.87" y="2895.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(l (23 samples, 0.91%)</title><rect x="804.6" y="5749" width="10.8" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="807.65" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="2661" width="4.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="279.60" y="2671.5" ></text>
</g>
<g >
<title>`llvm::AAResults::Model&lt;llvm::GlobalsAAResult&gt;::~Model() (1 samples, 0.04%)</title><rect x="710.3" y="5877" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="713.30" y="5887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="252.2" y="3285" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="255.20" y="3295.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="424.9" y="1061" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="427.92" y="1071.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (9 samples, 0.36%)</title><rect x="282.7" y="3317" width="4.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="285.70" y="3327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="390.2" y="3669" width="1.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="393.19" y="3679.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.04%)</title><rect x="287.9" y="4437" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="290.87" y="4447.5" ></text>
</g>
<g >
<title>`core::type_of_decide_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="242.8" y="1893" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="245.81" y="1903.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="397.7" y="3893" width="1.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="400.70" y="3903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="238.1" y="117" width="1.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="241.11" y="127.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (57 samples, 2.27%)</title><rect x="204.3" y="709" width="26.8" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="207.32" y="719.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="52.2" y="4597" width="2.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="55.24" y="4607.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="24.1" y="4037" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="27.08" y="4047.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;std::__1::pair&lt;llvm::Memo (1 samples, 0.04%)</title><rect x="814.0" y="5685" width="0.5" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="817.03" y="5695.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="295.4" y="3381" width="1.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="298.38" y="3391.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="233.9" y="661" width="1.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="236.89" y="671.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="276.1" y="3893" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="279.13" y="3903.5" ></text>
</g>
<g >
<title>`UNSAFE-FUNCALL1^CORE^FN^^ (1 samples, 0.04%)</title><rect x="93.5" y="3349" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="96.55" y="3359.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.04%)</title><rect x="747.4" y="5749" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="750.38" y="5759.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::getLatticeValueFor(llvm::Val (1 samples, 0.04%)</title><rect x="948.3" y="5893" width="0.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="951.27" y="5903.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="401.0" y="2901" width="0.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="403.99" y="2911.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (1 samples, 0.04%)</title><rect x="346.5" y="4949" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="349.54" y="4959.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="279.9" y="101" width="0.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="282.89" y="111.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="132.0" y="4613" width="1.0" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="135.04" y="4623.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="108.1" y="3525" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="111.10" y="3535.5" ></text>
</g>
<g >
<title>`llvm::iterator_range&lt;llvm::df_iterator&lt;llvm::DomTreeNodeBase&lt;ll (1 samples, 0.04%)</title><rect x="689.6" y="5861" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="692.65" y="5871.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="165.8" y="1061" width="1.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="168.83" y="1071.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="681.2" y="5893" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="684.20" y="5903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="3733" width="4.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="279.60" y="3743.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (19 samples, 0.76%)</title><rect x="259.2" y="1157" width="9.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="262.24" y="1167.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="401.5" y="2645" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="404.46" y="2655.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (48 samples, 1.91%)</title><rect x="180.4" y="885" width="22.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="183.38" y="895.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="416.5" y="5093" width="0.4" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="419.48" y="5103.5" ></text>
</g>
<g >
<title>`wrapped_Create_llvm__LLVMContext_const_llvm__Twine_llvm__Functi (1 samples, 0.04%)</title><rect x="634.7" y="5333" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="637.73" y="5343.5" ></text>
</g>
<g >
<title>`core::Closure_O::describeFunction() const (1 samples, 0.04%)</title><rect x="679.8" y="5925" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="682.79" y="5935.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (26 samples, 1.03%)</title><rect x="438.5" y="5397" width="12.2" height="15.0" fill="rgb(228,92,92)" rx="2" ry="2" />
<text  x="441.54" y="5407.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (23 samples, 0.91%)</title><rect x="383.6" y="4933" width="10.8" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="386.62" y="4943.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="34.4" y="4517" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="37.41" y="4527.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="324.5" y="5045" width="0.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="327.48" y="5055.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1:: (1 samples, 0.04%)</title><rect x="16.6" y="4373" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="19.57" y="4383.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="340.0" y="4661" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="342.97" y="4671.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="432.0" y="1845" width="0.4" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="434.96" y="1855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="295.4" y="3509" width="1.4" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="298.38" y="3519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (55 samples, 2.19%)</title><rect x="378.9" y="5733" width="25.8" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="381.93" y="5743.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="1461" width="9.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="262.24" y="1471.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-FUNCTION^CLEAVIR-CST-TO-AST^FN^^ (4 samples, 0.16%)</title><rect x="254.1" y="3413" width="1.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="257.07" y="3423.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="165.4" y="2805" width="1.8" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="168.36" y="2815.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (5 samples, 0.20%)</title><rect x="858.2" y="5845" width="2.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="861.15" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="405.2" y="5077" width="0.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="408.21" y="5087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="52.2" y="4709" width="2.9" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="55.24" y="4719.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="167.7" y="1541" width="2.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="170.71" y="1551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="52.2" y="5045" width="2.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="55.24" y="5055.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="2069" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="428.86" y="2079.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="277.1" y="821" width="1.8" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="280.07" y="831.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.04%)</title><rect x="455.0" y="5701" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="457.96" y="5711.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (3 samples, 0.12%)</title><rect x="285.5" y="501" width="1.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="288.52" y="511.5" ></text>
</g>
<g >
<title>`core::core__multiple_value_funcall(gctools::smart_ptr&lt;core::T_O (95 samples, 3.78%)</title><rect x="12.3" y="5909" width="44.6" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="15.35" y="5919.5" >`cor..</text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="662.9" y="5589" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="665.90" y="5599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="269.1" y="101" width="0.9" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="272.09" y="111.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="321.2" y="5205" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="324.19" y="5215.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="415.5" y="4101" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="418.54" y="4111.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (3 samples, 0.12%)</title><rect x="500.0" y="5797" width="1.4" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="503.02" y="5807.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="355.9" y="5589" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="358.93" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'IF) T T T))^METHOD (3 samples, 0.12%)</title><rect x="124.5" y="2661" width="1.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="127.53" y="2671.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (8 samples, 0.32%)</title><rect x="314.2" y="5573" width="3.7" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="317.15" y="5583.5" ></text>
</g>
<g >
<title>`ALLOCA-SIZE_T^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="315.6" y="5253" width="0.4" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="318.56" y="5263.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="3509" width="3.8" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="420.41" y="3519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="4133" width="1.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="168.36" y="4143.5" ></text>
</g>
<g >
<title>`wrapped_cl__type_of_T_sp (5 samples, 0.20%)</title><rect x="156.9" y="4325" width="2.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="159.91" y="4335.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="2213" width="50.7" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="183.38" y="2223.5" >`SET-..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2853" width="1.0" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="427.92" y="2863.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1:: (1 samples, 0.04%)</title><rect x="256.0" y="2725" width="0.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="258.95" y="2735.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT))^ (1 samples, 0.04%)</title><rect x="299.6" y="5861" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="302.60" y="5871.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="853.5" y="5733" width="0.4" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="856.46" y="5743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (33 samples, 1.31%)</title><rect x="15.6" y="5205" width="15.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="18.63" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'FUNCTION) T T T))^ (5 samples, 0.20%)</title><rect x="284.6" y="1205" width="2.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="287.58" y="1215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="418.8" y="997" width="1.0" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="421.82" y="1007.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="2261" width="50.7" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="183.38" y="2271.5" >`INTE..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="1925" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="412.90" y="1935.5" ></text>
</g>
<g >
<title>`IRC-STORE^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="657.3" y="5525" width="0.9" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="660.26" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="2453" width="0.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="428.86" y="2463.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="242.8" y="3093" width="8.0" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="245.81" y="3103.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="413.7" y="4645" width="1.8" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="416.66" y="4655.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (3 samples, 0.12%)</title><rect x="469.5" y="5605" width="1.4" height="15.0" fill="rgb(206,58,58)" rx="2" ry="2" />
<text  x="472.51" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="3189" width="1.0" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="427.92" y="3199.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="172.4" y="1093" width="5.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="175.40" y="1103.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="112.3" y="3733" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="115.32" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="1861" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="412.90" y="1871.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="628.6" y="5173" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="631.63" y="5183.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="14.7" y="5493" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="17.69" y="5503.5" ></text>
</g>
<g >
<title>`wrapped_core__sl_boundp_T_sp (1 samples, 0.04%)</title><rect x="452.6" y="5269" width="0.5" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="455.62" y="5279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="423.5" y="2149" width="1.0" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="426.52" y="2159.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="252.2" y="3445" width="1.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="255.20" y="3455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (32 samples, 1.27%)</title><rect x="112.3" y="3941" width="15.0" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="115.32" y="3951.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="405.2" y="5413" width="0.9" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="408.21" y="5423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="249.4" y="629" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="252.38" y="639.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="34.4" y="5205" width="10.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="37.41" y="5215.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="276.1" y="4629" width="5.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="279.13" y="4639.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="123.6" y="613" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="126.59" y="623.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'IF) T T T))^METHOD (56 samples, 2.23%)</title><rect x="204.3" y="85" width="26.3" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="207.32" y="95.5" >`..</text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="268.6" y="437" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="271.62" y="447.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (340 samples, 13.52%)</title><rect x="129.2" y="5493" width="159.6" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="132.22" y="5503.5" >`core::clos__interpr..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="401.9" y="3397" width="0.5" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="404.93" y="3407.5" ></text>
</g>
<g >
<title>`MAP-LOCAL-INSTRUCTIONS^CLEAVIR-IR^FN^^ (12 samples, 0.48%)</title><rect x="501.4" y="5813" width="5.7" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="504.43" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="242.8" y="2917" width="8.0" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="245.81" y="2927.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="244.7" y="869" width="2.8" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="247.69" y="879.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="243.3" y="2069" width="7.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="246.28" y="2079.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.04%)</title><rect x="40.5" y="4437" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="43.51" y="4447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3685" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="414.78" y="3695.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;std::__1::pair&lt;llvm::BasicBlock const*, unsigned (1 samples, 0.04%)</title><rect x="784.0" y="5861" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="786.99" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="239.5" y="3077" width="1.0" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="242.52" y="3087.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (2 samples, 0.08%)</title><rect x="279.9" y="405" width="0.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="282.89" y="415.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (23 samples, 0.91%)</title><rect x="167.2" y="2453" width="10.8" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="170.24" y="2463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="2165" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="411.97" y="2175.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="114.7" y="3589" width="0.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="117.67" y="3599.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="629" width="5.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="175.40" y="639.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="242.8" y="1829" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="245.81" y="1839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.7" y="1685" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="430.74" y="1695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="294.0" y="4069" width="0.9" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="296.97" y="4079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="452.6" y="5445" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="455.62" y="5455.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="646.5" y="5301" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="649.47" y="5311.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.04%)</title><rect x="538.0" y="5781" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="541.04" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="240.5" y="3125" width="10.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="243.46" y="3135.5" ></text>
</g>
<g >
<title>`core::eformat_read_char(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="22.7" y="3877" width="0.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="25.67" y="3887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3045" width="1.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="168.36" y="3055.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="92.6" y="3317" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="95.61" y="3327.5" ></text>
</g>
<g >
<title>`llvm::Instruction::isAtomic() const (1 samples, 0.04%)</title><rect x="774.6" y="5845" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="777.61" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="278.9" y="597" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="281.95" y="607.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.3" y="4165" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="414.31" y="4175.5" ></text>
</g>
<g >
<title>`llvm::Function::dropAllReferences() (5 samples, 0.20%)</title><rect x="949.2" y="5893" width="2.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="952.21" y="5903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="653.5" y="5509" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="656.51" y="5519.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="16.6" y="4709" width="10.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="19.57" y="4719.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="257.4" y="1669" width="1.8" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="260.36" y="1679.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(long long) (1 samples, 0.04%)</title><rect x="51.3" y="4789" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="54.30" y="4799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="391.6" y="2325" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="394.60" y="2335.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.08%)</title><rect x="527.7" y="5765" width="1.0" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="530.72" y="5775.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.04%)</title><rect x="49.4" y="5637" width="0.5" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="52.43" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="422.1" y="2757" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="425.11" y="2767.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="276.1" y="5141" width="10.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="279.13" y="5151.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="321.7" y="5349" width="1.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="324.66" y="5359.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="44.7" y="5349" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="47.73" y="5359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="400.0" y="4677" width="2.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="403.05" y="4687.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.08%)</title><rect x="240.5" y="2901" width="0.9" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="243.46" y="2911.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="293.5" y="5669" width="5.6" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="296.50" y="5679.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="36.8" y="3669" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="39.75" y="3679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="432.0" y="1749" width="0.4" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="434.96" y="1759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="3237" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="412.90" y="3247.5" ></text>
</g>
<g >
<title>`llvm::AssumptionCache::assumptionsFor(llvm::Value const*) (1 samples, 0.04%)</title><rect x="915.4" y="5797" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="918.42" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="3365" width="4.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="285.70" y="3375.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.04%)</title><rect x="648.3" y="5381" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="651.35" y="5391.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="249.8" y="933" width="0.5" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="252.85" y="943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="2949" width="1.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="434.50" y="2959.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="297.3" y="5397" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="300.26" y="5407.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="136.3" y="4245" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="139.26" y="4255.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="268.2" y="1269" width="0.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="271.15" y="1279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3029" width="1.0" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="424.64" y="3039.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="421.2" y="4245" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="424.17" y="4255.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (1 samples, 0.04%)</title><rect x="567.6" y="5669" width="0.5" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="570.61" y="5679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="52.2" y="4853" width="2.9" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="55.24" y="4863.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="170.5" y="1477" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="173.53" y="1487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="415.1" y="4501" width="0.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="418.07" y="4511.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="425.9" y="3061" width="0.9" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="428.86" y="3071.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="277.1" y="885" width="1.8" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="280.07" y="895.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="314.6" y="5205" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="317.62" y="5215.5" ></text>
</g>
<g >
<title>`llvm::df_iterator&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*, llv (1 samples, 0.04%)</title><rect x="689.6" y="5845" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="692.65" y="5855.5" ></text>
</g>
<g >
<title>`OPTIMIZED-LEXICAL-LOCATION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="343.7" y="4693" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="346.72" y="4703.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.9" y="5029" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="327.95" y="5039.5" ></text>
</g>
<g >
<title>`std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp; st (1 samples, 0.04%)</title><rect x="677.0" y="5717" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="679.98" y="5727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (108 samples, 4.30%)</title><rect x="180.4" y="1493" width="50.7" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="183.38" y="1503.5" >`core..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="282.7" y="1493" width="1.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="285.70" y="1503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="35.8" y="4965" width="7.5" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="38.82" y="4975.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.04%)</title><rect x="335.7" y="4293" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="338.74" y="4303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="2597" width="1.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="434.50" y="2607.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="417.4" y="1621" width="2.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="420.41" y="1631.5" ></text>
</g>
<g >
<title>`llvm::TargetTransformInfo::Model&lt;(anonymous namespace)::NoTTIIm (1 samples, 0.04%)</title><rect x="782.6" y="5829" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="785.59" y="5839.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="244.2" y="437" width="0.5" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="247.22" y="447.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.4" y="3125" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="412.44" y="3135.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="396.3" y="4533" width="3.7" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="399.29" y="4543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((THE-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="431.5" y="3605" width="1.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="434.50" y="3615.5" ></text>
</g>
<g >
<title>`cc_error_type_error (1 samples, 0.04%)</title><rect x="332.0" y="4501" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="334.99" y="4511.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="286.9" y="4949" width="0.5" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="289.93" y="4959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.6" y="2741" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="424.64" y="2751.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="269.1" y="37" width="0.9" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="272.09" y="47.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TYPEQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="426.3" y="2437" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="429.33" y="2447.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (6 samples, 0.24%)</title><rect x="589.7" y="5797" width="2.8" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="592.67" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.3" y="965" width="0.4" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="430.27" y="975.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (4 samples, 0.16%)</title><rect x="338.1" y="4501" width="1.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="341.09" y="4511.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="276.6" y="3973" width="4.7" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="279.60" y="3983.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (1 samples, 0.04%)</title><rect x="278.9" y="613" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="281.95" y="623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="2021" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="428.86" y="2031.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="114.7" y="3637" width="7.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="117.67" y="3647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="3013" width="4.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="279.60" y="3023.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="4853" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="408.68" y="4863.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (4 samples, 0.16%)</title><rect x="618.8" y="5301" width="1.9" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="621.77" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (31 samples, 1.23%)</title><rect x="257.4" y="2357" width="14.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="260.36" y="2367.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="86.5" y="4933" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="89.51" y="4943.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="234.8" y="421" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="237.83" y="431.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="865.7" y="5813" width="0.4" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="868.66" y="5823.5" ></text>
</g>
<g >
<title>`wrapped_get_llvm__StructType_llvm__ArrayRef_llvm__Constant__ (1 samples, 0.04%)</title><rect x="676.0" y="5797" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="679.04" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="43.8" y="4933" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="46.79" y="4943.5" ></text>
</g>
<g >
<title>`collectBitParts(llvm::Value*, bool, bool, std::__1::map&lt;llvm::V (1 samples, 0.04%)</title><rect x="773.7" y="5797" width="0.4" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="776.67" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="61.6" y="4965" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="64.63" y="4975.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="340.9" y="4437" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="343.91" y="4447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="247.0" y="357" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="250.03" y="367.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="165.8" y="949" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="168.83" y="959.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="92.1" y="3141" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="95.14" y="3151.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="1749" width="5.6" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="236.89" y="1759.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1:: (1 samples, 0.04%)</title><rect x="24.6" y="4053" width="0.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="27.55" y="4063.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (8 samples, 0.32%)</title><rect x="502.4" y="5781" width="3.7" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="505.37" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="268.2" y="1973" width="3.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="271.15" y="1983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="2197" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="423.70" y="2207.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.04%)</title><rect x="759.1" y="5717" width="0.5" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="762.12" y="5727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="412.3" y="3909" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="415.25" y="3919.5" ></text>
</g>
<g >
<title>`wrapped_cl__type_of_T_sp (1 samples, 0.04%)</title><rect x="165.4" y="2485" width="0.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="168.36" y="2495.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="424.9" y="2197" width="1.0" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="427.92" y="2207.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="165.4" y="3893" width="1.8" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="168.36" y="3903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="423.0" y="4021" width="10.4" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="426.05" y="4031.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="420.7" y="2021" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="423.70" y="2031.5" ></text>
</g>
<g >
<title>`sprintf (1 samples, 0.04%)</title><rect x="432.4" y="2245" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="435.43" y="2255.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (1 samples, 0.04%)</title><rect x="259.7" y="165" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="262.71" y="175.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (7 samples, 0.28%)</title><rect x="608.4" y="5445" width="3.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="611.45" y="5455.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.9" y="3509" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="389.91" y="3519.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="247.5" y="757" width="1.9" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="250.50" y="767.5" ></text>
</g>
<g >
<title>`__v2printf (1 samples, 0.04%)</title><rect x="402.9" y="4933" width="0.4" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="405.86" y="4943.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="113.3" y="3477" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="116.26" y="3487.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION-IMPL^COMPILER^FN^^ (4 samples, 0.16%)</title><rect x="623.9" y="5189" width="1.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="626.94" y="5199.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="178.0" y="2293" width="2.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="181.04" y="2303.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (43 samples, 1.71%)</title><rect x="252.2" y="4037" width="20.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="255.20" y="4047.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="2357" width="3.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="420.41" y="2367.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="123.6" y="1061" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="126.59" y="1071.5" ></text>
</g>
<g >
<title>`findRefEdges(llvm::ModuleSummaryIndex&amp;, llvm::User const*, llvm (3 samples, 0.12%)</title><rect x="960.0" y="5925" width="1.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="963.01" y="5935.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="336.2" y="4453" width="1.0" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="339.21" y="4463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="400.5" y="3877" width="1.4" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="403.52" y="3887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (304 samples, 12.09%)</title><rect x="130.6" y="4853" width="142.7" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="133.63" y="4863.5" >`core::clos__inter..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="391.6" y="2725" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="394.60" y="2735.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="427.3" y="3717" width="4.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="430.27" y="3727.5" ></text>
</g>
<g >
<title>`SET-DIFFERENCE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="370.9" y="5701" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="373.95" y="5711.5" ></text>
</g>
<g >
<title>`llvm::APInt::sdiv_ov(llvm::APInt const&amp;, bool&amp;) const (1 samples, 0.04%)</title><rect x="722.5" y="5813" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="725.51" y="5823.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitICmpInst(llvm::ICmpInst&amp;) (36 samples, 1.43%)</title><rect x="746.0" y="5845" width="16.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="748.97" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="180.4" y="133" width="2.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="183.38" y="143.5" ></text>
</g>
<g >
<title>`llvm::SSAUpdater::GetValueInMiddleOfBlock(llvm::BasicBlock*) (1 samples, 0.04%)</title><rect x="815.4" y="5765" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="818.44" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (14 samples, 0.56%)</title><rect x="17.5" y="4165" width="6.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="20.51" y="4175.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.04%)</title><rect x="710.8" y="5845" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="713.77" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="422.1" y="2181" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="425.11" y="2191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="4805" width="2.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="296.97" y="4815.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="425.9" y="2565" width="0.9" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="428.86" y="2575.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="308.1" y="5845" width="0.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="311.05" y="5855.5" ></text>
</g>
<g >
<title>0x1225e5094 (3 samples, 0.12%)</title><rect x="295.4" y="3493" width="1.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="298.38" y="3503.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (1 samples, 0.04%)</title><rect x="392.1" y="3973" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="395.07" y="3983.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;std::__1::pair&lt;llvm::Mem (1 samples, 0.04%)</title><rect x="780.2" y="5685" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="783.24" y="5695.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="503.3" y="5685" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="506.31" y="5695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="413.7" y="4229" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="416.66" y="4239.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (2 samples, 0.08%)</title><rect x="251.3" y="4037" width="0.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="254.26" y="4047.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIndexedOffsetInType(llvm::Type*, llvm::Arr (1 samples, 0.04%)</title><rect x="723.9" y="5813" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="726.91" y="5823.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="1557" width="7.5" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="246.28" y="1567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="2917" width="3.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="420.41" y="2927.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="419.3" y="885" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="422.29" y="895.5" ></text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (1 samples, 0.04%)</title><rect x="514.6" y="5813" width="0.4" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="517.57" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="144.2" y="4325" width="1.9" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="147.24" y="4335.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="366.7" y="5685" width="1.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="369.72" y="5695.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="901" width="26.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="207.32" y="911.5" >`..</text>
</g>
<g >
<title>`llvm::CompositeType::getTypeAtIndex(llvm::Value const*) const (1 samples, 0.04%)</title><rect x="812.6" y="5557" width="0.5" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="815.63" y="5567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="3461" width="63.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="170.24" y="3471.5" >`INTERP..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="136.7" y="4277" width="1.9" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="139.73" y="4287.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="629" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="423.70" y="639.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (7 samples, 0.28%)</title><rect x="88.4" y="4277" width="3.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="91.39" y="4287.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="405.2" y="5765" width="0.9" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="408.21" y="5775.5" ></text>
</g>
<g >
<title>`IRC-FUNCTION-CREATE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="342.8" y="4661" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="345.78" y="4671.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (17 samples, 0.68%)</title><rect x="91.7" y="4117" width="7.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="94.67" y="4127.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="405.7" y="4565" width="0.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="408.68" y="4575.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="37.7" y="4581" width="0.5" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="40.69" y="4591.5" ></text>
</g>
<g >
<title>`SIMPLE-TYPE-PREDICATE^CORE^FN^^ (2 samples, 0.08%)</title><rect x="141.0" y="4325" width="0.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="143.95" y="4335.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.04%)</title><rect x="776.0" y="5813" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="779.01" y="5823.5" ></text>
</g>
<g >
<title>`REMOVE-ENCLOSE-FROM-FUNCTION-DAG^CLEAVIR-HIR-TRANSFORMATIONS^FN (1 samples, 0.04%)</title><rect x="523.0" y="5829" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="526.02" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (136 samples, 5.41%)</title><rect x="167.2" y="2709" width="63.9" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="170.24" y="2719.5" >`core::..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4725" width="2.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="55.24" y="4735.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (1 samples, 0.04%)</title><rect x="854.9" y="5861" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="857.87" y="5871.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="343.7" y="4677" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="346.72" y="4687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="340.9" y="4517" width="0.5" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="343.91" y="4527.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="431.5" y="3077" width="1.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="434.50" y="3087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="123.6" y="565" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="126.59" y="575.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="295.4" y="3365" width="1.4" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="298.38" y="3375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="393.5" y="3813" width="0.9" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="396.48" y="3823.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (40 samples, 1.59%)</title><rect x="232.0" y="3829" width="18.8" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="235.01" y="3839.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (5 samples, 0.20%)</title><rect x="397.7" y="4197" width="2.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="400.70" y="4207.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="249.4" y="773" width="0.4" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="252.38" y="783.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (15 samples, 0.60%)</title><rect x="232.5" y="2933" width="7.0" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="235.48" y="2943.5" ></text>
</g>
<g >
<title>`OPTIMIZED-EARLEY-ITEM-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="139.5" y="4341" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="142.55" y="4351.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="3781" width="3.8" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="420.41" y="3791.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (31 samples, 1.23%)</title><rect x="438.1" y="5461" width="14.5" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="441.07" y="5471.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="165.8" y="1445" width="1.0" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="168.83" y="1455.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="400.0" y="4533" width="2.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="403.05" y="4543.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LOCALLY) T T T))^M (9 samples, 0.36%)</title><rect x="276.6" y="2005" width="4.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="279.60" y="2015.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="257.4" y="1445" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="260.36" y="1455.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="417.4" y="2229" width="3.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="420.41" y="2239.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4325" width="1.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="39.28" y="4335.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="409.4" y="3973" width="1.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="412.44" y="3983.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="423.0" y="2245" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="426.05" y="2255.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.04%)</title><rect x="756.8" y="5813" width="0.4" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="759.77" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="287.4" y="5253" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="290.40" y="5263.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.0" y="2373" width="0.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="411.97" y="2383.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.3" y="3989" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="414.31" y="3999.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.04%)</title><rect x="921.1" y="5829" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="924.05" y="5839.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="295.4" y="2485" width="0.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="298.38" y="2495.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="432.0" y="2277" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="434.96" y="2287.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="231.1" y="3461" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="234.07" y="3471.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (1 samples, 0.04%)</title><rect x="36.8" y="3573" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="39.75" y="3583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="240.5" y="3157" width="10.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="243.46" y="3167.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T CST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="170.5" y="1653" width="1.0" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="173.53" y="1663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="380.3" y="4661" width="1.4" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="383.33" y="4671.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (35 samples, 1.39%)</title><rect x="417.4" y="4741" width="16.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="420.41" y="4751.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="231.5" y="3621" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="234.54" y="3631.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="398.6" y="3333" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="401.64" y="3343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="353.1" y="5493" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="356.11" y="5503.5" ></text>
</g>
<g >
<title>`PARSE-FUNCTION-TYPE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="312.7" y="5525" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="315.74" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1701" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="423.70" y="1711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="386.4" y="3285" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="389.44" y="3295.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (1 samples, 0.04%)</title><rect x="44.7" y="5365" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="47.73" y="5375.5" ></text>
</g>
<g >
<title>`COERCE-TO-CONDITION^CORE^FN^^ (1 samples, 0.04%)</title><rect x="312.7" y="5429" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="315.74" y="5439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="427.3" y="2741" width="4.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="430.27" y="2751.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.0" y="1829" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="411.97" y="1839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="268.6" y="613" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="271.62" y="623.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="295.8" y="2149" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="298.85" y="2159.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="167.7" y="1797" width="3.8" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="170.71" y="1807.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (3 samples, 0.12%)</title><rect x="677.9" y="5957" width="1.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="680.92" y="5967.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="52.7" y="3797" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="55.71" y="3807.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.04%)</title><rect x="617.8" y="5237" width="0.5" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="620.84" y="5247.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="23.6" y="3701" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="26.61" y="3711.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="409.4" y="2229" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="412.44" y="2239.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="417.4" y="4453" width="5.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="420.41" y="4463.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilderBase_O::SetCurrentDebugLocationToLineColumnScop (1 samples, 0.04%)</title><rect x="620.2" y="5189" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="623.18" y="5199.5" ></text>
</g>
<g >
<title>`PRIMITIVE-PROPERTIES^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="631.4" y="5253" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="634.45" y="5263.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="26.4" y="4501" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="29.43" y="4511.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="318.4" y="5573" width="0.4" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="321.38" y="5583.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="56.5" y="5685" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="59.47" y="5695.5" ></text>
</g>
<g >
<title>`llvm::AliasSetTracker::getAliasSetForPointer(llvm::Value*, unsi (1 samples, 0.04%)</title><rect x="919.2" y="5797" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="922.17" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="421.6" y="3557" width="1.0" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="424.64" y="3567.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="231.5" y="3845" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="234.54" y="3855.5" ></text>
</g>
<g >
<title>`GC_clear_marks (4 samples, 0.16%)</title><rect x="469.5" y="5621" width="1.9" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="472.51" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="3941" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="412.44" y="3951.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="268.6" y="1413" width="3.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="271.62" y="1423.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="409.4" y="3573" width="1.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="412.44" y="3583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="3173" width="3.8" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="420.41" y="3183.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (3 samples, 0.12%)</title><rect x="321.7" y="5237" width="1.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="324.66" y="5247.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="431.5" y="3733" width="1.9" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="434.50" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (11 samples, 0.44%)</title><rect x="417.4" y="4389" width="5.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="420.41" y="4399.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="166.3" y="725" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="169.30" y="735.5" ></text>
</g>
<g >
<title>0x11a477094 (15 samples, 0.60%)</title><rect x="243.3" y="1285" width="7.0" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="246.28" y="1295.5" ></text>
</g>
<g >
<title>`llvm::FindFunctionBackedges(llvm::Function const&amp;, llvm::SmallV (2 samples, 0.08%)</title><rect x="833.7" y="5861" width="1.0" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="836.75" y="5871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3237" width="1.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="411.03" y="3247.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="400.0" y="4325" width="2.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="403.05" y="4335.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (10 samples, 0.40%)</title><rect x="172.4" y="341" width="4.7" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="175.40" y="351.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="268.2" y="1605" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="271.15" y="1615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="127.3" y="5317" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="130.34" y="5327.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (5 samples, 0.20%)</title><rect x="731.9" y="5781" width="2.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="734.89" y="5791.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::getSCEVAtScope(llvm::SCEV const*, llvm:: (1 samples, 0.04%)</title><rect x="920.1" y="5621" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="923.11" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="297.3" y="5333" width="0.4" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="300.26" y="5343.5" ></text>
</g>
<g >
<title>`ENSURE-ORIGIN^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="301.9" y="5877" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="304.95" y="5887.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (40 samples, 1.59%)</title><rect x="232.0" y="4085" width="18.8" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="235.01" y="4095.5" ></text>
</g>
<g >
<title>`SORT-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="171.5" y="1445" width="0.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="174.46" y="1455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="165.8" y="2693" width="1.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="168.83" y="2703.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="608.0" y="5445" width="0.4" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="610.98" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="165.4" y="3317" width="1.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="168.36" y="3327.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="423.0" y="3061" width="1.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="426.05" y="3071.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="429.6" y="2005" width="1.0" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="432.62" y="2015.5" ></text>
</g>
<g >
<title>`core::core__find_class_holder(gctools::smart_ptr&lt;core::Symbol_O (1 samples, 0.04%)</title><rect x="294.4" y="3749" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="297.44" y="3759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="279.4" y="1253" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="282.42" y="1263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="398.2" y="3637" width="0.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="401.17" y="3647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="357" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="423.70" y="367.5" ></text>
</g>
<g >
<title>`isObjectSmallerThan(llvm::Value const*, unsigned long long, llv (2 samples, 0.08%)</title><rect x="817.3" y="5653" width="1.0" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="820.32" y="5663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="383.2" y="5061" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="386.15" y="5071.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.08%)</title><rect x="290.2" y="5477" width="1.0" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="293.21" y="5487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1349" width="5.6" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="236.89" y="1359.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T LEXICAL-VARIABLE-INFO))^METHO (1 samples, 0.04%)</title><rect x="86.5" y="4965" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="89.51" y="4975.5" ></text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (1 samples, 0.04%)</title><rect x="51.8" y="4981" width="0.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="54.77" y="4991.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="348.9" y="5333" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="351.89" y="5343.5" ></text>
</g>
<g >
<title>`COMPUTE-LOCATION-OWNERS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (8 samples, 0.32%)</title><rect x="493.9" y="5829" width="3.8" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="496.92" y="5839.5" ></text>
</g>
<g >
<title>0x11a477094 (6 samples, 0.24%)</title><rect x="276.6" y="1125" width="2.8" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="279.60" y="1135.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="202.9" y="1157" width="1.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="205.91" y="1167.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="172.4" y="181" width="4.7" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="175.40" y="191.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (25 samples, 0.99%)</title><rect x="100.6" y="3957" width="11.7" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="103.59" y="3967.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="2085" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="411.97" y="2095.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="427.3" y="1845" width="0.4" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="430.27" y="1855.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (3 samples, 0.12%)</title><rect x="488.8" y="5813" width="1.4" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="491.76" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="421.6" y="2965" width="1.0" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="424.64" y="2975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4261" width="0.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="419.48" y="4271.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="123.6" y="869" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="126.59" y="879.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="2725" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="414.78" y="2735.5" ></text>
</g>
<g >
<title>`ALLOCA-RETURN^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="320.7" y="5317" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="323.72" y="5327.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="582.6" y="5797" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="585.63" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="249.4" y="741" width="0.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="252.38" y="751.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="4197" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="417.13" y="4207.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="414.1" y="4165" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="417.13" y="4175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="4101" width="1.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="412.44" y="4111.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="52.7" y="3589" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="55.71" y="3599.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.04%)</title><rect x="906.0" y="5733" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="909.03" y="5743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="125.9" y="2757" width="1.0" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="128.93" y="2767.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="121.2" y="3573" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="124.24" y="3583.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="342.3" y="4629" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="345.32" y="4639.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (2 samples, 0.08%)</title><rect x="165.8" y="1413" width="1.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="168.83" y="1423.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="26.0" y="4405" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="28.96" y="4415.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="421.6" y="2357" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="424.64" y="2367.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyUsingDistributiveLaws(llvm::BinaryO (1 samples, 0.04%)</title><rect x="740.3" y="5829" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="743.34" y="5839.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="627.7" y="5077" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="630.69" y="5087.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="3749" width="1.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="412.44" y="3759.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (514 samples, 20.45%)</title><rect x="58.3" y="5829" width="241.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="61.35" y="5839.5" >`COMBINE-METHOD-FUNCTIONS.LAMBDA..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="4149" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="414.78" y="4159.5" ></text>
</g>
<g >
<title>`DELETE-THE^CLEAVIR-KILDALL-TYPE-INFERENCE^FN^^ (11 samples, 0.44%)</title><rect x="462.9" y="5845" width="5.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="465.94" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="279.4" y="389" width="0.5" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="282.42" y="399.5" ></text>
</g>
<g >
<title>`core::lisp_true() (1 samples, 0.04%)</title><rect x="363.0" y="5685" width="0.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="365.97" y="5695.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (2 samples, 0.08%)</title><rect x="251.3" y="3973" width="0.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="254.26" y="3983.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIndexedOffsetInType(llvm::Type*, llvm::Arr (1 samples, 0.04%)</title><rect x="699.5" y="5797" width="0.5" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="702.51" y="5807.5" ></text>
</g>
<g >
<title>`COMPILER-TIMER-ELAPSED^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="462.5" y="5845" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="465.47" y="5855.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="166.3" y="757" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="169.30" y="767.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_get_ClassHolder_sp (1 samples, 0.04%)</title><rect x="378.5" y="5813" width="0.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="381.46" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="21.3" y="3717" width="0.4" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="24.26" y="3727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (52 samples, 2.07%)</title><rect x="379.4" y="5397" width="24.4" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="382.40" y="5407.5" >`..</text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (1 samples, 0.04%)</title><rect x="861.0" y="5781" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="863.97" y="5791.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PointerIntPair&lt;llvm::Va (1 samples, 0.04%)</title><rect x="938.9" y="5861" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="941.89" y="5871.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4533" width="2.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="55.24" y="4543.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="19.9" y="3493" width="0.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="22.86" y="3503.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (2 samples, 0.08%)</title><rect x="943.1" y="5877" width="0.9" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="946.11" y="5887.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="268.2" y="1525" width="0.4" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="271.15" y="1535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.4" y="1781" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="428.39" y="1791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="294.9" y="4005" width="1.9" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="297.91" y="4015.5" ></text>
</g>
<g >
<title>`llvm::InstVisitor&lt;(anonymous namespace)::SCCPSolver, void&gt;::vis (3 samples, 0.12%)</title><rect x="945.9" y="5893" width="1.4" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="948.93" y="5903.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1:: (1 samples, 0.04%)</title><rect x="18.0" y="3397" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="20.98" y="3407.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="398.2" y="2901" width="0.4" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="401.17" y="2911.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="467.2" y="5765" width="0.4" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="470.17" y="5775.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (1 samples, 0.04%)</title><rect x="279.4" y="373" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="282.42" y="383.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="2405" width="4.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="285.70" y="2415.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION-IMPL^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="599.1" y="5637" width="0.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="602.06" y="5647.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LoopInvariantCodeMotion::runOnLoop(llvm: (1 samples, 0.04%)</title><rect x="919.2" y="5861" width="0.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="922.17" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="279.4" y="1141" width="1.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="282.42" y="1151.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (37 samples, 1.47%)</title><rect x="435.3" y="5589" width="17.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="438.25" y="5599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="122.6" y="3685" width="4.7" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="125.65" y="3695.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (561 samples, 22.32%)</title><rect x="685.4" y="6005" width="263.3" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="688.43" y="6015.5" >`core::SingleDispatchGenericFunctio..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="424.9" y="2261" width="1.0" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="427.92" y="2271.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="412.3" y="3477" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="415.25" y="3487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="94.5" y="3653" width="3.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="97.49" y="3663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="429.6" y="1925" width="1.0" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="432.62" y="1935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="3317" width="0.9" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="428.86" y="3327.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="354.0" y="5333" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="357.05" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="2533" width="1.0" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="426.52" y="2543.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="3141" width="1.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="424.64" y="3151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="434.8" y="5525" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="437.78" y="5535.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="3237" width="4.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="279.60" y="3247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="2773" width="4.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="430.27" y="2783.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="4229" width="3.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="420.41" y="4239.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="1973" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="412.90" y="1983.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (108 samples, 4.30%)</title><rect x="180.4" y="1845" width="50.7" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="183.38" y="1855.5" >`core..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="282.7" y="1525" width="1.9" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="285.70" y="1535.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="168.2" y="1365" width="1.9" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="171.18" y="1375.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="401.0" y="3541" width="0.9" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="403.99" y="3551.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="416.0" y="4645" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="419.01" y="4655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="381.7" y="4597" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="384.74" y="4607.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="247.5" y="1061" width="2.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="250.50" y="1071.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="405.2" y="5141" width="0.9" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="408.21" y="5151.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (2 samples, 0.08%)</title><rect x="58.8" y="5733" width="1.0" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="61.81" y="5743.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="527.7" y="5717" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="530.72" y="5727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (13 samples, 0.52%)</title><rect x="388.3" y="4421" width="6.1" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="391.31" y="4431.5" ></text>
</g>
<g >
<title>`core::type_of_decide_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="294.4" y="3797" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="297.44" y="3807.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="683.1" y="5893" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="686.08" y="5903.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitAllocaInst(llvm::AllocaInst&amp;) (1 samples, 0.04%)</title><rect x="739.4" y="5845" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="742.40" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="4725" width="0.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="408.68" y="4735.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="231.1" y="3637" width="0.4" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="234.07" y="3647.5" ></text>
</g>
<g >
<title>`INTERPRET-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="21.7" y="3861" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="24.73" y="3871.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="51.3" y="4805" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="54.30" y="4815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (60 samples, 2.39%)</title><rect x="407.1" y="5605" width="28.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="410.09" y="5615.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="62.1" y="4981" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="65.10" y="4991.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.04%)</title><rect x="561.0" y="5797" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="564.04" y="5807.5" ></text>
</g>
<g >
<title>`IRC-GEP-VARIABLE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="629.6" y="5189" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="632.57" y="5199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="123.6" y="1637" width="0.9" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="126.59" y="1647.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="4085" width="1.8" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="168.36" y="4095.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="4101" width="3.8" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="420.41" y="4111.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (43 samples, 1.71%)</title><rect x="252.2" y="4197" width="20.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="255.20" y="4207.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="121.7" y="3573" width="0.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="124.71" y="3583.5" ></text>
</g>
<g >
<title>`%SIZE_T^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="612.7" y="5429" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="615.67" y="5439.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="354.0" y="5301" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="357.05" y="5311.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (4 samples, 0.16%)</title><rect x="315.6" y="5365" width="1.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="318.56" y="5375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="240.0" y="2677" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="242.99" y="2687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="4517" width="1.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="411.03" y="4527.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="285.1" y="965" width="0.4" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="288.05" y="975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="382.2" y="4005" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="385.21" y="4015.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="294.9" y="4101" width="1.9" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="297.91" y="4111.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="1765" width="0.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="126.59" y="1775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (136 samples, 5.41%)</title><rect x="167.2" y="3541" width="63.9" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="170.24" y="3551.5" >`core::..</text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="952.5" y="5877" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="955.50" y="5887.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (3 samples, 0.12%)</title><rect x="758.2" y="5797" width="1.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="761.18" y="5807.5" ></text>
</g>
<g >
<title>`UNIVERSAL-ERROR-HANDLER^CORE^FN^^ (1 samples, 0.04%)</title><rect x="98.7" y="3797" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="101.71" y="3807.5" ></text>
</g>
<g >
<title>`MAKE-FUNCTION-METADATA^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="670.9" y="5813" width="0.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="673.88" y="5823.5" ></text>
</g>
<g >
<title>0x11a477094 (6 samples, 0.24%)</title><rect x="269.1" y="405" width="2.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="272.09" y="415.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="405.7" y="4245" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="408.68" y="4255.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="276.6" y="4117" width="4.7" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="279.60" y="4127.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.04%)</title><rect x="611.3" y="5333" width="0.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="614.26" y="5343.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS^CLEAVIR-IR^FN^^ (2 samples, 0.08%)</title><rect x="453.6" y="5845" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="456.56" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="424.9" y="2469" width="1.0" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="427.92" y="2479.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="125.9" y="2293" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="128.93" y="2303.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="18.4" y="3557" width="1.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="21.45" y="3567.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (3 samples, 0.12%)</title><rect x="891.5" y="5733" width="1.4" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="894.48" y="5743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="277.1" y="741" width="1.8" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="280.07" y="751.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (40 samples, 1.59%)</title><rect x="232.0" y="3765" width="18.8" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="235.01" y="3775.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="353.6" y="5365" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="356.58" y="5375.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="455.0" y="5797" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="457.96" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-FUNCTION^CLEAVIR-CST-TO-AST^FN^^ (145 samples, 5.77%)</title><rect x="59.8" y="5413" width="68.0" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="62.75" y="5423.5" >`CONVER..</text>
</g>
<g >
<title>`MAYBE-SPILL-TO-REGISTER-SAVE-AREA^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="631.9" y="5317" width="1.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="634.92" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (8 samples, 0.32%)</title><rect x="167.7" y="1749" width="3.8" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="170.71" y="1759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="3253" width="1.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="434.50" y="3263.5" ></text>
</g>
<g >
<title>`RUN-ALL/Users/karstenpoeck/lisp/compiler/clasp-karsten/src/lisp (2,028 samples, 80.67%)</title><rect x="10.0" y="6293" width="951.9" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="13.00" y="6303.5" >`RUN-ALL/Users/karstenpoeck/lisp/compiler/clasp-karsten/src/lisp</text>
</g>
<g >
<title>`llvm::PMTopLevelManager::schedulePass(llvm::Pass*) (1 samples, 0.04%)</title><rect x="685.4" y="5893" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="688.43" y="5903.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (95 samples, 3.78%)</title><rect x="12.3" y="5813" width="44.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="15.35" y="5823.5" >`REA..</text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.04%)</title><rect x="699.5" y="5845" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="702.51" y="5855.5" ></text>
</g>
<g >
<title>`AST-&gt;HIR^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="355.9" y="5733" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="358.93" y="5743.5" ></text>
</g>
<g >
<title>`NOTE-SKIPPED-INPUT^ECLECTOR.READER^((PARSE-RESULT-CLIENT T T))^ (1 samples, 0.04%)</title><rect x="56.0" y="5717" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="59.00" y="5727.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (7 samples, 0.28%)</title><rect x="268.6" y="1557" width="3.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="271.62" y="1567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="4037" width="3.8" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="420.41" y="4047.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (1 samples, 0.04%)</title><rect x="592.0" y="5685" width="0.5" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="595.02" y="5695.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T LEXICAL-VARIABLE-INFO T T))^ (1 samples, 0.04%)</title><rect x="126.4" y="2229" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="129.40" y="2239.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="332.9" y="4245" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="335.93" y="4255.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (40 samples, 1.59%)</title><rect x="232.0" y="3973" width="18.8" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="235.01" y="3983.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="401.9" y="3429" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="404.93" y="3439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="295.8" y="1989" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="298.85" y="1999.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="52.2" y="4117" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="55.24" y="4127.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="2501" width="3.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="420.41" y="2511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="3813" width="0.5" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="414.78" y="3823.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="49.0" y="5669" width="0.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="51.96" y="5679.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.04%)</title><rect x="700.0" y="5797" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="702.98" y="5807.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;std::__1::pair&lt;llvm::Val (2 samples, 0.08%)</title><rect x="945.9" y="5861" width="1.0" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="948.93" y="5871.5" ></text>
</g>
<g >
<title>0x11a477094 (9 samples, 0.36%)</title><rect x="282.7" y="2597" width="4.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="285.70" y="2607.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="255.5" y="3077" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="258.48" y="3087.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="167.7" y="1317" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="170.71" y="1327.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.04%)</title><rect x="39.6" y="4069" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="42.57" y="4079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (56 samples, 2.23%)</title><rect x="407.6" y="5349" width="26.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="410.56" y="5359.5" >`..</text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="311.8" y="5749" width="0.9" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="314.81" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="268.6" y="885" width="3.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="271.62" y="895.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="242.8" y="2709" width="8.0" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="245.81" y="2719.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="416.5" y="4421" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="419.48" y="4431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="384.6" y="4165" width="3.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="387.56" y="4175.5" ></text>
</g>
<g >
<title>0x11a477094 (136 samples, 5.41%)</title><rect x="167.2" y="3317" width="63.9" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="170.24" y="3327.5" >0x11a47..</text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T CST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="296.3" y="3189" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="299.32" y="3199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.0" y="3317" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="388.97" y="3327.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="1317" width="7.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="246.28" y="1327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="390.7" y="3285" width="1.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="393.66" y="3295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="422.1" y="2693" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="425.11" y="2703.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="391.6" y="2533" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="394.60" y="2543.5" ></text>
</g>
<g >
<title>`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="636.1" y="5237" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="639.14" y="5247.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (4 samples, 0.16%)</title><rect x="257.4" y="1845" width="1.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="260.36" y="1855.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.08%)</title><rect x="368.6" y="5749" width="0.9" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="371.60" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="1973" width="5.6" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="236.89" y="1983.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoWrapperPass::releaseMemory() (1 samples, 0.04%)</title><rect x="784.5" y="5893" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="787.46" y="5903.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::schedulePass(llvm::Pass*) (1 samples, 0.04%)</title><rect x="685.4" y="5925" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="688.43" y="5935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="2341" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="434.96" y="2351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (35 samples, 1.39%)</title><rect x="417.4" y="4869" width="16.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="420.41" y="4879.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="656.8" y="5413" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="659.79" y="5423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="18.0" y="3605" width="1.9" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="20.98" y="3615.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="295.4" y="3685" width="1.4" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="298.38" y="3695.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="232.0" y="3061" width="0.5" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="235.01" y="3071.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="373" width="1.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="288.52" y="383.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solveBlockValueImpl(l (1 samples, 0.04%)</title><rect x="693.9" y="5813" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="696.87" y="5823.5" ></text>
</g>
<g >
<title>`llvm::Constant::isAllOnesValue() const (1 samples, 0.04%)</title><rect x="878.3" y="5829" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="881.34" y="5839.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T CST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="273.3" y="5173" width="2.8" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="276.32" y="5183.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="34.4" y="5413" width="10.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="37.41" y="5423.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="88.4" y="3989" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="91.39" y="3999.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="398.2" y="3621" width="0.9" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="401.17" y="3631.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="322.6" y="5173" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="325.60" y="5183.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (9 samples, 0.36%)</title><rect x="444.2" y="5365" width="4.2" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="447.17" y="5375.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="281.3" y="4165" width="5.6" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="284.30" y="4175.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="243.3" y="549" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="246.28" y="559.5" ></text>
</g>
<g >
<title>`llvm::FindAvailablePtrLoadStore(llvm::Value*, llvm::Type*, bool (7 samples, 0.28%)</title><rect x="904.6" y="5813" width="3.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="907.62" y="5823.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="312.3" y="5685" width="0.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="315.28" y="5695.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4469" width="2.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="55.24" y="4479.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (57 samples, 2.27%)</title><rect x="204.3" y="565" width="26.8" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="207.32" y="575.5" >`..</text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="620.2" y="5285" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="623.18" y="5295.5" ></text>
</g>
<g >
<title>`READ-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="27.4" y="4821" width="0.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="30.37" y="4831.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.08%)</title><rect x="519.3" y="5797" width="0.9" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="522.27" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="397.7" y="3733" width="1.9" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="400.70" y="3743.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (9 samples, 0.36%)</title><rect x="282.7" y="3045" width="4.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="285.70" y="3055.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="421.6" y="2677" width="0.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="424.64" y="2687.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2645" width="4.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="279.60" y="2655.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (19 samples, 0.76%)</title><rect x="259.2" y="1589" width="9.0" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="262.24" y="1599.5" ></text>
</g>
<g >
<title>`core::cl__translate_pathname(gctools::smart_ptr&lt;core::T_O&gt;, gct (1 samples, 0.04%)</title><rect x="961.4" y="5989" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="964.42" y="5999.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.08%)</title><rect x="143.3" y="4325" width="0.9" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="146.30" y="4335.5" ></text>
</g>
<g >
<title>`IRC-CREATE-FUNCTION-DESCRIPTION^COMPILER^FN^^ (6 samples, 0.24%)</title><rect x="659.1" y="5589" width="2.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="662.14" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1493" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="423.70" y="1503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="343.7" y="4805" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="346.72" y="4815.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="257.4" y="1541" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="260.36" y="1551.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (1 samples, 0.04%)</title><rect x="649.3" y="5301" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="652.28" y="5311.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="675.6" y="5749" width="0.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="678.57" y="5759.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.04%)</title><rect x="131.6" y="4581" width="0.4" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="134.57" y="4591.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="336.7" y="4037" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="339.68" y="4047.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="244.7" y="709" width="2.3" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="247.69" y="719.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="370.0" y="5797" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="373.01" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'EVAL-WHEN) T T T)) (24 samples, 0.95%)</title><rect x="276.1" y="5189" width="11.3" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="279.13" y="5199.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (2 samples, 0.08%)</title><rect x="243.7" y="533" width="1.0" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="246.75" y="543.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (108 samples, 4.30%)</title><rect x="180.4" y="1685" width="50.7" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="183.38" y="1695.5" >`CONV..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="388.3" y="3941" width="3.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="391.31" y="3951.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.04%)</title><rect x="84.2" y="4997" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="87.16" y="5007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (12 samples, 0.48%)</title><rect x="410.8" y="5109" width="5.7" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="413.84" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (11 samples, 0.44%)</title><rect x="388.3" y="4373" width="5.2" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="391.31" y="4383.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STRUCTURE-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="249.8" y="1013" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="252.85" y="1023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="2965" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="414.78" y="2975.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.04%)</title><rect x="12.8" y="5493" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="15.82" y="5503.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="171.5" y="1797" width="0.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="174.46" y="1807.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2165" width="1.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="427.92" y="2175.5" ></text>
</g>
<g >
<title>`FIND-OR-CREATE-LOCATION^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="397.2" y="3893" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="400.23" y="3903.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="286.9" y="4917" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="289.93" y="4927.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.04%)</title><rect x="694.8" y="5781" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="697.81" y="5791.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeAllocSize(llvm::Type*) const (1 samples, 0.04%)</title><rect x="759.1" y="5733" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="762.12" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (4 samples, 0.16%)</title><rect x="410.8" y="4773" width="1.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="413.84" y="4783.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.04%)</title><rect x="145.2" y="4261" width="0.4" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="148.18" y="4271.5" ></text>
</g>
<g >
<title>`llvm::objcarc::ObjCARCAAWrapperPass* llvm::Pass::getAnalysisIfA (1 samples, 0.04%)</title><rect x="713.6" y="5877" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="716.59" y="5887.5" ></text>
</g>
<g >
<title>`CONVERT-VARIABLE^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="93.5" y="3509" width="0.5" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="96.55" y="3519.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="825.8" y="5589" width="0.4" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="828.77" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (8 samples, 0.32%)</title><rect x="417.4" y="3461" width="3.8" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="420.41" y="3471.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="340.4" y="4693" width="1.0" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="343.44" y="4703.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="124.5" y="1605" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="127.53" y="1615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="382.2" y="4421" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="385.21" y="4431.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.04%)</title><rect x="98.2" y="3749" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="101.24" y="3759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="2133" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="428.86" y="2143.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DISubroutineType*, (1 samples, 0.04%)</title><rect x="342.3" y="4549" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="345.32" y="4559.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="19.9" y="3237" width="0.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="22.86" y="3247.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="286.9" y="4613" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="289.93" y="4623.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInBoundsGEP(llvm::Value*, gctools::sm (1 samples, 0.04%)</title><rect x="609.9" y="5317" width="0.4" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="612.86" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (3 samples, 0.12%)</title><rect x="165.8" y="1797" width="1.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="168.83" y="1807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="382.2" y="4597" width="0.5" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="385.21" y="4607.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="231.5" y="3717" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="234.54" y="3727.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="295.4" y="2389" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="298.38" y="2399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="411.8" y="4341" width="0.9" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="414.78" y="4351.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="294.0" y="3877" width="0.9" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="296.97" y="3887.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="166.3" y="789" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="169.30" y="799.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="620.2" y="5221" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="623.18" y="5231.5" ></text>
</g>
<g >
<title>`LISTP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="416.5" y="4117" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="419.48" y="4127.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.04%)</title><rect x="428.2" y="2149" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="431.21" y="2159.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="253.1" y="3125" width="1.0" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="256.13" y="3135.5" ></text>
</g>
<g >
<title>`MAKE-ENTER-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="400.0" y="4181" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="403.05" y="4191.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (EXPLICIT-MULTI-PARAM (1 samples, 0.04%)</title><rect x="268.2" y="1301" width="0.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="271.15" y="1311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3941" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="404.93" y="3951.5" ></text>
</g>
<g >
<title>`READ-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="55.1" y="5413" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="58.06" y="5423.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (86 samples, 3.42%)</title><rect x="87.0" y="4821" width="40.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="89.98" y="4831.5" >`co..</text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="581.2" y="5765" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="584.23" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="113.3" y="3541" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="116.26" y="3551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.6" y="2421" width="0.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="424.64" y="2431.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; c (1 samples, 0.04%)</title><rect x="922.5" y="5845" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="925.46" y="5855.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="98.7" y="3893" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="101.71" y="3903.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="34.9" y="4581" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="37.88" y="4591.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="41.0" y="4373" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="43.98" y="4383.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (2 samples, 0.08%)</title><rect x="376.1" y="5749" width="0.9" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="379.11" y="5759.5" ></text>
</g>
<g >
<title>`OUT^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="617.8" y="5413" width="1.0" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="620.84" y="5423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.3" y="4133" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="414.31" y="4143.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (95 samples, 3.78%)</title><rect x="12.3" y="5877" width="44.6" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="15.35" y="5887.5" >`cor..</text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp_big(void const*) (1 samples, 0.04%)</title><rect x="838.0" y="5829" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="840.97" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="421.2" y="4277" width="0.4" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="424.17" y="4287.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="275.2" y="5125" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="278.19" y="5135.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="423.5" y="1829" width="1.0" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="426.52" y="1839.5" ></text>
</g>
<g >
<title>`core::SymbolToEnumConverter_O::enumIndexForSymbol(gctools::smar (1 samples, 0.04%)</title><rect x="633.8" y="5269" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="636.79" y="5279.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefBehavior(llvm::ImmutableCallSite) (1 samples, 0.04%)</title><rect x="803.7" y="5781" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="806.71" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="408.0" y="4533" width="2.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="411.03" y="4543.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="2965" width="4.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="279.60" y="2975.5" ></text>
</g>
<g >
<title>`LAMBDA-LIST-FROM-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="132.0" y="4629" width="1.0" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="135.04" y="4639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="2773" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="414.78" y="2783.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="538.0" y="5813" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="541.04" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="332.9" y="4533" width="1.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="335.93" y="4543.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::MemoryLocOrCall::MemoryLocOrCall(llvm::I (2 samples, 0.08%)</title><rect x="786.8" y="5829" width="0.9" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="789.81" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="407.6" y="5221" width="3.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="410.56" y="5231.5" ></text>
</g>
<g >
<title>`llvm::SimplifySelectInst(llvm::Value*, llvm::Value*, llvm::Valu (1 samples, 0.04%)</title><rect x="832.3" y="5797" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="835.34" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (108 samples, 4.30%)</title><rect x="180.4" y="2373" width="50.7" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="183.38" y="2383.5" >`core..</text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="307.6" y="5829" width="0.5" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="310.58" y="5839.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="49.9" y="4645" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="52.90" y="4655.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (17 samples, 0.68%)</title><rect x="91.7" y="4021" width="7.9" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="94.67" y="4031.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (23 samples, 0.91%)</title><rect x="257.4" y="1925" width="10.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="260.36" y="1935.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="252.2" y="3221" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="255.20" y="3231.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="370.5" y="5781" width="0.4" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="373.48" y="5791.5" ></text>
</g>
<g >
<title>`IRC-FUNCTION-CREATE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="633.8" y="5365" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="636.79" y="5375.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="278.9" y="517" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="281.95" y="527.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="345.6" y="4885" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="348.60" y="4895.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="353.6" y="5525" width="0.9" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="356.58" y="5535.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.08%)</title><rect x="169.1" y="661" width="1.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="172.12" y="671.5" ></text>
</g>
<g >
<title>`ELIMINATE-LOAD-TIME-VALUE-INPUTS^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="326.4" y="4661" width="0.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="329.36" y="4671.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.0" y="1781" width="0.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="411.97" y="1791.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="282.7" y="1861" width="4.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="285.70" y="1871.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1173" width="5.6" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="236.89" y="1183.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="889.1" y="5669" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="892.13" y="5679.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (6 samples, 0.24%)</title><rect x="748.3" y="5797" width="2.8" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="751.32" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CAR-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="408.0" y="2805" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="411.03" y="2815.5" ></text>
</g>
<g >
<title>`llvm::getConstantStringInfo(llvm::Value const*, llvm::StringRef (1 samples, 0.04%)</title><rect x="898.5" y="5765" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="901.52" y="5775.5" ></text>
</g>
<g >
<title>`llvm::APInt::sdiv_ov(llvm::APInt const&amp;, bool&amp;) const (1 samples, 0.04%)</title><rect x="868.5" y="5797" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="871.48" y="5807.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="95.9" y="3461" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="98.89" y="3471.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.04%)</title><rect x="53.7" y="3797" width="0.4" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="56.65" y="3807.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (3 samples, 0.12%)</title><rect x="39.1" y="4357" width="1.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="42.10" y="4367.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (41 samples, 1.63%)</title><rect x="325.4" y="4981" width="19.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="328.42" y="4991.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="167.7" y="2389" width="10.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="170.71" y="2399.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (12 samples, 0.48%)</title><rect x="293.5" y="5717" width="5.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="296.50" y="5727.5" ></text>
</g>
<g >
<title>`EXPAND-MACRO^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="122.6" y="2581" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="125.65" y="2591.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="52.7" y="3669" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="55.71" y="3679.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (2 samples, 0.08%)</title><rect x="254.5" y="3029" width="1.0" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="257.54" y="3039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="413.7" y="3765" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="416.66" y="3775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="2357" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="434.96" y="2367.5" ></text>
</g>
<g >
<title>`NOTE-SKIPPED-INPUT^ECLECTOR.READER^((PARSE-RESULT-CLIENT T T))^ (1 samples, 0.04%)</title><rect x="50.8" y="4805" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="53.84" y="4815.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="414.1" y="3781" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="417.13" y="3791.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="633.3" y="5285" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="636.33" y="5295.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="2117" width="4.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="285.70" y="2127.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="379.9" y="4965" width="3.3" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="382.86" y="4975.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="296.3" y="3061" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="299.32" y="3071.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="197" width="1.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="288.52" y="207.5" ></text>
</g>
<g >
<title>`WRITE-TO-STRING^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="631.0" y="5173" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="633.98" y="5183.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="295.8" y="1893" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="298.85" y="1903.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (7 samples, 0.28%)</title><rect x="38.2" y="4597" width="3.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="41.16" y="4607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="293.5" y="5605" width="3.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="296.50" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="949" width="0.4" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="428.86" y="959.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="33.5" y="5381" width="0.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="36.47" y="5391.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="383.6" y="4869" width="10.8" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="386.62" y="4879.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (2 samples, 0.08%)</title><rect x="769.4" y="5797" width="1.0" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="772.44" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="423.0" y="2197" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="426.05" y="2207.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout con (1 samples, 0.04%)</title><rect x="832.8" y="5797" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="835.81" y="5807.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="834.2" y="5733" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="837.22" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="2645" width="1.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="168.83" y="2655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1509" width="2.4" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="420.41" y="1519.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="3861" width="1.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="411.03" y="3871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="393.9" y="3237" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="396.95" y="3247.5" ></text>
</g>
<g >
<title>`UNIVERSAL-ERROR-HANDLER^CORE^FN^^ (1 samples, 0.04%)</title><rect x="312.7" y="5445" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="315.74" y="5455.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="387.8" y="4373" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="390.84" y="4383.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3173" width="0.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="254.26" y="3183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (22 samples, 0.88%)</title><rect x="423.0" y="4133" width="10.4" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="426.05" y="4143.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="419.3" y="645" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="422.29" y="655.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="294.9" y="3861" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="297.91" y="3871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1029" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="427.92" y="1039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="432.0" y="2101" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="434.96" y="2111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1861" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="428.86" y="1871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="270.0" y="149" width="1.9" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="273.03" y="159.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LoopLoadElimination::runOnFunction(llvm: (1 samples, 0.04%)</title><rect x="846.4" y="5893" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="849.42" y="5903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="324.5" y="5061" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="327.48" y="5071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3717" width="3.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="420.41" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="1797" width="1.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="426.52" y="1807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="422.1" y="2533" width="0.5" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="425.11" y="2543.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="385.5" y="3685" width="1.9" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="388.50" y="3695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="294.0" y="4437" width="2.8" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="296.97" y="4447.5" ></text>
</g>
<g >
<title>`ENTRY-FROM-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE))^MET (1 samples, 0.04%)</title><rect x="132.5" y="4485" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="135.51" y="4495.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm:: (1 samples, 0.04%)</title><rect x="769.9" y="5781" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="772.91" y="5791.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="256.9" y="2741" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="259.89" y="2751.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.04%)</title><rect x="935.1" y="5797" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="938.13" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (113 samples, 4.49%)</title><rect x="178.0" y="2533" width="53.1" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="181.04" y="2543.5" >`core..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="500.5" y="5765" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="503.49" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.9" y="3669" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="404.93" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="391.6" y="2709" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="394.60" y="2719.5" ></text>
</g>
<g >
<title>`INLINE-AST^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="124.5" y="1493" width="0.5" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="127.53" y="1503.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.04%)</title><rect x="922.5" y="5829" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="925.46" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="392.1" y="4069" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="395.07" y="4079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="2501" width="1.4" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="434.50" y="2511.5" ></text>
</g>
<g >
<title>`UNIVERSAL-ERROR-HANDLER^CORE^FN^^ (1 samples, 0.04%)</title><rect x="125.9" y="1957" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="128.93" y="1967.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="413.7" y="3813" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="416.66" y="3823.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="321.2" y="5109" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="324.19" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="2469" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="411.97" y="2479.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="397.7" y="4165" width="2.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="400.70" y="4175.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.04%)</title><rect x="513.2" y="5717" width="0.4" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="516.17" y="5727.5" ></text>
</g>
<g >
<title>`llvm::GlobalValue::getGlobalIdentifier(llvm::StringRef, llvm::G (1 samples, 0.04%)</title><rect x="960.5" y="5877" width="0.4" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="963.48" y="5887.5" ></text>
</g>
<g >
<title>`llvm::GlobalValue::isDeclaration() const (1 samples, 0.04%)</title><rect x="910.7" y="5733" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="913.72" y="5743.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.04%)</title><rect x="765.2" y="5621" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="768.22" y="5631.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="242.8" y="2373" width="8.0" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="245.81" y="2383.5" ></text>
</g>
<g >
<title>`COMPILE-ONLY-REG-AND-OPT-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="626.3" y="5173" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="629.28" y="5183.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.04%)</title><rect x="179.9" y="2021" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="182.91" y="2031.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PointerIntPair&lt;llvm::Va (1 samples, 0.04%)</title><rect x="938.9" y="5877" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="941.89" y="5887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (19 samples, 0.76%)</title><rect x="259.2" y="597" width="9.0" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="262.24" y="607.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="244.7" y="517" width="2.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="247.69" y="527.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (9 samples, 0.36%)</title><rect x="276.6" y="3365" width="4.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="279.60" y="3375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="92.1" y="3365" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="95.14" y="3375.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.08%)</title><rect x="398.2" y="3381" width="0.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="401.17" y="3391.5" ></text>
</g>
<g >
<title>`llvm::CFLAndersAAWrapperPass* llvm::Pass::getAnalysisIfAvailabl (5 samples, 0.20%)</title><rect x="710.8" y="5877" width="2.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="713.77" y="5887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="145.6" y="4181" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="148.65" y="4191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4773" width="0.4" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="408.68" y="4783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (35 samples, 1.39%)</title><rect x="417.4" y="4725" width="16.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="420.41" y="4735.5" ></text>
</g>
<g >
<title>`llvm::APInt::flipAllBits() (1 samples, 0.04%)</title><rect x="911.7" y="5749" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="914.66" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="165.8" y="2517" width="1.4" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="168.83" y="2527.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (60 samples, 2.39%)</title><rect x="407.1" y="5669" width="28.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="410.09" y="5679.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (86 samples, 3.42%)</title><rect x="87.0" y="5029" width="40.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="89.98" y="5039.5" >`co..</text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (39 samples, 1.55%)</title><rect x="15.2" y="5445" width="18.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="18.16" y="5455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="268.2" y="1477" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="271.15" y="1487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (43 samples, 1.71%)</title><rect x="383.6" y="5125" width="20.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="386.62" y="5135.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="400.0" y="4229" width="1.9" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="403.05" y="4239.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.04%)</title><rect x="787.7" y="5733" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="790.75" y="5743.5" ></text>
</g>
<g >
<title>`ERROR^COMMON-LISP^FN^^ (2 samples, 0.08%)</title><rect x="297.7" y="5365" width="1.0" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="300.72" y="5375.5" ></text>
</g>
<g >
<title>`IRC-GEP-VARIABLE^COMPILER^FN^^ (3 samples, 0.12%)</title><rect x="649.8" y="5413" width="1.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="652.75" y="5423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="432.0" y="1525" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="434.96" y="1535.5" ></text>
</g>
<g >
<title>`llvm::TrackingMDRef::~TrackingMDRef() (1 samples, 0.04%)</title><rect x="936.1" y="5829" width="0.4" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="939.07" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.7" y="1301" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="430.74" y="1311.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="622.1" y="5237" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="625.06" y="5247.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;std::__1::pair&lt;llvm::Mem (1 samples, 0.04%)</title><rect x="819.2" y="5653" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="822.20" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="390.7" y="3381" width="1.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="393.66" y="3391.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="393.9" y="3589" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="396.95" y="3599.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::match_combine_and&lt;llvm::PatternMatch:: (1 samples, 0.04%)</title><rect x="896.6" y="5829" width="0.5" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="899.64" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="409.4" y="3797" width="1.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="412.44" y="3807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="2117" width="0.4" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="428.86" y="2127.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (230 samples, 9.15%)</title><rect x="164.4" y="4357" width="108.0" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="167.42" y="4367.5" >`core::Funcal..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="401.0" y="3237" width="0.9" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="403.99" y="3247.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitPHINode(llvm::PHINode&amp;) (1 samples, 0.04%)</title><rect x="912.6" y="5845" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="915.60" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="295.4" y="2901" width="0.9" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="298.38" y="2911.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.04%)</title><rect x="125.9" y="1845" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="128.93" y="1855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="386.0" y="3093" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="388.97" y="3103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="19.9" y="3509" width="0.9" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="22.86" y="3519.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="389.7" y="3717" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="392.72" y="3727.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="321.7" y="5061" width="0.4" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="324.66" y="5071.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="414.1" y="3957" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="417.13" y="3967.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (1 samples, 0.04%)</title><rect x="15.6" y="5013" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="18.63" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="3205" width="4.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="430.27" y="3215.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="410.8" y="4837" width="1.9" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="413.84" y="4847.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="272.8" y="4613" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="275.85" y="4623.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (7 samples, 0.28%)</title><rect x="601.9" y="5525" width="3.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="604.88" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (9 samples, 0.36%)</title><rect x="427.3" y="3029" width="4.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="430.27" y="3039.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="568.1" y="5765" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="571.08" y="5775.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="171.5" y="1605" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="174.46" y="1615.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.04%)</title><rect x="875.1" y="5765" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="878.05" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="398.2" y="3365" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="401.17" y="3375.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="135.8" y="4293" width="0.9" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="138.79" y="4303.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (35 samples, 1.39%)</title><rect x="417.4" y="4613" width="16.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="420.41" y="4623.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="424.9" y="1957" width="1.0" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="427.92" y="1967.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:BEFORE) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="340.4" y="4517" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="343.44" y="4527.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.04%)</title><rect x="373.8" y="5733" width="0.4" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="376.76" y="5743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="1829" width="4.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="279.60" y="1839.5" ></text>
</g>
<g >
<title>`TRANSLATE-FUNCALL^CLASP-CLEAVIR^FN^^ (10 samples, 0.40%)</title><rect x="644.1" y="5413" width="4.7" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="647.12" y="5423.5" ></text>
</g>
<g >
<title>`CHAR-CODE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="45.2" y="5413" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="48.20" y="5423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="1925" width="50.7" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="183.38" y="1935.5" >`INTE..</text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="636.1" y="5333" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="639.14" y="5343.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.04%)</title><rect x="178.0" y="2133" width="0.5" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="181.04" y="2143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((THE-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="429.1" y="2341" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="432.15" y="2351.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="49.9" y="5365" width="5.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="52.90" y="5375.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="837" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="171.18" y="847.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="2389" width="5.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="236.89" y="2399.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (1 samples, 0.04%)</title><rect x="50.8" y="4741" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="53.84" y="4751.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="268.2" y="1573" width="0.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="271.15" y="1583.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (2 samples, 0.08%)</title><rect x="580.3" y="5829" width="0.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="583.29" y="5839.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="595.8" y="5829" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="598.78" y="5839.5" ></text>
</g>
<g >
<title>`ALLOCA^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="597.7" y="5749" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="600.65" y="5759.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="36.8" y="3589" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="39.75" y="3599.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (2 samples, 0.08%)</title><rect x="141.9" y="4325" width="0.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="144.89" y="4335.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.04%)</title><rect x="415.1" y="4485" width="0.4" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="418.07" y="4495.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (145 samples, 5.77%)</title><rect x="59.8" y="5605" width="68.0" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="62.75" y="5615.5" >`CONVER..</text>
</g>
<g >
<title>`SPECIALIZE^CLEAVIR-HIR-TO-MIR^((CAR-INSTRUCTION CLASP T T))^MET (1 samples, 0.04%)</title><rect x="454.5" y="5829" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="457.49" y="5839.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (4 samples, 0.16%)</title><rect x="825.3" y="5733" width="1.9" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="828.30" y="5743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="49.9" y="5077" width="1.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="52.90" y="5087.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::IntegerType_O&gt; gctools::GCObjectAppro (1 samples, 0.04%)</title><rect x="351.2" y="5301" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="354.23" y="5311.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="279.9" y="485" width="0.9" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="282.89" y="495.5" ></text>
</g>
<g >
<title>0x122649094 (113 samples, 4.49%)</title><rect x="178.0" y="2629" width="53.1" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="181.04" y="2639.5" >0x122..</text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="387.8" y="4181" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="390.84" y="4191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="170.5" y="1605" width="1.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="173.53" y="1615.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.08%)</title><rect x="396.8" y="4293" width="0.9" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="399.76" y="4303.5" ></text>
</g>
<g >
<title>`cc_pushLandingPadFrame (1 samples, 0.04%)</title><rect x="30.7" y="5141" width="0.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="33.65" y="5151.5" ></text>
</g>
<g >
<title>`TREAT-AS-SPECIAL-OPERATOR-P^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="123.6" y="501" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="126.59" y="511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="2629" width="3.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="420.41" y="2639.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (3 samples, 0.12%)</title><rect x="513.2" y="5797" width="1.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="516.17" y="5807.5" ></text>
</g>
<g >
<title>`IRC-FDEFINITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="663.4" y="5637" width="0.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="666.37" y="5647.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.08%)</title><rect x="496.3" y="5797" width="0.9" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="499.27" y="5807.5" ></text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (6 samples, 0.24%)</title><rect x="76.7" y="4981" width="2.8" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="79.65" y="4991.5" ></text>
</g>
<g >
<title>0x1225ef094 (6 samples, 0.24%)</title><rect x="276.6" y="1301" width="2.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="279.60" y="1311.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (18 samples, 0.72%)</title><rect x="91.7" y="4277" width="8.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="94.67" y="4287.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="323.1" y="5333" width="0.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="326.07" y="5343.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="100.6" y="3669" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="103.59" y="3679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="430.6" y="2437" width="0.9" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="433.56" y="2447.5" ></text>
</g>
<g >
<title>`llvm::simplifyLoop(llvm::Loop*, llvm::DominatorTree*, llvm::Loo (1 samples, 0.04%)</title><rect x="846.9" y="5877" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="849.89" y="5887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="3061" width="4.2" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="279.60" y="3071.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (40 samples, 1.59%)</title><rect x="232.0" y="4053" width="18.8" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="235.01" y="4063.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="124.5" y="1893" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="127.53" y="1903.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (1 samples, 0.04%)</title><rect x="287.4" y="5093" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="290.40" y="5103.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="2245" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="168.83" y="2255.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3925" width="0.9" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="254.26" y="3935.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="286.9" y="4981" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="289.93" y="4991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.0" y="3157" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="388.97" y="3167.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::getSCEV(llvm::Value*) (1 samples, 0.04%)</title><rect x="779.8" y="5829" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="782.77" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="380.3" y="4549" width="0.5" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="383.33" y="4559.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (10 samples, 0.40%)</title><rect x="172.4" y="517" width="4.7" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="175.40" y="527.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.04%)</title><rect x="750.7" y="5765" width="0.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="753.67" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (14 samples, 0.56%)</title><rect x="233.0" y="2549" width="6.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="235.95" y="2559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="123.6" y="757" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="126.59" y="767.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="249.4" y="597" width="0.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="252.38" y="607.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.04%)</title><rect x="859.6" y="5781" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="862.56" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="2325" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="411.97" y="2335.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="3061" width="4.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="285.70" y="3071.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::getSCEVAtScope(llvm::SCEV const*, llvm:: (1 samples, 0.04%)</title><rect x="920.1" y="5685" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="923.11" y="5695.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (2 samples, 0.08%)</title><rect x="132.0" y="4549" width="1.0" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="135.04" y="4559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="423.0" y="3141" width="1.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="426.05" y="3151.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="252.2" y="3365" width="1.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="255.20" y="3375.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (1 samples, 0.04%)</title><rect x="276.1" y="3925" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="279.13" y="3935.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="29.7" y="4997" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="32.71" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="295.4" y="3621" width="1.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="298.38" y="3631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (19 samples, 0.76%)</title><rect x="259.2" y="565" width="9.0" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="262.24" y="575.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="297.7" y="5301" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="300.72" y="5311.5" ></text>
</g>
<g >
<title>`llvm::isFreeCall(llvm::Value const*, llvm::TargetLibraryInfo co (2 samples, 0.08%)</title><rect x="742.7" y="5829" width="0.9" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="745.69" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="393.5" y="3765" width="0.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="396.48" y="3775.5" ></text>
</g>
<g >
<title>`COMPILE-TOPLEVEL^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="340.4" y="4709" width="1.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="343.44" y="4719.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="279.4" y="901" width="1.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="282.42" y="911.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (3 samples, 0.12%)</title><rect x="155.5" y="4325" width="1.4" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="158.51" y="4335.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="97.8" y="3621" width="0.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="100.77" y="3631.5" ></text>
</g>
<g >
<title>`EXECUTE-LINK-FASL^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="952.5" y="6005" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="955.50" y="6015.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="1957" width="4.2" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="279.60" y="1967.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="400.5" y="3989" width="1.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="403.52" y="3999.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (40 samples, 1.59%)</title><rect x="232.0" y="3701" width="18.8" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="235.01" y="3711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="317.4" y="5429" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="320.44" y="5439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="424.9" y="1717" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="427.92" y="1727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="281.3" y="4069" width="5.6" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="284.30" y="4079.5" ></text>
</g>
<g >
<title>`BUILD-CST^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="126.9" y="2773" width="0.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="129.87" y="2783.5" ></text>
</g>
<g >
<title>`funlockfile (1 samples, 0.04%)</title><rect x="22.7" y="3813" width="0.4" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="25.67" y="3823.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="427.7" y="837" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="430.74" y="847.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (7 samples, 0.28%)</title><rect x="890.5" y="5781" width="3.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="893.54" y="5791.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="122.6" y="2981" width="1.9" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="125.65" y="2991.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="281.3" y="3157" width="1.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="284.30" y="3167.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="297.7" y="5285" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="300.72" y="5295.5" ></text>
</g>
<g >
<title>`llvm::MemoryLocation::getOrNone(llvm::Instruction const*) (1 samples, 0.04%)</title><rect x="787.3" y="5813" width="0.4" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="790.28" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="379.9" y="4949" width="3.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="382.86" y="4959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="390.7" y="3221" width="1.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="393.66" y="3231.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="421.2" y="4053" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="424.17" y="4063.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="21.3" y="3765" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="24.26" y="3775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="396.8" y="3781" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="399.76" y="3791.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (88 samples, 3.50%)</title><rect x="611.7" y="5461" width="41.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="614.73" y="5471.5" >`TR..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="423.0" y="3413" width="3.8" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="426.05" y="3423.5" ></text>
</g>
<g >
<title>`llvm::FindFunctionBackedges(llvm::Function const&amp;, llvm::SmallV (1 samples, 0.04%)</title><rect x="700.4" y="5845" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="703.45" y="5855.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="234.8" y="469" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="237.83" y="479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="381.7" y="4757" width="1.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="384.74" y="4767.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::dropAllReferences() (1 samples, 0.04%)</title><rect x="949.2" y="5877" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="952.21" y="5887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="278.9" y="629" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="281.95" y="639.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="168.2" y="1445" width="2.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="171.18" y="1455.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="384.1" y="4517" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="387.09" y="4527.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (2 samples, 0.08%)</title><rect x="825.3" y="5621" width="0.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="828.30" y="5631.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (34 samples, 1.35%)</title><rect x="618.8" y="5397" width="15.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="621.77" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="133" width="1.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="288.52" y="143.5" ></text>
</g>
<g >
<title>0x122f2b094 (4 samples, 0.16%)</title><rect x="297.3" y="5653" width="1.8" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="300.26" y="5663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="34.9" y="4277" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="37.88" y="4287.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="1749" width="4.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="285.70" y="1759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="124.5" y="1557" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="127.53" y="1567.5" ></text>
</g>
<g >
<title>`REGISTER-TYPE^CORE^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="565" width="0.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="171.18" y="575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="2853" width="4.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="430.27" y="2863.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="116.1" y="3445" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="119.08" y="3455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="1701" width="4.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="279.60" y="1711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="4101" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="414.78" y="4111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4181" width="0.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="408.68" y="4191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="120.3" y="3573" width="0.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="123.30" y="3583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="247.5" y="485" width="1.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="250.50" y="495.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="295.8" y="1957" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="298.85" y="1967.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="345.6" y="5045" width="1.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="348.60" y="5055.5" ></text>
</g>
<g >
<title>0x11a477094 (11 samples, 0.44%)</title><rect x="172.4" y="1045" width="5.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="175.40" y="1055.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (9 samples, 0.36%)</title><rect x="327.3" y="4629" width="4.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="330.30" y="4639.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="165.4" y="3557" width="1.8" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="168.36" y="3567.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (136 samples, 5.41%)</title><rect x="167.2" y="2917" width="63.9" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="170.24" y="2927.5" >`core::..</text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.04%)</title><rect x="271.9" y="3269" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="274.91" y="3279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="417.4" y="1061" width="2.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="420.41" y="1071.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="84.6" y="4965" width="1.0" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="87.63" y="4975.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="233.9" y="549" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="236.89" y="559.5" ></text>
</g>
<g >
<title>`CANONICALIZE-DECLARATION-SPECIFIERS^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="284.6" y="1077" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="287.58" y="1087.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="165.8" y="1349" width="1.0" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="168.83" y="1359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="398.2" y="3413" width="0.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="401.17" y="3423.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1:: (1 samples, 0.04%)</title><rect x="42.4" y="4485" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="45.39" y="4495.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (57 samples, 2.27%)</title><rect x="407.6" y="5525" width="26.7" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="410.56" y="5535.5" >`..</text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="356.4" y="5525" width="0.5" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="359.40" y="5535.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="469.0" y="5781" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="472.05" y="5791.5" ></text>
</g>
<g >
<title>`GET-MACRO-CHARACTER^ECLECTOR.READTABLE^((READTABLE T))^METHOD^^ (1 samples, 0.04%)</title><rect x="55.5" y="5653" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="58.53" y="5663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (86 samples, 3.42%)</title><rect x="87.0" y="4997" width="40.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="89.98" y="5007.5" >`co..</text>
</g>
<g >
<title>`__cxa_throw (2 samples, 0.08%)</title><rect x="33.5" y="5413" width="0.9" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="36.47" y="5423.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (4 samples, 0.16%)</title><rect x="122.6" y="3205" width="1.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="125.65" y="3215.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="604.2" y="5477" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="607.22" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="124.5" y="2581" width="1.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="127.53" y="2591.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (40 samples, 1.59%)</title><rect x="232.0" y="3893" width="18.8" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="235.01" y="3903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="510.8" y="5733" width="2.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="513.82" y="5743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="408.0" y="4789" width="2.8" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="411.03" y="4799.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="432.0" y="2037" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="434.96" y="2047.5" ></text>
</g>
<g >
<title>`core::type_of(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.08%)</title><rect x="202.9" y="869" width="1.0" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="205.91" y="879.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="167.7" y="1477" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="170.71" y="1487.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="643.7" y="5365" width="0.4" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="646.65" y="5375.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="564.3" y="5797" width="0.5" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="567.33" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="32.1" y="5333" width="1.4" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="35.06" y="5343.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="353.6" y="5429" width="0.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="356.58" y="5439.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="2533" width="4.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="285.70" y="2543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="396.3" y="4565" width="3.7" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="399.29" y="4575.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="123.6" y="741" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="126.59" y="751.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="90.3" y="3845" width="1.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="93.26" y="3855.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.08%)</title><rect x="561.5" y="5797" width="1.0" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="564.51" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="124.5" y="2437" width="1.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="127.53" y="2447.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="269.1" y="613" width="2.8" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="272.09" y="623.5" ></text>
</g>
<g >
<title>`%SIGNAL^CORE^FN^^ (1 samples, 0.04%)</title><rect x="127.8" y="5573" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="130.81" y="5583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (19 samples, 0.76%)</title><rect x="259.2" y="805" width="9.0" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="262.24" y="815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="3525" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="417.13" y="3535.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="3541" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="414.78" y="3551.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (1 samples, 0.04%)</title><rect x="842.7" y="5781" width="0.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="845.67" y="5791.5" ></text>
</g>
<g >
<title>`SEQUENCE-COUNT^CORE^FN^^ (1 samples, 0.04%)</title><rect x="498.6" y="5781" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="501.62" y="5791.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (10 samples, 0.40%)</title><rect x="327.3" y="4709" width="4.7" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="330.30" y="4719.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (7 samples, 0.28%)</title><rect x="268.6" y="901" width="3.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="271.62" y="911.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="412.3" y="3237" width="0.4" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="415.25" y="3247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="258.8" y="1557" width="0.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="261.77" y="1567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="4117" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="417.13" y="4127.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="643.7" y="5381" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="646.65" y="5391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="286.9" y="4725" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="289.93" y="4735.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm:: (6 samples, 0.24%)</title><rect x="904.6" y="5797" width="2.8" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="907.62" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="294.0" y="5413" width="3.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="296.97" y="5423.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="406.1" y="5685" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="409.15" y="5695.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="865.7" y="5781" width="0.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="868.66" y="5791.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="938.9" y="5845" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="941.89" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="379.9" y="4997" width="3.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="382.86" y="5007.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::untrack(void*, llvm::Metadata&amp;) (1 samples, 0.04%)</title><rect x="936.1" y="5813" width="0.4" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="939.07" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1589" width="0.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="430.27" y="1599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="234.8" y="325" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="237.83" y="335.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.04%)</title><rect x="527.7" y="5669" width="0.5" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="530.72" y="5679.5" ></text>
</g>
<g >
<title>`llvm::IRBuilderBase::SetInsertPoint(llvm::Instruction*) (1 samples, 0.04%)</title><rect x="738.5" y="5845" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="741.46" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="268.2" y="1509" width="0.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="271.15" y="1519.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="355.9" y="5605" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="358.93" y="5615.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="180.4" y="373" width="2.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="183.38" y="383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="423.0" y="3381" width="2.9" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="426.05" y="3391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="379.9" y="4853" width="2.8" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="382.86" y="4863.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="242.8" y="1973" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="245.81" y="1983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="3285" width="4.2" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="430.27" y="3295.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp_big(void const*) (1 samples, 0.04%)</title><rect x="708.9" y="5813" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="711.89" y="5823.5" ></text>
</g>
<g >
<title>`ALLOCA-RETURN^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="597.7" y="5781" width="0.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="600.65" y="5791.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="300.1" y="5845" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="303.07" y="5855.5" ></text>
</g>
<g >
<title>`REDUCE-TYPEQS^CC-HIR-TO-MIR^FN^^ (1 samples, 0.04%)</title><rect x="347.9" y="5173" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="350.95" y="5183.5" ></text>
</g>
<g >
<title>`core::core__hash_table_setf_gethash(gctools::smart_ptr&lt;core::Ha (1 samples, 0.04%)</title><rect x="521.6" y="5781" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="524.61" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="997" width="1.4" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="288.52" y="1007.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="643.7" y="5397" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="646.65" y="5407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="1381" width="0.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="423.70" y="1391.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="244.7" y="853" width="2.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="247.69" y="863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="4053" width="3.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="420.41" y="4063.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="27.4" y="4773" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="30.37" y="4783.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="646.0" y="5365" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="649.00" y="5375.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="88.4" y="4069" width="3.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="91.39" y="4079.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="291.6" y="5541" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="294.62" y="5551.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.08%)</title><rect x="657.3" y="5477" width="0.9" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="660.26" y="5487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="268.6" y="1573" width="3.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="271.62" y="1583.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::computeExitLimitFromCondCached(llvm::Sca (1 samples, 0.04%)</title><rect x="846.4" y="5685" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="849.42" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.2" y="3861" width="0.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="424.17" y="3871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="396.8" y="3749" width="0.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="399.76" y="3759.5" ></text>
</g>
<g >
<title>`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="345.1" y="5045" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="348.13" y="5055.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (3 samples, 0.12%)</title><rect x="18.4" y="3509" width="1.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="21.45" y="3519.5" ></text>
</g>
<g >
<title>`__vfprintf (1 samples, 0.04%)</title><rect x="402.9" y="4917" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="405.86" y="4927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="3445" width="0.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="403.99" y="3455.5" ></text>
</g>
<g >
<title>`DECLARE-FUNCTION-IN-MODULE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="631.4" y="5269" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="634.45" y="5279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="332.0" y="4597" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="334.99" y="4607.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (136 samples, 5.41%)</title><rect x="167.2" y="2741" width="63.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="170.24" y="2751.5" >`core::..</text>
</g>
<g >
<title>`llvm::GVN::ValueTable::lookupOrAddCmp(unsigned int, llvm::CmpIn (1 samples, 0.04%)</title><rect x="823.9" y="5797" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="826.89" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="165.8" y="2725" width="1.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="168.83" y="2735.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="535.7" y="5781" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="538.70" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="29.7" y="5093" width="1.0" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="32.71" y="5103.5" ></text>
</g>
<g >
<title>`llvm::DILocation::getImpl(llvm::LLVMContext&amp;, unsigned int, uns (2 samples, 0.08%)</title><rect x="624.4" y="5077" width="0.9" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="627.41" y="5087.5" ></text>
</g>
<g >
<title>`core::clasp_namestring(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="33.0" y="5237" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="36.00" y="5247.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="410.8" y="4741" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="413.84" y="4751.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="286.9" y="4661" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="289.93" y="4671.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (14 samples, 0.56%)</title><rect x="171.5" y="1925" width="6.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="174.46" y="1935.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="354.0" y="5317" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="357.05" y="5327.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2981" width="1.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="127.53" y="2991.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="490.6" y="5797" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="493.64" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="1941" width="7.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="246.28" y="1951.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="424.0" y="1557" width="0.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="426.99" y="1567.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (1 samples, 0.04%)</title><rect x="532.9" y="5749" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="535.88" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="421.6" y="3205" width="1.0" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="424.64" y="3215.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (3 samples, 0.12%)</title><rect x="124.5" y="2485" width="1.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="127.53" y="2495.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="98.7" y="3701" width="0.5" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="101.71" y="3711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="340.4" y="4565" width="1.0" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="343.44" y="4575.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="626.3" y="5109" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="629.28" y="5119.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="295.4" y="3333" width="1.4" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="298.38" y="3343.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="398.2" y="3157" width="0.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="401.17" y="3167.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="423.0" y="2165" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="426.05" y="2175.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="4005" width="3.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="420.41" y="4015.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="249.4" y="677" width="0.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="252.38" y="687.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="48.5" y="5397" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="51.49" y="5407.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CONTEXT-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="352.6" y="5365" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="355.64" y="5375.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (86 samples, 3.42%)</title><rect x="87.0" y="5013" width="40.3" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="89.98" y="5023.5" >`IN..</text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="635.2" y="5317" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="638.20" y="5327.5" ></text>
</g>
<g >
<title>`llvm::GetElementPtrConstantExpr::getSourceElementType() const (1 samples, 0.04%)</title><rect x="893.4" y="5685" width="0.4" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="896.36" y="5695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="424.9" y="1701" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="427.92" y="1711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="431.5" y="3157" width="1.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="434.50" y="3167.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (16 samples, 0.64%)</title><rect x="243.3" y="1445" width="7.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="246.28" y="1455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="123.6" y="2133" width="0.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="126.59" y="2143.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (3 samples, 0.12%)</title><rect x="491.6" y="5765" width="1.4" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="494.58" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1205" width="5.6" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="236.89" y="1215.5" ></text>
</g>
<g >
<title>`llvm::MDNodeInfo&lt;llvm::DILocation&gt;::getHashValue(llvm::DILocati (1 samples, 0.04%)</title><rect x="624.9" y="5013" width="0.4" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="627.88" y="5023.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2005" width="1.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="127.53" y="2015.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="405.2" y="5397" width="0.9" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="408.21" y="5407.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="169.6" y="597" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="172.59" y="607.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="320.7" y="5221" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="323.72" y="5231.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="247.0" y="245" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="250.03" y="255.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (4 samples, 0.16%)</title><rect x="504.2" y="5621" width="1.9" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="507.25" y="5631.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="125.9" y="2517" width="1.0" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="128.93" y="2527.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="279.4" y="805" width="1.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="282.42" y="815.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="413.7" y="4501" width="1.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="416.66" y="4511.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="396.3" y="4613" width="3.7" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="399.29" y="4623.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="258.8" y="1493" width="0.4" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="261.77" y="1503.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (32 samples, 1.27%)</title><rect x="187.4" y="309" width="15.0" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="190.42" y="319.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="726.7" y="5813" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="729.73" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="3013" width="3.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="420.41" y="3023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="286.9" y="5077" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="289.93" y="5087.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((EQ-INSTRUCTION T T (1 samples, 0.04%)</title><rect x="623.0" y="5205" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="626.00" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="231.5" y="3429" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="234.54" y="3439.5" ></text>
</g>
<g >
<title>`llvm::Instruction::getMetadataImpl(unsigned int) const (1 samples, 0.04%)</title><rect x="889.6" y="5749" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="892.60" y="5759.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="341.8" y="4405" width="0.5" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="344.85" y="4415.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="2165" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="423.70" y="2175.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::untrack(void*, llvm::Metadata&amp;) (1 samples, 0.04%)</title><rect x="914.5" y="5829" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="917.48" y="5839.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="269.1" y="421" width="2.8" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="272.09" y="431.5" ></text>
</g>
<g >
<title>`CST-FROM-ELEMENT^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.9" y="5013" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="327.95" y="5023.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (22 samples, 0.88%)</title><rect x="167.7" y="2117" width="10.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="170.71" y="2127.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="4149" width="5.6" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="284.30" y="4159.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="241.4" y="2917" width="1.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="244.40" y="2927.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (63 samples, 2.51%)</title><rect x="133.9" y="4597" width="29.6" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="136.91" y="4607.5" >`c..</text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (3 samples, 0.12%)</title><rect x="297.3" y="5445" width="1.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="300.26" y="5455.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solve() (4 samples, 0.16%)</title><rect x="696.2" y="5813" width="1.9" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="699.22" y="5823.5" ></text>
</g>
<g >
<title>`default_zone_malloc (1 samples, 0.04%)</title><rect x="646.9" y="5237" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="649.94" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (22 samples, 0.88%)</title><rect x="240.5" y="3365" width="10.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="243.46" y="3375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1013" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="423.70" y="1023.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="604.2" y="5461" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="607.22" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5637" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="408.21" y="5647.5" ></text>
</g>
<g >
<title>`core::Lisp_O::get_Str8Ns_buffer_string() (1 samples, 0.04%)</title><rect x="961.4" y="5973" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="964.42" y="5983.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.0" y="2437" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="411.97" y="2447.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="2373" width="4.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="279.60" y="2383.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (108 samples, 4.30%)</title><rect x="180.4" y="2053" width="50.7" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="183.38" y="2063.5" >`core..</text>
</g>
<g >
<title>`COMPILE-TOPLEVEL^CLEAVIR-AST-TO-HIR^FN^^ (179 samples, 7.12%)</title><rect x="369.5" y="5861" width="84.1" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="372.54" y="5871.5" >`COMPILE-..</text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="665.2" y="5573" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="668.24" y="5583.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="648.8" y="5381" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="651.81" y="5391.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="282.7" y="1189" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="285.70" y="1199.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="421.2" y="4229" width="0.4" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="424.17" y="4239.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="244.7" y="661" width="2.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="247.69" y="671.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="165.4" y="3381" width="1.8" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="168.36" y="3391.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="1637" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="428.86" y="1647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="5077" width="2.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="296.97" y="5087.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (4 samples, 0.16%)</title><rect x="294.9" y="3957" width="1.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="297.91" y="3967.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.04%)</title><rect x="404.3" y="5525" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="407.27" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (7 samples, 0.28%)</title><rect x="88.4" y="4165" width="3.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="91.39" y="4175.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="342.3" y="4613" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="345.32" y="4623.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="276.6" y="4005" width="4.7" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="279.60" y="4015.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="684.5" y="5893" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="687.49" y="5903.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (3 samples, 0.12%)</title><rect x="409.4" y="3765" width="1.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="412.44" y="3775.5" ></text>
</g>
<g >
<title>`core::startup_functions_invoke() (2,028 samples, 80.67%)</title><rect x="10.0" y="6309" width="951.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="13.00" y="6319.5" >`core::startup_functions_invoke()</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="240.5" y="2949" width="0.9" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="243.46" y="2959.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::HashTableEq_O&gt; gctools::GCObjectApprop (1 samples, 0.04%)</title><rect x="330.1" y="4389" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="333.11" y="4399.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="20.3" y="3157" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="23.33" y="3167.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="386.4" y="3045" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="389.44" y="3055.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="47.5" y="5413" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="50.55" y="5423.5" ></text>
</g>
<g >
<title>`llvm::DIBuilder::createParameterVariable(llvm::DIScope*, llvm:: (1 samples, 0.04%)</title><rect x="654.9" y="5429" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="657.92" y="5439.5" ></text>
</g>
<g >
<title>`GEN-MEMREF-ADDRESS^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="628.2" y="5189" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="631.16" y="5199.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::AssertingVH&lt;llvm::Value&gt;, unsigned int, ll (1 samples, 0.04%)</title><rect x="705.6" y="5813" width="0.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="708.61" y="5823.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::AggressiveDeadCodeElimination::markLive( (1 samples, 0.04%)</title><rect x="689.2" y="5861" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="692.18" y="5871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="388.3" y="3845" width="3.8" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="391.31" y="3855.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (5 samples, 0.20%)</title><rect x="817.3" y="5701" width="2.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="820.32" y="5711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="3493" width="1.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="424.64" y="3503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="295.4" y="2629" width="0.9" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="298.38" y="2639.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="394.9" y="5029" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="397.88" y="5039.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.04%)</title><rect x="351.7" y="5461" width="0.5" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="354.70" y="5471.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (1 samples, 0.04%)</title><rect x="23.6" y="3781" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="26.61" y="3791.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.04%)</title><rect x="421.6" y="2117" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="424.64" y="2127.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="234.8" y="309" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="237.83" y="319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="431.5" y="2485" width="1.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="434.50" y="2495.5" ></text>
</g>
<g >
<title>`llvm::GVN::propagateEquality(llvm::Value*, llvm::Value*, llvm:: (1 samples, 0.04%)</title><rect x="823.9" y="5813" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="826.89" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="23.6" y="3829" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="26.61" y="3839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="398.2" y="3349" width="0.4" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="401.17" y="3359.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="53.2" y="3813" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="56.18" y="3823.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="351.7" y="5445" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="354.70" y="5455.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="17.5" y="4037" width="5.6" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="20.51" y="4047.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="1797" width="0.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="428.86" y="1807.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.04%)</title><rect x="858.2" y="5797" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="861.15" y="5807.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="581.7" y="5781" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="584.69" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="125.5" y="1717" width="0.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="128.47" y="1727.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="1781" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="126.59" y="1791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (40 samples, 1.59%)</title><rect x="232.0" y="3781" width="18.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="235.01" y="3791.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="115.1" y="3509" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="118.14" y="3519.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="938.9" y="5829" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="941.89" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="390.2" y="3733" width="1.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="393.19" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="425.9" y="1589" width="0.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="428.86" y="1599.5" ></text>
</g>
<g >
<title>0x11a477094 (58 samples, 2.31%)</title><rect x="100.1" y="4069" width="27.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="103.12" y="4079.5" >0..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (48 samples, 1.91%)</title><rect x="180.4" y="821" width="22.5" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="183.38" y="831.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="389.7" y="3797" width="2.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="392.72" y="3807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="3173" width="1.4" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="434.50" y="3183.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="165.8" y="2021" width="1.4" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="168.83" y="2031.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (3 samples, 0.12%)</title><rect x="124.5" y="2101" width="1.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="127.53" y="2111.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="416.5" y="4309" width="0.4" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="419.48" y="4319.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (2 samples, 0.08%)</title><rect x="874.6" y="5781" width="0.9" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="877.58" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1925" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="427.92" y="1935.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="419.8" y="1893" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="422.76" y="1903.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="240.0" y="2661" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="242.99" y="2671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3541" width="0.4" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="415.25" y="3551.5" ></text>
</g>
<g >
<title>0x11a477094 (108 samples, 4.30%)</title><rect x="180.4" y="1973" width="50.7" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="183.38" y="1983.5" >0x11a..</text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="18.0" y="3541" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="20.98" y="3551.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="365.8" y="5701" width="0.5" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="368.78" y="5711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="396.8" y="4005" width="0.9" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="399.76" y="4015.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="385.0" y="4101" width="2.8" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="388.03" y="4111.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="253.1" y="3093" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="256.13" y="3103.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (6 samples, 0.24%)</title><rect x="318.8" y="5493" width="2.9" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="321.85" y="5503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="276.6" y="1013" width="2.8" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="279.60" y="1023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="3205" width="0.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="403.99" y="3215.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getNonLocalPointerDepFromBB(llvm (3 samples, 0.12%)</title><rect x="821.1" y="5765" width="1.4" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="824.07" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="401.9" y="3573" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="404.93" y="3583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="95.9" y="3509" width="1.9" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="98.89" y="3519.5" ></text>
</g>
<g >
<title>`POSITION^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="93.5" y="3365" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="96.55" y="3375.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2389" width="4.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="285.70" y="2399.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (5 samples, 0.20%)</title><rect x="178.0" y="2469" width="2.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="181.04" y="2479.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="534.3" y="5733" width="0.5" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="537.29" y="5743.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::GVN::Expression, unsign (1 samples, 0.04%)</title><rect x="823.9" y="5765" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="826.89" y="5775.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.04%)</title><rect x="527.7" y="5701" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="530.72" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="422.1" y="2341" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="425.11" y="2351.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="427.3" y="2901" width="4.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="430.27" y="2911.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="405.2" y="5605" width="0.9" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="408.21" y="5615.5" ></text>
</g>
<g >
<title>`core::core__generalp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="383.2" y="4997" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="386.15" y="5007.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="366.7" y="5733" width="1.0" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="369.72" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="427.3" y="2117" width="0.9" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="430.27" y="2127.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="297.3" y="5429" width="1.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="300.26" y="5439.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::BinaryOp_match&lt;llvm::PatternMatch::bin (1 samples, 0.04%)</title><rect x="894.3" y="5781" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="897.30" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="789" width="9.0" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="262.24" y="799.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="508.0" y="5765" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="511.00" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (99 samples, 3.94%)</title><rect x="606.6" y="5509" width="46.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="609.57" y="5519.5" >`cor..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (25 samples, 0.99%)</title><rect x="100.6" y="3941" width="11.7" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="103.59" y="3951.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="431.5" y="2901" width="1.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="434.50" y="2911.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeWrapperPass* llvm::Pass::getAnalysisIfAvaila (1 samples, 0.04%)</title><rect x="716.4" y="5893" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="719.40" y="5903.5" ></text>
</g>
<g >
<title>`llvm::SSAUpdaterImpl&lt;llvm::SSAUpdater&gt;::BuildBlockList(llvm::Ba (1 samples, 0.04%)</title><rect x="815.4" y="5717" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="818.44" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="400.0" y="4933" width="2.4" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="403.05" y="4943.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5349" width="0.9" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="408.21" y="5359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2341" width="1.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="127.53" y="2351.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (42 samples, 1.67%)</title><rect x="182.7" y="549" width="19.7" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="185.73" y="559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.3" y="3957" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="414.31" y="3967.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.4" y="1717" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="428.39" y="1727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="1189" width="9.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="262.24" y="1199.5" ></text>
</g>
<g >
<title>`CST-EVAL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="286.9" y="5173" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="289.93" y="5183.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="1365" width="5.6" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="236.89" y="1375.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="658.2" y="5509" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="661.20" y="5519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="233.9" y="181" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="236.89" y="191.5" ></text>
</g>
<g >
<title>`READ-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="31.1" y="5269" width="1.0" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="34.12" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="124.5" y="1957" width="1.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="127.53" y="1967.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="422.1" y="2213" width="0.5" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="425.11" y="2223.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::pointsToConstantMemory(llvm::MemoryLocatio (1 samples, 0.04%)</title><rect x="906.0" y="5749" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="909.03" y="5759.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="44.7" y="5381" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="47.73" y="5391.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.4" y="2469" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="412.44" y="2479.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::RemoveKey(llvm::StringRef) (1 samples, 0.04%)</title><rect x="704.2" y="5829" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="707.20" y="5839.5" ></text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (1 samples, 0.04%)</title><rect x="863.3" y="5733" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="866.32" y="5743.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.04%)</title><rect x="906.0" y="5669" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="909.03" y="5679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="3573" width="3.8" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="420.41" y="3583.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.04%)</title><rect x="924.8" y="5829" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="927.81" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="3189" width="1.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="411.03" y="3199.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="268.6" y="677" width="3.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="271.62" y="687.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::BasicBlock*, llvm::Value*, llvm::DenseMapI (1 samples, 0.04%)</title><rect x="823.4" y="5733" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="826.42" y="5743.5" ></text>
</g>
<g >
<title>`unw_init_local (1 samples, 0.04%)</title><rect x="17.0" y="4389" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="20.04" y="4399.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="416.5" y="4789" width="0.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="419.48" y="4799.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="36.3" y="4757" width="1.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="39.28" y="4767.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (12 samples, 0.48%)</title><rect x="233.9" y="2021" width="5.6" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="236.89" y="2031.5" ></text>
</g>
<g >
<title>`IRC-GEP^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="645.5" y="5365" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="648.53" y="5375.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="77.1" y="4965" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="80.12" y="4975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="4021" width="1.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="411.03" y="4031.5" ></text>
</g>
<g >
<title>`SUBSTITUTE-OUTPUT^CLEAVIR-IR^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="508.0" y="5797" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="511.00" y="5807.5" ></text>
</g>
<g >
<title>`void boost::io::detail::put&lt;char, std::__1::char_traits&lt;char&gt;,  (1 samples, 0.04%)</title><rect x="677.0" y="5733" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="679.98" y="5743.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="628.2" y="5141" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="631.16" y="5151.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="423.0" y="4085" width="10.4" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="426.05" y="4095.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="431.5" y="2421" width="0.9" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="434.50" y="2431.5" ></text>
</g>
<g >
<title>`MAKE-FUNCTION-INFO-MAP^CLASP-CLEAVIR^FN^^ (12 samples, 0.48%)</title><rect x="456.8" y="5861" width="5.7" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="459.84" y="5871.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (6 samples, 0.24%)</title><rect x="294.0" y="4165" width="2.8" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="296.97" y="4175.5" ></text>
</g>
<g >
<title>`core::core__get_sysprop(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (4 samples, 0.16%)</title><rect x="73.8" y="4981" width="1.9" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="76.83" y="4991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="379.9" y="4773" width="2.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="382.86" y="4783.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (513 samples, 20.41%)</title><rect x="58.8" y="5781" width="240.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="61.81" y="5791.5" >`CONVERT^CLEAVIR-CST-TO-AST^((T ..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="278.5" y="613" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="281.48" y="623.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="423.0" y="2821" width="1.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="426.05" y="2831.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="122.6" y="2901" width="1.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="125.65" y="2911.5" ></text>
</g>
<g >
<title>0x1225e5094 (84 samples, 3.34%)</title><rect x="87.9" y="4517" width="39.4" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="90.92" y="4527.5" >0x1..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="253.1" y="3157" width="1.0" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="256.13" y="3167.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="416.9" y="4693" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="419.95" y="4703.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.4" y="2949" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="412.44" y="2959.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="36.3" y="4389" width="1.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="39.28" y="4399.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="231.5" y="3957" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="234.54" y="3967.5" ></text>
</g>
<g >
<title>0x1225f3094 (4 samples, 0.16%)</title><rect x="168.2" y="1077" width="1.9" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="171.18" y="1087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="427.3" y="2213" width="0.9" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="430.27" y="2223.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="273.8" y="5141" width="0.9" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="276.79" y="5151.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="172.4" y="1125" width="5.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="175.40" y="1135.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (1 samples, 0.04%)</title><rect x="231.5" y="3829" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="234.54" y="3839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="294.0" y="4853" width="2.8" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="296.97" y="4863.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="247.5" y="581" width="1.9" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="250.50" y="591.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="166.3" y="981" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="169.30" y="991.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (7 samples, 0.28%)</title><rect x="268.6" y="1349" width="3.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="271.62" y="1359.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (3 samples, 0.12%)</title><rect x="254.1" y="3301" width="1.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="257.07" y="3311.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="38.2" y="4341" width="0.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="41.16" y="4351.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="3573" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="414.78" y="3583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.4" y="2661" width="0.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="412.44" y="2671.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="278.9" y="437" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="281.95" y="447.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.04%)</title><rect x="749.3" y="5621" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="752.26" y="5631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.4" y="2741" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="412.44" y="2751.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="634.7" y="5301" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="637.73" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (2 samples, 0.08%)</title><rect x="123.6" y="1381" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="126.59" y="1391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5045" width="0.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="408.21" y="5055.5" ></text>
</g>
<g >
<title>0x11a477094 (5 samples, 0.20%)</title><rect x="180.4" y="69" width="2.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="183.38" y="79.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PointerIntPair&lt;llv (1 samples, 0.04%)</title><rect x="941.7" y="5877" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="944.70" y="5887.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="665.2" y="5477" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="668.24" y="5487.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="165.8" y="1669" width="1.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="168.83" y="1679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="165.8" y="1573" width="1.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="168.83" y="1583.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (17 samples, 0.68%)</title><rect x="17.5" y="4245" width="8.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="20.51" y="4255.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="3973" width="1.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="411.03" y="3983.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="120.8" y="3493" width="0.4" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="123.77" y="3503.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (2 samples, 0.08%)</title><rect x="376.1" y="5701" width="0.9" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="379.11" y="5711.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitCallInst(llvm::CallInst&amp;) (6 samples, 0.24%)</title><rect x="740.8" y="5845" width="2.8" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="743.81" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="172.4" y="1205" width="5.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="175.40" y="1215.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.08%)</title><rect x="290.2" y="5461" width="1.0" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="293.21" y="5471.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="241.9" y="2853" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="244.87" y="2863.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="434.8" y="5573" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="437.78" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (8 samples, 0.32%)</title><rect x="417.4" y="2789" width="3.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="420.41" y="2799.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.04%)</title><rect x="113.3" y="3461" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="116.26" y="3471.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getEdgeValue(llvm::Va (3 samples, 0.12%)</title><rect x="694.8" y="5813" width="1.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="697.81" y="5823.5" ></text>
</g>
<g >
<title>`HIR-&gt;MIR^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="331.5" y="4677" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="334.52" y="4687.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (23 samples, 0.91%)</title><rect x="167.2" y="2485" width="10.8" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="170.24" y="2495.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (6 samples, 0.24%)</title><rect x="269.1" y="245" width="2.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="272.09" y="255.5" ></text>
</g>
<g >
<title>`__cxa_decrement_exception_refcount (1 samples, 0.04%)</title><rect x="36.3" y="3749" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="39.28" y="3759.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (2 samples, 0.08%)</title><rect x="733.3" y="5669" width="0.9" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="736.30" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3781" width="1.0" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="424.64" y="3791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="423.0" y="3445" width="3.8" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="426.05" y="3455.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="4597" width="5.6" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="284.30" y="4607.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (4 samples, 0.16%)</title><rect x="504.2" y="5589" width="1.9" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="507.25" y="5599.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="287.9" y="5221" width="0.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="290.87" y="5231.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.0" y="4245" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="396.01" y="4255.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.08%)</title><rect x="396.8" y="4309" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="399.76" y="4319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="1909" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="423.70" y="1919.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="123.6" y="1029" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="126.59" y="1039.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="725" width="5.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="175.40" y="735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.0" y="3253" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="388.97" y="3263.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (138 samples, 5.49%)</title><rect x="167.2" y="4101" width="64.8" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="170.24" y="4111.5" >`PROCES..</text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (8 samples, 0.32%)</title><rect x="396.3" y="4469" width="3.7" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="399.29" y="4479.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="385.5" y="3717" width="1.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="388.50" y="3727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (85 samples, 3.38%)</title><rect x="87.4" y="4741" width="39.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="90.45" y="4751.5" >`co..</text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="233.9" y="293" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="236.89" y="303.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="423.0" y="2229" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="426.05" y="2239.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="172.4" y="1749" width="5.6" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="175.40" y="1759.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.04%)</title><rect x="415.5" y="4053" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="418.54" y="4063.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="414.6" y="4101" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="417.60" y="4111.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="326.8" y="4661" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="329.83" y="4671.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (1 samples, 0.04%)</title><rect x="53.2" y="3829" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="56.18" y="3839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (56 samples, 2.23%)</title><rect x="378.9" y="5781" width="26.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="381.93" y="5791.5" >`..</text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="52.2" y="4421" width="2.9" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="55.24" y="4431.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="626.3" y="5077" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="629.28" y="5087.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="276.1" y="3813" width="0.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="279.13" y="3823.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="395.8" y="4821" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="398.82" y="4831.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="125.9" y="3285" width="1.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="128.93" y="3295.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="2229" width="5.6" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="236.89" y="2239.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="535.7" y="5797" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="538.70" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="380.8" y="4549" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="383.80" y="4559.5" ></text>
</g>
<g >
<title>`core::cl__write_sequence(gctools::smart_ptr&lt;core::T_O&gt;, gctools (1 samples, 0.04%)</title><rect x="30.2" y="4997" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="33.18" y="5007.5" ></text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::getNumOper (1 samples, 0.04%)</title><rect x="904.6" y="5717" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="907.62" y="5727.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (32 samples, 1.27%)</title><rect x="187.4" y="261" width="15.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="190.42" y="271.5" ></text>
</g>
<g >
<title>`core::StackFrameDynamicScopeManager::new_binding(core::Argument (1 samples, 0.04%)</title><rect x="623.9" y="5093" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="626.94" y="5103.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="509.9" y="5733" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="512.88" y="5743.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (2 samples, 0.08%)</title><rect x="401.0" y="2661" width="0.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="403.99" y="2671.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="161.6" y="4245" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="164.61" y="4255.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="417.9" y="757" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="420.88" y="767.5" ></text>
</g>
<g >
<title>`SINGLE-FLOAT-DATUM-P^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="682.6" y="5941" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="685.61" y="5951.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="123.6" y="2085" width="0.9" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="126.59" y="2095.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (31 samples, 1.23%)</title><rect x="257.4" y="2613" width="14.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="260.36" y="2623.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="268.6" y="933" width="3.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="271.62" y="943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="386.0" y="3493" width="0.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="388.97" y="3503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="1973" width="1.0" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="427.92" y="1983.5" ></text>
</g>
<g >
<title>0x11a477094 (305 samples, 12.13%)</title><rect x="130.2" y="5173" width="143.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="133.16" y="5183.5" >0x11a477094</text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="389.7" y="3669" width="0.5" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="392.72" y="3679.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (41 samples, 1.63%)</title><rect x="469.5" y="5637" width="19.3" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="472.51" y="5647.5" ></text>
</g>
<g >
<title>0x11a477094 (4 samples, 0.16%)</title><rect x="165.4" y="3301" width="1.8" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="168.36" y="3311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.9" y="2885" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="396.95" y="2895.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.04%)</title><rect x="94.5" y="3589" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="97.49" y="3599.5" ></text>
</g>
<g >
<title>`COERCE-TO-CONDITION^CORE^FN^^ (1 samples, 0.04%)</title><rect x="336.7" y="4085" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="339.68" y="4095.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="413.7" y="4437" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="416.66" y="4447.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.04%)</title><rect x="922.9" y="5877" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="925.93" y="5887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="414.1" y="4245" width="1.0" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="417.13" y="4255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="2453" width="1.0" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="432.62" y="2463.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.04%)</title><rect x="348.9" y="5173" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="351.89" y="5183.5" ></text>
</g>
<g >
<title>`SCANNER-ACTION^CONCRETE-SYNTAX-TREE^((T T T CONS T))^METHOD^^ (1 samples, 0.04%)</title><rect x="162.5" y="4357" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="165.55" y="4367.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="324.9" y="4949" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="327.95" y="4959.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (16 samples, 0.64%)</title><rect x="332.5" y="4693" width="7.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="335.46" y="4703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="3077" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="412.90" y="3087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="398.2" y="2853" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="401.17" y="2863.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((EQ-INSTRUCTION T T (1 samples, 0.04%)</title><rect x="608.9" y="5429" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="611.92" y="5439.5" ></text>
</g>
<g >
<title>`boost::basic_format&lt;char, std::__1::char_traits&lt;char&gt;, std::__1 (1 samples, 0.04%)</title><rect x="952.0" y="5941" width="0.5" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="955.03" y="5951.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2181" width="4.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="285.70" y="2191.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.04%)</title><rect x="99.6" y="4181" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="102.65" y="4191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="1541" width="0.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="428.86" y="1551.5" ></text>
</g>
<g >
<title>`llvm::BitstreamWriter::Emit(unsigned int, unsigned int) (1 samples, 0.04%)</title><rect x="959.5" y="5877" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="962.54" y="5887.5" ></text>
</g>
<g >
<title>`MAKE-RETURN-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="419.3" y="629" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="422.29" y="639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="3685" width="0.5" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="417.13" y="3695.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (3 samples, 0.12%)</title><rect x="812.2" y="5653" width="1.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="815.16" y="5663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="239.5" y="3093" width="1.0" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="242.52" y="3103.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="411.8" y="4309" width="0.9" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="414.78" y="4319.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (5 samples, 0.20%)</title><rect x="284.6" y="1109" width="2.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="287.58" y="1119.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="750.2" y="5653" width="0.5" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="753.20" y="5663.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.04%)</title><rect x="289.3" y="5573" width="0.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="292.28" y="5583.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="50.8" y="4629" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="53.84" y="4639.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="298.2" y="5253" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="301.19" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="295.4" y="3205" width="0.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="298.38" y="3215.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="243.3" y="2037" width="7.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="246.28" y="2047.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.12%)</title><rect x="549.8" y="5765" width="1.4" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="552.78" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="165.8" y="1845" width="1.4" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="168.83" y="1855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="88.4" y="4133" width="3.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="91.39" y="4143.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="417.4" y="4325" width="5.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="420.41" y="4335.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="1045" width="26.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="207.32" y="1055.5" >`..</text>
</g>
<g >
<title>`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="319.8" y="5397" width="0.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="322.79" y="5407.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="276.1" y="4005" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="279.13" y="4015.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (10 samples, 0.40%)</title><rect x="861.0" y="5845" width="4.7" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="863.97" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3893" width="3.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="420.41" y="3903.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="252.2" y="3253" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="255.20" y="3263.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction*, unsi (1 samples, 0.04%)</title><rect x="728.1" y="5829" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="731.14" y="5839.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="636.1" y="5253" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="639.14" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT-TLL-LIST^CC-HIR-TO-MIR^FN^^ (1 samples, 0.04%)</title><rect x="455.9" y="5813" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="458.90" y="5823.5" ></text>
</g>
<g >
<title>`core::cl__error(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.04%)</title><rect x="125.0" y="1781" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="128.00" y="1791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="165.4" y="3093" width="1.8" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="168.36" y="3103.5" ></text>
</g>
<g >
<title>`OF-CLASS-P^CORE^FN^^ (1 samples, 0.04%)</title><rect x="47.5" y="5333" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="50.55" y="5343.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="38.6" y="4437" width="1.9" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="41.63" y="4447.5" ></text>
</g>
<g >
<title>`llvmo::Value_O::create(llvm::Value*) (1 samples, 0.04%)</title><rect x="632.4" y="5221" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="635.39" y="5231.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="18.4" y="3541" width="1.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="21.45" y="3551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="236.2" y="69" width="1.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="239.24" y="79.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="254.1" y="2965" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="257.07" y="2975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="396.8" y="4405" width="3.2" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="399.76" y="4415.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.04%)</title><rect x="308.1" y="5701" width="0.4" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="311.05" y="5711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="49.9" y="5637" width="5.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="52.90" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="380.3" y="4645" width="1.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="383.33" y="4655.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="105.8" y="3333" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="108.75" y="3343.5" ></text>
</g>
<g >
<title>`std::__1::basic_streambuf&lt;char, std::__1::char_traits&lt;char&gt; &gt;:: (1 samples, 0.04%)</title><rect x="677.0" y="5685" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="679.98" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="430.6" y="2533" width="0.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="433.56" y="2543.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.4" y="2645" width="0.5" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="412.44" y="2655.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (23 samples, 0.91%)</title><rect x="16.6" y="4757" width="10.8" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="19.57" y="4767.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldGetElementPtr(llvm::Type*, llvm::Constant*, b (1 samples, 0.04%)</title><rect x="666.2" y="5509" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="669.18" y="5519.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="723.0" y="5701" width="0.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="725.98" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5557" width="0.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="408.21" y="5567.5" ></text>
</g>
<g >
<title>`llvm::CallSiteBase&lt;llvm::Function const, llvm::BasicBlock const (1 samples, 0.04%)</title><rect x="831.9" y="5765" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="834.87" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="408.0" y="4709" width="2.8" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="411.03" y="4719.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="122.6" y="2821" width="1.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="125.65" y="2831.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="592.5" y="5765" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="595.49" y="5775.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="231.5" y="3477" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="234.54" y="3487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="395.4" y="4917" width="0.4" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="398.35" y="4927.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (34 samples, 1.35%)</title><rect x="618.8" y="5413" width="15.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="621.77" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="2069" width="0.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="434.96" y="2079.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="52.7" y="3813" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="55.71" y="3823.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="281.3" y="3077" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="284.30" y="3087.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.04%)</title><rect x="831.4" y="5797" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="834.40" y="5807.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="124.5" y="2565" width="1.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="127.53" y="2575.5" ></text>
</g>
<g >
<title>`ThreadCmpOverSelect(llvm::CmpInst::Predicate, llvm::Value*, llv (4 samples, 0.16%)</title><rect x="888.7" y="5813" width="1.8" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="891.66" y="5823.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.04%)</title><rect x="19.9" y="3269" width="0.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="22.86" y="3279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.9" y="2469" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="412.90" y="2479.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="338.6" y="4453" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="341.56" y="4463.5" ></text>
</g>
<g >
<title>`ENVIRONMENT-POLICY^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.04%)</title><rect x="268.6" y="341" width="0.5" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="271.62" y="351.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.5" y="2629" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="404.46" y="2639.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="233.9" y="597" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="236.89" y="607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (63 samples, 2.51%)</title><rect x="133.9" y="4581" width="29.6" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="136.91" y="4591.5" >`I..</text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (54 samples, 2.15%)</title><rect x="379.4" y="5605" width="25.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="382.40" y="5615.5" >`..</text>
</g>
<g >
<title>`GET-OR-DECLARE-FUNCTION-OR-ERROR^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="354.5" y="5509" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="357.52" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="123.1" y="2485" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="126.12" y="2495.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.7" y="1525" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="430.74" y="1535.5" ></text>
</g>
<g >
<title>`ITEMIZE-DECLARATION-SPECIFIERS^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="59.8" y="5301" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="62.75" y="5311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="287.4" y="4805" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="290.40" y="4815.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.04%)</title><rect x="666.2" y="5573" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="669.18" y="5583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.4" y="2405" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="412.44" y="2415.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.0" y="2005" width="0.4" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="411.97" y="2015.5" ></text>
</g>
<g >
<title>`core::cl__write_sequence(gctools::smart_ptr&lt;core::T_O&gt;, gctools (1 samples, 0.04%)</title><rect x="39.1" y="4101" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="42.10" y="4111.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (102 samples, 4.06%)</title><rect x="309.5" y="5845" width="47.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="312.46" y="5855.5" >`REF..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="127.3" y="5301" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="130.34" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="2453" width="4.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="279.60" y="2463.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="271.9" y="3237" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="274.91" y="3247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="381.7" y="4421" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="384.74" y="4431.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="36.8" y="3509" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="39.75" y="3519.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="3141" width="4.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="279.60" y="3151.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="16.1" y="5061" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="19.10" y="5071.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::recordAvailableAnalysis(llvm::Pass*) (2 samples, 0.08%)</title><rect x="792.0" y="5893" width="0.9" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="794.97" y="5903.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (1 samples, 0.04%)</title><rect x="883.5" y="5829" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="886.50" y="5839.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="3109" width="4.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="279.60" y="3119.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.04%)</title><rect x="272.4" y="4517" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="275.38" y="4527.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4949" width="2.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="55.24" y="4959.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="291.2" y="5525" width="0.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="294.15" y="5535.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((PRECALC-VALUE-INST (4 samples, 0.16%)</title><rect x="649.8" y="5429" width="1.8" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="652.75" y="5439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="388.3" y="4261" width="4.7" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="391.31" y="4271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="236.2" y="229" width="3.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="239.24" y="239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3621" width="1.0" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="424.64" y="3631.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (1 samples, 0.04%)</title><rect x="50.4" y="4613" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="53.37" y="4623.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (1 samples, 0.04%)</title><rect x="33.0" y="5301" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="36.00" y="5311.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.04%)</title><rect x="808.9" y="5493" width="0.4" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="811.87" y="5503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="172.4" y="917" width="5.2" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="175.40" y="927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3589" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="414.78" y="3599.5" ></text>
</g>
<g >
<title>`MAKE-RESTART^CORE^FN^^ (1 samples, 0.04%)</title><rect x="249.8" y="1029" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="252.85" y="1039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="285.1" y="885" width="0.4" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="288.05" y="895.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="180.4" y="357" width="2.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="183.38" y="367.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="2341" width="5.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="236.89" y="2351.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.28%)</title><rect x="294.0" y="5381" width="3.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="296.97" y="5391.5" ></text>
</g>
<g >
<title>`core::coerce_to_posix_filename(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="951.6" y="5973" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="954.56" y="5983.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (25 samples, 0.99%)</title><rect x="100.6" y="3813" width="11.7" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="103.59" y="3823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="416.0" y="4805" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="419.01" y="4815.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="99.2" y="3829" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="102.18" y="3839.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="429.6" y="2357" width="1.0" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="432.62" y="2367.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="431.5" y="3237" width="1.4" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="434.50" y="3247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="1957" width="1.0" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="432.62" y="1967.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="388.3" y="4085" width="3.8" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="391.31" y="4095.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="427.3" y="2133" width="0.9" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="430.27" y="2143.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="3205" width="63.9" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="170.24" y="3215.5" >`INTERP..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (56 samples, 2.23%)</title><rect x="204.3" y="69" width="26.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="207.32" y="79.5" >`..</text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="303.4" y="5813" width="0.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="306.36" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="167.7" y="981" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="170.71" y="991.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="336.2" y="4437" width="1.0" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="339.21" y="4447.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.04%)</title><rect x="565.7" y="5749" width="0.5" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="568.74" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="2885" width="1.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="411.03" y="2895.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (16 samples, 0.64%)</title><rect x="243.3" y="1989" width="7.5" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="246.28" y="1999.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="243.3" y="949" width="4.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="246.28" y="959.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="431.5" y="2709" width="1.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="434.50" y="2719.5" ></text>
</g>
<g >
<title>`SIMPLE-TYPE-PREDICATE^CORE^FN^^ (3 samples, 0.12%)</title><rect x="149.4" y="4325" width="1.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="152.40" y="4335.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="457.8" y="5829" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="460.78" y="5839.5" ></text>
</g>
<g >
<title>`CST-EVAL^CLEAVIR-ENVIRONMENT^((T T NULL T))^METHOD^^ (2 samples, 0.08%)</title><rect x="287.9" y="4917" width="0.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="290.87" y="4927.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="2517" width="4.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="279.60" y="2527.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="432.0" y="1861" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="434.96" y="1871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="259.2" y="245" width="1.4" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="262.24" y="255.5" ></text>
</g>
<g >
<title>`wrapped_core__generalp_T_sp (1 samples, 0.04%)</title><rect x="536.2" y="5829" width="0.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="539.17" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (304 samples, 12.09%)</title><rect x="130.6" y="4709" width="142.7" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="133.63" y="4719.5" >`INTERPRETED-DISCR..</text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm:: (8 samples, 0.32%)</title><rect x="763.8" y="5797" width="3.8" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="766.81" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="409.4" y="3877" width="1.4" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="412.44" y="3887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="393.9" y="3013" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="396.95" y="3023.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (15 samples, 0.60%)</title><rect x="232.5" y="2757" width="7.0" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="235.48" y="2767.5" ></text>
</g>
<g >
<title>`core::core__generalp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="582.2" y="5781" width="0.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="585.16" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="34.4" y="4725" width="0.9" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="37.41" y="4735.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="428.7" y="2069" width="0.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="431.68" y="2079.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="2773" width="3.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="420.41" y="2783.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="124.5" y="3173" width="1.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="127.53" y="3183.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="295.4" y="3221" width="1.4" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="298.38" y="3231.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="409.4" y="3381" width="1.0" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="412.44" y="3391.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="52.2" y="4869" width="2.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="55.24" y="4879.5" ></text>
</g>
<g >
<title>`CCLASP-LOOP-READ-AND-COMPILE-FILE-FORMS^CLASP-CLEAVIR^FN^^ (1,421 samples, 56.52%)</title><rect x="12.3" y="5973" width="667.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="15.35" y="5983.5" >`CCLASP-LOOP-READ-AND-COMPILE-FILE-FORMS^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T SEQUENCE T))^METHOD^^ (1 samples, 0.04%)</title><rect x="24.1" y="4117" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="27.08" y="4127.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (7 samples, 0.28%)</title><rect x="314.2" y="5493" width="3.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="317.15" y="5503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="286.9" y="4581" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="289.93" y="4591.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.04%)</title><rect x="92.1" y="2981" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="95.14" y="2991.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.04%)</title><rect x="527.7" y="5685" width="0.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="530.72" y="5695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="454.5" y="5781" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="457.49" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="2197" width="0.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="428.86" y="2207.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="405.7" y="3781" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="408.68" y="3791.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.04%)</title><rect x="91.2" y="3797" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="94.20" y="3807.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::~BasicBlock() (2 samples, 0.08%)</title><rect x="949.7" y="5861" width="0.9" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="952.68" y="5871.5" ></text>
</g>
<g >
<title>`combineInstructionsOverFunction(llvm::Function&amp;, llvm::InstComb (126 samples, 5.01%)</title><rect x="720.6" y="5877" width="59.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="723.63" y="5887.5" >`combi..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="232.0" y="2949" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="235.01" y="2959.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="396.8" y="4325" width="0.9" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="399.76" y="4335.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2597" width="1.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="127.53" y="2607.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="231.1" y="3621" width="0.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="234.07" y="3631.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (23 samples, 0.91%)</title><rect x="383.6" y="4853" width="10.8" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="386.62" y="4863.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="332.9" y="4213" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="335.93" y="4223.5" ></text>
</g>
<g >
<title>`llvm::AttrBuilder::merge(llvm::AttrBuilder const&amp;) (1 samples, 0.04%)</title><rect x="342.8" y="4533" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="345.78" y="4543.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="432.0" y="1445" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="434.96" y="1455.5" ></text>
</g>
<g >
<title>`DATUM-VARIABLE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="651.2" y="5381" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="654.16" y="5391.5" ></text>
</g>
<g >
<title>`__cxa_throw (2 samples, 0.08%)</title><rect x="14.2" y="5525" width="1.0" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="17.22" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="423.0" y="3269" width="1.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="426.05" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2357" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="412.44" y="2367.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (27 samples, 1.07%)</title><rect x="438.1" y="5429" width="12.6" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="441.07" y="5439.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="283.2" y="1157" width="1.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="286.17" y="1167.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="279.4" y="949" width="1.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="282.42" y="959.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="291.6" y="5525" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="294.62" y="5535.5" ></text>
</g>
<g >
<title>`llvm::User::dropAllReferences() (1 samples, 0.04%)</title><rect x="949.7" y="5845" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="952.68" y="5855.5" ></text>
</g>
<g >
<title>`llvm::Value::getPointerAlignment(llvm::DataLayout const&amp;) const (1 samples, 0.04%)</title><rect x="842.7" y="5701" width="0.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="845.67" y="5711.5" ></text>
</g>
<g >
<title>`llvm::isDereferenceableAndAlignedPointer(llvm::Value const*, un (1 samples, 0.04%)</title><rect x="773.2" y="5813" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="776.20" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="412.3" y="3557" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="415.25" y="3567.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="122.2" y="3717" width="5.1" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="125.18" y="3727.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (1 samples, 0.04%)</title><rect x="14.2" y="5477" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="17.22" y="5487.5" ></text>
</g>
<g >
<title>`ELIMINATE-LOAD-TIME-VALUE-INPUTS^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="347.0" y="5173" width="0.9" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="350.01" y="5183.5" ></text>
</g>
<g >
<title>`llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::Arra (1 samples, 0.04%)</title><rect x="863.8" y="5781" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="866.79" y="5791.5" ></text>
</g>
<g >
<title>`MAKE-HASH-TABLE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="372.8" y="5813" width="0.5" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="375.82" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (24 samples, 0.95%)</title><rect x="422.6" y="4469" width="11.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="425.58" y="4479.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="165.8" y="2453" width="1.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="168.83" y="2463.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="11.9" y="5973" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="14.88" y="5983.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (4 samples, 0.16%)</title><rect x="400.0" y="4197" width="1.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="403.05" y="4207.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasGEP(llvm::GEPOperator const*, unsigne (1 samples, 0.04%)</title><rect x="780.2" y="5701" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="783.24" y="5711.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="623.0" y="5157" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="626.00" y="5167.5" ></text>
</g>
<g >
<title>`core::output_stream_write_byte8(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.04%)</title><rect x="10.0" y="5941" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="13.00" y="5951.5" ></text>
</g>
<g >
<title>`CONVERT-CALLED-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T T T T) (1 samples, 0.04%)</title><rect x="99.2" y="3845" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="102.18" y="3855.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (57 samples, 2.27%)</title><rect x="204.3" y="1013" width="26.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="207.32" y="1023.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="278.9" y="117" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="281.95" y="127.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="295.4" y="2741" width="0.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="298.38" y="2751.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="400.5" y="3813" width="1.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="403.52" y="3823.5" ></text>
</g>
<g >
<title>`__cxxabiv1::get_shim_type_info(unsigned long long, unsigned cha (1 samples, 0.04%)</title><rect x="513.6" y="5637" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="516.64" y="5647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="392.1" y="4101" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="395.07" y="4111.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="4389" width="2.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="296.97" y="4399.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="253.6" y="3077" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="256.60" y="3087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="332.9" y="4517" width="1.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="335.93" y="4527.5" ></text>
</g>
<g >
<title>0x1225e5094 (12 samples, 0.48%)</title><rect x="233.9" y="1701" width="5.6" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="236.89" y="1711.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (4 samples, 0.16%)</title><rect x="52.7" y="4101" width="1.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="55.71" y="4111.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (3 samples, 0.12%)</title><rect x="36.3" y="4693" width="1.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="39.28" y="4703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="430.6" y="2469" width="0.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="433.56" y="2479.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="409.4" y="3397" width="1.0" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="412.44" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="393.9" y="3381" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="396.95" y="3391.5" ></text>
</g>
<g >
<title>`SHARPSIGN-SINGLE-QUOTE^ECLECTOR.READER^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4357" width="1.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="39.28" y="4367.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="55.1" y="5605" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="58.06" y="5615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (108 samples, 4.30%)</title><rect x="180.4" y="2341" width="50.7" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="183.38" y="2351.5" >`core..</text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="926.7" y="5829" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="929.68" y="5839.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4341" width="1.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="39.28" y="4351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1093" width="0.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="430.27" y="1103.5" ></text>
</g>
<g >
<title>`llvm::Attribute::get(llvm::LLVMContext&amp;, llvm::Attribute::AttrK (1 samples, 0.04%)</title><rect x="676.5" y="5669" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="679.51" y="5679.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="406.6" y="5653" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="409.62" y="5663.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="273.3" y="5141" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="276.32" y="5151.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="38.2" y="4421" width="0.4" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="41.16" y="4431.5" ></text>
</g>
<g >
<title>`core::core__file_kind(gctools::smart_ptr&lt;core::T_O&gt;, bool) (1 samples, 0.04%)</title><rect x="951.6" y="5989" width="0.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="954.56" y="5999.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (90 samples, 3.58%)</title><rect x="313.2" y="5701" width="42.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="316.21" y="5711.5" >`RE..</text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.04%)</title><rect x="847.4" y="5861" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="850.36" y="5871.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;void*&gt;::insert(void*) (1 samples, 0.04%)</title><rect x="706.1" y="5861" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="709.08" y="5871.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (11 samples, 0.44%)</title><rect x="49.9" y="5317" width="5.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="52.90" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (5 samples, 0.20%)</title><rect x="240.5" y="3109" width="2.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="243.46" y="3119.5" ></text>
</g>
<g >
<title>`core::Lisp_O::run() (2,028 samples, 80.67%)</title><rect x="10.0" y="6325" width="951.9" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="13.00" y="6335.5" >`core::Lisp_O::run()</text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4581" width="1.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="39.28" y="4591.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="392.1" y="4085" width="0.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="395.07" y="4095.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (305 samples, 12.13%)</title><rect x="130.2" y="4949" width="143.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="133.16" y="4959.5" >`COMBINE-METHOD-FU..</text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="952.5" y="5861" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="955.50" y="5871.5" ></text>
</g>
<g >
<title>`parseOS(llvm::StringRef) (1 samples, 0.04%)</title><rect x="346.1" y="4885" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="349.07" y="4895.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="257.4" y="1829" width="1.8" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="260.36" y="1839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="256.0" y="2885" width="1.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="258.95" y="2895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.4" y="1621" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="428.39" y="1631.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.04%)</title><rect x="324.5" y="4741" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="327.48" y="4751.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="3253" width="1.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="411.03" y="3263.5" ></text>
</g>
<g >
<title>`JIT-FUNCTION-NAME^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="677.0" y="5829" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="679.98" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="247.5" y="997" width="2.3" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="250.50" y="1007.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="125.9" y="2469" width="1.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="128.93" y="2479.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="605.6" y="5477" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="608.63" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="281.3" y="3573" width="5.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="284.30" y="3583.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.04%)</title><rect x="170.1" y="1381" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="173.06" y="1391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="247.0" y="85" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="250.03" y="95.5" ></text>
</g>
<g >
<title>`llvm::EliminateDuplicatePHINodes(llvm::BasicBlock*) (1 samples, 0.04%)</title><rect x="836.6" y="5829" width="0.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="839.56" y="5839.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (48 samples, 1.91%)</title><rect x="180.4" y="709" width="22.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="183.38" y="719.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="55.1" y="5429" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="58.06" y="5439.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="247.0" y="613" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="250.03" y="623.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="2389" width="1.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="168.83" y="2399.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="294.0" y="4421" width="2.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="296.97" y="4431.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="622.1" y="5221" width="0.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="625.06" y="5231.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (32 samples, 1.27%)</title><rect x="187.4" y="181" width="15.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="190.42" y="191.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="104.8" y="3461" width="1.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="107.81" y="3471.5" ></text>
</g>
<g >
<title>`llvm::CallGraph::CallGraph(llvm::Module&amp;) (1 samples, 0.04%)</title><rect x="841.7" y="5909" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="844.73" y="5919.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="455.9" y="5637" width="0.5" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="458.90" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="282.7" y="1477" width="1.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="285.70" y="1487.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorTemplateBase&lt;llvm::BasicBlock*, true&gt;::push_ba (1 samples, 0.04%)</title><rect x="719.7" y="5845" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="722.69" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4517" width="0.4" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="419.48" y="4527.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="795.3" y="5813" width="0.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="798.26" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="1077" width="5.6" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="236.89" y="1087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.3" y="3557" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="414.31" y="3567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="395.8" y="4933" width="4.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="398.82" y="4943.5" ></text>
</g>
<g >
<title>`llvm::GetElementPtrConstantExpr::getSourceElementType() const (1 samples, 0.04%)</title><rect x="821.5" y="5621" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="824.54" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (9 samples, 0.36%)</title><rect x="327.3" y="4565" width="4.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="330.30" y="4575.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="393.9" y="3253" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="396.95" y="3263.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="44.7" y="5269" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="47.73" y="5279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="122.6" y="2837" width="1.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="125.65" y="2847.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="499.6" y="5781" width="0.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="502.55" y="5791.5" ></text>
</g>
<g >
<title>`llvm::GVN::PerformLoadPRE(llvm::LoadInst*, llvm::SmallVector&lt;ll (1 samples, 0.04%)</title><rect x="815.4" y="5797" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="818.44" y="5807.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.04%)</title><rect x="750.2" y="5637" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="753.20" y="5647.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::getModRefBehavior(llvm::ImmutableCallSite) (1 samples, 0.04%)</title><rect x="904.6" y="5749" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="907.62" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="1541" width="5.6" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="236.89" y="1551.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="36.3" y="4677" width="1.4" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="39.28" y="4687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (4 samples, 0.16%)</title><rect x="385.5" y="3653" width="1.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="388.50" y="3663.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (1 samples, 0.04%)</title><rect x="240.0" y="2853" width="0.5" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="242.99" y="2863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3061" width="1.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="411.03" y="3071.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="3957" width="1.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="411.03" y="3967.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="409.0" y="2645" width="0.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="411.97" y="2655.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="318.4" y="5461" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="321.38" y="5471.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::asMinimalSimpleString() const (1 samples, 0.04%)</title><rect x="380.3" y="4373" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="383.33" y="4383.5" ></text>
</g>
<g >
<title>`COMPUTE-LOCATION-OWNERS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (9 samples, 0.36%)</title><rect x="564.3" y="5829" width="4.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="567.33" y="5839.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="115.1" y="3525" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="118.14" y="3535.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="171.5" y="1461" width="0.4" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="174.46" y="1471.5" ></text>
</g>
<g >
<title>`_platform_memcmp (1 samples, 0.04%)</title><rect x="334.3" y="4469" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="337.34" y="4479.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="422.1" y="2117" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="425.11" y="2127.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="340.4" y="4661" width="1.0" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="343.44" y="4671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.4" y="2997" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="389.44" y="3007.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="84.6" y="4901" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="87.63" y="4911.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="409.4" y="4245" width="1.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="412.44" y="4255.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="425.9" y="2645" width="0.9" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="428.86" y="2655.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="665.2" y="5541" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="668.24" y="5551.5" ></text>
</g>
<g >
<title>`IRC-BEGIN-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="635.7" y="5349" width="0.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="638.67" y="5359.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="251.3" y="3317" width="0.9" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="254.26" y="3327.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="122.6" y="2933" width="1.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="125.65" y="2943.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="1253" width="5.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="175.40" y="1263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="425.9" y="3157" width="0.9" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="428.86" y="3167.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="3525" width="4.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="279.60" y="3535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="452.6" y="5461" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="455.62" y="5471.5" ></text>
</g>
<g >
<title>`ITEMIZE-LAMBDA-LIST^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="276.6" y="933" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="279.60" y="943.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="386.0" y="3445" width="0.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="388.97" y="3455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="384.6" y="4341" width="3.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="387.56" y="4351.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (9 samples, 0.36%)</title><rect x="276.6" y="2693" width="4.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="279.60" y="2703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (56 samples, 2.23%)</title><rect x="407.6" y="5445" width="26.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="410.56" y="5455.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="1221" width="5.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="236.89" y="1231.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (55 samples, 2.19%)</title><rect x="60.7" y="5221" width="25.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="63.69" y="5231.5" >`..</text>
</g>
<g >
<title>`iterativelySimplifyCFG(llvm::Function&amp;, llvm::TargetTransformIn (8 samples, 0.32%)</title><rect x="833.7" y="5877" width="3.8" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="836.75" y="5887.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (19 samples, 0.76%)</title><rect x="34.4" y="5045" width="8.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="37.41" y="5055.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CAR-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="408.0" y="2789" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="411.03" y="2799.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="167.7" y="1621" width="2.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="170.71" y="1631.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="363.4" y="5717" width="2.4" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="366.44" y="5727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3365" width="0.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="415.25" y="3375.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4917" width="2.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="55.24" y="4927.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (336 samples, 13.37%)</title><rect x="129.7" y="5365" width="157.7" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="132.69" y="5375.5" >`CONVERT^CLEAVIR-CST..</text>
</g>
<g >
<title>`CONVERT-TO-TLL^CC-HIR-TO-MIR^FN^^ (1 samples, 0.04%)</title><rect x="455.9" y="5749" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="458.90" y="5759.5" ></text>
</g>
<g >
<title>`ENVIRONMENT-POLICY^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.04%)</title><rect x="318.4" y="5301" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="321.38" y="5311.5" ></text>
</g>
<g >
<title>`COMPUTE-INSTRUCTION-OWNERS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (4 samples, 0.16%)</title><rect x="562.5" y="5829" width="1.8" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="565.45" y="5839.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.04%)</title><rect x="414.1" y="3301" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="417.13" y="3311.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (35 samples, 1.39%)</title><rect x="256.0" y="3397" width="16.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="258.95" y="3407.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="18.0" y="3429" width="0.4" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="20.98" y="3439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="416.9" y="4853" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="419.95" y="4863.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="433.4" y="4213" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="436.37" y="4223.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="1797" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="423.70" y="1807.5" ></text>
</g>
<g >
<title>`LOGTEST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="43.3" y="4949" width="0.5" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="46.33" y="4959.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="3829" width="3.8" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="420.41" y="3839.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.04%)</title><rect x="321.7" y="5029" width="0.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="324.66" y="5039.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="427.3" y="3157" width="4.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="430.27" y="3167.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (48 samples, 1.91%)</title><rect x="180.4" y="1205" width="22.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="183.38" y="1215.5" >`..</text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="239.5" y="3013" width="1.0" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="242.52" y="3023.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="413.7" y="4197" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="416.66" y="4207.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="297.3" y="5605" width="1.8" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="300.26" y="5615.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="122.2" y="3797" width="5.1" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="125.18" y="3807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="400.5" y="4069" width="1.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="403.52" y="4079.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (3 samples, 0.12%)</title><rect x="256.0" y="3061" width="1.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="258.95" y="3071.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.08%)</title><rect x="429.6" y="2197" width="1.0" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="432.62" y="2207.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="19.9" y="3301" width="0.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="22.86" y="3311.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="38.2" y="4565" width="0.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="41.16" y="4575.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (2 samples, 0.08%)</title><rect x="171.5" y="1685" width="0.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="174.46" y="1695.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.04%)</title><rect x="681.2" y="5909" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="684.20" y="5919.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="387.4" y="3813" width="0.4" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="390.37" y="3823.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2469" width="14.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="260.36" y="2479.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="286.9" y="4789" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="289.93" y="4799.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="251.3" y="3877" width="0.9" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="254.26" y="3887.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleBaseString_O, unsigned  (1 samples, 0.04%)</title><rect x="18.9" y="3397" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="21.92" y="3407.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (43 samples, 1.71%)</title><rect x="252.2" y="4229" width="20.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="255.20" y="4239.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="4245" width="3.8" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="420.41" y="4255.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (20 samples, 0.80%)</title><rect x="112.8" y="3669" width="9.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="115.79" y="3679.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="827.6" y="5653" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="830.65" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="3525" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="414.31" y="3535.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.0" y="1221" width="0.4" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="434.96" y="1231.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldTerminator(llvm::BasicBlock*, bool, llvm::Tar (1 samples, 0.04%)</title><rect x="936.5" y="5861" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="939.54" y="5871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="124.5" y="2357" width="1.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="127.53" y="2367.5" ></text>
</g>
<g >
<title>`llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl&lt;llvm::Type (1 samples, 0.04%)</title><rect x="747.4" y="5685" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="750.38" y="5695.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.08%)</title><rect x="558.7" y="5797" width="0.9" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="561.70" y="5807.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="408.5" y="2677" width="0.5" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="411.50" y="2687.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="3733" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="414.78" y="3743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="415.1" y="4565" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="418.07" y="4575.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="530.1" y="5765" width="0.4" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="533.06" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="516.0" y="5797" width="2.8" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="518.98" y="5807.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.04%)</title><rect x="500.5" y="5733" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="503.49" y="5743.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (4 samples, 0.16%)</title><rect x="49.9" y="5013" width="1.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="52.90" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="2069" width="0.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="411.97" y="2079.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="166.3" y="901" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="169.30" y="911.5" ></text>
</g>
<g >
<title>`llvm::APInt::urem(llvm::APInt const&amp;) const (1 samples, 0.04%)</title><rect x="666.2" y="5445" width="0.5" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="669.18" y="5455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="123.1" y="2229" width="1.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="126.12" y="2239.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="165.8" y="2373" width="1.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="168.83" y="2383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="393.5" y="4277" width="0.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="396.48" y="4287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1525" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="423.70" y="1535.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::IndVarSimplify::run(llvm::Loop*) (1 samples, 0.04%)</title><rect x="779.8" y="5861" width="0.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="782.77" y="5871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3285" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="415.25" y="3295.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="235.3" y="85" width="0.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="238.30" y="95.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::initializeAnalysisImpl(llvm::Pass*) (2 samples, 0.08%)</title><rect x="922.9" y="5893" width="1.0" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="925.93" y="5903.5" ></text>
</g>
<g >
<title>`core::lambdaListHandler_createBindings(gctools::smart_ptr&lt;core: (1 samples, 0.04%)</title><rect x="648.8" y="5333" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="651.81" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (9 samples, 0.36%)</title><rect x="427.3" y="3109" width="4.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="430.27" y="3119.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.04%)</title><rect x="38.2" y="4117" width="0.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="41.16" y="4127.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="380.3" y="4597" width="1.0" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="383.33" y="4607.5" ></text>
</g>
<g >
<title>`GC_install_counts (1 samples, 0.04%)</title><rect x="289.7" y="5397" width="0.5" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="292.75" y="5407.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (24 samples, 0.95%)</title><rect x="16.6" y="4869" width="11.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="19.57" y="4879.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="166.3" y="629" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="169.30" y="639.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (2 samples, 0.08%)</title><rect x="36.3" y="3797" width="0.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="39.28" y="3807.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="413.2" y="4789" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="416.19" y="4799.5" ></text>
</g>
<g >
<title>`llvm::BranchProbabilityInfo::calculate(llvm::Function const&amp;, l (5 samples, 0.20%)</title><rect x="851.6" y="5877" width="2.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="854.58" y="5887.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.04%)</title><rect x="46.6" y="5509" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="49.61" y="5519.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="326.8" y="4613" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="329.83" y="4623.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="324.5" y="4901" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="327.48" y="4911.5" ></text>
</g>
<g >
<title>`core::cl__make_string_output_stream(gctools::smart_ptr&lt;core::Sy (1 samples, 0.04%)</title><rect x="617.8" y="5285" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="620.84" y="5295.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="247.0" y="149" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="250.03" y="159.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (2 samples, 0.08%)</title><rect x="367.7" y="5765" width="0.9" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="370.66" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="281.8" y="3013" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="284.77" y="3023.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1749" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="430.27" y="1759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="421.6" y="2821" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="424.64" y="2831.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="249.8" y="981" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="252.85" y="991.5" ></text>
</g>
<g >
<title>`PARSE-FUNCTION-TYPE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="98.7" y="3877" width="0.5" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="101.71" y="3887.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="39.1" y="4325" width="0.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="42.10" y="4335.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (1 samples, 0.04%)</title><rect x="402.4" y="4933" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="405.39" y="4943.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (5 samples, 0.20%)</title><rect x="510.8" y="5701" width="2.4" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="513.82" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="398.2" y="3285" width="0.4" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="401.17" y="3295.5" ></text>
</g>
<g >
<title>`CST-FROM-ELEMENT^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="327.3" y="4437" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="330.30" y="4447.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="430.6" y="1669" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="433.56" y="1679.5" ></text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (1 samples, 0.04%)</title><rect x="560.6" y="5797" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="563.57" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="278.9" y="85" width="0.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="281.95" y="95.5" ></text>
</g>
<g >
<title>`isUseTriviallyOptimizableToLiveOnEntry(llvm::AAResults&amp;, llvm:: (1 samples, 0.04%)</title><rect x="789.6" y="5797" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="792.63" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="167.7" y="965" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="170.71" y="975.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="19.4" y="3413" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="22.39" y="3423.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (1 samples, 0.04%)</title><rect x="34.4" y="4469" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="37.41" y="4479.5" ></text>
</g>
<g >
<title>0x11a479094 (145 samples, 5.77%)</title><rect x="59.8" y="5445" width="68.0" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="62.75" y="5455.5" >0x11a47..</text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (1 samples, 0.04%)</title><rect x="123.6" y="517" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="126.59" y="527.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (2 samples, 0.08%)</title><rect x="943.1" y="5813" width="0.9" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="946.11" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (54 samples, 2.15%)</title><rect x="379.4" y="5637" width="25.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="382.40" y="5647.5" >`..</text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="332.9" y="4469" width="1.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="335.93" y="4479.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (7 samples, 0.28%)</title><rect x="890.5" y="5765" width="3.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="893.54" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3365" width="3.8" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="420.41" y="3375.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (17 samples, 0.68%)</title><rect x="17.5" y="4341" width="8.0" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="20.51" y="4351.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="392.5" y="4181" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="395.54" y="4191.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="52.2" y="4149" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="55.24" y="4159.5" ></text>
</g>
<g >
<title>0x11a477094 (4 samples, 0.16%)</title><rect x="92.1" y="3589" width="1.9" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="95.14" y="3599.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="925.7" y="5797" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="928.74" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="124.5" y="1765" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="127.53" y="1775.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (SINGLETON-PARAMETER- (1 samples, 0.04%)</title><rect x="257.4" y="1557" width="0.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="260.36" y="1567.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (1 samples, 0.04%)</title><rect x="279.4" y="341" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="282.42" y="351.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((FUNCALL-INSTRUCTIO (3 samples, 0.12%)</title><rect x="626.8" y="5205" width="1.4" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="629.75" y="5215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2165" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="412.90" y="2175.5" ></text>
</g>
<g >
<title>`CONVERT-VARIABLE^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="252.2" y="3125" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="255.20" y="3135.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="452.6" y="5365" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="455.62" y="5375.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="405.7" y="3909" width="0.4" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="408.68" y="3919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="391.6" y="2565" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="394.60" y="2575.5" ></text>
</g>
<g >
<title>`core::type_of(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="114.7" y="3557" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="117.67" y="3567.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (1 samples, 0.04%)</title><rect x="948.7" y="5989" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="951.74" y="5999.5" ></text>
</g>
<g >
<title>`core::Lisp_O::findPackage_no_lock(std::__1::basic_string&lt;char,  (1 samples, 0.04%)</title><rect x="123.6" y="437" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="126.59" y="447.5" ></text>
</g>
<g >
<title>`CST-FROM-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="5237" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="327.01" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="422.1" y="2853" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="425.11" y="2863.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="233.9" y="949" width="5.6" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="236.89" y="959.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="233.0" y="2421" width="0.9" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="235.95" y="2431.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="115.6" y="3509" width="0.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="118.61" y="3519.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.04%)</title><rect x="391.6" y="2261" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="394.60" y="2271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="256.0" y="2981" width="1.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="258.95" y="2991.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="773.7" y="5733" width="0.4" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="776.67" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="336.7" y="4261" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="339.68" y="4271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (25 samples, 0.99%)</title><rect x="100.6" y="3845" width="11.7" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="103.59" y="3855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1525" width="5.6" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="236.89" y="1535.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.3" y="1109" width="0.4" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="430.27" y="1119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="398.2" y="2965" width="0.4" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="401.17" y="2975.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="165.8" y="933" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="168.83" y="943.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (1 samples, 0.04%)</title><rect x="51.3" y="4821" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="54.30" y="4831.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="1589" width="50.7" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="183.38" y="1599.5" >`INTE..</text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PHINode*, llvm::detail: (1 samples, 0.04%)</title><rect x="836.6" y="5813" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="839.56" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="425.4" y="1525" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="428.39" y="1535.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="332.9" y="4325" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="335.93" y="4335.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="790.1" y="5797" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="793.10" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="382.2" y="4389" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="385.21" y="4399.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (145 samples, 5.77%)</title><rect x="59.8" y="5461" width="68.0" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="62.75" y="5471.5" >`core::..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="408.0" y="2821" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="411.03" y="2831.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (4 samples, 0.16%)</title><rect x="888.7" y="5797" width="1.8" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="891.66" y="5807.5" ></text>
</g>
<g >
<title>`NOTE-SKIPPED-INPUT^ECLECTOR.READER^((PARSE-RESULT-CLIENT T T))^ (1 samples, 0.04%)</title><rect x="20.3" y="3237" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="23.33" y="3247.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="579.8" y="5829" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="582.82" y="5839.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (11 samples, 0.44%)</title><rect x="49.9" y="5429" width="5.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="52.90" y="5439.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="769.9" y="5685" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="772.91" y="5695.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="285.1" y="693" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="288.05" y="703.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="52.2" y="4437" width="2.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="55.24" y="4447.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="250.8" y="4133" width="1.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="253.79" y="4143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="431.5" y="3445" width="1.9" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="434.50" y="3455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (48 samples, 1.91%)</title><rect x="180.4" y="949" width="22.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="183.38" y="959.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="251.3" y="3365" width="0.9" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="254.26" y="3375.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CONTEXT-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="413.2" y="4805" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="416.19" y="4815.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (14 samples, 0.56%)</title><rect x="171.5" y="1909" width="6.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="174.46" y="1919.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (4 samples, 0.16%)</title><rect x="423.0" y="3205" width="1.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="426.05" y="3215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (22 samples, 0.88%)</title><rect x="423.0" y="4213" width="10.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="426.05" y="4223.5" ></text>
</g>
<g >
<title>0x11a477094 (9 samples, 0.36%)</title><rect x="276.6" y="3445" width="4.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="279.60" y="3455.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (2 samples, 0.08%)</title><rect x="825.3" y="5637" width="0.9" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="828.30" y="5647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="410.4" y="3397" width="0.4" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="413.37" y="3407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="385.5" y="3701" width="1.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="388.50" y="3711.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="1333" width="9.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="262.24" y="1343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="3189" width="3.8" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="420.41" y="3199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="1493" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="434.96" y="1503.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="414.1" y="3317" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="417.13" y="3327.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (2 samples, 0.08%)</title><rect x="125.9" y="2501" width="1.0" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="128.93" y="2511.5" ></text>
</g>
<g >
<title>`FUNCTION-TYPE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="98.2" y="3893" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="101.24" y="3903.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="714.5" y="5861" width="0.5" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="717.53" y="5871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="391.6" y="2485" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="394.60" y="2495.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="257.4" y="1749" width="1.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="260.36" y="1759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.5" y="4949" width="0.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="418.54" y="4959.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (20 samples, 0.80%)</title><rect x="34.4" y="5109" width="9.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="37.41" y="5119.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="50.4" y="4645" width="0.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="53.37" y="4655.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="235.3" y="181" width="0.9" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="238.30" y="191.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="391.6" y="2853" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="394.60" y="2863.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="3349" width="1.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="411.03" y="3359.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="1157" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="423.70" y="1167.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (9 samples, 0.36%)</title><rect x="150.8" y="4325" width="4.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="153.81" y="4335.5" ></text>
</g>
<g >
<title>`llvmo::APInt_O::makeAPIntWidth(gctools::smart_ptr&lt;core::Integer (1 samples, 0.04%)</title><rect x="640.4" y="5349" width="0.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="643.37" y="5359.5" ></text>
</g>
<g >
<title>`%INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="599.5" y="5637" width="1.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="602.53" y="5647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="432.0" y="2117" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="434.96" y="2127.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.04%)</title><rect x="295.8" y="2309" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="298.85" y="2319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.7" y="1077" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="430.74" y="1087.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="172.4" y="1413" width="5.2" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="175.40" y="1423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="413.7" y="3669" width="0.4" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="416.66" y="3679.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (3 samples, 0.12%)</title><rect x="134.4" y="4373" width="1.4" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="137.38" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (41 samples, 1.63%)</title><rect x="325.4" y="4917" width="19.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="328.42" y="4927.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="4965" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="327.01" y="4975.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="3749" width="3.8" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="420.41" y="3759.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="421.2" y="4117" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="424.17" y="4127.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="430.6" y="2421" width="0.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="433.56" y="2431.5" ></text>
</g>
<g >
<title>`IRC-GEP-VARIABLE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="666.2" y="5637" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="669.18" y="5647.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="48.0" y="5413" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="51.02" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="422.1" y="2933" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="425.11" y="2943.5" ></text>
</g>
<g >
<title>`OPTIMIZED-FIXED-TO-MULTIPLE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^ (1 samples, 0.04%)</title><rect x="425.9" y="901" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="428.86" y="911.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="427.7" y="1669" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="430.74" y="1679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="284.6" y="1045" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="287.58" y="1055.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="321.2" y="5061" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="324.19" y="5071.5" ></text>
</g>
<g >
<title>`ALLOCA-RETURN^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="315.6" y="5269" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="318.56" y="5279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="247.5" y="421" width="1.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="250.50" y="431.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="242.8" y="2613" width="8.0" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="245.81" y="2623.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (14 samples, 0.56%)</title><rect x="91.7" y="3893" width="6.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="94.67" y="3903.5" ></text>
</g>
<g >
<title>0x122631094 (5 samples, 0.20%)</title><rect x="284.6" y="1733" width="2.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="287.58" y="1743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="3109" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="412.90" y="3119.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="235.3" y="725" width="4.2" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="238.30" y="735.5" ></text>
</g>
<g >
<title>0x11a477094 (305 samples, 12.13%)</title><rect x="130.2" y="4917" width="143.1" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="133.16" y="4927.5" >0x11a477094</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="398.6" y="3269" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="401.64" y="3279.5" ></text>
</g>
<g >
<title>`READ-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="41.4" y="4597" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="44.45" y="4607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="167.7" y="1605" width="2.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="170.71" y="1615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="167.7" y="1733" width="3.8" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="170.71" y="1743.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="695.3" y="5701" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="698.28" y="5711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="337.2" y="4373" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="340.15" y="4383.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (136 samples, 5.41%)</title><rect x="167.2" y="3253" width="63.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="170.24" y="3263.5" >`core::..</text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="276.1" y="4133" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="279.13" y="4143.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="3701" width="3.8" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="420.41" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="2389" width="0.4" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="411.97" y="2399.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3909" width="1.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="168.36" y="3919.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="123.6" y="1861" width="0.9" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="126.59" y="1871.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="124.5" y="2197" width="1.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="127.53" y="2207.5" ></text>
</g>
<g >
<title>`llvm::SimplifyGEPInst(llvm::Type*, llvm::ArrayRef&lt;llvm::Value*&gt; (2 samples, 0.08%)</title><rect x="744.6" y="5829" width="0.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="747.57" y="5839.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="232.0" y="3253" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="235.01" y="3263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="410.8" y="4725" width="1.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="413.84" y="4735.5" ></text>
</g>
<g >
<title>`core::core__file_scope(gctools::smart_ptr&lt;core::T_O&gt;, gctools:: (1 samples, 0.04%)</title><rect x="48.5" y="5477" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="51.49" y="5487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (55 samples, 2.19%)</title><rect x="60.7" y="5189" width="25.8" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="63.69" y="5199.5" >`..</text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="610.8" y="5365" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="613.80" y="5375.5" ></text>
</g>
<g >
<title>`wrapped_core__ltvc_write_object_T_spT_spT_spsize_t (1 samples, 0.04%)</title><rect x="684.0" y="5941" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="687.02" y="5951.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="379.9" y="5141" width="3.7" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="382.86" y="5151.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="382.2" y="4661" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="385.21" y="4671.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="91.7" y="3957" width="7.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="94.67" y="3967.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="661.0" y="5493" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="664.02" y="5503.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (64 samples, 2.55%)</title><rect x="15.2" y="5493" width="30.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="18.16" y="5503.5" >`C..</text>
</g>
<g >
<title>0x12262f094 (9 samples, 0.36%)</title><rect x="276.6" y="1573" width="4.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="279.60" y="1583.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorBase::grow_pod(void*, unsigned long, unsigned  (1 samples, 0.04%)</title><rect x="719.7" y="5829" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="722.69" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="284.6" y="1141" width="2.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="287.58" y="1151.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="294.0" y="4373" width="2.8" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="296.97" y="4383.5" ></text>
</g>
<g >
<title>`OPTIMIZED-GRAMMAR-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="60.2" y="5237" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="63.22" y="5247.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="350.3" y="5349" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="353.29" y="5359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="125.9" y="2629" width="1.0" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="128.93" y="2639.5" ></text>
</g>
<g >
<title>0x1225e5094 (3 samples, 0.12%)</title><rect x="285.5" y="437" width="1.4" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="288.52" y="447.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (145 samples, 5.77%)</title><rect x="59.8" y="5333" width="68.0" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="62.75" y="5343.5" >`CONVER..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="417.9" y="645" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="420.88" y="655.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="416.5" y="4773" width="0.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="419.48" y="4783.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="2405" width="4.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="279.60" y="2415.5" ></text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (1 samples, 0.04%)</title><rect x="624.9" y="4949" width="0.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="627.88" y="4959.5" ></text>
</g>
<g >
<title>`core::lisp_true() (1 samples, 0.04%)</title><rect x="429.1" y="2165" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="432.15" y="2175.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (4 samples, 0.16%)</title><rect x="315.6" y="5317" width="1.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="318.56" y="5327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="247.5" y="117" width="1.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="250.50" y="127.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.04%)</title><rect x="203.9" y="853" width="0.4" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="206.85" y="863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3925" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="415.25" y="3935.5" ></text>
</g>
<g >
<title>`FIND-OR-CREATE-LOCATION^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="314.6" y="4981" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="317.62" y="4991.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="125.9" y="2549" width="1.0" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="128.93" y="2559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="278.9" y="341" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="281.95" y="351.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (4 samples, 0.16%)</title><rect x="282.7" y="1717" width="1.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="285.70" y="1727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="421.2" y="3909" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="424.17" y="3919.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="49.9" y="5029" width="1.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="52.90" y="5039.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="670.4" y="5781" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="673.41" y="5791.5" ></text>
</g>
<g >
<title>`ADD-ATOMS^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="24.1" y="4085" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="27.08" y="4095.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="316.0" y="5221" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="319.03" y="5231.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="452.6" y="5653" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="455.62" y="5663.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="108.1" y="3509" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="111.10" y="3519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="2053" width="5.6" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="236.89" y="2063.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="410.8" y="4645" width="1.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="413.84" y="4655.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="405.2" y="5573" width="0.9" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="408.21" y="5583.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="467.6" y="5781" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="470.64" y="5791.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="423.5" y="1685" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="426.52" y="1695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="409.4" y="4213" width="1.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="412.44" y="4223.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="164.9" y="4165" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="167.89" y="4175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="408.0" y="4677" width="2.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="411.03" y="4687.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (30 samples, 1.19%)</title><rect x="15.6" y="5125" width="14.1" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="18.63" y="5135.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="268.2" y="1461" width="0.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="271.15" y="1471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (49 samples, 1.95%)</title><rect x="410.8" y="5221" width="23.0" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="413.84" y="5231.5" >`..</text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (5 samples, 0.20%)</title><rect x="417.4" y="1333" width="2.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="420.41" y="1343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="268.2" y="1445" width="0.4" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="271.15" y="1455.5" ></text>
</g>
<g >
<title>`FUDGE-VALUES-TYPE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="282.7" y="1173" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="285.70" y="1183.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="926.7" y="5813" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="929.68" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="268.2" y="1349" width="0.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="271.15" y="1359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="3957" width="0.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="414.78" y="3967.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="92.1" y="3461" width="0.5" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="95.14" y="3471.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="276.6" y="1205" width="2.8" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="279.60" y="1215.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="249.4" y="469" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="252.38" y="479.5" ></text>
</g>
<g >
<title>`llvm::PointerType::get(llvm::Type*, unsigned int) (1 samples, 0.04%)</title><rect x="845.0" y="5765" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="848.01" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="4053" width="1.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="411.03" y="4063.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="431.0" y="2021" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="434.03" y="2031.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="332.9" y="4261" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="335.93" y="4271.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="421.6" y="2245" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="424.64" y="2255.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="104.3" y="3589" width="7.6" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="107.34" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-FILE-SERIAL^COMPILER^FN^^ (2,028 samples, 80.67%)</title><rect x="10.0" y="6069" width="951.9" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="13.00" y="6079.5" >`COMPILE-FILE-SERIAL^COMPILER^FN^^</text>
</g>
<g >
<title>`CST-TO-AST^CLEAVIR-CST-TO-AST^FN^^ (11 samples, 0.44%)</title><rect x="276.1" y="4565" width="5.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="279.13" y="4575.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.08%)</title><rect x="424.9" y="2181" width="1.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="427.92" y="2191.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="180.4" y="581" width="2.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="183.38" y="591.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="242.8" y="1941" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="245.81" y="1951.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="235.3" y="277" width="4.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="238.30" y="287.5" ></text>
</g>
<g >
<title>`core::core__generalp(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.08%)</title><rect x="374.2" y="5797" width="1.0" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="377.23" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="268.6" y="1301" width="3.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="271.62" y="1311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="39.1" y="4309" width="0.9" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="42.10" y="4319.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="422.1" y="2293" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="425.11" y="2303.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (2 samples, 0.08%)</title><rect x="943.1" y="5909" width="0.9" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="946.11" y="5919.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.08%)</title><rect x="243.7" y="469" width="1.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="246.75" y="479.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="419.3" y="869" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="422.29" y="879.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="417.9" y="741" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="420.88" y="751.5" ></text>
</g>
<g >
<title>`MAKE-TOP-LEVEL-ENTER-INSTRUCTION^CLEAVIR-IR^FN^^ (3 samples, 0.12%)</title><rect x="370.0" y="5845" width="1.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="373.01" y="5855.5" ></text>
</g>
<g >
<title>`__cxa_throw (2 samples, 0.08%)</title><rect x="513.6" y="5701" width="1.0" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="516.64" y="5711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="122.6" y="3573" width="4.7" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="125.65" y="3583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4069" width="1.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="39.28" y="4079.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (514 samples, 20.45%)</title><rect x="58.3" y="5813" width="241.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="61.35" y="5823.5" >`CONVERT^CLEAVIR-CST-TO-AST^((:A..</text>
</g>
<g >
<title>`BUILD-CST^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.08%)</title><rect x="170.5" y="1637" width="1.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="173.53" y="1647.5" ></text>
</g>
<g >
<title>`llvm::Value::getName() const (1 samples, 0.04%)</title><rect x="930.9" y="5893" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="933.91" y="5903.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeAllocSize(llvm::Type*) const (1 samples, 0.04%)</title><rect x="744.1" y="5813" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="747.10" y="5823.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.04%)</title><rect x="651.6" y="5429" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="654.63" y="5439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="285.5" y="885" width="1.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="288.52" y="895.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (15 samples, 0.60%)</title><rect x="232.5" y="2693" width="7.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="235.48" y="2703.5" ></text>
</g>
<g >
<title>`llvm::APInt::APInt(unsigned int, unsigned long long, bool) (1 samples, 0.04%)</title><rect x="693.9" y="5781" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="696.87" y="5791.5" ></text>
</g>
<g >
<title>`combineInstructionsOverFunction(llvm::Function&amp;, llvm::InstComb (130 samples, 5.17%)</title><rect x="858.2" y="5877" width="61.0" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="861.15" y="5887.5" >`combi..</text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="79.0" y="4949" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="82.00" y="4959.5" ></text>
</g>
<g >
<title>`REFERENCED-CONS-TABLE^CONCRETE-SYNTAX-TREE^FN^^ (3 samples, 0.12%)</title><rect x="292.1" y="5605" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="295.09" y="5615.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (19 samples, 0.76%)</title><rect x="259.2" y="1621" width="9.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="262.24" y="1631.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="415.1" y="4453" width="0.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="418.07" y="4463.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass* (3 samples, 0.12%)</title><rect x="711.7" y="5813" width="1.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="714.71" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="305.7" y="5781" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="308.70" y="5791.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.08%)</title><rect x="119.4" y="3477" width="0.9" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="122.36" y="3487.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="344.2" y="4821" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="347.19" y="4831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1701" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="428.86" y="1711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="294.9" y="3829" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="297.91" y="3839.5" ></text>
</g>
<g >
<title>`llvm::Twine::toVector(llvm::SmallVectorImpl&lt;char&gt;&amp;) const (1 samples, 0.04%)</title><rect x="769.4" y="5765" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="772.44" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="407.6" y="5269" width="3.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="410.56" y="5279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="1525" width="4.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="279.60" y="1535.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.04%)</title><rect x="139.5" y="4293" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="142.55" y="4303.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (43 samples, 1.71%)</title><rect x="252.2" y="3797" width="20.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="255.20" y="3807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="1653" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="434.96" y="1663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="92.1" y="3221" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="95.14" y="3231.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="462.0" y="5813" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="465.00" y="5823.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.04%)</title><rect x="389.7" y="3637" width="0.5" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="392.72" y="3647.5" ></text>
</g>
<g >
<title>`ITEM-EQUAL^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-ITEM))^MET (1 samples, 0.04%)</title><rect x="161.6" y="4229" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="164.61" y="4239.5" ></text>
</g>
<g >
<title>`core::utf_8_decoder(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="22.7" y="3861" width="0.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="25.67" y="3871.5" ></text>
</g>
<g >
<title>`llvm::Triple::Triple(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="346.1" y="4901" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="349.07" y="4911.5" ></text>
</g>
<g >
<title>`EXECUTE-LINK-LIBRARY^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="952.5" y="5989" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="955.50" y="5999.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="627.2" y="5077" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="630.22" y="5087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="4117" width="1.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="411.03" y="4127.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="3797" width="1.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="411.03" y="3807.5" ></text>
</g>
<g >
<title>0x1225e9094 (2 samples, 0.08%)</title><rect x="251.3" y="3445" width="0.9" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="254.26" y="3455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="391.6" y="2821" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="394.60" y="2831.5" ></text>
</g>
<g >
<title>`IRC-FUNCTION-CREATE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="676.5" y="5813" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="679.51" y="5823.5" ></text>
</g>
<g >
<title>`READ-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="28.8" y="5045" width="0.4" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="31.77" y="5055.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::BasicBlock(llvm::LLVMContext&amp;, llvm::Twine co (1 samples, 0.04%)</title><rect x="350.8" y="5317" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="353.76" y="5327.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="431.5" y="3461" width="1.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="434.50" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="392.1" y="4037" width="0.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="395.07" y="4047.5" ></text>
</g>
<g >
<title>`wrapped_cl__type_of_T_sp (1 samples, 0.04%)</title><rect x="233.4" y="2181" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="236.42" y="2191.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="1909" width="4.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="279.60" y="1919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.9" y="3125" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="396.95" y="3135.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (40 samples, 1.59%)</title><rect x="232.0" y="3429" width="18.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="235.01" y="3439.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="342.3" y="4597" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="345.32" y="4607.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="334.8" y="4501" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="337.81" y="4511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="409.4" y="2277" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="412.44" y="2287.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="51.3" y="4853" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="54.30" y="4863.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (57 samples, 2.27%)</title><rect x="204.3" y="773" width="26.8" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="207.32" y="783.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="413.7" y="3909" width="0.4" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="416.66" y="3919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="1829" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="434.96" y="1839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="421.6" y="2917" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="424.64" y="2927.5" ></text>
</g>
<g >
<title>`CONVERT-LET*^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="3541" width="4.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="279.60" y="3551.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="393.0" y="4213" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="396.01" y="4223.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="138.6" y="4325" width="0.5" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="141.61" y="4335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.52%)</title><rect x="427.3" y="3797" width="6.1" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="430.27" y="3807.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (6 samples, 0.24%)</title><rect x="318.8" y="5477" width="2.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="321.85" y="5487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="427.3" y="2661" width="4.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="430.27" y="2671.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="1877" width="7.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="246.28" y="1887.5" ></text>
</g>
<g >
<title>`TYPE-OF^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="171.9" y="1541" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="174.93" y="1551.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.04%)</title><rect x="354.0" y="5141" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="357.05" y="5151.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="379.4" y="5109" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="382.40" y="5119.5" ></text>
</g>
<g >
<title>`TRANSFORM-COMPOUND^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="122.6" y="2501" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="125.65" y="2511.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (4 samples, 0.16%)</title><rect x="122.6" y="2773" width="1.9" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="125.65" y="2783.5" ></text>
</g>
<g >
<title>`std::__1::locale::__global() (1 samples, 0.04%)</title><rect x="346.5" y="4917" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="349.54" y="4927.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (25 samples, 0.99%)</title><rect x="100.6" y="3893" width="11.7" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="103.59" y="3903.5" ></text>
</g>
<g >
<title>`INTERPRET-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="43.3" y="4981" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="46.33" y="4991.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (19 samples, 0.76%)</title><rect x="259.2" y="1829" width="9.0" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="262.24" y="1839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="422.1" y="2901" width="0.5" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="425.11" y="2911.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="649.3" y="5205" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="652.28" y="5215.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="324.9" y="4933" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="327.95" y="4943.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="282.7" y="1429" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="285.70" y="1439.5" ></text>
</g>
<g >
<title>`llvm::AssumptionCache::assumptionsFor(llvm::Value const*) (1 samples, 0.04%)</title><rect x="914.9" y="5781" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="917.95" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="172.4" y="1797" width="5.6" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="175.40" y="1807.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="765.2" y="5637" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="768.22" y="5647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="386.4" y="3301" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="389.44" y="3311.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.04%)</title><rect x="563.4" y="5653" width="0.5" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="566.39" y="5663.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;std::__1::pair&lt;llvm::Val (1 samples, 0.04%)</title><rect x="945.5" y="5845" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="948.46" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="379.9" y="4837" width="2.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="382.86" y="4847.5" ></text>
</g>
<g >
<title>`OPTIMIZED-FUNCALL-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="413.7" y="3733" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="416.66" y="3743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="38.2" y="4213" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="41.16" y="4223.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="114.7" y="3653" width="7.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="117.67" y="3663.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (2 samples, 0.08%)</title><rect x="943.1" y="5845" width="0.9" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="946.11" y="5855.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="281.3" y="4181" width="5.6" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="284.30" y="4191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (43 samples, 1.71%)</title><rect x="252.2" y="3813" width="20.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="255.20" y="3823.5" ></text>
</g>
<g >
<title>`ITEM-EQUAL^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-ITEM))^MET (1 samples, 0.04%)</title><rect x="186.5" y="101" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="189.48" y="111.5" ></text>
</g>
<g >
<title>`core::SourcePosInfo_O::create(unsigned int, unsigned long, unsi (1 samples, 0.04%)</title><rect x="325.9" y="4661" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="328.89" y="4671.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.04%)</title><rect x="749.3" y="5605" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="752.26" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="400.0" y="4725" width="2.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="403.05" y="4735.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="421.6" y="2997" width="1.0" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="424.64" y="3007.5" ></text>
</g>
<g >
<title>0x11a479094 (304 samples, 12.09%)</title><rect x="130.6" y="4773" width="142.7" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="133.63" y="4783.5" >0x11a479094</text>
</g>
<g >
<title>`core::Cache_O::vector_hash_key(gctools::Vec0&lt;gctools::smart_ptr (1 samples, 0.04%)</title><rect x="602.3" y="5445" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="605.35" y="5455.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.04%)</title><rect x="789.2" y="5733" width="0.4" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="792.16" y="5743.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="123.6" y="1285" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="126.59" y="1295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="400.0" y="4549" width="2.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="403.05" y="4559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="294.0" y="5237" width="3.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="296.97" y="5247.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="247.0" y="501" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="250.03" y="511.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="397.7" y="3909" width="1.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="400.70" y="3919.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="894.8" y="5765" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="897.77" y="5775.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.04%)</title><rect x="202.4" y="677" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="205.44" y="687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.0" y="4789" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="419.01" y="4799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3461" width="1.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="424.64" y="3471.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="629.6" y="5173" width="0.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="632.57" y="5183.5" ></text>
</g>
<g >
<title>`HIR-&gt;MIR^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="334.8" y="4549" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="337.81" y="4559.5" ></text>
</g>
<g >
<title>`llvm::isIdentifiedObject(llvm::Value const*) (1 samples, 0.04%)</title><rect x="813.6" y="5685" width="0.4" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="816.56" y="5695.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="398.2" y="3333" width="0.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="401.17" y="3343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="423.0" y="3029" width="1.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="426.05" y="3039.5" ></text>
</g>
<g >
<title>`llvm::AliasSetTracker::getAliasSetForPointer(llvm::Value*, unsi (1 samples, 0.04%)</title><rect x="780.2" y="5797" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="783.24" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (108 samples, 4.30%)</title><rect x="180.4" y="1621" width="50.7" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="183.38" y="1631.5" >`CONV..</text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout con (9 samples, 0.36%)</title><rect x="908.4" y="5813" width="4.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="911.38" y="5823.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2693" width="4.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="285.70" y="2703.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="1717" width="9.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="262.24" y="1727.5" ></text>
</g>
<g >
<title>`OPTIMIZED-GLOBAL-FUNCTION-INFO-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="336.2" y="4245" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="339.21" y="4255.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (40 samples, 1.59%)</title><rect x="232.0" y="3941" width="18.8" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="235.01" y="3951.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="26.0" y="4341" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="28.96" y="4351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="388.3" y="3893" width="3.8" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="391.31" y="3903.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (55 samples, 2.19%)</title><rect x="60.7" y="5237" width="25.8" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="63.69" y="5247.5" >`..</text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (4 samples, 0.16%)</title><rect x="257.4" y="1781" width="1.8" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="260.36" y="1791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.9" y="2357" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="412.90" y="2367.5" ></text>
</g>
<g >
<title>`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="315.1" y="5349" width="0.5" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="318.09" y="5359.5" ></text>
</g>
<g >
<title>`std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt; (1 samples, 0.04%)</title><rect x="677.0" y="5701" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="679.98" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="396.3" y="4661" width="3.7" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="399.29" y="4671.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="121.7" y="3493" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="124.71" y="3503.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="180.4" y="101" width="2.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="183.38" y="111.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="17.5" y="3941" width="0.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="20.51" y="3951.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="252.2" y="3093" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="255.20" y="3103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="417.4" y="997" width="1.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="420.41" y="1007.5" ></text>
</g>
<g >
<title>`startup(int, char**, bool&amp;, int&amp;, int&amp;) (2,028 samples, 80.67%)</title><rect x="10.0" y="6341" width="951.9" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="13.00" y="6351.5" >`startup(int, char**, bool&amp;, int&amp;, int&amp;)</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="413.7" y="4853" width="1.8" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="416.66" y="4863.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="382.2" y="4245" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="385.21" y="4255.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="4709" width="2.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="296.97" y="4719.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (12 samples, 0.48%)</title><rect x="233.9" y="2373" width="5.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="236.89" y="2383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="2453" width="1.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="426.52" y="2463.5" ></text>
</g>
<g >
<title>0x1225e5094 (4 samples, 0.16%)</title><rect x="165.4" y="3701" width="1.8" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="168.36" y="3711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="400.5" y="4165" width="1.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="403.52" y="4175.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (16 samples, 0.64%)</title><rect x="332.5" y="4677" width="7.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="335.46" y="4687.5" ></text>
</g>
<g >
<title>`llvm::MemorySSA::buildMemorySSA() (9 samples, 0.36%)</title><rect x="786.8" y="5861" width="4.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="789.81" y="5871.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="593.0" y="5845" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="595.96" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (150 samples, 5.97%)</title><rect x="598.6" y="5701" width="70.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="601.59" y="5711.5" >`core::..</text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (2 samples, 0.08%)</title><rect x="34.4" y="4693" width="0.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="37.41" y="4703.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="417.9" y="517" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="420.88" y="527.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="424.9" y="1077" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="427.92" y="1087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="381.7" y="4341" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="384.74" y="4351.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="425.4" y="1445" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="428.39" y="1455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (145 samples, 5.77%)</title><rect x="59.8" y="5637" width="68.0" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="62.75" y="5647.5" >`core::..</text>
</g>
<g >
<title>`llvm::StringMapImpl::RemoveKey(llvm::StringRef) (1 samples, 0.04%)</title><rect x="950.6" y="5861" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="953.62" y="5871.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="412.3" y="3077" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="415.25" y="3087.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (22 samples, 0.88%)</title><rect x="34.4" y="5237" width="10.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="37.41" y="5247.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="257.8" y="1605" width="1.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="260.83" y="1615.5" ></text>
</g>
<g >
<title>`core::cl__get_output_stream_string(gctools::smart_ptr&lt;core::T_O (1 samples, 0.04%)</title><rect x="18.9" y="3429" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="21.92" y="3439.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="350.8" y="5301" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="353.76" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="410.8" y="4437" width="1.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="413.84" y="4447.5" ></text>
</g>
<g >
<title>`HOIST-AST^CLASP-CLEAVIR^FN^^ (17 samples, 0.68%)</title><rect x="332.5" y="4741" width="7.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="335.46" y="4751.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="92.6" y="3333" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="95.61" y="3343.5" ></text>
</g>
<g >
<title>`core::clasp_to_fixnum(gctools::smart_ptr&lt;core::Integer_O&gt;) (1 samples, 0.04%)</title><rect x="424.0" y="1413" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="426.99" y="1423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="289.7" y="5573" width="1.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="292.75" y="5583.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="279.4" y="565" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="282.42" y="575.5" ></text>
</g>
<g >
<title>`core::lambdaListHandler_createBindings(gctools::smart_ptr&lt;core: (1 samples, 0.04%)</title><rect x="635.7" y="5253" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="638.67" y="5263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="4133" width="1.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="424.64" y="4143.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (27 samples, 1.07%)</title><rect x="68.7" y="5013" width="12.6" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="71.67" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (8 samples, 0.32%)</title><rect x="417.4" y="2869" width="3.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="420.41" y="2879.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (4 samples, 0.16%)</title><rect x="410.8" y="4677" width="1.9" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="413.84" y="4687.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.04%)</title><rect x="514.1" y="5653" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="517.11" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="1541" width="4.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="279.60" y="1551.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (27 samples, 1.07%)</title><rect x="618.8" y="5349" width="12.6" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="621.77" y="5359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="282.7" y="1413" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="285.70" y="1423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="2277" width="5.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="236.89" y="2287.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (15 samples, 0.60%)</title><rect x="243.3" y="1253" width="7.0" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="246.28" y="1263.5" ></text>
</g>
<g >
<title>`llvm::Loop::isRecursivelyLCSSAForm(llvm::DominatorTree&amp;, llvm:: (1 samples, 0.04%)</title><rect x="920.6" y="5877" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="923.58" y="5887.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="397.7" y="3813" width="1.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="400.70" y="3823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2245" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="412.90" y="2255.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="430.1" y="1669" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="433.09" y="1679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.4" y="2965" width="0.5" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="412.44" y="2975.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="56.5" y="5797" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="59.47" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="172.4" y="1173" width="5.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="175.40" y="1183.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="49.9" y="4437" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="52.90" y="4447.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (48 samples, 1.91%)</title><rect x="180.4" y="1173" width="22.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="183.38" y="1183.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="167.7" y="1029" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="170.71" y="1039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2261" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="412.90" y="2271.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="287.4" y="4773" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="290.40" y="4783.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="279.9" y="213" width="0.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="282.89" y="223.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="235.3" y="613" width="4.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="238.30" y="623.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (8 samples, 0.32%)</title><rect x="336.2" y="4645" width="3.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="339.21" y="4655.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (35 samples, 1.39%)</title><rect x="15.6" y="5317" width="16.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="18.63" y="5327.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.04%)</title><rect x="24.1" y="4005" width="0.5" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="27.08" y="4015.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="231.5" y="3989" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="234.54" y="3999.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="235.3" y="709" width="4.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="238.30" y="719.5" ></text>
</g>
<g >
<title>`core::core__file_scope(gctools::smart_ptr&lt;core::T_O&gt;, gctools:: (1 samples, 0.04%)</title><rect x="34.9" y="4133" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="37.88" y="4143.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="286.9" y="4853" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="289.93" y="4863.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (12 samples, 0.48%)</title><rect x="92.1" y="3701" width="5.7" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="95.14" y="3711.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.04%)</title><rect x="239.5" y="2885" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="242.52" y="2895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3701" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="404.93" y="3711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="293.5" y="5589" width="3.8" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="296.50" y="5599.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="318.4" y="5445" width="0.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="321.38" y="5455.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (2 samples, 0.08%)</title><rect x="472.8" y="5541" width="0.9" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="475.80" y="5551.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="424.5" y="3173" width="0.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="427.46" y="3183.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="1301" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="428.86" y="1311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="423.0" y="3941" width="10.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="426.05" y="3951.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="619.7" y="5253" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="622.71" y="5263.5" ></text>
</g>
<g >
<title>`wrapped_getInt8Ty_llvm__LLVMContext_ (2 samples, 0.08%)</title><rect x="300.5" y="5893" width="1.0" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="303.54" y="5903.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.08%)</title><rect x="240.5" y="2965" width="0.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="243.46" y="2975.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="4309" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="408.68" y="4319.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (146 samples, 5.81%)</title><rect x="59.8" y="5717" width="68.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="62.75" y="5727.5" >`CONVER..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^((:BEFORE) (T T T T))^METHOD (11 samples, 0.44%)</title><rect x="276.1" y="4741" width="5.2" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="279.13" y="4751.5" ></text>
</g>
<g >
<title>`core::core__generalp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="168.6" y="597" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="171.65" y="607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (48 samples, 1.91%)</title><rect x="180.4" y="965" width="22.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="183.38" y="975.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="182.7" y="261" width="1.0" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="185.73" y="271.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="316.5" y="5205" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="319.50" y="5215.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="101" width="1.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="288.52" y="111.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="665.2" y="5429" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="668.24" y="5439.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::addAttributes(llvm::LLVMContext&amp;, unsigned (1 samples, 0.04%)</title><rect x="342.8" y="4549" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="345.78" y="4559.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="416.5" y="4229" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="419.48" y="4239.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.04%)</title><rect x="513.2" y="5653" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="516.17" y="5663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="202.9" y="965" width="1.4" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="205.91" y="975.5" ></text>
</g>
<g >
<title>`%SIZE_T^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="665.7" y="5637" width="0.5" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="668.71" y="5647.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.08%)</title><rect x="373.3" y="5797" width="0.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="376.29" y="5807.5" ></text>
</g>
<g >
<title>`MAKE-FUNCTION-INFO-MAP^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="328.2" y="4485" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="331.23" y="4495.5" ></text>
</g>
<g >
<title>`llvm::TypeBasedAAResult::pointsToConstantMemory(llvm::MemoryLoc (1 samples, 0.04%)</title><rect x="788.2" y="5781" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="791.22" y="5791.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="327.3" y="4501" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="330.30" y="4511.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (20 samples, 0.80%)</title><rect x="16.6" y="4485" width="9.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="19.57" y="4495.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="51.3" y="4885" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="54.30" y="4895.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="104.8" y="3477" width="1.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="107.81" y="3487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (37 samples, 1.47%)</title><rect x="416.5" y="5189" width="17.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="419.48" y="5199.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="13.8" y="5477" width="0.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="16.75" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-WRONG-NUMBER-ARGUMENTS-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="662.9" y="5605" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="665.90" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1349" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="428.86" y="1359.5" ></text>
</g>
<g >
<title>`TPL^CORE^FN^^ (2,028 samples, 80.67%)</title><rect x="10.0" y="6181" width="951.9" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="13.00" y="6191.5" >`TPL^CORE^FN^^</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.7" y="981" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="430.74" y="991.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (3 samples, 0.12%)</title><rect x="649.8" y="5349" width="1.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="652.75" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="1397" width="0.4" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="434.96" y="1407.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="428.7" y="2117" width="0.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="431.68" y="2127.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="235.3" y="517" width="4.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="238.30" y="527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (22 samples, 0.88%)</title><rect x="384.1" y="4597" width="10.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="387.09" y="4607.5" ></text>
</g>
<g >
<title>`core::Str8Ns_O::make(unsigned long, unsigned char, bool, gctool (1 samples, 0.04%)</title><rect x="671.8" y="5717" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="674.81" y="5727.5" ></text>
</g>
<g >
<title>`_platform_memcmp (1 samples, 0.04%)</title><rect x="123.6" y="421" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="126.59" y="431.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::EarlyCSE::run() (5 samples, 0.20%)</title><rect x="698.1" y="5877" width="2.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="701.10" y="5887.5" ></text>
</g>
<g >
<title>`wrapped_APInt_O__makeAPIntWidth_core__Integer_spuintbool (1 samples, 0.04%)</title><rect x="640.4" y="5365" width="0.4" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="643.37" y="5375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (312 samples, 12.41%)</title><rect x="129.7" y="5221" width="146.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="132.69" y="5231.5" >`core::clos__inter..</text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (561 samples, 22.32%)</title><rect x="685.4" y="5973" width="263.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="688.43" y="5983.5" >`core::SingleDispatchMethodFunction..</text>
</g>
<g >
<title>`OPTIMIZED-BASIC-BLOCK-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="593.9" y="5829" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="596.90" y="5839.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="247.5" y="549" width="1.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="250.50" y="559.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="34.9" y="4341" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="37.88" y="4351.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeWrapperPass::runOnFunction(llvm::Function&amp;) (1 samples, 0.04%)</title><rect x="838.9" y="5829" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="841.91" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="396.3" y="4853" width="3.7" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="399.29" y="4863.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="417.9" y="357" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="420.88" y="367.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2933" width="4.2" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="285.70" y="2943.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="557.3" y="5797" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="560.29" y="5807.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="2005" width="50.7" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="183.38" y="2015.5" >`COMB..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="321.7" y="5301" width="1.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="324.66" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="430.6" y="1941" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="433.56" y="1951.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.04%)</title><rect x="534.3" y="5749" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="537.29" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (108 samples, 4.30%)</title><rect x="180.4" y="2277" width="50.7" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="183.38" y="2287.5" >`core..</text>
</g>
<g >
<title>0x11a477094 (4 samples, 0.16%)</title><rect x="282.7" y="1557" width="1.9" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="285.70" y="1567.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="833.7" y="5813" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="836.75" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="398.2" y="2997" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="401.17" y="3007.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="242.8" y="3061" width="8.0" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="245.81" y="3071.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="423.0" y="2565" width="1.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="426.05" y="2575.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="3909" width="5.6" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="284.30" y="3919.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="123.6" y="917" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="126.59" y="927.5" ></text>
</g>
<g >
<title>`FUNCTION-TYPE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="252.7" y="3301" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="255.67" y="3311.5" ></text>
</g>
<g >
<title>`HOIST-LOAD-TIME-VALUE^CLASP-CLEAVIR-AST^FN^^ (38 samples, 1.51%)</title><rect x="325.4" y="4869" width="17.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="328.42" y="4879.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (1 samples, 0.04%)</title><rect x="231.5" y="3557" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="234.54" y="3567.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="332.9" y="4133" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="335.93" y="4143.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4517" width="1.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="39.28" y="4527.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.04%)</title><rect x="23.1" y="4085" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="26.14" y="4095.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="21.3" y="3749" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="24.26" y="3759.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="34.4" y="4709" width="0.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="37.41" y="4719.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (1 samples, 0.04%)</title><rect x="20.3" y="3205" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="23.33" y="3215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="393.5" y="3717" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="396.48" y="3727.5" ></text>
</g>
<g >
<title>`%SIGNAL^CORE^FN^^ (1 samples, 0.04%)</title><rect x="125.0" y="1749" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="128.00" y="1759.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (1 samples, 0.04%)</title><rect x="420.2" y="1909" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="423.23" y="1919.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="251.7" y="3029" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="254.73" y="3039.5" ></text>
</g>
<g >
<title>`VAR-TO-LEXICAL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="132.0" y="4453" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="135.04" y="4463.5" ></text>
</g>
<g >
<title>0x11a477094 (19 samples, 0.76%)</title><rect x="259.2" y="981" width="9.0" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="262.24" y="991.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.04%)</title><rect x="252.7" y="3269" width="0.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="255.67" y="3279.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="268.6" y="373" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="271.62" y="383.5" ></text>
</g>
<g >
<title>`MAKE-SOURCE-RANGE^ECLECTOR.PARSE-RESULT^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="56.0" y="5669" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="59.00" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="409.9" y="3093" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="412.90" y="3103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="233.0" y="2389" width="0.9" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="235.95" y="2399.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="609.9" y="5301" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="612.86" y="5311.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldConstant(llvm::Constant const*, llvm::DataLay (6 samples, 0.24%)</title><rect x="722.0" y="5861" width="2.9" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="725.04" y="5871.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.04%)</title><rect x="859.6" y="5765" width="0.4" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="862.56" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="421.2" y="3829" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="424.17" y="3839.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="92.1" y="3093" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="95.14" y="3103.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (2 samples, 0.08%)</title><rect x="165.8" y="1205" width="1.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="168.83" y="1215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="1797" width="0.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="434.96" y="1807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3669" width="1.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="411.03" y="3679.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="2725" width="0.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="403.99" y="2735.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="254.1" y="2949" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="257.07" y="2959.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.20%)</title><rect x="180.4" y="341" width="2.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="183.38" y="351.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="168.2" y="1333" width="1.9" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="171.18" y="1343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="4053" width="0.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="415.25" y="4063.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (36 samples, 1.43%)</title><rect x="416.9" y="5013" width="16.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="419.95" y="5023.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="1445" width="5.6" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="236.89" y="1455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="287.4" y="5221" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="290.40" y="5231.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (19 samples, 0.76%)</title><rect x="259.2" y="1429" width="9.0" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="262.24" y="1439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="3381" width="4.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="430.27" y="3391.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="356.4" y="5637" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="359.40" y="5647.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="321.2" y="5317" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="324.19" y="5327.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (48 samples, 1.91%)</title><rect x="180.4" y="1045" width="22.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="183.38" y="1055.5" >`..</text>
</g>
<g >
<title>`core::cl__special_operator_p(gctools::smart_ptr&lt;core::Symbol_O&gt; (1 samples, 0.04%)</title><rect x="58.8" y="5685" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="61.81" y="5695.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (136 samples, 5.41%)</title><rect x="167.2" y="2757" width="63.9" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="170.24" y="2767.5" >`CONVER..</text>
</g>
<g >
<title>`HOIST-AST^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="318.8" y="5429" width="1.0" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="321.85" y="5439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="318.4" y="5381" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="321.38" y="5391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="268.6" y="421" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="271.62" y="431.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (10 samples, 0.40%)</title><rect x="313.2" y="5653" width="4.7" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="316.21" y="5663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (46 samples, 1.83%)</title><rect x="250.8" y="4261" width="21.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="253.79" y="4271.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (8 samples, 0.32%)</title><rect x="417.4" y="4293" width="3.8" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="420.41" y="4303.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="25.5" y="4421" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="28.49" y="4431.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="773.7" y="5717" width="0.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="776.67" y="5727.5" ></text>
</g>
<g >
<title>0x11a477094 (6 samples, 0.24%)</title><rect x="294.0" y="4917" width="2.8" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="296.97" y="4927.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="385.0" y="4053" width="2.8" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="388.03" y="4063.5" ></text>
</g>
<g >
<title>`llvm::BranchProbabilityInfo::calcUnreachableHeuristics(llvm::Ba (1 samples, 0.04%)</title><rect x="852.1" y="5861" width="0.4" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="855.05" y="5871.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="282.7" y="1349" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="285.70" y="1359.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (5 samples, 0.20%)</title><rect x="344.7" y="5077" width="2.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="347.66" y="5087.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (41 samples, 1.63%)</title><rect x="469.5" y="5749" width="19.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="472.51" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="279.9" y="517" width="0.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="282.89" y="527.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="247.0" y="261" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="250.03" y="271.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="1733" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="423.70" y="1743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="314.6" y="5237" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="317.62" y="5247.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="610.8" y="5381" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="613.80" y="5391.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="454.0" y="5829" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="457.03" y="5839.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="365.8" y="5717" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="368.78" y="5727.5" ></text>
</g>
<g >
<title>`__cxa_rethrow (1 samples, 0.04%)</title><rect x="17.5" y="3957" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="20.51" y="3967.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (20 samples, 0.80%)</title><rect x="16.6" y="4549" width="9.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="19.57" y="4559.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (9 samples, 0.36%)</title><rect x="282.7" y="2709" width="4.2" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="285.70" y="2719.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="400.0" y="4917" width="2.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="403.05" y="4927.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (37 samples, 1.47%)</title><rect x="416.5" y="5141" width="17.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="419.48" y="5151.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (11 samples, 0.44%)</title><rect x="172.4" y="1301" width="5.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="175.40" y="1311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="425.9" y="3013" width="0.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="428.86" y="3023.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="769.9" y="5717" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="772.91" y="5727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="21.7" y="3877" width="1.0" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="24.73" y="3887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="409.4" y="3477" width="1.4" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="412.44" y="3487.5" ></text>
</g>
<g >
<title>`llvm::isInstructionTriviallyDead(llvm::Instruction*, llvm::Targ (1 samples, 0.04%)</title><rect x="917.3" y="5845" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="920.30" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="332.9" y="4165" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="335.93" y="4175.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="649.3" y="5317" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="652.28" y="5327.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="166.3" y="581" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="169.30" y="591.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="284.6" y="1445" width="2.3" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="287.58" y="1455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="424.9" y="1877" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="427.92" y="1887.5" ></text>
</g>
<g >
<title>`llvm::JumpThreadingPass::runImpl(llvm::Function&amp;, llvm::TargetL (10 samples, 0.40%)</title><rect x="700.4" y="5877" width="4.7" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="703.45" y="5887.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="49.9" y="4917" width="1.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="52.90" y="4927.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="428.7" y="1701" width="0.4" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="431.68" y="1711.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="754.9" y="5685" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="757.89" y="5695.5" ></text>
</g>
<g >
<title>`cc_unwind (2 samples, 0.08%)</title><rect x="33.5" y="5429" width="0.9" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="36.47" y="5439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="278.9" y="869" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="281.95" y="879.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.04%)</title><rect x="892.4" y="5669" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="895.42" y="5679.5" ></text>
</g>
<g >
<title>0x1225ef094 (1 samples, 0.04%)</title><rect x="167.7" y="1509" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="170.71" y="1519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2229" width="14.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="260.36" y="2239.5" ></text>
</g>
<g >
<title>`std::__1::enable_if&lt;!(std::is_array&lt;llvm::LazyBranchProbability (1 samples, 0.04%)</title><rect x="784.0" y="5877" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="786.99" y="5887.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.16%)</title><rect x="410.8" y="4853" width="1.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="413.84" y="4863.5" ></text>
</g>
<g >
<title>`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std:: (1 samples, 0.04%)</title><rect x="342.8" y="4485" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="345.78" y="4495.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="3301" width="4.2" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="285.70" y="3311.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::collectLastUses(llvm::SmallVectorImpl&lt; (1 samples, 0.04%)</title><rect x="927.6" y="5877" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="930.62" y="5887.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (10 samples, 0.40%)</title><rect x="327.3" y="4757" width="4.7" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="330.30" y="4767.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="349.8" y="5333" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="352.82" y="5343.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getABITypeAlignment(llvm::Type*) const (1 samples, 0.04%)</title><rect x="805.1" y="5605" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="808.12" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="336.7" y="4229" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="339.68" y="4239.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="317.4" y="5413" width="0.5" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="320.44" y="5423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="122.2" y="3861" width="5.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="125.18" y="3871.5" ></text>
</g>
<g >
<title>`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="709.8" y="5845" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="712.83" y="5855.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (41 samples, 1.63%)</title><rect x="469.5" y="5797" width="19.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="472.51" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="233.0" y="2373" width="0.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="235.95" y="2383.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="666.2" y="5589" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="669.18" y="5599.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getPointerDependencyFrom(llvm::M (23 samples, 0.91%)</title><rect x="804.6" y="5781" width="10.8" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="807.65" y="5791.5" ></text>
</g>
<g >
<title>`BUILD-CST^CONCRETE-SYNTAX-TREE^FN^^ (5 samples, 0.20%)</title><rect x="289.3" y="5605" width="2.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="292.28" y="5615.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T CST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="230.6" y="245" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="233.60" y="255.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="286.9" y="4469" width="0.5" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="289.93" y="4479.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (3 samples, 0.12%)</title><rect x="165.8" y="2261" width="1.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="168.83" y="2271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3685" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="411.03" y="3695.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="619.2" y="5253" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="622.24" y="5263.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.04%)</title><rect x="33.0" y="5189" width="0.5" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="36.00" y="5199.5" ></text>
</g>
<g >
<title>`wrapped_cl__truename_T_sp (1 samples, 0.04%)</title><rect x="953.0" y="5973" width="0.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="955.97" y="5983.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="423.5" y="2485" width="1.0" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="426.52" y="2495.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="165.8" y="2149" width="1.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="168.83" y="2159.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="3653" width="1.4" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="411.03" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (9 samples, 0.36%)</title><rect x="427.3" y="3701" width="4.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="430.27" y="3711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="171.5" y="1509" width="0.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="174.46" y="1519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="384.1" y="4709" width="10.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="387.09" y="4719.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((FUNCALL-INSTRUCTIO (10 samples, 0.40%)</title><rect x="644.1" y="5429" width="4.7" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="647.12" y="5439.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="386.9" y="3493" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="389.91" y="3503.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (1 samples, 0.04%)</title><rect x="247.0" y="725" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="250.03" y="735.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="3221" width="4.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="285.70" y="3231.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="3077" width="0.5" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="412.44" y="3087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="407.6" y="5205" width="3.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="410.56" y="5215.5" ></text>
</g>
<g >
<title>`CST-FROM-ELEMENT^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="327.3" y="4517" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="330.30" y="4527.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="231.5" y="3701" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="234.54" y="3711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="429.6" y="2085" width="1.0" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="432.62" y="2095.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.04%)</title><rect x="24.1" y="3973" width="0.5" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="27.08" y="3983.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatticeElement, llvm::D (1 samples, 0.04%)</title><rect x="695.8" y="5797" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="698.75" y="5807.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="55.1" y="5525" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="58.06" y="5535.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="3813" width="1.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="411.03" y="3823.5" ></text>
</g>
<g >
<title>`__sfvwrite (1 samples, 0.04%)</title><rect x="409.9" y="1685" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="412.90" y="1695.5" ></text>
</g>
<g >
<title>`llvm::wouldInstructionBeTriviallyDead(llvm::Instruction*, llvm: (1 samples, 0.04%)</title><rect x="779.3" y="5861" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="782.30" y="5871.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="84.6" y="4869" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="87.63" y="4879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="4021" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="404.93" y="4031.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="92.1" y="3557" width="1.9" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="95.14" y="3567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="981" width="26.8" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="207.32" y="991.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.0" y="2277" width="0.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="411.97" y="2287.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (16 samples, 0.64%)</title><rect x="260.6" y="357" width="7.6" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="263.64" y="367.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="535.2" y="5781" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="538.23" y="5791.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (3 samples, 0.12%)</title><rect x="243.3" y="693" width="1.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="246.28" y="703.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="233.9" y="309" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="236.89" y="319.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="960.5" y="5829" width="0.4" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="963.48" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="410.8" y="4261" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="413.84" y="4271.5" ></text>
</g>
<g >
<title>`IRC-GEP^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="656.8" y="5525" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="659.79" y="5535.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="49.9" y="4821" width="1.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="52.90" y="4831.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (1 samples, 0.04%)</title><rect x="335.7" y="4357" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="338.74" y="4367.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="343.7" y="4821" width="0.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="346.72" y="4831.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (2 samples, 0.08%)</title><rect x="808.9" y="5589" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="811.87" y="5599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="49.9" y="4725" width="0.9" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="52.90" y="4735.5" ></text>
</g>
<g >
<title>`APPEND^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="417.4" y="885" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="420.41" y="895.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="282.7" y="2341" width="4.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="285.70" y="2351.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="17.0" y="4373" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="20.04" y="4383.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (2 samples, 0.08%)</title><rect x="279.9" y="261" width="0.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="282.89" y="271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="2293" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="428.86" y="2303.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (31 samples, 1.23%)</title><rect x="257.4" y="2773" width="14.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="260.36" y="2783.5" ></text>
</g>
<g >
<title>`COMPILE-LAMBDA-LIST-CODE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="626.3" y="5189" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="629.28" y="5199.5" ></text>
</g>
<g >
<title>`core::LambdaListHandler_O::createBindingsInScopeVaList(unsigned (1 samples, 0.04%)</title><rect x="648.8" y="5317" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="651.81" y="5327.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="26.4" y="4645" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="29.43" y="4655.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="234.8" y="485" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="237.83" y="495.5" ></text>
</g>
<g >
<title>`llvm::GVN::processBlock(llvm::BasicBlock*) (67 samples, 2.67%)</title><rect x="801.8" y="5845" width="31.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="804.83" y="5855.5" >`l..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="43.8" y="5093" width="0.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="46.79" y="5103.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="179.9" y="2037" width="0.5" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="182.91" y="2047.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (1 samples, 0.04%)</title><rect x="948.7" y="6021" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="951.74" y="6031.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="132.0" y="4405" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="135.04" y="4415.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (12 samples, 0.48%)</title><rect x="92.1" y="3717" width="5.7" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="95.14" y="3727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="413.2" y="4885" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="416.19" y="4895.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="382.2" y="4469" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="385.21" y="4479.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="412.3" y="3573" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="415.25" y="3583.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="393.5" y="4373" width="0.9" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="396.48" y="4383.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="11.9" y="5989" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="14.88" y="5999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="396.3" y="4581" width="3.7" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="399.29" y="4591.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (54 samples, 2.15%)</title><rect x="323.5" y="5285" width="25.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="326.54" y="5295.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="397.7" y="3717" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="400.70" y="3727.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="343.7" y="4741" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="346.72" y="4751.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="256.0" y="2757" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="258.95" y="2767.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (336 samples, 13.37%)</title><rect x="129.7" y="5301" width="157.7" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="132.69" y="5311.5" >`INTERPRETED-DISCRIM..</text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (18 samples, 0.72%)</title><rect x="103.4" y="3637" width="8.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="106.40" y="3647.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="165.8" y="1749" width="1.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="168.83" y="1759.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="676.5" y="5781" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="679.51" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (19 samples, 0.76%)</title><rect x="259.2" y="1637" width="9.0" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="262.24" y="1647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="167.7" y="1557" width="2.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="170.71" y="1567.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="393.9" y="3525" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="396.95" y="3535.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (1 samples, 0.04%)</title><rect x="629.1" y="5141" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="632.10" y="5151.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="382.7" y="4885" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="385.68" y="4895.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (113 samples, 4.49%)</title><rect x="178.0" y="2517" width="53.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="181.04" y="2527.5" >`COMB..</text>
</g>
<g >
<title>`IRC-GEP^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="609.9" y="5397" width="0.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="612.86" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="3829" width="1.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="412.44" y="3839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="23.6" y="4053" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="26.61" y="4063.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (15 samples, 0.60%)</title><rect x="243.3" y="1269" width="7.0" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="246.28" y="1279.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (3 samples, 0.12%)</title><rect x="812.2" y="5621" width="1.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="815.16" y="5631.5" ></text>
</g>
<g >
<title>`HAS-POLICY-P^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="458.2" y="5829" width="1.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="461.25" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="125.5" y="1861" width="0.4" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="128.47" y="1871.5" ></text>
</g>
<g >
<title>`iterativelySimplifyCFG(llvm::Function&amp;, llvm::TargetTransformIn (10 samples, 0.40%)</title><rect x="931.8" y="5877" width="4.7" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="934.85" y="5887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="2085" width="4.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="285.70" y="2095.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="268.2" y="1381" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="271.15" y="1391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2757" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="412.90" y="2767.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.04%)</title><rect x="753.0" y="5669" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="756.02" y="5679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (25 samples, 0.99%)</title><rect x="16.6" y="4949" width="11.7" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="19.57" y="4959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="3941" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="414.31" y="3951.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="36.8" y="3333" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="39.75" y="3343.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::reinsertValue(llvm::Value*) (1 samples, 0.04%)</title><rect x="346.1" y="4933" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="349.07" y="4943.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="125.9" y="2181" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="128.93" y="2191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="1541" width="5.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="175.40" y="1551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="405.2" y="4949" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="408.21" y="4959.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="122.6" y="3525" width="4.7" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="125.65" y="3535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="294.0" y="4629" width="2.8" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="296.97" y="4639.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="268.6" y="533" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="271.62" y="543.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="234.8" y="373" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="237.83" y="383.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (4 samples, 0.16%)</title><rect x="338.1" y="4533" width="1.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="341.09" y="4543.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="179.0" y="2229" width="1.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="181.97" y="2239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="337.2" y="4421" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="340.15" y="4431.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="49.9" y="5493" width="5.2" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="52.90" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="3189" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="412.44" y="3199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="260.6" y="133" width="7.6" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="263.64" y="143.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.9" y="3509" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="404.93" y="3519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="268.2" y="1557" width="0.4" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="271.15" y="1567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="2821" width="1.4" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="434.50" y="2831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="385.0" y="4085" width="2.8" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="388.03" y="4095.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="3413" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="414.78" y="3423.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="349.4" y="5381" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="352.36" y="5391.5" ></text>
</g>
<g >
<title>`getCalledFunction(llvm::Value const*, bool, bool&amp;) (1 samples, 0.04%)</title><rect x="766.2" y="5701" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="769.16" y="5711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="413.7" y="3989" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="416.66" y="3999.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (125 samples, 4.97%)</title><rect x="600.5" y="5605" width="58.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="603.47" y="5615.5" >`DO-DB..</text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (9 samples, 0.36%)</title><rect x="327.3" y="4645" width="4.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="330.30" y="4655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1413" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="427.92" y="1423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="91.7" y="3701" width="0.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="94.67" y="3711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="421.6" y="2261" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="424.64" y="2271.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3445" width="3.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="420.41" y="3455.5" ></text>
</g>
<g >
<title>`llvm::getOrEnforceKnownAlignment(llvm::Value*, unsigned int, ll (6 samples, 0.24%)</title><rect x="770.4" y="5829" width="2.8" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="773.38" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="2693" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="414.78" y="2703.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.04%)</title><rect x="860.0" y="5813" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="863.03" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="25.5" y="4437" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="28.49" y="4447.5" ></text>
</g>
<g >
<title>`llvm::DILexicalBlock::getImpl(llvm::LLVMContext&amp;, llvm::Metadat (1 samples, 0.04%)</title><rect x="669.5" y="5685" width="0.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="672.47" y="5695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (26 samples, 1.03%)</title><rect x="357.3" y="5861" width="12.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="360.33" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3637" width="1.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="168.36" y="3647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (14 samples, 0.56%)</title><rect x="91.7" y="3781" width="6.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="94.67" y="3791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="281.3" y="3813" width="5.6" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="284.30" y="3823.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="157.9" y="4229" width="0.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="160.85" y="4239.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::computeSCEVAtScope(llvm::SCEV const*, ll (1 samples, 0.04%)</title><rect x="920.1" y="5701" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="923.11" y="5711.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.04%)</title><rect x="744.1" y="5829" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="747.10" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="250.8" y="4213" width="1.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="253.79" y="4223.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="52.7" y="3685" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="55.71" y="3695.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInBoundsGEP(llvm::Value*, gctools::sm (1 samples, 0.04%)</title><rect x="631.9" y="5221" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="634.92" y="5231.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.9" y="3365" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="396.95" y="3375.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="2629" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="414.78" y="2639.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="821" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="430.74" y="831.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="34.9" y="4197" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="37.88" y="4207.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.04%)</title><rect x="713.6" y="5861" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="716.59" y="5871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2613" width="1.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="427.92" y="2623.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="297.3" y="5573" width="1.8" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="300.26" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-VARIABLE^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="282.7" y="1285" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="285.70" y="1295.5" ></text>
</g>
<g >
<title>`ELIMINATE-CATCHES^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (8 samples, 0.32%)</title><rect x="532.9" y="5845" width="3.7" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="535.88" y="5855.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="905.6" y="5637" width="0.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="908.56" y="5647.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="36.3" y="4005" width="1.4" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="39.28" y="4015.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (15 samples, 0.60%)</title><rect x="232.5" y="2597" width="7.0" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="235.48" y="2607.5" ></text>
</g>
<g >
<title>`ENSURE-ORIGIN^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="652.1" y="5445" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="655.10" y="5455.5" ></text>
</g>
<g >
<title>0x11a477094 (17 samples, 0.68%)</title><rect x="91.7" y="4005" width="7.9" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="94.67" y="4015.5" ></text>
</g>
<g >
<title>0x11a477094 (4 samples, 0.16%)</title><rect x="122.6" y="2677" width="1.9" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="125.65" y="2687.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (33 samples, 1.31%)</title><rect x="15.6" y="5157" width="15.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="18.63" y="5167.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="543.2" y="5781" width="4.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="546.21" y="5791.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.04%)</title><rect x="427.3" y="869" width="0.4" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="430.27" y="879.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="254.1" y="3269" width="1.4" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="257.07" y="3279.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="279.4" y="517" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="282.42" y="527.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasGEP(llvm::GEPOperator const*, unsigne (2 samples, 0.08%)</title><rect x="818.3" y="5653" width="0.9" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="821.26" y="5663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.9" y="2149" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="412.90" y="2159.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.04%)</title><rect x="906.0" y="5717" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="909.03" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="523.5" y="5765" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="526.49" y="5775.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="278.9" y="165" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="281.95" y="175.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="66.3" y="4949" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="69.32" y="4959.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="424.9" y="965" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="427.92" y="975.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="55.1" y="5653" width="0.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="58.06" y="5663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.0" y="1765" width="0.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="411.97" y="1775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="256.0" y="2853" width="1.4" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="258.95" y="2863.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerPrefAlignment(unsigned int) const (1 samples, 0.04%)</title><rect x="913.1" y="5829" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="916.07" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="17.5" y="4069" width="5.6" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="20.51" y="4079.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (1 samples, 0.04%)</title><rect x="505.7" y="5557" width="0.4" height="15.0" fill="rgb(217,74,74)" rx="2" ry="2" />
<text  x="508.66" y="5567.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="387.8" y="4341" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="390.84" y="4351.5" ></text>
</g>
<g >
<title>`llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::Instructi (1 samples, 0.04%)</title><rect x="619.7" y="5189" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="622.71" y="5199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="186.5" y="149" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="189.48" y="159.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::getSCEVAtScope(llvm::SCEV const*, llvm:: (1 samples, 0.04%)</title><rect x="920.1" y="5653" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="923.11" y="5663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="419.3" y="677" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="422.29" y="687.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="353.6" y="5445" width="0.9" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="356.58" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="167.7" y="1669" width="2.8" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="170.71" y="1679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="124.5" y="3253" width="1.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="127.53" y="3263.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="278.9" y="453" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="281.95" y="463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="66.3" y="4933" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="69.32" y="4943.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="278.9" y="661" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="281.95" y="671.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="432.0" y="2197" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="434.96" y="2207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="428.2" y="2437" width="1.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="431.21" y="2447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="233.0" y="2325" width="0.9" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="235.95" y="2335.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (2 samples, 0.08%)</title><rect x="725.8" y="5813" width="0.9" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="728.79" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="409.4" y="3541" width="1.4" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="412.44" y="3551.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="240.0" y="2805" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="242.99" y="2815.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.04%)</title><rect x="888.2" y="5765" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="891.19" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="295.4" y="2693" width="0.9" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="298.38" y="2703.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="412.3" y="3093" width="0.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="415.25" y="3103.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (6 samples, 0.24%)</title><rect x="731.9" y="5797" width="2.8" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="734.89" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="386.4" y="3029" width="0.5" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="389.44" y="3039.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="26.4" y="4661" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="29.43" y="4671.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="92.6" y="3445" width="0.9" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="95.61" y="3455.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (24 samples, 0.95%)</title><rect x="101.1" y="3765" width="11.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="104.06" y="3775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="400.5" y="3797" width="1.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="403.52" y="3807.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="34.9" y="4373" width="0.4" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="37.88" y="4383.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="629.6" y="5077" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="632.57" y="5087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.3" y="1285" width="0.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="430.27" y="1295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="388.3" y="4229" width="4.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="391.31" y="4239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="405.7" y="3845" width="0.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="408.68" y="3855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="294.0" y="4885" width="2.8" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="296.97" y="4895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="384.6" y="4469" width="3.7" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="387.56" y="4479.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="350.8" y="5285" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="353.76" y="5295.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::RemoveKey(llvm::StringRef) (1 samples, 0.04%)</title><rect x="934.2" y="5781" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="937.19" y="5791.5" ></text>
</g>
<g >
<title>`CONVERT-CALLED-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T T T T) (2 samples, 0.08%)</title><rect x="234.4" y="549" width="0.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="237.36" y="559.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.04%)</title><rect x="413.2" y="4757" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="416.19" y="4767.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'IF) T T T))^METHOD (5 samples, 0.20%)</title><rect x="180.4" y="165" width="2.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="183.38" y="175.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (136 samples, 5.41%)</title><rect x="167.2" y="2965" width="63.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="170.24" y="2975.5" >`CONVER..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="279.4" y="821" width="1.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="282.42" y="831.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="1285" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="423.70" y="1295.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="664.3" y="5557" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="667.30" y="5567.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="332.0" y="4389" width="0.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="334.99" y="4399.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignment(llvm::Type*, bool) const (1 samples, 0.04%)</title><rect x="772.7" y="5749" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="775.73" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="34.4" y="5285" width="10.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="37.41" y="5295.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (7 samples, 0.28%)</title><rect x="18.0" y="3781" width="3.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="20.98" y="3791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="452.6" y="5397" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="455.62" y="5407.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (58 samples, 2.31%)</title><rect x="100.1" y="4149" width="27.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="103.12" y="4159.5" >`..</text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="679.3" y="5957" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="682.32" y="5967.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (10 samples, 0.40%)</title><rect x="182.7" y="485" width="4.7" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="185.73" y="495.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="414.1" y="3461" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="417.13" y="3471.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="508.5" y="5813" width="4.7" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="511.47" y="5823.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((PRECALC-VALUE-INST (4 samples, 0.16%)</title><rect x="629.1" y="5205" width="1.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="632.10" y="5215.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (41 samples, 1.63%)</title><rect x="469.5" y="5781" width="19.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="472.51" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="2677" width="4.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="285.70" y="2687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.4" y="1541" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="428.39" y="1551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="3269" width="4.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="285.70" y="3279.5" ></text>
</g>
<g >
<title>0x11a477094 (9 samples, 0.36%)</title><rect x="235.3" y="645" width="4.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="238.30" y="655.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (25 samples, 0.99%)</title><rect x="16.6" y="4965" width="11.7" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="19.57" y="4975.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="889.1" y="5701" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="892.13" y="5711.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Constant*, llvm::Consta (1 samples, 0.04%)</title><rect x="865.7" y="5861" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="868.66" y="5871.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((PRECALC-VALUE-INST (1 samples, 0.04%)</title><rect x="354.0" y="5365" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="357.05" y="5375.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::getHash() const (2 samples, 0.08%)</title><rect x="862.4" y="5749" width="0.9" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="865.38" y="5759.5" ></text>
</g>
<g >
<title>`GC_alloc_large (1 samples, 0.04%)</title><rect x="553.1" y="5669" width="0.4" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="556.06" y="5679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="269.1" y="149" width="0.9" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="272.09" y="159.5" ></text>
</g>
<g >
<title>`core::lisp_getStaticClass(gctools::Header_s::Value) (1 samples, 0.04%)</title><rect x="285.1" y="645" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="288.05" y="655.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::Instruction&gt;, llvm:: (1 samples, 0.04%)</title><rect x="931.4" y="5861" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="934.38" y="5871.5" ></text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE T (1 samples, 0.04%)</title><rect x="125.5" y="1749" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="128.47" y="1759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="409.4" y="3893" width="1.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="412.44" y="3903.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="350.8" y="5157" width="0.4" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="353.76" y="5167.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2725" width="14.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="260.36" y="2735.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (4 samples, 0.16%)</title><rect x="315.6" y="5301" width="1.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="318.56" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="420.7" y="485" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="423.70" y="495.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (1 samples, 0.04%)</title><rect x="818.7" y="5637" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="821.73" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="165.4" y="3861" width="1.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="168.36" y="3871.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="52.2" y="4101" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="55.24" y="4111.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="405.7" y="4005" width="0.4" height="15.0" fill="rgb(75,222,75)" rx="2" ry="2" />
<text  x="408.68" y="4015.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="244.7" y="677" width="2.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="247.69" y="687.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="4629" width="0.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="290.87" y="4639.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="276.1" y="4149" width="5.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="279.13" y="4159.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.3" y="4069" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="414.31" y="4079.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="2677" width="3.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="420.41" y="2687.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="34.9" y="4293" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="37.88" y="4303.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="18.4" y="3461" width="0.5" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="21.45" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1173" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="423.70" y="1183.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (1 samples, 0.04%)</title><rect x="321.2" y="5221" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="324.19" y="5231.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="2757" width="3.8" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="420.41" y="2767.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (15 samples, 0.60%)</title><rect x="232.5" y="2613" width="7.0" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="235.48" y="2623.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="3093" width="4.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="279.60" y="3103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="276.1" y="3973" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="279.13" y="3983.5" ></text>
</g>
<g >
<title>`REMOVE-USELESS-INSTRUCTIONS^CLEAVIR-REMOVE-USELESS-INSTRUCTIONS (1 samples, 0.04%)</title><rect x="329.2" y="4453" width="0.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="332.17" y="4463.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*, (3 samples, 0.12%)</title><rect x="718.3" y="5845" width="1.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="721.28" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="410.8" y="4213" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="413.84" y="4223.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="568.1" y="5797" width="0.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="571.08" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="455.4" y="5749" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="458.43" y="5759.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.04%)</title><rect x="105.8" y="3381" width="0.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="108.75" y="3391.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="62.1" y="4949" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="65.10" y="4959.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="124.5" y="1829" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="127.53" y="1839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="242.8" y="2357" width="8.0" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="245.81" y="2367.5" ></text>
</g>
<g >
<title>`wrapped_llvm_sys__writeBitcodeToFile_Module_spcore__String_spbo (16 samples, 0.64%)</title><rect x="953.9" y="5973" width="7.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="956.91" y="5983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="394.4" y="5061" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="397.42" y="5071.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="400.5" y="3909" width="1.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="403.52" y="3919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="1509" width="50.7" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="183.38" y="1519.5" >`INTE..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (43 samples, 1.71%)</title><rect x="252.2" y="3525" width="20.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="255.20" y="3535.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="279.4" y="597" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="282.42" y="607.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="2181" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="423.70" y="2191.5" ></text>
</g>
<g >
<title>`wrapped_core__generalp_T_sp (1 samples, 0.04%)</title><rect x="551.7" y="5797" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="554.65" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (23 samples, 0.91%)</title><rect x="423.0" y="4357" width="10.8" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="426.05" y="4367.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (17 samples, 0.68%)</title><rect x="242.8" y="2661" width="8.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="245.81" y="2671.5" ></text>
</g>
<g >
<title>`OF-CLASS-P^CORE^FN^^ (2 samples, 0.08%)</title><rect x="290.2" y="5493" width="1.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="293.21" y="5503.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction*, unsigned  (3 samples, 0.12%)</title><rect x="875.5" y="5845" width="1.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="878.52" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="429.6" y="2405" width="1.0" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="432.62" y="2415.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="382.2" y="4101" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="385.21" y="4111.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="243.3" y="805" width="1.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="246.28" y="815.5" ></text>
</g>
<g >
<title>0x11a477094 (17 samples, 0.68%)</title><rect x="242.8" y="2741" width="8.0" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="245.81" y="2751.5" ></text>
</g>
<g >
<title>`CST-TO-AST^CLEAVIR-CST-TO-AST^FN^^ (514 samples, 20.45%)</title><rect x="58.3" y="5893" width="241.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="61.35" y="5903.5" >`CST-TO-AST^CLEAVIR-CST-TO-AST^F..</text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="604.2" y="5493" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="607.22" y="5503.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="165.4" y="2949" width="1.8" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="168.36" y="2959.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="36.8" y="3749" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="39.75" y="3759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="2837" width="1.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="411.03" y="2847.5" ></text>
</g>
<g >
<title>`wrapped_llvm_sys__FunctionCreate_FunctionType_spllvm__GlobalVal (1 samples, 0.04%)</title><rect x="346.1" y="4981" width="0.4" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="349.07" y="4991.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (340 samples, 13.52%)</title><rect x="129.2" y="5509" width="159.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="132.22" y="5519.5" >`INTERPRETED-DISCRIM..</text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (3 samples, 0.12%)</title><rect x="409.4" y="4357" width="1.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="412.44" y="4367.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="328.2" y="4421" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="331.23" y="4431.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.4" y="2805" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="412.44" y="2815.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="389.7" y="3765" width="2.4" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="392.72" y="3775.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="5173" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="327.01" y="5183.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (2 samples, 0.08%)</title><rect x="471.4" y="5589" width="0.9" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="474.39" y="5599.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="629.6" y="5093" width="0.4" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="632.57" y="5103.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.9" y="2197" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="412.90" y="2207.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (13 samples, 0.52%)</title><rect x="92.1" y="3733" width="6.1" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="95.14" y="3743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="314.6" y="5221" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="317.62" y="5231.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="401.5" y="2613" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="404.46" y="2623.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.4" y="1669" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="428.39" y="1679.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::Value*, llvm::ValueLatticeElem (1 samples, 0.04%)</title><rect x="702.8" y="5733" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="705.79" y="5743.5" ></text>
</g>
<g >
<title>`GC_remove_protection (1 samples, 0.04%)</title><rect x="379.4" y="4917" width="0.5" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="382.40" y="4927.5" ></text>
</g>
<g >
<title>0x11a477094 (14 samples, 0.56%)</title><rect x="91.7" y="3797" width="6.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="94.67" y="3807.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="242.8" y="2021" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="245.81" y="2031.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="113.3" y="3557" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="116.26" y="3567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="725" width="1.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="288.52" y="735.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="425.9" y="3045" width="0.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="428.86" y="3055.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="658.7" y="5573" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="661.67" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="422.1" y="2437" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="425.11" y="2447.5" ></text>
</g>
<g >
<title>`SYMBOLP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="73.4" y="4997" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="76.37" y="5007.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.3" y="3797" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="414.31" y="3807.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.04%)</title><rect x="830.0" y="5781" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="832.99" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (21 samples, 0.84%)</title><rect x="621.6" y="5285" width="9.8" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="624.59" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="167.2" y="2325" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="170.24" y="2335.5" ></text>
</g>
<g >
<title>`ENSURE-DIRECTORIES-EXIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="951.6" y="6021" width="0.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="954.56" y="6031.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.3" y="3509" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="414.31" y="3519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="3221" width="0.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="428.86" y="3231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (23 samples, 0.91%)</title><rect x="423.0" y="4389" width="10.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="426.05" y="4399.5" ></text>
</g>
<g >
<title>`core::interpreter_lookup_function_or_error(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="668.5" y="5685" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="671.53" y="5695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="391.6" y="2773" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="394.60" y="2783.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (6 samples, 0.24%)</title><rect x="276.6" y="965" width="2.8" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="279.60" y="975.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="268.2" y="1941" width="3.7" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="271.15" y="1951.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="427.3" y="2533" width="2.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="430.27" y="2543.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="390.7" y="3269" width="1.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="393.66" y="3279.5" ></text>
</g>
<g >
<title>`llvmo::Pass_O::externalObject() const (1 samples, 0.04%)</title><rect x="459.7" y="5829" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="462.66" y="5839.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (5 samples, 0.20%)</title><rect x="560.1" y="5813" width="2.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="563.10" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="34.9" y="4501" width="0.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="37.88" y="4511.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (43 samples, 1.71%)</title><rect x="252.2" y="3605" width="20.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="255.20" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1605" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="430.27" y="1615.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="132.0" y="4389" width="0.5" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="135.04" y="4399.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="619.7" y="5221" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="622.71" y="5231.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.04%)</title><rect x="832.8" y="5733" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="835.81" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="3269" width="63.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="170.24" y="3279.5" >`INTERP..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'BLOCK) T T T))^MET (1 samples, 0.04%)</title><rect x="231.5" y="3285" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="234.54" y="3295.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (86 samples, 3.42%)</title><rect x="87.0" y="4965" width="40.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="89.98" y="4975.5" >`co..</text>
</g>
<g >
<title>`ERROR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="125.0" y="1813" width="0.5" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="128.00" y="1823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="455.4" y="5733" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="458.43" y="5743.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (304 samples, 12.09%)</title><rect x="130.6" y="4677" width="142.7" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="133.63" y="4687.5" >`COMBINE-METHOD-FU..</text>
</g>
<g >
<title>0x11a477094 (136 samples, 5.41%)</title><rect x="167.2" y="3045" width="63.9" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="170.24" y="3055.5" >0x11a47..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="413.7" y="4869" width="1.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="416.66" y="4879.5" ></text>
</g>
<g >
<title>`wrapped_cl__append_VaList_sp (1 samples, 0.04%)</title><rect x="417.4" y="869" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="420.41" y="879.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="429.6" y="1909" width="1.0" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="432.62" y="1919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="645" width="26.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="207.32" y="655.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="202.9" y="1013" width="1.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="205.91" y="1023.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="94.0" y="3685" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="97.02" y="3695.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="434.8" y="5557" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="437.78" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="385.0" y="3989" width="2.8" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="388.03" y="3999.5" ></text>
</g>
<g >
<title>`TRANSFORM^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="122.6" y="2389" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="125.65" y="2399.5" ></text>
</g>
<g >
<title>`SHARPSIGN-SINGLE-QUOTE^ECLECTOR.READER^FN^^ (22 samples, 0.88%)</title><rect x="34.4" y="5477" width="10.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="37.41" y="5487.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="91.7" y="4085" width="7.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="94.67" y="4095.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="413.7" y="4149" width="0.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="416.66" y="4159.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="321.7" y="5317" width="1.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="324.66" y="5327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="125.5" y="1733" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="128.47" y="1743.5" ></text>
</g>
<g >
<title>`FIND-OR-CREATE-LOCATION^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="414.6" y="4117" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="417.60" y="4127.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="431.5" y="2549" width="1.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="434.50" y="2559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="284.6" y="1525" width="2.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="287.58" y="1535.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="17.5" y="4261" width="8.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="20.51" y="4271.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.9" y="1957" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="412.90" y="1967.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="412.3" y="3173" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="415.25" y="3183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="410.8" y="4197" width="0.5" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="413.84" y="4207.5" ></text>
</g>
<g >
<title>`cc_error_type_error (2 samples, 0.08%)</title><rect x="287.9" y="4581" width="0.9" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="290.87" y="4591.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (56 samples, 2.23%)</title><rect x="407.6" y="5413" width="26.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="410.56" y="5423.5" >`..</text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (2 samples, 0.08%)</title><rect x="287.9" y="4997" width="0.9" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="290.87" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (1 samples, 0.04%)</title><rect x="249.4" y="949" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="252.38" y="959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (22 samples, 0.88%)</title><rect x="423.0" y="4149" width="10.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="426.05" y="4159.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.4" y="1797" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="428.39" y="1807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="2917" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="414.78" y="2927.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (113 samples, 4.49%)</title><rect x="178.0" y="2485" width="53.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="181.04" y="2495.5" >`CONV..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="255.5" y="2885" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="258.48" y="2895.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (1 samples, 0.04%)</title><rect x="783.1" y="5813" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="786.05" y="5823.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.04%)</title><rect x="249.8" y="917" width="0.5" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="252.85" y="927.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="26.4" y="4677" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="29.43" y="4687.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (31 samples, 1.23%)</title><rect x="257.4" y="2901" width="14.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="260.36" y="2911.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="533.3" y="5733" width="0.5" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="536.35" y="5743.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.04%)</title><rect x="326.4" y="4581" width="0.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="329.36" y="4591.5" ></text>
</g>
<g >
<title>`llvm::TargetTransformInfo::getUserCost(llvm::User const*) const (1 samples, 0.04%)</title><rect x="782.1" y="5829" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="785.12" y="5839.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="646.0" y="5333" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="649.00" y="5343.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="278.9" y="837" width="0.5" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="281.95" y="847.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4245" width="2.9" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="55.24" y="4255.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="563.4" y="5749" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="566.39" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (108 samples, 4.30%)</title><rect x="180.4" y="1781" width="50.7" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="183.38" y="1791.5" >`core..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="422.1" y="2053" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="425.11" y="2063.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="431.5" y="2629" width="1.4" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="434.50" y="2639.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (21 samples, 0.84%)</title><rect x="384.6" y="4517" width="9.8" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="387.56" y="4527.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="416.5" y="4549" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="419.48" y="4559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="401.0" y="3701" width="0.9" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="403.99" y="3711.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (1 samples, 0.04%)</title><rect x="167.7" y="1173" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="170.71" y="1183.5" ></text>
</g>
<g >
<title>`llvm::hash_value(llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="892.4" y="5637" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="895.42" y="5647.5" ></text>
</g>
<g >
<title>`HIR-&gt;MIR^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="347.0" y="5205" width="1.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="350.01" y="5215.5" ></text>
</g>
<g >
<title>`llvmo::llvm_sys__llvm_value_p(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="600.0" y="5541" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="603.00" y="5551.5" ></text>
</g>
<g >
<title>`%SIGNAL^CORE^FN^^ (1 samples, 0.04%)</title><rect x="324.5" y="4757" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="327.48" y="4767.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3221" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="415.25" y="3231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.4" y="1845" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="428.39" y="1855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="279.4" y="533" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="282.42" y="543.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (43 samples, 1.71%)</title><rect x="252.2" y="4053" width="20.2" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="255.20" y="4063.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="3173" width="1.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="411.03" y="3183.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="414.1" y="3285" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="417.13" y="3295.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="2741" width="1.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="434.50" y="2751.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="411.8" y="4293" width="0.9" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="414.78" y="4303.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (144 samples, 5.73%)</title><rect x="59.8" y="5317" width="67.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="62.75" y="5327.5" >`CONVER..</text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="15.2" y="5413" width="0.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="18.16" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (22 samples, 0.88%)</title><rect x="423.0" y="3989" width="10.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="426.05" y="3999.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (145 samples, 5.77%)</title><rect x="59.8" y="5525" width="68.0" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="62.75" y="5535.5" >`core::..</text>
</g>
<g >
<title>`llvm::LazyValueInfo::getPredicateOnEdge(unsigned int, llvm::Val (1 samples, 0.04%)</title><rect x="702.3" y="5813" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="705.32" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (31 samples, 1.23%)</title><rect x="257.4" y="3013" width="14.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="260.36" y="3023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="417.4" y="1285" width="2.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="420.41" y="1295.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="294.0" y="4309" width="2.8" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="296.97" y="4319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="166.3" y="597" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="169.30" y="607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="120.8" y="3509" width="0.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="123.77" y="3519.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="418.4" y="789" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="421.35" y="799.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="257.4" y="1797" width="1.8" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="260.36" y="1807.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="565.7" y="5765" width="0.5" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="568.74" y="5775.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="91.7" y="4037" width="7.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="94.67" y="4047.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="42.9" y="4885" width="0.4" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="45.86" y="4895.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="1365" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="428.86" y="1375.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="49.0" y="5637" width="0.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="51.96" y="5647.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpEquality(llvm::ICmpInst&amp;) (1 samples, 0.04%)</title><rect x="899.5" y="5829" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="902.46" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="247.5" y="1093" width="2.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="250.50" y="1103.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="3877" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="414.78" y="3887.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="324.0" y="4901" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="327.01" y="4911.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="287.9" y="4709" width="0.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="290.87" y="4719.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (3 samples, 0.12%)</title><rect x="165.8" y="1989" width="1.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="168.83" y="1999.5" ></text>
</g>
<g >
<title>`llvm::InstCombineWorklist::AddInitialGroup(llvm::ArrayRef&lt;llvm: (2 samples, 0.08%)</title><rect x="727.7" y="5861" width="0.9" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="730.67" y="5871.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4549" width="1.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="39.28" y="4559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="268.2" y="1221" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="271.15" y="1231.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="281.3" y="3317" width="1.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="284.30" y="3327.5" ></text>
</g>
<g >
<title>`llvm::AliasSet::aliasesPointer(llvm::Value const*, unsigned lon (1 samples, 0.04%)</title><rect x="780.2" y="5765" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="783.24" y="5775.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="36.3" y="3765" width="0.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="39.28" y="3775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="123.1" y="2437" width="1.4" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="126.12" y="2447.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="99.2" y="3701" width="0.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="102.18" y="3711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="4933" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="327.01" y="4943.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="1301" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="423.70" y="1311.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (2 samples, 0.08%)</title><rect x="500.0" y="5781" width="1.0" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="503.02" y="5791.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="168.6" y="677" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="171.65" y="687.5" ></text>
</g>
<g >
<title>`HOIST-AST^CLASP-CLEAVIR^FN^^ (56 samples, 2.23%)</title><rect x="323.5" y="5413" width="26.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="326.54" y="5423.5" >`..</text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="327.3" y="4341" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="330.30" y="4351.5" ></text>
</g>
<g >
<title>`ERROR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="98.7" y="3845" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="101.71" y="3855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="165.8" y="2053" width="1.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="168.83" y="2063.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="321.7" y="5013" width="0.4" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="324.66" y="5023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="244.7" y="533" width="2.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="247.69" y="543.5" ></text>
</g>
<g >
<title>`CONVERT-LET*^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="247.5" y="629" width="1.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="250.50" y="639.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (108 samples, 4.30%)</title><rect x="180.4" y="2309" width="50.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="183.38" y="2319.5" >`core..</text>
</g>
<g >
<title>0x1225e5094 (136 samples, 5.41%)</title><rect x="167.2" y="3173" width="63.9" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="170.24" y="3183.5" >0x1225e..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="124.5" y="2757" width="1.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="127.53" y="2767.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (1 samples, 0.04%)</title><rect x="22.7" y="3909" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="25.67" y="3919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (56 samples, 2.23%)</title><rect x="204.3" y="133" width="26.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="207.32" y="143.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="283.6" y="1141" width="1.0" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="286.64" y="1151.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="419.3" y="693" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="422.29" y="703.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="283.2" y="1317" width="1.4" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="286.17" y="1327.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="276.6" y="885" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="279.60" y="895.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="37.7" y="4613" width="0.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="40.69" y="4623.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.7" y="1141" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="430.74" y="1151.5" ></text>
</g>
<g >
<title>0x1225f3094 (305 samples, 12.13%)</title><rect x="130.2" y="5029" width="143.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="133.16" y="5039.5" >0x1225f3094</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (27 samples, 1.07%)</title><rect x="16.6" y="5077" width="12.6" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="19.57" y="5087.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::UAddWithOverflow_match&lt;llvm::PatternMa (1 samples, 0.04%)</title><rect x="896.2" y="5829" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="899.17" y="5839.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="412.3" y="3061" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="415.25" y="3071.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm:: (1 samples, 0.04%)</title><rect x="643.7" y="5285" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="646.65" y="5295.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="1045" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="423.70" y="1055.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.3" y="1381" width="0.4" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="430.27" y="1391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="281.3" y="4341" width="5.6" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="284.30" y="4351.5" ></text>
</g>
<g >
<title>`COERCE-TO-CONDITION^CORE^FN^^ (1 samples, 0.04%)</title><rect x="125.9" y="1941" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="128.93" y="1951.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.04%)</title><rect x="632.9" y="5317" width="0.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="635.86" y="5327.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="165.4" y="2389" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="168.36" y="2399.5" ></text>
</g>
<g >
<title>`CONSTANT-FORM-VALUE^EXT^FN^^ (1 samples, 0.04%)</title><rect x="318.8" y="5381" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="321.85" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="415.5" y="4773" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="418.54" y="4783.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="259.2" y="357" width="1.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="262.24" y="367.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="52.7" y="3989" width="1.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="55.71" y="3999.5" ></text>
</g>
<g >
<title>`wrapped_cl__make_symbol_String_sp (1 samples, 0.04%)</title><rect x="132.0" y="4437" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="135.04" y="4447.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="165.8" y="1637" width="1.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="168.83" y="1647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (183 samples, 7.28%)</title><rect x="164.9" y="4293" width="85.9" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="167.89" y="4303.5" >`core::Fun..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="416.5" y="4197" width="0.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="419.48" y="4207.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="395.4" y="4933" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="398.35" y="4943.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="3317" width="3.8" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="420.41" y="3327.5" ></text>
</g>
<g >
<title>`core::clasp_write_char(int, gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="952.5" y="5893" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="955.50" y="5903.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="38.2" y="4261" width="0.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="41.16" y="4271.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="34.9" y="4517" width="0.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="37.88" y="4527.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="38.2" y="4533" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="41.16" y="4543.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (3 samples, 0.12%)</title><rect x="283.2" y="1365" width="1.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="286.17" y="1375.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="83.7" y="5013" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="86.69" y="5023.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="295.4" y="2069" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="298.38" y="2079.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="168.6" y="853" width="1.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="171.65" y="863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (52 samples, 2.07%)</title><rect x="379.4" y="5349" width="24.4" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="382.40" y="5359.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="523.5" y="5781" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="526.49" y="5791.5" ></text>
</g>
<g >
<title>`llvm::WriteBitcodeToFile(llvm::Module const*, llvm::raw_ostream (12 samples, 0.48%)</title><rect x="954.4" y="5941" width="5.6" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="957.38" y="5951.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="172.4" y="1349" width="5.2" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="175.40" y="1359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="279.9" y="629" width="0.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="282.89" y="639.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="133.0" y="4517" width="0.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="135.98" y="4527.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="203.4" y="789" width="0.5" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="206.38" y="799.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="421.6" y="3317" width="1.0" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="424.64" y="3327.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="401.0" y="2693" width="0.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="403.99" y="2703.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="276.1" y="4341" width="5.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="279.13" y="4351.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="401.5" y="2549" width="0.4" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="404.46" y="2559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="17.5" y="4309" width="8.0" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="20.51" y="4319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="172.4" y="389" width="4.7" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="175.40" y="399.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3189" width="1.8" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="168.36" y="3199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.9" y="1989" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="412.90" y="1999.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="427.3" y="3653" width="4.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="430.27" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1013" width="0.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="428.86" y="1023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3173" width="1.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="424.64" y="3183.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="1621" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="428.86" y="1631.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (23 samples, 0.91%)</title><rect x="423.0" y="4293" width="10.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="426.05" y="4303.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="251.3" y="3637" width="0.9" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="254.26" y="3647.5" ></text>
</g>
<g >
<title>`void llvm::SmallVectorImpl&lt;llvm::BasicBlock*&gt;::append&lt;llvm::Bas (1 samples, 0.04%)</title><rect x="822.0" y="5749" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="825.01" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="2341" width="4.2" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="279.60" y="2351.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="256.0" y="2901" width="1.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="258.95" y="2911.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.04%)</title><rect x="54.6" y="4213" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="57.59" y="4223.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="242.8" y="2325" width="8.0" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="245.81" y="2335.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="285.1" y="917" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="288.05" y="927.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="285.5" y="37" width="1.4" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="288.52" y="47.5" ></text>
</g>
<g >
<title>`core::core__find_class_holder(gctools::smart_ptr&lt;core::Symbol_O (1 samples, 0.04%)</title><rect x="278.0" y="549" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="281.01" y="559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="414.1" y="4293" width="1.0" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="417.13" y="4303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="426.8" y="3621" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="429.80" y="3631.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DILocation*, llvm: (1 samples, 0.04%)</title><rect x="624.4" y="5061" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="627.41" y="5071.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="17.5" y="3893" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="20.51" y="3903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="235.3" y="453" width="4.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="238.30" y="463.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="412.3" y="3317" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="415.25" y="3327.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="997" width="0.5" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="423.70" y="1007.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="282.7" y="2613" width="4.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="285.70" y="2623.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="3509" width="4.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="279.60" y="3519.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.04%)</title><rect x="178.0" y="2181" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="181.04" y="2191.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="284.1" y="1077" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="287.11" y="1087.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="4469" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="408.68" y="4479.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="3957" width="1.4" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="39.28" y="3967.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3221" width="1.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="411.03" y="3231.5" ></text>
</g>
<g >
<title>`core::Function_O::functionName() const (1 samples, 0.04%)</title><rect x="315.6" y="5205" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="318.56" y="5215.5" ></text>
</g>
<g >
<title>0x11a477094 (9 samples, 0.36%)</title><rect x="276.6" y="3765" width="4.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="279.60" y="3775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="410.8" y="5013" width="1.9" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="413.84" y="5023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="3765" width="3.8" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="420.41" y="3775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((VALUES-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3589" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="411.03" y="3599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (43 samples, 1.71%)</title><rect x="252.2" y="3749" width="20.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="255.20" y="3759.5" ></text>
</g>
<g >
<title>`COMPILE-TAG-CHECK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="609.4" y="5413" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="612.39" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (52 samples, 2.07%)</title><rect x="379.4" y="5269" width="24.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="382.40" y="5279.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="423.0" y="2965" width="1.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="426.05" y="2975.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="235.3" y="389" width="4.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="238.30" y="399.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.04%)</title><rect x="367.7" y="5701" width="0.4" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="370.66" y="5711.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="287.4" y="5333" width="1.4" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="290.40" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (13 samples, 0.52%)</title><rect x="388.3" y="4469" width="6.1" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="391.31" y="4479.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (1 samples, 0.04%)</title><rect x="10.0" y="6021" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="13.00" y="6031.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="243.3" y="1893" width="7.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="246.28" y="1903.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.04%)</title><rect x="397.7" y="3541" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="400.70" y="3551.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="268.6" y="805" width="3.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="271.62" y="815.5" ></text>
</g>
<g >
<title>`STORE-TMV^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="649.3" y="5397" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="652.28" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.5" y="4277" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="418.54" y="4287.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="34.4" y="5397" width="10.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="37.41" y="5407.5" ></text>
</g>
<g >
<title>0x12254f0c9 (1 samples, 0.04%)</title><rect x="121.7" y="3525" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="124.71" y="3535.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="338.6" y="4389" width="0.4" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="341.56" y="4399.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (12 samples, 0.48%)</title><rect x="281.3" y="4117" width="5.6" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="284.30" y="4127.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="243.7" y="517" width="1.0" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="246.75" y="527.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="367.7" y="5717" width="0.4" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="370.66" y="5727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (23 samples, 0.91%)</title><rect x="276.1" y="4805" width="10.8" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="279.13" y="4815.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (40 samples, 1.59%)</title><rect x="232.0" y="3749" width="18.8" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="235.01" y="3759.5" ></text>
</g>
<g >
<title>`core::cl__copy_seq(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="18.9" y="3413" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="21.92" y="3423.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="276.6" y="1269" width="2.8" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="279.60" y="1279.5" ></text>
</g>
<g >
<title>`LTV/CONS^LITERAL^FN^^ (54 samples, 2.15%)</title><rect x="323.5" y="5333" width="25.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="326.54" y="5343.5" >`..</text>
</g>
<g >
<title>`llvm::scc_iterator&lt;llvm::CallGraph*, llvm::GraphTraits&lt;llvm::Ca (1 samples, 0.04%)</title><rect x="840.8" y="5893" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="843.79" y="5903.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (561 samples, 22.32%)</title><rect x="685.4" y="5957" width="263.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="688.43" y="5967.5" >`core::IndirectVariadicMethoid&lt;core..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="352.6" y="5429" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="355.64" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="432.0" y="1813" width="0.4" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="434.96" y="1823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="282.7" y="1621" width="1.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="285.70" y="1631.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="434.8" y="5445" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="437.78" y="5455.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatticeElement, llvm::D (1 samples, 0.04%)</title><rect x="695.3" y="5733" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="698.28" y="5743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="773" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="423.70" y="783.5" ></text>
</g>
<g >
<title>`core::cl__copy_seq(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="631.0" y="5125" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="633.98" y="5135.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="168.6" y="645" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="171.65" y="655.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'CORE:MULTIPLE-VALU (1 samples, 0.04%)</title><rect x="232.0" y="3109" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="235.01" y="3119.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="124.5" y="2501" width="1.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="127.53" y="2511.5" ></text>
</g>
<g >
<title>`core::byte_code_interpreter(gctools::GCRootsInModule*, gctools: (2,028 samples, 80.67%)</title><rect x="10.0" y="6261" width="951.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="13.00" y="6271.5" >`core::byte_code_interpreter(gctools::GCRootsInModule*, gctools:</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="3717" width="0.9" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="403.99" y="3727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="273.8" y="5109" width="0.9" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="276.79" y="5119.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.4" y="1909" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="428.39" y="1919.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="401.9" y="3525" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="404.93" y="3535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (23 samples, 0.91%)</title><rect x="167.2" y="2533" width="10.8" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="170.24" y="2543.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="255.0" y="2949" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="258.01" y="2959.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="4181" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="414.78" y="4191.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="167.7" y="1061" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="170.71" y="1071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="2613" width="3.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="420.41" y="2623.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.08%)</title><rect x="92.6" y="3365" width="0.9" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="95.61" y="3375.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="125.9" y="2069" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="128.93" y="2079.5" ></text>
</g>
<g >
<title>0x122623094 (6 samples, 0.24%)</title><rect x="247.5" y="1141" width="2.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="250.50" y="1151.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="925.7" y="5781" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="928.74" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="165.4" y="3349" width="1.8" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="168.36" y="3359.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (3 samples, 0.12%)</title><rect x="513.2" y="5765" width="1.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="516.17" y="5775.5" ></text>
</g>
<g >
<title>`llvm::GVN::ValueTable::lookupOrAdd(llvm::Value*) (1 samples, 0.04%)</title><rect x="801.8" y="5829" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="804.83" y="5839.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::computeSCEVAtScope(llvm::SCEV const*, ll (1 samples, 0.04%)</title><rect x="920.1" y="5605" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="923.11" y="5615.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::Solve() (7 samples, 0.28%)</title><rect x="944.5" y="5909" width="3.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="947.52" y="5919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="351.7" y="5493" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="354.70" y="5503.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="506.6" y="5781" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="509.60" y="5791.5" ></text>
</g>
<g >
<title>`malloc_zone_calloc (1 samples, 0.04%)</title><rect x="350.8" y="5189" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="353.76" y="5199.5" ></text>
</g>
<g >
<title>`core::clasp_write_string(std::__1::basic_string&lt;char, std::__1: (1 samples, 0.04%)</title><rect x="26.0" y="4213" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="28.96" y="4223.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (172 samples, 6.84%)</title><rect x="596.7" y="5845" width="80.7" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="599.71" y="5855.5" >`LAYOUT-P..</text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="859.6" y="5797" width="0.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="862.56" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="3109" width="1.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="427.92" y="3119.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="165.8" y="1189" width="1.0" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="168.83" y="1199.5" ></text>
</g>
<g >
<title>`sprintf (1 samples, 0.04%)</title><rect x="402.9" y="4965" width="0.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="405.86" y="4975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="4421" width="1.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="411.03" y="4431.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (12 samples, 0.48%)</title><rect x="233.9" y="1061" width="5.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="236.89" y="1071.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="242.8" y="2981" width="8.0" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="245.81" y="2991.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="589.2" y="5765" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="592.20" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="279.9" y="309" width="0.9" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="282.89" y="319.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (43 samples, 1.71%)</title><rect x="252.2" y="4021" width="20.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="255.20" y="4031.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="1653" width="1.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="168.83" y="1663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1829" width="2.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="420.41" y="1839.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock const*, (1 samples, 0.04%)</title><rect x="853.0" y="5813" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="855.99" y="5823.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.04%)</title><rect x="466.7" y="5717" width="0.5" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="469.70" y="5727.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="345.1" y="4949" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="348.13" y="4959.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.0" y="2501" width="0.4" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="411.97" y="2511.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="243.3" y="421" width="0.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="246.28" y="431.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.0" y="2645" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="403.99" y="2655.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="398.2" y="3509" width="0.9" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="401.17" y="3519.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="405.2" y="5477" width="0.9" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="408.21" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (4 samples, 0.16%)</title><rect x="247.5" y="373" width="1.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="250.50" y="383.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="385.0" y="3877" width="2.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="388.03" y="3887.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (23 samples, 0.91%)</title><rect x="276.1" y="5173" width="10.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="279.13" y="5183.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="400.0" y="4245" width="1.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="403.05" y="4255.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="285.1" y="853" width="0.4" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="288.05" y="863.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="285.5" y="453" width="1.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="288.52" y="463.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="423.0" y="3317" width="2.9" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="426.05" y="3327.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.04%)</title><rect x="387.8" y="4197" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="390.84" y="4207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="385.0" y="3909" width="2.8" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="388.03" y="3919.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (4 samples, 0.16%)</title><rect x="270.0" y="101" width="1.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="273.03" y="111.5" ></text>
</g>
<g >
<title>`BYPASS-INSTRUCTION^CLEAVIR-IR^FN^^ (3 samples, 0.12%)</title><rect x="498.6" y="5813" width="1.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="501.62" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="417.4" y="2037" width="3.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="420.41" y="2047.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="112.8" y="3557" width="0.5" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="115.79" y="3567.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (137 samples, 5.45%)</title><rect x="1125.7" y="6293" width="64.3" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="1128.70" y="6303.5" >`GC_pus..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="370.9" y="5765" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="373.95" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="171.5" y="1765" width="0.9" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="174.46" y="1775.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="247.0" y="101" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="250.03" y="111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2693" width="1.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="427.92" y="2703.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="281.3" y="4549" width="5.6" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="284.30" y="4559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="291.2" y="5493" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="294.15" y="5503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="382.2" y="4053" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="385.21" y="4063.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="654.0" y="5493" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="656.98" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (35 samples, 1.39%)</title><rect x="417.4" y="4645" width="16.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="420.41" y="4655.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleCharacterString_O&gt; gctools::GCOb (1 samples, 0.04%)</title><rect x="631.0" y="5093" width="0.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="633.98" y="5103.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="336.7" y="4021" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="339.68" y="4031.5" ></text>
</g>
<g >
<title>`PARSE-FUNCTION-TYPE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="125.0" y="1845" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="128.00" y="1855.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'IF) T T T))^METHOD (12 samples, 0.48%)</title><rect x="281.3" y="4741" width="5.6" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="284.30" y="4751.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="567.1" y="5733" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="570.14" y="5743.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1:: (1 samples, 0.04%)</title><rect x="952.5" y="5845" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="955.50" y="5855.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (KEY-PARAMETER-GROUP) (1 samples, 0.04%)</title><rect x="183.2" y="197" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="186.20" y="207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="410.8" y="4949" width="1.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="413.84" y="4959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="469" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="423.70" y="479.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.04%)</title><rect x="289.7" y="5413" width="0.5" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="292.75" y="5423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="3637" width="4.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="279.60" y="3647.5" ></text>
</g>
<g >
<title>`core::Lisp_O::findPackage(std::__1::basic_string&lt;char, std::__1 (1 samples, 0.04%)</title><rect x="123.6" y="453" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="126.59" y="463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="324.5" y="4933" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="327.48" y="4943.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (43 samples, 1.71%)</title><rect x="252.2" y="3557" width="20.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="255.20" y="3567.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="324.0" y="4885" width="0.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="327.01" y="4895.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (87 samples, 3.46%)</title><rect x="86.5" y="5077" width="40.8" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="89.51" y="5087.5" >`co..</text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="960.9" y="5845" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="963.95" y="5855.5" ></text>
</g>
<g >
<title>`llvm::APInt::sdiv_ov(llvm::APInt const&amp;, bool&amp;) const (1 samples, 0.04%)</title><rect x="731.4" y="5797" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="734.42" y="5807.5" ></text>
</g>
<g >
<title>`wrapped_cl__nreverse_T_sp (1 samples, 0.04%)</title><rect x="685.0" y="5989" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="687.96" y="5999.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="284.6" y="1653" width="2.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="287.58" y="1663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="285.5" y="1013" width="1.4" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="288.52" y="1023.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="276.1" y="4501" width="5.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="279.13" y="4511.5" ></text>
</g>
<g >
<title>`INTERPRET-DTREE-PROGRAM^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="178.5" y="2229" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="181.50" y="2239.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (4 samples, 0.16%)</title><rect x="757.7" y="5813" width="1.9" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="760.71" y="5823.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (2 samples, 0.08%)</title><rect x="742.7" y="5813" width="0.9" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="745.69" y="5823.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (86 samples, 3.42%)</title><rect x="611.7" y="5445" width="40.4" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="614.73" y="5455.5" >`DO..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="231.5" y="3925" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="234.54" y="3935.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="167.7" y="2053" width="10.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="170.71" y="2063.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="61.6" y="5029" width="1.0" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="64.63" y="5039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="397.7" y="4037" width="1.9" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="400.70" y="4047.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="407.6" y="5045" width="3.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="410.56" y="5055.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="418.8" y="981" width="1.0" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="421.82" y="991.5" ></text>
</g>
<g >
<title>`core::lambdaListHandler_createBindings(gctools::smart_ptr&lt;core: (1 samples, 0.04%)</title><rect x="652.1" y="5429" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="655.10" y="5439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (137 samples, 5.45%)</title><rect x="167.2" y="4005" width="64.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="170.24" y="4015.5" >`INTERP..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="51.8" y="5141" width="3.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="54.77" y="5151.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="678.9" y="5909" width="0.4" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="681.85" y="5919.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (14 samples, 0.56%)</title><rect x="17.5" y="4213" width="6.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="20.51" y="4223.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="91.7" y="4181" width="7.9" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="94.67" y="4191.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="431.5" y="2997" width="1.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="434.50" y="3007.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Value*&gt;::insert(llvm::Value*) (1 samples, 0.04%)</title><rect x="746.9" y="5701" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="749.91" y="5711.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3221" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="404.93" y="3231.5" ></text>
</g>
<g >
<title>0x11a477094 (6 samples, 0.24%)</title><rect x="294.0" y="4645" width="2.8" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="296.97" y="4655.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (4 samples, 0.16%)</title><rect x="122.6" y="2789" width="1.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="125.65" y="2799.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="321.2" y="5045" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="324.19" y="5055.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.04%)</title><rect x="906.5" y="5701" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="909.50" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="396.8" y="4213" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="399.76" y="4223.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (1 samples, 0.04%)</title><rect x="247.0" y="661" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="250.03" y="671.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="23.6" y="3957" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="26.61" y="3967.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (2 samples, 0.08%)</title><rect x="259.2" y="181" width="1.0" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="262.24" y="191.5" ></text>
</g>
<g >
<title>`llvm::AAResults::pointsToConstantMemory(llvm::MemoryLocation co (1 samples, 0.04%)</title><rect x="789.6" y="5781" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="792.63" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="100.6" y="3621" width="0.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="103.59" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1269" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="430.27" y="1279.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::make(unsigned long, int, bool, gctools::smart_p (1 samples, 0.04%)</title><rect x="55.1" y="5317" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="58.06" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="123.6" y="1685" width="0.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="126.59" y="1695.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="17.5" y="4405" width="8.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="20.51" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="417.9" y="805" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="420.88" y="815.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="340.0" y="4533" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="342.97" y="4543.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="125.9" y="2773" width="1.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="128.93" y="2783.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="38.2" y="4293" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="41.16" y="4303.5" ></text>
</g>
<g >
<title>`IRC-COND-BR^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="623.0" y="5189" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="626.00" y="5199.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (16 samples, 0.64%)</title><rect x="395.4" y="5061" width="7.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="398.35" y="5071.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="428.7" y="1957" width="0.4" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="431.68" y="1967.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="92.1" y="2933" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="95.14" y="2943.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="279.4" y="1061" width="1.4" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="282.42" y="1071.5" ></text>
</g>
<g >
<title>`CLOSURE-CALL-OR-INVOKE^CLASP-CLEAVIR^FN^^ (9 samples, 0.36%)</title><rect x="644.1" y="5397" width="4.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="647.12" y="5407.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.08%)</title><rect x="294.0" y="4117" width="0.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="296.97" y="4127.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="665.2" y="5413" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="668.24" y="5423.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.04%)</title><rect x="379.4" y="4933" width="0.5" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="382.40" y="4943.5" ></text>
</g>
<g >
<title>`MAKE-DATUM-ALLOCA^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="617.8" y="5365" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="620.84" y="5375.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (1 samples, 0.04%)</title><rect x="179.4" y="2149" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="182.44" y="2159.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="125.9" y="3013" width="1.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="128.93" y="3023.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="429.6" y="1973" width="1.0" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="432.62" y="1983.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="455.4" y="5717" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="458.43" y="5727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="408.0" y="4549" width="2.8" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="411.03" y="4559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="279.9" y="53" width="0.9" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="282.89" y="63.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (3 samples, 0.12%)</title><rect x="752.1" y="5685" width="1.4" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="755.08" y="5695.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.04%)</title><rect x="134.4" y="4325" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="137.38" y="4335.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="235.3" y="245" width="4.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="238.30" y="255.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.04%)</title><rect x="887.7" y="5701" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="890.72" y="5711.5" ></text>
</g>
<g >
<title>`OPTIMIZED-FIXED-TO-MULTIPLE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^ (1 samples, 0.04%)</title><rect x="406.6" y="5669" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="409.62" y="5679.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="259.2" y="325" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="262.24" y="335.5" ></text>
</g>
<g >
<title>`isObjectSmallerThan(llvm::Value const*, unsigned long long, llv (1 samples, 0.04%)</title><rect x="919.2" y="5701" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="922.17" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (12 samples, 0.48%)</title><rect x="410.8" y="5189" width="5.7" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="413.84" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (56 samples, 2.23%)</title><rect x="204.3" y="229" width="26.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="207.32" y="239.5" >`..</text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (1 samples, 0.04%)</title><rect x="255.5" y="3061" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="258.48" y="3071.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (8 samples, 0.32%)</title><rect x="502.4" y="5765" width="3.7" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="505.37" y="5775.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="631.4" y="5317" width="0.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="634.45" y="5327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="120.3" y="3589" width="0.9" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="123.30" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="408.5" y="2757" width="0.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="411.50" y="2767.5" ></text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (2 samples, 0.08%)</title><rect x="277.5" y="565" width="1.0" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="280.54" y="575.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="1893" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="412.90" y="1903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="276.1" y="4789" width="10.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="279.13" y="4799.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="92.1" y="3285" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="95.14" y="3295.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (21 samples, 0.84%)</title><rect x="384.6" y="4549" width="9.8" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="387.56" y="4559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="278.9" y="373" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="281.95" y="383.5" ></text>
</g>
<g >
<title>0x1225e9094 (10 samples, 0.40%)</title><rect x="172.4" y="277" width="4.7" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="175.40" y="287.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="242.8" y="2149" width="0.5" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="245.81" y="2159.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="165.4" y="3813" width="1.8" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="168.36" y="3823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (32 samples, 1.27%)</title><rect x="187.4" y="229" width="15.0" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="190.42" y="239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.7" y="773" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="430.74" y="783.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="393.5" y="3605" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="396.48" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="397.7" y="4053" width="1.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="400.70" y="4063.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hash_combine&lt;unsigned int, unsigned int,  (1 samples, 0.04%)</title><rect x="615.5" y="5269" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="618.49" y="5279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1013" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="430.74" y="1023.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::BasicBlock&gt;, llvm::S (1 samples, 0.04%)</title><rect x="947.8" y="5909" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="950.80" y="5919.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="202.9" y="1125" width="1.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="205.91" y="1135.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="758.6" y="5733" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="761.65" y="5743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="52.2" y="4517" width="2.9" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="55.24" y="4527.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="254.1" y="3157" width="1.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="257.07" y="3167.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="295.4" y="2805" width="0.9" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="298.38" y="2815.5" ></text>
</g>
<g >
<title>`unw_init_local (1 samples, 0.04%)</title><rect x="12.8" y="5541" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="15.82" y="5551.5" ></text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="310.4" y="5797" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="313.40" y="5807.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="36.3" y="3781" width="0.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="39.28" y="3791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="34.4" y="4981" width="0.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="37.41" y="4991.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (6 samples, 0.24%)</title><rect x="294.0" y="4485" width="2.8" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="296.97" y="4495.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (3 samples, 0.12%)</title><rect x="520.2" y="5781" width="1.4" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="523.21" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="165.4" y="3717" width="1.8" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="168.36" y="3727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="429.6" y="1829" width="1.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="432.62" y="1839.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="23.6" y="4021" width="0.5" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="26.61" y="4031.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (1 samples, 0.04%)</title><rect x="26.0" y="4277" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="28.96" y="4287.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (136 samples, 5.41%)</title><rect x="167.2" y="3301" width="63.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="170.24" y="3311.5" >`CONVER..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (48 samples, 1.91%)</title><rect x="180.4" y="757" width="22.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="183.38" y="767.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="1781" width="4.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="285.70" y="1791.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="95.4" y="3541" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="98.43" y="3551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="295.4" y="2917" width="0.9" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="298.38" y="2927.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="396.3" y="4517" width="3.7" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="399.29" y="4527.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="317.4" y="5509" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="320.44" y="5519.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (2 samples, 0.08%)</title><rect x="279.9" y="469" width="0.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="282.89" y="479.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.7" y="1397" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="430.74" y="1407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="661" width="5.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="175.40" y="671.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (15 samples, 0.60%)</title><rect x="35.8" y="4901" width="7.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="38.82" y="4911.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((:AROUND) (T T CLASP))^METHOD (1 samples, 0.04%)</title><rect x="280.8" y="3781" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="283.83" y="3791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="405.2" y="5589" width="0.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="408.21" y="5599.5" ></text>
</g>
<g >
<title>`llvm::isIdentifiedObject(llvm::Value const*) (1 samples, 0.04%)</title><rect x="811.7" y="5653" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="814.69" y="5663.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="558.2" y="5813" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="561.23" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="232.0" y="2933" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="235.01" y="2943.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (19 samples, 0.76%)</title><rect x="259.2" y="1253" width="9.0" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="262.24" y="1263.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="138.6" y="4341" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="141.61" y="4351.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (1 samples, 0.04%)</title><rect x="26.9" y="4661" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="29.90" y="4671.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="283.2" y="1189" width="1.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="286.17" y="1199.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="269.1" y="229" width="2.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="272.09" y="239.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="417.4" y="1205" width="2.4" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="420.41" y="1215.5" ></text>
</g>
<g >
<title>`core::clasp_namestring(gctools::smart_ptr&lt;core::T_O&gt;, int) (2 samples, 0.08%)</title><rect x="39.1" y="4117" width="0.9" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="42.10" y="4127.5" ></text>
</g>
<g >
<title>`STRING-EQUAL^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="162.5" y="4341" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="165.55" y="4351.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="171.5" y="1573" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="174.46" y="1583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="172.4" y="1621" width="5.6" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="175.40" y="1631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (35 samples, 1.39%)</title><rect x="417.4" y="4629" width="16.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="420.41" y="4639.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="415.5" y="4469" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="418.54" y="4479.5" ></text>
</g>
<g >
<title>`VALID-KEYWORDS-FROM-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="84.6" y="4853" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="87.63" y="4863.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="123.6" y="1157" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="126.59" y="1167.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="19.9" y="3349" width="0.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="22.86" y="3359.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="110.4" y="3509" width="1.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="113.45" y="3519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="167.7" y="1285" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="170.71" y="1295.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::computeExitLimitFromICmp(llvm::Loop cons (1 samples, 0.04%)</title><rect x="920.1" y="5733" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="923.11" y="5743.5" ></text>
</g>
<g >
<title>`llvmo::APInt_O::makeAPIntWidth(gctools::smart_ptr&lt;core::Integer (1 samples, 0.04%)</title><rect x="672.3" y="5765" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="675.28" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="165.8" y="1957" width="1.4" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="168.83" y="1967.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (156 samples, 6.21%)</title><rect x="597.2" y="5797" width="73.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="600.18" y="5807.5" >`LAYOUT-..</text>
</g>
<g >
<title>`GC_get_first_part (1 samples, 0.04%)</title><rect x="178.0" y="2101" width="0.5" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="181.04" y="2111.5" ></text>
</g>
<g >
<title>`llvm::GraphTraits&lt;llvm::BasicBlock*&gt;::child_end(llvm::BasicBloc (1 samples, 0.04%)</title><rect x="857.2" y="5813" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="860.22" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="36.8" y="3525" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="39.75" y="3535.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="353.6" y="5509" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="356.58" y="5519.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="888.7" y="5669" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="891.66" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.9" y="3045" width="0.5" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="396.95" y="3055.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (31 samples, 1.23%)</title><rect x="257.4" y="2885" width="14.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="260.36" y="2895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="3285" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="414.31" y="3295.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="394.4" y="5013" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="397.42" y="5023.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (15 samples, 0.60%)</title><rect x="232.5" y="2965" width="7.0" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="235.48" y="2975.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((:AROUND) (T T CLASP))^METHOD (1 samples, 0.04%)</title><rect x="296.8" y="5205" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="299.79" y="5215.5" ></text>
</g>
<g >
<title>0x1225e5094 (57 samples, 2.27%)</title><rect x="204.3" y="549" width="26.8" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="207.32" y="559.5" >0..</text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="429.6" y="1605" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="432.62" y="1615.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="49.9" y="5605" width="5.2" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="52.90" y="5615.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (41 samples, 1.63%)</title><rect x="325.4" y="5013" width="19.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="328.42" y="5023.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="632.4" y="5253" width="0.5" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="635.39" y="5263.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (2 samples, 0.08%)</title><rect x="277.5" y="581" width="1.0" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="280.54" y="591.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="276.1" y="4613" width="5.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="279.13" y="4623.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (1 samples, 0.04%)</title><rect x="282.2" y="3093" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="285.24" y="3103.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (55 samples, 2.19%)</title><rect x="323.5" y="5349" width="25.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="326.54" y="5359.5" >`..</text>
</g>
<g >
<title>`(anonymous namespace)::SimplifyCFGOpt::SimplifyCondBranch(llvm: (2 samples, 0.08%)</title><rect x="932.8" y="5829" width="0.9" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="935.78" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (23 samples, 0.91%)</title><rect x="383.6" y="4965" width="10.8" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="386.62" y="4975.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (2 samples, 0.08%)</title><rect x="171.5" y="1749" width="0.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="174.46" y="1759.5" ></text>
</g>
<g >
<title>`ThreadCmpOverSelect(llvm::CmpInst::Predicate, llvm::Value*, llv (6 samples, 0.24%)</title><rect x="748.3" y="5813" width="2.8" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="751.32" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.0" y="2181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="411.97" y="2191.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.04%)</title><rect x="664.8" y="5557" width="0.4" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="667.77" y="5567.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="421.2" y="3813" width="0.4" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="424.17" y="3823.5" ></text>
</g>
<g >
<title>`llvm::CodeMetrics::analyzeBasicBlock(llvm::BasicBlock const*, l (1 samples, 0.04%)</title><rect x="782.6" y="5845" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="785.59" y="5855.5" ></text>
</g>
<g >
<title>`core::SourcePosInfo_O::create(unsigned int, unsigned long, unsi (1 samples, 0.04%)</title><rect x="18.4" y="3477" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="21.45" y="3487.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="282.7" y="1445" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="285.70" y="1455.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="250.3" y="1237" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="253.32" y="1247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.7" y="1461" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="430.74" y="1471.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldGetElementPtr(llvm::Type*, llvm::Constant*, b (1 samples, 0.04%)</title><rect x="748.8" y="5637" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="751.79" y="5647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="397.7" y="3685" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="400.70" y="3695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="182.7" y="149" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="185.73" y="159.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="45.2" y="5461" width="1.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="48.20" y="5471.5" ></text>
</g>
<g >
<title>`wrapped_cl__type_of_T_sp (2 samples, 0.08%)</title><rect x="277.5" y="629" width="1.0" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="280.54" y="639.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (43 samples, 1.71%)</title><rect x="252.2" y="3829" width="20.2" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="255.20" y="3839.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (5 samples, 0.20%)</title><rect x="375.2" y="5813" width="2.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="378.17" y="5823.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (2 samples, 0.08%)</title><rect x="872.2" y="5781" width="1.0" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="875.24" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="3189" width="1.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="434.50" y="3199.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="168.6" y="709" width="0.5" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="171.65" y="719.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="295.4" y="3301" width="1.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="298.38" y="3311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="427.3" y="3173" width="4.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="430.27" y="3183.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (1 samples, 0.04%)</title><rect x="233.4" y="2213" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="236.42" y="2223.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (3 samples, 0.12%)</title><rect x="812.2" y="5637" width="1.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="815.16" y="5647.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.04%)</title><rect x="628.2" y="5109" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="631.16" y="5119.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="32.5" y="5317" width="1.0" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="35.53" y="5327.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="389.7" y="3685" width="0.5" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="392.72" y="3695.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="123.1" y="2197" width="1.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="126.12" y="2207.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="410.8" y="4309" width="1.0" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="413.84" y="4319.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (10 samples, 0.40%)</title><rect x="481.2" y="5525" width="4.7" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="484.25" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (4 samples, 0.16%)</title><rect x="390.2" y="3557" width="1.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="393.19" y="3567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="242.8" y="2549" width="8.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="245.81" y="2559.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (7 samples, 0.28%)</title><rect x="88.4" y="4005" width="3.3" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="91.39" y="4015.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="823.4" y="5717" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="826.42" y="5727.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="235.3" y="629" width="4.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="238.30" y="639.5" ></text>
</g>
<g >
<title>`std::__1::locale::use_facet(std::__1::locale::id&amp;) const (1 samples, 0.04%)</title><rect x="331.1" y="4325" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="334.05" y="4335.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="92.1" y="3525" width="1.9" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="95.14" y="3535.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="270.0" y="181" width="1.9" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="273.03" y="191.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="295.4" y="2341" width="0.4" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="298.38" y="2351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="385.0" y="3925" width="2.8" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="388.03" y="3935.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="293.5" y="5333" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="296.50" y="5343.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="2389" width="50.7" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="183.38" y="2399.5" >`INTE..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1605" width="2.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="420.41" y="1615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (8 samples, 0.32%)</title><rect x="167.7" y="1813" width="3.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="170.71" y="1823.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="343.3" y="4885" width="1.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="346.25" y="4895.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="247.5" y="69" width="1.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="250.50" y="79.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getPredicateOnEdge(unsigned int, llvm::Val (3 samples, 0.12%)</title><rect x="702.8" y="5829" width="1.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="705.79" y="5839.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.04%)</title><rect x="308.5" y="5813" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="311.52" y="5823.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="307.6" y="5845" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="310.58" y="5855.5" ></text>
</g>
<g >
<title>`GC_allocobj (4 samples, 0.16%)</title><rect x="504.2" y="5605" width="1.9" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="507.25" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="268.6" y="469" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="271.62" y="479.5" ></text>
</g>
<g >
<title>`llvm::isAllocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo (1 samples, 0.04%)</title><rect x="777.4" y="5829" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="780.42" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="5029" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="419.48" y="5039.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="111.9" y="3637" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="114.85" y="3647.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="167.7" y="1205" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="170.71" y="1215.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="417.9" y="453" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="420.88" y="463.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="114.2" y="3557" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="117.20" y="3567.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (32 samples, 1.27%)</title><rect x="187.4" y="325" width="15.0" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="190.42" y="335.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (4 samples, 0.16%)</title><rect x="122.6" y="3125" width="1.9" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="125.65" y="3135.5" ></text>
</g>
<g >
<title>`__gmpz_init_set_si (1 samples, 0.04%)</title><rect x="31.6" y="5125" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="34.59" y="5135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="3061" width="0.9" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="403.99" y="3071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1093" width="0.5" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="427.92" y="1103.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="598.1" y="5733" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="601.12" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="270.0" y="69" width="1.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="273.03" y="79.5" ></text>
</g>
<g >
<title>`INSTANCE-CLASS^CORE^FN^^ (1 samples, 0.04%)</title><rect x="359.2" y="5781" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="362.21" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="415.5" y="4501" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="418.54" y="4511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="332.0" y="4725" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="334.99" y="4735.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="423.0" y="4005" width="10.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="426.05" y="4015.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="428.2" y="2389" width="1.4" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="431.21" y="2399.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="321.7" y="5157" width="0.9" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="324.66" y="5167.5" ></text>
</g>
<g >
<title>`setup_header (1 samples, 0.04%)</title><rect x="553.1" y="5621" width="0.4" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="556.06" y="5631.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="231.1" y="3429" width="0.4" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="234.07" y="3439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="410.4" y="3317" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="413.37" y="3327.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.04%)</title><rect x="17.0" y="4421" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="20.04" y="4431.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="242.8" y="2101" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="245.81" y="2111.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="167.7" y="1861" width="3.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="170.71" y="1871.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="603.3" y="5445" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="606.29" y="5455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="422.1" y="2373" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="425.11" y="2383.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="341.8" y="4341" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="344.85" y="4351.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="340.0" y="4693" width="0.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="342.97" y="4703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4949" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="408.68" y="4959.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="3045" width="4.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="279.60" y="3055.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (23 samples, 0.91%)</title><rect x="257.4" y="1893" width="10.8" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="260.36" y="1903.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldGetElementPtr(llvm::Type*, llvm::Constant*, b (1 samples, 0.04%)</title><rect x="354.0" y="5221" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="357.05" y="5231.5" ></text>
</g>
<g >
<title>`HOIST-LOAD-TIME-VALUE^CLASP-CLEAVIR-AST^FN^^ (71 samples, 2.82%)</title><rect x="318.8" y="5589" width="33.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="321.85" y="5599.5" >`H..</text>
</g>
<g >
<title>`GENERALP^CORE^FN^^ (1 samples, 0.04%)</title><rect x="390.2" y="3445" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="393.19" y="3455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="417.4" y="1861" width="2.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="420.41" y="1871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="422.1" y="2613" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="425.11" y="2623.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="124.5" y="2053" width="1.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="127.53" y="2063.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="423.0" y="2149" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="426.05" y="2159.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="415.5" y="4645" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="418.54" y="4655.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="387.8" y="4389" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="390.84" y="4399.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4261" width="1.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="39.28" y="4271.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.04%)</title><rect x="234.8" y="517" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="237.83" y="527.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="388.3" y="4181" width="4.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="391.31" y="4191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="393.9" y="3413" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="396.95" y="3423.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="268.6" y="1541" width="3.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="271.62" y="1551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (11 samples, 0.44%)</title><rect x="417.4" y="4485" width="5.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="420.41" y="4495.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.3" y="3909" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="414.31" y="3919.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="424.9" y="1045" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="427.92" y="1055.5" ></text>
</g>
<g >
<title>`wrapped_cl__error_T_spList_sp (2 samples, 0.08%)</title><rect x="287.9" y="4549" width="0.9" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="290.87" y="4559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="1813" width="4.2" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="285.70" y="1823.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (1 samples, 0.04%)</title><rect x="700.9" y="5813" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="703.91" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (138 samples, 5.49%)</title><rect x="167.2" y="4053" width="64.8" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="170.24" y="4063.5" >`core::..</text>
</g>
<g >
<title>`small_malloc_should_clear (1 samples, 0.04%)</title><rect x="693.4" y="5669" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="696.40" y="5679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="1333" width="4.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="279.60" y="1343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.0" y="2133" width="0.4" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="411.97" y="2143.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="412.3" y="4101" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="415.25" y="4111.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="125.9" y="2405" width="1.0" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="128.93" y="2415.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="92.1" y="3301" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="95.14" y="3311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="408.0" y="4661" width="2.8" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="411.03" y="4671.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.08%)</title><rect x="405.2" y="5365" width="0.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="408.21" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (40 samples, 1.59%)</title><rect x="232.0" y="4005" width="18.8" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="235.01" y="4015.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="398.2" y="3253" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="401.17" y="3263.5" ></text>
</g>
<g >
<title>`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="344.2" y="4853" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="347.19" y="4863.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (35 samples, 1.39%)</title><rect x="256.0" y="3285" width="16.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="258.95" y="3295.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (17 samples, 0.68%)</title><rect x="91.7" y="3909" width="7.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="94.67" y="3919.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="271.9" y="3205" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="274.91" y="3215.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="92.1" y="3349" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="95.14" y="3359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.9" y="2709" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="412.90" y="2719.5" ></text>
</g>
<g >
<title>`FIND-TYPE-BOUNDS^CORE^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="549" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="171.18" y="559.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="307.6" y="5813" width="0.5" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="310.58" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="424.9" y="1461" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="427.92" y="1471.5" ></text>
</g>
<g >
<title>`DO-INLINING^CLEAVIR-PARTIAL-INLINING^FN^^ (2 samples, 0.08%)</title><rect x="328.7" y="4469" width="0.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="331.70" y="4479.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="123.6" y="677" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="126.59" y="687.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (57 samples, 2.27%)</title><rect x="204.3" y="741" width="26.8" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="207.32" y="751.5" >`..</text>
</g>
<g >
<title>`llvm::LoopAccessInfo::LoopAccessInfo(llvm::Loop*, llvm::ScalarE (1 samples, 0.04%)</title><rect x="846.4" y="5813" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="849.42" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="231.5" y="3941" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="234.54" y="3951.5" ></text>
</g>
<g >
<title>0x12254f0c9 (1 samples, 0.04%)</title><rect x="260.2" y="117" width="0.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="263.18" y="127.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="871.8" y="5781" width="0.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="874.77" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="2485" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="414.78" y="2495.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="1573" width="0.9" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="126.59" y="1583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (23 samples, 0.91%)</title><rect x="423.0" y="4277" width="10.8" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="426.05" y="4287.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.3" y="1221" width="0.4" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="430.27" y="1231.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (108 samples, 4.30%)</title><rect x="180.4" y="2469" width="50.7" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="183.38" y="2479.5" >`core..</text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="51.8" y="5029" width="0.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="54.77" y="5039.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="56.5" y="5733" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="59.47" y="5743.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (32 samples, 1.27%)</title><rect x="112.3" y="3893" width="15.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="115.32" y="3903.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="425.9" y="2789" width="0.9" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="428.86" y="2799.5" ></text>
</g>
<g >
<title>`IRC-BASIC-BLOCK-CREATE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="350.8" y="5349" width="0.4" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="353.76" y="5359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.3" y="1461" width="0.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="430.27" y="1471.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="654.9" y="5445" width="0.5" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="657.92" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="379.9" y="4917" width="2.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="382.86" y="4927.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="398.2" y="3685" width="1.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="401.17" y="3695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="424.9" y="2549" width="1.0" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="427.92" y="2559.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (40 samples, 1.59%)</title><rect x="232.0" y="3909" width="18.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="235.01" y="3919.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="398.2" y="3109" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="401.17" y="3119.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="275.7" y="5109" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="278.66" y="5119.5" ></text>
</g>
<g >
<title>`core::cl__streamp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="26.4" y="4517" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="29.43" y="4527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="411.8" y="4357" width="0.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="414.78" y="4367.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.7" y="789" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="430.74" y="799.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock const*, llvm (1 samples, 0.04%)</title><rect x="925.3" y="5861" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="928.27" y="5871.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.04%)</title><rect x="553.1" y="5701" width="0.4" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="556.06" y="5711.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (9 samples, 0.36%)</title><rect x="140.0" y="4341" width="4.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="143.02" y="4351.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (57 samples, 2.27%)</title><rect x="204.3" y="1125" width="26.8" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="207.32" y="1135.5" >`..</text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (1 samples, 0.04%)</title><rect x="583.1" y="5813" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="586.10" y="5823.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.04%)</title><rect x="119.8" y="3461" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="122.83" y="3471.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.7" y="1061" width="0.5" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="430.74" y="1071.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="272.4" y="4549" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="275.38" y="4559.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (2 samples, 0.08%)</title><rect x="39.1" y="4245" width="0.9" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="42.10" y="4255.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.04%)</title><rect x="232.5" y="2485" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="235.48" y="2495.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="166.3" y="773" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="169.30" y="783.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="3461" width="4.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="279.60" y="3471.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="424.9" y="1909" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="427.92" y="1919.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::intersectAssumeOrGuar (1 samples, 0.04%)</title><rect x="694.3" y="5845" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="697.34" y="5855.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="626.8" y="5093" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="629.75" y="5103.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="321.2" y="5125" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="324.19" y="5135.5" ></text>
</g>
<g >
<title>0x11a477094 (47 samples, 1.87%)</title><rect x="180.4" y="693" width="22.0" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="183.38" y="703.5" >0..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="243.3" y="1813" width="7.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="246.28" y="1823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="3381" width="4.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="279.60" y="3391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="1557" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="428.86" y="1567.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (3 samples, 0.12%)</title><rect x="325.9" y="4757" width="1.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="328.89" y="4767.5" ></text>
</g>
<g >
<title>`small_malloc_should_clear (1 samples, 0.04%)</title><rect x="695.3" y="5653" width="0.5" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="698.28" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (9 samples, 0.36%)</title><rect x="423.0" y="3781" width="4.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="426.05" y="3791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="91.7" y="4053" width="7.9" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="94.67" y="4063.5" ></text>
</g>
<g >
<title>0x11a477094 (9 samples, 0.36%)</title><rect x="282.7" y="2149" width="4.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="285.70" y="2159.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="98.7" y="3717" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="101.71" y="3727.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (2 samples, 0.08%)</title><rect x="533.8" y="5813" width="1.0" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="536.82" y="5823.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="125.5" y="1877" width="0.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="128.47" y="1887.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="524.9" y="5717" width="0.5" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="527.90" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="167.7" y="1461" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="170.71" y="1471.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="613" width="1.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="288.52" y="623.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="948.7" y="5925" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="951.74" y="5935.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (8 samples, 0.32%)</title><rect x="556.3" y="5829" width="3.8" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="559.35" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="343.7" y="4837" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="346.72" y="4847.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (12 samples, 0.48%)</title><rect x="172.4" y="1717" width="5.6" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="175.40" y="1727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="285.5" y="245" width="1.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="288.52" y="255.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solveBlockValueImpl(l (1 samples, 0.04%)</title><rect x="691.5" y="5813" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="694.53" y="5823.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::BasicBlock(llvm::LLVMContext&amp;, llvm::Twine co (1 samples, 0.04%)</title><rect x="634.7" y="5317" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="637.73" y="5327.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.04%)</title><rect x="742.2" y="5781" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="745.22" y="5791.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="535.2" y="5797" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="538.23" y="5807.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="170.1" y="1397" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="173.06" y="1407.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="345.6" y="4917" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="348.60" y="4927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="1253" width="0.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="434.96" y="1263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (22 samples, 0.88%)</title><rect x="384.1" y="4837" width="10.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="387.09" y="4847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="2661" width="1.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="434.50" y="2671.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="423.0" y="3685" width="4.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="426.05" y="3695.5" ></text>
</g>
<g >
<title>`ftello (1 samples, 0.04%)</title><rect x="49.9" y="4341" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="52.90" y="4351.5" ></text>
</g>
<g >
<title>`core::core__clock_gettime_nanoseconds() (1 samples, 0.04%)</title><rect x="462.5" y="5813" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="465.47" y="5823.5" ></text>
</g>
<g >
<title>`__cxa_allocate_exception (1 samples, 0.04%)</title><rect x="16.1" y="5077" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="19.10" y="5087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="423.0" y="3653" width="4.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="426.05" y="3663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="287.4" y="4869" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="290.40" y="4879.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="49.9" y="5301" width="5.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="52.90" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2437" width="1.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="427.92" y="2447.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="3685" width="5.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="284.30" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3829" width="1.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="411.03" y="3839.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION-IMPL^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="608.4" y="5413" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="611.45" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (22 samples, 0.88%)</title><rect x="240.5" y="3205" width="10.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="243.46" y="3215.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="335.7" y="4405" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="338.74" y="4415.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="49.9" y="4789" width="0.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="52.90" y="4799.5" ></text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="91.7" y="3637" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="94.67" y="3647.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="405.2" y="5061" width="0.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="408.21" y="5071.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="2453" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="414.78" y="2463.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (31 samples, 1.23%)</title><rect x="257.4" y="2037" width="14.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="260.36" y="2047.5" ></text>
</g>
<g >
<title>0x11a477094 (4 samples, 0.16%)</title><rect x="247.5" y="213" width="1.9" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="250.50" y="223.5" ></text>
</g>
<g >
<title>0x1225ef094 (35 samples, 1.39%)</title><rect x="256.0" y="3445" width="16.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="258.95" y="3455.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="287.4" y="5061" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="290.40" y="5071.5" ></text>
</g>
<g >
<title>`COMPILE-HEADER-CHECK^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="609.9" y="5413" width="0.9" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="612.86" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (48 samples, 1.91%)</title><rect x="180.4" y="1285" width="22.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="183.38" y="1295.5" >`..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="295.4" y="2277" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="298.38" y="2287.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="285.5" y="181" width="1.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="288.52" y="191.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="2341" width="3.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="420.41" y="2351.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="268.2" y="1397" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="271.15" y="1407.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="397.2" y="3877" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="400.23" y="3887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="3237" width="3.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="420.41" y="3247.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (2 samples, 0.08%)</title><rect x="353.6" y="5397" width="0.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="356.58" y="5407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="276.6" y="4101" width="4.7" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="279.60" y="4111.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(l (8 samples, 0.32%)</title><rect x="817.3" y="5733" width="3.8" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="820.32" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="424.9" y="1813" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="427.92" y="1823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="1557" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="423.70" y="1567.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.04%)</title><rect x="373.8" y="5749" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="376.76" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="125.0" y="1941" width="0.9" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="128.00" y="1951.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="235.3" y="229" width="0.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="238.30" y="239.5" ></text>
</g>
<g >
<title>0x1225e5094 (3 samples, 0.12%)</title><rect x="124.5" y="2949" width="1.4" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="127.53" y="2959.5" ></text>
</g>
<g >
<title>0x11a477094 (7 samples, 0.28%)</title><rect x="268.6" y="1253" width="3.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="271.62" y="1263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="2405" width="5.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="236.89" y="2415.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.04%)</title><rect x="567.6" y="5733" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="570.61" y="5743.5" ></text>
</g>
<g >
<title>`IRC-SET-INSERT-POINT-BASIC-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="635.7" y="5333" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="638.67" y="5343.5" ></text>
</g>
<g >
<title>`llvm::Twine::toStringRef(llvm::SmallVectorImpl&lt;char&gt;&amp;) const (1 samples, 0.04%)</title><rect x="656.8" y="5381" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="659.79" y="5391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="39.1" y="4229" width="0.9" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="42.10" y="4239.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.4" y="2821" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="412.44" y="2831.5" ></text>
</g>
<g >
<title>0x1225f1094 (7 samples, 0.28%)</title><rect x="268.6" y="837" width="3.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="271.62" y="847.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="427.3" y="2981" width="4.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="430.27" y="2991.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="997" width="5.6" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="236.89" y="1007.5" ></text>
</g>
<g >
<title>0x11a477094 (9 samples, 0.36%)</title><rect x="276.6" y="3125" width="4.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="279.60" y="3135.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (56 samples, 2.23%)</title><rect x="204.3" y="261" width="26.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="207.32" y="271.5" >`..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2421" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="127.53" y="2431.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="2885" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="412.90" y="2895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="423.0" y="3397" width="3.8" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="426.05" y="3407.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="390.2" y="3589" width="1.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="393.19" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (53 samples, 2.11%)</title><rect x="324.0" y="5269" width="24.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="327.01" y="5279.5" >`..</text>
</g>
<g >
<title>`ITEM-EQUAL^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-ITEM))^MET (1 samples, 0.04%)</title><rect x="145.6" y="4229" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="148.65" y="4239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1189" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="430.74" y="1199.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="167.7" y="2085" width="10.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="170.71" y="2095.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2853" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="127.53" y="2863.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (1 samples, 0.04%)</title><rect x="231.5" y="3893" width="0.5" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="234.54" y="3903.5" ></text>
</g>
<g >
<title>0x11a477094 (7 samples, 0.28%)</title><rect x="268.6" y="725" width="3.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="271.62" y="735.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="238.1" y="101" width="1.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="241.11" y="111.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="122.6" y="3029" width="1.9" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="125.65" y="3039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (136 samples, 5.41%)</title><rect x="167.2" y="3669" width="63.9" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="170.24" y="3679.5" >`core::..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="286.9" y="4629" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="289.93" y="4639.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="410.8" y="4981" width="1.9" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="413.84" y="4991.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (1 samples, 0.04%)</title><rect x="341.8" y="4389" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="344.85" y="4399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="278.9" y="805" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="281.95" y="815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2837" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="412.90" y="2847.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="282.7" y="2581" width="4.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="285.70" y="2591.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="414.1" y="4069" width="0.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="417.13" y="4079.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2549" width="4.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="285.70" y="2559.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (16 samples, 0.64%)</title><rect x="953.9" y="6005" width="7.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="956.91" y="6015.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="412.3" y="3589" width="0.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="415.25" y="3599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="260.6" y="261" width="7.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="263.64" y="271.5" ></text>
</g>
<g >
<title>`IRC-CCLASP-FUNCTION-CREATE^COMPILER^FN^^ (6 samples, 0.24%)</title><rect x="659.1" y="5605" width="2.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="662.14" y="5615.5" ></text>
</g>
<g >
<title>`SET-PREDECESSORS^CLEAVIR-IR^FN^^ (16 samples, 0.64%)</title><rect x="371.4" y="5845" width="7.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="374.42" y="5855.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (1 samples, 0.04%)</title><rect x="26.0" y="4293" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="28.96" y="4303.5" ></text>
</g>
<g >
<title>`core::clasp_to_double(gctools::smart_ptr&lt;core::Number_O&gt;) (1 samples, 0.04%)</title><rect x="503.8" y="5685" width="0.4" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="506.78" y="5695.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="92.1" y="2869" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="95.14" y="2879.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.04%)</title><rect x="268.6" y="293" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="271.62" y="303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="423.0" y="2133" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="426.05" y="2143.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="425.4" y="1429" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="428.39" y="1439.5" ></text>
</g>
<g >
<title>`CHILDREN^CLEAVIR-AST^((CALL-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="305.2" y="5797" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="308.23" y="5807.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="327.3" y="4469" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="330.30" y="4479.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="125.9" y="2645" width="1.0" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="128.93" y="2655.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="167.2" y="2405" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="170.24" y="2415.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (37 samples, 1.47%)</title><rect x="325.9" y="4837" width="17.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="328.89" y="4847.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (1 samples, 0.04%)</title><rect x="671.8" y="5749" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="674.81" y="5759.5" ></text>
</g>
<g >
<title>`POSSIBLY-ADD-ITEM^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-STA (1 samples, 0.04%)</title><rect x="179.9" y="2133" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="182.91" y="2143.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (24 samples, 0.95%)</title><rect x="422.6" y="4533" width="11.2" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="425.58" y="4543.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="387.8" y="4293" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="390.84" y="4303.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.04%)</title><rect x="843.1" y="5637" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="846.13" y="5647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="427.3" y="2389" width="0.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="430.27" y="2399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (24 samples, 0.95%)</title><rect x="422.6" y="4549" width="11.2" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="425.58" y="4559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="2341" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="428.86" y="2351.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="34.9" y="4549" width="0.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="37.88" y="4559.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="29.7" y="5109" width="1.0" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="32.71" y="5119.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="416.9" y="4837" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="419.95" y="4847.5" ></text>
</g>
<g >
<title>0x11a477094 (17 samples, 0.68%)</title><rect x="91.7" y="4213" width="7.9" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="94.67" y="4223.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;llvm::Instruction*, unsig (2 samples, 0.08%)</title><rect x="727.7" y="5845" width="0.9" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="730.67" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="1413" width="0.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="126.59" y="1423.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="723.0" y="5685" width="0.4" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="725.98" y="5695.5" ></text>
</g>
<g >
<title>`core::clasp_namestring(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="27.8" y="4789" width="0.5" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="30.84" y="4799.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="422.1" y="2021" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="425.11" y="2031.5" ></text>
</g>
<g >
<title>`GC_alloc_large (1 samples, 0.04%)</title><rect x="592.0" y="5669" width="0.5" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="595.02" y="5679.5" ></text>
</g>
<g >
<title>`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="793.9" y="5829" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="796.85" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="124.5" y="2229" width="1.4" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="127.53" y="2239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="50.4" y="4629" width="0.4" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="53.37" y="4639.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="3077" width="4.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="285.70" y="3087.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="683.1" y="5861" width="0.4" height="15.0" fill="rgb(237,105,105)" rx="2" ry="2" />
<text  x="686.08" y="5871.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="341.8" y="4725" width="1.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="344.85" y="4735.5" ></text>
</g>
<g >
<title>`stripAndComputeConstantOffsets(llvm::DataLayout const&amp;, llvm::V (2 samples, 0.08%)</title><rect x="755.8" y="5797" width="1.0" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="758.83" y="5807.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (70 samples, 2.78%)</title><rect x="13.8" y="5573" width="32.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="16.75" y="5583.5" >`R..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="34.9" y="4261" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="37.88" y="4271.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="2405" width="3.8" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="420.41" y="2415.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="18.4" y="3445" width="0.5" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="21.45" y="3455.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (55 samples, 2.19%)</title><rect x="60.7" y="5125" width="25.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="63.69" y="5135.5" >`..</text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (1 samples, 0.04%)</title><rect x="50.8" y="4725" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="53.84" y="4735.5" ></text>
</g>
<g >
<title>0x12263f094 (1 samples, 0.04%)</title><rect x="232.0" y="3125" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="235.01" y="3135.5" ></text>
</g>
<g >
<title>`core::cl__string_equal(gctools::smart_ptr&lt;core::T_O&gt;, gctools:: (1 samples, 0.04%)</title><rect x="162.5" y="4309" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="165.55" y="4319.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="421.6" y="3125" width="1.0" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="424.64" y="3135.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="15.6" y="5045" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="18.63" y="5055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1253" width="2.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="420.41" y="1263.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInBoundsGEP(llvm::Value*, gctools::sm (3 samples, 0.12%)</title><rect x="649.8" y="5333" width="1.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="652.75" y="5343.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="165.4" y="2597" width="0.4" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="168.36" y="2607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="297.3" y="5589" width="1.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="300.26" y="5599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="3349" width="3.8" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="420.41" y="3359.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::Value*, std::__1::allocator&lt;llvm::V (1 samples, 0.04%)</title><rect x="646.9" y="5285" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="649.94" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="3621" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="414.31" y="3631.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="351.2" y="5285" width="0.5" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="354.23" y="5295.5" ></text>
</g>
<g >
<title>`REDUCE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="43.8" y="4997" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="46.79" y="5007.5" ></text>
</g>
<g >
<title>`PARSE-FUNCTION-TYPE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="297.7" y="5397" width="1.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="300.72" y="5407.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="410.8" y="4901" width="1.9" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="413.84" y="4911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="398.2" y="3221" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="401.17" y="3231.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="233.0" y="2309" width="0.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="235.95" y="2319.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="287.9" y="4661" width="0.9" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="290.87" y="4671.5" ></text>
</g>
<g >
<title>`std::__1::__vector_base&lt;std::__1::unique_ptr&lt;clang::ast_matcher (1 samples, 0.04%)</title><rect x="847.8" y="5877" width="0.5" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="850.83" y="5887.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.08%)</title><rect x="491.6" y="5733" width="0.9" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="494.58" y="5743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="255.5" y="3301" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="258.48" y="3311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="409.4" y="3493" width="1.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="412.44" y="3503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="420.7" y="1509" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="423.70" y="1519.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="3333" width="4.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="285.70" y="3343.5" ></text>
</g>
<g >
<title>`core::MultipleValues::valueGet(int, int) const (1 samples, 0.04%)</title><rect x="163.0" y="4373" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="166.02" y="4383.5" ></text>
</g>
<g >
<title>`runCVP(llvm::Module&amp;) (13 samples, 0.52%)</title><rect x="937.9" y="5925" width="6.1" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="940.95" y="5935.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="235.3" y="341" width="4.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="238.30" y="351.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="2997" width="63.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="170.24" y="3007.5" >`INTERP..</text>
</g>
<g >
<title>`_pthread_mutex_firstfit_lock_slow (1 samples, 0.04%)</title><rect x="10.0" y="5893" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="13.00" y="5903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="382.7" y="4901" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="385.68" y="4911.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="43.8" y="4965" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="46.79" y="4975.5" ></text>
</g>
<g >
<title>`OPTIMIZED-EQ-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="421.2" y="3749" width="0.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="424.17" y="3759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="287.9" y="4869" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="290.87" y="4879.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (11 samples, 0.44%)</title><rect x="122.2" y="3765" width="5.1" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="125.18" y="3775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="20.3" y="3269" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="23.33" y="3279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="431.5" y="3397" width="1.9" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="434.50" y="3407.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (9 samples, 0.36%)</title><rect x="327.3" y="4597" width="4.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="330.30" y="4607.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="529.6" y="5781" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="532.59" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="387.4" y="3797" width="0.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="390.37" y="3807.5" ></text>
</g>
<g >
<title>`core::clasp_namestring(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="50.8" y="4677" width="0.5" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="53.84" y="4687.5" ></text>
</g>
<g >
<title>`core::cl__make_hash_table(gctools::smart_ptr&lt;core::T_O&gt;, gctool (1 samples, 0.04%)</title><rect x="126.9" y="2725" width="0.4" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="129.87" y="2735.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="3637" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="414.78" y="3647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="1653" width="50.7" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="183.38" y="1663.5" >`INTE..</text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="299.6" y="5829" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="302.60" y="5839.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.04%)</title><rect x="51.8" y="5061" width="0.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="54.77" y="5071.5" ></text>
</g>
<g >
<title>0x1225f1094 (2 samples, 0.08%)</title><rect x="295.4" y="2613" width="0.9" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="298.38" y="2623.5" ></text>
</g>
<g >
<title>`core::core__generalp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="573.7" y="5797" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="576.72" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="278.9" y="69" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="281.95" y="79.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="409.4" y="4389" width="1.4" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="412.44" y="4399.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="240.5" y="3221" width="10.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="243.46" y="3231.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="35.8" y="4837" width="0.5" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="38.82" y="4847.5" ></text>
</g>
<g >
<title>`llvm::buildModuleSummaryIndex(llvm::Module const&amp;, std::__1::fu (3 samples, 0.12%)</title><rect x="960.0" y="5941" width="1.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="963.01" y="5951.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="122.6" y="2741" width="1.9" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="125.65" y="2751.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="295.4" y="2949" width="0.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="298.38" y="2959.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="269.1" y="341" width="2.8" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="272.09" y="351.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (3 samples, 0.12%)</title><rect x="179.0" y="2197" width="1.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="181.97" y="2207.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="254.1" y="3029" width="0.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="257.07" y="3039.5" ></text>
</g>
<g >
<title>`TRANSFORM-QUASIQUOTE-ARGUMENT^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="122.6" y="2517" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="125.65" y="2527.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.0" y="1301" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="434.96" y="1311.5" ></text>
</g>
<g >
<title>`llvm::APInt::srem(llvm::APInt const&amp;) const (1 samples, 0.04%)</title><rect x="666.2" y="5461" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="669.18" y="5471.5" ></text>
</g>
<g >
<title>`SLOT-EXISTS-P^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="127.3" y="5253" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="130.34" y="5263.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="259.2" y="389" width="1.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="262.24" y="399.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.04%)</title><rect x="85.6" y="5045" width="0.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="88.57" y="5055.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (1 samples, 0.04%)</title><rect x="699.0" y="5797" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="702.04" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="423.5" y="2405" width="1.0" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="426.52" y="2415.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilderBase_O::SetCurrentDebugLocationToLineColumnScop (1 samples, 0.04%)</title><rect x="604.7" y="5413" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="607.69" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="393.9" y="3541" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="396.95" y="3551.5" ></text>
</g>
<g >
<title>`ADD-NAMED-CREATOR^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="659.1" y="5509" width="1.0" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="662.14" y="5519.5" ></text>
</g>
<g >
<title>`simplifyFunctionCFG(llvm::Function&amp;, llvm::TargetTransformInfo  (11 samples, 0.44%)</title><rect x="931.8" y="5893" width="5.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="934.85" y="5903.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="719.2" y="5781" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="722.22" y="5791.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (3 samples, 0.12%)</title><rect x="649.8" y="5381" width="1.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="652.75" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T LEXICAL-VARIABLE-INFO T T))^ (1 samples, 0.04%)</title><rect x="233.9" y="149" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="236.89" y="159.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (4 samples, 0.16%)</title><rect x="520.2" y="5797" width="1.9" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="523.21" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="165.4" y="2965" width="1.8" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="168.36" y="2975.5" ></text>
</g>
<g >
<title>`llvm::APInt::operator-=(llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="898.1" y="5765" width="0.4" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="901.05" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (57 samples, 2.27%)</title><rect x="407.6" y="5573" width="26.7" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="410.56" y="5583.5" >`..</text>
</g>
<g >
<title>`llvm::hash_value(llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="871.8" y="5733" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="874.77" y="5743.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::FindKey(llvm::StringRef) const (1 samples, 0.04%)</title><rect x="354.5" y="5381" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="357.52" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="422.1" y="2677" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="425.11" y="2687.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="122.6" y="3653" width="4.7" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="125.65" y="3663.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (2 samples, 0.08%)</title><rect x="123.6" y="2005" width="0.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="126.59" y="2015.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="428.2" y="2181" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="431.21" y="2191.5" ></text>
</g>
<g >
<title>`core::CxxObject_O::~CxxObject_O() (1 samples, 0.04%)</title><rect x="654.4" y="5493" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="657.45" y="5503.5" ></text>
</g>
<g >
<title>`wrapped_cl__logand_List_sp (1 samples, 0.04%)</title><rect x="31.6" y="5141" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="34.59" y="5151.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::apint_match::match&lt;llvm::Value&gt;(llvm:: (1 samples, 0.04%)</title><rect x="899.9" y="5813" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="902.93" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="3397" width="1.0" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="424.64" y="3407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="270.0" y="197" width="1.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="273.03" y="207.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (14 samples, 0.56%)</title><rect x="233.0" y="2517" width="6.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="235.95" y="2527.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="398.2" y="3173" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="401.17" y="3183.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (4 samples, 0.16%)</title><rect x="236.2" y="133" width="1.9" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="239.24" y="143.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="283.2" y="1413" width="1.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="286.17" y="1423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (48 samples, 1.91%)</title><rect x="63.0" y="5045" width="22.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="66.04" y="5055.5" >`..</text>
</g>
<g >
<title>`getValueFromCondition(llvm::Value*, llvm::Value*, bool) (2 samples, 0.08%)</title><rect x="702.8" y="5781" width="0.9" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="705.79" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="2005" width="5.6" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="236.89" y="2015.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="430.6" y="1733" width="0.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="433.56" y="1743.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitCallInst(llvm::CallInst&amp;) (2 samples, 0.08%)</title><rect x="879.7" y="5845" width="1.0" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="882.75" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="380.3" y="4565" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="383.33" y="4575.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="407.6" y="5077" width="3.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="410.56" y="5087.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="406.1" y="5637" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="409.15" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-FUNCTION^CLEAVIR-CST-TO-AST^FN^^ (8 samples, 0.32%)</title><rect x="268.2" y="1717" width="3.7" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="271.15" y="1727.5" ></text>
</g>
<g >
<title>`core::cl__append(gctools::smart_ptr&lt;core::Vaslist&gt;) (1 samples, 0.04%)</title><rect x="356.9" y="5701" width="0.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="359.87" y="5711.5" ></text>
</g>
<g >
<title>`DBG-REGISTER-PARAMETER^COMPILER^FN^^ (5 samples, 0.20%)</title><rect x="654.4" y="5525" width="2.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="657.45" y="5535.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="255.0" y="2869" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="258.01" y="2879.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="421.6" y="4277" width="1.0" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="424.64" y="4287.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="396.8" y="4261" width="0.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="399.76" y="4271.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="633.8" y="5349" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="636.79" y="5359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="232.0" y="3205" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="235.01" y="3215.5" ></text>
</g>
<g >
<title>`llvm::APInt::setBits(unsigned int, unsigned int) (2 samples, 0.08%)</title><rect x="909.8" y="5733" width="0.9" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="912.79" y="5743.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="247.5" y="133" width="1.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="250.50" y="143.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="167.7" y="1413" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="170.71" y="1423.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (108 samples, 4.30%)</title><rect x="180.4" y="2149" width="50.7" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="183.38" y="2159.5" >`PROC..</text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (1 samples, 0.04%)</title><rect x="341.8" y="4533" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="344.85" y="4543.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.04%)</title><rect x="874.1" y="5797" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="877.11" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="386.0" y="3621" width="1.4" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="388.97" y="3631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="409.4" y="3813" width="1.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="412.44" y="3823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="391.6" y="2421" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="394.60" y="2431.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="125.9" y="3125" width="1.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="128.93" y="3135.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-I64^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="640.4" y="5381" width="0.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="643.37" y="5391.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4405" width="1.4" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="39.28" y="4415.5" ></text>
</g>
<g >
<title>`llvm::InstCombineWorklist::AddInitialGroup(llvm::ArrayRef&lt;llvm: (1 samples, 0.04%)</title><rect x="866.1" y="5861" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="869.13" y="5871.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="513.2" y="5701" width="0.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="516.17" y="5711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="294.9" y="4069" width="1.9" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="297.91" y="4079.5" ></text>
</g>
<g >
<title>`SHARPSIGN-PLUS^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="23.6" y="4133" width="0.5" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="26.61" y="4143.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="393.9" y="2901" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="396.95" y="2911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="405.2" y="5445" width="0.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="408.21" y="5455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="405.7" y="4053" width="0.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="408.68" y="4063.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (2 samples, 0.08%)</title><rect x="870.8" y="5765" width="1.0" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="873.83" y="5775.5" ></text>
</g>
<g >
<title>`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="334.8" y="4533" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="337.81" y="4543.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.04%)</title><rect x="588.7" y="5733" width="0.5" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="591.74" y="5743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="415.5" y="4709" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="418.54" y="4719.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.04%)</title><rect x="271.9" y="3253" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="274.91" y="3263.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.04%)</title><rect x="508.5" y="5685" width="0.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="511.47" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="5045" width="0.4" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="419.48" y="5055.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="423.0" y="2773" width="1.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="426.05" y="2783.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (1 samples, 0.04%)</title><rect x="824.8" y="5765" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="827.83" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3301" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="415.25" y="3311.5" ></text>
</g>
<g >
<title>0x122623094 (12 samples, 0.48%)</title><rect x="233.9" y="1253" width="5.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="236.89" y="1263.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="92.1" y="3429" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="95.14" y="3439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="1765" width="1.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="168.83" y="1775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="123.6" y="1429" width="0.9" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="126.59" y="1439.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.04%)</title><rect x="17.0" y="4341" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="20.04" y="4351.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.04%)</title><rect x="525.8" y="5765" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="528.84" y="5775.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="170.5" y="1509" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="173.53" y="1519.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="84.6" y="4885" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="87.63" y="4895.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2645" width="14.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="260.36" y="2655.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (5 samples, 0.20%)</title><rect x="427.3" y="2517" width="2.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="430.27" y="2527.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="269.1" y="469" width="2.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="272.09" y="479.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="180.4" y="437" width="2.3" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="183.38" y="447.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="52.7" y="4053" width="1.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="55.71" y="4063.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (40 samples, 1.59%)</title><rect x="232.0" y="4069" width="18.8" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="235.01" y="4079.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="393.5" y="3749" width="0.9" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="396.48" y="3759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="124.5" y="3029" width="1.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="127.53" y="3039.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="321.7" y="5189" width="0.9" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="324.66" y="5199.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (5 samples, 0.20%)</title><rect x="240.5" y="3013" width="2.3" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="243.46" y="3023.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.4" y="2981" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="412.44" y="2991.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (23 samples, 0.91%)</title><rect x="804.6" y="5733" width="10.8" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="807.65" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="392.5" y="4197" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="395.54" y="4207.5" ></text>
</g>
<g >
<title>`llvm::APInt::clearUnusedBits() (1 samples, 0.04%)</title><rect x="750.7" y="5701" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="753.67" y="5711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="356.9" y="5781" width="0.4" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="359.87" y="5791.5" ></text>
</g>
<g >
<title>0x11a477094 (4 samples, 0.16%)</title><rect x="247.5" y="533" width="1.9" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="250.50" y="543.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (231 samples, 9.19%)</title><rect x="164.0" y="4485" width="108.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="166.95" y="4495.5" >`INTERPRETED-..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="166.3" y="885" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="169.30" y="895.5" ></text>
</g>
<g >
<title>`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="769.9" y="5669" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="772.91" y="5679.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="494.9" y="5781" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="497.86" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="417.4" y="1445" width="2.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="420.41" y="1455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="419.3" y="853" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="422.29" y="863.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="396.8" y="4101" width="0.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="399.76" y="4111.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="382.2" y="4293" width="0.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="385.21" y="4303.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (43 samples, 1.71%)</title><rect x="252.2" y="3877" width="20.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="255.20" y="3887.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'EVAL-WHEN) T T T)) (6 samples, 0.24%)</title><rect x="294.0" y="4757" width="2.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="296.97" y="4767.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.4" y="1893" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="428.39" y="1903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="34.4" y="4757" width="0.9" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="37.41" y="4767.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="2549" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="411.97" y="2559.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="417.4" y="1637" width="2.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="420.41" y="1647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.9" y="2661" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="412.90" y="2671.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (11 samples, 0.44%)</title><rect x="172.4" y="789" width="5.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="175.40" y="799.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (1 samples, 0.04%)</title><rect x="64.4" y="4997" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="67.45" y="5007.5" ></text>
</g>
<g >
<title>`NSTRING-UPCASE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="21.7" y="3829" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="24.73" y="3839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="393.9" y="3461" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="396.95" y="3471.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.08%)</title><rect x="657.3" y="5509" width="0.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="660.26" y="5519.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="404.7" y="5749" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="407.74" y="5759.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (57 samples, 2.27%)</title><rect x="204.3" y="949" width="26.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="207.32" y="959.5" >`..</text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.04%)</title><rect x="322.1" y="5029" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="325.13" y="5039.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="382.2" y="4261" width="0.5" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="385.21" y="4271.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="99.2" y="3669" width="0.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="102.18" y="3679.5" ></text>
</g>
<g >
<title>`BUILD-FUNCTION-DAG^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="315.1" y="5317" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="318.09" y="5327.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="431.5" y="2389" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="434.50" y="2399.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="304.3" y="5813" width="3.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="307.30" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="630.5" y="5125" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="633.51" y="5135.5" ></text>
</g>
<g >
<title>`GENERALP^CORE^FN^^ (1 samples, 0.04%)</title><rect x="388.3" y="3781" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="391.31" y="3791.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="286.9" y="4933" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="289.93" y="4943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="355.9" y="5637" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="358.93" y="5647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (43 samples, 1.71%)</title><rect x="252.2" y="4213" width="20.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="255.20" y="4223.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="424.9" y="1221" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="427.92" y="1231.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="34.9" y="4485" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="37.88" y="4495.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (41 samples, 1.63%)</title><rect x="469.5" y="5685" width="19.3" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="472.51" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1685" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="423.70" y="1695.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="1781" width="4.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="279.60" y="1791.5" ></text>
</g>
<g >
<title>`FIND-SLOT-DEFINITION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="349.4" y="5301" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="352.36" y="5311.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="276.6" y="3893" width="4.7" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="279.60" y="3903.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="961.9" y="6389" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="964.89" y="6399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.0" y="1589" width="0.5" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="426.99" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="2581" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="411.97" y="2591.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="122.6" y="3605" width="4.7" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="125.65" y="3615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="287.4" y="5317" width="1.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="290.40" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (22 samples, 0.88%)</title><rect x="423.0" y="3973" width="10.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="426.05" y="3983.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="240.5" y="3333" width="10.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="243.46" y="3343.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="69" width="1.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="288.52" y="79.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::addAttribute(llvm::LLVMContext&amp;, unsigned  (1 samples, 0.04%)</title><rect x="686.4" y="5861" width="0.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="689.36" y="5871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5717" width="0.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="408.21" y="5727.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (EXPLICIT-MULTI-PARAM (1 samples, 0.04%)</title><rect x="113.3" y="3573" width="0.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="116.26" y="3583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.4" y="1589" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="428.39" y="1599.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="384.1" y="4773" width="10.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="387.09" y="4783.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.4" y="3061" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="412.44" y="3071.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="297.7" y="5413" width="1.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="300.72" y="5423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.9" y="3221" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="412.90" y="3231.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="113.3" y="3525" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="116.26" y="3535.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="3701" width="4.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="279.60" y="3711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="238.1" y="69" width="1.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="241.11" y="79.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="282.7" y="1461" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="285.70" y="1471.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="315.6" y="5285" width="1.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="318.56" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="318.4" y="5525" width="0.4" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="321.38" y="5535.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="598.1" y="5717" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="601.12" y="5727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="268.2" y="1797" width="3.7" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="271.15" y="1807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.9" y="3125" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="412.90" y="3135.5" ></text>
</g>
<g >
<title>`HIR-&gt;MIR^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="337.6" y="4533" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="340.62" y="4543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="428.7" y="1765" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="431.68" y="1775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="397.7" y="3861" width="1.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="400.70" y="3871.5" ></text>
</g>
<g >
<title>`COMPILE-ONLY-REG-AND-OPT-ARGUMENTS^COMPILER^FN^^ (3 samples, 0.12%)</title><rect x="635.7" y="5397" width="1.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="638.67" y="5407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="401.0" y="2917" width="0.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="403.99" y="2927.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout con (1 samples, 0.04%)</title><rect x="700.0" y="5845" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="702.98" y="5855.5" ></text>
</g>
<g >
<title>`GC_install_header (1 samples, 0.04%)</title><rect x="563.4" y="5605" width="0.5" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="566.39" y="5615.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::keyTest(gctools::smart_ptr&lt;core::T_O&gt;, gc (1 samples, 0.04%)</title><rect x="151.8" y="4277" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="154.75" y="4287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="397.7" y="3973" width="1.9" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="400.70" y="3983.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.04%)</title><rect x="379.4" y="5045" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="382.40" y="5055.5" ></text>
</g>
<g >
<title>`bitTrackingDCE(llvm::Function&amp;, llvm::DemandedBits&amp;) (6 samples, 0.24%)</title><rect x="706.5" y="5893" width="2.9" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="709.55" y="5903.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (136 samples, 5.41%)</title><rect x="167.2" y="3429" width="63.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="170.24" y="3439.5" >`PROCES..</text>
</g>
<g >
<title>0x11a477094 (8 samples, 0.32%)</title><rect x="268.2" y="1893" width="3.7" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="271.15" y="1903.5" ></text>
</g>
<g >
<title>`core::generic_write_vector(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="678.4" y="5877" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="681.39" y="5887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="247.0" y="565" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="250.03" y="575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="3925" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="414.31" y="3935.5" ></text>
</g>
<g >
<title>`unw_init_local (1 samples, 0.04%)</title><rect x="46.6" y="5541" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="49.61" y="5551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="3621" width="1.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="411.03" y="3631.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="36.8" y="3557" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="39.75" y="3567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (5 samples, 0.20%)</title><rect x="284.6" y="1605" width="2.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="287.58" y="1615.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (1 samples, 0.04%)</title><rect x="44.7" y="5301" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="47.73" y="5311.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm: (1 samples, 0.04%)</title><rect x="717.3" y="5829" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="720.34" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="382.2" y="4517" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="385.21" y="4527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="407.6" y="5125" width="3.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="410.56" y="5135.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="99.2" y="3765" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="102.18" y="3775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="256.0" y="3029" width="1.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="258.95" y="3039.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="295.4" y="2757" width="0.9" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="298.38" y="2767.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (4 samples, 0.16%)</title><rect x="270.0" y="37" width="1.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="273.03" y="47.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="247.5" y="677" width="1.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="250.50" y="687.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="636.1" y="5317" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="639.14" y="5327.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::clear() (1 samples, 0.04%)</title><rect x="789.6" y="5749" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="792.63" y="5759.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="166.3" y="645" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="169.30" y="655.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="429.6" y="1765" width="1.0" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="432.62" y="1775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="386.0" y="3413" width="0.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="388.97" y="3423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (336 samples, 13.37%)</title><rect x="129.7" y="5397" width="157.7" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="132.69" y="5407.5" >`core::clos__interpr..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="231.1" y="3589" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="234.07" y="3599.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.04%)</title><rect x="398.6" y="3253" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="401.64" y="3263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.3" y="1029" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="430.27" y="1039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (31 samples, 1.23%)</title><rect x="257.4" y="2917" width="14.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="260.36" y="2927.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (1 samples, 0.04%)</title><rect x="346.5" y="4965" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="349.54" y="4975.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="254.1" y="3109" width="1.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="257.07" y="3119.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="412.3" y="3989" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="415.25" y="3999.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="396.8" y="4165" width="0.9" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="399.76" y="4175.5" ></text>
</g>
<g >
<title>`IRC-CCLASP-FUNCTION-CREATE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="351.2" y="5349" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="354.23" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (23 samples, 0.91%)</title><rect x="383.6" y="4917" width="10.8" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="386.62" y="4927.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="21.3" y="3589" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="24.26" y="3599.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="364.8" y="5701" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="367.84" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="405.7" y="4597" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="408.68" y="4607.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="379.9" y="4789" width="2.8" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="382.86" y="4799.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="370.9" y="5797" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="373.95" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="247.5" y="901" width="1.9" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="250.50" y="911.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="282.7" y="1205" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="285.70" y="1215.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.04%)</title><rect x="723.0" y="5765" width="0.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="725.98" y="5775.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (15 samples, 0.60%)</title><rect x="232.5" y="3029" width="7.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="235.48" y="3039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="179.9" y="2085" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="182.91" y="2095.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="281.3" y="4357" width="5.6" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="284.30" y="4367.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="284.6" y="1173" width="2.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="287.58" y="1183.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="231.1" y="3541" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="234.07" y="3551.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="38.2" y="4549" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="41.16" y="4559.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="287.4" y="4693" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="290.40" y="4703.5" ></text>
</g>
<g >
<title>`SHARPSIGN-PLUS-MINUS^ECLECTOR.READER^FN^^ (12 samples, 0.48%)</title><rect x="49.9" y="5685" width="5.6" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="52.90" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1157" width="2.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="420.41" y="1167.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="427.3" y="2293" width="0.9" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="430.27" y="2303.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (19 samples, 0.76%)</title><rect x="259.2" y="1205" width="9.0" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="262.24" y="1215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="3125" width="0.9" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="403.99" y="3135.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="431.5" y="2453" width="1.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="434.50" y="2463.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="452.6" y="5685" width="0.5" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="455.62" y="5695.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (3 samples, 0.12%)</title><rect x="283.2" y="1397" width="1.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="286.17" y="1407.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorTemplateBase&lt;std::__1::pair&lt;llvm::BasicBlock c (2 samples, 0.08%)</title><rect x="833.7" y="5845" width="1.0" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="836.75" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="401.0" y="2997" width="0.9" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="403.99" y="3007.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="393.9" y="3317" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="396.95" y="3327.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="234.4" y="437" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="237.36" y="447.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T LEXICAL-VARIABLE-INFO T T))^ (1 samples, 0.04%)</title><rect x="97.8" y="3653" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="100.77" y="3663.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (4 samples, 0.16%)</title><rect x="825.3" y="5749" width="1.9" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="828.30" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="2309" width="4.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="279.60" y="2319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="294.0" y="4469" width="2.8" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="296.97" y="4479.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_short(char const*, unsigned long, u (1 samples, 0.04%)</title><rect x="894.8" y="5701" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="897.77" y="5711.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="345.1" y="4965" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="348.13" y="4975.5" ></text>
</g>
<g >
<title>`llvm::isImpliedCondition(llvm::Value const*, llvm::Value const* (1 samples, 0.04%)</title><rect x="835.6" y="5813" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="838.62" y="5823.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (4 samples, 0.16%)</title><rect x="95.9" y="3493" width="1.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="98.89" y="3503.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (3 samples, 0.12%)</title><rect x="748.8" y="5669" width="1.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="751.79" y="5679.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.04%)</title><rect x="567.6" y="5621" width="0.5" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="570.61" y="5631.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="278.9" y="725" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="281.95" y="735.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (1 samples, 0.04%)</title><rect x="461.5" y="5717" width="0.5" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="464.54" y="5727.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="36.3" y="4149" width="1.4" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="39.28" y="4159.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="1829" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="423.70" y="1839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="281.3" y="4277" width="5.6" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="284.30" y="4287.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="414.1" y="4309" width="1.0" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="417.13" y="4319.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (4 samples, 0.16%)</title><rect x="165.4" y="3493" width="1.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="168.36" y="3503.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.04%)</title><rect x="924.8" y="5845" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="927.81" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="417.9" y="485" width="0.5" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="420.88" y="495.5" ></text>
</g>
<g >
<title>`core::cl__copy_seq(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="34.9" y="4085" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="37.88" y="4095.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="367.7" y="5733" width="0.4" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="370.66" y="5743.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (3 samples, 0.12%)</title><rect x="741.3" y="5797" width="1.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="744.28" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (49 samples, 1.95%)</title><rect x="410.8" y="5237" width="23.0" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="413.84" y="5247.5" >`..</text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpInstWithConstant(llvm::ICmpInst&amp;) (2 samples, 0.08%)</title><rect x="760.5" y="5829" width="1.0" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="763.53" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="2949" width="4.2" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="285.70" y="2959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1781" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="427.92" y="1791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="249.4" y="725" width="0.4" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="252.38" y="735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="413.7" y="4261" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="416.66" y="4271.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="39.1" y="4213" width="0.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="42.10" y="4223.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.08%)</title><rect x="562.9" y="5765" width="1.0" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="565.92" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="2453" width="5.6" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="236.89" y="2463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="3093" width="3.8" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="420.41" y="3103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="425.9" y="2181" width="0.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="428.86" y="2191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (85 samples, 3.38%)</title><rect x="87.4" y="4725" width="39.9" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="90.45" y="4735.5" >`IN..</text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="320.3" y="5365" width="0.4" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="323.25" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="4021" width="1.0" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="424.64" y="4031.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="1413" width="4.2" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="279.60" y="1423.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (40 samples, 1.59%)</title><rect x="232.0" y="3525" width="18.8" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="235.01" y="3535.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (1 samples, 0.04%)</title><rect x="278.9" y="693" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="281.95" y="703.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="321.7" y="5333" width="1.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="324.66" y="5343.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.04%)</title><rect x="234.8" y="501" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="237.83" y="511.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="324.5" y="5013" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="327.48" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="385.0" y="3829" width="2.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="388.03" y="3839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (25 samples, 0.99%)</title><rect x="100.6" y="3925" width="11.7" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="103.59" y="3935.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (3 samples, 0.12%)</title><rect x="635.7" y="5365" width="1.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="638.67" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="282.7" y="1541" width="1.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="285.70" y="1551.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="183.7" y="277" width="3.7" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="186.67" y="287.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="276.6" y="981" width="2.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="279.60" y="991.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitCallSite(llvm::CallSite) (1 samples, 0.04%)</title><rect x="879.7" y="5829" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="882.75" y="5839.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (136 samples, 5.41%)</title><rect x="167.2" y="3493" width="63.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="170.24" y="3503.5" >`PROCES..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="347.0" y="5125" width="0.9" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="350.01" y="5135.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.9" y="3989" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="404.93" y="3999.5" ></text>
</g>
<g >
<title>`GC_freehblk (1 samples, 0.04%)</title><rect x="471.9" y="5557" width="0.4" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="474.86" y="5567.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (1 samples, 0.04%)</title><rect x="578.4" y="5797" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="581.41" y="5807.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="52.7" y="3909" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="55.71" y="3919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="231.5" y="3861" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="234.54" y="3871.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="36.8" y="3653" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="39.75" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="410.4" y="3365" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="413.37" y="3375.5" ></text>
</g>
<g >
<title>`0x1 (2,028 samples, 80.67%)</title><rect x="10.0" y="6421" width="951.9" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="13.00" y="6431.5" >`0x1</text>
</g>
<g >
<title>`CONVERT-CALLED-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T T T T) (1 samples, 0.04%)</title><rect x="295.4" y="2133" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="298.38" y="2143.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (36 samples, 1.43%)</title><rect x="416.9" y="5093" width="16.9" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="419.95" y="5103.5" ></text>
</g>
<g >
<title>`core::type_of_decide_class(gctools::smart_ptr&lt;core::T_O&gt;) (5 samples, 0.20%)</title><rect x="156.9" y="4293" width="2.4" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="159.91" y="4303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="417.4" y="933" width="1.4" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="420.41" y="943.5" ></text>
</g>
<g >
<title>0x1225e30f4 (1 samples, 0.04%)</title><rect x="183.2" y="213" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="186.20" y="223.5" ></text>
</g>
<g >
<title>`llvm::getConstantDataArrayInfo(llvm::Value const*, llvm::Consta (1 samples, 0.04%)</title><rect x="898.5" y="5749" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="901.52" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="1957" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="428.86" y="1967.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="340.0" y="4709" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="342.97" y="4719.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="421.6" y="3477" width="1.0" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="424.64" y="3487.5" ></text>
</g>
<g >
<title>`llvm::GetElementPtrInst::init(llvm::Value*, llvm::ArrayRef&lt;llvm (1 samples, 0.04%)</title><rect x="645.5" y="5237" width="0.5" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="648.53" y="5247.5" ></text>
</g>
<g >
<title>0x11a477094 (12 samples, 0.48%)</title><rect x="233.9" y="1141" width="5.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="236.89" y="1151.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="243.3" y="485" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="246.28" y="495.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (4 samples, 0.16%)</title><rect x="247.5" y="949" width="1.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="250.50" y="959.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (6 samples, 0.24%)</title><rect x="95.0" y="3557" width="2.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="97.96" y="3567.5" ></text>
</g>
<g >
<title>`llvm::getConstantDataArrayInfo(llvm::Value const*, llvm::Consta (1 samples, 0.04%)</title><rect x="807.5" y="5589" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="810.46" y="5599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="182.7" y="469" width="4.7" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="185.73" y="479.5" ></text>
</g>
<g >
<title>`SPECIALIZE^CLEAVIR-HIR-TO-MIR^((CDR-INSTRUCTION CLASP T T))^MET (1 samples, 0.04%)</title><rect x="455.0" y="5829" width="0.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="457.96" y="5839.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.04%)</title><rect x="105.8" y="3253" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="108.75" y="3263.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.7" y="1637" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="430.74" y="1647.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="508.5" y="5781" width="4.7" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="511.47" y="5791.5" ></text>
</g>
<g >
<title>`CALL-WITH-CURRENT-PACKAGE^ECLECTOR.READER^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="55.1" y="5621" width="0.4" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="58.06" y="5631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="294.0" y="4037" width="0.9" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="296.97" y="4047.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="412.3" y="3349" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="415.25" y="3359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="268.2" y="1781" width="3.7" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="271.15" y="1791.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (2 samples, 0.08%)</title><rect x="67.7" y="4965" width="1.0" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="70.73" y="4975.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.3" y="1733" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="430.27" y="1743.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (3 samples, 0.12%)</title><rect x="827.6" y="5685" width="1.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="830.65" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (56 samples, 2.23%)</title><rect x="407.6" y="5429" width="26.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="410.56" y="5439.5" >`..</text>
</g>
<g >
<title>`small_malloc_should_clear (1 samples, 0.04%)</title><rect x="865.7" y="5749" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="868.66" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="427.3" y="1893" width="0.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="430.27" y="1903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (108 samples, 4.30%)</title><rect x="180.4" y="1877" width="50.7" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="183.38" y="1887.5" >`core..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="260.6" y="117" width="7.6" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="263.64" y="127.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (1 samples, 0.04%)</title><rect x="24.1" y="3957" width="0.5" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="27.08" y="3967.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="3573" width="0.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="403.99" y="3583.5" ></text>
</g>
<g >
<title>`MAKE-TEMPS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="380.3" y="4453" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="383.33" y="4463.5" ></text>
</g>
<g >
<title>`core::io_stream_get_position(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="44.3" y="5029" width="0.4" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="47.26" y="5039.5" ></text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (1 samples, 0.04%)</title><rect x="294.4" y="3765" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="297.44" y="3775.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (17 samples, 0.68%)</title><rect x="242.8" y="2245" width="8.0" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="245.81" y="2255.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="400.0" y="4853" width="2.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="403.05" y="4863.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleBaseString_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="44.7" y="5189" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="47.73" y="5199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="430.6" y="1717" width="0.4" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="433.56" y="1727.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (3 samples, 0.12%)</title><rect x="659.1" y="5557" width="1.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="662.14" y="5567.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="2245" width="4.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="279.60" y="2255.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="165.4" y="3621" width="1.8" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="168.36" y="3631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="252.2" y="3397" width="1.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="255.20" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (60 samples, 2.39%)</title><rect x="407.1" y="5621" width="28.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="410.09" y="5631.5" >`..</text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::__1:: (1 samples, 0.04%)</title><rect x="854.9" y="5845" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="857.87" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="1861" width="1.0" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="426.52" y="1871.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="317.4" y="5477" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="320.44" y="5487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="294.0" y="5253" width="3.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="296.97" y="5263.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="106.2" y="3557" width="0.5" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="109.22" y="3567.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::ConstantExpr*, llv (1 samples, 0.04%)</title><rect x="870.4" y="5749" width="0.4" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="873.36" y="5759.5" ></text>
</g>
<g >
<title>`wrapped_StructType_O__get_LLVMContext_spcore__T_spbool (1 samples, 0.04%)</title><rect x="661.0" y="5573" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="664.02" y="5583.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (3 samples, 0.12%)</title><rect x="36.3" y="4469" width="1.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="39.28" y="4479.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.08%)</title><rect x="460.1" y="5829" width="1.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="463.13" y="5839.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="426.8" y="3605" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="429.80" y="3615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="321.7" y="5285" width="1.4" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="324.66" y="5295.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="254.1" y="3253" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="257.07" y="3263.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (5 samples, 0.20%)</title><rect x="751.1" y="5717" width="2.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="754.14" y="5727.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="268.6" y="453" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="271.62" y="463.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (67 samples, 2.67%)</title><rect x="15.2" y="5509" width="31.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="18.16" y="5519.5" >`c..</text>
</g>
<g >
<title>`default_zone_free_definite_size (1 samples, 0.04%)</title><rect x="629.6" y="5061" width="0.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="632.57" y="5071.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.04%)</title><rect x="720.2" y="5829" width="0.4" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="723.16" y="5839.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;std::__1::pair&lt;llvm::Mem (2 samples, 0.08%)</title><rect x="814.5" y="5701" width="0.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="817.50" y="5711.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'BLOCK) T T T))^MET (19 samples, 0.76%)</title><rect x="259.2" y="1349" width="9.0" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="262.24" y="1359.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (19 samples, 0.76%)</title><rect x="259.2" y="501" width="9.0" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="262.24" y="511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1093" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="430.74" y="1103.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (17 samples, 0.68%)</title><rect x="242.8" y="2757" width="8.0" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="245.81" y="2767.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.7" y="885" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="430.74" y="895.5" ></text>
</g>
<g >
<title>`simplifyICmpWithConstant(llvm::CmpInst::Predicate, llvm::Value* (1 samples, 0.04%)</title><rect x="895.7" y="5813" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="898.70" y="5823.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (3 samples, 0.12%)</title><rect x="285.5" y="1029" width="1.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="288.52" y="1039.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (4 samples, 0.16%)</title><rect x="168.2" y="1317" width="1.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="171.18" y="1327.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="412.7" y="4997" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="415.72" y="5007.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (2 samples, 0.08%)</title><rect x="233.0" y="2341" width="0.9" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="235.95" y="2351.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (4 samples, 0.16%)</title><rect x="590.6" y="5765" width="1.9" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="593.61" y="5775.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (17 samples, 0.68%)</title><rect x="91.7" y="3989" width="7.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="94.67" y="3999.5" ></text>
</g>
<g >
<title>`WRITE-LITERAL-NODES-BYTE-CODE^LITERAL^FN^^ (12 samples, 0.48%)</title><rect x="679.3" y="5989" width="5.7" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="682.32" y="5999.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="387.8" y="4325" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="390.84" y="4335.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="122.6" y="3397" width="3.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="125.65" y="3407.5" ></text>
</g>
<g >
<title>`core::core__process_declarations(gctools::smart_ptr&lt;core::List_ (1 samples, 0.04%)</title><rect x="128.3" y="5669" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="131.28" y="5679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.9" y="4069" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="404.93" y="4079.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (40 samples, 1.59%)</title><rect x="232.0" y="3685" width="18.8" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="235.01" y="3695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="281.3" y="3845" width="5.6" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="284.30" y="3855.5" ></text>
</g>
<g >
<title>`GC_mark_some (31 samples, 1.23%)</title><rect x="438.1" y="5445" width="14.5" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="441.07" y="5455.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm:: (6 samples, 0.24%)</title><rect x="904.6" y="5781" width="2.8" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="907.62" y="5791.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="313.7" y="5413" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="316.68" y="5423.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (4 samples, 0.16%)</title><rect x="122.6" y="3061" width="1.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="125.65" y="3071.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3333" width="1.8" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="168.36" y="3343.5" ></text>
</g>
<g >
<title>`COMPILE-TOPLEVEL^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="327.8" y="4485" width="0.4" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="330.76" y="4495.5" ></text>
</g>
<g >
<title>0x1225e5094 (43 samples, 1.71%)</title><rect x="252.2" y="3989" width="20.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="255.20" y="3999.5" ></text>
</g>
<g >
<title>`llvm::MDString::get(llvm::LLVMContext&amp;, llvm::StringRef) (1 samples, 0.04%)</title><rect x="656.3" y="5413" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="659.32" y="5423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="92.6" y="3461" width="0.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="95.61" y="3471.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="327.3" y="4453" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="330.30" y="4463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="169.1" y="693" width="1.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="172.12" y="703.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="405.2" y="4981" width="0.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="408.21" y="4991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3365" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="414.78" y="3375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="409.4" y="3701" width="1.4" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="412.44" y="3711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="423.5" y="2389" width="1.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="426.52" y="2399.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="1717" width="0.4" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="428.86" y="1727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.0" y="1621" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="434.96" y="1631.5" ></text>
</g>
<g >
<title>`llvm::AnalysisResolver::addAnalysisImplsPair(void const*, llvm: (2 samples, 0.08%)</title><rect x="848.3" y="5893" width="0.9" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="851.30" y="5903.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="370.5" y="5717" width="0.4" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="373.48" y="5727.5" ></text>
</g>
<g >
<title>`small_malloc_from_free_list (1 samples, 0.04%)</title><rect x="865.7" y="5733" width="0.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="868.66" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2853" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="412.44" y="2863.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="611.3" y="5381" width="0.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="614.26" y="5391.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="347.9" y="5061" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="350.95" y="5071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.4" y="3077" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="389.44" y="3087.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.08%)</title><rect x="377.5" y="5797" width="1.0" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="380.52" y="5807.5" ></text>
</g>
<g >
<title>`llvm::Value::~Value() (1 samples, 0.04%)</title><rect x="950.2" y="5813" width="0.4" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="953.15" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="47.5" y="5509" width="1.0" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="50.55" y="5519.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="36.3" y="4533" width="1.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="39.28" y="4543.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="122.6" y="2965" width="1.9" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="125.65" y="2975.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CONTEXT-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="412.7" y="4981" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="415.72" y="4991.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="123.6" y="1077" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="126.59" y="1087.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="341.8" y="4437" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="344.85" y="4447.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="166.3" y="709" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="169.30" y="719.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="36.3" y="4213" width="1.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="39.28" y="4223.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="24.1" y="4197" width="1.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="27.08" y="4207.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (2 samples, 0.08%)</title><rect x="657.3" y="5461" width="0.9" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="660.26" y="5471.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="1349" width="4.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="279.60" y="1359.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.04%)</title><rect x="125.0" y="1621" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="128.00" y="1631.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="544.1" y="5765" width="3.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="547.14" y="5775.5" ></text>
</g>
<g >
<title>`CONVERT-CALLED-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T T T T) (3 samples, 0.12%)</title><rect x="243.3" y="613" width="1.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="246.28" y="623.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="297.3" y="5269" width="0.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="300.26" y="5279.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="122.6" y="3429" width="4.7" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="125.65" y="3439.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (1 samples, 0.04%)</title><rect x="776.0" y="5829" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="779.01" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="39.1" y="4389" width="1.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="42.10" y="4399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="405.2" y="5253" width="0.9" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="408.21" y="5263.5" ></text>
</g>
<g >
<title>`flockfile (1 samples, 0.04%)</title><rect x="10.0" y="5909" width="0.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="13.00" y="5919.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="120.8" y="3525" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="123.77" y="3535.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="291.6" y="5557" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="294.62" y="5567.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="633.3" y="5301" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="636.33" y="5311.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="98.7" y="3749" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="101.71" y="3759.5" ></text>
</g>
<g >
<title>`wrapped_cl__nthcdr_Integer_spList_sp (1 samples, 0.04%)</title><rect x="424.0" y="1429" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="426.99" y="1439.5" ></text>
</g>
<g >
<title>`core::core__file_scope(gctools::smart_ptr&lt;core::T_O&gt;, gctools:: (1 samples, 0.04%)</title><rect x="26.0" y="4245" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="28.96" y="4255.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (57 samples, 2.27%)</title><rect x="204.3" y="325" width="26.8" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="207.32" y="335.5" >`..</text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedUseBits(llvm::Value*, llvm: (1 samples, 0.04%)</title><rect x="879.3" y="5781" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="882.28" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="182.7" y="373" width="4.7" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="185.73" y="383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="396.3" y="4821" width="3.7" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="399.29" y="4831.5" ></text>
</g>
<g >
<title>`__vfprintf (1 samples, 0.04%)</title><rect x="409.9" y="1701" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="412.90" y="1711.5" ></text>
</g>
<g >
<title>`ADD-ATOMS^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="21.3" y="3637" width="0.4" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="24.26" y="3647.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="645.1" y="5317" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="648.06" y="5327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="2421" width="5.6" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="236.89" y="2431.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.04%)</title><rect x="234.4" y="501" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="237.36" y="511.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (40 samples, 1.59%)</title><rect x="232.0" y="4101" width="18.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="235.01" y="4111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.5" y="4517" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="418.54" y="4527.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="421.6" y="3717" width="1.0" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="424.64" y="3727.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="632.4" y="5237" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="635.39" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1173" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="430.74" y="1183.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="231.5" y="3349" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="234.54" y="3359.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="493.5" y="5765" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="496.45" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2501" width="14.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="260.36" y="2511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2021" width="1.0" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="427.92" y="2031.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="284.6" y="1061" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="287.58" y="1071.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="16.6" y="4405" width="0.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="19.57" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="388.3" y="3973" width="3.8" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="391.31" y="3983.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="415.5" y="4565" width="0.5" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="418.54" y="4575.5" ></text>
</g>
<g >
<title>`GET-PRIMITIVES^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="599.5" y="5557" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="602.53" y="5567.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="398.2" y="3701" width="1.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="401.17" y="3711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="645" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="423.70" y="655.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="431.5" y="2645" width="1.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="434.50" y="2655.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.4" y="3029" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="412.44" y="3039.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (16 samples, 0.64%)</title><rect x="243.3" y="1845" width="7.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="246.28" y="1855.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="311.8" y="5621" width="0.5" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="314.81" y="5631.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="665.2" y="5461" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="668.24" y="5471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="2565" width="3.8" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="420.41" y="2575.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="396.8" y="4437" width="3.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="399.76" y="4447.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="3125" width="0.5" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="414.78" y="3135.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="714.1" y="5861" width="0.4" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="717.06" y="5871.5" ></text>
</g>
<g >
<title>`SHARPSIGN-PLUS-MINUS^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="26.0" y="4565" width="0.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="28.96" y="4575.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="122.6" y="3541" width="4.7" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="125.65" y="3551.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="394.4" y="4981" width="0.5" height="15.0" fill="rgb(254,128,128)" rx="2" ry="2" />
<text  x="397.42" y="4991.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="430.6" y="2005" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="433.56" y="2015.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="393.9" y="2853" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="396.95" y="2863.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (4 samples, 0.16%)</title><rect x="825.3" y="5717" width="1.9" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="828.30" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="93.5" y="3477" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="96.55" y="3487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="432.0" y="1589" width="0.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="434.96" y="1599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="234.8" y="437" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="237.83" y="447.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (8 samples, 0.32%)</title><rect x="183.7" y="229" width="3.7" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="186.67" y="239.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.04%)</title><rect x="329.2" y="4293" width="0.4" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="332.17" y="4303.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="279.4" y="981" width="1.4" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="282.42" y="991.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="394.9" y="5061" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="397.88" y="5071.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::Value*, (anonymous namespace): (1 samples, 0.04%)</title><rect x="946.9" y="5861" width="0.4" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="949.87" y="5871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="423.0" y="4197" width="10.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="426.05" y="4207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="423.0" y="3701" width="4.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="426.05" y="3711.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (16 samples, 0.64%)</title><rect x="243.3" y="1909" width="7.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="246.28" y="1919.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="415.5" y="4389" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="418.54" y="4399.5" ></text>
</g>
<g >
<title>`UNIVERSAL-ERROR-HANDLER^CORE^FN^^ (1 samples, 0.04%)</title><rect x="94.0" y="3589" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="97.02" y="3599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="232.5" y="3173" width="8.0" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="235.48" y="3183.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="430.6" y="2149" width="0.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="433.56" y="2159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3637" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="404.93" y="3647.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::StripPtrCastKeepAS(llvm::Constant*, llvm (1 samples, 0.04%)</title><rect x="751.1" y="5701" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="754.14" y="5711.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="44.3" y="5045" width="0.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="47.26" y="5055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="430.6" y="1797" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="433.56" y="1807.5" ></text>
</g>
<g >
<title>`llvm::Type::getVoidTy(llvm::LLVMContext&amp;) (1 samples, 0.04%)</title><rect x="619.7" y="5173" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="622.71" y="5183.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="295.4" y="3845" width="1.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="298.38" y="3855.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4309" width="2.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="55.24" y="4319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="417.4" y="2245" width="3.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="420.41" y="2255.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (58 samples, 2.31%)</title><rect x="100.1" y="4197" width="27.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="103.12" y="4207.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (34 samples, 1.35%)</title><rect x="256.0" y="3205" width="15.9" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="258.95" y="3215.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="410.8" y="4485" width="1.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="413.84" y="4495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="422.1" y="2501" width="0.5" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="425.11" y="2511.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="171.5" y="1781" width="0.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="174.46" y="1791.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (4 samples, 0.16%)</title><rect x="770.9" y="5749" width="1.8" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="773.85" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="424.9" y="1205" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="427.92" y="1215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1429" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="430.27" y="1439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="171.5" y="1653" width="0.9" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="174.46" y="1663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="2405" width="1.0" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="427.92" y="2415.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="102.5" y="3637" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="105.47" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-LAMBDA-LIST-CODE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="338.6" y="4293" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="341.56" y="4303.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="398.2" y="3013" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="401.17" y="3023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="425.9" y="2885" width="0.9" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="428.86" y="2895.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="778.8" y="5845" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="781.83" y="5855.5" ></text>
</g>
<g >
<title>`wrapped_cl__append_VaList_sp (1 samples, 0.04%)</title><rect x="356.9" y="5717" width="0.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="359.87" y="5727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="145.6" y="4245" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="148.65" y="4255.5" ></text>
</g>
<g >
<title>`llvm::ObjectSizeOffsetVisitor::visitGlobalVariable(llvm::Global (1 samples, 0.04%)</title><rect x="817.8" y="5605" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="820.79" y="5615.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T SEQUENCE T))^METHOD^^ (1 samples, 0.04%)</title><rect x="43.8" y="5013" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="46.79" y="5023.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (31 samples, 1.23%)</title><rect x="257.4" y="2149" width="14.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="260.36" y="2159.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="1653" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="428.86" y="1663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (23 samples, 0.91%)</title><rect x="276.1" y="5125" width="10.8" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="279.13" y="5135.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="132.0" y="4517" width="1.0" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="135.04" y="4527.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="2133" width="1.0" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="427.92" y="2143.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (3 samples, 0.12%)</title><rect x="862.4" y="5781" width="1.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="865.38" y="5791.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="429.6" y="1637" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="432.62" y="1647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (58 samples, 2.31%)</title><rect x="100.1" y="4229" width="27.2" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="103.12" y="4239.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (136 samples, 5.41%)</title><rect x="167.2" y="3365" width="63.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="170.24" y="3375.5" >`core::..</text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="11.9" y="5941" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="14.88" y="5951.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="287.4" y="5381" width="1.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="290.40" y="5391.5" ></text>
</g>
<g >
<title>0x11a477094 (12 samples, 0.48%)</title><rect x="233.9" y="1397" width="5.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="236.89" y="1407.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (6 samples, 0.24%)</title><rect x="318.8" y="5509" width="2.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="321.85" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1669" width="5.6" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="236.89" y="1679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2213" width="4.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="285.70" y="2223.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (2 samples, 0.08%)</title><rect x="898.1" y="5797" width="0.9" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="901.05" y="5807.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="288.3" y="4421" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="291.34" y="4431.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="243.3" y="1029" width="4.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="246.28" y="1039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4357" width="0.4" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="419.48" y="4367.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="84.6" y="4917" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="87.63" y="4927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.4" y="2357" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="435.43" y="2367.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="2053" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="428.86" y="2063.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (1 samples, 0.04%)</title><rect x="345.6" y="4869" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="348.60" y="4879.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="2389" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="414.78" y="2399.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="645.5" y="5317" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="648.53" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="165.8" y="1861" width="1.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="168.83" y="1871.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="166.3" y="677" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="169.30" y="687.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="256.0" y="2917" width="1.4" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="258.95" y="2927.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="523.0" y="5813" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="526.02" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="424.5" y="3029" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="427.46" y="3039.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::RemoveKey(llvm::StringMapEntryBase*) (1 samples, 0.04%)</title><rect x="947.8" y="5893" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="950.80" y="5903.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="427.7" y="1829" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="430.74" y="1839.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="167.2" y="2549" width="10.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="170.24" y="2559.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="3813" width="1.0" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="424.64" y="3823.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="295.4" y="2021" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="298.38" y="2031.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3909" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="414.78" y="3919.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="417.9" y="85" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="420.88" y="95.5" ></text>
</g>
<g >
<title>`core::cl__translate_logical_pathname(gctools::smart_ptr&lt;core::T (1 samples, 0.04%)</title><rect x="961.4" y="6005" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="964.42" y="6015.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.4" y="3173" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="389.44" y="3183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="3045" width="0.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="403.99" y="3055.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (52 samples, 2.07%)</title><rect x="379.4" y="5333" width="24.4" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="382.40" y="5343.5" >`..</text>
</g>
<g >
<title>`llvm::SplitCriticalEdge(llvm::TerminatorInst*, unsigned int, ll (1 samples, 0.04%)</title><rect x="783.1" y="5845" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="786.05" y="5855.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (43 samples, 1.71%)</title><rect x="252.2" y="3957" width="20.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="255.20" y="3967.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="393.0" y="4229" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="396.01" y="4239.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (7 samples, 0.28%)</title><rect x="417.4" y="1925" width="3.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="420.41" y="1935.5" ></text>
</g>
<g >
<title>`core::MDArray_O::vectorPushExtend(gctools::smart_ptr&lt;core::T_O&gt; (1 samples, 0.04%)</title><rect x="26.0" y="4197" width="0.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="28.96" y="4207.5" ></text>
</g>
<g >
<title>`core::core__integer_to_string(gctools::smart_ptr&lt;core::StrNs_O&gt; (1 samples, 0.04%)</title><rect x="432.4" y="2261" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="435.43" y="2271.5" ></text>
</g>
<g >
<title>`default_zone_malloc (1 samples, 0.04%)</title><rect x="726.7" y="5765" width="0.5" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="729.73" y="5775.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AssertingVH&lt;llvm::Value (1 samples, 0.04%)</title><rect x="705.6" y="5845" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="708.61" y="5855.5" ></text>
</g>
<g >
<title>`SLOT-EXISTS-P^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="455.9" y="5669" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="458.90" y="5679.5" ></text>
</g>
<g >
<title>`llvmo::APInt_O::makeAPIntWidth(gctools::smart_ptr&lt;core::Integer (1 samples, 0.04%)</title><rect x="667.1" y="5589" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="670.12" y="5599.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="161.1" y="4277" width="0.5" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="164.14" y="4287.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="3189" width="1.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="127.53" y="3199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="388.3" y="4213" width="4.2" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="391.31" y="4223.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="231.5" y="3541" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="234.54" y="3551.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="296.3" y="3157" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="299.32" y="3167.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="355.5" y="5717" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="358.46" y="5727.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (20 samples, 0.80%)</title><rect x="102.9" y="3685" width="9.4" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="105.94" y="3695.5" ></text>
</g>
<g >
<title>`SET-DIFFERENCE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="421.6" y="2101" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="424.64" y="2111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3957" width="3.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="420.41" y="3967.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Value const*&gt;::insert(llvm::Value c (1 samples, 0.04%)</title><rect x="843.1" y="5653" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="846.13" y="5663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="422.1" y="2885" width="0.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="425.11" y="2895.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="412.3" y="3717" width="0.4" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="415.25" y="3727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="172.4" y="309" width="4.7" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="175.40" y="319.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="256.0" y="2949" width="1.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="258.95" y="2959.5" ></text>
</g>
<g >
<title>`wrapped_cl__type_of_T_sp (1 samples, 0.04%)</title><rect x="142.8" y="4325" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="145.83" y="4335.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="521.1" y="5749" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="524.15" y="5759.5" ></text>
</g>
<g >
<title>`llvm::iterator_range&lt;llvm::po_iterator&lt;llvm::DomTreeNodeBase&lt;ll (1 samples, 0.04%)</title><rect x="785.9" y="5861" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="788.87" y="5871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2517" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="412.90" y="2527.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="166.3" y="1045" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="169.30" y="1055.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="430.6" y="1893" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="433.56" y="1903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4501" width="2.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="55.24" y="4511.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (25 samples, 0.99%)</title><rect x="100.6" y="3781" width="11.7" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="103.59" y="3791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2837" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="412.44" y="2847.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (39 samples, 1.55%)</title><rect x="254.1" y="3477" width="18.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="257.07" y="3487.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (57 samples, 2.27%)</title><rect x="204.3" y="533" width="26.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="207.32" y="543.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2773" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="412.90" y="2783.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="284.6" y="1701" width="2.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="287.58" y="1711.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="247.0" y="277" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="250.03" y="287.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="177.1" y="517" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="180.10" y="527.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::StoreInst_O&gt; gctools::GCObjectAppropr (1 samples, 0.04%)</title><rect x="657.3" y="5445" width="0.4" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="660.26" y="5455.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="390.7" y="3205" width="1.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="393.66" y="3215.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DILocalVariable*,  (1 samples, 0.04%)</title><rect x="654.9" y="5333" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="657.92" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT-CALLED-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T T T T) (1 samples, 0.04%)</title><rect x="287.4" y="4757" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="290.40" y="4767.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="233.0" y="2293" width="0.9" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="235.95" y="2303.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerABIAlignment(unsigned int) const (1 samples, 0.04%)</title><rect x="884.0" y="5797" width="0.4" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="886.97" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="2869" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="414.78" y="2879.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="400.5" y="4085" width="1.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="403.52" y="4095.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="393.9" y="3429" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="396.95" y="3439.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.08%)</title><rect x="646.5" y="5365" width="0.9" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="649.47" y="5375.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.04%)</title><rect x="410.8" y="4005" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="413.84" y="4015.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="172.4" y="533" width="4.7" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="175.40" y="543.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="26.0" y="4533" width="0.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="28.96" y="4543.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (1 samples, 0.04%)</title><rect x="496.3" y="5685" width="0.4" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="499.27" y="5695.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.04%)</title><rect x="901.8" y="5733" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="904.81" y="5743.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="462.0" y="5829" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="465.00" y="5839.5" ></text>
</g>
<g >
<title>0x1225ef094 (19 samples, 0.76%)</title><rect x="259.2" y="837" width="9.0" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="262.24" y="847.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="405.7" y="3749" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="408.68" y="3759.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (3 samples, 0.12%)</title><rect x="649.8" y="5301" width="1.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="652.75" y="5311.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="247.0" y="53" width="0.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="250.03" y="63.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (13 samples, 0.52%)</title><rect x="542.7" y="5797" width="6.1" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="545.74" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="283.2" y="1381" width="1.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="286.17" y="1391.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="312.7" y="5701" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="315.74" y="5711.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="249.4" y="693" width="0.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="252.38" y="703.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="673.7" y="5733" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="676.69" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="412.3" y="3733" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="415.25" y="3743.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-I64^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="629.1" y="5173" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="632.10" y="5183.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="3349" width="63.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="170.24" y="3359.5" >`COMBIN..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="531.5" y="5701" width="0.9" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="534.47" y="5711.5" ></text>
</g>
<g >
<title>`SUBSTITUTE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="529.1" y="5781" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="532.12" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="1941" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="412.90" y="1951.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="379.4" y="4949" width="0.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="382.40" y="4959.5" ></text>
</g>
<g >
<title>`IMMEDIATE-DATUM-P^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="680.7" y="5941" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="683.73" y="5951.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="235.3" y="373" width="4.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="238.30" y="383.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="60.2" y="5221" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="63.22" y="5231.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="4053" width="1.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="168.36" y="4063.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.3" y="901" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="430.27" y="911.5" ></text>
</g>
<g >
<title>`free_small (1 samples, 0.04%)</title><rect x="850.2" y="5877" width="0.4" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="853.18" y="5887.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="295.4" y="3653" width="1.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="298.38" y="3663.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="3589" width="5.6" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="284.30" y="3599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (16 samples, 0.64%)</title><rect x="243.3" y="1573" width="7.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="246.28" y="1583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="432.9" y="3301" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="435.90" y="3311.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (19 samples, 0.76%)</title><rect x="259.2" y="1029" width="9.0" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="262.24" y="1039.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (2 samples, 0.08%)</title><rect x="513.6" y="5685" width="1.0" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="516.64" y="5695.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="239.5" y="3045" width="1.0" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="242.52" y="3055.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="123.1" y="2533" width="1.4" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="126.12" y="2543.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="231.5" y="3877" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="234.54" y="3887.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="303.4" y="5797" width="0.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="306.36" y="5807.5" ></text>
</g>
<g >
<title>`LTV/CONS^LITERAL^FN^^ (41 samples, 1.63%)</title><rect x="325.4" y="4997" width="19.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="328.42" y="5007.5" ></text>
</g>
<g >
<title>`core::string_get_std_string(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="303.4" y="5845" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="306.36" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (31 samples, 1.23%)</title><rect x="257.4" y="2133" width="14.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="260.36" y="2143.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="171.5" y="1701" width="0.9" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="174.46" y="1711.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (8 samples, 0.32%)</title><rect x="18.0" y="3909" width="3.7" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="20.98" y="3919.5" ></text>
</g>
<g >
<title>`core::cl__error(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.04%)</title><rect x="125.9" y="1973" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="128.93" y="1983.5" ></text>
</g>
<g >
<title>`core::cl__get_output_stream_string(gctools::smart_ptr&lt;core::T_O (1 samples, 0.04%)</title><rect x="34.9" y="4101" width="0.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="37.88" y="4111.5" ></text>
</g>
<g >
<title>`BUILD-CST^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="47.5" y="5445" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="50.55" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="386.0" y="3333" width="0.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="388.97" y="3343.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (1 samples, 0.04%)</title><rect x="919.2" y="5733" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="922.17" y="5743.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (2 samples, 0.08%)</title><rect x="808.9" y="5573" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="811.87" y="5583.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm (1 samples, 0.04%)</title><rect x="931.4" y="5813" width="0.4" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="934.38" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (55 samples, 2.19%)</title><rect x="60.7" y="5109" width="25.8" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="63.69" y="5119.5" >`..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="236.2" y="181" width="3.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="239.24" y="191.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="410.8" y="4469" width="1.9" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="413.84" y="4479.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="17.5" y="4293" width="8.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="20.51" y="4303.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="279.4" y="613" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="282.42" y="623.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (3 samples, 0.12%)</title><rect x="698.1" y="5845" width="1.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="701.10" y="5855.5" ></text>
</g>
<g >
<title>`core::str_out_write_char(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="30.2" y="4965" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="33.18" y="4975.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="172.4" y="1557" width="5.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="175.40" y="1567.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (3 samples, 0.12%)</title><rect x="159.3" y="4309" width="1.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="162.26" y="4319.5" ></text>
</g>
<g >
<title>`small_malloc_should_clear (1 samples, 0.04%)</title><rect x="823.4" y="5653" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="826.42" y="5663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="1973" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="428.86" y="1983.5" ></text>
</g>
<g >
<title>`TRANSIENT-DATUM-P^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="683.1" y="5941" width="0.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="686.08" y="5951.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="183.7" y="261" width="3.7" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="186.67" y="271.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeAllocSize(llvm::Type*) const (1 samples, 0.04%)</title><rect x="809.3" y="5541" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="812.34" y="5551.5" ></text>
</g>
<g >
<title>`JIT-FUNCTION-NAME^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="634.3" y="5381" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="637.26" y="5391.5" ></text>
</g>
<g >
<title>`wrapped_core__member1_T_spList_spT_spT_spT_sp (1 samples, 0.04%)</title><rect x="370.9" y="5669" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="373.95" y="5679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="252.2" y="3141" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="255.20" y="3151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (4 samples, 0.16%)</title><rect x="400.0" y="4293" width="1.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="403.05" y="4303.5" ></text>
</g>
<g >
<title>`ThreadCmpOverPHI(llvm::CmpInst::Predicate, llvm::Value*, llvm:: (2 samples, 0.08%)</title><rect x="887.3" y="5781" width="0.9" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="890.26" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="172.4" y="1765" width="5.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="175.40" y="1775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="423.0" y="3349" width="2.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="426.05" y="3359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="276.1" y="4021" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="279.13" y="4031.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="408.5" y="2821" width="0.9" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="411.50" y="2831.5" ></text>
</g>
<g >
<title>`llvm::AAResultsWrapperPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.08%)</title><rect x="847.4" y="5893" width="0.9" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="850.36" y="5903.5" ></text>
</g>
<g >
<title>`core::clasp_namestring(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="42.4" y="4565" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="45.39" y="4575.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="277.1" y="773" width="1.8" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="280.07" y="783.5" ></text>
</g>
<g >
<title>`llvm::TrackingMDRef::operator=(llvm::TrackingMDRef&amp;&amp;) (1 samples, 0.04%)</title><rect x="914.5" y="5845" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="917.48" y="5855.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="52.2" y="4645" width="2.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="55.24" y="4655.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="285.1" y="1045" width="0.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="288.05" y="1055.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="400.5" y="3861" width="1.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="403.52" y="3871.5" ></text>
</g>
<g >
<title>`llvm::CallSiteBase&lt;llvm::Function const, llvm::BasicBlock const (1 samples, 0.04%)</title><rect x="782.1" y="5797" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="785.12" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="167.7" y="2293" width="10.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="170.71" y="2303.5" ></text>
</g>
<g >
<title>`CLOSURE-CALL-OR-INVOKE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="316.5" y="5109" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="319.50" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="2933" width="1.4" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="434.50" y="2943.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2229" width="4.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="279.60" y="2239.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (2 samples, 0.08%)</title><rect x="24.6" y="4181" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="27.55" y="4191.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="2373" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="414.78" y="2383.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="353.6" y="5461" width="0.9" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="356.58" y="5471.5" ></text>
</g>
<g >
<title>`llvm::Value::getValueName() const (1 samples, 0.04%)</title><rect x="930.9" y="5877" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="933.91" y="5887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="4165" width="0.5" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="414.78" y="4175.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="344.2" y="4773" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="347.19" y="4783.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (32 samples, 1.27%)</title><rect x="187.4" y="373" width="15.0" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="190.42" y="383.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2,028 samples, 80.67%)</title><rect x="10.0" y="6165" width="951.9" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="13.00" y="6175.5" >`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo</text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (6 samples, 0.24%)</title><rect x="52.2" y="4901" width="2.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="55.24" y="4911.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.04%)</title><rect x="389.7" y="3653" width="0.5" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="392.72" y="3663.5" ></text>
</g>
<g >
<title>`ThreadCmpOverSelect(llvm::CmpInst::Predicate, llvm::Value*, llv (2 samples, 0.08%)</title><rect x="746.4" y="5749" width="1.0" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="749.44" y="5759.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.04%)</title><rect x="408.5" y="2693" width="0.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="411.50" y="2703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="427.3" y="1957" width="0.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="430.27" y="1967.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="405.2" y="5669" width="0.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="408.21" y="5679.5" ></text>
</g>
<g >
<title>`llvm::hash_value(llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="726.3" y="5765" width="0.4" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="729.26" y="5775.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (80 samples, 3.18%)</title><rect x="317.9" y="5669" width="37.6" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="320.91" y="5679.5" >`LT..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="231.1" y="3381" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="234.07" y="3391.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="414.6" y="4165" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="417.60" y="4175.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="379.9" y="4709" width="1.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="382.86" y="4719.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.0" y="1701" width="0.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="411.97" y="1711.5" ></text>
</g>
<g >
<title>`unsigned int llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorT (4 samples, 0.16%)</title><rect x="855.8" y="5861" width="1.9" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="858.81" y="5871.5" ></text>
</g>
<g >
<title>`MAKE-VECTOR^CORE^FN^^ (1 samples, 0.04%)</title><rect x="55.1" y="5365" width="0.4" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="58.06" y="5375.5" ></text>
</g>
<g >
<title>`llvm::KnownBits::computeForAddSub(bool, bool, llvm::KnownBits c (1 samples, 0.04%)</title><rect x="901.3" y="5781" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="904.34" y="5791.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="889.1" y="5685" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="892.13" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (5 samples, 0.20%)</title><rect x="417.4" y="1493" width="2.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="420.41" y="1503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="417.4" y="1365" width="2.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="420.41" y="1375.5" ></text>
</g>
<g >
<title>`LTV/CONS^LITERAL^FN^^ (9 samples, 0.36%)</title><rect x="327.3" y="4613" width="4.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="330.30" y="4623.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2197" width="4.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="279.60" y="2207.5" ></text>
</g>
<g >
<title>`wrapped_cl__type_of_T_sp (1 samples, 0.04%)</title><rect x="185.5" y="197" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="188.54" y="207.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="396.8" y="4421" width="3.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="399.76" y="4431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.6" y="2437" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="424.64" y="2447.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (6 samples, 0.24%)</title><rect x="536.6" y="5829" width="2.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="539.63" y="5839.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (4 samples, 0.16%)</title><rect x="825.3" y="5669" width="1.9" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="828.30" y="5679.5" ></text>
</g>
<g >
<title>`core::ext__class_unboundp(gctools::smart_ptr&lt;core::ClassHolder_ (1 samples, 0.04%)</title><rect x="574.2" y="5797" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="577.18" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="417.4" y="1461" width="2.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="420.41" y="1471.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="2821" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="414.78" y="2831.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="380.3" y="4693" width="1.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="383.33" y="4703.5" ></text>
</g>
<g >
<title>0x1225f5094 (4 samples, 0.16%)</title><rect x="247.5" y="709" width="1.9" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="250.50" y="719.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="49.9" y="5381" width="5.2" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="52.90" y="5391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="250.8" y="4229" width="1.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="253.79" y="4239.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="385.5" y="3813" width="1.9" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="388.50" y="3823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="3541" width="4.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="430.27" y="3551.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (64 samples, 2.55%)</title><rect x="321.7" y="5493" width="30.0" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="324.66" y="5503.5" >`L..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2389" width="14.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="260.36" y="2399.5" ></text>
</g>
<g >
<title>`IRC-CCLASP-FUNCTION-CREATE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="346.1" y="5013" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="349.07" y="5023.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (14 samples, 0.56%)</title><rect x="233.0" y="2581" width="6.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="235.95" y="2591.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="409.4" y="3621" width="1.4" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="412.44" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="413.7" y="3845" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="416.66" y="3855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="383.2" y="5077" width="0.4" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="386.15" y="5087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="1941" width="4.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="279.60" y="1951.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CastGEPIndices(llvm::Type*, llvm::ArrayR (1 samples, 0.04%)</title><rect x="731.0" y="5797" width="0.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="733.95" y="5807.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="559.6" y="5813" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="562.63" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.0" y="2965" width="0.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="388.97" y="2975.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (2 samples, 0.08%)</title><rect x="125.9" y="2709" width="1.0" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="128.93" y="2719.5" ></text>
</g>
<g >
<title>`SSABLEP^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="630.0" y="5173" width="1.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="633.04" y="5183.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (7 samples, 0.28%)</title><rect x="502.8" y="5701" width="3.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="505.84" y="5711.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getValueOnEdge(llvm:: (1 samples, 0.04%)</title><rect x="702.3" y="5797" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="705.32" y="5807.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (1 samples, 0.04%)</title><rect x="424.0" y="1445" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="426.99" y="1455.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="11.9" y="5957" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="14.88" y="5967.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (3 samples, 0.12%)</title><rect x="332.9" y="4389" width="1.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="335.93" y="4399.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (2 samples, 0.08%)</title><rect x="251.3" y="3237" width="0.9" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="254.26" y="3247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2453" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="412.44" y="2463.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="3605" width="3.8" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="420.41" y="3615.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="5061" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="327.01" y="5071.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="424.0" y="1765" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="426.99" y="1775.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="38.2" y="4437" width="0.4" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="41.16" y="4447.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (22 samples, 0.88%)</title><rect x="34.4" y="5253" width="10.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="37.41" y="5263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="167.7" y="2405" width="10.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="170.71" y="2415.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (84 samples, 3.34%)</title><rect x="87.9" y="4469" width="39.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="90.92" y="4479.5" >`co..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="231.5" y="3381" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="234.54" y="3391.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.04%)</title><rect x="434.8" y="5477" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="437.78" y="5487.5" ></text>
</g>
<g >
<title>`HIR-&gt;MIR^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="319.8" y="5413" width="0.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="322.79" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (24 samples, 0.95%)</title><rect x="332.0" y="4773" width="11.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="334.99" y="4783.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="432.4" y="2389" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="435.43" y="2399.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (37 samples, 1.47%)</title><rect x="435.3" y="5525" width="17.3" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="438.25" y="5535.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (12 samples, 0.48%)</title><rect x="751.1" y="5813" width="5.7" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="754.14" y="5823.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (2 samples, 0.08%)</title><rect x="843.1" y="5701" width="1.0" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="846.13" y="5711.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STRUCTURE-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="321.7" y="5093" width="0.4" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="324.66" y="5103.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.04%)</title><rect x="629.6" y="5125" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="632.57" y="5135.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (57 samples, 2.27%)</title><rect x="204.3" y="357" width="26.8" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="207.32" y="367.5" >`..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (305 samples, 12.13%)</title><rect x="130.2" y="5157" width="143.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="133.16" y="5167.5" >`CONVERT^CLEAVIR-C..</text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="626.8" y="5029" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="629.75" y="5039.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="125.9" y="3205" width="1.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="128.93" y="3215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="4277" width="1.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="411.03" y="4287.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getDependency(llvm::Instruction* (24 samples, 0.95%)</title><rect x="804.2" y="5797" width="11.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="807.18" y="5807.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.04%)</title><rect x="249.4" y="565" width="0.4" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="252.38" y="575.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="393.0" y="4293" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="396.01" y="4303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="423.0" y="3541" width="3.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="426.05" y="3551.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="320.7" y="5381" width="1.0" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="323.72" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="3541" width="0.5" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="414.31" y="3551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="34.4" y="4613" width="0.9" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="37.41" y="4623.5" ></text>
</g>
<g >
<title>`OF-CLASS-P^CORE^FN^^ (1 samples, 0.04%)</title><rect x="91.2" y="3829" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="94.20" y="3839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="177.1" y="533" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="180.10" y="543.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="123.6" y="1189" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="126.59" y="1199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="297.3" y="5285" width="0.4" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="300.26" y="5295.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.04%)</title><rect x="252.7" y="3205" width="0.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="255.67" y="3215.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="431.0" y="2037" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="434.03" y="2047.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="392.5" y="4229" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="395.54" y="4239.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="395.4" y="4853" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="398.35" y="4863.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (48 samples, 1.91%)</title><rect x="180.4" y="805" width="22.5" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="183.38" y="815.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="416.9" y="4773" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="419.95" y="4783.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="172.4" y="821" width="5.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="175.40" y="831.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="21.3" y="3605" width="0.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="24.26" y="3615.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ENTER-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="424.0" y="1477" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="426.99" y="1487.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Instruction*&gt;::insert(llvm::Instruc (2 samples, 0.08%)</title><rect x="708.4" y="5845" width="1.0" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="711.42" y="5855.5" ></text>
</g>
<g >
<title>`core::clasp_write_string(std::__1::basic_string&lt;char, std::__1: (1 samples, 0.04%)</title><rect x="644.6" y="5317" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="647.59" y="5327.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="17.0" y="4405" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="20.04" y="4415.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="4997" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="327.01" y="5007.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (7 samples, 0.28%)</title><rect x="314.2" y="5397" width="3.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="317.15" y="5407.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (2 samples, 0.08%)</title><rect x="29.7" y="5045" width="1.0" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="32.71" y="5055.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (1 samples, 0.04%)</title><rect x="326.8" y="4597" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="329.83" y="4607.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.9" y="4981" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="327.95" y="4991.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (1 samples, 0.04%)</title><rect x="372.8" y="5685" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="375.82" y="5695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="287.4" y="5045" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="290.40" y="5055.5" ></text>
</g>
<g >
<title>`llvm::TargetTransformInfo::Model&lt;(anonymous namespace)::NoTTIIm (1 samples, 0.04%)</title><rect x="800.4" y="5893" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="803.42" y="5903.5" ></text>
</g>
<g >
<title>`HOIST-LOAD-TIME-VALUE^CLASP-CLEAVIR-AST^FN^^ (8 samples, 0.32%)</title><rect x="314.2" y="5541" width="3.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="317.15" y="5551.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="413.7" y="4917" width="1.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="416.66" y="4927.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="613.1" y="5429" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="616.14" y="5439.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.04%)</title><rect x="393.5" y="3589" width="0.4" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="396.48" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="410.8" y="4357" width="1.0" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="413.84" y="4367.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="34.9" y="4565" width="0.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="37.88" y="4575.5" ></text>
</g>
<g >
<title>`INIT-VAR-TO-LEXICALS^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="132.0" y="4469" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="135.04" y="4479.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (108 samples, 4.30%)</title><rect x="180.4" y="2421" width="50.7" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="183.38" y="2431.5" >`PROC..</text>
</g>
<g >
<title>`core::eval::evaluate(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sm (1 samples, 0.04%)</title><rect x="649.3" y="5237" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="652.28" y="5247.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="281.3" y="3493" width="5.6" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="284.30" y="3503.5" ></text>
</g>
<g >
<title>`core::core__find_class_holder(gctools::smart_ptr&lt;core::Symbol_O (1 samples, 0.04%)</title><rect x="233.4" y="2101" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="236.42" y="2111.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="125.5" y="1765" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="128.47" y="1775.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (2 samples, 0.08%)</title><rect x="39.1" y="4149" width="0.9" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="42.10" y="4159.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="381.7" y="4437" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="384.74" y="4447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (23 samples, 0.91%)</title><rect x="276.1" y="4981" width="10.8" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="279.13" y="4991.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (1 samples, 0.04%)</title><rect x="42.9" y="4853" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="45.86" y="4863.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="240.5" y="3045" width="2.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="243.46" y="3055.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="416.5" y="4325" width="0.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="419.48" y="4335.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="415.5" y="4405" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="418.54" y="4415.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2133" width="1.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="127.53" y="2143.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::StringMapIterator&lt;llvm::Value*&gt;, bool&gt; llv (1 samples, 0.04%)</title><rect x="626.8" y="4997" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="629.75" y="5007.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="91.7" y="3941" width="7.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="94.67" y="3951.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="324.0" y="4949" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="327.01" y="4959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4197" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="408.68" y="4207.5" ></text>
</g>
<g >
<title>`core::cl__error(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.04%)</title><rect x="312.7" y="5461" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="315.74" y="5471.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="61.2" y="5029" width="0.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="64.16" y="5039.5" ></text>
</g>
<g >
<title>`DELETE-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="523.5" y="5797" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="526.49" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="423.0" y="3669" width="4.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="426.05" y="3679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="233.0" y="2229" width="0.9" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="235.95" y="2239.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (4 samples, 0.16%)</title><rect x="122.6" y="2597" width="1.9" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="125.65" y="2607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="180.4" y="565" width="2.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="183.38" y="575.5" ></text>
</g>
<g >
<title>`llvm::CallSiteBase&lt;llvm::Function const, llvm::BasicBlock const (1 samples, 0.04%)</title><rect x="766.6" y="5701" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="769.63" y="5711.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.28%)</title><rect x="268.6" y="997" width="3.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="271.62" y="1007.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (52 samples, 2.07%)</title><rect x="379.4" y="5381" width="24.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="382.40" y="5391.5" >`..</text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.04%)</title><rect x="243.3" y="565" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="246.28" y="575.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="336.7" y="3941" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="339.68" y="3951.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="327.8" y="4373" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="330.76" y="4383.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;llvm::Value*, llvm::Value (1 samples, 0.04%)</title><rect x="948.3" y="5877" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="951.27" y="5887.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.04%)</title><rect x="51.8" y="5045" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="54.77" y="5055.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="312.7" y="5685" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="315.74" y="5695.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.04%)</title><rect x="951.6" y="5829" width="0.4" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="954.56" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="417.4" y="1541" width="2.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="420.41" y="1551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="122.6" y="3509" width="4.7" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="125.65" y="3519.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.12%)</title><rect x="413.7" y="4597" width="1.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="416.66" y="4607.5" ></text>
</g>
<g >
<title>`cc_enclose (2 samples, 0.08%)</title><rect x="10.5" y="5957" width="0.9" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="13.47" y="5967.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4629" width="1.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="39.28" y="4639.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (4 samples, 0.16%)</title><rect x="748.8" y="5701" width="1.9" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="751.79" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-ONLY-REG-AND-OPT-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="341.8" y="4469" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="344.85" y="4479.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (7 samples, 0.28%)</title><rect x="417.4" y="2261" width="3.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="420.41" y="2271.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="381.7" y="4549" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="384.74" y="4559.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="836.6" y="5749" width="0.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="839.56" y="5759.5" ></text>
</g>
<g >
<title>`IRC-GEP-VARIABLE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="628.2" y="5173" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="631.16" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (8 samples, 0.32%)</title><rect x="384.6" y="4485" width="3.7" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="387.56" y="4495.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="3477" width="3.8" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="420.41" y="3487.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="2901" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="414.78" y="2911.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (37 samples, 1.47%)</title><rect x="435.3" y="5605" width="17.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="438.25" y="5615.5" ></text>
</g>
<g >
<title>`TRANSFORM^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="122.6" y="2485" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="125.65" y="2495.5" ></text>
</g>
<g >
<title>`SYMBOLP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="130.2" y="4885" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="133.16" y="4895.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="233.9" y="469" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="236.89" y="479.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="244.2" y="405" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="247.22" y="415.5" ></text>
</g>
<g >
<title>`core::core__file_scope(gctools::smart_ptr&lt;core::T_O&gt;, gctools:: (2 samples, 0.08%)</title><rect x="24.6" y="4133" width="0.9" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="27.55" y="4143.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="422.1" y="2581" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="425.11" y="2591.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (18 samples, 0.72%)</title><rect x="17.0" y="4453" width="8.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="20.04" y="4463.5" ></text>
</g>
<g >
<title>`COMPILE-WRONG-NUMBER-ARGUMENTS-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="634.7" y="5381" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="637.73" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="2181" width="0.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="126.59" y="2191.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="167.7" y="933" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="170.71" y="943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1189" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="428.86" y="1199.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="422.1" y="2629" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="425.11" y="2639.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="577.9" y="5797" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="580.94" y="5807.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="379.4" y="4965" width="0.5" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="382.40" y="4975.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="279.9" y="133" width="0.9" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="282.89" y="143.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="123.6" y="2101" width="0.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="126.59" y="2111.5" ></text>
</g>
<g >
<title>`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std:: (1 samples, 0.04%)</title><rect x="952.0" y="5925" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="955.03" y="5935.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="654.9" y="5493" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="657.92" y="5503.5" ></text>
</g>
<g >
<title>`llvm::Type::isIntegerTy(unsigned int) const (1 samples, 0.04%)</title><rect x="829.1" y="5653" width="0.4" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="832.05" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="287.4" y="5189" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="290.40" y="5199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2693" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="412.90" y="2703.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="285.5" y="597" width="1.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="288.52" y="607.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass* (1 samples, 0.04%)</title><rect x="921.1" y="5813" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="924.05" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (87 samples, 3.46%)</title><rect x="86.5" y="5285" width="40.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="89.51" y="5295.5" >`IN..</text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.04%)</title><rect x="828.6" y="5637" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="831.58" y="5647.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="285.5" y="709" width="1.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="288.52" y="719.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (1 samples, 0.04%)</title><rect x="13.3" y="5557" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="16.29" y="5567.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="3365" width="1.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="411.03" y="3375.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="246.1" y="469" width="0.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="249.09" y="479.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="635.2" y="5365" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="638.20" y="5375.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="125.9" y="1909" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="128.93" y="1919.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.04%)</title><rect x="15.2" y="5429" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="18.16" y="5439.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="340.0" y="4581" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="342.97" y="4591.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, (anonymous name (1 samples, 0.04%)</title><rect x="946.9" y="5877" width="0.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="949.87" y="5887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="124.5" y="1813" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="127.53" y="1823.5" ></text>
</g>
<g >
<title>`wrapped_cl__logand_List_sp (1 samples, 0.04%)</title><rect x="43.3" y="4917" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="46.33" y="4927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="1781" width="1.0" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="432.62" y="1791.5" ></text>
</g>
<g >
<title>`GC_add_map_entry (1 samples, 0.04%)</title><rect x="553.1" y="5605" width="0.4" height="15.0" fill="rgb(206,60,60)" rx="2" ry="2" />
<text  x="556.06" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="1717" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="434.96" y="1727.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="2117" width="0.9" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="126.59" y="2127.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="268.2" y="1685" width="3.7" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="271.15" y="1695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (31 samples, 1.23%)</title><rect x="257.4" y="2101" width="14.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="260.36" y="2111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="413.7" y="3925" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="416.66" y="3935.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="295.4" y="2581" width="0.9" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="298.38" y="2591.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::IndVarSimplifyLegacyPass::runOnLoop(llvm (1 samples, 0.04%)</title><rect x="779.8" y="5877" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="782.77" y="5887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2933" width="14.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="260.36" y="2943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2613" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="412.44" y="2623.5" ></text>
</g>
<g >
<title>`wrapped_cl__type_of_T_sp (1 samples, 0.04%)</title><rect x="244.7" y="469" width="0.5" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="247.69" y="479.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="660.1" y="5477" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="663.08" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="421.6" y="3941" width="1.0" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="424.64" y="3951.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="430.6" y="2453" width="0.9" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="433.56" y="2463.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="179.0" y="2213" width="1.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="181.97" y="2223.5" ></text>
</g>
<g >
<title>`llvm::isNoAliasCall(llvm::Value const*) (1 samples, 0.04%)</title><rect x="811.7" y="5637" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="814.69" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.5" y="4693" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="418.54" y="4703.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="641.3" y="5333" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="644.30" y="5343.5" ></text>
</g>
<g >
<title>`MAKE-HASH-TABLE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="341.4" y="4709" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="344.38" y="4719.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="351.7" y="5509" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="354.70" y="5519.5" ></text>
</g>
<g >
<title>`SINGLE-QUOTE^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="44.7" y="5477" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="47.73" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1493" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="427.92" y="1503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="235.3" y="693" width="4.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="238.30" y="703.5" ></text>
</g>
<g >
<title>`SHARPSIGN-PLUS^ECLECTOR.READER^FN^^ (3 samples, 0.12%)</title><rect x="19.9" y="3685" width="1.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="22.86" y="3695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="405.2" y="5221" width="0.9" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="408.21" y="5231.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (40 samples, 1.59%)</title><rect x="232.0" y="4037" width="18.8" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="235.01" y="4047.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="415.5" y="4933" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="418.54" y="4943.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="398.6" y="3221" width="0.5" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="401.64" y="3231.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="416.5" y="4405" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="419.48" y="4415.5" ></text>
</g>
<g >
<title>0x1225e9094 (43 samples, 1.71%)</title><rect x="252.2" y="3717" width="20.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="255.20" y="3727.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="318.4" y="5429" width="0.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="321.38" y="5439.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="295.8" y="2085" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="298.85" y="2095.5" ></text>
</g>
<g >
<title>`core::core__file_scope(gctools::smart_ptr&lt;core::T_O&gt;, gctools:: (2 samples, 0.08%)</title><rect x="18.9" y="3461" width="1.0" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="21.92" y="3471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="282.7" y="2165" width="4.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="285.70" y="2175.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (159 samples, 6.32%)</title><rect x="378.9" y="5829" width="74.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="381.93" y="5839.5" >`INTERPR..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="284.6" y="1493" width="2.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="287.58" y="1503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (340 samples, 13.52%)</title><rect x="129.2" y="5573" width="159.6" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="132.22" y="5583.5" >`INTERPRETED-DISCRIM..</text>
</g>
<g >
<title>`llvm::InstCombiner::visitICmpInst(llvm::ICmpInst&amp;) (36 samples, 1.43%)</title><rect x="886.3" y="5845" width="16.9" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="889.32" y="5855.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LoopRotateLegacyPass::runOnLoop(llvm::Lo (2 samples, 0.08%)</title><rect x="782.6" y="5877" width="0.9" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="785.59" y="5887.5" ></text>
</g>
<g >
<title>`llvm::LoadInst* llvm::IRBuilder&lt;llvm::TargetFolder, llvm::IRBui (2 samples, 0.08%)</title><rect x="769.4" y="5829" width="1.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="772.44" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="430.6" y="2325" width="0.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="433.56" y="2335.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="405.2" y="4933" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="408.21" y="4943.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="385.0" y="4021" width="2.8" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="388.03" y="4031.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="409.4" y="3253" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="412.44" y="3263.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="391.6" y="2933" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="394.60" y="2943.5" ></text>
</g>
<g >
<title>`llvm::AliasSetTracker::add(llvm::LoadInst*) (1 samples, 0.04%)</title><rect x="780.2" y="5829" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="783.24" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="281.8" y="3045" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="284.77" y="3055.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="167.7" y="1157" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="170.71" y="1167.5" ></text>
</g>
<g >
<title>`MAKE-ARRAY-WITH-INITIAL-ELEMENT^CORE^FN^^ (1 samples, 0.04%)</title><rect x="55.1" y="5381" width="0.4" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="58.06" y="5391.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="268.2" y="1845" width="3.7" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="271.15" y="1855.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (2 samples, 0.08%)</title><rect x="143.3" y="4293" width="0.9" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="146.30" y="4303.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.04%)</title><rect x="864.3" y="5781" width="0.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="867.26" y="5791.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2197" width="14.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="260.36" y="2207.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="410.8" y="4821" width="1.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="413.84" y="4831.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (1 samples, 0.04%)</title><rect x="203.4" y="837" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="206.38" y="847.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (2 samples, 0.08%)</title><rect x="524.9" y="5765" width="0.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="527.90" y="5775.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="168.6" y="773" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="171.65" y="783.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (4 samples, 0.16%)</title><rect x="277.1" y="789" width="1.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="280.07" y="799.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="2629" width="4.2" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="279.60" y="2639.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="2485" width="5.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="236.89" y="2495.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="327.3" y="4277" width="0.5" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="330.30" y="4287.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="388.3" y="4021" width="3.8" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="391.31" y="4031.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (21 samples, 0.84%)</title><rect x="569.0" y="5829" width="9.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="572.02" y="5839.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="645.1" y="5285" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="648.06" y="5295.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="400.0" y="4581" width="2.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="403.05" y="4591.5" ></text>
</g>
<g >
<title>`core::core__sequence_start_end(gctools::smart_ptr&lt;core::T_O&gt;, g (1 samples, 0.04%)</title><rect x="499.1" y="5781" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="502.09" y="5791.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.04%)</title><rect x="838.0" y="5845" width="0.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="840.97" y="5855.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="297.3" y="5349" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="300.26" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1077" width="2.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="420.41" y="1087.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="1653" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="423.70" y="1663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="2485" width="3.8" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="420.41" y="2495.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="88.4" y="4037" width="3.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="91.39" y="4047.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="401.0" y="3397" width="0.9" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="403.99" y="3407.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="3461" width="1.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="411.03" y="3471.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (6 samples, 0.24%)</title><rect x="485.9" y="5589" width="2.9" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="488.94" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3061" width="3.8" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="420.41" y="3071.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::__1:: (2 samples, 0.08%)</title><rect x="926.2" y="5845" width="1.0" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="929.21" y="5855.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="629" width="0.4" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="171.18" y="639.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="233.0" y="2149" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="235.95" y="2159.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'IF) T T T))^METHOD (1 samples, 0.04%)</title><rect x="287.4" y="5013" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="290.40" y="5023.5" ></text>
</g>
<g >
<title>`core::clasp_namestring(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="26.4" y="4565" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="29.43" y="4575.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="283.2" y="1173" width="1.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="286.17" y="1183.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="1877" width="4.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="279.60" y="1887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="165.4" y="3653" width="1.8" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="168.36" y="3663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (137 samples, 5.45%)</title><rect x="167.2" y="3765" width="64.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="170.24" y="3775.5" >`core::..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="413.7" y="4981" width="2.8" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="416.66" y="4991.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_short(char const*, unsigned long, u (1 samples, 0.04%)</title><rect x="892.4" y="5621" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="895.42" y="5631.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (5 samples, 0.20%)</title><rect x="590.1" y="5781" width="2.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="593.14" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2453" width="1.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="127.53" y="2463.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="398.2" y="3493" width="0.9" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="401.17" y="3503.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="356.4" y="5461" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="359.40" y="5471.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="3237" width="1.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="127.53" y="3247.5" ></text>
</g>
<g >
<title>`getValueFromCondition(llvm::Value*, llvm::Value*, bool) (1 samples, 0.04%)</title><rect x="703.7" y="5749" width="0.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="706.73" y="5759.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.20%)</title><rect x="180.4" y="85" width="2.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="183.38" y="95.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="3381" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="414.31" y="3391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="399.6" y="4117" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="402.58" y="4127.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="604.7" y="5509" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="607.69" y="5519.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="172.4" y="1013" width="5.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="175.40" y="1023.5" ></text>
</g>
<g >
<title>`llvm::APInt::operator-=(llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="810.7" y="5573" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="813.75" y="5583.5" ></text>
</g>
<g >
<title>`DATUM-ALLOCA^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="640.8" y="5413" width="0.5" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="643.84" y="5423.5" ></text>
</g>
<g >
<title>0x11a477094 (8 samples, 0.32%)</title><rect x="293.5" y="5541" width="3.8" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="296.50" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (8 samples, 0.32%)</title><rect x="268.2" y="1877" width="3.7" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="271.15" y="1887.5" ></text>
</g>
<g >
<title>0x1225f5094 (9 samples, 0.36%)</title><rect x="276.6" y="3621" width="4.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="279.60" y="3631.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="530.1" y="5781" width="0.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="533.06" y="5791.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ASSIGNMENT-INSTRUC (4 samples, 0.16%)</title><rect x="616.9" y="5429" width="1.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="619.90" y="5439.5" ></text>
</g>
<g >
<title>`MAKE-CONDITION^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="298.2" y="5285" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="301.19" y="5295.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="269.1" y="165" width="0.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="272.09" y="175.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (86 samples, 3.42%)</title><rect x="87.0" y="4933" width="40.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="89.98" y="4943.5" >`co..</text>
</g>
<g >
<title>`llvm::SmallVector&lt;llvm::Attribute, 8u&gt;::SmallVector&lt;llvm::Attri (1 samples, 0.04%)</title><rect x="686.4" y="5813" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="689.36" y="5823.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="495.8" y="5781" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="498.80" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="251.3" y="4085" width="0.9" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="254.26" y="4095.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="274.3" y="5077" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="277.26" y="5087.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.08%)</title><rect x="588.3" y="5749" width="0.9" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="591.27" y="5759.5" ></text>
</g>
<g >
<title>0x11a477094 (4 samples, 0.16%)</title><rect x="247.5" y="853" width="1.9" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="250.50" y="863.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="202.9" y="1045" width="1.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="205.91" y="1055.5" ></text>
</g>
<g >
<title>`getValueFromCondition(llvm::Value*, llvm::Value*, bool, llvm::D (1 samples, 0.04%)</title><rect x="702.8" y="5765" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="705.79" y="5775.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (17 samples, 0.68%)</title><rect x="91.7" y="4197" width="7.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="94.67" y="4207.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="24.1" y="4053" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="27.08" y="4063.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="23.6" y="3797" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="26.61" y="3807.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="167.2" y="2421" width="0.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="170.24" y="2431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="409.4" y="3173" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="412.44" y="3183.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="417.4" y="2149" width="3.3" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="420.41" y="2159.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="417.9" y="37" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="420.88" y="47.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (3 samples, 0.12%)</title><rect x="90.3" y="3877" width="1.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="93.26" y="3887.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="231.5" y="3445" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="234.54" y="3455.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (3 samples, 0.12%)</title><rect x="732.8" y="5701" width="1.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="735.83" y="5711.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="124.5" y="2373" width="1.4" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="127.53" y="2383.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="239.5" y="2981" width="1.0" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="242.52" y="2991.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (11 samples, 0.44%)</title><rect x="172.4" y="1445" width="5.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="175.40" y="1455.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="36.3" y="4197" width="1.4" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="39.28" y="4207.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (8 samples, 0.32%)</title><rect x="167.7" y="1845" width="3.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="170.71" y="1855.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (10 samples, 0.40%)</title><rect x="172.4" y="165" width="4.7" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="175.40" y="175.5" ></text>
</g>
<g >
<title>`core::ClassHolder_O::class_unboundp() const (1 samples, 0.04%)</title><rect x="79.9" y="4933" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="82.94" y="4943.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.3" y="1717" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="430.27" y="1727.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (1 samples, 0.04%)</title><rect x="523.0" y="5797" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="526.02" y="5807.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="636.1" y="5301" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="639.14" y="5311.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="1621" width="7.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="246.28" y="1631.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.04%)</title><rect x="892.4" y="5653" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="895.42" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="2853" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="414.78" y="2863.5" ></text>
</g>
<g >
<title>`OF-CLASS-P^CORE^FN^^ (1 samples, 0.04%)</title><rect x="170.5" y="1525" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="173.53" y="1535.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="336.2" y="4213" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="339.21" y="4223.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="32.1" y="5349" width="1.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="35.06" y="5359.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solve() (2 samples, 0.08%)</title><rect x="691.1" y="5829" width="0.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="694.06" y="5839.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CastGEPIndices(llvm::Type*, llvm::ArrayR (1 samples, 0.04%)</title><rect x="861.0" y="5813" width="0.4" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="863.97" y="5823.5" ></text>
</g>
<g >
<title>`ThreadCmpOverPHI(llvm::CmpInst::Predicate, llvm::Value*, llvm:: (2 samples, 0.08%)</title><rect x="746.4" y="5781" width="1.0" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="749.44" y="5791.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (8 samples, 0.32%)</title><rect x="18.0" y="3797" width="3.7" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="20.98" y="3807.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::Grow(unsigned int) (1 samples, 0.04%)</title><rect x="754.9" y="5733" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="757.89" y="5743.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="312.3" y="5653" width="0.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="315.28" y="5663.5" ></text>
</g>
<g >
<title>`IRC-BASIC-BLOCK-CREATE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="339.5" y="4485" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="342.50" y="4495.5" ></text>
</g>
<g >
<title>`CanPHITrans(llvm::Instruction*) (1 samples, 0.04%)</title><rect x="816.4" y="5765" width="0.4" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="819.38" y="5775.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="44.7" y="5173" width="0.5" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="47.73" y="5183.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="360.2" y="5797" width="7.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="363.15" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (27 samples, 1.07%)</title><rect x="16.6" y="5093" width="12.6" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="19.57" y="5103.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (12 samples, 0.48%)</title><rect x="281.3" y="4293" width="5.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="284.30" y="4303.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.04%)</title><rect x="891.5" y="5669" width="0.4" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="894.48" y="5679.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="665.2" y="5509" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="668.24" y="5519.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="123.6" y="1541" width="0.9" height="15.0" fill="rgb(75,222,75)" rx="2" ry="2" />
<text  x="126.59" y="1551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="381.7" y="4613" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="384.74" y="4623.5" ></text>
</g>
<g >
<title>`SETUP-CALLING-CONVENTION^COMPILER^FN^^ (9 samples, 0.36%)</title><rect x="654.4" y="5573" width="4.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="657.45" y="5583.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (4 samples, 0.16%)</title><rect x="49.9" y="4901" width="1.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="52.90" y="4911.5" ></text>
</g>
<g >
<title>`OPTIMIZED-LEXICAL-LOCATION-CONSTRUCTOR^KEYWORD^FN^^ (37 samples, 1.47%)</title><rect x="435.3" y="5621" width="17.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="438.25" y="5631.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="402.9" y="5045" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="405.86" y="5055.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CDR-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="430.6" y="1589" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="433.56" y="1599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="3285" width="4.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="285.70" y="3295.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="165.4" y="2741" width="0.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="168.36" y="2751.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="255.5" y="3237" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="258.48" y="3247.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="34.4" y="4933" width="0.9" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="37.41" y="4943.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="123.6" y="1445" width="0.9" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="126.59" y="1455.5" ></text>
</g>
<g >
<title>`IRC-TMV-NRET^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="627.2" y="5141" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="630.22" y="5151.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="313.2" y="5429" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="316.21" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="398.2" y="3573" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="401.17" y="3583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (19 samples, 0.76%)</title><rect x="259.2" y="1317" width="9.0" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="262.24" y="1327.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="3861" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="414.78" y="3871.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="702.8" y="5669" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="705.79" y="5679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (43 samples, 1.71%)</title><rect x="252.2" y="3941" width="20.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="255.20" y="3951.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (7 samples, 0.28%)</title><rect x="417.4" y="2005" width="3.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="420.41" y="2015.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="2853" width="3.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="420.41" y="2863.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (22 samples, 0.88%)</title><rect x="167.7" y="2037" width="10.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="170.71" y="2047.5" ></text>
</g>
<g >
<title>`UNSAFE-FUNCALL1^CORE^FN^^ (1 samples, 0.04%)</title><rect x="233.9" y="53" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="236.89" y="63.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="278.9" y="789" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="281.95" y="799.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="294.0" y="3893" width="0.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="296.97" y="3903.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="2037" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="423.70" y="2047.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="113.3" y="3621" width="1.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="116.26" y="3631.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="316.0" y="5269" width="1.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="319.03" y="5279.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="1781" width="5.6" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="236.89" y="1791.5" ></text>
</g>
<g >
<title>`llvm::getOrEnforceKnownAlignment(llvm::Value*, unsigned int, ll (1 samples, 0.04%)</title><rect x="913.5" y="5829" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="916.54" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="423.5" y="1813" width="1.0" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="426.52" y="1823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="268.6" y="1445" width="3.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="271.62" y="1455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="167.7" y="1077" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="170.71" y="1087.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="348.9" y="5189" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="351.89" y="5199.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.04%)</title><rect x="380.3" y="4405" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="383.33" y="4415.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="726.7" y="5781" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="729.73" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="231.5" y="3493" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="234.54" y="3503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (108 samples, 4.30%)</title><rect x="180.4" y="1749" width="50.7" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="183.38" y="1759.5" >`core..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="314.6" y="5077" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="317.62" y="5087.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2773" width="1.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="127.53" y="2783.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonEqual(llvm::Value const*, llvm::Value const*, l (1 samples, 0.04%)</title><rect x="747.9" y="5781" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="750.85" y="5791.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="623.0" y="5109" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="626.00" y="5119.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="294.0" y="5445" width="3.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="296.97" y="5455.5" ></text>
</g>
<g >
<title>`CST-EVAL^CLEAVIR-ENVIRONMENT^((T T CLASP-GLOBAL-ENVIRONMENT T)) (1 samples, 0.04%)</title><rect x="286.9" y="5045" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="289.93" y="5055.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="2325" width="3.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="420.41" y="2335.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="243.3" y="1669" width="7.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="246.28" y="1679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="2101" width="1.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="168.83" y="2111.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (7 samples, 0.28%)</title><rect x="407.6" y="4917" width="3.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="410.56" y="4927.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="284.6" y="1029" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="287.58" y="1039.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;std::__1::unique_ptr&lt;llvm::AAResults::Con (1 samples, 0.04%)</title><rect x="715.0" y="5861" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="718.00" y="5871.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="423.5" y="2517" width="1.0" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="426.52" y="2527.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="430.6" y="2069" width="0.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="433.56" y="2079.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.04%)</title><rect x="747.9" y="5717" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="750.85" y="5727.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (1 samples, 0.04%)</title><rect x="832.8" y="5781" width="0.5" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="835.81" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="386.0" y="3061" width="0.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="388.97" y="3071.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="93.5" y="3333" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="96.55" y="3343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="247.5" y="933" width="1.9" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="250.50" y="943.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="34.4" y="5189" width="10.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="37.41" y="5199.5" ></text>
</g>
<g >
<title>`NULL^CONCRETE-SYNTAX-TREE^((ATOM-CST))^METHOD^^ (1 samples, 0.04%)</title><rect x="67.3" y="5029" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="70.26" y="5039.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1:: (1 samples, 0.04%)</title><rect x="42.9" y="4725" width="0.4" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="45.86" y="4735.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="352.2" y="5541" width="1.4" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="355.17" y="5551.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="165.8" y="1701" width="1.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="168.83" y="1711.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="249.4" y="533" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="252.38" y="543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="413.7" y="4789" width="1.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="416.66" y="4799.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="282.7" y="1253" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="285.70" y="1263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="1973" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="423.70" y="1983.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (11 samples, 0.44%)</title><rect x="49.9" y="5541" width="5.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="52.90" y="5551.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="276.6" y="1253" width="2.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="279.60" y="1263.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="355.9" y="5669" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="358.93" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT-ACCORDING-TO-READTABLE-CASE^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="21.7" y="3845" width="0.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="24.73" y="3855.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="1669" width="0.4" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="428.86" y="1679.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="423.0" y="2069" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="426.05" y="2079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.2" y="3797" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="424.17" y="3807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4165" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="419.48" y="4175.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="49.9" y="4933" width="1.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="52.90" y="4943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5285" width="0.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="408.21" y="5295.5" ></text>
</g>
<g >
<title>`llvm::APInt::operator*(llvm::APInt const&amp;) const (1 samples, 0.04%)</title><rect x="787.7" y="5669" width="0.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="790.75" y="5679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (99 samples, 3.94%)</title><rect x="606.6" y="5477" width="46.4" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="609.57" y="5487.5" >`cor..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="244.7" y="613" width="2.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="247.69" y="623.5" ></text>
</g>
<g >
<title>`core::core__file_scope(gctools::smart_ptr&lt;core::T_O&gt;, gctools:: (2 samples, 0.08%)</title><rect x="39.1" y="4133" width="0.9" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="42.10" y="4143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="2629" width="4.2" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="430.27" y="2639.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="424.9" y="1397" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="427.92" y="1407.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (57 samples, 2.27%)</title><rect x="100.6" y="3989" width="26.7" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="103.59" y="3999.5" >`..</text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="326.4" y="4645" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="329.36" y="4655.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="519.7" y="5765" width="0.5" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="522.74" y="5775.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="2869" width="63.9" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="170.24" y="2879.5" >`CONVER..</text>
</g>
<g >
<title>`llvm::AssumptionCache::assumptionsFor(llvm::Value const*) (1 samples, 0.04%)</title><rect x="901.8" y="5701" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="904.81" y="5711.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.08%)</title><rect x="641.3" y="5365" width="0.9" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="644.30" y="5375.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="424.5" y="3109" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="427.46" y="3119.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="629.6" y="5141" width="0.4" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="632.57" y="5151.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="65.9" y="5013" width="1.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="68.86" y="5023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="247.0" y="693" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="250.03" y="703.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="122.6" y="2885" width="1.9" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="125.65" y="2895.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="702.8" y="5653" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="705.79" y="5663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (39 samples, 1.55%)</title><rect x="254.1" y="3493" width="18.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="257.07" y="3503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="247.0" y="293" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="250.03" y="303.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (24 samples, 0.95%)</title><rect x="16.6" y="4901" width="11.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="19.57" y="4911.5" ></text>
</g>
<g >
<title>`0x10b6adfa3 (1 samples, 0.04%)</title><rect x="19.9" y="3285" width="0.4" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="22.86" y="3295.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.04%)</title><rect x="429.6" y="1669" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="432.62" y="1679.5" ></text>
</g>
<g >
<title>`FIND-CLASS^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="133.9" y="4421" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="136.91" y="4431.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="232.0" y="3173" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="235.01" y="3183.5" ></text>
</g>
<g >
<title>`UNSAFE-MULTIPLE-VALUE-FOREIGN-CALL^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="649.3" y="5413" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="652.28" y="5423.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.04%)</title><rect x="387.8" y="4277" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="390.84" y="4287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="423.0" y="2357" width="0.5" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="426.05" y="2367.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="2725" width="3.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="420.41" y="2735.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="124.5" y="1653" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="127.53" y="1663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="276.1" y="4677" width="5.2" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="279.13" y="4687.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="499.6" y="5765" width="0.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="502.55" y="5775.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="52.2" y="4885" width="2.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="55.24" y="4895.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="38.2" y="4645" width="3.7" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="41.16" y="4655.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="664.3" y="5493" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="667.30" y="5503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="268.2" y="1957" width="3.7" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="271.15" y="1967.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (5 samples, 0.20%)</title><rect x="375.2" y="5797" width="2.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="378.17" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="99.2" y="3717" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="102.18" y="3727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="285.5" y="389" width="1.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="288.52" y="399.5" ></text>
</g>
<g >
<title>`core::core__make_vector(gctools::smart_ptr&lt;core::T_O&gt;, unsigned (1 samples, 0.04%)</title><rect x="55.1" y="5333" width="0.4" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="58.06" y="5343.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.04%)</title><rect x="901.8" y="5765" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="904.81" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2997" width="1.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="427.92" y="3007.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (20 samples, 0.80%)</title><rect x="34.4" y="5061" width="9.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="37.41" y="5071.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (1 samples, 0.04%)</title><rect x="34.9" y="4469" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="37.88" y="4479.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="165.4" y="3445" width="1.8" height="15.0" fill="rgb(75,222,75)" rx="2" ry="2" />
<text  x="168.36" y="3455.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="259.2" y="309" width="1.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="262.24" y="319.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (183 samples, 7.28%)</title><rect x="164.9" y="4229" width="85.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="167.89" y="4239.5" >`SET-OR-BI..</text>
</g>
<g >
<title>`IRC-STORE^COMPILER^FN^^ (5 samples, 0.20%)</title><rect x="641.3" y="5413" width="2.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="644.30" y="5423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="430.6" y="1989" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="433.56" y="1999.5" ></text>
</g>
<g >
<title>`llvm::FindDbgAddrUses(llvm::Value*) (1 samples, 0.04%)</title><rect x="739.4" y="5829" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="742.40" y="5839.5" ></text>
</g>
<g >
<title>`computeKnownBitsAddSub(bool, llvm::Value const*, llvm::Value co (1 samples, 0.04%)</title><rect x="700.0" y="5781" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="702.98" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="243.7" y="501" width="1.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="246.75" y="511.5" ></text>
</g>
<g >
<title>`llvm::APInt::operator*(llvm::APInt const&amp;) const (1 samples, 0.04%)</title><rect x="812.2" y="5605" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="815.16" y="5615.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="336.2" y="4229" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="339.21" y="4239.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="259.2" y="261" width="1.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="262.24" y="271.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (1 samples, 0.04%)</title><rect x="598.1" y="5701" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="601.12" y="5711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="165.8" y="2277" width="1.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="168.83" y="2287.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="112.3" y="3765" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="115.32" y="3775.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (15 samples, 0.60%)</title><rect x="867.5" y="5813" width="7.1" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="870.54" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="400.0" y="4741" width="2.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="403.05" y="4751.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3525" width="3.8" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="420.41" y="3535.5" ></text>
</g>
<g >
<title>`IRC-SUB^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="635.2" y="5381" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="638.20" y="5391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="268.2" y="1861" width="3.7" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="271.15" y="1871.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (9 samples, 0.36%)</title><rect x="282.7" y="2245" width="4.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="285.70" y="2255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="413.7" y="4373" width="1.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="416.66" y="4383.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="344.2" y="4757" width="0.5" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="347.19" y="4767.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (2 samples, 0.08%)</title><rect x="845.0" y="5845" width="1.0" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="848.01" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="424.9" y="2069" width="1.0" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="427.92" y="2079.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="49.9" y="4517" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="52.90" y="4527.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.3" y="3749" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="414.31" y="3759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="165.4" y="3749" width="1.8" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="168.36" y="3759.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (152 samples, 6.05%)</title><rect x="598.6" y="5781" width="71.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="601.59" y="5791.5" >`DO-DEBU..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="293.5" y="5429" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="296.50" y="5439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="1397" width="0.4" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="428.86" y="1407.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (31 samples, 1.23%)</title><rect x="257.4" y="2453" width="14.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="260.36" y="2463.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (7 samples, 0.28%)</title><rect x="493.9" y="5813" width="3.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="496.92" y="5823.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.9" y="4997" width="0.5" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="327.95" y="5007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2757" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="412.44" y="2767.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="297.3" y="5205" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="300.26" y="5215.5" ></text>
</g>
<g >
<title>`get_index (1 samples, 0.04%)</title><rect x="289.7" y="5381" width="0.5" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="292.75" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3461" width="0.5" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="404.93" y="3471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="232.5" y="2533" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="235.48" y="2543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="430.6" y="1861" width="0.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="433.56" y="1871.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="249.4" y="549" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="252.38" y="559.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::Instruction const*, unsigned i (2 samples, 0.08%)</title><rect x="958.1" y="5845" width="1.0" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="961.13" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="388.3" y="4341" width="5.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="391.31" y="4351.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="384.6" y="4373" width="3.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="387.56" y="4383.5" ></text>
</g>
<g >
<title>`cc_unwind (2 samples, 0.08%)</title><rect x="513.6" y="5717" width="1.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="516.64" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3541" width="0.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="254.26" y="3551.5" ></text>
</g>
<g >
<title>`llvm::BasicAAWrapperPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.08%)</title><rect x="850.2" y="5893" width="0.9" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="853.18" y="5903.5" ></text>
</g>
<g >
<title>0x11a477094 (145 samples, 5.77%)</title><rect x="59.8" y="5589" width="68.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="62.75" y="5599.5" >0x11a47..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="247.5" y="645" width="1.9" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="250.50" y="655.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (2 samples, 0.08%)</title><rect x="655.9" y="5461" width="0.9" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="658.86" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="279.9" y="245" width="0.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="282.89" y="255.5" ></text>
</g>
<g >
<title>`CONVERT-VARIABLE^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="100.6" y="3589" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="103.59" y="3599.5" ></text>
</g>
<g >
<title>0x11a477094 (12 samples, 0.48%)</title><rect x="281.3" y="4373" width="5.6" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="284.30" y="4383.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="407.6" y="5141" width="3.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="410.56" y="5151.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="80.9" y="4981" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="83.88" y="4991.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="259.2" y="277" width="1.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="262.24" y="287.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="431.5" y="3061" width="1.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="434.50" y="3071.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (19 samples, 0.76%)</title><rect x="259.2" y="1477" width="9.0" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="262.24" y="1487.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="167.7" y="1109" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="170.71" y="1119.5" ></text>
</g>
<g >
<title>0x11a477094 (9 samples, 0.36%)</title><rect x="276.6" y="1445" width="4.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="279.60" y="1455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="294.0" y="4517" width="2.8" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="296.97" y="4527.5" ></text>
</g>
<g >
<title>0x11a477094 (10 samples, 0.40%)</title><rect x="172.4" y="597" width="4.7" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="175.40" y="607.5" ></text>
</g>
<g >
<title>`core::cl__type_of(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="155.0" y="4325" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="158.04" y="4335.5" ></text>
</g>
<g >
<title>`SEQ-ITERATOR-NEXT^CORE^FN^^ (1 samples, 0.04%)</title><rect x="419.3" y="581" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="422.29" y="591.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.04%)</title><rect x="386.9" y="3461" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="389.91" y="3471.5" ></text>
</g>
<g >
<title>`fwrite (1 samples, 0.04%)</title><rect x="10.0" y="5925" width="0.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="13.00" y="5935.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="166.3" y="997" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="169.30" y="1007.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.04%)</title><rect x="295.8" y="1877" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="298.85" y="1887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (15 samples, 0.60%)</title><rect x="232.5" y="2821" width="7.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="235.48" y="2831.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.08%)</title><rect x="427.3" y="2341" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="430.27" y="2351.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.04%)</title><rect x="926.2" y="5829" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="929.21" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.3" y="1573" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="430.27" y="1583.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.04%)</title><rect x="324.5" y="4661" width="0.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="327.48" y="4671.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.12%)</title><rect x="423.0" y="3189" width="1.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="426.05" y="3199.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="415.5" y="4485" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="418.54" y="4495.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="3429" width="3.8" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="420.41" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4581" width="0.4" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="408.68" y="4591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="4117" width="1.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="412.44" y="4127.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::StringMapIterator&lt;llvm::Value*&gt;, bool&gt; llv (1 samples, 0.04%)</title><rect x="350.8" y="5253" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="353.76" y="5263.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="319.8" y="5365" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="322.79" y="5375.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DILocation*, llvm: (1 samples, 0.04%)</title><rect x="620.2" y="5141" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="623.18" y="5151.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="286.9" y="4645" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="289.93" y="4655.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (4 samples, 0.16%)</title><rect x="465.8" y="5797" width="1.8" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="468.76" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="454.5" y="5749" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="457.49" y="5759.5" ></text>
</g>
<g >
<title>`getAllocationData(llvm::Value const*, AllocType, llvm::TargetLi (2 samples, 0.08%)</title><rect x="766.2" y="5717" width="0.9" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="769.16" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="309" width="26.8" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="207.32" y="319.5" >`..</text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (1 samples, 0.04%)</title><rect x="278.9" y="757" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="281.95" y="767.5" ></text>
</g>
<g >
<title>`core::core__file_scope(gctools::smart_ptr&lt;core::T_O&gt;, gctools:: (1 samples, 0.04%)</title><rect x="27.8" y="4805" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="30.84" y="4815.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="268.6" y="853" width="3.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="271.62" y="863.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="611.3" y="5301" width="0.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="614.26" y="5311.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (3 samples, 0.12%)</title><rect x="891.5" y="5717" width="1.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="894.48" y="5727.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (231 samples, 9.19%)</title><rect x="164.0" y="4389" width="108.4" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="166.95" y="4399.5" >`PROCESS-PARA..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="233.9" y="357" width="0.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="236.89" y="367.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="2581" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="412.90" y="2591.5" ></text>
</g>
<g >
<title>`vsprintf_l (1 samples, 0.04%)</title><rect x="432.4" y="2229" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="435.43" y="2239.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="1573" width="9.0" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="262.24" y="1583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="332.9" y="4277" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="335.93" y="4287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="2005" width="0.4" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="434.96" y="2015.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (18 samples, 0.72%)</title><rect x="91.7" y="4229" width="8.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="94.67" y="4239.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="247.5" y="341" width="1.9" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="250.50" y="351.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, void (llvmo::IRBuilderBase_O::*)(int,  (1 samples, 0.04%)</title><rect x="620.2" y="5205" width="0.5" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="623.18" y="5215.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::T_O&gt;::notnilp() const (1 samples, 0.04%)</title><rect x="675.1" y="5781" width="0.5" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="678.10" y="5791.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="577.9" y="5781" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="580.94" y="5791.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (9 samples, 0.36%)</title><rect x="276.6" y="2549" width="4.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="279.60" y="2559.5" ></text>
</g>
<g >
<title>`llvm::FoldingSetNodeID::AddString(llvm::StringRef) (1 samples, 0.04%)</title><rect x="676.5" y="5621" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="679.51" y="5631.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (7 samples, 0.28%)</title><rect x="51.8" y="5125" width="3.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="54.77" y="5135.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;llvm::BasicBlock*, llvm:: (1 samples, 0.04%)</title><rect x="823.4" y="5765" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="826.42" y="5775.5" ></text>
</g>
<g >
<title>`ADD-NAMED-CREATOR^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="311.8" y="5701" width="0.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="314.81" y="5711.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (1 samples, 0.04%)</title><rect x="185.5" y="149" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="188.54" y="159.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="255.5" y="3205" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="258.48" y="3215.5" ></text>
</g>
<g >
<title>0x11a477094 (15 samples, 0.60%)</title><rect x="232.5" y="2997" width="7.0" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="235.48" y="3007.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.04%)</title><rect x="60.2" y="5157" width="0.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="63.22" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="423.0" y="2645" width="1.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="426.05" y="2655.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="523.5" y="5701" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="526.49" y="5711.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (2 samples, 0.08%)</title><rect x="752.1" y="5669" width="0.9" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="755.08" y="5679.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="591.6" y="5717" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="594.55" y="5727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="421.6" y="3157" width="1.0" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="424.64" y="3167.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="168.2" y="693" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="171.18" y="703.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="244.7" y="725" width="2.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="247.69" y="735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="398.2" y="3061" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="401.17" y="3071.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="242.8" y="2293" width="8.0" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="245.81" y="2303.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (10 samples, 0.40%)</title><rect x="327.3" y="4789" width="4.7" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="330.30" y="4799.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4757" width="2.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="55.24" y="4767.5" ></text>
</g>
<g >
<title>`DATUM-KIND^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="681.2" y="5925" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="684.20" y="5935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (22 samples, 0.88%)</title><rect x="384.1" y="4821" width="10.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="387.09" y="4831.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="279.9" y="501" width="0.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="282.89" y="511.5" ></text>
</g>
<g >
<title>`COMPILE-TOPLEVEL^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="314.2" y="5349" width="0.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="317.15" y="5359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="398.6" y="3285" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="401.64" y="3295.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.20%)</title><rect x="284.6" y="1381" width="2.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="287.58" y="1391.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="1365" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="423.70" y="1375.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (4 samples, 0.16%)</title><rect x="294.9" y="4021" width="1.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="297.91" y="4031.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="62.1" y="4933" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="65.10" y="4943.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="2453" width="50.7" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="183.38" y="2463.5" >`INTE..</text>
</g>
<g >
<title>`(anonymous namespace)::ADCELegacyPass::runOnFunction(llvm::Func (2 samples, 0.08%)</title><rect x="689.2" y="5893" width="0.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="692.18" y="5903.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="1525" width="0.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="428.86" y="1535.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="282.2" y="3077" width="0.5" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="285.24" y="3087.5" ></text>
</g>
<g >
<title>`MAKE-DYNENV^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="299.6" y="5909" width="0.9" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="302.60" y="5919.5" ></text>
</g>
<g >
<title>`llvm::MemorySSA::createMemoryPhi(llvm::BasicBlock*) (1 samples, 0.04%)</title><rect x="790.6" y="5829" width="0.4" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="793.56" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1429" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="427.92" y="1439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="423.0" y="2517" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="426.05" y="2527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="413.7" y="4885" width="1.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="416.66" y="4895.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="232.5" y="3301" width="8.0" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="235.48" y="3311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="268.6" y="629" width="0.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="271.62" y="639.5" ></text>
</g>
<g >
<title>`wrapped_cl__translate_logical_pathname_T_sp (1 samples, 0.04%)</title><rect x="961.4" y="6021" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="964.42" y="6031.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="244.2" y="389" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="247.22" y="399.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="1285" width="0.4" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="428.86" y="1295.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (57 samples, 2.27%)</title><rect x="204.3" y="917" width="26.8" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="207.32" y="927.5" >`..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="165.4" y="3285" width="1.8" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="168.36" y="3295.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="49.9" y="4773" width="0.9" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="52.90" y="4783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1093" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="423.70" y="1103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="423.0" y="4037" width="10.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="426.05" y="4047.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="3077" width="3.8" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="420.41" y="3087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.0" y="2101" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="411.97" y="2111.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="125.9" y="2725" width="1.0" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="128.93" y="2735.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="821" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="288.52" y="831.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="352.2" y="5477" width="0.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="355.17" y="5487.5" ></text>
</g>
<g >
<title>`INTERPRET-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="45.2" y="5429" width="1.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="48.20" y="5439.5" ></text>
</g>
<g >
<title>`OUT^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="630.0" y="5189" width="1.0" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="633.04" y="5199.5" ></text>
</g>
<g >
<title>`translate::from_object&lt;llvm::Attribute::AttrKind, std::__1::int (1 samples, 0.04%)</title><rect x="633.8" y="5285" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="636.79" y="5295.5" ></text>
</g>
<g >
<title>`COERCE-TO-CONDITION^CORE^FN^^ (1 samples, 0.04%)</title><rect x="298.2" y="5301" width="0.5" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="301.19" y="5311.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="341" width="1.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="288.52" y="351.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'IF) T T T))^METHOD (3 samples, 0.12%)</title><rect x="233.9" y="805" width="1.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="236.89" y="815.5" ></text>
</g>
<g >
<title>`wrapped_cl__make_hash_table_T_spFixnum_spNumber_spReal_spSymbol (1 samples, 0.04%)</title><rect x="126.9" y="2741" width="0.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="129.87" y="2751.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="41.9" y="4645" width="1.0" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="44.92" y="4655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4613" width="0.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="419.48" y="4623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="428.2" y="2357" width="1.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="431.21" y="2367.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T LEXICAL-VARIABLE-INFO T T))^ (1 samples, 0.04%)</title><rect x="252.2" y="3061" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="255.20" y="3071.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="415.5" y="4661" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="418.54" y="4671.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="324.5" y="4997" width="0.4" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="327.48" y="5007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="3365" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="414.31" y="3375.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="414.1" y="3397" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="417.13" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.0" y="1701" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="426.99" y="1711.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.08%)</title><rect x="527.7" y="5749" width="1.0" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="530.72" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (137 samples, 5.45%)</title><rect x="167.2" y="4021" width="64.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="170.24" y="4031.5" >`core::..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="517" width="9.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="262.24" y="527.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="98.2" y="3829" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="101.24" y="3839.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.04%)</title><rect x="891.5" y="5653" width="0.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="894.48" y="5663.5" ></text>
</g>
<g >
<title>`CST-TO-AST^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="332.0" y="4741" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="334.99" y="4751.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (2 samples, 0.08%)</title><rect x="375.2" y="5765" width="0.9" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="378.17" y="5775.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="34.4" y="4805" width="0.9" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="37.41" y="4815.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'CLEAVIR-PRIMOP:MUL (3 samples, 0.12%)</title><rect x="279.4" y="1285" width="1.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="282.42" y="1295.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="112.8" y="3637" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="115.79" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="3509" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="417.13" y="3519.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (3 samples, 0.12%)</title><rect x="124.5" y="3013" width="1.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="127.53" y="3023.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="421.6" y="3749" width="1.0" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="424.64" y="3759.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (1 samples, 0.04%)</title><rect x="255.5" y="3253" width="0.5" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="258.48" y="3263.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'IF) T T T))^METHOD (23 samples, 0.91%)</title><rect x="167.2" y="2613" width="10.8" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="170.24" y="2623.5" ></text>
</g>
<g >
<title>`COMPLETER-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (15 samples, 0.60%)</title><rect x="139.1" y="4357" width="7.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="142.08" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (7 samples, 0.28%)</title><rect x="407.6" y="4933" width="3.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="410.56" y="4943.5" ></text>
</g>
<g >
<title>`MAKE-LITERAL-NODE-SIDE-EFFECT^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="317.9" y="5637" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="320.91" y="5647.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="240.0" y="2741" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="242.99" y="2751.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="423.5" y="2373" width="1.0" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="426.52" y="2383.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (145 samples, 5.77%)</title><rect x="59.8" y="5493" width="68.0" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="62.75" y="5503.5" >`core::..</text>
</g>
<g >
<title>`wrapped_APInt_O__makeAPIntWidth_core__Integer_spuintbool (1 samples, 0.04%)</title><rect x="667.6" y="5605" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="670.59" y="5615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="390.7" y="3365" width="1.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="393.66" y="3375.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="349.8" y="5285" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="352.82" y="5295.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="277.1" y="901" width="1.8" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="280.07" y="911.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="370.5" y="5733" width="0.4" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="373.48" y="5743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="405.7" y="4085" width="0.4" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="408.68" y="4095.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (13 samples, 0.52%)</title><rect x="427.3" y="3861" width="6.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="430.27" y="3871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="260.2" y="149" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="263.18" y="159.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Value const*&gt;::insert(llvm::Value c (1 samples, 0.04%)</title><rect x="768.0" y="5797" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="771.04" y="5807.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="641.3" y="5349" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="644.30" y="5359.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (54 samples, 2.15%)</title><rect x="323.5" y="5317" width="25.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="326.54" y="5327.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="416.0" y="4709" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="419.01" y="4719.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="166.3" y="933" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="169.30" y="943.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="295.8" y="2357" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="298.85" y="2367.5" ></text>
</g>
<g >
<title>`core::core__get_sysprop(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.04%)</title><rect x="259.7" y="149" width="0.5" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="262.71" y="159.5" ></text>
</g>
<g >
<title>`APPEND^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="356.9" y="5733" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="359.87" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="340.4" y="4613" width="1.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="343.44" y="4623.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="1829" width="0.9" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="126.59" y="1839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (145 samples, 5.77%)</title><rect x="59.8" y="5541" width="68.0" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="62.75" y="5551.5" >`INTERP..</text>
</g>
<g >
<title>`__lseek (1 samples, 0.04%)</title><rect x="953.9" y="5941" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="956.91" y="5951.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="335.7" y="4341" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="338.74" y="4351.5" ></text>
</g>
<g >
<title>`core::clasp_write_string(std::__1::basic_string&lt;char, std::__1: (1 samples, 0.04%)</title><rect x="10.0" y="5973" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="13.00" y="5983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4453" width="0.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="419.48" y="4463.5" ></text>
</g>
<g >
<title>`fread (1 samples, 0.04%)</title><rect x="22.7" y="3829" width="0.4" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="25.67" y="3839.5" ></text>
</g>
<g >
<title>0x11a477094 (5 samples, 0.20%)</title><rect x="247.5" y="1029" width="2.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="250.50" y="1039.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="356.4" y="5621" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="359.40" y="5631.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (8 samples, 0.32%)</title><rect x="502.4" y="5717" width="3.7" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="505.37" y="5727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="396.8" y="3973" width="0.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="399.76" y="3983.5" ></text>
</g>
<g >
<title>`llvm::Function::addAttribute(unsigned int, llvm::Attribute) (1 samples, 0.04%)</title><rect x="342.8" y="4581" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="345.78" y="4591.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (514 samples, 20.45%)</title><rect x="58.3" y="5861" width="241.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="61.35" y="5871.5" >`INTERPRETED-DISCRIMINATING-FUNC..</text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (1 samples, 0.04%)</title><rect x="838.9" y="5813" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="841.91" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="405.2" y="5317" width="0.9" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="408.21" y="5327.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="279.4" y="629" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="282.42" y="639.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="244.7" y="821" width="2.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="247.69" y="831.5" ></text>
</g>
<g >
<title>0x1225f1094 (11 samples, 0.44%)</title><rect x="276.1" y="4325" width="5.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="279.13" y="4335.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="126.4" y="2277" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="129.40" y="2287.5" ></text>
</g>
<g >
<title>`SIMPLE-TYPE-PREDICATE^CORE^FN^^ (1 samples, 0.04%)</title><rect x="257.8" y="1557" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="260.83" y="1567.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (46 samples, 1.83%)</title><rect x="250.8" y="4309" width="21.6" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="253.79" y="4319.5" >`..</text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (10 samples, 0.40%)</title><rect x="182.7" y="501" width="4.7" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="185.73" y="511.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, unsi (1 samples, 0.04%)</title><rect x="956.3" y="5829" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="959.25" y="5839.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::makeUniqueName(llvm::Value*, llvm::Smal (1 samples, 0.04%)</title><rect x="645.1" y="5221" width="0.4" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="648.06" y="5231.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="52.2" y="4933" width="2.9" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="55.24" y="4943.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="88.4" y="4149" width="3.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="91.39" y="4159.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (561 samples, 22.32%)</title><rect x="685.4" y="6021" width="263.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="688.43" y="6031.5" >`OPTIMIZE-MODULE-FOR-COMPILE-FILE^C..</text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (1 samples, 0.04%)</title><rect x="281.3" y="3013" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="284.30" y="3023.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm: (1 samples, 0.04%)</title><rect x="838.9" y="5781" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="841.91" y="5791.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="125.9" y="2277" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="128.93" y="2287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="2117" width="1.0" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="426.52" y="2127.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="421.6" y="3045" width="1.0" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="424.64" y="3055.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="49.9" y="5141" width="1.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="52.90" y="5151.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((:AROUND) (T T CLASP))^METHOD (1 samples, 0.04%)</title><rect x="296.3" y="3205" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="299.32" y="3215.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setup(unsigned int, gctools::smart_ptr&lt;core: (1 samples, 0.04%)</title><rect x="372.8" y="5749" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="375.82" y="5759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="380.3" y="4581" width="1.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="383.33" y="4591.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="22.2" y="3813" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="25.20" y="3823.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.04%)</title><rect x="888.7" y="5733" width="0.4" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="891.66" y="5743.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.04%)</title><rect x="752.5" y="5637" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="755.55" y="5647.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.04%)</title><rect x="384.1" y="4469" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="387.09" y="4479.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="653.0" y="5525" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="656.04" y="5535.5" ></text>
</g>
<g >
<title>`INTERPOLATE-FUNCTION^CLEAVIR-PARTIAL-INLINING^FN^^ (33 samples, 1.31%)</title><rect x="497.7" y="5829" width="15.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="500.68" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="235.3" y="469" width="4.2" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="238.30" y="479.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="286.9" y="4517" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="289.93" y="4527.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="18.0" y="3829" width="3.7" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="20.98" y="3839.5" ></text>
</g>
<g >
<title>`POSITION^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="233.9" y="69" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="236.89" y="79.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="164.0" y="4341" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="166.95" y="4351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="400.0" y="4405" width="2.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="403.05" y="4415.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (4 samples, 0.16%)</title><rect x="168.2" y="885" width="1.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="171.18" y="895.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.04%)</title><rect x="370.5" y="5797" width="0.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="373.48" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="34.4" y="4501" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="37.41" y="4511.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (10 samples, 0.40%)</title><rect x="313.2" y="5621" width="4.7" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="316.21" y="5631.5" ></text>
</g>
<g >
<title>`int boost::io::detail::upper_bound_from_fstring&lt;std::__1::basic (1 samples, 0.04%)</title><rect x="644.1" y="5285" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="647.12" y="5295.5" ></text>
</g>
<g >
<title>`core::type_of_decide_class(gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.12%)</title><rect x="118.9" y="3541" width="1.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="121.89" y="3551.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="101.5" y="3573" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="104.53" y="3583.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (102 samples, 4.06%)</title><rect x="605.2" y="5525" width="47.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="608.16" y="5535.5" >`LAY..</text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm: (1 samples, 0.04%)</title><rect x="717.8" y="5813" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="720.81" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="1141" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="428.86" y="1151.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="725.3" y="5797" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="728.32" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="332.0" y="4693" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="334.99" y="4703.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (52 samples, 2.07%)</title><rect x="379.4" y="5301" width="24.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="382.40" y="5311.5" >`..</text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (16 samples, 0.64%)</title><rect x="35.8" y="4917" width="7.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="38.82" y="4927.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.04%)</title><rect x="13.8" y="5461" width="0.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="16.75" y="5471.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="387.8" y="4213" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="390.84" y="4223.5" ></text>
</g>
<g >
<title>`core::Symbol_O::fmakunbound_setf() (1 samples, 0.04%)</title><rect x="423.5" y="1717" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="426.52" y="1727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="380.3" y="4485" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="383.33" y="4495.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="345.6" y="4949" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="348.60" y="4959.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="60.2" y="5173" width="0.5" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="63.22" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="2453" width="3.8" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="420.41" y="2463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3189" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="414.78" y="3199.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.0" y="2693" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="411.97" y="2703.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="125.9" y="2917" width="1.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="128.93" y="2927.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="253.6" y="3093" width="0.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="256.60" y="3103.5" ></text>
</g>
<g >
<title>`__cxa_rethrow (1 samples, 0.04%)</title><rect x="35.8" y="4853" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="38.82" y="4863.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (137 samples, 5.45%)</title><rect x="167.2" y="3941" width="64.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="170.24" y="3951.5" >`INTERP..</text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="644.6" y="5301" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="647.59" y="5311.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="165.8" y="1493" width="1.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="168.83" y="1503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="232.5" y="2501" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="235.48" y="2511.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (43 samples, 1.71%)</title><rect x="252.2" y="3653" width="20.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="255.20" y="3663.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::Instruction&gt;, llvm:: (1 samples, 0.04%)</title><rect x="950.2" y="5845" width="0.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="953.15" y="5855.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (3 samples, 0.12%)</title><rect x="549.8" y="5781" width="1.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="552.78" y="5791.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="106.2" y="3541" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="109.22" y="3551.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="323.5" y="5253" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="326.54" y="5263.5" ></text>
</g>
<g >
<title>0x1225e9094 (136 samples, 5.41%)</title><rect x="167.2" y="2901" width="63.9" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="170.24" y="2911.5" >0x1225e..</text>
</g>
<g >
<title>0x11a477094 (57 samples, 2.27%)</title><rect x="204.3" y="693" width="26.8" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="207.32" y="703.5" >0..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="901" width="5.6" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="236.89" y="911.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="288.3" y="4405" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="291.34" y="4415.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="85.1" y="4853" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="88.10" y="4863.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="281.3" y="4389" width="5.6" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="284.30" y="4399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="421.6" y="4181" width="1.0" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="424.64" y="4191.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (5 samples, 0.20%)</title><rect x="240.5" y="3093" width="2.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="243.46" y="3103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="3349" width="4.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="279.60" y="3359.5" ></text>
</g>
<g >
<title>`MAKE-ENCLOSE-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="3813" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="408.68" y="3823.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.04%)</title><rect x="23.1" y="4037" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="26.14" y="4047.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (32 samples, 1.27%)</title><rect x="187.4" y="85" width="15.0" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="190.42" y="95.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (136 samples, 5.41%)</title><rect x="167.2" y="3189" width="63.9" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="170.24" y="3199.5" >`core::..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="423.0" y="2549" width="1.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="426.05" y="2559.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-I32^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="672.3" y="5797" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="675.28" y="5807.5" ></text>
</g>
<g >
<title>`core::cl__write(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.04%)</title><rect x="56.9" y="5909" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="59.94" y="5919.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.9" y="2117" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="412.90" y="2127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="398.2" y="3301" width="0.4" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="401.17" y="3311.5" ></text>
</g>
<g >
<title>`llvm::Twine::printOneChild(llvm::raw_ostream&amp;, llvm::Twine::Chi (1 samples, 0.04%)</title><rect x="769.4" y="5733" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="772.44" y="5743.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="39.1" y="4261" width="0.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="42.10" y="4271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((THE-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="4117" width="1.0" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="424.64" y="4127.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="425.9" y="2949" width="0.9" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="428.86" y="2959.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="628.2" y="5077" width="0.4" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="631.16" y="5087.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::computeSCEVAtScope(llvm::SCEV const*, ll (1 samples, 0.04%)</title><rect x="920.1" y="5669" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="923.11" y="5679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="415.5" y="4581" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="418.54" y="4591.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="416.0" y="4853" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="419.01" y="4863.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="172.4" y="981" width="5.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="175.40" y="991.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="123.6" y="1125" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="126.59" y="1135.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="260.6" y="469" width="7.6" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="263.64" y="479.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (231 samples, 9.19%)</title><rect x="164.0" y="4469" width="108.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="166.95" y="4479.5" >`core::clos__..</text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (7 samples, 0.28%)</title><rect x="332.9" y="4645" width="3.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="335.93" y="4655.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="523.5" y="5749" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="526.49" y="5759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="452.6" y="5429" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="455.62" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (9 samples, 0.36%)</title><rect x="276.6" y="1813" width="4.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="279.60" y="1823.5" ></text>
</g>
<g >
<title>`HOIST-AST^CLASP-CLEAVIR^FN^^ (71 samples, 2.82%)</title><rect x="318.8" y="5605" width="33.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="321.85" y="5615.5" >`H..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (57 samples, 2.27%)</title><rect x="204.3" y="1157" width="26.8" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="207.32" y="1167.5" >`..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (15 samples, 0.60%)</title><rect x="232.5" y="2661" width="7.0" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="235.48" y="2671.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="92.1" y="3637" width="1.9" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="95.14" y="3647.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (23 samples, 0.91%)</title><rect x="746.4" y="5829" width="10.8" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="749.44" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="410.8" y="4229" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="413.84" y="4239.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (18 samples, 0.72%)</title><rect x="91.7" y="4245" width="8.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="94.67" y="4255.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::User const*&gt;::insert(llvm::User con (1 samples, 0.04%)</title><rect x="960.9" y="5909" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="963.95" y="5919.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (5 samples, 0.20%)</title><rect x="244.7" y="693" width="2.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="247.69" y="703.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="417.9" y="165" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="420.88" y="175.5" ></text>
</g>
<g >
<title>`llvm::isa_impl_wrap&lt;llvm::DbgInfoIntrinsic, llvm::ilist_iterato (1 samples, 0.04%)</title><rect x="836.1" y="5813" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="839.09" y="5823.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (1 samples, 0.04%)</title><rect x="16.6" y="4421" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="19.57" y="4431.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="530.5" y="5765" width="1.9" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="533.53" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="294.0" y="4261" width="2.8" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="296.97" y="4271.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((FDEFINITION-INSTRU (2 samples, 0.08%)</title><rect x="663.4" y="5653" width="0.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="666.37" y="5663.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::computeExitLimit(llvm::Loop const*, llvm (1 samples, 0.04%)</title><rect x="920.1" y="5797" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="923.11" y="5807.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (3 samples, 0.12%)</title><rect x="124.5" y="3205" width="1.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="127.53" y="3215.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="384.1" y="4805" width="10.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="387.09" y="4815.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="279.9" y="549" width="0.9" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="282.89" y="559.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (230 samples, 9.15%)</title><rect x="164.4" y="4341" width="108.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="167.42" y="4351.5" >`INTERPRETED-..</text>
</g>
<g >
<title>0x1225ef094 (9 samples, 0.36%)</title><rect x="276.6" y="3301" width="4.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="279.60" y="3311.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (1 samples, 0.04%)</title><rect x="627.7" y="5061" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="630.69" y="5071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="3557" width="0.9" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="403.99" y="3567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="99.2" y="3877" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="102.18" y="3887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="294.9" y="3813" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="297.91" y="3823.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (11 samples, 0.44%)</title><rect x="49.9" y="5557" width="5.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="52.90" y="5567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="414.1" y="3797" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="417.13" y="3807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="1397" width="4.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="279.60" y="1407.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (57 samples, 2.27%)</title><rect x="204.3" y="1189" width="26.8" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="207.32" y="1199.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="254.5" y="3061" width="1.0" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="257.54" y="3071.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="112.3" y="3813" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="115.32" y="3823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (32 samples, 1.27%)</title><rect x="187.4" y="501" width="15.0" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="190.42" y="511.5" ></text>
</g>
<g >
<title>`GET-OR-DECLARE-FUNCTION-OR-ERROR^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="599.5" y="5573" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="602.53" y="5583.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.04%)</title><rect x="249.8" y="965" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="252.85" y="975.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="268.6" y="949" width="3.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="271.62" y="959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="3861" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="408.68" y="3871.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="283.6" y="1029" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="286.64" y="1039.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="171.5" y="1493" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="174.46" y="1503.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatticeElement, llvm::D (1 samples, 0.04%)</title><rect x="702.8" y="5717" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="705.79" y="5727.5" ></text>
</g>
<g >
<title>`FIND-BUILT-IN-TAG^CORE^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="645" width="0.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="171.18" y="655.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (2 samples, 0.08%)</title><rect x="269.1" y="69" width="0.9" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="272.09" y="79.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (3 samples, 0.12%)</title><rect x="202.9" y="1189" width="1.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="205.91" y="1199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="397.7" y="3605" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="400.70" y="3615.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (63 samples, 2.51%)</title><rect x="133.9" y="4517" width="29.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="136.91" y="4527.5" >`I..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="122.6" y="3093" width="1.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="125.65" y="3103.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="92.1" y="3269" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="95.14" y="3279.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="348.4" y="5205" width="0.5" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="351.42" y="5215.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="124.5" y="2645" width="1.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="127.53" y="2655.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (31 samples, 1.23%)</title><rect x="257.4" y="2837" width="14.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="260.36" y="2847.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="591.1" y="5717" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="594.08" y="5727.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="251.3" y="3573" width="0.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="254.26" y="3583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="125.5" y="1845" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="128.47" y="1855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="49.9" y="4853" width="1.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="52.90" y="4863.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="125.9" y="2325" width="1.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="128.93" y="2335.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION-IMPL^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="621.1" y="5253" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="624.12" y="5263.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="567.1" y="5717" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="570.14" y="5727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="4133" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="414.78" y="4143.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (57 samples, 2.27%)</title><rect x="204.3" y="853" width="26.8" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="207.32" y="863.5" >`..</text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (12 samples, 0.48%)</title><rect x="17.5" y="4021" width="5.6" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="20.51" y="4031.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.04%)</title><rect x="298.7" y="5493" width="0.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="301.66" y="5503.5" ></text>
</g>
<g >
<title>`READ-CHAR^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="16.6" y="4453" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="19.57" y="4463.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.04%)</title><rect x="92.1" y="2965" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="95.14" y="2975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5621" width="0.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="408.21" y="5631.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="853.5" y="5749" width="0.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="856.46" y="5759.5" ></text>
</g>
<g >
<title>`IRC-EXTRACT-VALUE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="649.3" y="5365" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="652.28" y="5375.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2277" width="4.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="285.70" y="2287.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="3317" width="4.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="279.60" y="3327.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp_big(void const*) (1 samples, 0.04%)</title><rect x="922.5" y="5813" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="925.46" y="5823.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::getPredicatedBackedgeTakenInfo(llvm::Loo (1 samples, 0.04%)</title><rect x="846.4" y="5765" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="849.42" y="5775.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="653.0" y="5365" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="656.04" y="5375.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (32 samples, 1.27%)</title><rect x="187.4" y="357" width="15.0" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="190.42" y="367.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="417.4" y="4437" width="5.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="420.41" y="4447.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="23.6" y="3733" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="26.61" y="3743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="283.2" y="1429" width="1.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="286.17" y="1439.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.04%)</title><rect x="15.2" y="5365" width="0.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="18.16" y="5375.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (6 samples, 0.24%)</title><rect x="861.9" y="5813" width="2.8" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="864.91" y="5823.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm: (1 samples, 0.04%)</title><rect x="855.8" y="5829" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="858.81" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (231 samples, 9.19%)</title><rect x="164.0" y="4437" width="108.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="166.95" y="4447.5" >`core::Funcal..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="4085" width="5.6" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="284.30" y="4095.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="308.5" y="5829" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="311.52" y="5839.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (1 samples, 0.04%)</title><rect x="553.1" y="5685" width="0.4" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="556.06" y="5695.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.04%)</title><rect x="376.1" y="5653" width="0.5" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="379.11" y="5663.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="418.8" y="869" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="421.82" y="879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2917" width="1.0" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="427.92" y="2927.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="327.8" y="4469" width="0.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="330.76" y="4479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3701" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="415.25" y="3711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="396.8" y="4357" width="0.9" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="399.76" y="4367.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (1 samples, 0.04%)</title><rect x="246.6" y="485" width="0.4" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="249.56" y="495.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2037" width="1.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="127.53" y="2047.5" ></text>
</g>
<g >
<title>`CONS-TABLE^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="291.6" y="5605" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="294.62" y="5615.5" ></text>
</g>
<g >
<title>`llvm::SparseSolver&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anon (3 samples, 0.12%)</title><rect x="941.2" y="5893" width="1.4" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="944.23" y="5903.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="295.4" y="3669" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="298.38" y="3679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (57 samples, 2.27%)</title><rect x="204.3" y="661" width="26.8" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="207.32" y="671.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="52.2" y="4965" width="2.9" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="55.24" y="4975.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (108 samples, 4.30%)</title><rect x="180.4" y="2229" width="50.7" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="183.38" y="2239.5" >`PROC..</text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (1 samples, 0.04%)</title><rect x="247.0" y="197" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="250.03" y="207.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="165.8" y="1109" width="1.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="168.83" y="1119.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="4821" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="408.68" y="4831.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="429.6" y="2485" width="1.0" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="432.62" y="2495.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="247.5" y="405" width="1.9" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="250.50" y="415.5" ></text>
</g>
<g >
<title>0x1225e9094 (4 samples, 0.16%)</title><rect x="165.4" y="3429" width="1.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="168.36" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="3525" width="4.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="430.27" y="3535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="1813" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="411.97" y="1823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="243.3" y="2197" width="7.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="246.28" y="2207.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="3045" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="414.78" y="3055.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.04%)</title><rect x="654.9" y="5253" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="657.92" y="5263.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (2 samples, 0.08%)</title><rect x="294.0" y="4053" width="0.9" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="296.97" y="4063.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="269.1" y="629" width="2.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="272.09" y="639.5" ></text>
</g>
<g >
<title>`wrapped_cl__error_T_spList_sp (1 samples, 0.04%)</title><rect x="98.7" y="3829" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="101.71" y="3839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="1477" width="0.4" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="428.86" y="1487.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="107.2" y="3557" width="0.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="110.16" y="3567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="2293" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="412.90" y="2303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1349" width="0.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="430.27" y="1359.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (1 samples, 0.04%)</title><rect x="887.7" y="5749" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="890.72" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="165.4" y="2629" width="0.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="168.36" y="2639.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="2997" width="4.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="279.60" y="3007.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="21.3" y="3621" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="24.26" y="3631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="269.1" y="309" width="2.8" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="272.09" y="319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="3893" width="1.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="411.03" y="3903.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="2565" width="4.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="279.60" y="2575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="398.2" y="3557" width="0.9" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="401.17" y="3567.5" ></text>
</g>
<g >
<title>0x1225c10c9 (2 samples, 0.08%)</title><rect x="113.7" y="3589" width="1.0" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="116.73" y="3599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="428.7" y="1909" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="431.68" y="1919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="340.4" y="4645" width="1.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="343.44" y="4655.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (7 samples, 0.28%)</title><rect x="613.6" y="5429" width="3.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="616.61" y="5439.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock (2 samples, 0.08%)</title><rect x="718.8" y="5829" width="0.9" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="721.75" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="429.6" y="2245" width="1.0" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="432.62" y="2255.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="314.2" y="5253" width="0.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="317.15" y="5263.5" ></text>
</g>
<g >
<title>`core::translate_list_case(gctools::smart_ptr&lt;core::List_V&gt;, gct (1 samples, 0.04%)</title><rect x="951.6" y="5893" width="0.4" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="954.56" y="5903.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (4 samples, 0.16%)</title><rect x="566.2" y="5765" width="1.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="569.21" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="423.5" y="1973" width="1.0" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="426.52" y="1983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="382.2" y="4133" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="385.21" y="4143.5" ></text>
</g>
<g >
<title>`IRC-GEP^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="631.9" y="5301" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="634.92" y="5311.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatticeElement, llvm::D (1 samples, 0.04%)</title><rect x="703.3" y="5765" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="706.26" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="179.9" y="2101" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="182.91" y="2111.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="409.4" y="4405" width="1.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="412.44" y="4415.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction*, unsi (1 samples, 0.04%)</title><rect x="738.0" y="5829" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="741.00" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="390.2" y="3717" width="1.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="393.19" y="3727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="421.2" y="4149" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="424.17" y="4159.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="52.2" y="4085" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="55.24" y="4095.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="268.2" y="1205" width="0.4" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="271.15" y="1215.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="633.8" y="5317" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="636.79" y="5327.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="286.9" y="4405" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="289.93" y="4415.5" ></text>
</g>
<g >
<title>`llvm::BlockFrequencyInfoWrapperPass::runOnFunction(llvm::Functi (1 samples, 0.04%)</title><rect x="851.1" y="5893" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="854.11" y="5903.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="558.2" y="5797" width="0.5" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="561.23" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="1429" width="4.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="279.60" y="1439.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.04%)</title><rect x="135.8" y="4181" width="0.5" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="138.79" y="4191.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="287.4" y="4661" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="290.40" y="4671.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.04%)</title><rect x="15.6" y="5061" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="18.63" y="5071.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.04%)</title><rect x="233.0" y="2133" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="235.95" y="2143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1253" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="430.74" y="1263.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="19.9" y="3397" width="0.9" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="22.86" y="3407.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.04%)</title><rect x="288.8" y="5589" width="0.5" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="291.81" y="5599.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="340.0" y="4613" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="342.97" y="4623.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="239.5" y="2949" width="1.0" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="242.52" y="2959.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (5 samples, 0.20%)</title><rect x="52.2" y="4213" width="2.4" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="55.24" y="4223.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="409.4" y="3301" width="1.0" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="412.44" y="3311.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.04%)</title><rect x="565.3" y="5797" width="0.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="568.27" y="5807.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::BasicBlock const*, std::__1::alloca (1 samples, 0.04%)</title><rect x="853.5" y="5829" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="856.46" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="417.4" y="4341" width="5.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="420.41" y="4351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="3605" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="417.13" y="3615.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (3 samples, 0.12%)</title><rect x="436.7" y="5445" width="1.4" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="439.66" y="5455.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="167.7" y="1125" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="170.71" y="1135.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="399.6" y="4133" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="402.58" y="4143.5" ></text>
</g>
<g >
<title>`HOIST-AST^CLASP-CLEAVIR^FN^^ (41 samples, 1.63%)</title><rect x="325.4" y="5077" width="19.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="328.42" y="5087.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="1365" width="0.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="126.59" y="1375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="391.6" y="2741" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="394.60" y="2751.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="278.9" y="149" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="281.95" y="159.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="125.9" y="2821" width="1.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="128.93" y="2831.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="167.7" y="2373" width="10.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="170.71" y="2383.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (7 samples, 0.28%)</title><rect x="268.6" y="1493" width="3.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="271.62" y="1503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="38.2" y="4517" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="41.16" y="4527.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(l (7 samples, 0.28%)</title><rect x="817.3" y="5717" width="3.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="820.32" y="5727.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.04%)</title><rect x="747.9" y="5733" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="750.85" y="5743.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (85 samples, 3.38%)</title><rect x="87.4" y="4645" width="39.9" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="90.45" y="4655.5" >`CO..</text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="27.8" y="4821" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="30.84" y="4831.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="2933" width="3.8" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="420.41" y="2943.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="26.0" y="4325" width="0.4" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="28.96" y="4335.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (1 samples, 0.04%)</title><rect x="110.9" y="3493" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="113.91" y="3503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (36 samples, 1.43%)</title><rect x="416.9" y="5045" width="16.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="419.95" y="5055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="431.5" y="3717" width="1.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="434.50" y="3727.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="354.0" y="5237" width="0.5" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="357.05" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4597" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="419.48" y="4607.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::JumpThreading::runOnFunction(llvm::Funct (10 samples, 0.40%)</title><rect x="700.4" y="5893" width="4.7" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="703.45" y="5903.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="654.0" y="5525" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="656.98" y="5535.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="3109" width="63.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="170.24" y="3119.5" >`INTERP..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="396.8" y="4389" width="0.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="399.76" y="4399.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="276.1" y="4421" width="5.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="279.13" y="4431.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="349.4" y="5333" width="0.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="352.36" y="5343.5" ></text>
</g>
<g >
<title>`core::lisp_true() (1 samples, 0.04%)</title><rect x="568.6" y="5781" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="571.55" y="5791.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="256.0" y="2773" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="258.95" y="2783.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.04%)</title><rect x="926.2" y="5813" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="929.21" y="5823.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="124.5" y="3077" width="1.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="127.53" y="3087.5" ></text>
</g>
<g >
<title>`SIMPLE-TYPE-PREDICATE^CORE^FN^^ (6 samples, 0.24%)</title><rect x="70.5" y="4997" width="2.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="73.55" y="5007.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="26.0" y="4437" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="28.96" y="4447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="34.4" y="5317" width="10.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="37.41" y="5327.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="412.3" y="3333" width="0.4" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="415.25" y="3343.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="2805" width="63.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="170.24" y="2815.5" >`COMBIN..</text>
</g>
<g >
<title>`llvm::PMDataManager::initializeAnalysisImpl(llvm::Pass*) (1 samples, 0.04%)</title><rect x="921.1" y="5877" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="924.05" y="5887.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="723.0" y="5733" width="0.4" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="725.98" y="5743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (108 samples, 4.30%)</title><rect x="180.4" y="2405" width="50.7" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="183.38" y="2415.5" >`core..</text>
</g>
<g >
<title>`llvm::Value::setValueName(llvm::StringMapEntry&lt;llvm::Value*&gt;*) (1 samples, 0.04%)</title><rect x="628.2" y="5029" width="0.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="631.16" y="5039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="388.3" y="4133" width="3.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="391.31" y="4143.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="3429" width="1.0" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="424.64" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="2597" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="414.78" y="2607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="3061" width="14.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="260.36" y="3071.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (5 samples, 0.20%)</title><rect x="698.1" y="5861" width="2.3" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="701.10" y="5871.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (11 samples, 0.44%)</title><rect x="49.9" y="5461" width="5.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="52.90" y="5471.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="260.6" y="453" width="7.6" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="263.64" y="463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="431.5" y="3781" width="1.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="434.50" y="3791.5" ></text>
</g>
<g >
<title>`PROCESS-CAPTURED-VARIABLES^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (42 samples, 1.67%)</title><rect x="560.1" y="5845" width="19.7" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="563.10" y="5855.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.08%)</title><rect x="273.8" y="5093" width="0.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="276.79" y="5103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="413.7" y="4021" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="416.66" y="4031.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="423.0" y="3557" width="3.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="426.05" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2005" width="1.0" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="427.92" y="2015.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="94.0" y="3525" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="97.02" y="3535.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymou (2 samples, 0.08%)</title><rect x="940.3" y="5893" width="0.9" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="943.29" y="5903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="409.4" y="3557" width="1.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="412.44" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="4181" width="1.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="411.03" y="4191.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="425.9" y="2661" width="0.9" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="428.86" y="2671.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (137 samples, 5.45%)</title><rect x="167.2" y="3989" width="64.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="170.24" y="3999.5" >`core::..</text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (7 samples, 0.28%)</title><rect x="236.2" y="165" width="3.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="239.24" y="175.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.04%)</title><rect x="15.2" y="5349" width="0.4" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="18.16" y="5359.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (12 samples, 0.48%)</title><rect x="17.5" y="4101" width="5.6" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="20.51" y="4111.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.04%)</title><rect x="887.7" y="5717" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="890.72" y="5727.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="296.3" y="3045" width="0.5" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="299.32" y="3055.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::StripPtrCastKeepAS(llvm::Constant*, llvm (1 samples, 0.04%)</title><rect x="753.5" y="5717" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="756.48" y="5727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5029" width="0.9" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="408.21" y="5039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="398.2" y="2869" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="401.17" y="2879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="343.7" y="4773" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="346.72" y="4783.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="419.8" y="1909" width="0.4" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="422.76" y="1919.5" ></text>
</g>
<g >
<title>`BACKQUOTE^ECLECTOR.READER^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4805" width="1.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="39.28" y="4815.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (33 samples, 1.31%)</title><rect x="15.6" y="5253" width="15.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="18.63" y="5263.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (1 samples, 0.04%)</title><rect x="759.1" y="5701" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="762.12" y="5711.5" ></text>
</g>
<g >
<title>`POSSIBLY-ADD-ITEM^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-STA (1 samples, 0.04%)</title><rect x="146.6" y="4357" width="0.5" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="149.59" y="4367.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (19 samples, 0.76%)</title><rect x="259.2" y="1525" width="9.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="262.24" y="1535.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="336.7" y="4197" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="339.68" y="4207.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="251.7" y="3045" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="254.73" y="3055.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.04%)</title><rect x="251.7" y="3109" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="254.73" y="3119.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.9" y="2869" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="412.90" y="2879.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="341.8" y="4645" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="344.85" y="4655.5" ></text>
</g>
<g >
<title>0x11a477094 (12 samples, 0.48%)</title><rect x="233.9" y="1845" width="5.6" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="236.89" y="1855.5" ></text>
</g>
<g >
<title>`core::Instance_O::copyInstance() const (2 samples, 0.08%)</title><rect x="367.7" y="5781" width="0.9" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="370.66" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="384.6" y="4213" width="3.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="387.56" y="4223.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="291.6" y="5573" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="294.62" y="5583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="414.6" y="4181" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="417.60" y="4191.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (10 samples, 0.40%)</title><rect x="122.6" y="3621" width="4.7" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="125.65" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="410.4" y="3429" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="413.37" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.6" y="2581" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="424.64" y="2591.5" ></text>
</g>
<g >
<title>`llvm::GlobalValue::getGUID() const (2 samples, 0.08%)</title><rect x="960.0" y="5909" width="0.9" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="963.01" y="5919.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="125.9" y="2085" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="128.93" y="2095.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="405.7" y="3765" width="0.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="408.68" y="3775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="1237" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="423.70" y="1247.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (1 samples, 0.04%)</title><rect x="780.2" y="5717" width="0.5" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="783.24" y="5727.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="415.1" y="4421" width="0.4" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="418.07" y="4431.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="2133" width="5.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="236.89" y="2143.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="506.1" y="5781" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="509.13" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="397.7" y="4309" width="2.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="400.70" y="4319.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (32 samples, 1.27%)</title><rect x="187.4" y="405" width="15.0" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="190.42" y="415.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (40 samples, 1.59%)</title><rect x="232.0" y="3493" width="18.8" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="235.01" y="3503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="252.2" y="3477" width="1.9" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="255.20" y="3487.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="331.5" y="4613" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="334.52" y="4623.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="165.8" y="2341" width="1.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="168.83" y="2351.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (145 samples, 5.77%)</title><rect x="59.8" y="5365" width="68.0" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="62.75" y="5375.5" >`core::..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="37.7" y="4741" width="5.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="40.69" y="4751.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="391.6" y="2661" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="394.60" y="2671.5" ></text>
</g>
<g >
<title>0x11a477094 (31 samples, 1.23%)</title><rect x="257.4" y="2165" width="14.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="260.36" y="2175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="2709" width="4.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="430.27" y="2719.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.04%)</title><rect x="932.8" y="5797" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="935.78" y="5807.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="577.0" y="5765" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="580.00" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="382.2" y="4277" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="385.21" y="4287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (4 samples, 0.16%)</title><rect x="431.5" y="3429" width="1.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="434.50" y="3439.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'CLEAVIR-PRIMOP:CST (5 samples, 0.20%)</title><rect x="284.6" y="1461" width="2.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="287.58" y="1471.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (1 samples, 0.04%)</title><rect x="659.6" y="5477" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="662.61" y="5487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="3189" width="4.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="279.60" y="3199.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (42 samples, 1.67%)</title><rect x="182.7" y="565" width="19.7" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="185.73" y="575.5" ></text>
</g>
<g >
<title>0x1225e30d4 (1 samples, 0.04%)</title><rect x="268.2" y="1317" width="0.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="271.15" y="1327.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="233.9" y="117" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="236.89" y="127.5" ></text>
</g>
<g >
<title>`llvm::LazyBranchProbabilityInfoPass::runOnFunction(llvm::Functi (1 samples, 0.04%)</title><rect x="838.4" y="5909" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="841.44" y="5919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="393.5" y="3685" width="0.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="396.48" y="3695.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="233.9" y="1157" width="5.6" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="236.89" y="1167.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="384.1" y="4789" width="10.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="387.09" y="4799.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (3 samples, 0.12%)</title><rect x="513.2" y="5781" width="1.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="516.17" y="5791.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::getModRefInfo(llvm::ImmutableCallSite, llv (5 samples, 0.20%)</title><rect x="764.7" y="5749" width="2.4" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="767.75" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2117" width="4.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="279.60" y="2127.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="327.3" y="4389" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="330.30" y="4399.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (86 samples, 3.42%)</title><rect x="87.0" y="4837" width="40.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="89.98" y="4847.5" >`PR..</text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpAndConstant(llvm::ICmpInst&amp;, llvm:: (1 samples, 0.04%)</title><rect x="759.6" y="5829" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="762.59" y="5839.5" ></text>
</g>
<g >
<title>`READ-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="54.1" y="3909" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="57.12" y="3919.5" ></text>
</g>
<g >
<title>`core::cl__error(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.04%)</title><rect x="94.0" y="3605" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="97.02" y="3615.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (4 samples, 0.16%)</title><rect x="247.5" y="453" width="1.9" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="250.50" y="463.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="125.9" y="3397" width="1.4" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="128.93" y="3407.5" ></text>
</g>
<g >
<title>`llvm::MergeBlockIntoPredecessor(llvm::BasicBlock*, llvm::Domina (1 samples, 0.04%)</title><rect x="837.0" y="5829" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="840.03" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (19 samples, 0.76%)</title><rect x="259.2" y="741" width="9.0" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="262.24" y="751.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3461" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="415.25" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="427.7" y="997" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="430.74" y="1007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3685" width="0.4" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="415.25" y="3695.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="102.5" y="3621" width="0.4" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="105.47" y="3631.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (15 samples, 0.60%)</title><rect x="232.5" y="3093" width="7.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="235.48" y="3103.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.04%)</title><rect x="553.1" y="5733" width="0.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="556.06" y="5743.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="342.8" y="4613" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="345.78" y="4623.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="269.1" y="277" width="2.8" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="272.09" y="287.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (1 samples, 0.04%)</title><rect x="529.6" y="5733" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="532.59" y="5743.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (4 samples, 0.16%)</title><rect x="18.0" y="3669" width="1.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="20.98" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="413.7" y="4677" width="1.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="416.66" y="4687.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="124.5" y="2181" width="1.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="127.53" y="2191.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="243.3" y="901" width="4.2" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="246.28" y="911.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (10 samples, 0.40%)</title><rect x="890.5" y="5813" width="4.7" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="893.54" y="5823.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="537.6" y="5813" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="540.57" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="3669" width="1.4" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="412.44" y="3679.5" ></text>
</g>
<g >
<title>`GC_free_block_ending_at (1 samples, 0.04%)</title><rect x="471.9" y="5541" width="0.4" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text  x="474.86" y="5551.5" ></text>
</g>
<g >
<title>`APPEND^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="97.8" y="3605" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="100.77" y="3615.5" ></text>
</g>
<g >
<title>`llvm::CallGraphWrapperPass::runOnModule(llvm::Module&amp;) (1 samples, 0.04%)</title><rect x="841.7" y="5925" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="844.73" y="5935.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="49.9" y="4613" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="52.90" y="4623.5" ></text>
</g>
<g >
<title>`CST-TO-AST^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="332.9" y="4565" width="1.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="335.93" y="4575.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (4 samples, 0.16%)</title><rect x="623.9" y="5205" width="1.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="626.94" y="5215.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="413.7" y="3893" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="416.66" y="3903.5" ></text>
</g>
<g >
<title>`llvm::APInt::udiv(llvm::APInt const&amp;) const (1 samples, 0.04%)</title><rect x="905.1" y="5621" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="908.09" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="295.4" y="3173" width="0.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="298.38" y="3183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="386.0" y="3637" width="1.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="388.97" y="3647.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (2 samples, 0.08%)</title><rect x="717.3" y="5845" width="1.0" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="720.34" y="5855.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CALL-AST-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="322.6" y="5189" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="325.60" y="5199.5" ></text>
</g>
<g >
<title>`core::str_out_write_char(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="678.4" y="5861" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="681.39" y="5871.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="231.5" y="3733" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="234.54" y="3743.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="1973" width="4.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="285.70" y="1983.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="421.6" y="2453" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="424.64" y="2463.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="123.6" y="1093" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="126.59" y="1103.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="34.4" y="4677" width="0.9" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="37.41" y="4687.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="296.3" y="3125" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="299.32" y="3135.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (21 samples, 0.84%)</title><rect x="112.3" y="3877" width="9.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="115.32" y="3887.5" ></text>
</g>
<g >
<title>`CST-EVAL^CLEAVIR-ENVIRONMENT^((T T NULL T))^METHOD^^ (11 samples, 0.44%)</title><rect x="276.1" y="4661" width="5.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="279.13" y="4671.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (33 samples, 1.31%)</title><rect x="15.6" y="5269" width="15.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="18.63" y="5279.5" ></text>
</g>
<g >
<title>`AST-&gt;HIR^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="327.8" y="4501" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="330.76" y="4511.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="432.0" y="1941" width="0.4" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="434.96" y="1951.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="295.4" y="3797" width="1.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="298.38" y="3807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="133.4" y="4565" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="136.44" y="4575.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="294.0" y="5173" width="2.8" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="296.97" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="757" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="423.70" y="767.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="281.3" y="3477" width="5.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="284.30" y="3487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="2725" width="1.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="427.92" y="2735.5" ></text>
</g>
<g >
<title>`NEW-DATUM-VARIABLE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="651.2" y="5397" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="654.16" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1173" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="427.92" y="1183.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="165.4" y="4149" width="1.8" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="168.36" y="4159.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="295.8" y="1909" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="298.85" y="1919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.9" y="3637" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="396.95" y="3647.5" ></text>
</g>
<g >
<title>`STORE-TMV^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="627.2" y="5157" width="1.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="630.22" y="5167.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="432.0" y="2293" width="0.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="434.96" y="2303.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="429.6" y="1749" width="1.0" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="432.62" y="1759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="124.5" y="2149" width="1.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="127.53" y="2159.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="452.6" y="5317" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="455.62" y="5327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="278.9" y="405" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="281.95" y="415.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="341.8" y="4613" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="344.85" y="4623.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::make(unsigned long, int, bool, gctools::smart_p (1 samples, 0.04%)</title><rect x="393.5" y="3541" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="396.48" y="3551.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="3397" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="414.78" y="3407.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="2021" width="4.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="285.70" y="2031.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (16 samples, 0.64%)</title><rect x="260.6" y="85" width="7.6" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="263.64" y="95.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::Value_O&gt; gctools::GCObjectAppropriate (1 samples, 0.04%)</title><rect x="632.4" y="5205" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="635.39" y="5215.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="255.5" y="2789" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="258.48" y="2799.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="235.3" y="165" width="0.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="238.30" y="175.5" ></text>
</g>
<g >
<title>`GC_mark_from (26 samples, 1.03%)</title><rect x="473.7" y="5541" width="12.2" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="476.74" y="5551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="165.8" y="1541" width="1.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="168.83" y="1551.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="257.4" y="1941" width="10.8" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="260.36" y="1951.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="416.5" y="4709" width="0.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="419.48" y="4719.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="790.6" y="5765" width="0.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="793.56" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="414.1" y="3477" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="417.13" y="3487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="417.4" y="2277" width="3.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="420.41" y="2287.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="286.9" y="5125" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="289.93" y="5135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.9" y="3445" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="396.95" y="3455.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="352.6" y="5461" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="355.64" y="5471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="424.9" y="1797" width="0.5" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="427.92" y="1807.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="34.9" y="4325" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="37.88" y="4335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1333" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="427.92" y="1343.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="670.9" y="5749" width="0.4" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="673.88" y="5759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3957" width="1.0" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="424.64" y="3967.5" ></text>
</g>
<g >
<title>`stripAndComputeConstantOffsets(llvm::DataLayout const&amp;, llvm::V (1 samples, 0.04%)</title><rect x="894.8" y="5797" width="0.4" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="897.77" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="247.5" y="309" width="1.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="250.50" y="319.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="252.2" y="3461" width="1.9" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="255.20" y="3471.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="348.9" y="5253" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="351.89" y="5263.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="388.3" y="4117" width="3.8" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="391.31" y="4127.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, bool (llvmo::Function_O::*)(gctools::s (1 samples, 0.04%)</title><rect x="635.7" y="5269" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="638.67" y="5279.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.04%)</title><rect x="865.2" y="5781" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="868.19" y="5791.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="593.9" y="5797" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="596.90" y="5807.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (7 samples, 0.28%)</title><rect x="751.1" y="5733" width="3.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="754.14" y="5743.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="183.2" y="149" width="0.5" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="186.20" y="159.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="294.0" y="5221" width="3.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="296.97" y="5231.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="34.4" y="5157" width="10.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="37.41" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="382.2" y="4501" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="385.21" y="4511.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="338.6" y="4325" width="0.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="341.56" y="4335.5" ></text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (1 samples, 0.04%)</title><rect x="862.4" y="5717" width="0.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="865.38" y="5727.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (1 samples, 0.04%)</title><rect x="86.0" y="5077" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="89.04" y="5087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="424.9" y="1525" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="427.92" y="1535.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="336.7" y="4277" width="0.5" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="339.68" y="4287.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="297.3" y="5493" width="1.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="300.26" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="423.0" y="2213" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="426.05" y="2223.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="255.5" y="2917" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="258.48" y="2927.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (231 samples, 9.19%)</title><rect x="164.0" y="4565" width="108.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="166.95" y="4575.5" >`core::Funcal..</text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="360.6" y="5733" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="363.62" y="5743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="247.0" y="549" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="250.03" y="559.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="294.0" y="4149" width="2.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="296.97" y="4159.5" ></text>
</g>
<g >
<title>`OPTIMIZED-OPTIMIZE-INFO-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="268.6" y="213" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="271.62" y="223.5" ></text>
</g>
<g >
<title>`llvm::getConstantDataArrayInfo(llvm::Value const*, llvm::Consta (1 samples, 0.04%)</title><rect x="893.4" y="5701" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="896.36" y="5711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="396.3" y="4709" width="3.7" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="399.29" y="4719.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (145 samples, 5.77%)</title><rect x="59.8" y="5557" width="68.0" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="62.75" y="5567.5" >`core::..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="36.8" y="3301" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="39.75" y="3311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="393.9" y="3349" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="396.95" y="3359.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getValueOnEdge(llvm:: (3 samples, 0.12%)</title><rect x="702.8" y="5813" width="1.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="705.79" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="247.5" y="965" width="2.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="250.50" y="975.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="256.0" y="3045" width="1.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="258.95" y="3055.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (3 samples, 0.12%)</title><rect x="295.4" y="3813" width="1.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="298.38" y="3823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="427.3" y="1077" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="430.27" y="1087.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1605" width="5.6" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="236.89" y="1615.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (16 samples, 0.64%)</title><rect x="260.6" y="149" width="7.6" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="263.64" y="159.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="662.0" y="5605" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="664.96" y="5615.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="387.4" y="3765" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="390.37" y="3775.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="49.9" y="4805" width="0.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="52.90" y="4815.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="80.9" y="4965" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="83.88" y="4975.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="49.9" y="4469" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="52.90" y="4479.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.04%)</title><rect x="576.1" y="5749" width="0.4" height="15.0" fill="rgb(226,87,87)" rx="2" ry="2" />
<text  x="579.06" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="285.5" y="517" width="1.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="288.52" y="527.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="127.8" y="5685" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="130.81" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="417.4" y="2117" width="3.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="420.41" y="2127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="417.9" y="373" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="420.88" y="383.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="37.7" y="4725" width="5.2" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="40.69" y="4735.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="424.9" y="2629" width="1.0" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="427.92" y="2639.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.04%)</title><rect x="862.4" y="5733" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="865.38" y="5743.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ENCLOSE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (2 samples, 0.08%)</title><rect x="390.7" y="2917" width="0.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="393.66" y="2927.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="254.1" y="3125" width="1.4" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="257.07" y="3135.5" ></text>
</g>
<g >
<title>`llvm::GVN::processNonLocalLoad(llvm::LoadInst*) (18 samples, 0.72%)</title><rect x="815.4" y="5813" width="8.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="818.44" y="5823.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (6 samples, 0.24%)</title><rect x="861.9" y="5797" width="2.8" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="864.91" y="5807.5" ></text>
</g>
<g >
<title>`llvm::BitstreamWriter::EmitVBR(unsigned int, unsigned int) (1 samples, 0.04%)</title><rect x="959.1" y="5861" width="0.4" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="962.07" y="5871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1029" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="430.74" y="1039.5" ></text>
</g>
<g >
<title>`llvm::JumpThreadingPass::FindLoopHeaders(llvm::Function&amp;) (1 samples, 0.04%)</title><rect x="700.4" y="5861" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="703.45" y="5871.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="432.0" y="1893" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="434.96" y="1903.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerABIAlignment(unsigned int) const (1 samples, 0.04%)</title><rect x="826.7" y="5637" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="829.71" y="5647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="2213" width="1.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="168.83" y="2223.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.6" y="2181" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="424.64" y="2191.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (5 samples, 0.20%)</title><rect x="180.4" y="485" width="2.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="183.38" y="495.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="314.6" y="5029" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="317.62" y="5039.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="428.7" y="2053" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="431.68" y="2063.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (60 samples, 2.39%)</title><rect x="202.9" y="1285" width="28.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="205.91" y="1295.5" >`..</text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedBits(llvm::Instruction*, un (1 samples, 0.04%)</title><rect x="762.4" y="5813" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="765.40" y="5823.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (34 samples, 1.35%)</title><rect x="256.0" y="3109" width="15.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="258.95" y="3119.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="396.3" y="4677" width="3.7" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="399.29" y="4687.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="257.4" y="1605" width="0.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="260.36" y="1615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="123.6" y="2053" width="0.9" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="126.59" y="2063.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'BLOCK) T T T))^MET (108 samples, 4.30%)</title><rect x="180.4" y="1813" width="50.7" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="183.38" y="1823.5" >`CONV..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.52%)</title><rect x="388.3" y="4405" width="6.1" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="391.31" y="4415.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="78.1" y="4933" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="81.06" y="4943.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.08%)</title><rect x="74.3" y="4965" width="0.9" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="77.30" y="4975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3493" width="1.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="411.03" y="3503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="366.7" y="5701" width="1.0" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="369.72" y="5711.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (1 samples, 0.04%)</title><rect x="42.4" y="4613" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="45.39" y="4623.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="434.8" y="5461" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="437.78" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (35 samples, 1.39%)</title><rect x="417.4" y="4565" width="16.4" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="420.41" y="4575.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.04%)</title><rect x="32.5" y="5253" width="0.5" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="35.53" y="5263.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="124.5" y="1925" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="127.53" y="1935.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="23.6" y="3989" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="26.61" y="3999.5" ></text>
</g>
<g >
<title>`ENTRIES-FROM-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMET (2 samples, 0.08%)</title><rect x="132.0" y="4565" width="1.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="135.04" y="4575.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::apint_match::match&lt;llvm::Value const&gt;( (1 samples, 0.04%)</title><rect x="908.8" y="5733" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="911.85" y="5743.5" ></text>
</g>
<g >
<title>`llvm::BitcodeWriter::writeModule(llvm::Module const*, bool, llv (12 samples, 0.48%)</title><rect x="954.4" y="5925" width="5.6" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="957.38" y="5935.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (32 samples, 1.27%)</title><rect x="112.3" y="3909" width="15.0" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="115.32" y="3919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="268.6" y="1205" width="3.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="271.62" y="1215.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="401.0" y="3413" width="0.9" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="403.99" y="3423.5" ></text>
</g>
<g >
<title>`cc_error_type_error (1 samples, 0.04%)</title><rect x="98.7" y="3861" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="101.71" y="3871.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (17 samples, 0.68%)</title><rect x="242.8" y="2837" width="8.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="245.81" y="2847.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (2 samples, 0.08%)</title><rect x="123.6" y="1589" width="0.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="126.59" y="1599.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="393.5" y="4149" width="0.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="396.48" y="4159.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="19.9" y="3621" width="0.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="22.86" y="3631.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="391.6" y="2341" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="394.60" y="2351.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="34.4" y="4885" width="0.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="37.41" y="4895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="3093" width="1.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="434.50" y="3103.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="1989" width="4.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="279.60" y="1999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1509" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="427.92" y="1519.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="180.4" y="533" width="2.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="183.38" y="543.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="1861" width="4.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="279.60" y="1871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="100.6" y="3733" width="0.5" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="103.59" y="3743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (47 samples, 1.87%)</title><rect x="180.4" y="661" width="22.0" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="183.38" y="671.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="122.6" y="3253" width="1.9" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="125.65" y="3263.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="165.4" y="3173" width="1.8" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="168.36" y="3183.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="332.9" y="4373" width="1.4" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="335.93" y="4383.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="421.6" y="2197" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="424.64" y="2207.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (20 samples, 0.80%)</title><rect x="622.1" y="5253" width="9.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="625.06" y="5263.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="138.1" y="4245" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="141.14" y="4255.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="1813" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="423.70" y="1823.5" ></text>
</g>
<g >
<title>`llvm::hash_value(llvm::GVN::Expression const&amp;) (1 samples, 0.04%)</title><rect x="823.9" y="5733" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="826.89" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="390.7" y="3141" width="1.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="393.66" y="3151.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (56 samples, 2.23%)</title><rect x="407.6" y="5477" width="26.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="410.56" y="5487.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="2261" width="1.0" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="432.62" y="2271.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="23.1" y="4053" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="26.14" y="4063.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="34.4" y="4373" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="37.41" y="4383.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (3 samples, 0.12%)</title><rect x="362.0" y="5733" width="1.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="365.03" y="5743.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.08%)</title><rect x="493.0" y="5797" width="0.9" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="495.98" y="5807.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="402.9" y="5029" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="405.86" y="5039.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (1 samples, 0.04%)</title><rect x="282.2" y="3061" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="285.24" y="3071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3973" width="3.8" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="420.41" y="3983.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="960.5" y="5813" width="0.4" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="963.48" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2453" width="1.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="427.92" y="2463.5" ></text>
</g>
<g >
<title>`core::clasp_namestring(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="24.6" y="4117" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="27.55" y="4127.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.04%)</title><rect x="828.1" y="5621" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="831.11" y="5631.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.04%)</title><rect x="553.1" y="5637" width="0.4" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="556.06" y="5647.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (2 samples, 0.08%)</title><rect x="240.5" y="2997" width="0.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="243.46" y="3007.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="454.0" y="5797" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="457.03" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="501" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="423.70" y="511.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="845.0" y="5781" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="848.01" y="5791.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'BLOCK) T T T))^MET (136 samples, 5.41%)</title><rect x="167.2" y="2885" width="63.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="170.24" y="2895.5" >`CONVER..</text>
</g>
<g >
<title>`llvm::ObjectSizeOffsetVisitor::compute(llvm::Value*) (1 samples, 0.04%)</title><rect x="919.2" y="5669" width="0.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="922.17" y="5679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="528.7" y="5781" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="531.66" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="295.4" y="2453" width="0.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="298.38" y="2463.5" ></text>
</g>
<g >
<title>`SPECIALIZE^CLEAVIR-HIR-TO-MIR^((FLOAT-SUB-INSTRUCTION CLASP T T (1 samples, 0.04%)</title><rect x="455.9" y="5829" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="458.90" y="5839.5" ></text>
</g>
<g >
<title>`BUILD-CST^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="296.3" y="3173" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="299.32" y="3183.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="281.3" y="3861" width="5.6" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="284.30" y="3871.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (2 samples, 0.08%)</title><rect x="279.9" y="597" width="0.9" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="282.89" y="607.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (19 samples, 0.76%)</title><rect x="259.2" y="709" width="9.0" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="262.24" y="719.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.16%)</title><rect x="390.2" y="3637" width="1.9" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="393.19" y="3647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="165.8" y="2117" width="1.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="168.83" y="2127.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (2 samples, 0.08%)</title><rect x="644.1" y="5365" width="1.0" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="647.12" y="5375.5" ></text>
</g>
<g >
<title>`IRC-RET^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="610.8" y="5413" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="613.80" y="5423.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-SIZE_T^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="640.4" y="5397" width="0.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="643.37" y="5407.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="387.8" y="4357" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="390.84" y="4367.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (231 samples, 9.19%)</title><rect x="164.0" y="4581" width="108.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="166.95" y="4591.5" >`PROCESS-PARA..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="427.3" y="3477" width="4.2" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="430.27" y="3487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2693" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="412.44" y="2703.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="161.6" y="4197" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="164.61" y="4207.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="277.1" y="693" width="1.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="280.07" y="703.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="280.8" y="3733" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="283.83" y="3743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="410.8" y="5093" width="5.7" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="413.84" y="5103.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="281.3" y="3285" width="1.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="284.30" y="3295.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.04%)</title><rect x="367.7" y="5749" width="0.4" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="370.66" y="5759.5" ></text>
</g>
<g >
<title>`llvm::df_iterator&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*, llv (1 samples, 0.04%)</title><rect x="790.1" y="5829" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="793.10" y="5839.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::keyTest(gctools::smart_ptr&lt;core::T_O&gt;, gc (1 samples, 0.04%)</title><rect x="64.4" y="4949" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="67.45" y="4959.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (KEY-PARAMETER-GROUP) (1 samples, 0.04%)</title><rect x="85.1" y="4933" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="88.10" y="4943.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="13.3" y="5525" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="16.29" y="5535.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="416.9" y="4821" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="419.95" y="4831.5" ></text>
</g>
<g >
<title>`ftello (1 samples, 0.04%)</title><rect x="44.3" y="5013" width="0.4" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="47.26" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="393.5" y="3973" width="0.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="396.48" y="3983.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="423.0" y="2917" width="1.5" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="426.05" y="2927.5" ></text>
</g>
<g >
<title>0x12254f0c9 (1 samples, 0.04%)</title><rect x="61.6" y="5013" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="64.63" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="428.7" y="1925" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="431.68" y="1935.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="2005" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="423.70" y="2015.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (32 samples, 1.27%)</title><rect x="187.4" y="149" width="15.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="190.42" y="159.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, unsig (1 samples, 0.04%)</title><rect x="822.5" y="5733" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="825.48" y="5743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="18.0" y="3861" width="3.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="20.98" y="3871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="421.6" y="3509" width="1.0" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="424.64" y="3519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="172.4" y="213" width="4.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="175.40" y="223.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="2325" width="50.7" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="183.38" y="2335.5" >`INTE..</text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="241.9" y="2805" width="0.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="244.87" y="2815.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="452.6" y="5413" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="455.62" y="5423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (57 samples, 2.27%)</title><rect x="204.3" y="1093" width="26.8" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="207.32" y="1103.5" >`..</text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((:AROUND) (T T CLASP))^METHOD (1 samples, 0.04%)</title><rect x="250.3" y="1301" width="0.5" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="253.32" y="1311.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (11 samples, 0.44%)</title><rect x="172.4" y="1061" width="5.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="175.40" y="1071.5" ></text>
</g>
<g >
<title>`simplifyICmpWithConstant(llvm::CmpInst::Predicate, llvm::Value* (1 samples, 0.04%)</title><rect x="830.5" y="5781" width="0.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="833.46" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="243.3" y="1957" width="7.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="246.28" y="1967.5" ></text>
</g>
<g >
<title>`llvm::TerminatorInst::getSuccessor(unsigned int) const (1 samples, 0.04%)</title><rect x="942.6" y="5893" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="945.64" y="5903.5" ></text>
</g>
<g >
<title>`READ-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="21.7" y="3925" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="24.73" y="3935.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="232.0" y="3285" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="235.01" y="3295.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="758.6" y="5653" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="761.65" y="5663.5" ></text>
</g>
<g >
<title>`IRC-BASIC-BLOCK-CREATE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="633.3" y="5365" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="636.33" y="5375.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (136 samples, 5.41%)</title><rect x="167.2" y="3221" width="63.9" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="170.24" y="3231.5" >`core::..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="1637" width="0.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="434.96" y="1647.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.04%)</title><rect x="898.1" y="5781" width="0.4" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="901.05" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="124.5" y="1717" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="127.53" y="1727.5" ></text>
</g>
<g >
<title>0x1225e5094 (16 samples, 0.64%)</title><rect x="243.3" y="1589" width="7.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="246.28" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="2357" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="428.86" y="2367.5" ></text>
</g>
<g >
<title>`llvm::LowerDbgDeclare(llvm::Function&amp;) (1 samples, 0.04%)</title><rect x="777.9" y="5861" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="780.89" y="5871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.7" y="1125" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="430.74" y="1135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2933" width="1.0" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="427.92" y="2943.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PointerIntPair&lt;llvm::Va (1 samples, 0.04%)</title><rect x="942.2" y="5877" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="945.17" y="5887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.3" y="1621" width="0.4" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="430.27" y="1631.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4293" width="1.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="39.28" y="4303.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="281.3" y="3205" width="1.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="284.30" y="3215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.2" y="4181" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="424.17" y="4191.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.04%)</title><rect x="567.6" y="5701" width="0.5" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="570.61" y="5711.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (319 samples, 12.69%)</title><rect x="688.7" y="5909" width="149.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="691.71" y="5919.5" >`llvm::FPPassManage..</text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="610.8" y="5349" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="613.80" y="5359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (84 samples, 3.34%)</title><rect x="87.9" y="4533" width="39.4" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="90.92" y="4543.5" >`co..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="167.7" y="1237" width="0.5" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="170.71" y="1247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (23 samples, 0.91%)</title><rect x="383.6" y="4901" width="10.8" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="386.62" y="4911.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="452.6" y="5669" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="455.62" y="5679.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="332.0" y="4549" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="334.99" y="4559.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (11 samples, 0.44%)</title><rect x="276.1" y="4453" width="5.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="279.13" y="4463.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (37 samples, 1.47%)</title><rect x="435.3" y="5477" width="17.3" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="438.25" y="5487.5" ></text>
</g>
<g >
<title>`llvm::GetElementPtrConstantExpr::getSourceElementType() const (1 samples, 0.04%)</title><rect x="898.5" y="5733" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="901.52" y="5743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="247.0" y="645" width="0.5" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="250.03" y="655.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (33 samples, 1.31%)</title><rect x="147.1" y="4357" width="15.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="150.06" y="4367.5" ></text>
</g>
<g >
<title>`wrapped_cl__get_internal_run_time_ (1 samples, 0.04%)</title><rect x="596.2" y="5845" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="599.25" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (35 samples, 1.39%)</title><rect x="417.4" y="4709" width="16.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="420.41" y="4719.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="417.4" y="4517" width="5.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="420.41" y="4527.5" ></text>
</g>
<g >
<title>`CHILDREN^CLEAVIR-AST^((FDEFINITION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="305.7" y="5797" width="0.5" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="308.70" y="5807.5" ></text>
</g>
<g >
<title>`core::cl__write_sequence(gctools::smart_ptr&lt;core::T_O&gt;, gctools (1 samples, 0.04%)</title><rect x="48.5" y="5445" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="51.49" y="5455.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="412.3" y="3813" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="415.25" y="3823.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="318.4" y="5397" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="321.38" y="5407.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="3909" width="1.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="39.28" y="3919.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (19 samples, 0.76%)</title><rect x="259.2" y="677" width="9.0" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="262.24" y="687.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="432.0" y="2325" width="0.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="434.96" y="2335.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (32 samples, 1.27%)</title><rect x="187.4" y="453" width="15.0" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="190.42" y="463.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="284.6" y="1125" width="2.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="287.58" y="1135.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.04%)</title><rect x="166.8" y="1413" width="0.4" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="169.77" y="1423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="431.5" y="3653" width="1.9" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="434.50" y="3663.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::MatchBSwap(llvm::BinaryOperator&amp;) (1 samples, 0.04%)</title><rect x="773.7" y="5829" width="0.4" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="776.67" y="5839.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="3109" width="4.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="285.70" y="3119.5" ></text>
</g>
<g >
<title>`translate::from_object&lt;llvm::ArrayRef&lt;llvm::Value*&gt;, std::__1:: (1 samples, 0.04%)</title><rect x="636.1" y="5269" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="639.14" y="5279.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.04%)</title><rect x="631.9" y="5237" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="634.92" y="5247.5" ></text>
</g>
<g >
<title>`llvm::FoldingSet&lt;llvm::AttributeImpl&gt;::NodeEquals(llvm::Folding (1 samples, 0.04%)</title><rect x="676.5" y="5637" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="679.51" y="5647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="416.5" y="4645" width="0.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="419.48" y="4655.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="232.0" y="2885" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="235.01" y="2895.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="56.5" y="5701" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="59.47" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="4101" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="417.13" y="4111.5" ></text>
</g>
<g >
<title>`0x10c6cbc93 (1 samples, 0.04%)</title><rect x="38.2" y="4165" width="0.4" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="41.16" y="4175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="432.0" y="2245" width="0.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="434.96" y="2255.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="293.5" y="5701" width="5.6" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="296.50" y="5711.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (136 samples, 5.41%)</title><rect x="167.2" y="3237" width="63.9" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="170.24" y="3247.5" >`CONVER..</text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="455.0" y="5765" width="0.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="457.96" y="5775.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="165.8" y="1173" width="1.0" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="168.83" y="1183.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (4 samples, 0.16%)</title><rect x="566.2" y="5781" width="1.9" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="569.21" y="5791.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="652.6" y="5445" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="655.57" y="5455.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::getStructValueState(llvm::Va (2 samples, 0.08%)</title><rect x="945.0" y="5861" width="0.9" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="947.99" y="5871.5" ></text>
</g>
<g >
<title>0x1225e5094 (7 samples, 0.28%)</title><rect x="268.6" y="1109" width="3.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="271.62" y="1119.5" ></text>
</g>
<g >
<title>`UNIVERSAL-ERROR-HANDLER^CORE^FN^^ (1 samples, 0.04%)</title><rect x="298.2" y="5317" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="301.19" y="5327.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.04%)</title><rect x="423.0" y="2021" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="426.05" y="2031.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="2069" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="423.70" y="2079.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="284.6" y="1429" width="2.3" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="287.58" y="1439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.7" y="869" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="430.74" y="879.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="430.6" y="1829" width="0.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="433.56" y="1839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="18.0" y="3749" width="3.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="20.98" y="3759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (22 samples, 0.88%)</title><rect x="384.1" y="4757" width="10.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="387.09" y="4767.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (336 samples, 13.37%)</title><rect x="129.7" y="5429" width="157.7" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="132.69" y="5439.5" >`core::FuncallableIn..</text>
</g>
<g >
<title>`wrapped_cl__error_T_spList_sp (1 samples, 0.04%)</title><rect x="125.0" y="1797" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="128.00" y="1807.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="4757" width="0.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="408.68" y="4767.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="419.3" y="741" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="422.29" y="751.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (5 samples, 0.20%)</title><rect x="178.0" y="2453" width="2.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="181.04" y="2463.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.04%)</title><rect x="401.5" y="2565" width="0.4" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="404.46" y="2575.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (57 samples, 2.27%)</title><rect x="204.3" y="821" width="26.8" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="207.32" y="831.5" >`..</text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="278.9" y="533" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="281.95" y="543.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (9 samples, 0.36%)</title><rect x="423.0" y="3797" width="4.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="426.05" y="3807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (136 samples, 5.41%)</title><rect x="167.2" y="2677" width="63.9" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="170.24" y="2687.5" >`core::..</text>
</g>
<g >
<title>0x11a477094 (17 samples, 0.68%)</title><rect x="232.5" y="3269" width="8.0" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="235.48" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="401.0" y="3461" width="0.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="403.99" y="3471.5" ></text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="452.6" y="5285" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="455.62" y="5295.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="282.7" y="1605" width="1.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="285.70" y="1615.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="52.2" y="4261" width="2.9" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="55.24" y="4271.5" ></text>
</g>
<g >
<title>`llvmo::Pass_O::externalObject() const (1 samples, 0.04%)</title><rect x="399.6" y="4053" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="402.58" y="4063.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="412.3" y="4149" width="0.4" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="415.25" y="4159.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="702.8" y="5701" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="705.79" y="5711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="341.8" y="4565" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="344.85" y="4575.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="1445" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="428.86" y="1455.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="2021" width="7.5" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="246.28" y="2031.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="44.7" y="5397" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="47.73" y="5407.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="348.9" y="5269" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="351.89" y="5279.5" ></text>
</g>
<g >
<title>`CHAR-INVALID-P^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="43.3" y="4965" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="46.33" y="4975.5" ></text>
</g>
<g >
<title>`llvm::APInt::clearUnusedBits() (1 samples, 0.04%)</title><rect x="812.2" y="5589" width="0.4" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="815.16" y="5599.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.08%)</title><rect x="253.1" y="3189" width="1.0" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="256.13" y="3199.5" ></text>
</g>
<g >
<title>`core::MultipleValues::valueGet(int, int) const (1 samples, 0.04%)</title><rect x="277.5" y="549" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="280.54" y="559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="165.4" y="4117" width="1.8" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="168.36" y="4127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.5" y="4597" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="418.54" y="4607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="293.5" y="5349" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="296.50" y="5359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (58 samples, 2.31%)</title><rect x="100.1" y="4021" width="27.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="103.12" y="4031.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="180.4" y="197" width="2.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="183.38" y="207.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="254.1" y="3349" width="1.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="257.07" y="3359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="172.4" y="1317" width="5.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="175.40" y="1327.5" ></text>
</g>
<g >
<title>0x11a477094 (12 samples, 0.48%)</title><rect x="233.9" y="965" width="5.6" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="236.89" y="975.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="2517" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="414.78" y="2527.5" ></text>
</g>
<g >
<title>`llvm::MergeBlockIntoPredecessor(llvm::BasicBlock*, llvm::Domina (1 samples, 0.04%)</title><rect x="935.6" y="5829" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="938.60" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="427.3" y="3413" width="4.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="430.27" y="3423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="390.7" y="3301" width="1.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="393.66" y="3311.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="432.9" y="3205" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="435.90" y="3215.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (10 samples, 0.40%)</title><rect x="276.6" y="4133" width="4.7" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="279.60" y="4143.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::pointsToConstantMemory(llvm::MemoryLocatio (1 samples, 0.04%)</title><rect x="789.6" y="5765" width="0.5" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="792.63" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="396.8" y="3957" width="0.9" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="399.76" y="3967.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::computeBackedgeTakenCount(llvm::Loop con (1 samples, 0.04%)</title><rect x="846.4" y="5733" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="849.42" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="409.9" y="3013" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="412.90" y="3023.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="281.3" y="3221" width="1.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="284.30" y="3231.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::Valu (1 samples, 0.04%)</title><rect x="841.7" y="5813" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="844.73" y="5823.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.04%)</title><rect x="187.0" y="197" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="189.95" y="207.5" ></text>
</g>
<g >
<title>0x1225f1094 (12 samples, 0.48%)</title><rect x="281.3" y="4757" width="5.6" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="284.30" y="4767.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (41 samples, 1.63%)</title><rect x="325.4" y="5029" width="19.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="328.42" y="5039.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="294.0" y="4997" width="2.8" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="296.97" y="5007.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (3 samples, 0.12%)</title><rect x="677.9" y="5941" width="1.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="680.92" y="5951.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="36.8" y="3237" width="0.4" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="39.75" y="3247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="1685" width="7.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="246.28" y="1695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1861" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="427.92" y="1871.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.04%)</title><rect x="828.1" y="5637" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="831.11" y="5647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="242.8" y="2069" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="245.81" y="2079.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.3" y="4245" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="414.31" y="4255.5" ></text>
</g>
<g >
<title>`llvm::SimplifySelectInst(llvm::Value*, llvm::Value*, llvm::Valu (1 samples, 0.04%)</title><rect x="846.0" y="5845" width="0.4" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="848.95" y="5855.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="314.2" y="5237" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="317.15" y="5247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.4" y="2885" width="0.5" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="412.44" y="2895.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="286.9" y="4549" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="289.93" y="4559.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="294.0" y="5205" width="2.8" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="296.97" y="5215.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="452.6" y="5573" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="455.62" y="5583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="251.3" y="3189" width="0.9" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="254.26" y="3199.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="92.1" y="2885" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="95.14" y="2895.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (3 samples, 0.12%)</title><rect x="241.4" y="2949" width="1.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="244.40" y="2959.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="121.7" y="3477" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="124.71" y="3487.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="165.4" y="4005" width="1.8" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="168.36" y="4015.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="23.6" y="3877" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="26.61" y="3887.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (3 samples, 0.12%)</title><rect x="285.5" y="693" width="1.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="288.52" y="703.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (14 samples, 0.56%)</title><rect x="36.3" y="4853" width="6.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="39.28" y="4863.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="409.4" y="2261" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="412.44" y="2271.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.04%)</title><rect x="112.8" y="3589" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="115.79" y="3599.5" ></text>
</g>
<g >
<title>`ERROR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="332.0" y="4485" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="334.99" y="4495.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="35.8" y="4981" width="7.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="38.82" y="4991.5" ></text>
</g>
<g >
<title>`core::type_of_decide_class(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.08%)</title><rect x="277.5" y="597" width="1.0" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="280.54" y="607.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="123.1" y="2389" width="1.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="126.12" y="2399.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="2261" width="5.6" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="236.89" y="2271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.0" y="2405" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="434.96" y="2415.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="407.6" y="5237" width="3.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="410.56" y="5247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="388.3" y="4101" width="3.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="391.31" y="4111.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="282.7" y="1397" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="285.70" y="1407.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="413.7" y="4421" width="1.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="416.66" y="4431.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (23 samples, 0.91%)</title><rect x="16.6" y="4805" width="10.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="19.57" y="4815.5" ></text>
</g>
<g >
<title>`STD-CLASS-ACCESSORS.WRITER.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="523.5" y="5733" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="526.49" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="276.1" y="4965" width="10.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="279.13" y="4975.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="557.3" y="5813" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="560.29" y="5823.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="508.5" y="5717" width="0.4" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="511.47" y="5727.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (6 samples, 0.24%)</title><rect x="294.0" y="5109" width="2.8" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="296.97" y="5119.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (31 samples, 1.23%)</title><rect x="257.4" y="3029" width="14.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="260.36" y="3039.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="2949" width="4.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="279.60" y="2959.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (63 samples, 2.51%)</title><rect x="133.9" y="4549" width="29.6" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="136.91" y="4559.5" >`P..</text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="677" width="0.4" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="171.18" y="687.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="400.5" y="3941" width="1.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="403.52" y="3951.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (1 samples, 0.04%)</title><rect x="842.7" y="5813" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="845.67" y="5823.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (3 samples, 0.12%)</title><rect x="202.9" y="1173" width="1.4" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="205.91" y="1183.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="3429" width="1.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="411.03" y="3439.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="427.3" y="3397" width="4.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="430.27" y="3407.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="1141" width="5.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="175.40" y="1151.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="239.5" y="2965" width="1.0" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="242.52" y="2975.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (511 samples, 20.33%)</title><rect x="59.8" y="5765" width="239.8" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="62.75" y="5775.5" >`core::FuncallableInstance_O::f..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="3125" width="0.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="428.86" y="3135.5" ></text>
</g>
<g >
<title>`void llvm::SmallVectorImpl&lt;llvm::Value*&gt;::append&lt;llvm::Use*, vo (1 samples, 0.04%)</title><rect x="745.5" y="5829" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="748.51" y="5839.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (3 samples, 0.12%)</title><rect x="61.2" y="5077" width="1.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="64.16" y="5087.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="397.7" y="4085" width="1.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="400.70" y="4095.5" ></text>
</g>
<g >
<title>`EXPAND^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="122.6" y="2565" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="125.65" y="2575.5" ></text>
</g>
<g >
<title>`CHAR-INVALID-P^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="31.6" y="5189" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="34.59" y="5199.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="295.8" y="2261" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="298.85" y="2271.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="125.0" y="1909" width="0.9" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="128.00" y="1919.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="235.3" y="101" width="0.9" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="238.30" y="111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="398.2" y="2981" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="401.17" y="2991.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="337.2" y="4341" width="0.4" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="340.15" y="4351.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (48 samples, 1.91%)</title><rect x="180.4" y="837" width="22.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="183.38" y="847.5" >`..</text>
</g>
<g >
<title>0x11a477094 (4 samples, 0.16%)</title><rect x="252.2" y="3413" width="1.9" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="255.20" y="3423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="247.0" y="485" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="250.03" y="495.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::BasicBlock&gt;, llvm::S (2 samples, 0.08%)</title><rect x="704.2" y="5845" width="0.9" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="707.20" y="5855.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="813.1" y="5589" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="816.09" y="5599.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (31 samples, 1.23%)</title><rect x="257.4" y="2981" width="14.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="260.36" y="2991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="413.7" y="3749" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="416.66" y="3759.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="889.1" y="5653" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="892.13" y="5663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="418.8" y="949" width="1.0" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="421.82" y="959.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::APInt_O&gt; gctools::GCObjectAppropriate (1 samples, 0.04%)</title><rect x="665.7" y="5557" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="668.71" y="5567.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.04%)</title><rect x="311.8" y="5605" width="0.5" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="314.81" y="5615.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.04%)</title><rect x="679.3" y="5941" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="682.32" y="5951.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.04%)</title><rect x="14.2" y="5493" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="17.22" y="5503.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (57 samples, 2.27%)</title><rect x="204.3" y="997" width="26.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="207.32" y="1007.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="409.4" y="3637" width="1.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="412.44" y="3647.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="534.3" y="5717" width="0.5" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="537.29" y="5727.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="648.8" y="5397" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="651.81" y="5407.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="434.8" y="5541" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="437.78" y="5551.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (42 samples, 1.67%)</title><rect x="182.7" y="581" width="19.7" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="185.73" y="591.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="165.8" y="2133" width="1.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="168.83" y="2143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3093" width="1.0" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="424.64" y="3103.5" ></text>
</g>
<g >
<title>`ThreadCmpOverPHI(llvm::CmpInst::Predicate, llvm::Value*, llvm:: (1 samples, 0.04%)</title><rect x="887.3" y="5749" width="0.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="890.26" y="5759.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInBoundsGEP(llvm::Value*, gctools::sm (1 samples, 0.04%)</title><rect x="628.2" y="5093" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="631.16" y="5103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3285" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="414.78" y="3295.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (145 samples, 5.77%)</title><rect x="59.8" y="5509" width="68.0" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="62.75" y="5519.5" >`CONVER..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.9" y="4805" width="0.5" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="419.95" y="4815.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LegacyLICMPass::runOnLoop(llvm::Loop*, l (1 samples, 0.04%)</title><rect x="919.2" y="5877" width="0.4" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="922.17" y="5887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (48 samples, 1.91%)</title><rect x="180.4" y="1269" width="22.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="183.38" y="1279.5" >`..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (22 samples, 0.88%)</title><rect x="167.7" y="2005" width="10.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="170.71" y="2015.5" ></text>
</g>
<g >
<title>`void llvm::BitstreamWriter::EmitRecord&lt;llvm::SmallVectorImpl&lt;un (1 samples, 0.04%)</title><rect x="959.1" y="5877" width="0.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="962.07" y="5887.5" ></text>
</g>
<g >
<title>`core::clasp_namestring(gctools::smart_ptr&lt;core::T_O&gt;, int) (2 samples, 0.08%)</title><rect x="18.9" y="3445" width="1.0" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="21.92" y="3455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.7" y="1205" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="430.74" y="1215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4869" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="419.48" y="4879.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (33 samples, 1.31%)</title><rect x="15.6" y="5237" width="15.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="18.63" y="5247.5" ></text>
</g>
<g >
<title>`llvm::CmpInst::makeCmpResultType(llvm::Type*) (1 samples, 0.04%)</title><rect x="830.9" y="5797" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="833.93" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="417.9" y="245" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="420.88" y="255.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="421.6" y="3413" width="1.0" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="424.64" y="3423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="429.1" y="2309" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="432.15" y="2319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="423.0" y="2693" width="1.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="426.05" y="2703.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="2037" width="1.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="168.83" y="2047.5" ></text>
</g>
<g >
<title>`llvm::APInt::sdiv(llvm::APInt const&amp;) const (1 samples, 0.04%)</title><rect x="905.1" y="5637" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="908.09" y="5647.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="240.5" y="3317" width="10.3" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="243.46" y="3327.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="407.6" y="5157" width="3.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="410.56" y="5167.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="351.7" y="5477" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="354.70" y="5487.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatt (1 samples, 0.04%)</title><rect x="703.3" y="5749" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="706.26" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="410.8" y="4661" width="1.9" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="413.84" y="4671.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="408.5" y="2789" width="0.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="411.50" y="2799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (42 samples, 1.67%)</title><rect x="383.6" y="5093" width="19.7" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="386.62" y="5103.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="424.9" y="2037" width="1.0" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="427.92" y="2047.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3189" width="1.0" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="424.64" y="3199.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (1 samples, 0.04%)</title><rect x="843.1" y="5669" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="846.13" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="279.9" y="165" width="0.9" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="282.89" y="175.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (58 samples, 2.31%)</title><rect x="100.1" y="4261" width="27.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="103.12" y="4271.5" >`..</text>
</g>
<g >
<title>`OPTIMIZED-EARLEY-ITEM-CONSTRUCTOR^KEYWORD^FN^^ (2 samples, 0.08%)</title><rect x="67.7" y="5013" width="1.0" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="70.73" y="5023.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (10 samples, 0.40%)</title><rect x="172.4" y="245" width="4.7" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="175.40" y="255.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.08%)</title><rect x="513.6" y="5733" width="1.0" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="516.64" y="5743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="105.8" y="3365" width="0.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="108.75" y="3375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="390.7" y="3253" width="1.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="393.66" y="3263.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="421.6" y="4101" width="1.0" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="424.64" y="4111.5" ></text>
</g>
<g >
<title>`FILTER-INSTRUCTIONS^CLEAVIR-IR^FN^^ (10 samples, 0.40%)</title><rect x="524.0" y="5797" width="4.7" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="526.96" y="5807.5" ></text>
</g>
<g >
<title>`GC_mark_local (1 samples, 0.04%)</title><rect x="505.7" y="5509" width="0.4" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="508.66" y="5519.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="401.9" y="4229" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="404.93" y="4239.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="295.8" y="2053" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="298.85" y="2063.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (9 samples, 0.36%)</title><rect x="327.3" y="4549" width="4.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="330.30" y="4559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="413.7" y="4101" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="416.66" y="4111.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::APInt_O&gt; gctools::GCObjectAppropriate (1 samples, 0.04%)</title><rect x="672.3" y="5749" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="675.28" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="400.0" y="4773" width="2.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="403.05" y="4783.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="244.7" y="549" width="2.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="247.69" y="559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1253" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="423.70" y="1263.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="329.2" y="4341" width="0.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="332.17" y="4351.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (136 samples, 5.41%)</title><rect x="167.2" y="3637" width="63.9" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="170.24" y="3647.5" >`core::..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="260.6" y="437" width="7.6" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="263.64" y="447.5" ></text>
</g>
<g >
<title>`llvmo::Module_O::__class() const (1 samples, 0.04%)</title><rect x="350.3" y="5301" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="353.29" y="5311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (32 samples, 1.27%)</title><rect x="187.4" y="437" width="15.0" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="190.42" y="447.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (60 samples, 2.39%)</title><rect x="407.1" y="5685" width="28.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="410.09" y="5695.5" >`..</text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (151 samples, 6.01%)</title><rect x="598.6" y="5749" width="70.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="601.59" y="5759.5" >`LAYOUT-..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="405.2" y="5381" width="0.9" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="408.21" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="247.0" y="373" width="0.5" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="250.03" y="383.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="559.2" y="5749" width="0.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="562.16" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.4" y="2405" width="0.5" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="435.43" y="2415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1669" width="0.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="430.27" y="1679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="396.8" y="3845" width="0.4" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="399.76" y="3855.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="324.0" y="4869" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="327.01" y="4879.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="281.3" y="4453" width="5.6" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="284.30" y="4463.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp_big(void const*) (1 samples, 0.04%)</title><rect x="960.9" y="5877" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="963.95" y="5887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="294.9" y="3909" width="1.9" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="297.91" y="3919.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="3781" width="1.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="411.03" y="3791.5" ></text>
</g>
<g >
<title>`core::core__get_sysprop(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.04%)</title><rect x="258.3" y="1541" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="261.30" y="1551.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="338.6" y="4421" width="0.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="341.56" y="4431.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.04%)</title><rect x="17.0" y="4325" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="20.04" y="4335.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="100.6" y="3605" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="103.59" y="3615.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="388.8" y="3765" width="0.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="391.78" y="3775.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::AssertingVH&lt;llvm::Value&gt;, unsi (1 samples, 0.04%)</title><rect x="705.6" y="5829" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="708.61" y="5839.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="329.6" y="4453" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="332.64" y="4463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="99.2" y="3733" width="0.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="102.18" y="3743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="532.9" y="5797" width="0.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="535.88" y="5807.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (8 samples, 0.32%)</title><rect x="751.1" y="5749" width="3.8" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="754.14" y="5759.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.04%)</title><rect x="472.3" y="5589" width="0.5" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="475.33" y="5599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="295.4" y="2821" width="0.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="298.38" y="2831.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (40 samples, 1.59%)</title><rect x="232.0" y="3589" width="18.8" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="235.01" y="3599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="1045" width="9.0" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="262.24" y="1055.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (55 samples, 2.19%)</title><rect x="378.9" y="5749" width="25.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="381.93" y="5759.5" >`..</text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T SEQUENCE T))^METHOD^^ (2 samples, 0.08%)</title><rect x="47.5" y="5461" width="1.0" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="50.55" y="5471.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="837" width="26.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="207.32" y="847.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (21 samples, 0.84%)</title><rect x="16.6" y="4613" width="9.8" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="19.57" y="4623.5" ></text>
</g>
<g >
<title>`llvm::Instruction::mayReadFromMemory() const (1 samples, 0.04%)</title><rect x="687.3" y="5893" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="690.30" y="5903.5" ></text>
</g>
<g >
<title>`llvmo::Module_O::moduleDelete() (5 samples, 0.20%)</title><rect x="949.2" y="5941" width="2.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="952.21" y="5951.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (24 samples, 0.95%)</title><rect x="276.1" y="5237" width="11.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="279.13" y="5247.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (1 samples, 0.04%)</title><rect x="513.6" y="5653" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="516.64" y="5663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.4" y="2901" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="412.44" y="2911.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="645.1" y="5301" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="648.06" y="5311.5" ></text>
</g>
<g >
<title>0x1225e5094 (1 samples, 0.04%)</title><rect x="240.0" y="2869" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="242.99" y="2879.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="36.8" y="3637" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="39.75" y="3647.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (1 samples, 0.04%)</title><rect x="256.9" y="2773" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="259.89" y="2783.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4773" width="2.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="55.24" y="4783.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="430.6" y="2245" width="0.9" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="433.56" y="2255.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp; (325 samples, 12.93%)</title><rect x="686.4" y="5925" width="152.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="689.36" y="5935.5" >`(anonymous namespa..</text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="828.6" y="5557" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="831.58" y="5567.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.08%)</title><rect x="538.5" y="5797" width="1.0" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="541.51" y="5807.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.04%)</title><rect x="831.4" y="5701" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="834.40" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="430.6" y="2213" width="0.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="433.56" y="2223.5" ></text>
</g>
<g >
<title>`LOAD-RETURN-VALUE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="611.3" y="5413" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="614.26" y="5423.5" ></text>
</g>
<g >
<title>`IRC-CREATE-CALL^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="646.5" y="5381" width="0.9" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="649.47" y="5391.5" ></text>
</g>
<g >
<title>`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="337.6" y="4517" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="340.62" y="4527.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="419.3" y="709" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="422.29" y="719.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (41 samples, 1.63%)</title><rect x="325.4" y="4933" width="19.3" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="328.42" y="4943.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="384.1" y="4725" width="10.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="387.09" y="4735.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (17 samples, 0.68%)</title><rect x="242.8" y="2437" width="8.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="245.81" y="2447.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="508.5" y="5701" width="0.4" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="511.47" y="5711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="425.9" y="2709" width="0.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="428.86" y="2719.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="251.3" y="3605" width="0.9" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="254.26" y="3615.5" ></text>
</g>
<g >
<title>`MAKE-CONDITION^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="125.9" y="1925" width="0.5" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="128.93" y="1935.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="279.4" y="1093" width="1.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="282.42" y="1103.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::reference_raw_(core::Symbol_O*, gcto (1 samples, 0.04%)</title><rect x="240.0" y="2485" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="242.99" y="2495.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (304 samples, 12.09%)</title><rect x="130.6" y="4789" width="142.7" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="133.63" y="4799.5" >`core::clos__inter..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="405.7" y="4901" width="0.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="408.68" y="4911.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.08%)</title><rect x="313.2" y="5541" width="1.0" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="316.21" y="5551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="243.3" y="821" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="246.28" y="831.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.04%)</title><rect x="314.2" y="5173" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="317.15" y="5183.5" ></text>
</g>
<g >
<title>`COMPLETER-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (2 samples, 0.08%)</title><rect x="281.3" y="3093" width="0.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="284.30" y="3103.5" ></text>
</g>
<g >
<title>`llvm::generic_gep_type_iterator&lt;llvm::Use const*&gt;::operator+ (1 samples, 0.04%)</title><rect x="807.9" y="5653" width="0.5" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="810.93" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1429" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="428.86" y="1439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="422.1" y="2085" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="425.11" y="2095.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (108 samples, 4.30%)</title><rect x="180.4" y="1541" width="50.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="183.38" y="1551.5" >`CONV..</text>
</g>
<g >
<title>`PROCESS-LTV^CLASP-CLEAVIR-AST^FN^^ (41 samples, 1.63%)</title><rect x="325.4" y="5045" width="19.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="328.42" y="5055.5" ></text>
</g>
<g >
<title>`COMPLETER-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (1 samples, 0.04%)</title><rect x="165.4" y="2517" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="168.36" y="2527.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (70 samples, 2.78%)</title><rect x="318.8" y="5557" width="32.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="321.85" y="5567.5" >`R..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="165.8" y="2421" width="1.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="168.83" y="2431.5" ></text>
</g>
<g >
<title>0x11a477094 (10 samples, 0.40%)</title><rect x="276.6" y="3941" width="4.7" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="279.60" y="3951.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="43.8" y="5045" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="46.79" y="5055.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="341.8" y="4709" width="1.5" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="344.85" y="4719.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2533" width="4.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="279.60" y="2543.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="172.4" y="117" width="4.7" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="175.40" y="127.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="250.8" y="4101" width="1.4" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="253.79" y="4111.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="259.2" y="373" width="1.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="262.24" y="383.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="268.6" y="1477" width="3.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="271.62" y="1487.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (9 samples, 0.36%)</title><rect x="395.8" y="4885" width="4.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="398.82" y="4895.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (2 samples, 0.08%)</title><rect x="253.1" y="3173" width="1.0" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="256.13" y="3183.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="247.0" y="581" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="250.03" y="591.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="425.9" y="2965" width="0.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="428.86" y="2975.5" ></text>
</g>
<g >
<title>`CONS-TABLE^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="230.6" y="229" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="233.60" y="239.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="403.3" y="5093" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="406.33" y="5103.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="36.3" y="3989" width="1.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="39.28" y="3999.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (2 samples, 0.08%)</title><rect x="279.9" y="533" width="0.9" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="282.89" y="543.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (4 samples, 0.16%)</title><rect x="825.3" y="5685" width="1.9" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="828.30" y="5695.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="823.4" y="5669" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="826.42" y="5679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.3" y="1653" width="0.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="430.27" y="1663.5" ></text>
</g>
<g >
<title>`IRC-CCLASP-FUNCTION-CREATE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="342.8" y="4677" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="345.78" y="4687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="2773" width="0.9" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="428.86" y="2783.5" ></text>
</g>
<g >
<title>`CONJOIN-TYPES^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.04%)</title><rect x="164.0" y="4277" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="166.95" y="4287.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (3 samples, 0.12%)</title><rect x="285.5" y="757" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="288.52" y="767.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (76 samples, 3.02%)</title><rect x="13.3" y="5589" width="35.7" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="16.29" y="5599.5" >`RE..</text>
</g>
<g >
<title>`unw_set_reg (1 samples, 0.04%)</title><rect x="13.8" y="5493" width="0.4" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="16.75" y="5503.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.04%)</title><rect x="460.6" y="5797" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="463.60" y="5807.5" ></text>
</g>
<g >
<title>`MAKE-RETURN-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="344.7" y="5029" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="347.66" y="5039.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="549" width="9.0" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="262.24" y="559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="2037" width="4.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="279.60" y="2047.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="123.6" y="981" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="126.59" y="991.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="124.5" y="2805" width="1.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="127.53" y="2815.5" ></text>
</g>
<g >
<title>0x1225ef094 (4 samples, 0.16%)</title><rect x="165.4" y="3157" width="1.8" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="168.36" y="3167.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="3157" width="3.8" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="420.41" y="3167.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="167.7" y="2245" width="10.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="170.71" y="2255.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (19 samples, 0.76%)</title><rect x="259.2" y="1413" width="9.0" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="262.24" y="1423.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="298.2" y="5205" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="301.19" y="5215.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="405.7" y="4165" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="408.68" y="4175.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="425.9" y="3269" width="0.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="428.86" y="3279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="1781" width="9.0" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="262.24" y="1791.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="3557" width="63.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="170.24" y="3567.5" >`SET-OR..</text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="123.6" y="933" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="126.59" y="943.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="167.7" y="1333" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="170.71" y="1343.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="391.6" y="2357" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="394.60" y="2367.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="3253" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="414.78" y="3263.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIndexedOffsetInType(llvm::Type*, llvm::Arr (1 samples, 0.04%)</title><rect x="734.7" y="5797" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="737.71" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3301" width="1.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="411.03" y="3311.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((RETURN-INSTRUCTION (2 samples, 0.08%)</title><rect x="610.8" y="5429" width="0.9" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="613.80" y="5439.5" ></text>
</g>
<g >
<title>`POSSIBLY-ADD-ITEM^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-STA (2 samples, 0.08%)</title><rect x="161.1" y="4293" width="1.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="164.14" y="4303.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="871.3" y="5685" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="874.30" y="5695.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="342.8" y="4469" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="345.78" y="4479.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="3141" width="4.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="285.70" y="3151.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="279.4" y="1013" width="1.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="282.42" y="1023.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="35.8" y="4933" width="7.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="38.82" y="4943.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="34.4" y="4773" width="0.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="37.41" y="4783.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="381.7" y="4645" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="384.74" y="4655.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (58 samples, 2.31%)</title><rect x="100.1" y="4165" width="27.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="103.12" y="4175.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.0" y="2709" width="0.4" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="411.97" y="2719.5" ></text>
</g>
<g >
<title>`UNIVERSAL-ERROR-HANDLER^CORE^FN^^ (1 samples, 0.04%)</title><rect x="324.5" y="4773" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="327.48" y="4783.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (10 samples, 0.40%)</title><rect x="388.3" y="4293" width="4.7" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="391.31" y="4303.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="391.6" y="2677" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="394.60" y="2687.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="269.1" y="357" width="2.8" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="272.09" y="367.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="20.3" y="3253" width="0.5" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="23.33" y="3263.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="381.7" y="4533" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="384.74" y="4543.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="123.6" y="2165" width="0.9" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="126.59" y="2175.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (511 samples, 20.33%)</title><rect x="59.8" y="5749" width="239.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="62.75" y="5759.5" >`INTERPRETED-DISCRIMINATING-FUN..</text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="52.2" y="4357" width="2.9" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="55.24" y="4367.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="252.2" y="3205" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="255.20" y="3215.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (305 samples, 12.13%)</title><rect x="130.2" y="5141" width="143.1" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="133.16" y="5151.5" >`core::Funcallable..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="268.6" y="1461" width="3.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="271.62" y="1471.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="431.5" y="2565" width="1.4" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="434.50" y="2575.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="626.8" y="5109" width="0.4" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="629.75" y="5119.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="1685" width="4.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="279.60" y="1695.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="5205" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="327.01" y="5215.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (1 samples, 0.04%)</title><rect x="245.6" y="469" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="248.62" y="479.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="381.7" y="4453" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="384.74" y="4463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3845" width="1.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="411.03" y="3855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (9 samples, 0.36%)</title><rect x="379.4" y="5173" width="4.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="382.40" y="5183.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="3669" width="3.8" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="420.41" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="4021" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="417.13" y="4031.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.04%)</title><rect x="428.2" y="2165" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="431.21" y="2175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3717" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="404.93" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3797" width="3.8" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="420.41" y="3807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="2149" width="0.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="411.97" y="2159.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="431.5" y="2805" width="1.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="434.50" y="2815.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.04%)</title><rect x="61.2" y="5013" width="0.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="64.16" y="5023.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::make(unsigned long, int, bool, gctools::smart_p (1 samples, 0.04%)</title><rect x="617.8" y="5269" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="620.84" y="5279.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENCLOSE-INSTRUCTIO (135 samples, 5.37%)</title><rect x="599.5" y="5653" width="63.4" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="602.53" y="5663.5" >`TRANS..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="2581" width="3.8" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="420.41" y="2591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="2229" width="0.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="434.96" y="2239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="397.7" y="3989" width="1.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="400.70" y="3999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="398.2" y="3477" width="0.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="401.17" y="3487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="251.3" y="3525" width="0.9" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="254.26" y="3535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="3189" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="412.90" y="3199.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="101.5" y="3541" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="104.53" y="3551.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="182.7" y="117" width="0.5" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="185.73" y="127.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.04%)</title><rect x="354.0" y="5157" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="357.05" y="5167.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="332.0" y="4709" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="334.99" y="4719.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="398.2" y="3669" width="1.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="401.17" y="3679.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4773" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="39.28" y="4783.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="294.0" y="4901" width="2.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="296.97" y="4911.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="427.3" y="2805" width="4.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="430.27" y="2815.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, void (llvmo::IRBuilderBase_O::*)(int,  (1 samples, 0.04%)</title><rect x="604.7" y="5429" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="607.69" y="5439.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (17 samples, 0.68%)</title><rect x="623.5" y="5237" width="7.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="626.47" y="5247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="145.6" y="4261" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="148.65" y="4271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="284.6" y="1589" width="2.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="287.58" y="1599.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="232.0" y="3141" width="0.5" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="235.01" y="3151.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="284.6" y="1397" width="2.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="287.58" y="1407.5" ></text>
</g>
<g >
<title>`CALLING-CONVENTION-ARGS.VA-START^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="631.4" y="5333" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="634.45" y="5343.5" ></text>
</g>
<g >
<title>`std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;::op (1 samples, 0.04%)</title><rect x="331.1" y="4341" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="334.05" y="4351.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="113.3" y="3509" width="0.4" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="116.26" y="3519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2917" width="4.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="279.60" y="2927.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="341" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="423.70" y="351.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="384.6" y="4277" width="3.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="387.56" y="4287.5" ></text>
</g>
<g >
<title>`llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock* (2 samples, 0.08%)</title><rect x="704.2" y="5861" width="0.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="707.20" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="3797" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="414.78" y="3807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (22 samples, 0.88%)</title><rect x="423.0" y="4053" width="10.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="426.05" y="4063.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="398.2" y="3717" width="1.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="401.17" y="3727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1733" width="5.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="236.89" y="1743.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="702.8" y="5685" width="0.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="705.79" y="5695.5" ></text>
</g>
<g >
<title>`core::cl__make_hash_table(gctools::smart_ptr&lt;core::T_O&gt;, gctool (1 samples, 0.04%)</title><rect x="330.1" y="4405" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="333.11" y="4415.5" ></text>
</g>
<g >
<title>`CONSP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="146.1" y="4357" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="149.12" y="4367.5" ></text>
</g>
<g >
<title>`llvm::SmallVector&lt;llvm::BasicBlock*, 64u&gt;::SmallVector(std::ini (1 samples, 0.04%)</title><rect x="855.3" y="5861" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="858.34" y="5871.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (2 samples, 0.08%)</title><rect x="376.1" y="5765" width="0.9" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="379.11" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="285.1" y="741" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="288.05" y="751.5" ></text>
</g>
<g >
<title>0x12254f0c9 (4 samples, 0.16%)</title><rect x="136.7" y="4341" width="1.9" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="139.73" y="4351.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="49.9" y="4869" width="1.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="52.90" y="4879.5" ></text>
</g>
<g >
<title>`CST-FROM-ELEMENT^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="323.1" y="5413" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="326.07" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="2677" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="411.97" y="2687.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT))^ (1 samples, 0.04%)</title><rect x="318.4" y="5285" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="321.38" y="5295.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="244.7" y="837" width="2.8" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="247.69" y="847.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="415.5" y="4741" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="418.54" y="4751.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (3 samples, 0.12%)</title><rect x="649.8" y="5397" width="1.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="652.75" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="381.7" y="4517" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="384.74" y="4527.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="298.2" y="5237" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="301.19" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (83 samples, 3.30%)</title><rect x="88.4" y="4373" width="38.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="91.39" y="4383.5" >`CO..</text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (3 samples, 0.12%)</title><rect x="856.3" y="5845" width="1.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="859.28" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.4" y="1701" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="428.39" y="1711.5" ></text>
</g>
<g >
<title>`CST-FROM-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.08%)</title><rect x="313.2" y="5573" width="1.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="316.21" y="5583.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="350.8" y="5173" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="353.76" y="5183.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="256.0" y="2997" width="1.4" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="258.95" y="3007.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="53.2" y="3861" width="0.9" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="56.18" y="3871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="47.1" y="5573" width="1.9" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="50.08" y="5583.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="336.2" y="4485" width="1.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="339.21" y="4495.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="49.9" y="5589" width="5.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="52.90" y="5599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="3925" width="3.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="420.41" y="3935.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.7" y="965" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="430.74" y="975.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="332.0" y="4629" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="334.99" y="4639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (3 samples, 0.12%)</title><rect x="408.0" y="4005" width="1.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="411.03" y="4015.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="294.9" y="3941" width="1.9" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="297.91" y="3951.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::erase_imp(void const*) (1 samples, 0.04%)</title><rect x="932.3" y="5861" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="935.32" y="5871.5" ></text>
</g>
<g >
<title>`ADD-CREATOR^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="673.7" y="5749" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="676.69" y="5759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="314.6" y="5093" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="317.62" y="5103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="115.1" y="3589" width="1.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="118.14" y="3599.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (10 samples, 0.40%)</title><rect x="182.7" y="357" width="4.7" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="185.73" y="367.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="2885" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="414.78" y="2895.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="247.0" y="229" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="250.03" y="239.5" ></text>
</g>
<g >
<title>`POSSIBLY-ADD-ITEM^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-STA (1 samples, 0.04%)</title><rect x="120.8" y="3541" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="123.77" y="3551.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="1973" width="0.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="126.59" y="1983.5" ></text>
</g>
<g >
<title>0x1225f1094 (22 samples, 0.88%)</title><rect x="240.5" y="3301" width="10.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="243.46" y="3311.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="351.7" y="5557" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="354.70" y="5567.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyAssociativeOrCommutative(llvm::Bina (1 samples, 0.04%)</title><rect x="739.9" y="5829" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="742.87" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="3237" width="4.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="285.70" y="3247.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="412.3" y="4021" width="0.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="415.25" y="4031.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3285" width="3.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="420.41" y="3295.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="3109" width="1.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="411.03" y="3119.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T GLOBAL-FUNCTION-INFO))^METHOD (1 samples, 0.04%)</title><rect x="166.3" y="549" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="169.30" y="559.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (2 samples, 0.08%)</title><rect x="67.7" y="4997" width="1.0" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="70.73" y="5007.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (6 samples, 0.24%)</title><rect x="88.9" y="3957" width="2.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="91.85" y="3967.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="285.5" y="213" width="1.4" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="288.52" y="223.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.04%)</title><rect x="372.8" y="5733" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="375.82" y="5743.5" ></text>
</g>
<g >
<title>0x11a477094 (4 samples, 0.16%)</title><rect x="165.4" y="2981" width="1.8" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="168.36" y="2991.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldGetElementPtr(llvm::Type*, llvm::Constant*, b (1 samples, 0.04%)</title><rect x="861.9" y="5781" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="864.91" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="379.4" y="5157" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="382.40" y="5167.5" ></text>
</g>
<g >
<title>`core::cl__error(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.04%)</title><rect x="324.5" y="4789" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="327.48" y="4799.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="243.3" y="997" width="4.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="246.28" y="1007.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="3733" width="1.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="424.64" y="3743.5" ></text>
</g>
<g >
<title>`core::cl__make_hash_table(gctools::smart_ptr&lt;core::T_O&gt;, gctool (1 samples, 0.04%)</title><rect x="372.8" y="5781" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="375.82" y="5791.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="853.5" y="5717" width="0.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="856.46" y="5727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (19 samples, 0.76%)</title><rect x="259.2" y="1733" width="9.0" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="262.24" y="1743.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (9 samples, 0.36%)</title><rect x="282.7" y="2789" width="4.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="285.70" y="2799.5" ></text>
</g>
<g >
<title>`%SIGNAL^CORE^FN^^ (1 samples, 0.04%)</title><rect x="94.0" y="3573" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="97.02" y="3583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="281.3" y="4309" width="5.6" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="284.30" y="4319.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="378.0" y="5781" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="380.99" y="5791.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="387.8" y="4229" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="390.84" y="4239.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="393.5" y="4165" width="0.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="396.48" y="4175.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="321.7" y="5205" width="0.9" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="324.66" y="5215.5" ></text>
</g>
<g >
<title>`%REST-OR-LOSE^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="276.1" y="3829" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="279.13" y="3839.5" ></text>
</g>
<g >
<title>`gctools::initializeBoehm(int (*)(int, char**, bool&amp;, int&amp;, int&amp; (2,028 samples, 80.67%)</title><rect x="10.0" y="6357" width="951.9" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="13.00" y="6367.5" >`gctools::initializeBoehm(int (*)(int, char**, bool&amp;, int&amp;, int&amp;</text>
</g>
<g >
<title>`llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::initializeRPOT( (1 samples, 0.04%)</title><rect x="851.1" y="5845" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="854.11" y="5855.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="125.9" y="2565" width="1.0" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="128.93" y="2575.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2789" width="14.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="260.36" y="2799.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="3269" width="1.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="411.03" y="3279.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="401.9" y="4133" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="404.93" y="4143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="423.0" y="2101" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="426.05" y="2111.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="37.7" y="4565" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="40.69" y="4575.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="38.2" y="4309" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="41.16" y="4319.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="88.4" y="3941" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="91.39" y="3951.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (137 samples, 5.45%)</title><rect x="167.2" y="3781" width="64.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="170.24" y="3791.5" >`INTERP..</text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (9 samples, 0.36%)</title><rect x="282.7" y="3253" width="4.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="285.70" y="3263.5" ></text>
</g>
<g >
<title>`TRANSMIT-DYNAMIC-LOCATION^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="568.6" y="5797" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="571.55" y="5807.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="316.0" y="5253" width="1.0" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="319.03" y="5263.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (31 samples, 1.23%)</title><rect x="257.4" y="3077" width="14.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="260.36" y="3087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="270.0" y="117" width="1.9" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="273.03" y="127.5" ></text>
</g>
<g >
<title>`core::enter_directory(gctools::smart_ptr&lt;core::Pathname_O&gt;, gct (1 samples, 0.04%)</title><rect x="952.5" y="5925" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="955.50" y="5935.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="145.2" y="4277" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="148.18" y="4287.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (7 samples, 0.28%)</title><rect x="314.2" y="5381" width="3.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="317.15" y="5391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="421.6" y="3589" width="1.0" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="424.64" y="3599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="386.0" y="3301" width="0.4" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="388.97" y="3311.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (9 samples, 0.36%)</title><rect x="276.6" y="2613" width="4.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="279.60" y="2623.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="269.1" y="53" width="0.9" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="272.09" y="63.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3445" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="414.78" y="3455.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.3" y="1141" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="430.27" y="1151.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="400.0" y="4453" width="2.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="403.05" y="4463.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.12%)</title><rect x="423.0" y="2613" width="1.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="426.05" y="2623.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="416.5" y="4901" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="419.48" y="4911.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (24 samples, 0.95%)</title><rect x="332.0" y="4805" width="11.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="334.99" y="4815.5" ></text>
</g>
<g >
<title>`llvm::decomposeBitTestICmp(llvm::Value*, llvm::Value*, llvm::Cm (1 samples, 0.04%)</title><rect x="832.3" y="5781" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="835.34" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="168.6" y="661" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="171.65" y="671.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (10 samples, 0.40%)</title><rect x="276.6" y="4053" width="4.7" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="279.60" y="4063.5" ></text>
</g>
<g >
<title>`llvm::PromoteMemToReg(llvm::ArrayRef&lt;llvm::AllocaInst*&gt;, llvm:: (1 samples, 0.04%)</title><rect x="931.4" y="5877" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="934.38" y="5887.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="620.2" y="5237" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="623.18" y="5247.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="412.3" y="3189" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="415.25" y="3199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="285.5" y="549" width="1.4" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="288.52" y="559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (54 samples, 2.15%)</title><rect x="379.4" y="5669" width="25.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="382.40" y="5679.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="4069" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="408.68" y="4079.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (4 samples, 0.16%)</title><rect x="552.1" y="5781" width="1.9" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="555.12" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="172.4" y="1381" width="5.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="175.40" y="1391.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="282.7" y="1317" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="285.70" y="1327.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (2 samples, 0.08%)</title><rect x="461.1" y="5781" width="0.9" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="464.07" y="5791.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="3077" width="63.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="170.24" y="3087.5" >`COMBIN..</text>
</g>
<g >
<title>`(anonymous namespace)::ReassociateLegacyPass::runOnFunction(llv (2 samples, 0.08%)</title><rect x="705.6" y="5893" width="0.9" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="708.61" y="5903.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="165.8" y="1077" width="1.0" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="168.83" y="1087.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignment(llvm::Type*, bool) const (1 samples, 0.04%)</title><rect x="737.5" y="5845" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="740.53" y="5855.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="123.6" y="2069" width="0.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="126.59" y="2079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="391.6" y="2309" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="394.60" y="2319.5" ></text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="11.4" y="5973" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="14.41" y="5983.5" ></text>
</g>
<g >
<title>`OPTIMIZED-RETURN-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="419.3" y="613" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="422.29" y="623.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="275.7" y="5141" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="278.66" y="5151.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="413.7" y="4405" width="1.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="416.66" y="4415.5" ></text>
</g>
<g >
<title>`llvm::simplifyUsersOfIV(llvm::PHINode*, llvm::ScalarEvolution*, (1 samples, 0.04%)</title><rect x="779.8" y="5845" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="782.77" y="5855.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (1 samples, 0.04%)</title><rect x="548.4" y="5781" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="551.37" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (36 samples, 1.43%)</title><rect x="416.9" y="4965" width="16.9" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="419.95" y="4975.5" ></text>
</g>
<g >
<title>`HIR-&gt;MIR^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="326.4" y="4693" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="329.36" y="4703.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="274.3" y="5045" width="0.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="277.26" y="5055.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.04%)</title><rect x="295.8" y="2069" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="298.85" y="2079.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="633.8" y="5253" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="636.79" y="5263.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="283.2" y="1285" width="1.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="286.17" y="1295.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="2037" width="0.4" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="428.86" y="2047.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="335.7" y="4485" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="338.74" y="4495.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (48 samples, 1.91%)</title><rect x="180.4" y="1157" width="22.5" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="183.38" y="1167.5" >`..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="235.3" y="357" width="4.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="238.30" y="367.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="413.7" y="3701" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="416.66" y="3711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (40 samples, 1.59%)</title><rect x="232.0" y="3861" width="18.8" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="235.01" y="3871.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="356.4" y="5669" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="359.40" y="5679.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="299.6" y="5813" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="302.60" y="5823.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.04%)</title><rect x="592.0" y="5701" width="0.5" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="595.02" y="5711.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="282.7" y="1365" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="285.70" y="1375.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (4 samples, 0.16%)</title><rect x="236.2" y="117" width="1.9" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="239.24" y="127.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (1 samples, 0.04%)</title><rect x="125.5" y="1701" width="0.4" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="128.47" y="1711.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (20 samples, 0.80%)</title><rect x="102.9" y="3669" width="9.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="105.94" y="3679.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((ORDINARY-REST-PARA (3 samples, 0.12%)</title><rect x="250.8" y="4181" width="1.4" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="253.79" y="4191.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="314.6" y="5109" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="317.62" y="5119.5" ></text>
</g>
<g >
<title>`szone_size (1 samples, 0.04%)</title><rect x="960.0" y="5877" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="963.01" y="5887.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="3685" width="1.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="412.44" y="3695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (182 samples, 7.24%)</title><rect x="165.4" y="4181" width="85.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="168.36" y="4191.5" >`core::clo..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="430.6" y="1765" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="433.56" y="1775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4341" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="408.68" y="4351.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3109" width="1.8" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="168.36" y="3119.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="49.9" y="4485" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="52.90" y="4495.5" ></text>
</g>
<g >
<title>`FUNCTION-NAME-FROM-SOURCE-INFO^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="677.0" y="5813" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="679.98" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="296.3" y="3077" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="299.32" y="3087.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="110.0" y="3541" width="1.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="112.98" y="3551.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (52 samples, 2.07%)</title><rect x="324.5" y="5237" width="24.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="327.48" y="5247.5" >`..</text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (3 samples, 0.12%)</title><rect x="431.5" y="2757" width="1.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="434.50" y="2767.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="1477" width="4.2" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="279.60" y="1487.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="415.5" y="4037" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="418.54" y="4047.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (97 samples, 3.86%)</title><rect x="407.1" y="5701" width="45.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="410.09" y="5711.5" >`COM..</text>
</g>
<g >
<title>`core::clasp_namestring(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="53.2" y="3781" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="56.18" y="3791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="276.1" y="4181" width="5.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="279.13" y="4191.5" ></text>
</g>
<g >
<title>`getValueFromCondition(llvm::Value*, llvm::Value*, bool, llvm::D (1 samples, 0.04%)</title><rect x="693.4" y="5797" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="696.40" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="122.6" y="3157" width="1.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="125.65" y="3167.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="294.9" y="4133" width="1.9" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="297.91" y="4143.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="431.5" y="2981" width="1.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="434.50" y="2991.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="242.8" y="2197" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="245.81" y="2207.5" ></text>
</g>
<g >
<title>`GC_mark_local (27 samples, 1.07%)</title><rect x="438.1" y="5413" width="12.6" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="441.07" y="5423.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LoopSimplify::runOnFunction(llvm::Functi (1 samples, 0.04%)</title><rect x="846.9" y="5893" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="849.89" y="5903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="104.3" y="3621" width="7.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="107.34" y="3631.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="255.0" y="2981" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="258.01" y="2991.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="276.6" y="1045" width="2.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="279.60" y="1055.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="279.9" y="85" width="0.9" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="282.89" y="95.5" ></text>
</g>
<g >
<title>`cc_pushLandingPadFrame (1 samples, 0.04%)</title><rect x="29.2" y="5109" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="32.24" y="5119.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="24.1" y="4165" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="27.08" y="4175.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.0" y="1701" width="0.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="434.96" y="1711.5" ></text>
</g>
<g >
<title>`createLocalVariable(llvm::LLVMContext&amp;, llvm::DenseMap&lt;llvm::MD (1 samples, 0.04%)</title><rect x="654.9" y="5413" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="657.92" y="5423.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::Instruction&gt;, llvm:: (1 samples, 0.04%)</title><rect x="778.8" y="5861" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="781.83" y="5871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="3461" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="414.31" y="3471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="244.7" y="581" width="2.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="247.69" y="591.5" ></text>
</g>
<g >
<title>`LTV/CONS^LITERAL^FN^^ (70 samples, 2.78%)</title><rect x="318.8" y="5525" width="32.9" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="321.85" y="5535.5" >`L..</text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="633.8" y="5237" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="636.79" y="5247.5" ></text>
</g>
<g >
<title>`llvm::APInt::compare(llvm::APInt const&amp;) const (1 samples, 0.04%)</title><rect x="895.7" y="5797" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="898.70" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="19.9" y="3477" width="0.9" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="22.86" y="3487.5" ></text>
</g>
<g >
<title>0x11a477094 (10 samples, 0.40%)</title><rect x="172.4" y="149" width="4.7" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="175.40" y="159.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (16 samples, 0.64%)</title><rect x="260.6" y="213" width="7.6" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="263.64" y="223.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="417.9" y="421" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="420.88" y="431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="4421" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="412.44" y="4431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1765" width="0.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="428.86" y="1775.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (2 samples, 0.08%)</title><rect x="765.2" y="5733" width="1.0" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="768.22" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="417.9" y="181" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="420.88" y="191.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (40 samples, 1.59%)</title><rect x="232.0" y="3461" width="18.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="235.01" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="327.8" y="4405" width="0.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="330.76" y="4415.5" ></text>
</g>
<g >
<title>`C+ (1 samples, 0.04%)</title><rect x="638.5" y="5365" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="641.49" y="5375.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (2 samples, 0.08%)</title><rect x="171.5" y="1621" width="0.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="174.46" y="1631.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="235.3" y="581" width="4.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="238.30" y="591.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.04%)</title><rect x="240.0" y="2501" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="242.99" y="2511.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="56.5" y="5781" width="0.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="59.47" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="386.0" y="3589" width="1.4" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="388.97" y="3599.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (4 samples, 0.16%)</title><rect x="353.6" y="5589" width="1.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="356.58" y="5599.5" ></text>
</g>
<g >
<title>`isAlwaysLive(llvm::Instruction*) (1 samples, 0.04%)</title><rect x="707.0" y="5861" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="710.02" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="168.2" y="1029" width="1.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="171.18" y="1039.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="2037" width="50.7" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="183.38" y="2047.5" >`INTE..</text>
</g>
<g >
<title>`operator new(unsigned long) (2 samples, 0.08%)</title><rect x="718.8" y="5813" width="0.9" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="721.75" y="5823.5" ></text>
</g>
<g >
<title>`llvm::DILocalVariable::getImpl(llvm::LLVMContext&amp;, llvm::DIScop (1 samples, 0.04%)</title><rect x="654.9" y="5397" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="657.92" y="5407.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpUsingKnownBits(llvm::ICmpInst&amp;) (3 samples, 0.12%)</title><rect x="761.5" y="5829" width="1.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="764.46" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1525" width="2.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="420.41" y="1535.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="416.5" y="4933" width="0.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="419.48" y="4943.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (3 samples, 0.12%)</title><rect x="295.4" y="3477" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="298.38" y="3487.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="244.2" y="373" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="247.22" y="383.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="295.4" y="2565" width="0.9" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="298.38" y="2575.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (67 samples, 2.67%)</title><rect x="15.2" y="5525" width="31.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="18.16" y="5535.5" >`I..</text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.04%)</title><rect x="723.0" y="5781" width="0.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="725.98" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="243.3" y="2229" width="7.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="246.28" y="2239.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (6 samples, 0.24%)</title><rect x="276.6" y="1285" width="2.8" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="279.60" y="1295.5" ></text>
</g>
<g >
<title>`LITERAL-NODE-CREATOR-P^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="679.3" y="5973" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="682.32" y="5983.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.3" y="3573" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="414.31" y="3583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="295.8" y="2229" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="298.85" y="2239.5" ></text>
</g>
<g >
<title>`wrapped_cl__macro_function_Symbol_spT_sp (1 samples, 0.04%)</title><rect x="59.3" y="5717" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="62.28" y="5727.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="1413" width="50.7" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="183.38" y="1423.5" >`COMB..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="123.6" y="901" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="126.59" y="911.5" ></text>
</g>
<g >
<title>`AST-&gt;HIR^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="343.3" y="4869" width="0.9" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="346.25" y="4879.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="247.0" y="709" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="250.03" y="719.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="1909" width="4.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="285.70" y="1919.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="499.6" y="5797" width="0.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="502.55" y="5807.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitCallSite(llvm::CallSite) (4 samples, 0.16%)</title><rect x="740.8" y="5829" width="1.9" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="743.81" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="281.3" y="3989" width="5.6" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="284.30" y="3999.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="4197" width="1.0" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="424.64" y="4207.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="233.9" y="485" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="236.89" y="495.5" ></text>
</g>
<g >
<title>`ERROR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="127.8" y="5637" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="130.81" y="5647.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="24.1" y="4133" width="0.5" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="27.08" y="4143.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitExtractValueInst(llvm::ExtractValueIns (1 samples, 0.04%)</title><rect x="880.7" y="5845" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="883.68" y="5855.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (1 samples, 0.04%)</title><rect x="255.5" y="3125" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="258.48" y="3135.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="124.5" y="1845" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="127.53" y="1855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="286.9" y="5061" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="289.93" y="5071.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="268.6" y="693" width="3.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="271.62" y="703.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (10 samples, 0.40%)</title><rect x="327.3" y="4725" width="4.7" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="330.30" y="4735.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.3" y="3317" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="414.31" y="3327.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="125.9" y="3365" width="1.4" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="128.93" y="3375.5" ></text>
</g>
<g >
<title>`IRC-CALCULATE-ENTRY^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="626.8" y="5157" width="0.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="629.75" y="5167.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (4 samples, 0.16%)</title><rect x="277.1" y="725" width="1.8" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="280.07" y="735.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="165.4" y="2885" width="1.8" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="168.36" y="2895.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.08%)</title><rect x="522.1" y="5781" width="0.9" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="525.08" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="386.0" y="3109" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="388.97" y="3119.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="413.7" y="3685" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="416.66" y="3695.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="269.1" y="533" width="2.8" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="272.09" y="543.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="295.4" y="3573" width="1.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="298.38" y="3583.5" ></text>
</g>
<g >
<title>`void llvm::BitstreamWriter::EmitRecord&lt;llvm::SmallVector&lt;unsign (1 samples, 0.04%)</title><rect x="959.5" y="5893" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="962.54" y="5903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="233.9" y="677" width="1.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="236.89" y="687.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="178.0" y="2213" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="181.04" y="2223.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.04%)</title><rect x="312.3" y="5669" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="315.28" y="5679.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="758.6" y="5637" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="761.65" y="5647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="4277" width="2.8" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="296.97" y="4287.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (312 samples, 12.41%)</title><rect x="129.7" y="5237" width="146.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="132.69" y="5247.5" >`INTERPRETED-DISCR..</text>
</g>
<g >
<title>`wrapped_cl__nthcdr_Integer_spList_sp (1 samples, 0.04%)</title><rect x="532.9" y="5733" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="535.88" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1269" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="423.70" y="1279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="321.7" y="5381" width="1.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="324.66" y="5391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="243.3" y="1637" width="7.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="246.28" y="1647.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (11 samples, 0.44%)</title><rect x="37.7" y="4789" width="5.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="40.69" y="4799.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (4 samples, 0.16%)</title><rect x="52.7" y="4005" width="1.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="55.71" y="4015.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="2085" width="5.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="236.89" y="2095.5" ></text>
</g>
<g >
<title>`CONVERT-LOCAL-FUNCTIONS^CLEAVIR-CST-TO-AST^FN^^ (23 samples, 0.91%)</title><rect x="257.4" y="1989" width="10.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="260.36" y="1999.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="279.9" y="581" width="0.9" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="282.89" y="591.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LoopRotate::processLoop(llvm::Loop*) (2 samples, 0.08%)</title><rect x="782.6" y="5861" width="0.9" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="785.59" y="5871.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromAssume(llvm::Value const*, llvm::KnownBits&amp; (1 samples, 0.04%)</title><rect x="914.9" y="5797" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="917.95" y="5807.5" ></text>
</g>
<g >
<title>`MAKE-LITERAL-NODE-CREATOR^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="659.1" y="5493" width="1.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="662.14" y="5503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="297.3" y="5461" width="1.4" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="300.26" y="5471.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="294.0" y="5317" width="3.3" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="296.97" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.6" y="2517" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="424.64" y="2527.5" ></text>
</g>
<g >
<title>`llvm::hash_value(llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="894.8" y="5717" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="897.77" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="2053" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="412.90" y="2063.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (85 samples, 3.38%)</title><rect x="87.4" y="4565" width="39.9" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="90.45" y="4575.5" >`co..</text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (4 samples, 0.16%)</title><rect x="410.8" y="4693" width="1.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="413.84" y="4703.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="165.8" y="2629" width="1.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="168.83" y="2639.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="314.2" y="5301" width="0.9" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="317.15" y="5311.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (2 samples, 0.08%)</title><rect x="746.4" y="5765" width="1.0" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="749.44" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="455.0" y="5813" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="457.96" y="5823.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::getHash() const (1 samples, 0.04%)</title><rect x="731.9" y="5749" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="734.89" y="5759.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.08%)</title><rect x="424.9" y="3013" width="1.0" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="427.92" y="3023.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="430.6" y="1813" width="0.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="433.56" y="1823.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Function_O&gt; gctools::As&lt;gctools::smart (1 samples, 0.04%)</title><rect x="603.8" y="5477" width="0.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="606.75" y="5487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="255.5" y="3141" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="258.48" y="3151.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="231.1" y="3669" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="234.07" y="3679.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.04%)</title><rect x="863.3" y="5749" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="866.32" y="5759.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="52.7" y="3877" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="55.71" y="3887.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="329.2" y="4357" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="332.17" y="4367.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="281.3" y="4693" width="5.6" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="284.30" y="4703.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="871.3" y="5733" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="874.30" y="5743.5" ></text>
</g>
<g >
<title>`llvm::Value::getValueName() const (1 samples, 0.04%)</title><rect x="931.4" y="5829" width="0.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="934.38" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.0" y="1685" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="411.97" y="1695.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (340 samples, 13.52%)</title><rect x="129.2" y="5541" width="159.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="132.22" y="5551.5" >`CONVERT-CST^CLEAVIR..</text>
</g>
<g >
<title>`llvm::SparseSolver&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anon (11 samples, 0.44%)</title><rect x="937.9" y="5909" width="5.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="940.95" y="5919.5" ></text>
</g>
<g >
<title>`core::core__find_class_holder(gctools::smart_ptr&lt;core::Symbol_O (1 samples, 0.04%)</title><rect x="179.0" y="2133" width="0.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="181.97" y="2143.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="530.5" y="5797" width="1.9" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="533.53" y="5807.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (5 samples, 0.20%)</title><rect x="244.7" y="565" width="2.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="247.69" y="575.5" ></text>
</g>
<g >
<title>`0x10c6cbc93 (1 samples, 0.04%)</title><rect x="15.6" y="5077" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="18.63" y="5087.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.04%)</title><rect x="15.2" y="5333" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="18.16" y="5343.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="427.3" y="1877" width="0.9" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="430.27" y="1887.5" ></text>
</g>
<g >
<title>`GENERALP^CORE^FN^^ (1 samples, 0.04%)</title><rect x="136.7" y="4245" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="139.73" y="4255.5" ></text>
</g>
<g >
<title>`IRC-STORE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="665.2" y="5589" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="668.24" y="5599.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="659.1" y="5477" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="662.14" y="5487.5" ></text>
</g>
<g >
<title>`CST-EVAL^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="4981" width="0.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="290.87" y="4991.5" ></text>
</g>
<g >
<title>`core::lisp_true() (2 samples, 0.08%)</title><rect x="458.7" y="5797" width="1.0" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="461.72" y="5807.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="332.0" y="4645" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="334.99" y="4655.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="233.4" y="2085" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="236.42" y="2095.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="379.9" y="4821" width="2.8" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="382.86" y="4831.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="36.3" y="4453" width="1.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="39.28" y="4463.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="276.6" y="3813" width="4.7" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="279.60" y="3823.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="461.1" y="5765" width="0.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="464.07" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (231 samples, 9.19%)</title><rect x="164.0" y="4405" width="108.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="166.95" y="4415.5" >`core::clos__..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="400.0" y="4357" width="2.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="403.05" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="2853" width="1.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="434.50" y="2863.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="417.9" y="261" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="420.88" y="271.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (14 samples, 0.56%)</title><rect x="17.5" y="4229" width="6.6" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="20.51" y="4239.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (42 samples, 1.67%)</title><rect x="182.7" y="597" width="19.7" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="185.73" y="607.5" ></text>
</g>
<g >
<title>`wrapped_getInt8Ty_llvm__LLVMContext_ (1 samples, 0.04%)</title><rect x="661.5" y="5573" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="664.49" y="5583.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="311.3" y="5781" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="314.34" y="5791.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="492.5" y="5749" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="495.51" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1461" width="5.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="236.89" y="1471.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="415.1" y="4469" width="0.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="418.07" y="4479.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.04%)</title><rect x="232.5" y="2437" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="235.48" y="2447.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="66.3" y="4981" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="69.32" y="4991.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="413.7" y="4341" width="0.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="416.66" y="4351.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (2 samples, 0.08%)</title><rect x="18.9" y="3477" width="1.0" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="21.92" y="3487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="3845" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="417.13" y="3855.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.04%)</title><rect x="268.6" y="277" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="271.62" y="287.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="3893" width="1.0" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="424.64" y="3903.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3509" width="1.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="411.03" y="3519.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (3 samples, 0.12%)</title><rect x="285.5" y="837" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="288.52" y="847.5" ></text>
</g>
<g >
<title>`optimizeGlobalsInModule(llvm::Module&amp;, llvm::DataLayout const&amp;, (4 samples, 0.16%)</title><rect x="838.9" y="5909" width="1.9" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="841.91" y="5919.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="232.0" y="2981" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="235.01" y="2991.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solveBlockValueImpl(l (1 samples, 0.04%)</title><rect x="703.7" y="5781" width="0.5" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="706.73" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="102.0" y="3621" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="105.00" y="3631.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="837" width="5.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="236.89" y="847.5" ></text>
</g>
<g >
<title>`llvm::LPPassManager::runOnFunction(llvm::Function&amp;) (9 samples, 0.36%)</title><rect x="779.8" y="5893" width="4.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="782.77" y="5903.5" ></text>
</g>
<g >
<title>`llvm::Float2IntPass::walkBackwards(llvm::SmallPtrSetImpl&lt;llvm:: (1 samples, 0.04%)</title><rect x="857.7" y="5877" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="860.68" y="5887.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'IF) T T T))^METHOD (2 samples, 0.08%)</title><rect x="295.4" y="3029" width="0.9" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="298.38" y="3039.5" ></text>
</g>
<g >
<title>`FUDGE-VALUES-TYPE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="233.9" y="101" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="236.89" y="111.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (36 samples, 1.43%)</title><rect x="416.9" y="5061" width="16.9" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="419.95" y="5071.5" ></text>
</g>
<g >
<title>`wrapped_cl__type_of_T_sp (1 samples, 0.04%)</title><rect x="242.8" y="1925" width="0.5" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="245.81" y="1935.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="386.9" y="3477" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="389.91" y="3487.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.04%)</title><rect x="268.6" y="309" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="271.62" y="319.5" ></text>
</g>
<g >
<title>`PROCESS-LTV^CLASP-CLEAVIR-AST^FN^^ (16 samples, 0.64%)</title><rect x="332.5" y="4709" width="7.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="335.46" y="4719.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="268.6" y="1061" width="3.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="271.62" y="1071.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="430.6" y="1909" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="433.56" y="1919.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="417.4" y="1189" width="2.4" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="420.41" y="1199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="401.9" y="4261" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="404.93" y="4271.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="413.7" y="4133" width="0.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="416.66" y="4143.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="430.6" y="2261" width="0.9" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="433.56" y="2271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (108 samples, 4.30%)</title><rect x="180.4" y="1349" width="50.7" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="183.38" y="1359.5" >`core..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="2293" width="5.6" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="236.89" y="2303.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="332.9" y="4453" width="1.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="335.93" y="4463.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (1 samples, 0.04%)</title><rect x="36.8" y="3349" width="0.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="39.75" y="3359.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="252.2" y="3301" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="255.20" y="3311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="415.5" y="4261" width="0.5" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="418.54" y="4271.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorImpl&lt;llvm::Constant*&gt;::resize(unsigned long) (1 samples, 0.04%)</title><rect x="650.2" y="5269" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="653.22" y="5279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="413.7" y="4933" width="1.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="416.66" y="4943.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="431.5" y="3669" width="1.9" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="434.50" y="3679.5" ></text>
</g>
<g >
<title>`UNSAFE-FUNCALL1^CORE^FN^^ (1 samples, 0.04%)</title><rect x="282.7" y="1125" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="285.70" y="1135.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="247.5" y="869" width="1.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="250.50" y="879.5" ></text>
</g>
<g >
<title>`MAKE-ENTER-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="386.0" y="2949" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="388.97" y="2959.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="416.0" y="4693" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="419.01" y="4703.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="236.2" y="197" width="3.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="239.24" y="207.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="2213" width="4.2" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="279.60" y="2223.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="869" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="423.70" y="879.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="421.6" y="3909" width="1.0" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="424.64" y="3919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (11 samples, 0.44%)</title><rect x="388.3" y="4389" width="5.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="391.31" y="4399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="251.3" y="3829" width="0.9" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="254.26" y="3839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="4501" width="1.4" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="411.03" y="4511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="415.5" y="4165" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="418.54" y="4175.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (5 samples, 0.20%)</title><rect x="817.3" y="5685" width="2.4" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="820.32" y="5695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="432.4" y="2373" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="435.43" y="2383.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="250.3" y="1253" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="253.32" y="1263.5" ></text>
</g>
<g >
<title>`llvm::Instruction::mayReadFromMemory() const (1 samples, 0.04%)</title><rect x="833.3" y="5845" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="836.28" y="5855.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="582.6" y="5765" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="585.63" y="5775.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (22 samples, 0.88%)</title><rect x="167.7" y="2181" width="10.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="170.71" y="2191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (183 samples, 7.28%)</title><rect x="164.9" y="4277" width="85.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="167.89" y="4287.5" >`INTERPRET..</text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="203.4" y="757" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="206.38" y="767.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="235.3" y="69" width="0.9" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="238.30" y="79.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleCharacterString_O&gt; gctools::GCOb (1 samples, 0.04%)</title><rect x="55.1" y="5301" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="58.06" y="5311.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="124.5" y="1973" width="1.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="127.53" y="1983.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="401.0" y="3685" width="0.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="403.99" y="3695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="585.0" y="5797" width="1.9" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="587.98" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="2821" width="3.8" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="420.41" y="2831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="421.6" y="2757" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="424.64" y="2767.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="597.7" y="5701" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="600.65" y="5711.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.04%)</title><rect x="234.8" y="341" width="0.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="237.83" y="351.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="135.8" y="4309" width="0.9" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="138.79" y="4319.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="23.6" y="3925" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="26.61" y="3935.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.04%)</title><rect x="913.5" y="5781" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="916.54" y="5791.5" ></text>
</g>
<g >
<title>`POSSIBLY-ADD-ITEM^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-STA (1 samples, 0.04%)</title><rect x="66.3" y="4965" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="69.32" y="4975.5" ></text>
</g>
<g >
<title>0x1225e5094 (9 samples, 0.36%)</title><rect x="276.6" y="2293" width="4.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="279.60" y="2303.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="437" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="423.70" y="447.5" ></text>
</g>
<g >
<title>`core::core__generalp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="551.7" y="5781" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="554.65" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="401.0" y="3109" width="0.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="403.99" y="3119.5" ></text>
</g>
<g >
<title>`GC_alloc_large (1 samples, 0.04%)</title><rect x="308.1" y="5717" width="0.4" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="311.05" y="5727.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="673.7" y="5717" width="0.5" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="676.69" y="5727.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::collectLastUses(llvm::SmallVectorImpl&lt; (2 samples, 0.08%)</title><rect x="795.7" y="5877" width="1.0" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="798.73" y="5887.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (113 samples, 4.49%)</title><rect x="601.4" y="5541" width="53.0" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="604.41" y="5551.5" >`DO-D..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="91.7" y="4069" width="7.9" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="94.67" y="4079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="413.2" y="4933" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="416.19" y="4943.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (54 samples, 2.15%)</title><rect x="379.4" y="5541" width="25.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="382.40" y="5551.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="296.3" y="3093" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="299.32" y="3103.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="789" width="1.4" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="288.52" y="799.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="180.4" y="229" width="2.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="183.38" y="239.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.04%)</title><rect x="593.9" y="5781" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="596.90" y="5791.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2261" width="4.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="279.60" y="2271.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="417.9" y="773" width="0.5" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="420.88" y="783.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="455.9" y="5717" width="0.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="458.90" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="419.3" y="789" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="422.29" y="799.5" ></text>
</g>
<g >
<title>`cc_invoke_byte_code_interpreter (2,028 samples, 80.67%)</title><rect x="10.0" y="6277" width="951.9" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="13.00" y="6287.5" >`cc_invoke_byte_code_interpreter</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="393.5" y="4069" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="396.48" y="4079.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (55 samples, 2.19%)</title><rect x="60.7" y="5157" width="25.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="63.69" y="5167.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (32 samples, 1.27%)</title><rect x="187.4" y="165" width="15.0" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="190.42" y="175.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="352.6" y="5381" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="355.64" y="5391.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (2 samples, 0.08%)</title><rect x="92.6" y="3397" width="0.9" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="95.61" y="3407.5" ></text>
</g>
<g >
<title>`MAKE-RESTART^CORE^FN^^ (1 samples, 0.04%)</title><rect x="321.7" y="5109" width="0.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="324.66" y="5119.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="243.3" y="1781" width="7.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="246.28" y="1791.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="297.3" y="5317" width="0.4" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="300.26" y="5327.5" ></text>
</g>
<g >
<title>`core::cl__error(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.04%)</title><rect x="98.7" y="3813" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="101.71" y="3823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="287.4" y="5285" width="1.4" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="290.40" y="5295.5" ></text>
</g>
<g >
<title>`DO-INLINING^CLEAVIR-PARTIAL-INLINING^FN^^ (1 samples, 0.04%)</title><rect x="337.6" y="4501" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="340.62" y="4511.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="432.0" y="2165" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="434.96" y="2175.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="165.8" y="2661" width="1.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="168.83" y="2671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3621" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="404.93" y="3631.5" ></text>
</g>
<g >
<title>`wrapped_cl__error_T_spList_sp (1 samples, 0.04%)</title><rect x="324.5" y="4805" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="327.48" y="4815.5" ></text>
</g>
<g >
<title>`wrapped_core__vref_AbstractSimpleVector_spsize_t (1 samples, 0.04%)</title><rect x="332.5" y="4645" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="335.46" y="4655.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="382.2" y="4645" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="385.21" y="4655.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.04%)</title><rect x="765.7" y="5701" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="768.69" y="5711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="413.2" y="4981" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="416.19" y="4991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1397" width="2.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="420.41" y="1407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="286.9" y="4869" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="289.93" y="4879.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((FIXED-TO-MULTIPLE- (7 samples, 0.28%)</title><rect x="640.4" y="5429" width="3.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="643.37" y="5439.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleCharacterString_O&gt; gctools::GCOb (1 samples, 0.04%)</title><rect x="617.8" y="5253" width="0.5" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="620.84" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="168.2" y="949" width="1.9" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="171.18" y="959.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="3589" width="4.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="279.60" y="3599.5" ></text>
</g>
<g >
<title>`INITIALIZE-CALLING-CONVENTION^COMPILER^FN^^ (8 samples, 0.32%)</title><rect x="654.4" y="5557" width="3.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="657.45" y="5567.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solveBlockValueImpl(l (1 samples, 0.04%)</title><rect x="701.9" y="5765" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="704.85" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="4197" width="1.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="412.44" y="4207.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="26.0" y="4261" width="0.4" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="28.96" y="4271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (52 samples, 2.07%)</title><rect x="379.4" y="5189" width="24.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="382.40" y="5199.5" >`..</text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="345.6" y="5061" width="1.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="348.60" y="5071.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.9" y="1909" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="412.90" y="1919.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="424.0" y="1637" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="426.99" y="1647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (83 samples, 3.30%)</title><rect x="88.4" y="4341" width="38.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="91.39" y="4351.5" >`IN..</text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.04%)</title><rect x="255.0" y="2853" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="258.01" y="2863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="325" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="423.70" y="335.5" ></text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="243.3" y="405" width="0.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="246.28" y="415.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="260.2" y="37" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="263.18" y="47.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="312.7" y="5669" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="315.74" y="5679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="409.4" y="4229" width="1.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="412.44" y="4239.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2677" width="14.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="260.36" y="2687.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="434.3" y="5541" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="437.31" y="5551.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="4149" width="1.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="411.03" y="4159.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="321.2" y="5285" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="324.19" y="5295.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (41 samples, 1.63%)</title><rect x="325.4" y="4949" width="19.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="328.42" y="4959.5" ></text>
</g>
<g >
<title>`llvm::PassRegistry::getPassRegistry() (1 samples, 0.04%)</title><rect x="923.9" y="5877" width="0.4" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="926.87" y="5887.5" ></text>
</g>
<g >
<title>`std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::basi (1 samples, 0.04%)</title><rect x="334.3" y="4485" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="337.34" y="4495.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (19 samples, 0.76%)</title><rect x="259.2" y="1701" width="9.0" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="262.24" y="1711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="385.5" y="3669" width="1.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="388.50" y="3679.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (108 samples, 4.30%)</title><rect x="180.4" y="1957" width="50.7" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="183.38" y="1967.5" >`CONV..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="382.7" y="4773" width="0.5" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="385.68" y="4783.5" ></text>
</g>
<g >
<title>`wrapped_cl__type_of_T_sp (1 samples, 0.04%)</title><rect x="281.3" y="3061" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="284.30" y="3071.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.08%)</title><rect x="647.4" y="5333" width="0.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="650.41" y="5343.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="282.7" y="1669" width="1.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="285.70" y="1679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (57 samples, 2.27%)</title><rect x="204.3" y="293" width="26.8" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="207.32" y="303.5" >`..</text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="1813" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="412.90" y="1823.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((:AROUND) (T T CLASP))^METHOD (1 samples, 0.04%)</title><rect x="230.6" y="261" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="233.60" y="271.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="282.7" y="2885" width="4.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="285.70" y="2895.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getPredicateAt(unsigned int, llvm::Value*, (8 samples, 0.32%)</title><rect x="694.3" y="5861" width="3.8" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="697.34" y="5871.5" ></text>
</g>
<g >
<title>`core::SimpleBaseString_O::get_std_string() const (1 samples, 0.04%)</title><rect x="29.7" y="5013" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="32.71" y="5023.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="412.3" y="3157" width="0.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="415.25" y="3167.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (19 samples, 0.76%)</title><rect x="259.2" y="1669" width="9.0" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="262.24" y="1679.5" ></text>
</g>
<g >
<title>0x122649094 (31 samples, 1.23%)</title><rect x="257.4" y="2021" width="14.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="260.36" y="2031.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="233.9" y="741" width="1.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="236.89" y="751.5" ></text>
</g>
<g >
<title>0x11a477094 (9 samples, 0.36%)</title><rect x="276.6" y="2165" width="4.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="279.60" y="2175.5" ></text>
</g>
<g >
<title>`core::cl__nthcdr(gctools::smart_ptr&lt;core::Integer_O&gt;, gctools:: (1 samples, 0.04%)</title><rect x="418.8" y="821" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="421.82" y="831.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="93.5" y="3429" width="0.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="96.55" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="423.0" y="3109" width="1.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="426.05" y="3119.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="656.8" y="5509" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="659.79" y="5519.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="628.2" y="5061" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="631.16" y="5071.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (1 samples, 0.04%)</title><rect x="34.9" y="4181" width="0.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="37.88" y="4191.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="167.7" y="1301" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="170.71" y="1311.5" ></text>
</g>
<g >
<title>`core::core__get_sysprop(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (9 samples, 0.36%)</title><rect x="150.8" y="4309" width="4.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="153.81" y="4319.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAWrapperPass* llvm::Pass::getAnalysisIfAvailable&lt; (1 samples, 0.04%)</title><rect x="847.4" y="5877" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="850.36" y="5887.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.9" y="5045" width="0.5" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="327.95" y="5055.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (12 samples, 0.48%)</title><rect x="233.9" y="2165" width="5.6" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="236.89" y="2175.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::alias(llvm::MemoryLocation const&amp;, llvm: (3 samples, 0.12%)</title><rect x="808.4" y="5637" width="1.4" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="811.40" y="5647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (33 samples, 1.31%)</title><rect x="15.6" y="5189" width="15.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="18.63" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (19 samples, 0.76%)</title><rect x="259.2" y="821" width="9.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="262.24" y="831.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="294.0" y="3941" width="0.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="296.97" y="3951.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="251.3" y="3461" width="0.9" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="254.26" y="3471.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (23 samples, 0.91%)</title><rect x="620.7" y="5301" width="10.7" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="623.65" y="5311.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="46.6" y="5557" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="49.61" y="5567.5" ></text>
</g>
<g >
<title>`core::clasp_write_char(int, gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="53.2" y="3765" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="56.18" y="3775.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((UNBOX-INSTRUCTION  (1 samples, 0.04%)</title><rect x="631.0" y="5205" width="0.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="633.98" y="5215.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="391.6" y="2517" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="394.60" y="2527.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="410.8" y="4933" width="1.9" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="413.84" y="4943.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="287.4" y="4629" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="290.40" y="4639.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (5 samples, 0.20%)</title><rect x="949.2" y="6021" width="2.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="952.21" y="6031.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="396.8" y="4149" width="0.9" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="399.76" y="4159.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (40 samples, 1.59%)</title><rect x="232.0" y="3541" width="18.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="235.01" y="3551.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="4949" width="0.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="290.87" y="4959.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="34.4" y="4661" width="0.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="37.41" y="4671.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.9" y="3061" width="0.5" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="412.90" y="3071.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (26 samples, 1.03%)</title><rect x="16.6" y="5029" width="12.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="19.57" y="5039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="260.6" y="101" width="7.6" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="263.64" y="111.5" ></text>
</g>
<g >
<title>0x1225f1076 (11 samples, 0.44%)</title><rect x="276.1" y="4757" width="5.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="279.13" y="4767.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (8 samples, 0.32%)</title><rect x="268.2" y="1813" width="3.7" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="271.15" y="1823.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="391.6" y="2869" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="394.60" y="2879.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="567.6" y="5605" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="570.61" y="5615.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="19.9" y="3541" width="0.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="22.86" y="3551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="314.6" y="5173" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="317.62" y="5183.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="165.4" y="2533" width="0.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="168.36" y="2543.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="243.3" y="645" width="1.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="246.28" y="655.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="335.7" y="4517" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="338.74" y="4527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="428.7" y="1861" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="431.68" y="1871.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (1 samples, 0.04%)</title><rect x="22.7" y="3893" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="25.67" y="3903.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="295.4" y="3189" width="0.9" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="298.38" y="3199.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="417.4" y="1109" width="2.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="420.41" y="1119.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (22 samples, 0.88%)</title><rect x="34.4" y="5333" width="10.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="37.41" y="5343.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.04%)</title><rect x="327.3" y="4293" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="330.30" y="4303.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="50.4" y="4661" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="53.37" y="4671.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="413.7" y="3877" width="0.4" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="416.66" y="3887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="391.6" y="2901" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="394.60" y="2911.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="345.6" y="4757" width="0.5" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="348.60" y="4767.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="254.1" y="3397" width="1.9" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="257.07" y="3407.5" ></text>
</g>
<g >
<title>`wrapped_get_llvm__LLVMContext_const_llvm__APInt_ (1 samples, 0.04%)</title><rect x="629.1" y="5157" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="632.10" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (22 samples, 0.88%)</title><rect x="384.1" y="4677" width="10.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="387.09" y="4687.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.04%)</title><rect x="697.2" y="5781" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="700.16" y="5791.5" ></text>
</g>
<g >
<title>`core::Environment_O::clasp_findMacro(gctools::smart_ptr&lt;core::T (1 samples, 0.04%)</title><rect x="59.3" y="5701" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="62.28" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="423.0" y="2373" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="426.05" y="2383.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (86 samples, 3.42%)</title><rect x="87.0" y="4869" width="40.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="89.98" y="4879.5" >`IN..</text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (14 samples, 0.56%)</title><rect x="233.0" y="2501" width="6.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="235.95" y="2511.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.04%)</title><rect x="160.2" y="4293" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="163.20" y="4303.5" ></text>
</g>
<g >
<title>`CONVERT-CALLED-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T T T T) (2 samples, 0.08%)</title><rect x="92.6" y="3429" width="0.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="95.61" y="3439.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="65.4" y="4997" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="68.39" y="5007.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="412.3" y="3045" width="0.4" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="415.25" y="3055.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="356.4" y="5685" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="359.40" y="5695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="431.5" y="3317" width="1.4" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="434.50" y="3327.5" ></text>
</g>
<g >
<title>`SAVE-INFO^CLEAVIR-IO^((APPEND) (NAMED-FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="103.9" y="3621" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="106.87" y="3631.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="628.2" y="5157" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="631.16" y="5167.5" ></text>
</g>
<g >
<title>`_platform_memchr$VARIANT$Base (1 samples, 0.04%)</title><rect x="743.2" y="5797" width="0.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="746.16" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.4" y="1637" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="428.39" y="1647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="287.9" y="5093" width="0.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="290.87" y="5103.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="3557" width="4.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="279.60" y="3567.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="628.2" y="5125" width="0.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="631.16" y="5135.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="405.2" y="4997" width="0.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="408.21" y="5007.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="276.1" y="3877" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="279.13" y="3887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="427.3" y="3349" width="4.2" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="430.27" y="3359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (108 samples, 4.30%)</title><rect x="180.4" y="2165" width="50.7" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="183.38" y="2175.5" >`core..</text>
</g>
<g >
<title>`core::core__file_scope(gctools::smart_ptr&lt;core::T_O&gt;, gctools:: (1 samples, 0.04%)</title><rect x="42.4" y="4581" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="45.39" y="4591.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (4 samples, 0.16%)</title><rect x="101.1" y="3685" width="1.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="104.06" y="3695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="18.0" y="3941" width="5.1" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="20.98" y="3951.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="413.7" y="3973" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="416.66" y="3983.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="393.5" y="3925" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="396.48" y="3935.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.08%)</title><rect x="425.9" y="2933" width="0.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="428.86" y="2943.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="287.9" y="5157" width="0.9" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="290.87" y="5167.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (1 samples, 0.04%)</title><rect x="567.6" y="5685" width="0.5" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="570.61" y="5695.5" ></text>
</g>
<g >
<title>`llvm::ObjectSizeOffsetVisitor::compute(llvm::Value*) (2 samples, 0.08%)</title><rect x="804.6" y="5653" width="1.0" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="807.65" y="5663.5" ></text>
</g>
<g >
<title>`llvm::Instruction::mayWriteToMemory() const (1 samples, 0.04%)</title><rect x="767.6" y="5797" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="770.57" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="270.0" y="85" width="1.9" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="273.03" y="95.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (1 samples, 0.04%)</title><rect x="683.5" y="5909" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="686.55" y="5919.5" ></text>
</g>
<g >
<title>`core::lambdaListHandler_createBindings(gctools::smart_ptr&lt;core: (1 samples, 0.04%)</title><rect x="635.2" y="5301" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="638.20" y="5311.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="423.0" y="2741" width="1.5" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="426.05" y="2751.5" ></text>
</g>
<g >
<title>`TYPE-SPECIFIER-AST^CLEAVIR-AST^((:AROUND) (TYPEQ-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="307.1" y="5781" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="310.11" y="5791.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.04%)</title><rect x="592.0" y="5733" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="595.02" y="5743.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (28 samples, 1.11%)</title><rect x="472.8" y="5589" width="13.1" height="15.0" fill="rgb(237,103,103)" rx="2" ry="2" />
<text  x="475.80" y="5599.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="101.5" y="3589" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="104.53" y="3599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (100 samples, 3.98%)</title><rect x="406.1" y="5749" width="47.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="409.15" y="5759.5" >`INT..</text>
</g>
<g >
<title>0x1225f1094 (2 samples, 0.08%)</title><rect x="239.5" y="3125" width="1.0" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="242.52" y="3135.5" ></text>
</g>
<g >
<title>`MEMBER1^CORE^FN^^ (1 samples, 0.04%)</title><rect x="370.9" y="5685" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="373.95" y="5695.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (4 samples, 0.16%)</title><rect x="122.6" y="3045" width="1.9" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="125.65" y="3055.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="414.1" y="3893" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="417.13" y="3903.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm (1 samples, 0.04%)</title><rect x="628.2" y="4997" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="631.16" y="5007.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="421" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="423.70" y="431.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="279.4" y="933" width="1.4" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="282.42" y="943.5" ></text>
</g>
<g >
<title>`llvm::BranchProbabilityInfoWrapperPass::runOnFunction(llvm::Fun (5 samples, 0.20%)</title><rect x="851.6" y="5893" width="2.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="854.58" y="5903.5" ></text>
</g>
<g >
<title>`llvm::LoopAccessInfo const&amp; llvm::function_ref&lt;llvm::LoopAccess (1 samples, 0.04%)</title><rect x="846.4" y="5861" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="849.42" y="5871.5" ></text>
</g>
<g >
<title>`ThreadCmpOverPHI(llvm::CmpInst::Predicate, llvm::Value*, llvm:: (1 samples, 0.04%)</title><rect x="824.8" y="5749" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="827.83" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="277.1" y="869" width="1.8" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="280.07" y="879.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T GLOBAL-FUNCTION-INFO))^METHOD (1 samples, 0.04%)</title><rect x="91.7" y="3685" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="94.67" y="3695.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (32 samples, 1.27%)</title><rect x="187.4" y="69" width="15.0" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="190.42" y="79.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="121.7" y="3413" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="124.71" y="3423.5" ></text>
</g>
<g >
<title>`INTERPRET-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="27.4" y="4757" width="0.4" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="30.37" y="4767.5" ></text>
</g>
<g >
<title>`LOGAND^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="100.6" y="3493" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="103.59" y="3503.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::removeDeadPasses(llvm::Pass*, llvm::String (8 samples, 0.32%)</title><rect x="924.3" y="5893" width="3.8" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="927.34" y="5903.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.04%)</title><rect x="434.8" y="5493" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="437.78" y="5503.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="2837" width="3.8" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="420.41" y="2847.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="123.1" y="2565" width="1.4" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="126.12" y="2575.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="235.3" y="789" width="4.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="238.30" y="799.5" ></text>
</g>
<g >
<title>`llvm::MemorySSAWrapperPass::runOnFunction(llvm::Function&amp;) (10 samples, 0.40%)</title><rect x="786.8" y="5893" width="4.7" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="789.81" y="5903.5" ></text>
</g>
<g >
<title>0x11a477094 (4 samples, 0.16%)</title><rect x="165.4" y="3573" width="1.8" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="168.36" y="3583.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (10 samples, 0.40%)</title><rect x="276.6" y="4037" width="4.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="279.60" y="4047.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="279.4" y="453" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="282.42" y="463.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (65 samples, 2.59%)</title><rect x="133.0" y="4629" width="30.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="135.98" y="4639.5" >`P..</text>
</g>
<g >
<title>`COMPUTE-LOCATION-OWNERS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="345.1" y="5013" width="0.5" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="348.13" y="5023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="422.1" y="2133" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="425.11" y="2143.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (25 samples, 0.99%)</title><rect x="16.6" y="4997" width="11.7" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="19.57" y="5007.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (5 samples, 0.20%)</title><rect x="38.6" y="4453" width="2.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="41.63" y="4463.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (4 samples, 0.16%)</title><rect x="49.9" y="5221" width="1.9" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="52.90" y="5231.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="89.8" y="3909" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="92.79" y="3919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="725" width="9.0" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="262.24" y="735.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="52.7" y="3573" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="55.71" y="3583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="416.0" y="4821" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="419.01" y="4831.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (15 samples, 0.60%)</title><rect x="232.5" y="2949" width="7.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="235.48" y="2959.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="180.4" y="117" width="2.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="183.38" y="127.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.04%)</title><rect x="24.1" y="3989" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="27.08" y="3999.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="424.9" y="1141" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="427.92" y="1151.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="337.6" y="4469" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="340.62" y="4479.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="165.8" y="2165" width="1.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="168.83" y="2175.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="168.2" y="1125" width="1.9" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="171.18" y="1135.5" ></text>
</g>
<g >
<title>`COMPLETER-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (1 samples, 0.04%)</title><rect x="256.0" y="2805" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="258.95" y="2815.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (23 samples, 0.91%)</title><rect x="276.1" y="4869" width="10.8" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="279.13" y="4879.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (8 samples, 0.32%)</title><rect x="853.9" y="5877" width="3.8" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="856.93" y="5887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="242.8" y="2469" width="8.0" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="245.81" y="2479.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="285.5" y="85" width="1.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="288.52" y="95.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="38.2" y="4613" width="3.7" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="41.16" y="4623.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="272.4" y="4533" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="275.38" y="4543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="4197" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="415.25" y="4207.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="386.0" y="3029" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="388.97" y="3039.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (124 samples, 4.93%)</title><rect x="600.5" y="5589" width="58.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="603.47" y="5599.5" >`DO-DE..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'BLOCK) T T T))^MET (3 samples, 0.12%)</title><rect x="285.5" y="149" width="1.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="288.52" y="159.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="522.6" y="5765" width="0.4" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="525.55" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="3493" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="414.78" y="3503.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (42 samples, 1.67%)</title><rect x="182.7" y="517" width="19.7" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="185.73" y="527.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="531.5" y="5717" width="0.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="534.47" y="5727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="247.0" y="437" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="250.03" y="447.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="1141" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="423.70" y="1151.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (8 samples, 0.32%)</title><rect x="336.2" y="4629" width="3.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="339.21" y="4639.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="1909" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="428.86" y="1919.5" ></text>
</g>
<g >
<title>`WRITE-ARGUMENTS-BYTE-CODE^LITERAL^FN^^ (10 samples, 0.40%)</title><rect x="680.3" y="5973" width="4.7" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="683.26" y="5983.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (8 samples, 0.32%)</title><rect x="502.4" y="5733" width="3.7" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="505.37" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="410.8" y="4517" width="1.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="413.84" y="4527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.0" y="4757" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="419.01" y="4767.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction*, (anonymou (1 samples, 0.04%)</title><rect x="689.2" y="5845" width="0.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="692.18" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (182 samples, 7.24%)</title><rect x="165.4" y="4197" width="85.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="168.36" y="4207.5" >`INTERPRET..</text>
</g>
<g >
<title>`OPTIMIZED-CONTEXT-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="384.1" y="4533" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="387.09" y="4543.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="424.9" y="2581" width="1.0" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="427.92" y="2591.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="268.6" y="661" width="3.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="271.62" y="671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="3109" width="0.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="428.86" y="3119.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="36.8" y="3477" width="0.4" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="39.75" y="3487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="405.7" y="3973" width="0.4" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="408.68" y="3983.5" ></text>
</g>
<g >
<title>`llvm::DebugLoc::get(unsigned int, unsigned int, llvm::MDNode co (3 samples, 0.12%)</title><rect x="614.6" y="5317" width="1.4" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="617.55" y="5327.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="232.0" y="3221" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="235.01" y="3231.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="353.6" y="5333" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="356.58" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="423.0" y="2869" width="1.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="426.05" y="2879.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="44.7" y="5461" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="47.73" y="5471.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="329.6" y="4405" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="332.64" y="4415.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="279.4" y="1221" width="1.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="282.42" y="1231.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (2 samples, 0.08%)</title><rect x="295.4" y="2677" width="0.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="298.38" y="2687.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="34.4" y="4341" width="0.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="37.41" y="4351.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="240.0" y="2629" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="242.99" y="2639.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="295.4" y="2309" width="0.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="298.38" y="2319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="1797" width="1.0" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="432.62" y="1807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="53.7" y="3829" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="56.65" y="3839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="122.6" y="3013" width="1.9" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="125.65" y="3023.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="430.6" y="2405" width="0.9" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="433.56" y="2415.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="285.1" y="725" width="0.4" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="288.05" y="735.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="52.2" y="4293" width="2.9" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="55.24" y="4303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="397.7" y="4133" width="1.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="400.70" y="4143.5" ></text>
</g>
<g >
<title>`LOGTEST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="31.6" y="5173" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="34.59" y="5183.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (2 samples, 0.08%)</title><rect x="746.4" y="5717" width="1.0" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="749.44" y="5727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (56 samples, 2.23%)</title><rect x="407.6" y="5493" width="26.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="410.56" y="5503.5" >`..</text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="462.0" y="5797" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="465.00" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2421" width="4.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="285.70" y="2431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3989" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="414.78" y="3999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="413.2" y="4853" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="416.19" y="4863.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="354.0" y="5205" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="357.05" y="5215.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::CastClass_match&lt;llvm::PatternMatch::bi (1 samples, 0.04%)</title><rect x="757.2" y="5829" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="760.24" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="4069" width="3.8" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="420.41" y="4079.5" ></text>
</g>
<g >
<title>`MAKE-ENTER-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.08%)</title><rect x="370.0" y="5829" width="0.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="373.01" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="385.0" y="3973" width="2.8" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="388.03" y="3983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3013" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="414.78" y="3023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="422.1" y="2197" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="425.11" y="2207.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="167.7" y="1349" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="170.71" y="1359.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="102.5" y="3653" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="105.47" y="3663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="276.1" y="4693" width="5.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="279.13" y="4703.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="18.0" y="3413" width="0.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="20.98" y="3423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="388.3" y="3989" width="3.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="391.31" y="3999.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (5 samples, 0.20%)</title><rect x="400.0" y="4965" width="2.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="403.05" y="4975.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (11 samples, 0.44%)</title><rect x="49.9" y="5653" width="5.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="52.90" y="5663.5" ></text>
</g>
<g >
<title>`llvm::hoistRegion(llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*, llv (3 samples, 0.12%)</title><rect x="780.7" y="5845" width="1.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="783.71" y="5855.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (108 samples, 4.30%)</title><rect x="180.4" y="1477" width="50.7" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="183.38" y="1487.5" >`CONV..</text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="281.3" y="3653" width="5.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="284.30" y="3663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (340 samples, 13.52%)</title><rect x="129.2" y="5605" width="159.6" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="132.22" y="5615.5" >`CONVERT^CLEAVIR-CST..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="135.8" y="4373" width="3.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="138.79" y="4383.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (2,028 samples, 80.67%)</title><rect x="10.0" y="6197" width="951.9" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="13.00" y="6207.5" >`CATCH-LAMBDA^CC-GENERATE-AST^FN^^</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="454.5" y="5813" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="457.49" y="5823.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="37.7" y="4661" width="4.2" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="40.69" y="4671.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedUseBits(llvm::Value*, llvm: (1 samples, 0.04%)</title><rect x="762.4" y="5797" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="765.40" y="5807.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitPHINode(llvm::PHINode&amp;) (1 samples, 0.04%)</title><rect x="774.1" y="5845" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="777.14" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (108 samples, 4.30%)</title><rect x="180.4" y="1317" width="50.7" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="183.38" y="1327.5" >`core..</text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;std::__1::pair&lt;llvm::BasicBlock*, llvm (1 samples, 0.04%)</title><rect x="785.4" y="5781" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="788.40" y="5791.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (56 samples, 2.23%)</title><rect x="204.3" y="165" width="26.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="207.32" y="175.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3541" width="1.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="424.64" y="3551.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="109.0" y="3557" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="112.04" y="3567.5" ></text>
</g>
<g >
<title>`malloc_zone_realloc (1 samples, 0.04%)</title><rect x="834.2" y="5797" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="837.22" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="124.5" y="3141" width="1.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="127.53" y="3151.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENTER-INSTRUCTION  (1 samples, 0.04%)</title><rect x="321.2" y="5189" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="324.19" y="5199.5" ></text>
</g>
<g >
<title>`llvm::isSafeToSpeculativelyExecute(llvm::Value const*, llvm::In (1 samples, 0.04%)</title><rect x="816.4" y="5749" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="819.38" y="5759.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.04%)</title><rect x="825.8" y="5605" width="0.4" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="828.77" y="5615.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="3013" width="1.4" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="411.03" y="3023.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="122.2" y="3813" width="5.1" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="125.18" y="3823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.3" y="3333" width="0.5" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="414.31" y="3343.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="336.2" y="4501" width="1.0" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="339.21" y="4511.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="4757" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="290.87" y="4767.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.08%)</title><rect x="465.8" y="5749" width="0.9" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="468.76" y="5759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="2037" width="1.0" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="426.52" y="2047.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="282.7" y="1237" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="285.70" y="1247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (60 samples, 2.39%)</title><rect x="202.9" y="1269" width="28.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="205.91" y="1279.5" >`..</text>
</g>
<g >
<title>`llvm::GVN::processInstruction(llvm::Instruction*) (66 samples, 2.63%)</title><rect x="802.3" y="5829" width="31.0" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="805.30" y="5839.5" >`l..</text>
</g>
<g >
<title>`core::core__clock_gettime_nanoseconds() (1 samples, 0.04%)</title><rect x="596.2" y="5829" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="599.25" y="5839.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="123.6" y="549" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="126.59" y="559.5" ></text>
</g>
<g >
<title>`__v2printf (1 samples, 0.04%)</title><rect x="408.5" y="2613" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="411.50" y="2623.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.04%)</title><rect x="832.8" y="5749" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="835.81" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="4037" width="1.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="411.03" y="4047.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="413.7" y="4837" width="1.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="416.66" y="4847.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="313.2" y="5477" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="316.21" y="5487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="44.7" y="5413" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="47.73" y="5423.5" ></text>
</g>
<g >
<title>`llvm::DIBuilder::createBasicType(llvm::StringRef, unsigned long (1 samples, 0.04%)</title><rect x="656.3" y="5445" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="659.32" y="5455.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="123.6" y="661" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="126.59" y="671.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="2805" width="1.0" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="427.92" y="2815.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldGetElementPtr(llvm::Type*, llvm::Constant*, b (1 samples, 0.04%)</title><rect x="869.4" y="5765" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="872.42" y="5775.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (12 samples, 0.48%)</title><rect x="233.9" y="2309" width="5.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="236.89" y="2319.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.04%)</title><rect x="94.0" y="3509" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="97.02" y="3519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="423.0" y="2997" width="1.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="426.05" y="3007.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.04%)</title><rect x="747.9" y="5749" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="750.85" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="19.9" y="3381" width="0.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="22.86" y="3391.5" ></text>
</g>
<g >
<title>`BUILD-INLINE-BITCODE-PATHNAME^CORE^FN^^ (1 samples, 0.04%)</title><rect x="952.0" y="6005" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="955.03" y="6015.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="249.4" y="821" width="0.4" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="252.38" y="831.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.4" y="2309" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="412.44" y="2319.5" ></text>
</g>
<g >
<title>`collectBitParts(llvm::Value*, bool, bool, std::__1::map&lt;llvm::V (1 samples, 0.04%)</title><rect x="773.7" y="5781" width="0.4" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="776.67" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="413.7" y="4949" width="1.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="416.66" y="4959.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="398.2" y="3093" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="401.17" y="3103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="294.0" y="3909" width="0.9" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="296.97" y="3919.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (3 samples, 0.12%)</title><rect x="659.1" y="5573" width="1.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="662.14" y="5583.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatt (1 samples, 0.04%)</title><rect x="702.8" y="5749" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="705.79" y="5759.5" ></text>
</g>
<g >
<title>`PROCESS-LTV^CLASP-CLEAVIR-AST^FN^^ (55 samples, 2.19%)</title><rect x="323.5" y="5381" width="25.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="326.54" y="5391.5" >`..</text>
</g>
<g >
<title>`free (1 samples, 0.04%)</title><rect x="939.8" y="5893" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="942.82" y="5903.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.04%)</title><rect x="947.3" y="5877" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="950.33" y="5887.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="382.7" y="4837" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="385.68" y="4847.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="233.9" y="421" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="236.89" y="431.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (32 samples, 1.27%)</title><rect x="187.4" y="485" width="15.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="190.42" y="495.5" ></text>
</g>
<g >
<title>`OUTPUT-BITCODE^COMPILER^FN^^ (16 samples, 0.64%)</title><rect x="953.9" y="6021" width="7.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="956.91" y="6031.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::pointsToConstantMemory(llvm::MemoryLocatio (1 samples, 0.04%)</title><rect x="907.0" y="5765" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="909.97" y="5775.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="276.1" y="4245" width="5.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="279.13" y="4255.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="33.9" y="5381" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="36.94" y="5391.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.3" y="4053" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="414.31" y="4063.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::get(unsigned int, llvm::Constant*, llvm::Co (1 samples, 0.04%)</title><rect x="666.2" y="5493" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="669.18" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="434.8" y="5509" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="437.78" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3381" width="3.8" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="420.41" y="3391.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (3 samples, 0.12%)</title><rect x="202.9" y="901" width="1.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="205.91" y="911.5" ></text>
</g>
<g >
<title>`llvm::AliasSetTracker::addPointer(llvm::Value*, unsigned long l (1 samples, 0.04%)</title><rect x="919.2" y="5813" width="0.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="922.17" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4341" width="0.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="419.48" y="4351.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="20.3" y="3285" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="23.33" y="3295.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="422.1" y="2405" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="425.11" y="2415.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="425.9" y="2805" width="0.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="428.86" y="2815.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (7 samples, 0.28%)</title><rect x="268.6" y="709" width="3.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="271.62" y="719.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="135.8" y="4213" width="0.5" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="138.79" y="4223.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="489.7" y="5797" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="492.70" y="5807.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (1 samples, 0.04%)</title><rect x="677.0" y="5797" width="0.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="679.98" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="124.5" y="2549" width="1.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="127.53" y="2559.5" ></text>
</g>
<g >
<title>`llvm::APInt::sdiv(llvm::APInt const&amp;) const (1 samples, 0.04%)</title><rect x="751.6" y="5685" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="754.61" y="5695.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.4" y="2325" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="412.44" y="2335.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm:: (1 samples, 0.04%)</title><rect x="634.7" y="5269" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="637.73" y="5279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="247.5" y="805" width="1.9" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="250.50" y="815.5" ></text>
</g>
<g >
<title>`llvm::AAResults::Model&lt;llvm::ScopedNoAliasAAResult&gt;::getModRefI (1 samples, 0.04%)</title><rect x="763.8" y="5765" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="766.81" y="5775.5" ></text>
</g>
<g >
<title>`OPTIMIZED-GRAMMAR-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="133.0" y="4565" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="135.98" y="4575.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="303.8" y="5845" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="306.83" y="5855.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="276.1" y="4117" width="0.5" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="279.13" y="4127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="414.1" y="3349" width="0.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="417.13" y="3359.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (11 samples, 0.44%)</title><rect x="49.9" y="5573" width="5.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="52.90" y="5583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="258.8" y="1541" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="261.77" y="1551.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (1 samples, 0.04%)</title><rect x="523.5" y="5717" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="526.49" y="5727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="314.6" y="5141" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="317.62" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (31 samples, 1.23%)</title><rect x="257.4" y="2181" width="14.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="260.36" y="2191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="379.9" y="4885" width="2.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="382.86" y="4895.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignment(llvm::Type*, bool) const (1 samples, 0.04%)</title><rect x="882.6" y="5829" width="0.4" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="885.56" y="5839.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (32 samples, 1.27%)</title><rect x="187.4" y="101" width="15.0" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="190.42" y="111.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.04%)</title><rect x="807.5" y="5637" width="0.4" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="810.46" y="5647.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="552.6" y="5749" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="555.59" y="5759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="3141" width="0.4" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="415.25" y="3151.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="124.5" y="2693" width="1.4" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="127.53" y="2703.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (5 samples, 0.20%)</title><rect x="397.7" y="4373" width="2.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="400.70" y="4383.5" ></text>
</g>
<g >
<title>`LTV/CONS^LITERAL^FN^^ (3 samples, 0.12%)</title><rect x="673.7" y="5765" width="1.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="676.69" y="5775.5" ></text>
</g>
<g >
<title>`llvm::Float2IntPass::runImpl(llvm::Function&amp;) (1 samples, 0.04%)</title><rect x="857.7" y="5893" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="860.68" y="5903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="97.8" y="3701" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="100.77" y="3711.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="395.8" y="4837" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="398.82" y="4847.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="295.4" y="3237" width="1.4" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="298.38" y="3247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="247.0" y="421" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="250.03" y="431.5" ></text>
</g>
<g >
<title>`runImpl(llvm::Function&amp;, llvm::LazyValueInfo*, llvm::SimplifyQu (17 samples, 0.68%)</title><rect x="690.1" y="5877" width="8.0" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="693.12" y="5887.5" ></text>
</g>
<g >
<title>`CST-TO-AST^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="312.7" y="5749" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="315.74" y="5759.5" ></text>
</g>
<g >
<title>`wrapped_APInt_O__makeAPIntWidth_core__Integer_spuintbool (1 samples, 0.04%)</title><rect x="665.7" y="5589" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="668.71" y="5599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="455.0" y="5749" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="457.96" y="5759.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="821" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="423.70" y="831.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (31 samples, 1.23%)</title><rect x="257.4" y="2485" width="14.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="260.36" y="2495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="391.6" y="2789" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="394.60" y="2799.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="122.6" y="2693" width="1.9" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="125.65" y="2703.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (1 samples, 0.04%)</title><rect x="167.7" y="1493" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="170.71" y="1503.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (1 samples, 0.04%)</title><rect x="372.8" y="5669" width="0.5" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="375.82" y="5679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (14 samples, 0.56%)</title><rect x="17.5" y="4181" width="6.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="20.51" y="4191.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="25.5" y="4453" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="28.49" y="4463.5" ></text>
</g>
<g >
<title>`CST-EVAL^CLEAVIR-ENVIRONMENT^((T T CLASP-GLOBAL-ENVIRONMENT T)) (2 samples, 0.08%)</title><rect x="287.9" y="4853" width="0.9" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="290.87" y="4863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (23 samples, 0.91%)</title><rect x="423.0" y="4405" width="10.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="426.05" y="4415.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="233.9" y="341" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="236.89" y="351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="2517" width="1.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="434.50" y="2527.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (1 samples, 0.04%)</title><rect x="18.0" y="3445" width="0.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="20.98" y="3455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.6" y="2597" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="424.64" y="2607.5" ></text>
</g>
<g >
<title>`llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm: (1 samples, 0.04%)</title><rect x="611.3" y="5205" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="614.26" y="5215.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="3493" width="3.8" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="420.41" y="3503.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="178.5" y="2245" width="1.9" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="181.50" y="2255.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="422.1" y="2149" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="425.11" y="2159.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::ConstantExpr*, llv (1 samples, 0.04%)</title><rect x="861.9" y="5733" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="864.91" y="5743.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="409.4" y="2245" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="412.44" y="2255.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="182.7" y="453" width="4.7" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="185.73" y="463.5" ></text>
</g>
<g >
<title>`llvm::removeUnreachableBlocks(llvm::Function&amp;, llvm::LazyValueI (1 samples, 0.04%)</title><rect x="936.5" y="5877" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="939.54" y="5887.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (39 samples, 1.55%)</title><rect x="254.1" y="3509" width="18.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="257.07" y="3519.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="92.1" y="2853" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="95.14" y="2863.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="255.5" y="2869" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="258.48" y="2879.5" ></text>
</g>
<g >
<title>`SEQ-ITERATOR-REF^CORE^FN^^ (1 samples, 0.04%)</title><rect x="423.0" y="2037" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="426.05" y="2047.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="411.3" y="4181" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="414.31" y="4191.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.04%)</title><rect x="295.8" y="1941" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="298.85" y="1951.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="1765" width="4.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="279.60" y="1775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="231.1" y="3445" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="234.07" y="3455.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="294.0" y="4293" width="2.8" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="296.97" y="4303.5" ></text>
</g>
<g >
<title>`MAKE-VALUES-LOCATION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="428.2" y="2229" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="431.21" y="2239.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="295.4" y="2101" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="298.38" y="2111.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.04%)</title><rect x="888.7" y="5621" width="0.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="891.66" y="5631.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="255.0" y="2933" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="258.01" y="2943.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="417.9" y="597" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="420.88" y="607.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (3 samples, 0.12%)</title><rect x="649.8" y="5365" width="1.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="652.75" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="239.5" y="2997" width="1.0" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="242.52" y="3007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3765" width="1.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="424.64" y="3775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="1381" width="4.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="279.60" y="1391.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (10 samples, 0.40%)</title><rect x="182.7" y="421" width="4.7" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="185.73" y="431.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="355.5" y="5701" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="358.46" y="5711.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (1 samples, 0.04%)</title><rect x="874.1" y="5781" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="877.11" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="417.4" y="1653" width="2.4" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="420.41" y="1663.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (1 samples, 0.04%)</title><rect x="331.1" y="4421" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="334.05" y="4431.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="2149" width="0.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="126.59" y="2159.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="268.2" y="1829" width="3.7" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="271.15" y="1839.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (15 samples, 0.60%)</title><rect x="232.5" y="2709" width="7.0" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="235.48" y="2719.5" ></text>
</g>
<g >
<title>`llvmo::Type_O::getPointerTo(int) (1 samples, 0.04%)</title><rect x="326.8" y="4581" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="329.83" y="4591.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3365" width="1.8" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="168.36" y="3375.5" ></text>
</g>
<g >
<title>`tryToUnrollLoop(llvm::Loop*, llvm::DominatorTree&amp;, llvm::LoopIn (2 samples, 0.08%)</title><rect x="919.6" y="5861" width="1.0" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="922.64" y="5871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="2645" width="4.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="285.70" y="2655.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="282.7" y="1333" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="285.70" y="1343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4837" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="419.48" y="4847.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (1 samples, 0.04%)</title><rect x="780.2" y="5749" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="783.24" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="278.9" y="853" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="281.95" y="863.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="5109" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="327.01" y="5119.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="395.4" y="4869" width="0.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="398.35" y="4879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="392.1" y="4133" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="395.07" y="4143.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (151 samples, 6.01%)</title><rect x="598.6" y="5717" width="70.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="601.59" y="5727.5" >`INTERPR..</text>
</g>
<g >
<title>`computeUnsignedMinMaxValuesFromKnownBits(llvm::KnownBits const&amp; (1 samples, 0.04%)</title><rect x="761.9" y="5813" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="764.93" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="314.2" y="5285" width="0.9" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="317.15" y="5295.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (7 samples, 0.28%)</title><rect x="94.5" y="3621" width="3.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="97.49" y="3631.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="640.4" y="5317" width="0.4" height="15.0" fill="rgb(248,121,121)" rx="2" ry="2" />
<text  x="643.37" y="5327.5" ></text>
</g>
<g >
<title>`MAYBE-ALLOC-CC-SETUP^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="658.2" y="5557" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="661.20" y="5567.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="178.0" y="2373" width="2.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="181.04" y="2383.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="409.4" y="3909" width="1.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="412.44" y="3919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="4085" width="3.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="420.41" y="4095.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1525" width="0.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="430.27" y="1535.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (20 samples, 0.80%)</title><rect x="16.6" y="4581" width="9.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="19.57" y="4591.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="422.1" y="2325" width="0.5" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="425.11" y="2335.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (2 samples, 0.08%)</title><rect x="887.3" y="5765" width="0.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="890.26" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.3" y="3973" width="0.5" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="414.31" y="3983.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="1381" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="428.86" y="1391.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (3 samples, 0.12%)</title><rect x="257.8" y="1589" width="1.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="260.83" y="1599.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::makeUniqueName(llvm::Value*, llvm::Smal (1 samples, 0.04%)</title><rect x="346.1" y="4917" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="349.07" y="4927.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="360.2" y="5765" width="7.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="363.15" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (340 samples, 13.52%)</title><rect x="129.2" y="5525" width="159.6" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="132.22" y="5535.5" >`core::FuncallableIn..</text>
</g>
<g >
<title>`UNIVERSAL-ERROR-HANDLER^CORE^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="4517" width="0.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="290.87" y="4527.5" ></text>
</g>
<g >
<title>`GC_mark_thread (485 samples, 19.29%)</title><rect x="962.4" y="6373" width="227.6" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="965.35" y="6383.5" >`GC_mark_thread</text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.04%)</title><rect x="52.2" y="4181" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="55.24" y="4191.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (7 samples, 0.28%)</title><rect x="908.8" y="5765" width="3.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="911.85" y="5775.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (1 samples, 0.04%)</title><rect x="52.7" y="3557" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="55.71" y="3567.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="49.9" y="5157" width="1.9" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="52.90" y="5167.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="2069" width="5.6" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="236.89" y="2079.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="424.9" y="2421" width="1.0" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="427.92" y="2431.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="415.5" y="4021" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="418.54" y="4031.5" ></text>
</g>
<g >
<title>`llvm::DebugLoc::get(unsigned int, unsigned int, llvm::MDNode co (2 samples, 0.08%)</title><rect x="624.4" y="5093" width="0.9" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="627.41" y="5103.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="242.8" y="3045" width="8.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="245.81" y="3055.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (1 samples, 0.04%)</title><rect x="807.5" y="5573" width="0.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="810.46" y="5583.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (56 samples, 2.23%)</title><rect x="60.2" y="5301" width="26.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="63.22" y="5311.5" >`..</text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (2 samples, 0.08%)</title><rect x="243.7" y="565" width="1.0" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="246.75" y="575.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="379.9" y="4725" width="1.8" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="382.86" y="4735.5" ></text>
</g>
<g >
<title>`__cxa_rethrow (1 samples, 0.04%)</title><rect x="37.7" y="4629" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="40.69" y="4639.5" ></text>
</g>
<g >
<title>`DATUM-ALLOCA^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="608.9" y="5397" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="611.92" y="5407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="236.2" y="85" width="1.9" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="239.24" y="95.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (60 samples, 2.39%)</title><rect x="202.9" y="1205" width="28.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="205.91" y="1215.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2773" width="1.0" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="427.92" y="2783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((RETURN-FROM-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2437" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="412.44" y="2447.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (183 samples, 7.28%)</title><rect x="164.9" y="4309" width="85.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="167.89" y="4319.5" >`PROCESS-P..</text>
</g>
<g >
<title>`cc_initialize_closure (1 samples, 0.04%)</title><rect x="388.8" y="3717" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="391.78" y="3727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="427.3" y="2309" width="0.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="430.27" y="2319.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (5 samples, 0.20%)</title><rect x="52.2" y="4197" width="2.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="55.24" y="4207.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (15 samples, 0.60%)</title><rect x="243.3" y="1157" width="7.0" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="246.28" y="1167.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (2 samples, 0.08%)</title><rect x="257.8" y="1573" width="1.0" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="260.83" y="1583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.20%)</title><rect x="168.2" y="1413" width="2.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="171.18" y="1423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="166.3" y="821" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="169.30" y="831.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="232.5" y="2549" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="235.48" y="2559.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3845" width="1.0" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="424.64" y="3855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="395.8" y="4949" width="4.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="398.82" y="4959.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="409.4" y="4069" width="1.4" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="412.44" y="4079.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="631.9" y="5285" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="634.92" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (4 samples, 0.16%)</title><rect x="252.2" y="3333" width="1.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="255.20" y="3343.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="240.5" y="3061" width="2.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="243.46" y="3071.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="349.4" y="5365" width="0.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="352.36" y="5375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="2389" width="0.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="428.86" y="2399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1189" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="423.70" y="1199.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm:: (1 samples, 0.04%)</title><rect x="664.3" y="5477" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="667.30" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-LAMBDA-LIST-CODE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="345.6" y="4821" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="348.60" y="4831.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="391.6" y="2453" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="394.60" y="2463.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (4 samples, 0.16%)</title><rect x="252.2" y="3509" width="1.9" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="255.20" y="3519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="423.0" y="2805" width="1.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="426.05" y="2815.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.0" y="2309" width="0.4" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="434.96" y="2319.5" ></text>
</g>
<g >
<title>`small_free_list_remove_ptr_no_clear (1 samples, 0.04%)</title><rect x="794.3" y="5829" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="797.32" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="243.3" y="1045" width="4.2" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="246.28" y="1055.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="89.8" y="3925" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="92.79" y="3935.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.04%)</title><rect x="653.0" y="5429" width="0.5" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="656.04" y="5439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="432.0" y="1605" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="434.96" y="1615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="412.3" y="3669" width="0.4" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="415.25" y="3679.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="656.8" y="5429" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="659.79" y="5439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.4" y="3141" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="412.44" y="3151.5" ></text>
</g>
<g >
<title>`wrapped_cl__get_output_stream_string_T_sp (1 samples, 0.04%)</title><rect x="631.0" y="5157" width="0.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="633.98" y="5167.5" ></text>
</g>
<g >
<title>`core::lisp_true() (1 samples, 0.04%)</title><rect x="47.5" y="5301" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="50.55" y="5311.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1285" width="5.6" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="236.89" y="1295.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="410.8" y="4341" width="1.0" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="413.84" y="4351.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="1317" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="428.86" y="1327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="85.1" y="4917" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="88.10" y="4927.5" ></text>
</g>
<g >
<title>`MAYBE-SPILL-TO-REGISTER-SAVE-AREA^COMPILER^FN^^ (8 samples, 0.32%)</title><rect x="654.4" y="5541" width="3.8" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="657.45" y="5551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="96.8" y="3445" width="1.0" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="99.83" y="3455.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (94 samples, 3.74%)</title><rect x="312.7" y="5797" width="44.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="315.74" y="5807.5" >`COM..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="400.0" y="4821" width="2.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="403.05" y="4831.5" ></text>
</g>
<g >
<title>`OPTIMIZED-EQ-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="386.4" y="2965" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="389.44" y="2975.5" ></text>
</g>
<g >
<title>`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="665.2" y="5397" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="668.24" y="5407.5" ></text>
</g>
<g >
<title>`SET-DIFFERENCE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="393.0" y="4165" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="396.01" y="4175.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (2 samples, 0.08%)</title><rect x="376.1" y="5717" width="0.9" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="379.11" y="5727.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (5 samples, 0.20%)</title><rect x="178.0" y="2325" width="2.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="181.04" y="2335.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENTER-INSTRUCTION  (1 samples, 0.04%)</title><rect x="345.6" y="4837" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="348.60" y="4847.5" ></text>
</g>
<g >
<title>`IRC-BASIC-BLOCK-CREATE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="671.3" y="5829" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="674.34" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="180.4" y="149" width="2.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="183.38" y="159.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="861.9" y="5765" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="864.91" y="5775.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="361.1" y="5733" width="0.5" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="364.09" y="5743.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (1 samples, 0.04%)</title><rect x="38.2" y="4469" width="0.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="41.16" y="4479.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2405" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="412.90" y="2415.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (231 samples, 9.19%)</title><rect x="164.0" y="4549" width="108.4" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="166.95" y="4559.5" >`INTERPRETED-..</text>
</g>
<g >
<title>`ERROR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="336.7" y="4149" width="0.5" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="339.68" y="4159.5" ></text>
</g>
<g >
<title>`wrapped_core__generalp_T_sp (1 samples, 0.04%)</title><rect x="93.1" y="3333" width="0.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="96.08" y="3343.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.04%)</title><rect x="308.1" y="5765" width="0.4" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="311.05" y="5775.5" ></text>
</g>
<g >
<title>`READ-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="43.3" y="5045" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="46.33" y="5055.5" ></text>
</g>
<g >
<title>`HOIST-AST^CLASP-CLEAVIR^FN^^ (38 samples, 1.51%)</title><rect x="325.4" y="4885" width="17.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="328.42" y="4895.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="672.3" y="5733" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="675.28" y="5743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="452.6" y="5349" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="455.62" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1109" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="430.74" y="1119.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="247.5" y="661" width="1.9" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="250.50" y="671.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::removeNotPreservedAnalysis(llvm::Pass*) (2 samples, 0.08%)</title><rect x="928.1" y="5893" width="0.9" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="931.09" y="5903.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (145 samples, 5.77%)</title><rect x="59.8" y="5685" width="68.0" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="62.75" y="5695.5" >`CONVER..</text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.16%)</title><rect x="431.5" y="3685" width="1.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="434.50" y="3695.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (1 samples, 0.04%)</title><rect x="671.8" y="5765" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="674.81" y="5775.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.08%)</title><rect x="171.5" y="1829" width="0.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="174.46" y="1839.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorImpl&lt;llvm::OperandBundleDefT&lt;llvm::Value*&gt; &gt;:: (1 samples, 0.04%)</title><rect x="740.8" y="5797" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="743.81" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (40 samples, 1.59%)</title><rect x="232.0" y="3509" width="18.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="235.01" y="3519.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="132.0" y="4373" width="0.5" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="135.04" y="4383.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (2 samples, 0.08%)</title><rect x="34.4" y="4917" width="0.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="37.41" y="4927.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (1 samples, 0.04%)</title><rect x="258.3" y="1557" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="261.30" y="1567.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="123.6" y="725" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="126.59" y="735.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (25 samples, 0.99%)</title><rect x="16.6" y="4981" width="11.7" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="19.57" y="4991.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="317.4" y="5493" width="0.5" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="320.44" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (10 samples, 0.40%)</title><rect x="172.4" y="581" width="4.7" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="175.40" y="591.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (48 samples, 1.91%)</title><rect x="324.5" y="5141" width="22.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="327.48" y="5151.5" >`..</text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (3 samples, 0.12%)</title><rect x="285.5" y="229" width="1.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="288.52" y="239.5" ></text>
</g>
<g >
<title>`isAddOfNonZero(llvm::Value const*, llvm::Value const*, (anonymo (1 samples, 0.04%)</title><rect x="890.1" y="5781" width="0.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="893.07" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="253.1" y="3301" width="1.0" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="256.13" y="3311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="167.7" y="917" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="170.71" y="927.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="283.2" y="1205" width="1.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="286.17" y="1215.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="426.3" y="2389" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="429.33" y="2399.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="398.2" y="3237" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="401.17" y="3247.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="410.8" y="4245" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="413.84" y="4255.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="424.0" y="1541" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="426.99" y="1551.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="355.5" y="5669" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="358.46" y="5679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="2405" width="0.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="428.86" y="2415.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="282.7" y="2309" width="4.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="285.70" y="2319.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="497.2" y="5765" width="0.5" height="15.0" fill="rgb(230,95,95)" rx="2" ry="2" />
<text  x="500.21" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="391.6" y="2437" width="0.5" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="394.60" y="2447.5" ></text>
</g>
<g >
<title>0x11a477094 (5 samples, 0.20%)</title><rect x="284.6" y="1621" width="2.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="287.58" y="1631.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="92.1" y="3477" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="95.14" y="3487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2101" width="1.0" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="427.92" y="2111.5" ></text>
</g>
<g >
<title>`PROCESS-LTV^CLASP-CLEAVIR-AST^FN^^ (37 samples, 1.47%)</title><rect x="325.9" y="4853" width="17.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="328.89" y="4863.5" ></text>
</g>
<g >
<title>`HOIST-LOAD-TIME-VALUE^CLASP-CLEAVIR-AST^FN^^ (9 samples, 0.36%)</title><rect x="327.3" y="4677" width="4.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="330.30" y="4687.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (1 samples, 0.04%)</title><rect x="887.3" y="5701" width="0.4" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="890.26" y="5711.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getModule() const (1 samples, 0.04%)</title><rect x="819.7" y="5701" width="0.4" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="822.67" y="5711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (49 samples, 1.95%)</title><rect x="63.0" y="5061" width="23.0" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="66.04" y="5071.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="428.7" y="1829" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="431.68" y="1839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="4085" width="1.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="424.64" y="4095.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="165.4" y="3589" width="1.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="168.36" y="3599.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getValueOnEdge(llvm:: (2 samples, 0.08%)</title><rect x="701.4" y="5797" width="0.9" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="704.38" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="41.4" y="4565" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="44.45" y="4575.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (6 samples, 0.24%)</title><rect x="38.6" y="4565" width="2.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="41.63" y="4575.5" ></text>
</g>
<g >
<title>0x11a477094 (85 samples, 3.38%)</title><rect x="87.4" y="4661" width="39.9" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="90.45" y="4671.5" >0x1..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="409.4" y="3429" width="1.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="412.44" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.2" y="4293" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="424.17" y="4303.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="496.3" y="5765" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="499.27" y="5775.5" ></text>
</g>
<g >
<title>`MAKE-EXPRESSION-RESULT^ECLECTOR.PARSE-RESULT^((CST-CLIENT T T T (1 samples, 0.04%)</title><rect x="25.5" y="4405" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="28.49" y="4415.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (4 samples, 0.16%)</title><rect x="247.5" y="773" width="1.9" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="250.50" y="783.5" ></text>
</g>
<g >
<title>`COMPILE-WRONG-NUMBER-ARGUMENTS-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="341.8" y="4453" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="344.85" y="4463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="383.6" y="4949" width="10.8" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="386.62" y="4959.5" ></text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (1 samples, 0.04%)</title><rect x="752.1" y="5589" width="0.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="755.08" y="5599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (136 samples, 5.41%)</title><rect x="167.2" y="3013" width="63.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="170.24" y="3023.5" >`core::..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="429.6" y="2421" width="1.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="432.62" y="2431.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (1 samples, 0.04%)</title><rect x="824.8" y="5733" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="827.83" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="2885" width="1.0" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="427.92" y="2895.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (3 samples, 0.12%)</title><rect x="159.3" y="4325" width="1.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="162.26" y="4335.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="634.7" y="5285" width="0.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="637.73" y="5295.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="124.5" y="1573" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="127.53" y="1583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.1" y="3749" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="417.13" y="3759.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="85.1" y="4869" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="88.10" y="4879.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, unsigned  (2 samples, 0.08%)</title><rect x="956.3" y="5845" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="959.25" y="5855.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (4 samples, 0.16%)</title><rect x="49.9" y="4981" width="1.9" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="52.90" y="4991.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="427.3" y="2245" width="0.9" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="430.27" y="2255.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.04%)</title><rect x="752.1" y="5621" width="0.4" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="755.08" y="5631.5" ></text>
</g>
<g >
<title>`OPTIMIZED-FUNCALL-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="402.4" y="4965" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="405.39" y="4975.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="332.0" y="4581" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="334.99" y="4591.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="869" width="9.0" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="262.24" y="879.5" ></text>
</g>
<g >
<title>`core::lisp_true() (1 samples, 0.04%)</title><rect x="534.8" y="5813" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="537.76" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="123.6" y="1317" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="126.59" y="1327.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (3 samples, 0.12%)</title><rect x="125.9" y="3157" width="1.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="128.93" y="3167.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="351.7" y="5541" width="0.5" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="354.70" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-LOCAL-FUNCTION^CLEAVIR-CST-TO-AST^FN^^ (113 samples, 4.49%)</title><rect x="178.0" y="2581" width="53.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="181.04" y="2591.5" >`CONV..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="393.5" y="3957" width="0.9" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="396.48" y="3967.5" ></text>
</g>
<g >
<title>`OUTPUT-MODULE^COMPILER^FN^^ (27 samples, 1.07%)</title><rect x="948.7" y="6037" width="12.7" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="951.74" y="6047.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (4 samples, 0.16%)</title><rect x="566.2" y="5797" width="1.9" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="569.21" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (48 samples, 1.91%)</title><rect x="180.4" y="917" width="22.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="183.38" y="927.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="425.9" y="2485" width="0.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="428.86" y="2495.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (5 samples, 0.20%)</title><rect x="827.6" y="5781" width="2.4" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="830.65" y="5791.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (24 samples, 0.95%)</title><rect x="101.1" y="3701" width="11.2" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="104.06" y="3711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="425.9" y="2549" width="0.9" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="428.86" y="2559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.4" y="3253" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="389.44" y="3263.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.16%)</title><rect x="431.5" y="3509" width="1.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="434.50" y="3519.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'IF) T T T))^METHOD (8 samples, 0.32%)</title><rect x="293.5" y="5637" width="3.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="296.50" y="5647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="805" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="423.70" y="815.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="4149" width="0.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="408.68" y="4159.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="660.5" y="5445" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="663.55" y="5455.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="353.1" y="5445" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="356.11" y="5455.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="2965" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="412.90" y="2975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3557" width="3.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="420.41" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="3621" width="3.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="420.41" y="3631.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (2 samples, 0.08%)</title><rect x="768.5" y="5797" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="771.50" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="430.6" y="2197" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="433.56" y="2207.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="407.6" y="5173" width="3.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="410.56" y="5183.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="125.9" y="3141" width="1.4" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="128.93" y="3151.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (43 samples, 1.71%)</title><rect x="252.2" y="3621" width="20.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="255.20" y="3631.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="3701" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="414.78" y="3711.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (108 samples, 4.30%)</title><rect x="180.4" y="1989" width="50.7" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="183.38" y="1999.5" >`CONV..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="400.0" y="4757" width="2.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="403.05" y="4767.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (4 samples, 0.16%)</title><rect x="122.6" y="2869" width="1.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="125.65" y="2879.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (87 samples, 3.46%)</title><rect x="86.5" y="5157" width="40.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="89.51" y="5167.5" >`IN..</text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.04%)</title><rect x="324.5" y="4645" width="0.4" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="327.48" y="4655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2917" width="0.5" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="412.90" y="2927.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (20 samples, 0.80%)</title><rect x="102.9" y="3653" width="9.4" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="105.94" y="3663.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (54 samples, 2.15%)</title><rect x="323.5" y="5301" width="25.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="326.54" y="5311.5" >`..</text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::StringMapIterator&lt;llvm::Value*&gt;, bool&gt; llv (1 samples, 0.04%)</title><rect x="769.9" y="5749" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="772.91" y="5759.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.04%)</title><rect x="793.4" y="5813" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="796.38" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.0" y="2357" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="411.97" y="2367.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="284.6" y="1013" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="287.58" y="1023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="1941" width="4.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="285.70" y="1951.5" ></text>
</g>
<g >
<title>`COMPUTE-INSTRUCTION-OWNERS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="328.7" y="4453" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="331.70" y="4463.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="233.9" y="613" width="1.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="236.89" y="623.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="4389" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="408.68" y="4399.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (10 samples, 0.40%)</title><rect x="276.6" y="3861" width="4.7" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="279.60" y="3871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="4213" width="2.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="296.97" y="4223.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="233.4" y="2069" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="236.42" y="2079.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="268.6" y="1125" width="3.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="271.62" y="1135.5" ></text>
</g>
<g >
<title>`COMPILE-TOPLEVEL^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="343.3" y="4853" width="0.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="346.25" y="4863.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="408.0" y="4629" width="2.8" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="411.03" y="4639.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="424.9" y="1541" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="427.92" y="1551.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="412.3" y="3269" width="0.4" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="415.25" y="3279.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="408.5" y="2773" width="0.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="411.50" y="2783.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="178.0" y="2245" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="181.04" y="2255.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="1445" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="423.70" y="1455.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="1045" width="5.6" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="236.89" y="1055.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="51.8" y="5173" width="3.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="54.77" y="5183.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (22 samples, 0.88%)</title><rect x="167.7" y="2325" width="10.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="170.71" y="2335.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (108 samples, 4.30%)</title><rect x="180.4" y="2293" width="50.7" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="183.38" y="2303.5" >`PROC..</text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="356.4" y="5701" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="359.40" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (54 samples, 2.15%)</title><rect x="379.4" y="5589" width="25.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="382.40" y="5599.5" >`..</text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="773.7" y="5749" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="776.67" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="356.4" y="5573" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="359.40" y="5583.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (2 samples, 0.08%)</title><rect x="870.8" y="5749" width="1.0" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="873.83" y="5759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="2677" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="414.78" y="2687.5" ></text>
</g>
<g >
<title>`SIMPLE-TYPE-PREDICATE^CORE^FN^^ (2 samples, 0.08%)</title><rect x="118.0" y="3573" width="0.9" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="120.96" y="3583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (32 samples, 1.27%)</title><rect x="187.4" y="277" width="15.0" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="190.42" y="287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="428.7" y="2005" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="431.68" y="2015.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="427.3" y="3077" width="4.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="430.27" y="3087.5" ></text>
</g>
<g >
<title>`IRC-BEGIN-BLOCK^COMPILER^FN^^ (6 samples, 0.24%)</title><rect x="601.9" y="5509" width="2.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="604.88" y="5519.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (9 samples, 0.36%)</title><rect x="908.4" y="5781" width="4.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="911.38" y="5791.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.04%)</title><rect x="299.6" y="5797" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="302.60" y="5807.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="389.3" y="3717" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="392.25" y="3727.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="338.6" y="4405" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="341.56" y="4415.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="124.5" y="1749" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="127.53" y="1759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="427.3" y="2581" width="4.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="430.27" y="2591.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="3717" width="63.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="170.24" y="3727.5" >`SET-OR..</text>
</g>
<g >
<title>`getAllocationDataForFunction(llvm::Function const*, AllocType,  (1 samples, 0.04%)</title><rect x="777.4" y="5797" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="780.42" y="5807.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="293.5" y="5445" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="296.50" y="5455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="424.9" y="1605" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="427.92" y="1615.5" ></text>
</g>
<g >
<title>`HOIST-LOAD-TIME-VALUE^CLASP-CLEAVIR-AST^FN^^ (48 samples, 1.91%)</title><rect x="324.5" y="5205" width="22.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="327.48" y="5215.5" >`..</text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.08%)</title><rect x="253.1" y="3109" width="1.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="256.13" y="3119.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="1189" width="5.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="175.40" y="1199.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="693.4" y="5717" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="696.40" y="5727.5" ></text>
</g>
<g >
<title>`llvm::DILocalVariable::getImpl(llvm::LLVMContext&amp;, llvm::Metada (1 samples, 0.04%)</title><rect x="654.9" y="5381" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="657.92" y="5391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="166.3" y="949" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="169.30" y="959.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="693.4" y="5701" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="696.40" y="5711.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="16.6" y="4389" width="0.4" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="19.57" y="4399.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (1 samples, 0.04%)</title><rect x="455.9" y="5781" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="458.90" y="5791.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (3 samples, 0.12%)</title><rect x="165.8" y="2741" width="1.4" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="168.83" y="2751.5" ></text>
</g>
<g >
<title>`MAKE-EXPRESSION-RESULT^ECLECTOR.PARSE-RESULT^((CST-CLIENT T T T (1 samples, 0.04%)</title><rect x="41.0" y="4405" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="43.98" y="4415.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="165.8" y="1285" width="1.0" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="168.83" y="1295.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="99.2" y="3637" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="102.18" y="3647.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::StringMapIterator&lt;llvm::Value*&gt;, bool&gt; llv (1 samples, 0.04%)</title><rect x="634.7" y="5253" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="637.73" y="5263.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="172.4" y="645" width="5.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="175.40" y="655.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (10 samples, 0.40%)</title><rect x="524.0" y="5781" width="4.7" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="526.96" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="3333" width="1.4" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="434.50" y="3343.5" ></text>
</g>
<g >
<title>`llvm::AssumptionCache::assumptionsFor(llvm::Value const*) (1 samples, 0.04%)</title><rect x="771.8" y="5733" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="774.79" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="390.2" y="3509" width="1.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="393.19" y="3519.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="386.4" y="3061" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="389.44" y="3071.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.04%)</title><rect x="645.5" y="5269" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="648.53" y="5279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="401.0" y="3189" width="0.9" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="403.99" y="3199.5" ></text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (1 samples, 0.04%)</title><rect x="185.5" y="133" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="188.54" y="143.5" ></text>
</g>
<g >
<title>0x1225ef094 (58 samples, 2.31%)</title><rect x="100.1" y="4245" width="27.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="103.12" y="4255.5" >0..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="287.9" y="4773" width="0.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="290.87" y="4783.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="243.3" y="517" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="246.28" y="527.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="247.5" y="1045" width="2.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="250.50" y="1055.5" ></text>
</g>
<g >
<title>0x1225e9094 (3 samples, 0.12%)</title><rect x="285.5" y="165" width="1.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="288.52" y="175.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="422.1" y="2549" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="425.11" y="2559.5" ></text>
</g>
<g >
<title>`WRITE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="56.9" y="5941" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="59.94" y="5951.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="417.9" y="853" width="0.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="420.88" y="863.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="455.4" y="5797" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="458.43" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="2533" width="3.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="420.41" y="2543.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.04%)</title><rect x="573.2" y="5749" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="576.25" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="287.4" y="4981" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="290.40" y="4991.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getPointerDependencyFrom(llvm::M (1 samples, 0.04%)</title><rect x="821.5" y="5733" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="824.54" y="5743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="431.5" y="3637" width="1.9" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="434.50" y="3647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="370.9" y="5749" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="373.95" y="5759.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENCLOSE-INSTRUCTIO (34 samples, 1.35%)</title><rect x="618.8" y="5429" width="15.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="621.77" y="5439.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="429.6" y="2133" width="1.0" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="432.62" y="2143.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="415.5" y="4309" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="418.54" y="4319.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="49.9" y="5509" width="5.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="52.90" y="5519.5" ></text>
</g>
<g >
<title>`llvm::LoopAccessLegacyAnalysis::getInfo(llvm::Loop*) (1 samples, 0.04%)</title><rect x="846.4" y="5845" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="849.42" y="5855.5" ></text>
</g>
<g >
<title>`llvm::BranchProbabilityInfo::calcLoopBranchHeuristics(llvm::Bas (1 samples, 0.04%)</title><rect x="851.6" y="5861" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="854.58" y="5871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (24 samples, 0.95%)</title><rect x="422.6" y="4501" width="11.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="425.58" y="4511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (52 samples, 2.07%)</title><rect x="379.4" y="5237" width="24.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="382.40" y="5247.5" >`..</text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="538.5" y="5781" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="541.51" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="3333" width="3.8" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="420.41" y="3343.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="349.8" y="5301" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="352.82" y="5311.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="249.4" y="709" width="0.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="252.38" y="719.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="48.0" y="5429" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="51.02" y="5439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="233.9" y="245" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="236.89" y="255.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getEdgeValue(llvm::Va (1 samples, 0.04%)</title><rect x="702.3" y="5781" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="705.32" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="251.3" y="3285" width="0.9" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="254.26" y="3295.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="49.9" y="5109" width="1.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="52.90" y="5119.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="428.2" y="2277" width="0.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="431.21" y="2287.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="247.5" y="1109" width="2.8" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="250.50" y="1119.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="3893" width="0.4" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="408.68" y="3903.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (4 samples, 0.16%)</title><rect x="623.9" y="5173" width="1.9" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="626.94" y="5183.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (1,438 samples, 57.20%)</title><rect x="10.5" y="6021" width="674.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="13.47" y="6031.5" >`DO-DBG-FUNCTION^COMPILER^FN^^</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="396.3" y="4757" width="3.7" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="399.29" y="4767.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="252.2" y="3237" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="255.20" y="3247.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="91.7" y="3733" width="0.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="94.67" y="3743.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((FDEFINITION-INSTRU (6 samples, 0.24%)</title><rect x="637.5" y="5429" width="2.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="640.55" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="165.4" y="2901" width="1.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="168.36" y="2911.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (4 samples, 0.16%)</title><rect x="319.8" y="5429" width="1.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="322.79" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="410.8" y="4373" width="1.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="413.84" y="4383.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="49.9" y="4949" width="1.9" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="52.90" y="4959.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomT (1 samples, 0.04%)</title><rect x="717.8" y="5829" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="720.81" y="5839.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (17 samples, 0.68%)</title><rect x="17.5" y="4373" width="8.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="20.51" y="4383.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (86 samples, 3.42%)</title><rect x="87.0" y="4917" width="40.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="89.98" y="4927.5" >`PR..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="233.9" y="325" width="0.5" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="236.89" y="335.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.04%)</title><rect x="553.1" y="5653" width="0.4" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="556.06" y="5663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3381" width="0.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="254.26" y="3391.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="4469" width="5.6" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="284.30" y="4479.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="92.1" y="3253" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="95.14" y="3263.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="553.1" y="5749" width="0.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="556.06" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2869" width="14.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="260.36" y="2879.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="68.2" y="4949" width="0.5" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="71.20" y="4959.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Pass*, llvm::Analy (1 samples, 0.04%)</title><rect x="923.4" y="5861" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="926.40" y="5871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="125.9" y="2837" width="1.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="128.93" y="2847.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="1829" width="4.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="285.70" y="1839.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (5 samples, 0.20%)</title><rect x="672.8" y="5797" width="2.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="675.75" y="5807.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="453.6" y="5829" width="0.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="456.56" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="4261" width="1.0" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="424.64" y="4271.5" ></text>
</g>
<g >
<title>`SCANNER-ACTION^CONCRETE-SYNTAX-TREE^((T T T CONS T))^METHOD^^ (1 samples, 0.04%)</title><rect x="260.2" y="197" width="0.4" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="263.18" y="207.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.04%)</title><rect x="813.1" y="5557" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="816.09" y="5567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="231.5" y="3509" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="234.54" y="3519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="4885" width="0.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="290.87" y="4895.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="252.2" y="3077" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="255.20" y="3087.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (17 samples, 0.68%)</title><rect x="35.3" y="5029" width="8.0" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="38.35" y="5039.5" ></text>
</g>
<g >
<title>`wrapped_core__generalp_T_sp (1 samples, 0.04%)</title><rect x="332.0" y="4357" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="334.99" y="4367.5" ></text>
</g>
<g >
<title>0x1225e5094 (31 samples, 1.23%)</title><rect x="257.4" y="2293" width="14.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="260.36" y="2303.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="285.5" y="293" width="1.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="288.52" y="303.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="232.0" y="3029" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="235.01" y="3039.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="294.0" y="4101" width="0.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="296.97" y="4111.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="393.5" y="4101" width="0.9" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="396.48" y="4111.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (15 samples, 0.60%)</title><rect x="232.5" y="3013" width="7.0" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="235.48" y="3023.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (1 samples, 0.04%)</title><rect x="698.1" y="5813" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="701.10" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="452.6" y="5621" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="455.62" y="5631.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.04%)</title><rect x="858.2" y="5829" width="0.4" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="861.15" y="5839.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.04%)</title><rect x="624.9" y="4965" width="0.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="627.88" y="4975.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="123.6" y="997" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="126.59" y="1007.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="177.6" y="1557" width="0.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="180.57" y="1567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3925" width="1.0" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="424.64" y="3935.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="3269" width="3.8" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="420.41" y="3279.5" ></text>
</g>
<g >
<title>`CST-&gt;AST^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="332.0" y="4757" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="334.99" y="4767.5" ></text>
</g>
<g >
<title>`wrapped_cl__boundp_Symbol_sp (1 samples, 0.04%)</title><rect x="599.5" y="5541" width="0.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="602.53" y="5551.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="235.3" y="773" width="4.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="238.30" y="783.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="257.4" y="1493" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="260.36" y="1503.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (178 samples, 7.08%)</title><rect x="167.2" y="4165" width="83.6" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="170.24" y="4175.5" >`PROCESS-..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="3269" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="434.50" y="3279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="837" width="5.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="175.40" y="847.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="295.4" y="2773" width="0.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="298.38" y="2783.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="1845" width="4.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="279.60" y="1855.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.04%)</title><rect x="240.5" y="2789" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="243.46" y="2799.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (1 samples, 0.04%)</title><rect x="49.9" y="4389" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="52.90" y="4399.5" ></text>
</g>
<g >
<title>`SEQ-ITERATOR-ENDP^CORE^FN^^ (1 samples, 0.04%)</title><rect x="532.4" y="5813" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="535.41" y="5823.5" ></text>
</g>
<g >
<title>`SET-PREDECESSORS^CLEAVIR-IR^FN^^ (4 samples, 0.16%)</title><rect x="581.2" y="5829" width="1.9" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="584.23" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="380.3" y="4677" width="1.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="383.33" y="4687.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="424.9" y="1733" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="427.92" y="1743.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="61.2" y="5045" width="0.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="64.16" y="5055.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="254.1" y="3381" width="1.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="257.07" y="3391.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="172.4" y="1685" width="5.6" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="175.40" y="1695.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.04%)</title><rect x="879.3" y="5749" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="882.28" y="5759.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (8 samples, 0.32%)</title><rect x="336.2" y="4597" width="3.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="339.21" y="4607.5" ></text>
</g>
<g >
<title>`llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::~BlockFrequency (1 samples, 0.04%)</title><rect x="924.8" y="5861" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="927.81" y="5871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="1013" width="5.6" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="236.89" y="1023.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (1 samples, 0.04%)</title><rect x="26.0" y="4453" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="28.96" y="4463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="381.7" y="4357" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="384.74" y="4367.5" ></text>
</g>
<g >
<title>`CONVERT-VARIABLE^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="97.8" y="3717" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="100.77" y="3727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="414.1" y="4133" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="417.13" y="4143.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="125.9" y="2389" width="1.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="128.93" y="2399.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="925.7" y="5813" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="928.74" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.04%)</title><rect x="379.4" y="5061" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="382.40" y="5071.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (1 samples, 0.04%)</title><rect x="19.9" y="3205" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="22.86" y="3215.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="432.9" y="3237" width="0.5" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="435.90" y="3247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="105.8" y="3221" width="0.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="108.75" y="3231.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="382.7" y="4789" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="385.68" y="4799.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.04%)</title><rect x="178.0" y="2117" width="0.5" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="181.04" y="2127.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="4789" width="0.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="290.87" y="4799.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="401.0" y="2757" width="0.9" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="403.99" y="2767.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="295.4" y="2053" width="0.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="298.38" y="2063.5" ></text>
</g>
<g >
<title>`llvm::PassManagerBuilder::populateModulePassManager(llvm::legac (2 samples, 0.08%)</title><rect x="685.4" y="5941" width="1.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="688.43" y="5951.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpBinOp(llvm::ICmpInst&amp;) (1 samples, 0.04%)</title><rect x="899.0" y="5829" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="901.99" y="5839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="393.5" y="4133" width="0.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="396.48" y="4143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="400.0" y="4469" width="2.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="403.05" y="4479.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="332.0" y="4661" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="334.99" y="4671.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (86 samples, 3.42%)</title><rect x="87.0" y="4949" width="40.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="89.98" y="4959.5" >`IN..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="92.1" y="3157" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="95.14" y="3167.5" ></text>
</g>
<g >
<title>0x11a477094 (340 samples, 13.52%)</title><rect x="129.2" y="5621" width="159.6" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="132.22" y="5631.5" >0x11a477094</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="165.8" y="1157" width="1.0" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="168.83" y="1167.5" ></text>
</g>
<g >
<title>0x11a477094 (12 samples, 0.48%)</title><rect x="281.3" y="3557" width="5.6" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="284.30" y="3567.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="320.7" y="5237" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="323.72" y="5247.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="36.8" y="3621" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="39.75" y="3631.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2117" width="14.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="260.36" y="2127.5" ></text>
</g>
<g >
<title>`FUDGE-VALUES-TYPE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="805" width="0.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="171.18" y="815.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="412.3" y="3253" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="415.25" y="3263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (17 samples, 0.68%)</title><rect x="242.8" y="2901" width="8.0" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="245.81" y="2911.5" ></text>
</g>
<g >
<title>`core::core__sl_boundp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="510.4" y="5733" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="513.35" y="5743.5" ></text>
</g>
<g >
<title>`C+ (1 samples, 0.04%)</title><rect x="663.4" y="5621" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="666.37" y="5631.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm:: (2 samples, 0.08%)</title><rect x="787.7" y="5797" width="1.0" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="790.75" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="401.9" y="3733" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="404.93" y="3743.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (4 samples, 0.16%)</title><rect x="92.1" y="3685" width="1.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="95.14" y="3695.5" ></text>
</g>
<g >
<title>`SLOT-EXISTS-P^COMMON-LISP^FN^^ (3 samples, 0.12%)</title><rect x="508.5" y="5749" width="1.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="511.47" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="2245" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="428.86" y="2255.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (34 samples, 1.35%)</title><rect x="256.0" y="3253" width="15.9" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="258.95" y="3263.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="36.3" y="3813" width="0.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="39.28" y="3823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="428.7" y="1781" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="431.68" y="1791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="401.9" y="3141" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="404.93" y="3151.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.04%)</title><rect x="297.7" y="5253" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="300.72" y="5263.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="398.6" y="3237" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="401.64" y="3247.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (2 samples, 0.08%)</title><rect x="49.9" y="4677" width="0.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="52.90" y="4687.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="2597" width="3.8" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="420.41" y="2607.5" ></text>
</g>
<g >
<title>`CST-FROM-ELEMENT^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="323.1" y="5349" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="326.07" y="5359.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="125.9" y="3237" width="1.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="128.93" y="3247.5" ></text>
</g>
<g >
<title>`core::lisp_true() (1 samples, 0.04%)</title><rect x="92.1" y="2837" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="95.14" y="2847.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="132.0" y="4581" width="1.0" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="135.04" y="4591.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="424.9" y="1829" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="427.92" y="1839.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.04%)</title><rect x="746.4" y="5669" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="749.44" y="5679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="243.3" y="1509" width="7.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="246.28" y="1519.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="28.8" y="4981" width="0.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="31.77" y="4991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="2613" width="0.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="428.86" y="2623.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (20 samples, 0.80%)</title><rect x="112.8" y="3749" width="9.4" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="115.79" y="3759.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (58 samples, 2.31%)</title><rect x="100.1" y="4053" width="27.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="103.12" y="4063.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (55 samples, 2.19%)</title><rect x="60.7" y="5269" width="25.8" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="63.69" y="5279.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="2709" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="414.78" y="2719.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.0" y="2053" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="434.96" y="2063.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="278.9" y="389" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="281.95" y="399.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (25 samples, 0.99%)</title><rect x="16.6" y="4917" width="11.7" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="19.57" y="4927.5" ></text>
</g>
<g >
<title>`llvm::SSAUpdaterImpl&lt;llvm::SSAUpdater&gt;::GetValue(llvm::BasicBlo (1 samples, 0.04%)</title><rect x="815.4" y="5733" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="818.44" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="325.9" y="4741" width="1.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="328.89" y="4751.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-RETURN^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="853" width="0.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="171.18" y="863.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (2 samples, 0.08%)</title><rect x="769.4" y="5813" width="1.0" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="772.44" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3045" width="3.8" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="420.41" y="3055.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.04%)</title><rect x="865.2" y="5765" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="868.19" y="5775.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="285.1" y="709" width="0.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="288.05" y="719.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="45.2" y="5445" width="1.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="48.20" y="5455.5" ></text>
</g>
<g >
<title>`IRC-CCLASP-FUNCTION-CREATE^COMPILER^FN^^ (11 samples, 0.44%)</title><rect x="671.8" y="5829" width="5.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="674.81" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="43.8" y="5061" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="46.79" y="5071.5" ></text>
</g>
<g >
<title>`LTV/CONS^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="311.8" y="5813" width="0.9" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="314.81" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1845" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="430.74" y="1855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="396.3" y="4645" width="3.7" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="399.29" y="4655.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="180.4" y="37" width="2.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="183.38" y="47.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (86 samples, 3.42%)</title><rect x="87.0" y="4789" width="40.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="89.98" y="4799.5" >`co..</text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="61.2" y="5061" width="0.4" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="64.16" y="5071.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="19.9" y="3637" width="0.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="22.86" y="3647.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="4613" width="0.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="290.87" y="4623.5" ></text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (1 samples, 0.04%)</title><rect x="342.3" y="4517" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="345.32" y="4527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3477" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="404.93" y="3487.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="420.7" y="837" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="423.70" y="847.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="123.6" y="1109" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="126.59" y="1119.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="423.0" y="3845" width="4.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="426.05" y="3855.5" ></text>
</g>
<g >
<title>`getFoldedCast(llvm::Instruction::CastOps, llvm::Constant*, llvm (1 samples, 0.04%)</title><rect x="858.2" y="5813" width="0.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="861.15" y="5823.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (17 samples, 0.68%)</title><rect x="623.5" y="5221" width="7.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="626.47" y="5231.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (5 samples, 0.20%)</title><rect x="397.7" y="4213" width="2.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="400.70" y="4223.5" ></text>
</g>
<g >
<title>`MODULE-MAKE-GLOBAL-STRING^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="355.0" y="5541" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="357.99" y="5551.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="865.7" y="5797" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="868.66" y="5807.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="242.8" y="1813" width="0.5" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="245.81" y="1823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="396.8" y="3861" width="0.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="399.76" y="3871.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="37.2" y="3893" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="40.22" y="3903.5" ></text>
</g>
<g >
<title>`llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&amp;) (1 samples, 0.04%)</title><rect x="838.9" y="5861" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="841.91" y="5871.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="647.9" y="5285" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="650.88" y="5295.5" ></text>
</g>
<g >
<title>`wrapped_core__class_stamp_for_instances_Instance_sp (1 samples, 0.04%)</title><rect x="131.1" y="4549" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="134.10" y="4559.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="247.5" y="597" width="1.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="250.50" y="607.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, un (1 samples, 0.04%)</title><rect x="785.9" y="5845" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="788.87" y="5855.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (10 samples, 0.40%)</title><rect x="313.2" y="5637" width="4.7" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="316.21" y="5647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="424.0" y="1669" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="426.99" y="1679.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="693.4" y="5733" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="696.40" y="5743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (31 samples, 1.23%)</title><rect x="257.4" y="2629" width="14.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="260.36" y="2639.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="260.6" y="389" width="7.6" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="263.64" y="399.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="386.9" y="3525" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="389.91" y="3535.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="421.2" y="4261" width="0.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="424.17" y="4271.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="386.0" y="3429" width="0.9" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="388.97" y="3439.5" ></text>
</g>
<g >
<title>`cc_save_values (1 samples, 0.04%)</title><rect x="391.1" y="2901" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="394.13" y="2911.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="396.8" y="3717" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="399.76" y="3727.5" ></text>
</g>
<g >
<title>`CST-FROM-ELEMENT^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="5077" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="327.01" y="5087.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (40 samples, 1.59%)</title><rect x="232.0" y="4021" width="18.8" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="235.01" y="4031.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (2 samples, 0.08%)</title><rect x="914.9" y="5813" width="1.0" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="917.95" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="417.4" y="4533" width="5.2" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="420.41" y="4543.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (6 samples, 0.24%)</title><rect x="88.9" y="3973" width="2.8" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="91.85" y="3983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="2117" width="1.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="432.62" y="2127.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (6 samples, 0.24%)</title><rect x="722.0" y="5845" width="2.9" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="725.04" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="338.6" y="4373" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="341.56" y="4383.5" ></text>
</g>
<g >
<title>`core::MultipleValues::valueGet(int, int) const (1 samples, 0.04%)</title><rect x="78.5" y="4949" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="81.53" y="4959.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="432.4" y="2325" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="435.43" y="2335.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="295.4" y="2245" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="298.38" y="2255.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (9 samples, 0.36%)</title><rect x="282.7" y="3125" width="4.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="285.70" y="3135.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::getModRefInfo(llvm::ImmutableCallSite, l (1 samples, 0.04%)</title><rect x="787.7" y="5765" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="790.75" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2101" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="412.90" y="2111.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="34.9" y="4309" width="0.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="37.88" y="4319.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (2 samples, 0.08%)</title><rect x="134.9" y="4341" width="0.9" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="137.85" y="4351.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="19.9" y="3605" width="0.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="22.86" y="3615.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="413.7" y="4309" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="416.66" y="4319.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (2 samples, 0.08%)</title><rect x="376.1" y="5733" width="0.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="379.11" y="5743.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="259.7" y="133" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="262.71" y="143.5" ></text>
</g>
<g >
<title>`wrapped_cl__make_hash_table_T_spFixnum_spNumber_spReal_spSymbol (1 samples, 0.04%)</title><rect x="372.8" y="5797" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="375.82" y="5807.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="95.9" y="3429" width="0.5" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="98.89" y="3439.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (137 samples, 5.45%)</title><rect x="167.2" y="3973" width="64.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="170.24" y="3983.5" >`PROCES..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="422.1" y="2645" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="425.11" y="2655.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="2565" width="1.0" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="427.92" y="2575.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="3301" width="1.0" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="424.64" y="3311.5" ></text>
</g>
<g >
<title>`VAR-TO-LEXICAL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="132.5" y="4469" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="135.51" y="4479.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="1893" width="5.6" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="236.89" y="1903.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="427.3" y="2885" width="4.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="430.27" y="2895.5" ></text>
</g>
<g >
<title>`COERCE-TO-CONDITION^CORE^FN^^ (1 samples, 0.04%)</title><rect x="332.0" y="4421" width="0.5" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="334.99" y="4431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.9" y="3573" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="396.95" y="3583.5" ></text>
</g>
<g >
<title>0x1225f1094 (1 samples, 0.04%)</title><rect x="287.4" y="5029" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="290.40" y="5039.5" ></text>
</g>
<g >
<title>`CONVERT-CALLED-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T T T T) (3 samples, 0.12%)</title><rect x="168.6" y="805" width="1.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="171.65" y="815.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="167.7" y="1685" width="3.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="170.71" y="1695.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::InstSimplifier::runOnFunction(llvm::Func (9 samples, 0.36%)</title><rect x="842.2" y="5893" width="4.2" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="845.20" y="5903.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.04%)</title><rect x="746.4" y="5637" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="749.44" y="5647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2789" width="4.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="279.60" y="2799.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (6 samples, 0.24%)</title><rect x="95.0" y="3605" width="2.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="97.96" y="3615.5" ></text>
</g>
<g >
<title>`wrapped_cl__make_hash_table_T_spFixnum_spNumber_spReal_spSymbol (1 samples, 0.04%)</title><rect x="330.1" y="4421" width="0.5" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="333.11" y="4431.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="61.6" y="4933" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="64.63" y="4943.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.04%)</title><rect x="789.2" y="5765" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="792.16" y="5775.5" ></text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (1 samples, 0.04%)</title><rect x="142.8" y="4261" width="0.5" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="145.83" y="4271.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ENCLOSE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="407.1" y="5557" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="410.09" y="5567.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (2 samples, 0.08%)</title><rect x="547.4" y="5781" width="1.0" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="550.43" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="281.3" y="3253" width="1.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="284.30" y="3263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="393.5" y="4245" width="0.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="396.48" y="4255.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((SYMBOL))^METHOD^^ (1 samples, 0.04%)</title><rect x="112.3" y="3845" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="115.32" y="3855.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="629.6" y="5157" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="632.57" y="5167.5" ></text>
</g>
<g >
<title>`core::make_unbound_setf_symbol_function(gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="423.5" y="1701" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="426.52" y="1711.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (12 samples, 0.48%)</title><rect x="233.9" y="2101" width="5.6" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="236.89" y="2111.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.04%)</title><rect x="13.8" y="5541" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="16.75" y="5551.5" ></text>
</g>
<g >
<title>`VREF^CORE^FN^^ (1 samples, 0.04%)</title><rect x="673.2" y="5749" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="676.22" y="5759.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.04%)</title><rect x="295.8" y="1813" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="298.85" y="1823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="168.2" y="1477" width="2.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="171.18" y="1487.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (4 samples, 0.16%)</title><rect x="168.2" y="1141" width="1.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="171.18" y="1151.5" ></text>
</g>
<g >
<title>`getCalledFunction(llvm::Value const*, bool, bool&amp;) (1 samples, 0.04%)</title><rect x="893.8" y="5781" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="896.83" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="349.4" y="5349" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="352.36" y="5359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="26.0" y="4373" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="28.96" y="4383.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="4949" width="2.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="296.97" y="4959.5" ></text>
</g>
<g >
<title>`ELIMINATE-LOAD-TIME-VALUE-INPUTS^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="319.8" y="5381" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="322.79" y="5391.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="429.6" y="1893" width="1.0" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="432.62" y="1903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="421.6" y="2165" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="424.64" y="2175.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="35.8" y="4949" width="7.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="38.82" y="4959.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="432.0" y="2021" width="0.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="434.96" y="2031.5" ></text>
</g>
<g >
<title>`wrapped_cl__error_T_spList_sp (1 samples, 0.04%)</title><rect x="127.8" y="5621" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="130.81" y="5631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="2421" width="0.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="428.86" y="2431.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.04%)</title><rect x="366.3" y="5733" width="0.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="369.25" y="5743.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="308.1" y="5813" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="311.05" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="36.3" y="3973" width="1.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="39.28" y="3983.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="167.7" y="1381" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="170.71" y="1391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="247.5" y="821" width="1.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="250.50" y="831.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'BLOCK) T T T))^MET (10 samples, 0.40%)</title><rect x="172.4" y="261" width="4.7" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="175.40" y="271.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.04%)</title><rect x="829.1" y="5701" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="832.05" y="5711.5" ></text>
</g>
<g >
<title>`FINALIZE-TRANSIENT-DATUM-INDICES^LITERAL^FN^^ (3 samples, 0.12%)</title><rect x="10.5" y="5989" width="1.4" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="13.47" y="5999.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="425.9" y="2469" width="0.9" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="428.86" y="2479.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (2 samples, 0.08%)</title><rect x="259.2" y="197" width="1.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="262.24" y="207.5" ></text>
</g>
<g >
<title>`DBG-CREATE-FUNCTION-TYPE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="670.9" y="5797" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="673.88" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="400.0" y="4709" width="2.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="403.05" y="4719.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="669.9" y="5765" width="0.5" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="672.94" y="5775.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (3 samples, 0.12%)</title><rect x="125.9" y="3077" width="1.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="128.93" y="3087.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'IF) T T T))^METHOD (11 samples, 0.44%)</title><rect x="276.1" y="4309" width="5.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="279.13" y="4319.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="2805" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="414.78" y="2815.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="4533" width="2.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="296.97" y="4543.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="36.3" y="3925" width="1.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="39.28" y="3935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="395.4" y="4901" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="398.35" y="4911.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="577.9" y="5733" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="580.94" y="5743.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="177.6" y="1525" width="0.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="180.57" y="1535.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="421.6" y="3237" width="1.0" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="424.64" y="3247.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.04%)</title><rect x="723.4" y="5781" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="726.44" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="324.9" y="4965" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="327.95" y="4975.5" ></text>
</g>
<g >
<title>`PARSE-FUNCTION-TYPE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="127.8" y="5669" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="130.81" y="5679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (40 samples, 1.59%)</title><rect x="232.0" y="3957" width="18.8" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="235.01" y="3967.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2597" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="412.44" y="2607.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (3 samples, 0.12%)</title><rect x="134.4" y="4389" width="1.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="137.38" y="4399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="4181" width="1.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="412.44" y="4191.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="660.1" y="5493" width="0.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="663.08" y="5503.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="240.9" y="2821" width="0.5" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="243.93" y="2831.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (17 samples, 0.68%)</title><rect x="17.5" y="4421" width="8.0" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="20.51" y="4431.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="23.6" y="3717" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="26.61" y="3727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="3109" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="414.78" y="3119.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="233.9" y="725" width="1.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="236.89" y="735.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="165.8" y="2085" width="1.4" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="168.83" y="2095.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="719.2" y="5797" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="722.22" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (108 samples, 4.30%)</title><rect x="180.4" y="1461" width="50.7" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="183.38" y="1471.5" >`core..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="2981" width="3.8" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="420.41" y="2991.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (14 samples, 0.56%)</title><rect x="233.0" y="2565" width="6.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="235.95" y="2575.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="125.9" y="2949" width="1.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="128.93" y="2959.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="455.9" y="5765" width="0.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="458.90" y="5775.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.04%)</title><rect x="879.3" y="5733" width="0.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="882.28" y="5743.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (4 samples, 0.16%)</title><rect x="18.0" y="3573" width="1.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="20.98" y="3583.5" ></text>
</g>
<g >
<title>`wrapped_core__generalp_T_sp (1 samples, 0.04%)</title><rect x="582.2" y="5797" width="0.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="585.16" y="5807.5" ></text>
</g>
<g >
<title>`IRC-TMV-NRET^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="647.4" y="5365" width="0.9" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="650.41" y="5375.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="318.4" y="5413" width="0.4" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="321.38" y="5423.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.3" y="3493" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="414.31" y="3503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="123.6" y="2021" width="0.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="126.59" y="2031.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="419.3" y="821" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="422.29" y="831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="388.8" y="3733" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="391.78" y="3743.5" ></text>
</g>
<g >
<title>`GEN-MEMREF-ADDRESS^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="648.8" y="5413" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="651.81" y="5423.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (4 samples, 0.16%)</title><rect x="315.6" y="5333" width="1.8" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="318.56" y="5343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="36.8" y="3413" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="39.75" y="3423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="4053" width="1.0" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="424.64" y="4063.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="409.4" y="3333" width="1.0" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="412.44" y="3343.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4101" width="1.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="39.28" y="4111.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="33.0" y="5269" width="0.5" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="36.00" y="5279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="180.4" y="213" width="2.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="183.38" y="223.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (2 samples, 0.08%)</title><rect x="19.9" y="3333" width="0.9" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="22.86" y="3343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="430.6" y="1621" width="0.4" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="433.56" y="1631.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="345.6" y="4933" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="348.60" y="4943.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((MEMREF2-INSTRUCTIO (2 samples, 0.08%)</title><rect x="628.2" y="5205" width="0.9" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="631.16" y="5215.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="247.5" y="85" width="1.9" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="250.50" y="95.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'BLOCK) T T T))^MET (40 samples, 1.59%)</title><rect x="232.0" y="3557" width="18.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="235.01" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="381.7" y="4693" width="1.0" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="384.74" y="4703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="352.6" y="5413" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="355.64" y="5423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="243.3" y="709" width="1.4" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="246.28" y="719.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="433.4" y="4181" width="0.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="436.37" y="4191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="407.6" y="5189" width="3.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="410.56" y="5199.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="410.4" y="3285" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="413.37" y="3295.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="405.7" y="4613" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="408.68" y="4623.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="1877" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="423.70" y="1887.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="295.4" y="2965" width="0.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="298.38" y="2975.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (4 samples, 0.16%)</title><rect x="825.3" y="5653" width="1.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="828.30" y="5663.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (92 samples, 3.66%)</title><rect x="12.8" y="5717" width="43.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="15.82" y="5727.5" >`CAL..</text>
</g>
<g >
<title>`CST-FROM-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.9" y="5093" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="327.95" y="5103.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="412.7" y="4965" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="415.72" y="4975.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.08%)</title><rect x="313.2" y="5525" width="1.0" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="316.21" y="5535.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.04%)</title><rect x="391.6" y="2213" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="394.60" y="2223.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (48 samples, 1.91%)</title><rect x="324.5" y="5173" width="22.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="327.48" y="5183.5" >`..</text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="661.0" y="5509" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="664.02" y="5519.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="4677" width="2.8" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="296.97" y="4687.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.04%)</title><rect x="554.0" y="5781" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="557.00" y="5791.5" ></text>
</g>
<g >
<title>`translate::from_object&lt;llvm::ArrayRef&lt;llvm::Value*&gt;, std::__1:: (1 samples, 0.04%)</title><rect x="646.9" y="5301" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="649.94" y="5311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="294.0" y="4405" width="2.8" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="296.97" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="417.9" y="213" width="0.5" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="420.88" y="223.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="399.1" y="3605" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="402.11" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3605" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="414.78" y="3615.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="3989" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="408.68" y="3999.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (47 samples, 1.87%)</title><rect x="180.4" y="629" width="22.0" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="183.38" y="639.5" >`..</text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (3 samples, 0.12%)</title><rect x="125.9" y="3413" width="1.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="128.93" y="3423.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="337.2" y="4517" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="340.15" y="4527.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="391.6" y="2581" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="394.60" y="2591.5" ></text>
</g>
<g >
<title>`core::core__get_sysprop(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (2 samples, 0.08%)</title><rect x="141.9" y="4309" width="0.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="144.89" y="4319.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="3221" width="4.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="279.60" y="3231.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (159 samples, 6.32%)</title><rect x="378.9" y="5845" width="74.7" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="381.93" y="5855.5" >`core::F..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.0" y="1973" width="0.4" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="434.96" y="1983.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (13 samples, 0.52%)</title><rect x="92.1" y="3749" width="6.1" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="95.14" y="3759.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.04%)</title><rect x="251.7" y="3077" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="254.73" y="3087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1861" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="423.70" y="1871.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, void (llvmo::IRBuilderBase_O::*)(int,  (4 samples, 0.16%)</title><rect x="614.1" y="5349" width="1.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="617.08" y="5359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (36 samples, 1.43%)</title><rect x="416.9" y="4981" width="16.9" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="419.95" y="4991.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="260.2" y="69" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="263.18" y="79.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1093" width="5.6" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="236.89" y="1103.5" ></text>
</g>
<g >
<title>`wrapped_cl__type_of_T_sp (3 samples, 0.12%)</title><rect x="118.9" y="3573" width="1.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="121.89" y="3583.5" ></text>
</g>
<g >
<title>0x11a477094 (9 samples, 0.36%)</title><rect x="276.6" y="1717" width="4.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="279.60" y="1727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="432.0" y="1381" width="0.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="434.96" y="1391.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((:AROUND) (T T CLASP))^METHOD (2 samples, 0.08%)</title><rect x="170.5" y="1669" width="1.0" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="173.53" y="1679.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.04%)</title><rect x="592.0" y="5717" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="595.02" y="5727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="422.1" y="2485" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="425.11" y="2495.5" ></text>
</g>
<g >
<title>`llvm::APInt::clearUnusedBits() (1 samples, 0.04%)</title><rect x="743.6" y="5829" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="746.63" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="3029" width="3.8" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="420.41" y="3039.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="423.0" y="2405" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="426.05" y="2415.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="708.9" y="5765" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="711.89" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="429.6" y="2437" width="1.0" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="432.62" y="2447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="393.9" y="3477" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="396.95" y="3487.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="92.1" y="2997" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="95.14" y="3007.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="417.9" y="293" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="420.88" y="303.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;std::__1::pair&lt;llvm (1 samples, 0.04%)</title><rect x="815.0" y="5685" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="817.97" y="5695.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T  (7 samples, 0.28%)</title><rect x="608.4" y="5461" width="3.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="611.45" y="5471.5" ></text>
</g>
<g >
<title>`OPTIMIZED-LEXICAL-VARIABLE-INFO-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="255.5" y="2821" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="258.48" y="2831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="400.0" y="4901" width="2.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="403.05" y="4911.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="293.5" y="5685" width="5.6" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="296.50" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.4" y="1765" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="428.39" y="1775.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::visitCallSite(llvm::CallSite (2 samples, 0.08%)</title><rect x="945.0" y="5893" width="0.9" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="947.99" y="5903.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.9" y="2789" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="412.90" y="2799.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (304 samples, 12.09%)</title><rect x="130.6" y="4885" width="142.7" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="133.63" y="4895.5" >`core::Funcallable..</text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="344.2" y="4805" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="347.19" y="4815.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="3285" width="1.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="411.03" y="3295.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="247.0" y="69" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="250.03" y="79.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="47.1" y="5541" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="50.08" y="5551.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="53.2" y="3893" width="0.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="56.18" y="3903.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="141.9" y="4293" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="144.89" y="4303.5" ></text>
</g>
<g >
<title>`llvm::AliasSetTracker::getEntryFor(llvm::Value*) (1 samples, 0.04%)</title><rect x="781.2" y="5813" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="784.18" y="5823.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (84 samples, 3.34%)</title><rect x="87.9" y="4405" width="39.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="90.92" y="4415.5" >`CO..</text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (19 samples, 0.76%)</title><rect x="259.2" y="901" width="9.0" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="262.24" y="911.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (1 samples, 0.04%)</title><rect x="27.8" y="4853" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="30.84" y="4863.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.9" y="2037" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="412.90" y="2047.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.0" y="2021" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="411.97" y="2031.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="325.9" y="4645" width="0.5" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="328.89" y="4655.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (136 samples, 5.41%)</title><rect x="167.2" y="3333" width="63.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="170.24" y="3343.5" >`CONVER..</text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.04%)</title><rect x="432.9" y="3221" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="435.90" y="3231.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="93.5" y="3413" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="96.55" y="3423.5" ></text>
</g>
<g >
<title>`llvm::getPassTimer(llvm::Pass*) (1 samples, 0.04%)</title><rect x="800.9" y="5893" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="803.89" y="5903.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (3 samples, 0.12%)</title><rect x="104.8" y="3509" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="107.81" y="3519.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (108 samples, 4.30%)</title><rect x="180.4" y="1429" width="50.7" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="183.38" y="1439.5" >`core..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="186.5" y="69" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="189.48" y="79.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="422.1" y="2597" width="0.5" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="425.11" y="2607.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (1 samples, 0.04%)</title><rect x="232.5" y="2421" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="235.48" y="2431.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (108 samples, 4.30%)</title><rect x="180.4" y="1605" width="50.7" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="183.38" y="1615.5" >`core..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.3" y="821" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="430.27" y="831.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="282.7" y="1637" width="1.9" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="285.70" y="1647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="4981" width="2.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="296.97" y="4991.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="122.6" y="3669" width="4.7" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="125.65" y="3679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="182.7" y="437" width="4.7" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="185.73" y="447.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="269.1" y="437" width="2.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="272.09" y="447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="3445" width="4.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="430.27" y="3455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="2853" width="1.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="411.03" y="2863.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (8 samples, 0.32%)</title><rect x="751.1" y="5765" width="3.8" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="754.14" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (336 samples, 13.37%)</title><rect x="129.7" y="5317" width="157.7" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="132.69" y="5327.5" >`core::FuncallableIn..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (34 samples, 1.35%)</title><rect x="256.0" y="3141" width="15.9" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="258.95" y="3151.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="269.1" y="293" width="2.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="272.09" y="303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="2741" width="0.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="411.97" y="2751.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="417.9" y="629" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="420.88" y="639.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (3 samples, 0.12%)</title><rect x="338.1" y="4485" width="1.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="341.09" y="4495.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (351 samples, 13.96%)</title><rect x="128.8" y="5669" width="164.7" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="131.75" y="5679.5" >`core::clos__interpre..</text>
</g>
<g >
<title>`llvm::CallGraphNode::addCalledFunction(llvm::CallSite, llvm::Ca (1 samples, 0.04%)</title><rect x="841.7" y="5877" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="844.73" y="5887.5" ></text>
</g>
<g >
<title>`IRC-TMV-PRIMARY^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="627.7" y="5141" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="630.69" y="5151.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (2 samples, 0.08%)</title><rect x="256.4" y="2789" width="1.0" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="259.42" y="2799.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="142.8" y="4229" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="145.83" y="4239.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (1 samples, 0.04%)</title><rect x="361.6" y="5733" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="364.56" y="5743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="268.6" y="1157" width="3.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="271.62" y="1167.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="1909" width="1.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="168.83" y="1919.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="281.8" y="3077" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="284.77" y="3087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="409.0" y="2565" width="0.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="411.97" y="2575.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (2 samples, 0.08%)</title><rect x="368.6" y="5765" width="0.9" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="371.60" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="312.7" y="5621" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="315.74" y="5631.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.7" y="853" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="430.74" y="863.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="421.6" y="2901" width="0.5" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="424.64" y="2911.5" ></text>
</g>
<g >
<title>`llvmo::StructType_O::get(gctools::smart_ptr&lt;llvmo::LLVMContext_ (1 samples, 0.04%)</title><rect x="675.6" y="5781" width="0.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="678.57" y="5791.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="49.9" y="4533" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="52.90" y="4543.5" ></text>
</g>
<g >
<title>`LTV/CONS^LITERAL^FN^^ (13 samples, 0.52%)</title><rect x="325.9" y="4805" width="6.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="328.89" y="4815.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="234.8" y="453" width="0.5" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="237.83" y="463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="393.9" y="3605" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="396.95" y="3615.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.04%)</title><rect x="750.7" y="5733" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="753.67" y="5743.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="664.3" y="5525" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="667.30" y="5535.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="397.7" y="3845" width="1.9" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="400.70" y="3855.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (4 samples, 0.16%)</title><rect x="252.2" y="3317" width="1.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="255.20" y="3327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1109" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="427.92" y="1119.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="293.5" y="5461" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="296.50" y="5471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="2789" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="414.78" y="2799.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="123.1" y="2469" width="1.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="126.12" y="2479.5" ></text>
</g>
<g >
<title>`wrapped_cl__append_VaList_sp (1 samples, 0.04%)</title><rect x="494.4" y="5781" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="497.39" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (31 samples, 1.23%)</title><rect x="257.4" y="2245" width="14.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="260.36" y="2255.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::AggressiveDeadCodeElimination::performDe (2 samples, 0.08%)</title><rect x="689.2" y="5877" width="0.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="692.18" y="5887.5" ></text>
</g>
<g >
<title>`LLVM-LINK^COMPILER^FN^^ (4 samples, 0.16%)</title><rect x="952.0" y="6021" width="1.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="955.03" y="6031.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="285.5" y="565" width="1.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="288.52" y="575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="2373" width="0.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="428.86" y="2383.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="278.9" y="581" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="281.95" y="591.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="123.6" y="1253" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="126.59" y="1263.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="168.2" y="1157" width="1.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="171.18" y="1167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="406.1" y="5701" width="1.0" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="409.15" y="5711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="294.9" y="3797" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="297.91" y="3807.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="628.2" y="5045" width="0.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="631.16" y="5055.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="430.6" y="2133" width="0.9" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="433.56" y="2143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.4" y="3013" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="389.44" y="3023.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIntPtrType(llvm::Type*) const (1 samples, 0.04%)</title><rect x="861.0" y="5797" width="0.4" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="863.97" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (2 samples, 0.08%)</title><rect x="287.9" y="5269" width="0.9" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="290.87" y="5279.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="422.1" y="2453" width="0.5" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="425.11" y="2463.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (33 samples, 1.31%)</title><rect x="15.6" y="5173" width="15.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="18.63" y="5183.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="823.4" y="5701" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="826.42" y="5711.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="627.7" y="5093" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="630.69" y="5103.5" ></text>
</g>
<g >
<title>`IRC-FUNCTION-CREATE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="346.1" y="4997" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="349.07" y="5007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="395.4" y="4965" width="0.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="398.35" y="4975.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="1733" width="1.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="168.83" y="1743.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="1765" width="7.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="246.28" y="1775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="405.7" y="4741" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="408.68" y="4751.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="279.4" y="1125" width="1.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="282.42" y="1135.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (20 samples, 0.80%)</title><rect x="112.8" y="3781" width="9.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="115.79" y="3791.5" ></text>
</g>
<g >
<title>`SORT-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="34.4" y="4309" width="0.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="37.41" y="4319.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (56 samples, 2.23%)</title><rect x="407.6" y="5461" width="26.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="410.56" y="5471.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="429.6" y="2341" width="1.0" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="432.62" y="2351.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="252.2" y="3493" width="1.9" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="255.20" y="3503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3141" width="3.8" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="420.41" y="3151.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="281.3" y="3109" width="1.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="284.30" y="3119.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (94 samples, 3.74%)</title><rect x="312.7" y="5781" width="44.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="315.74" y="5791.5" >`COM..</text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.04%)</title><rect x="746.4" y="5621" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="749.44" y="5631.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="130.6" y="4581" width="1.0" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="133.63" y="4591.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="124.5" y="2837" width="1.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="127.53" y="2847.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="427.3" y="3557" width="4.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="430.27" y="3567.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (14 samples, 0.56%)</title><rect x="17.5" y="4197" width="6.6" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="20.51" y="4207.5" ></text>
</g>
<g >
<title>`core::SourcePosInfo_O::make(std::__1::basic_string&lt;char, std::_ (1 samples, 0.04%)</title><rect x="334.3" y="4517" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="337.34" y="4527.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (3 samples, 0.12%)</title><rect x="281.3" y="3365" width="1.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="284.30" y="3375.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="423.0" y="2837" width="1.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="426.05" y="2847.5" ></text>
</g>
<g >
<title>`FILTER-INSTRUCTIONS^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="329.2" y="4421" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="332.17" y="4431.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (23 samples, 0.91%)</title><rect x="276.1" y="5013" width="10.8" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="279.13" y="5023.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (27 samples, 1.07%)</title><rect x="618.8" y="5317" width="12.6" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="621.77" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="1781" width="1.0" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="426.52" y="1791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5781" width="0.9" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="408.21" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="431.5" y="2725" width="1.4" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="434.50" y="2735.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="132.0" y="4597" width="1.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="135.04" y="4607.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="168.6" y="629" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="171.65" y="639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="1877" width="1.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="426.52" y="1887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (31 samples, 1.23%)</title><rect x="257.4" y="2741" width="14.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="260.36" y="2751.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="99.2" y="3861" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="102.18" y="3871.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T CST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="126.9" y="2789" width="0.4" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="129.87" y="2799.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="1125" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="423.70" y="1135.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="3029" width="4.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="279.60" y="3039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="257.4" y="1509" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="260.36" y="1519.5" ></text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE T (1 samples, 0.04%)</title><rect x="125.5" y="1813" width="0.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="128.47" y="1823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="3413" width="4.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="279.60" y="3423.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::freePass(llvm::Pass*, llvm::StringRef, llv (6 samples, 0.24%)</title><rect x="792.9" y="5877" width="2.8" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="795.91" y="5887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="386.4" y="3141" width="0.5" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="389.44" y="3151.5" ></text>
</g>
<g >
<title>`REDUCE-TYPEQS^CC-HIR-TO-MIR^FN^^ (7 samples, 0.28%)</title><rect x="579.8" y="5845" width="3.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="582.82" y="5855.5" ></text>
</g>
<g >
<title>`wrapped_getInt8Ty_llvm__LLVMContext_ (1 samples, 0.04%)</title><rect x="662.4" y="5605" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="665.43" y="5615.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="415.5" y="4629" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="418.54" y="4639.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="633.8" y="5333" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="636.79" y="5343.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="80.4" y="4901" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="83.41" y="4911.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (85 samples, 3.38%)</title><rect x="87.4" y="4709" width="39.9" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="90.45" y="4719.5" >`co..</text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Type*, llvm::PointerTyp (1 samples, 0.04%)</title><rect x="650.7" y="5269" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="653.69" y="5279.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (5 samples, 0.20%)</title><rect x="908.8" y="5749" width="2.4" height="15.0" fill="rgb(75,222,75)" rx="2" ry="2" />
<text  x="911.85" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="281.3" y="3141" width="1.4" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="284.30" y="3151.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="397.7" y="4069" width="1.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="400.70" y="4079.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="104.8" y="3541" width="1.4" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="107.81" y="3551.5" ></text>
</g>
<g >
<title>0x11a477076 (1 samples, 0.04%)</title><rect x="240.0" y="2533" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="242.99" y="2543.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="430.6" y="2085" width="0.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="433.56" y="2095.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="48.5" y="5413" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="51.49" y="5423.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (14 samples, 0.56%)</title><rect x="233.0" y="2533" width="6.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="235.95" y="2543.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="3413" width="5.6" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="284.30" y="3423.5" ></text>
</g>
<g >
<title>`llvm::Module::getFunction(llvm::StringRef) const (1 samples, 0.04%)</title><rect x="354.5" y="5413" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="357.52" y="5423.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION-IMPL^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="353.6" y="5349" width="0.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="356.58" y="5359.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="95.9" y="3541" width="1.9" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="98.89" y="3551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (8 samples, 0.32%)</title><rect x="417.4" y="3541" width="3.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="420.41" y="3551.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="268.2" y="1701" width="3.7" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="271.15" y="1711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="387.8" y="4309" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="390.84" y="4319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="427.7" y="1749" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="430.74" y="1759.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="645.5" y="5349" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="648.53" y="5359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="405.7" y="4453" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="408.68" y="4463.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.04%)</title><rect x="23.6" y="3765" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="26.61" y="3775.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.04%)</title><rect x="40.5" y="4373" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="43.51" y="4383.5" ></text>
</g>
<g >
<title>0x1225f1094 (1 samples, 0.04%)</title><rect x="249.4" y="885" width="0.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="252.38" y="895.5" ></text>
</g>
<g >
<title>`core::cl__logand(gctools::smart_ptr&lt;core::List_V&gt;) (1 samples, 0.04%)</title><rect x="43.3" y="4901" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="46.33" y="4911.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="661.0" y="5445" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="664.02" y="5455.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (3 samples, 0.12%)</title><rect x="741.3" y="5813" width="1.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="744.28" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="252.2" y="3157" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="255.20" y="3167.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (3 samples, 0.12%)</title><rect x="283.2" y="1221" width="1.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="286.17" y="1231.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.04%)</title><rect x="807.5" y="5653" width="0.4" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="810.46" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (56 samples, 2.23%)</title><rect x="407.6" y="5509" width="26.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="410.56" y="5519.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="1637" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="423.70" y="1647.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="421.6" y="4149" width="1.0" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="424.64" y="4159.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (1 samples, 0.04%)</title><rect x="888.2" y="5781" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="891.19" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1653" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="427.92" y="1663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="182.7" y="405" width="4.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="185.73" y="415.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="124.5" y="3061" width="1.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="127.53" y="3071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (36 samples, 1.43%)</title><rect x="416.9" y="4885" width="16.9" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="419.95" y="4895.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="419.3" y="773" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="422.29" y="783.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.04%)</title><rect x="627.7" y="5029" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="630.69" y="5039.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="405.7" y="4485" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="408.68" y="4495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (24 samples, 0.95%)</title><rect x="422.6" y="4485" width="11.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="425.58" y="4495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="400.0" y="4565" width="2.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="403.05" y="4575.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="684.5" y="5877" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="687.49" y="5887.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="405.2" y="4885" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="408.21" y="4895.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.08%)</title><rect x="550.2" y="5749" width="1.0" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="553.25" y="5759.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.04%)</title><rect x="105.8" y="3317" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="108.75" y="3327.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="430.6" y="2053" width="0.9" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="433.56" y="2063.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.04%)</title><rect x="920.6" y="5845" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="923.58" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="286.9" y="4709" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="289.93" y="4719.5" ></text>
</g>
<g >
<title>0x11a477094 (57 samples, 2.27%)</title><rect x="204.3" y="421" width="26.8" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="207.32" y="431.5" >0..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (3 samples, 0.12%)</title><rect x="409.4" y="4437" width="1.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="412.44" y="4447.5" ></text>
</g>
<g >
<title>`PROCESS-INIT-PARAMETER^CLEAVIR-CST-TO-AST^FN^^ (137 samples, 5.45%)</title><rect x="167.2" y="3893" width="64.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="170.24" y="3903.5" >`PROCES..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="125.9" y="2997" width="1.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="128.93" y="3007.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="379.9" y="5029" width="3.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="382.86" y="5039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (23 samples, 0.91%)</title><rect x="383.6" y="5013" width="10.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="386.62" y="5023.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="110.0" y="3525" width="1.4" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="112.98" y="3535.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.08%)</title><rect x="421.6" y="3861" width="1.0" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="424.64" y="3871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.4" y="1685" width="0.5" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="428.39" y="1695.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="242.8" y="2117" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="245.81" y="2127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="400.0" y="4981" width="2.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="403.05" y="4991.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (22 samples, 0.88%)</title><rect x="34.4" y="5365" width="10.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="37.41" y="5375.5" ></text>
</g>
<g >
<title>`OPTIMIZED-RETURN-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="344.7" y="5013" width="0.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="347.66" y="5023.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.4" y="2789" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="412.44" y="2799.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="415.5" y="4341" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="418.54" y="4351.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (3 samples, 0.12%)</title><rect x="897.6" y="5813" width="1.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="900.58" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (37 samples, 1.47%)</title><rect x="416.5" y="5125" width="17.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="419.48" y="5135.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="613" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="423.70" y="623.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="125.9" y="3109" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="128.93" y="3119.5" ></text>
</g>
<g >
<title>`LOOP-READ-AND-COMPILE-FILE-FORMS^COMPILER^FN^^ (1,421 samples, 56.52%)</title><rect x="12.3" y="5989" width="667.0" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="15.35" y="5999.5" >`LOOP-READ-AND-COMPILE-FILE-FORMS^COMPILER^FN^^</text>
</g>
<g >
<title>`TRANSFORM-COMPOUND^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="122.6" y="2405" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="125.65" y="2415.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.7" y="1797" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="430.74" y="1807.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (48 samples, 1.91%)</title><rect x="180.4" y="1109" width="22.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="183.38" y="1119.5" >`..</text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="55.1" y="5493" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="58.06" y="5503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="429.6" y="1733" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="432.62" y="1743.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="107.6" y="3557" width="1.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="110.63" y="3567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="423.0" y="4341" width="10.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="426.05" y="4351.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.08%)</title><rect x="641.3" y="5381" width="0.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="644.30" y="5391.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="124.5" y="2869" width="1.4" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="127.53" y="2879.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="52.7" y="3861" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="55.71" y="3871.5" ></text>
</g>
<g >
<title>`COMPILE-ONLY-REG-AND-OPT-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="321.2" y="5157" width="0.5" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="324.19" y="5167.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::push_binding(gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="348.4" y="5189" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="351.42" y="5199.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::track(void*, llvm::Metadata&amp;, llvm::Poi (1 samples, 0.04%)</title><rect x="625.3" y="5093" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="628.35" y="5103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="1653" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="411.97" y="1663.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="674.6" y="5749" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="677.63" y="5759.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="115.1" y="3493" width="0.5" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="118.14" y="3503.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="401.9" y="3493" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="404.93" y="3503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (47 samples, 1.87%)</title><rect x="180.4" y="677" width="22.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="183.38" y="687.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="416.9" y="4709" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="419.95" y="4719.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="1557" width="1.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="168.83" y="1567.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="410.4" y="3301" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="413.37" y="3311.5" ></text>
</g>
<g >
<title>0x1225e5094 (3 samples, 0.12%)</title><rect x="125.9" y="3093" width="1.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="128.93" y="3103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (58 samples, 2.31%)</title><rect x="100.1" y="4037" width="27.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="103.12" y="4047.5" >`..</text>
</g>
<g >
<title>`client_validate (1 samples, 0.04%)</title><rect x="410.8" y="3989" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="413.84" y="3999.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (7 samples, 0.28%)</title><rect x="18.0" y="3765" width="3.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="20.98" y="3775.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="34.4" y="5013" width="0.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="37.41" y="5023.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="370.9" y="5829" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="373.95" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="165.4" y="3237" width="1.8" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="168.36" y="3247.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="381.7" y="4709" width="1.0" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="384.74" y="4719.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="136.3" y="4229" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="139.26" y="4239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="397.7" y="4389" width="2.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="400.70" y="4399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="285.5" y="1077" width="1.4" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="288.52" y="1087.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="260.6" y="405" width="7.6" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="263.64" y="415.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="1733" width="0.9" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="126.59" y="1743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (108 samples, 4.30%)</title><rect x="180.4" y="2117" width="50.7" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="183.38" y="2127.5" >`INTE..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="405.2" y="5685" width="0.9" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="408.21" y="5695.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="836.6" y="5733" width="0.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="839.56" y="5743.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::untrack(void*, llvm::Metadata&amp;) (1 samples, 0.04%)</title><rect x="775.1" y="5845" width="0.4" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="778.08" y="5855.5" ></text>
</g>
<g >
<title>`llvm::PopulateLoopsDFS&lt;llvm::BasicBlock, llvm::Loop&gt;::traverse( (1 samples, 0.04%)</title><rect x="785.4" y="5861" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="788.40" y="5871.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (2 samples, 0.08%)</title><rect x="905.1" y="5701" width="0.9" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="908.09" y="5711.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="49.9" y="4549" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="52.90" y="4559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="104.8" y="3525" width="1.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="107.81" y="3535.5" ></text>
</g>
<g >
<title>`thread_start (485 samples, 19.29%)</title><rect x="962.4" y="6421" width="227.6" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="965.35" y="6431.5" >`thread_start</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'FUNCTION) T T T))^ (1 samples, 0.04%)</title><rect x="231.1" y="3493" width="0.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="234.07" y="3503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5541" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="408.21" y="5551.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (6 samples, 0.24%)</title><rect x="88.9" y="3989" width="2.8" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="91.85" y="3999.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoWrapperPass::runOnFunction(llvm::Function&amp;) (3 samples, 0.12%)</title><rect x="921.5" y="5893" width="1.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="924.52" y="5903.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.04%)</title><rect x="285.1" y="661" width="0.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="288.05" y="671.5" ></text>
</g>
<g >
<title>`core::lambdaListHandler_createBindings(gctools::smart_ptr&lt;core: (1 samples, 0.04%)</title><rect x="654.0" y="5461" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="656.98" y="5471.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4565" width="1.4" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="39.28" y="4575.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (24 samples, 0.95%)</title><rect x="276.1" y="5269" width="11.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="279.13" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (1 samples, 0.04%)</title><rect x="231.5" y="3637" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="234.54" y="3647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2517" width="1.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="127.53" y="2527.5" ></text>
</g>
<g >
<title>0x1225ef094 (4 samples, 0.16%)</title><rect x="247.5" y="389" width="1.9" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="250.50" y="399.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="255.5" y="2853" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="258.48" y="2863.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="401.0" y="3093" width="0.9" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="403.99" y="3103.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="1605" width="9.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="262.24" y="1615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="352.6" y="5397" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="355.64" y="5407.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.1" y="4549" width="0.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="418.07" y="4559.5" ></text>
</g>
<g >
<title>`PROCESS-LOCATION^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="568.6" y="5829" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="571.55" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="1957" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="423.70" y="1967.5" ></text>
</g>
<g >
<title>`CONVERT-VARIABLE^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="233.9" y="213" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="236.89" y="223.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="186.5" y="117" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="189.48" y="127.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="413.2" y="4821" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="416.19" y="4831.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (11 samples, 0.44%)</title><rect x="49.9" y="5349" width="5.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="52.90" y="5359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="123.6" y="645" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="126.59" y="655.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="172.4" y="805" width="5.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="175.40" y="815.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="52.7" y="3925" width="1.9" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="55.71" y="3935.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="284.6" y="1669" width="2.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="287.58" y="1679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="398.2" y="3125" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="401.17" y="3135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="4213" width="0.5" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="404.93" y="4223.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="892.4" y="5701" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="895.42" y="5711.5" ></text>
</g>
<g >
<title>`TRANSFORM-COMPOUND^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="122.6" y="2453" width="0.5" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="125.65" y="2463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="114.2" y="3541" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="117.20" y="3551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="396.8" y="3893" width="0.4" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="399.76" y="3903.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION-IMPL^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="316.0" y="5205" width="0.5" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="319.03" y="5215.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="428.7" y="1717" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="431.68" y="1727.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (1 samples, 0.04%)</title><rect x="677.0" y="5765" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="679.98" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="22.2" y="3829" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="25.20" y="3839.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CVPLatticeFunc::ComputeInstructionState( (1 samples, 0.04%)</title><rect x="938.9" y="5893" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="941.89" y="5903.5" ></text>
</g>
<g >
<title>`IRC-FDEFINITION^COMPILER^FN^^ (6 samples, 0.24%)</title><rect x="637.5" y="5413" width="2.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="640.55" y="5423.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (1 samples, 0.04%)</title><rect x="838.9" y="5797" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="841.91" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="233.0" y="2437" width="0.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="235.95" y="2447.5" ></text>
</g>
<g >
<title>`core::cl__values(gctools::smart_ptr&lt;core::Vaslist&gt;) (1 samples, 0.04%)</title><rect x="11.4" y="5957" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="14.41" y="5967.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4277" width="0.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="408.68" y="4287.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4037" width="1.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="39.28" y="4047.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="165.8" y="1045" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="168.83" y="1055.5" ></text>
</g>
<g >
<title>`CALLING-CONVENTION-ARGS.VA-START^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="317.0" y="5269" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="319.97" y="5279.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.04%)</title><rect x="747.9" y="5701" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="750.85" y="5711.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (86 samples, 3.42%)</title><rect x="87.0" y="4981" width="40.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="89.98" y="4991.5" >`PR..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="421.6" y="2293" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="424.64" y="2303.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (3 samples, 0.12%)</title><rect x="125.9" y="3349" width="1.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="128.93" y="3359.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="497.2" y="5813" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="500.21" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (233 samples, 9.27%)</title><rect x="163.5" y="4613" width="109.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="166.48" y="4623.5" >`INTERPRETED-..</text>
</g>
<g >
<title>`core::clasp_write_characters(char const*, int, gctools::smart_p (1 samples, 0.04%)</title><rect x="684.5" y="5909" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="687.49" y="5919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="427.3" y="3733" width="4.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="430.27" y="3743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (19 samples, 0.76%)</title><rect x="259.2" y="1381" width="9.0" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="262.24" y="1391.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="2805" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="412.90" y="2815.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.04%)</title><rect x="563.4" y="5701" width="0.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="566.39" y="5711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="278.9" y="645" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="281.95" y="655.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="4165" width="1.0" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="424.64" y="4175.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="52.7" y="3717" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="55.71" y="3727.5" ></text>
</g>
<g >
<title>`OPTIMIZED-VALUES-LOCATION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="428.2" y="2213" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="431.21" y="2223.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (1 samples, 0.04%)</title><rect x="233.4" y="2133" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="236.42" y="2143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="3205" width="1.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="427.92" y="3215.5" ></text>
</g>
<g >
<title>0x12254f0c9 (1 samples, 0.04%)</title><rect x="113.3" y="3589" width="0.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="116.26" y="3599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'CLEAVIR-PRIMOP:FUN (305 samples, 12.13%)</title><rect x="130.2" y="5013" width="143.1" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="133.16" y="5023.5" >`CONVERT-SPECIAL^C..</text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="649.8" y="5269" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="652.75" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="285.5" y="325" width="1.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="288.52" y="335.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (3 samples, 0.12%)</title><rect x="241.4" y="2997" width="1.4" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="244.40" y="3007.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="244.2" y="453" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="247.22" y="463.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;llvm::DILocalVariable*, l (1 samples, 0.04%)</title><rect x="654.9" y="5349" width="0.5" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="657.92" y="5359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="410.8" y="4709" width="1.9" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="413.84" y="4719.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="49.9" y="4597" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="52.90" y="4607.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="92.1" y="3077" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="95.14" y="3087.5" ></text>
</g>
<g >
<title>`llvm::GetElementPtrInst::Create(llvm::Type*, llvm::Value*, llvm (1 samples, 0.04%)</title><rect x="645.5" y="5253" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="648.53" y="5263.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, unsigned i (1 samples, 0.04%)</title><rect x="822.5" y="5749" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="825.48" y="5759.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (32 samples, 1.27%)</title><rect x="187.4" y="37" width="15.0" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="190.42" y="47.5" ></text>
</g>
<g >
<title>0x11a477094 (15 samples, 0.60%)</title><rect x="232.5" y="2677" width="7.0" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="235.48" y="2687.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="455.9" y="5685" width="0.5" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="458.90" y="5695.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="397.7" y="4245" width="2.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="400.70" y="4255.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::keyTest(gctools::smart_ptr&lt;core::T_O&gt;, gc (1 samples, 0.04%)</title><rect x="282.2" y="3013" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="285.24" y="3023.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (37 samples, 1.47%)</title><rect x="435.3" y="5669" width="17.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="438.25" y="5679.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.04%)</title><rect x="287.4" y="4725" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="290.40" y="4735.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="278.9" y="37" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="281.95" y="47.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.0" y="1717" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="426.99" y="1727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="382.2" y="4677" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="385.21" y="4687.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (11 samples, 0.44%)</title><rect x="172.4" y="1157" width="5.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="175.40" y="1167.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (58 samples, 2.31%)</title><rect x="100.1" y="4117" width="27.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="103.12" y="4127.5" >`..</text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.08%)</title><rect x="584.0" y="5813" width="1.0" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="587.04" y="5823.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (1 samples, 0.04%)</title><rect x="165.4" y="2437" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="168.36" y="2447.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (12 samples, 0.48%)</title><rect x="303.8" y="5861" width="5.7" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="306.83" y="5871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (15 samples, 0.60%)</title><rect x="232.5" y="2789" width="7.0" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="235.48" y="2799.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="414.1" y="3333" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="417.13" y="3343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (19 samples, 0.76%)</title><rect x="259.2" y="1861" width="9.0" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="262.24" y="1871.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (48 samples, 1.91%)</title><rect x="180.4" y="933" width="22.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="183.38" y="943.5" >`..</text>
</g>
<g >
<title>0x11a477094 (7 samples, 0.28%)</title><rect x="294.0" y="5365" width="3.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="296.97" y="5375.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="3621" width="63.9" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="170.24" y="3631.5" >`INTERP..</text>
</g>
<g >
<title>`start (2,028 samples, 80.67%)</title><rect x="10.0" y="6405" width="951.9" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="13.00" y="6415.5" >`start</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="281.3" y="3173" width="1.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="284.30" y="3183.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="279.9" y="117" width="0.9" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="282.89" y="127.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (31 samples, 1.23%)</title><rect x="257.4" y="2421" width="14.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="260.36" y="2431.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.08%)</title><rect x="170.5" y="1573" width="1.0" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="173.53" y="1583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="36.8" y="3253" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="39.75" y="3263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="2661" width="0.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="411.97" y="2671.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="329.6" y="4437" width="0.5" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="332.64" y="4447.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (55 samples, 2.19%)</title><rect x="60.7" y="5173" width="25.8" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="63.69" y="5183.5" >`..</text>
</g>
<g >
<title>0x11a477094 (11 samples, 0.44%)</title><rect x="276.1" y="4213" width="5.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="279.13" y="4223.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (351 samples, 13.96%)</title><rect x="128.8" y="5653" width="164.7" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="131.75" y="5663.5" >`COMBINE-METHOD-FUNCT..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="5237" width="0.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="290.87" y="5247.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (9 samples, 0.36%)</title><rect x="282.7" y="2981" width="4.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="285.70" y="2991.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="313.7" y="5461" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="316.68" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="398.2" y="2885" width="0.4" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="401.17" y="2895.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (7 samples, 0.28%)</title><rect x="51.8" y="5093" width="3.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="54.77" y="5103.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="597.7" y="5733" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="600.65" y="5743.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (6 samples, 0.24%)</title><rect x="294.0" y="5013" width="2.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="296.97" y="5023.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="338.6" y="4437" width="0.4" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="341.56" y="4447.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.04%)</title><rect x="88.4" y="3973" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="91.39" y="3983.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="1525" width="7.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="246.28" y="1535.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (1 samples, 0.04%)</title><rect x="123.6" y="1173" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="126.59" y="1183.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="122.6" y="3109" width="1.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="125.65" y="3119.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="424.9" y="1237" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="427.92" y="1247.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="5013" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="327.01" y="5023.5" ></text>
</g>
<g >
<title>`LITERAL-DNODE-P^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="10.5" y="5973" width="0.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="13.47" y="5983.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="393.5" y="3845" width="0.9" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="396.48" y="3855.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="311.8" y="5653" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="314.81" y="5663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="52.7" y="4149" width="1.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="55.71" y="4159.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3605" width="1.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="168.36" y="3615.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (4 samples, 0.16%)</title><rect x="247.5" y="53" width="1.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="250.50" y="63.5" ></text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (2 samples, 0.08%)</title><rect x="156.0" y="4309" width="0.9" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="158.97" y="4319.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.04%)</title><rect x="324.5" y="4629" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="327.48" y="4639.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="600.0" y="5557" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="603.00" y="5567.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="276.1" y="4373" width="5.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="279.13" y="4383.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleBaseString_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="34.9" y="4053" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="37.88" y="4063.5" ></text>
</g>
<g >
<title>`MAKE-CALL-AST^CLEAVIR-AST^FN^^ (1 samples, 0.04%)</title><rect x="322.6" y="5205" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="325.60" y="5215.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.08%)</title><rect x="430.6" y="2117" width="0.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="433.56" y="2127.5" ></text>
</g>
<g >
<title>`llvm::MemorySSAWrapperPass::releaseMemory() (1 samples, 0.04%)</title><rect x="795.3" y="5861" width="0.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="798.26" y="5871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="388.3" y="4165" width="4.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="391.31" y="4175.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="853" width="5.6" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="236.89" y="863.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="386.0" y="3525" width="0.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="388.97" y="3535.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (1 samples, 0.04%)</title><rect x="952.0" y="5989" width="0.5" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="955.03" y="5999.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="18.0" y="3957" width="5.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="20.98" y="3967.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2581" width="4.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="279.60" y="2591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="396.8" y="4053" width="0.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="399.76" y="4063.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="647.9" y="5301" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="650.88" y="5311.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="413.7" y="3781" width="0.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="416.66" y="3791.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="422.6" y="4421" width="0.4" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="425.58" y="4431.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.9" y="3157" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="412.90" y="3167.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="424.0" y="1525" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="426.99" y="1535.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (7 samples, 0.28%)</title><rect x="88.4" y="4101" width="3.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="91.39" y="4111.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="401.0" y="3157" width="0.9" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="403.99" y="3167.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (8 samples, 0.32%)</title><rect x="116.5" y="3589" width="3.8" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="119.55" y="3599.5" ></text>
</g>
<g >
<title>`llvm::AliasSetTracker::addPointer(llvm::Value*, unsigned long l (1 samples, 0.04%)</title><rect x="780.2" y="5813" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="783.24" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="268.2" y="1493" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="271.15" y="1503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (100 samples, 3.98%)</title><rect x="406.1" y="5781" width="47.0" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="409.15" y="5791.5" >`COM..</text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (2 samples, 0.08%)</title><rect x="752.1" y="5653" width="0.9" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="755.08" y="5663.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="289.7" y="5493" width="0.5" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="292.75" y="5503.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (6 samples, 0.24%)</title><rect x="52.2" y="4453" width="2.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="55.24" y="4463.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="938.9" y="5813" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="941.89" y="5823.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (1 samples, 0.04%)</title><rect x="33.0" y="5285" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="36.00" y="5295.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="283.2" y="1333" width="1.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="286.17" y="1343.5" ></text>
</g>
<g >
<title>`TRANSFORM^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="122.6" y="2437" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="125.65" y="2447.5" ></text>
</g>
<g >
<title>`core::core__make_string_output_stream_from_string(gctools::smar (1 samples, 0.04%)</title><rect x="33.0" y="5221" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="36.00" y="5231.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="2517" width="3.8" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="420.41" y="2527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="410.8" y="4613" width="1.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="413.84" y="4623.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="233.0" y="2453" width="0.9" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="235.95" y="2463.5" ></text>
</g>
<g >
<title>`AST-INTERPRET-CST^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="4837" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="290.87" y="4847.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (93 samples, 3.70%)</title><rect x="12.8" y="5781" width="43.7" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="15.82" y="5791.5" >`REA..</text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="32.5" y="5269" width="0.5" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="35.53" y="5279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="1109" width="26.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="207.32" y="1119.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="295.4" y="2661" width="0.9" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="298.38" y="2671.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="427.3" y="3573" width="4.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="430.27" y="3583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (13 samples, 0.52%)</title><rect x="427.3" y="3813" width="6.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="430.27" y="3823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="319.3" y="5365" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="322.32" y="5375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="428.7" y="2197" width="0.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="431.68" y="2207.5" ></text>
</g>
<g >
<title>`core::clasp_make_string_output_stream(long long, bool) (1 samples, 0.04%)</title><rect x="44.7" y="5221" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="47.73" y="5231.5" ></text>
</g>
<g >
<title>`THES-&gt;TYPEQS^CLEAVIR-KILDALL-TYPE-INFERENCE^FN^^ (21 samples, 0.84%)</title><rect x="583.1" y="5845" width="9.9" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="586.10" y="5855.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (2 samples, 0.08%)</title><rect x="888.7" y="5765" width="0.9" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="891.66" y="5775.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (15 samples, 0.60%)</title><rect x="243.3" y="1205" width="7.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="246.28" y="1215.5" ></text>
</g>
<g >
<title>`llvm::APInt::udiv(llvm::APInt const&amp;) const (1 samples, 0.04%)</title><rect x="731.4" y="5765" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="734.42" y="5775.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="4405" width="5.6" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="284.30" y="4415.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="409.4" y="4053" width="1.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="412.44" y="4063.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="313.2" y="5365" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="316.21" y="5375.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="405.2" y="5749" width="0.9" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="408.21" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="417.4" y="1877" width="2.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="420.41" y="1887.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::BinaryOp_match&lt;llvm::PatternMatch::bin (2 samples, 0.08%)</title><rect x="881.6" y="5829" width="1.0" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="884.62" y="5839.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="405" width="1.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="288.52" y="415.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="338.6" y="4245" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="341.56" y="4255.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="719.7" y="5765" width="0.5" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="722.69" y="5775.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="581.7" y="5765" width="0.5" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="584.69" y="5775.5" ></text>
</g>
<g >
<title>`llvm::Twine::print(llvm::raw_ostream&amp;) const (1 samples, 0.04%)</title><rect x="769.4" y="5749" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="772.44" y="5759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3877" width="0.5" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="404.93" y="3887.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="123.6" y="1045" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="126.59" y="1055.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="253.1" y="3285" width="1.0" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="256.13" y="3295.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="243.3" y="757" width="1.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="246.28" y="767.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="165.8" y="1477" width="1.0" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="168.83" y="1487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.3" y="3717" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="414.31" y="3727.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (8 samples, 0.32%)</title><rect x="268.2" y="1909" width="3.7" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="271.15" y="1919.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (7 samples, 0.28%)</title><rect x="314.2" y="5445" width="3.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="317.15" y="5455.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (2 samples, 0.08%)</title><rect x="843.1" y="5717" width="1.0" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="846.13" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="431.5" y="3749" width="1.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="434.50" y="3759.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="327.3" y="4325" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="330.30" y="4335.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction const*, uns (4 samples, 0.16%)</title><rect x="957.2" y="5861" width="1.9" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="960.19" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (40 samples, 1.59%)</title><rect x="232.0" y="3605" width="18.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="235.01" y="3615.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CONTEXT-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="314.2" y="5221" width="0.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="317.15" y="5231.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (39 samples, 1.55%)</title><rect x="254.1" y="3461" width="18.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="257.07" y="3471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="370.9" y="5733" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="373.95" y="5743.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="168.6" y="693" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="171.65" y="703.5" ></text>
</g>
<g >
<title>`tryToReplaceWithConstant((anonymous namespace)::SCCPSolver&amp;, ll (1 samples, 0.04%)</title><rect x="948.3" y="5909" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="951.27" y="5919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="260.6" y="37" width="7.6" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="263.64" y="47.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (5 samples, 0.20%)</title><rect x="770.9" y="5781" width="2.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="773.85" y="5791.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (9 samples, 0.36%)</title><rect x="235.3" y="565" width="4.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="238.30" y="575.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="125.9" y="2421" width="1.0" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="128.93" y="2431.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="2293" width="4.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="285.70" y="2303.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="113.3" y="3605" width="1.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="116.26" y="3615.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="415.5" y="4197" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="418.54" y="4207.5" ></text>
</g>
<g >
<title>`llvm::User::operator new(unsigned long, unsigned int) (1 samples, 0.04%)</title><rect x="665.2" y="5493" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="668.24" y="5503.5" ></text>
</g>
<g >
<title>`llvm::DominatorTree&amp; llvm::function_ref&lt;llvm::DominatorTree&amp; (l (1 samples, 0.04%)</title><rect x="838.9" y="5893" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="841.91" y="5903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="279.4" y="1077" width="1.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="282.42" y="1087.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="380.3" y="4437" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="383.33" y="4447.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (1 samples, 0.04%)</title><rect x="648.8" y="5349" width="0.5" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="651.81" y="5359.5" ></text>
</g>
<g >
<title>`llvm::MDNodeInfo&lt;llvm::DILocalVariable&gt;::getHashValue(llvm::DIL (1 samples, 0.04%)</title><rect x="654.9" y="5317" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="657.92" y="5327.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.04%)</title><rect x="38.2" y="4149" width="0.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="41.16" y="4159.5" ></text>
</g>
<g >
<title>`MAKE-FIXED-TO-MULTIPLE-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="917" width="0.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="428.86" y="927.5" ></text>
</g>
<g >
<title>`unw_init_local (1 samples, 0.04%)</title><rect x="252.7" y="3221" width="0.4" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="255.67" y="3231.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="341.8" y="4693" width="1.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="344.85" y="4703.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="410.8" y="4629" width="1.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="413.84" y="4639.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (31 samples, 1.23%)</title><rect x="257.4" y="2757" width="14.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="260.36" y="2767.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::SCEV const*, llvm::Smal (1 samples, 0.04%)</title><rect x="927.2" y="5813" width="0.4" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="930.15" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="397.7" y="4277" width="2.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="400.70" y="4287.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (84 samples, 3.34%)</title><rect x="87.9" y="4501" width="39.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="90.92" y="4511.5" >`CO..</text>
</g>
<g >
<title>`std::__1::enable_if&lt;is_hashable_data&lt;llvm::Metadata* const&gt;::va (1 samples, 0.04%)</title><rect x="808.9" y="5461" width="0.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="811.87" y="5471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="23.6" y="3813" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="26.61" y="3823.5" ></text>
</g>
<g >
<title>`llvm::GVN::performPRE(llvm::Function&amp;) (1 samples, 0.04%)</title><rect x="833.3" y="5861" width="0.4" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="836.28" y="5871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="430.6" y="2485" width="0.9" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="433.56" y="2495.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="34.9" y="4533" width="0.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="37.88" y="4543.5" ></text>
</g>
<g >
<title>`llvm::IRBuilderBase::SetInsertPoint(llvm::Instruction*) (1 samples, 0.04%)</title><rect x="876.9" y="5845" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="879.93" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.3" y="1509" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="430.27" y="1519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="125.5" y="1781" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="128.47" y="1791.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeAllocSize(llvm::Type*) const (1 samples, 0.04%)</title><rect x="860.0" y="5797" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="863.03" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="276.6" y="2421" width="4.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="279.60" y="2431.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="348.9" y="5317" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="351.89" y="5327.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="847.8" y="5861" width="0.5" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="850.83" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="36.8" y="3317" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="39.75" y="3327.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="396.3" y="4837" width="3.7" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="399.29" y="4847.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="26.0" y="4549" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="28.96" y="4559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="167.7" y="1445" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="170.71" y="1455.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.7" y="1813" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="430.74" y="1823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="332.9" y="4421" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="335.93" y="4431.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="294.0" y="4613" width="2.8" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="296.97" y="4623.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (108 samples, 4.30%)</title><rect x="180.4" y="1717" width="50.7" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="183.38" y="1727.5" >`CONV..</text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.04%)</title><rect x="904.6" y="5733" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="907.62" y="5743.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (6 samples, 0.24%)</title><rect x="340.4" y="4741" width="2.9" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="343.44" y="4751.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="171.0" y="1541" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="173.99" y="1551.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (4 samples, 0.16%)</title><rect x="168.2" y="869" width="1.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="171.18" y="879.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (58 samples, 2.31%)</title><rect x="100.1" y="4101" width="27.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="103.12" y="4111.5" >`..</text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (4 samples, 0.16%)</title><rect x="277.1" y="853" width="1.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="280.07" y="863.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (18 samples, 0.72%)</title><rect x="91.7" y="4309" width="8.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="94.67" y="4319.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="276.6" y="901" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="279.60" y="911.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (1 samples, 0.04%)</title><rect x="247.0" y="533" width="0.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="250.03" y="543.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.7" y="1701" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="430.74" y="1711.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="125.9" y="1861" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="128.93" y="1871.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (305 samples, 12.13%)</title><rect x="130.2" y="4901" width="143.1" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="133.16" y="4911.5" >`CONVERT^CLEAVIR-C..</text>
</g>
<g >
<title>`GC_free_block_ending_at (1 samples, 0.04%)</title><rect x="437.1" y="5397" width="0.5" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="440.13" y="5407.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="247.5" y="885" width="1.9" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="250.50" y="895.5" ></text>
</g>
<g >
<title>0x1225ef094 (4 samples, 0.16%)</title><rect x="282.7" y="1733" width="1.9" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="285.70" y="1743.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="610.8" y="5397" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="613.80" y="5407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="92.1" y="3333" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="95.14" y="3343.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="240.5" y="3269" width="10.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="243.46" y="3279.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="653.0" y="5493" width="0.5" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="656.04" y="5503.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (3 samples, 0.12%)</title><rect x="243.3" y="597" width="1.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="246.28" y="607.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="428.7" y="2133" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="431.68" y="2143.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="35.8" y="4821" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="38.82" y="4831.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="96.4" y="3477" width="1.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="99.36" y="3487.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="326.4" y="4709" width="0.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="329.36" y="4719.5" ></text>
</g>
<g >
<title>`ITEM-EQUAL^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-ITEM))^MET (1 samples, 0.04%)</title><rect x="255.0" y="2901" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="258.01" y="2911.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::Value*, llvm::ValueLatticeElem (1 samples, 0.04%)</title><rect x="948.3" y="5861" width="0.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="951.27" y="5871.5" ></text>
</g>
<g >
<title>`llvm::FindAvailablePtrLoadStore(llvm::Value*, llvm::Type*, bool (12 samples, 0.48%)</title><rect x="763.8" y="5813" width="5.6" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="766.81" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="421.6" y="2373" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="424.64" y="2383.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="321.2" y="5237" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="324.19" y="5247.5" ></text>
</g>
<g >
<title>`llvm::AliasSetTracker::add(llvm::BasicBlock&amp;) (1 samples, 0.04%)</title><rect x="919.2" y="5845" width="0.4" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="922.17" y="5855.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="295.4" y="2789" width="0.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="298.38" y="2799.5" ></text>
</g>
<g >
<title>`COMPILE-LAMBDA-LIST-CODE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="341.8" y="4485" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="344.85" y="4495.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="285.5" y="309" width="1.4" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="288.52" y="319.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorTemplateBase&lt;llvm::Value*, true&gt;::push_back(ll (1 samples, 0.04%)</title><rect x="698.6" y="5813" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="701.57" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="382.2" y="4325" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="385.21" y="4335.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="26.9" y="4693" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="29.90" y="4703.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="424.9" y="2981" width="1.0" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="427.92" y="2991.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="161.1" y="4325" width="1.4" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="164.14" y="4335.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="236.2" y="101" width="1.9" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="239.24" y="111.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="281.3" y="3957" width="5.6" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="284.30" y="3967.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4389" width="2.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="55.24" y="4399.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="565.7" y="5781" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="568.74" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="401.9" y="3845" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="404.93" y="3855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (50 samples, 1.99%)</title><rect x="62.6" y="5077" width="23.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="65.57" y="5087.5" >`..</text>
</g>
<g >
<title>`llvm::isSafeToSpeculativelyExecute(llvm::Value const*, llvm::In (1 samples, 0.04%)</title><rect x="781.6" y="5829" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="784.65" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="1653" width="4.2" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="279.60" y="1663.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (7 samples, 0.28%)</title><rect x="18.0" y="3701" width="3.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="20.98" y="3711.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3957" width="0.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="254.26" y="3967.5" ></text>
</g>
<g >
<title>`wrapped_core__generalp_T_sp (2 samples, 0.08%)</title><rect x="374.2" y="5813" width="1.0" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="377.23" y="5823.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="125.9" y="2261" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="128.93" y="2271.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (5 samples, 0.20%)</title><rect x="178.0" y="2389" width="2.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="181.04" y="2399.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="455.0" y="5733" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="457.96" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="2949" width="1.4" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="411.03" y="2959.5" ></text>
</g>
<g >
<title>`vsprintf_l (1 samples, 0.04%)</title><rect x="408.5" y="2629" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="411.50" y="2639.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::getModRefInfo(llvm::ImmutableCallSite, llv (2 samples, 0.08%)</title><rect x="905.1" y="5749" width="0.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="908.09" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="3061" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="414.78" y="3071.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::eraseInstFromFunction(llvm::Instruction&amp;) (1 samples, 0.04%)</title><rect x="738.9" y="5845" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="741.93" y="5855.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (8 samples, 0.32%)</title><rect x="268.2" y="1637" width="3.7" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="271.15" y="1647.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="36.8" y="3429" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="39.75" y="3439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="317.4" y="5461" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="320.44" y="5471.5" ></text>
</g>
<g >
<title>`llvm::getConstantStringInfo(llvm::Value const*, llvm::StringRef (1 samples, 0.04%)</title><rect x="893.4" y="5717" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="896.36" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3653" width="0.9" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="254.26" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (17 samples, 0.68%)</title><rect x="395.4" y="5077" width="7.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="398.35" y="5087.5" ></text>
</g>
<g >
<title>`llvm::FindFunctionBackedges(llvm::Function const&amp;, llvm::SmallV (1 samples, 0.04%)</title><rect x="931.8" y="5861" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="934.85" y="5871.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="295.4" y="2709" width="0.9" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="298.38" y="2719.5" ></text>
</g>
<g >
<title>`llvm::wouldInstructionBeTriviallyDead(llvm::Instruction*, llvm: (2 samples, 0.08%)</title><rect x="777.0" y="5845" width="0.9" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="779.95" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="408.5" y="2741" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="411.50" y="2751.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="243.3" y="789" width="1.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="246.28" y="799.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="397.7" y="3941" width="1.9" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="400.70" y="3951.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="281.3" y="4629" width="5.6" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="284.30" y="4639.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="411.8" y="3093" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="414.78" y="3103.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (1 samples, 0.04%)</title><rect x="750.2" y="5669" width="0.5" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="753.20" y="5679.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (12 samples, 0.48%)</title><rect x="172.4" y="1653" width="5.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="175.40" y="1663.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (IMPLICIT-PARAMETER-G (2 samples, 0.08%)</title><rect x="135.8" y="4325" width="0.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="138.79" y="4335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="2693" width="4.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="430.27" y="2703.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="279.4" y="405" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="282.42" y="415.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="332.9" y="4309" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="335.93" y="4319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="1157" width="0.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="428.86" y="1167.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="295.4" y="3141" width="0.9" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="298.38" y="3151.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="294.0" y="5125" width="2.8" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="296.97" y="5135.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="408.5" y="2725" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="411.50" y="2735.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (19 samples, 0.76%)</title><rect x="259.2" y="1285" width="9.0" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="262.24" y="1295.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (48 samples, 1.91%)</title><rect x="180.4" y="853" width="22.5" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="183.38" y="863.5" >`..</text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="390.7" y="2901" width="0.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="393.66" y="2911.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="232.0" y="3077" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="235.01" y="3087.5" ></text>
</g>
<g >
<title>0x11a477094 (83 samples, 3.30%)</title><rect x="88.4" y="4389" width="38.9" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="91.39" y="4399.5" >0x1..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="268.2" y="1413" width="0.4" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="271.15" y="1423.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="416.5" y="4741" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="419.48" y="4751.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((FIXNUMP-INSTRUCTIO (1 samples, 0.04%)</title><rect x="609.4" y="5429" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="612.39" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="1717" width="0.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="411.97" y="1727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="165.8" y="1429" width="1.0" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="168.83" y="1439.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="17.5" y="3989" width="5.6" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="20.51" y="3999.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (4 samples, 0.16%)</title><rect x="431.5" y="3349" width="1.9" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="434.50" y="3359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="255.5" y="3093" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="258.48" y="3103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1589" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="430.74" y="1599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="278.9" y="245" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="281.95" y="255.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (231 samples, 9.19%)</title><rect x="164.0" y="4453" width="108.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="166.95" y="4463.5" >`PROCESS-PARA..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="393.9" y="3029" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="396.95" y="3039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="4117" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="415.25" y="4127.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ENTER-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="395.8" y="4853" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="398.82" y="4863.5" ></text>
</g>
<g >
<title>`MAKE-EQ-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="386.4" y="2981" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="389.44" y="2991.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="56.5" y="5717" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="59.47" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="485" width="26.8" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="207.32" y="495.5" >`..</text>
</g>
<g >
<title>`llvm::LoopBase&lt;llvm::BasicBlock, llvm::Loop&gt;::getLoopLatch() co (1 samples, 0.04%)</title><rect x="846.9" y="5861" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="849.89" y="5871.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="240.5" y="2837" width="0.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="243.46" y="2847.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (22 samples, 0.88%)</title><rect x="34.4" y="5141" width="10.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="37.41" y="5151.5" ></text>
</g>
<g >
<title>`HOIST-AST^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="325.9" y="4709" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="328.89" y="4719.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (84 samples, 3.34%)</title><rect x="87.9" y="4421" width="39.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="90.92" y="4431.5" >`CO..</text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (15 samples, 0.60%)</title><rect x="867.5" y="5829" width="7.1" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="870.54" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="2917" width="4.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="285.70" y="2927.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::addAttribute(llvm::LLVMContext&amp;, unsigned  (1 samples, 0.04%)</title><rect x="676.5" y="5717" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="679.51" y="5727.5" ></text>
</g>
<g >
<title>0x11a477094 (43 samples, 1.71%)</title><rect x="252.2" y="3861" width="20.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="255.20" y="3871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="91.7" y="4149" width="7.9" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="94.67" y="4159.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::BasicBlock*, std::__1::allocator&lt;ll (1 samples, 0.04%)</title><rect x="720.2" y="5845" width="0.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="723.16" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="417.4" y="2053" width="3.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="420.41" y="2063.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="332.9" y="4149" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="335.93" y="4159.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (305 samples, 12.13%)</title><rect x="130.2" y="4981" width="143.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="133.16" y="4991.5" >`INTERPRETED-DISCR..</text>
</g>
<g >
<title>`core::type_of_decide_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="165.4" y="2453" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="168.36" y="2463.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="318.4" y="5541" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="321.38" y="5551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="52.7" y="3701" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="55.71" y="3711.5" ></text>
</g>
<g >
<title>`COMMA^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="34.9" y="4357" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="37.88" y="4367.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="427.3" y="2725" width="4.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="430.27" y="2735.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="342.8" y="4421" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="345.78" y="4431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2085" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="412.90" y="2095.5" ></text>
</g>
<g >
<title>`deduceFunctionAttributeInRPO(llvm::Module&amp;, llvm::CallGraph&amp;) (1 samples, 0.04%)</title><rect x="840.8" y="5925" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="843.79" y="5935.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (11 samples, 0.44%)</title><rect x="172.4" y="1029" width="5.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="175.40" y="1039.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="286.9" y="4821" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="289.93" y="4831.5" ></text>
</g>
<g >
<title>`MAKE-ARRAY^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="28.8" y="5029" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="31.77" y="5039.5" ></text>
</g>
<g >
<title>`IRC-BEGIN-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="626.3" y="5141" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="629.28" y="5151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (12 samples, 0.48%)</title><rect x="410.8" y="5125" width="5.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="413.84" y="5135.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (304 samples, 12.09%)</title><rect x="130.6" y="4725" width="142.7" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="133.63" y="4735.5" >`core::Funcallable..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="414.1" y="3541" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="417.13" y="3551.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (3 samples, 0.12%)</title><rect x="84.2" y="5013" width="1.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="87.16" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="401.0" y="3301" width="0.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="403.99" y="3311.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="384.1" y="4549" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="387.09" y="4559.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="415.5" y="4789" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="418.54" y="4799.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="400.0" y="4517" width="2.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="403.05" y="4527.5" ></text>
</g>
<g >
<title>`llvm::DebugLoc::get(unsigned int, unsigned int, llvm::MDNode co (1 samples, 0.04%)</title><rect x="620.2" y="5173" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="623.18" y="5183.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="416.0" y="4837" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="419.01" y="4847.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LoopInvariantCodeMotion::runOnLoop(llvm: (5 samples, 0.20%)</title><rect x="780.2" y="5861" width="2.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="783.24" y="5871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="397.7" y="4149" width="2.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="400.70" y="4159.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="276.1" y="4165" width="5.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="279.13" y="4175.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="2597" width="4.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="279.60" y="2607.5" ></text>
</g>
<g >
<title>`llvm::DILocalVariable* llvm::MDNode::storeImpl&lt;llvm::DILocalVar (1 samples, 0.04%)</title><rect x="654.9" y="5365" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="657.92" y="5375.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="84.6" y="4981" width="1.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="87.63" y="4991.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^FN^^ (2 samples, 0.08%)</title><rect x="509.9" y="5749" width="0.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="512.88" y="5759.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="356.4" y="5733" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="359.40" y="5743.5" ></text>
</g>
<g >
<title>`GC_get_first_part (1 samples, 0.04%)</title><rect x="563.4" y="5621" width="0.5" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="566.39" y="5631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="2053" width="4.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="285.70" y="2063.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="1877" width="0.4" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="428.86" y="1887.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1845" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="423.70" y="1855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (43 samples, 1.71%)</title><rect x="252.2" y="4101" width="20.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="255.20" y="4111.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="231.1" y="3525" width="0.4" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="234.07" y="3535.5" ></text>
</g>
<g >
<title>`core::cl__write_sequence(gctools::smart_ptr&lt;core::T_O&gt;, gctools (1 samples, 0.04%)</title><rect x="42.4" y="4549" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="45.39" y="4559.5" ></text>
</g>
<g >
<title>`CALL-WITH-COMPILATION-RESULTS^COMPILER^FN^^ (2,027 samples, 80.63%)</title><rect x="10.0" y="6053" width="951.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="13.00" y="6063.5" >`CALL-WITH-COMPILATION-RESULTS^COMPILER^FN^^</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (145 samples, 5.77%)</title><rect x="59.8" y="5477" width="68.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="62.75" y="5487.5" >`INTERP..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="247.5" y="149" width="1.9" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="250.50" y="159.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.04%)</title><rect x="461.5" y="5749" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="464.54" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="413.7" y="4069" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="416.66" y="4079.5" ></text>
</g>
<g >
<title>0x11a477094 (108 samples, 4.30%)</title><rect x="180.4" y="1381" width="50.7" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="183.38" y="1391.5" >0x11a..</text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::getNumOper (1 samples, 0.04%)</title><rect x="782.1" y="5765" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="785.12" y="5775.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="268.2" y="1653" width="3.7" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="271.15" y="1663.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.04%)</title><rect x="51.8" y="5013" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="54.77" y="5023.5" ></text>
</g>
<g >
<title>`PRIMITIVE-RETURN-TYPE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="662.9" y="5557" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="665.90" y="5567.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="401.0" y="3525" width="0.9" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="403.99" y="3535.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (16 samples, 0.64%)</title><rect x="243.3" y="2149" width="7.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="246.28" y="2159.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="430.6" y="2357" width="0.9" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="433.56" y="2367.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (4 samples, 0.16%)</title><rect x="49.9" y="4997" width="1.9" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="52.90" y="5007.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (85 samples, 3.38%)</title><rect x="87.4" y="4597" width="39.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="90.45" y="4607.5" >`co..</text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="3173" width="1.0" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="427.92" y="3183.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="2869" width="1.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="168.36" y="2879.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (114 samples, 4.53%)</title><rect x="600.9" y="5573" width="53.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="603.94" y="5583.5" >`LAYO..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="397.7" y="3637" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="400.70" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="4101" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="411.03" y="4111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="393.5" y="4293" width="0.9" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="396.48" y="4303.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (84 samples, 3.34%)</title><rect x="87.9" y="4485" width="39.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="90.92" y="4495.5" >`CO..</text>
</g>
<g >
<title>`vsprintf_l (1 samples, 0.04%)</title><rect x="409.9" y="1733" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="412.90" y="1743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="3125" width="1.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="411.03" y="3135.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="398.2" y="3541" width="0.9" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="401.17" y="3551.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (38 samples, 1.51%)</title><rect x="15.6" y="5365" width="17.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="18.63" y="5375.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="336.7" y="4053" width="0.5" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="339.68" y="4063.5" ></text>
</g>
<g >
<title>`MAKE-TYPEQ-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="426.3" y="2421" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="429.33" y="2431.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3205" width="0.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="254.26" y="3215.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="45.2" y="5477" width="1.4" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="48.20" y="5487.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="636.1" y="5285" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="639.14" y="5295.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.04%)</title><rect x="268.6" y="325" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="271.62" y="335.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'CLEAVIR-PRIMOP:LET (9 samples, 0.36%)</title><rect x="282.7" y="1989" width="4.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="285.70" y="1999.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="392.5" y="4213" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="395.54" y="4223.5" ></text>
</g>
<g >
<title>`SYMBOLP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="97.3" y="3429" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="100.30" y="3439.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="1013" width="9.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="262.24" y="1023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="398.2" y="3141" width="0.4" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="401.17" y="3151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2677" width="1.0" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="427.92" y="2687.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="423.5" y="2005" width="1.0" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="426.52" y="2015.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="281.3" y="3669" width="5.6" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="284.30" y="3679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2053" width="14.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="260.36" y="2063.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="247.5" y="101" width="1.9" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="250.50" y="111.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (16 samples, 0.64%)</title><rect x="243.3" y="1477" width="7.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="246.28" y="1487.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getPointerDependencyFrom(llvm::M (8 samples, 0.32%)</title><rect x="817.3" y="5749" width="3.8" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="820.32" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="401.0" y="3605" width="0.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="403.99" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="3157" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="412.44" y="3167.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2053" width="4.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="279.60" y="2063.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="243.3" y="1093" width="4.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="246.28" y="1103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (340 samples, 13.52%)</title><rect x="129.2" y="5589" width="159.6" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="132.22" y="5599.5" >`core::FuncallableIn..</text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="287.9" y="5077" width="0.9" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="290.87" y="5087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="412.3" y="3973" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="415.25" y="3983.5" ></text>
</g>
<g >
<title>`COMPUTE-DESTINIES^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (3 samples, 0.12%)</title><rect x="488.8" y="5829" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="491.76" y="5839.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (4 samples, 0.16%)</title><rect x="165.4" y="4101" width="1.8" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="168.36" y="4111.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="428.2" y="2405" width="1.4" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="431.21" y="2415.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="279.4" y="1189" width="1.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="282.42" y="1199.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (15 samples, 0.60%)</title><rect x="232.5" y="2741" width="7.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="235.48" y="2751.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.04%)</title><rect x="593.9" y="5813" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="596.90" y="5823.5" ></text>
</g>
<g >
<title>0x11a477094 (9 samples, 0.36%)</title><rect x="282.7" y="1877" width="4.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="285.70" y="1887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="421.6" y="4005" width="1.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="424.64" y="4015.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (2 samples, 0.08%)</title><rect x="843.1" y="5765" width="1.0" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="846.13" y="5775.5" ></text>
</g>
<g >
<title>`llvmo::Module_O::getFunction(gctools::smart_ptr&lt;core::Array_O&gt;) (1 samples, 0.04%)</title><rect x="354.5" y="5429" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="357.52" y="5439.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="36.8" y="3717" width="0.4" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="39.75" y="3727.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::markOverdefined(llvm::Value* (2 samples, 0.08%)</title><rect x="945.0" y="5877" width="0.9" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="947.99" y="5887.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (6 samples, 0.24%)</title><rect x="318.8" y="5461" width="2.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="321.85" y="5471.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="125.9" y="2965" width="1.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="128.93" y="2975.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="34.4" y="4357" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="37.41" y="4367.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="326.4" y="4613" width="0.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="329.36" y="4623.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="125.9" y="2741" width="1.0" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="128.93" y="2751.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="454.5" y="5797" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="457.49" y="5807.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (EXPLICIT-MULTI-PARAM (1 samples, 0.04%)</title><rect x="182.7" y="197" width="0.5" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="185.73" y="207.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="2773" width="1.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="168.83" y="2783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="396.3" y="4725" width="3.7" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="399.29" y="4735.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="356.4" y="5445" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="359.40" y="5455.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (305 samples, 12.13%)</title><rect x="130.2" y="5077" width="143.1" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="133.16" y="5087.5" >`core::Funcallable..</text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="758.6" y="5669" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="761.65" y="5679.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignment(llvm::Type*, bool) const (1 samples, 0.04%)</title><rect x="772.3" y="5717" width="0.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="775.26" y="5727.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitLoadInst(llvm::LoadInst&amp;) (23 samples, 0.91%)</title><rect x="762.9" y="5845" width="10.8" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="765.87" y="5855.5" ></text>
</g>
<g >
<title>0x1225f7094 (9 samples, 0.36%)</title><rect x="282.7" y="2453" width="4.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="285.70" y="2463.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="345.6" y="4981" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="348.60" y="4991.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (64 samples, 2.55%)</title><rect x="321.7" y="5445" width="30.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="324.66" y="5455.5" >`C..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="258.8" y="1509" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="261.77" y="1519.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.08%)</title><rect x="428.2" y="2261" width="0.9" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="431.21" y="2271.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.3" y="1301" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="430.27" y="1311.5" ></text>
</g>
<g >
<title>`OPTIMIZED-EARLEY-ITEM-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="167.7" y="853" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="170.71" y="863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3349" width="0.5" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="404.93" y="3359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="425.9" y="1461" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="428.86" y="1471.5" ></text>
</g>
<g >
<title>`COMPILE-LAMBDA-LIST-CODE^COMPILER^FN^^ (6 samples, 0.24%)</title><rect x="634.7" y="5413" width="2.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="637.73" y="5423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="423.0" y="3733" width="4.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="426.05" y="3743.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.04%)</title><rect x="46.6" y="5493" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="49.61" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="3461" width="4.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="430.27" y="3471.5" ></text>
</g>
<g >
<title>`%SIGNAL^CORE^FN^^ (2 samples, 0.08%)</title><rect x="33.5" y="5445" width="0.9" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="36.47" y="5455.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="423.0" y="3013" width="1.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="426.05" y="3023.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="397.7" y="4261" width="2.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="400.70" y="4271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="425.9" y="2757" width="0.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="428.86" y="2767.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="242.8" y="2213" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="245.81" y="2223.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="3109" width="3.8" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="420.41" y="3119.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="366.3" y="5717" width="0.4" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="369.25" y="5727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (57 samples, 2.27%)</title><rect x="204.3" y="885" width="26.8" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="207.32" y="895.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="429.6" y="2501" width="1.0" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="432.62" y="2511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="423.0" y="3765" width="4.3" height="15.0" fill="rgb(75,222,75)" rx="2" ry="2" />
<text  x="426.05" y="3775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="231.5" y="3781" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="234.54" y="3791.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="332.0" y="4677" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="334.99" y="4687.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (5 samples, 0.20%)</title><rect x="770.9" y="5765" width="2.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="773.85" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((THE-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="2277" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="423.70" y="2287.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (10 samples, 0.40%)</title><rect x="172.4" y="357" width="4.7" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="175.40" y="367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="390.2" y="3573" width="1.9" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="393.19" y="3583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="933" width="9.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="262.24" y="943.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="319.8" y="5253" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="322.79" y="5263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="414.1" y="3877" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="417.13" y="3887.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="397.7" y="3797" width="1.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="400.70" y="3807.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="166.3" y="869" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="169.30" y="879.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::create(unsigned int, gctools::smart_ptr&lt;co (1 samples, 0.04%)</title><rect x="126.9" y="2709" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="129.87" y="2719.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (5 samples, 0.20%)</title><rect x="949.2" y="5973" width="2.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="952.21" y="5983.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="431.5" y="2773" width="1.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="434.50" y="2783.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (2 samples, 0.08%)</title><rect x="353.6" y="5477" width="0.9" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="356.58" y="5487.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.04%)</title><rect x="164.9" y="4149" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="167.89" y="4159.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="407.6" y="4965" width="3.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="410.56" y="4975.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.04%)</title><rect x="322.6" y="5141" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="325.60" y="5151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="4277" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="412.44" y="4287.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="250.3" y="1221" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="253.32" y="1231.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="287.4" y="5141" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="290.40" y="5151.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2501" width="4.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="279.60" y="2511.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="390.2" y="3701" width="1.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="393.19" y="3711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (15 samples, 0.60%)</title><rect x="232.5" y="3045" width="7.0" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="235.48" y="3055.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="40.5" y="4421" width="0.5" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="43.51" y="4431.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="413.7" y="4293" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="416.66" y="4303.5" ></text>
</g>
<g >
<title>`llvmo::Pass_O::externalObject() const (1 samples, 0.04%)</title><rect x="619.2" y="5237" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="622.24" y="5247.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitAnd(llvm::BinaryOperator&amp;) (3 samples, 0.12%)</title><rect x="878.3" y="5845" width="1.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="881.34" y="5855.5" ></text>
</g>
<g >
<title>`core::core__input_stream_source_pos_info(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="26.4" y="4597" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="29.43" y="4607.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (2 samples, 0.08%)</title><rect x="311.8" y="5797" width="0.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="314.81" y="5807.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, void (llvmo::IRBuilderBase_O::*)(int,  (4 samples, 0.16%)</title><rect x="623.9" y="5125" width="1.9" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="626.94" y="5135.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="981" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="423.70" y="991.5" ></text>
</g>
<g >
<title>`void boost::io::detail::put&lt;char, std::__1::char_traits&lt;char&gt;,  (1 samples, 0.04%)</title><rect x="331.1" y="4357" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="334.05" y="4367.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="124.5" y="2965" width="1.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="127.53" y="2975.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.04%)</title><rect x="699.0" y="5813" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="702.04" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="416.5" y="4293" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="419.48" y="4303.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (21 samples, 0.84%)</title><rect x="16.6" y="4661" width="9.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="19.57" y="4671.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="268.2" y="1253" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="271.15" y="1263.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="3653" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="414.78" y="3663.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="321.2" y="5029" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="324.19" y="5039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="411.3" y="3269" width="0.5" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="414.31" y="3279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="49.9" y="4837" width="1.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="52.90" y="4847.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (4 samples, 0.16%)</title><rect x="257.4" y="1861" width="1.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="260.36" y="1871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="381.7" y="4469" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="384.74" y="4479.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="276.1" y="4405" width="5.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="279.13" y="4415.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="425.9" y="2821" width="0.9" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="428.86" y="2831.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (3 samples, 0.12%)</title><rect x="165.8" y="2613" width="1.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="168.83" y="2623.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="4037" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="414.78" y="4047.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.04%)</title><rect x="351.2" y="5253" width="0.5" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="354.23" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'EVAL-WHEN) T T T)) (2 samples, 0.08%)</title><rect x="287.9" y="5189" width="0.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="290.87" y="5199.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="2549" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="414.78" y="2559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="423.0" y="2341" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="426.05" y="2351.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3349" width="0.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="254.26" y="3359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="3125" width="4.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="430.27" y="3135.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (57 samples, 2.27%)</title><rect x="204.3" y="341" width="26.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="207.32" y="351.5" >`..</text>
</g>
<g >
<title>`core::core__find_class_holder(gctools::smart_ptr&lt;core::Symbol_O (1 samples, 0.04%)</title><rect x="80.4" y="4917" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="83.41" y="4927.5" ></text>
</g>
<g >
<title>`CONVERT-LOCAL-FUNCTIONS^CLEAVIR-CST-TO-AST^FN^^ (113 samples, 4.49%)</title><rect x="178.0" y="2597" width="53.1" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="181.04" y="2607.5" >`CONV..</text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (9 samples, 0.36%)</title><rect x="501.9" y="5797" width="4.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="504.90" y="5807.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="341.8" y="4661" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="344.85" y="4671.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="167.7" y="949" width="0.5" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="170.71" y="959.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="35.8" y="4789" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="38.82" y="4799.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitAllocaInst(llvm::AllocaInst&amp;) (1 samples, 0.04%)</title><rect x="877.9" y="5845" width="0.4" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="880.87" y="5855.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3141" width="0.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="254.26" y="3151.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (15 samples, 0.60%)</title><rect x="243.3" y="1173" width="7.0" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="246.28" y="1183.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (136 samples, 5.41%)</title><rect x="167.2" y="2645" width="63.9" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="170.24" y="2655.5" >`core::..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="125.0" y="1925" width="0.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="128.00" y="1935.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="1893" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="423.70" y="1903.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.04%)</title><rect x="453.6" y="5813" width="0.4" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="456.56" y="5823.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (2 samples, 0.08%)</title><rect x="808.9" y="5557" width="0.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="811.87" y="5567.5" ></text>
</g>
<g >
<title>`ENVIRONMENT-POLICY^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.04%)</title><rect x="99.6" y="4213" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="102.65" y="4223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="396.8" y="4133" width="0.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="399.76" y="4143.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="417.4" y="1557" width="2.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="420.41" y="1567.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="251.3" y="3797" width="0.9" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="254.26" y="3807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.4" y="3093" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="389.44" y="3103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1733" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="430.74" y="1743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="231.5" y="3605" width="0.5" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="234.54" y="3615.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="256.0" y="3013" width="1.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="258.95" y="3023.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="124.5" y="2901" width="1.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="127.53" y="2911.5" ></text>
</g>
<g >
<title>`SIMPLE-TYPE-PREDICATE^CORE^FN^^ (1 samples, 0.04%)</title><rect x="254.5" y="2997" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="257.54" y="3007.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="432.0" y="2373" width="0.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="434.96" y="2383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="3765" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="414.31" y="3775.5" ></text>
</g>
<g >
<title>0x11a479094 (3 samples, 0.12%)</title><rect x="279.4" y="789" width="1.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="282.42" y="799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2933" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="412.44" y="2943.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="496.3" y="5749" width="0.4" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="499.27" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="43.3" y="5029" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="46.33" y="5039.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="249.4" y="789" width="0.4" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="252.38" y="799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4021" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="408.68" y="4031.5" ></text>
</g>
<g >
<title>`HIR-&gt;MIR^CLASP-CLEAVIR^FN^^ (5 samples, 0.20%)</title><rect x="328.2" y="4501" width="2.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="331.23" y="4511.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="43.8" y="5109" width="0.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="46.79" y="5119.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasGEP(llvm::GEPOperator const*, unsigne (14 samples, 0.56%)</title><rect x="805.6" y="5685" width="6.6" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="808.58" y="5695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="165.4" y="3269" width="1.8" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="168.36" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="2709" width="3.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="420.41" y="2719.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (35 samples, 1.39%)</title><rect x="256.0" y="3317" width="16.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="258.95" y="3327.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (2 samples, 0.08%)</title><rect x="269.1" y="133" width="0.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="272.09" y="143.5" ></text>
</g>
<g >
<title>`llvm::AttributeSetNode::get(llvm::LLVMContext&amp;, llvm::AttrBuild (1 samples, 0.04%)</title><rect x="686.4" y="5829" width="0.4" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="689.36" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="180.4" y="293" width="2.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="183.38" y="303.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (43 samples, 1.71%)</title><rect x="468.6" y="5813" width="20.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="471.58" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="397.7" y="3669" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="400.70" y="3679.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (4 samples, 0.16%)</title><rect x="49.9" y="5205" width="1.9" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="52.90" y="5215.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="341.8" y="4517" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="344.85" y="4527.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (2 samples, 0.08%)</title><rect x="843.1" y="5813" width="1.0" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="846.13" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="421.6" y="2805" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="424.64" y="2815.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="268.6" y="773" width="3.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="271.62" y="783.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (25 samples, 0.99%)</title><rect x="357.8" y="5813" width="11.7" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="360.80" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="34.4" y="4645" width="0.9" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="37.41" y="4655.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::add(llvm::Pass*, bool) (1 samples, 0.04%)</title><rect x="685.4" y="5861" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="688.43" y="5871.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="123.1" y="2277" width="1.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="126.12" y="2287.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="182.7" y="245" width="1.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="185.73" y="255.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="287.4" y="4901" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="290.40" y="4911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2373" width="1.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="427.92" y="2383.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (PARSE-RESULT-CLIENT T T (1 samples, 0.04%)</title><rect x="49.9" y="4453" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="52.90" y="4463.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="317.9" y="5621" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="320.91" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="413.7" y="4165" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="416.66" y="4175.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="165.8" y="1141" width="1.0" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="168.83" y="1151.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (19 samples, 0.76%)</title><rect x="259.2" y="949" width="9.0" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="262.24" y="959.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (3 samples, 0.12%)</title><rect x="250.8" y="4117" width="1.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="253.79" y="4127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3333" width="1.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="424.64" y="3343.5" ></text>
</g>
<g >
<title>0x11a477094 (5 samples, 0.20%)</title><rect x="180.4" y="501" width="2.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="183.38" y="511.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (2 samples, 0.08%)</title><rect x="510.8" y="5685" width="1.0" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="513.82" y="5695.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (2 samples, 0.08%)</title><rect x="243.7" y="581" width="1.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="246.75" y="591.5" ></text>
</g>
<g >
<title>`COMPILE-LAMBDA-LIST-CODE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="662.9" y="5637" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="665.90" y="5647.5" ></text>
</g>
<g >
<title>`MAKE-EXPRESSION-RESULT^ECLECTOR.PARSE-RESULT^((CST-CLIENT T T T (1 samples, 0.04%)</title><rect x="24.1" y="4181" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="27.08" y="4191.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="36.3" y="4309" width="1.4" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="39.28" y="4319.5" ></text>
</g>
<g >
<title>`0x10c6cc104 (1 samples, 0.04%)</title><rect x="35.8" y="4869" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="38.82" y="4879.5" ></text>
</g>
<g >
<title>`COMPILE-WRONG-NUMBER-ARGUMENTS-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="626.3" y="5157" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="629.28" y="5167.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (49 samples, 1.95%)</title><rect x="1102.7" y="6293" width="23.0" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="1105.70" y="6303.5" >`..</text>
</g>
<g >
<title>`REDUCE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="24.1" y="4101" width="0.5" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="27.08" y="4111.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="719.2" y="5733" width="0.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="722.22" y="5743.5" ></text>
</g>
<g >
<title>`wrapped_cl__error_T_spList_sp (2 samples, 0.08%)</title><rect x="297.7" y="5349" width="1.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="300.72" y="5359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="428.7" y="1813" width="0.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="431.68" y="1823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="182.7" y="181" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="185.73" y="191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="429.6" y="2277" width="1.0" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="432.62" y="2287.5" ></text>
</g>
<g >
<title>`core::core__find_class_holder(gctools::smart_ptr&lt;core::Symbol_O (2 samples, 0.08%)</title><rect x="157.9" y="4245" width="0.9" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="160.85" y="4255.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="412.3" y="3429" width="0.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="415.25" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="381.7" y="4581" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="384.74" y="4591.5" ></text>
</g>
<g >
<title>0x11a477094 (48 samples, 1.91%)</title><rect x="180.4" y="1189" width="22.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="183.38" y="1199.5" >0..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.3" y="1397" width="0.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="430.27" y="1407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="632.9" y="5333" width="0.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="635.86" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="1589" width="1.4" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="168.83" y="1599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="381.7" y="4741" width="1.0" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="384.74" y="4751.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="455.9" y="5701" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="458.90" y="5711.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="592.5" y="5781" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="595.49" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="388.3" y="3861" width="3.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="391.31" y="3871.5" ></text>
</g>
<g >
<title>`%SIGNAL^CORE^FN^^ (1 samples, 0.04%)</title><rect x="23.1" y="4101" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="26.14" y="4111.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="254.1" y="2981" width="0.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="257.07" y="2991.5" ></text>
</g>
<g >
<title>`core::core__file_scope(gctools::smart_ptr&lt;core::T_O&gt;, gctools:: (1 samples, 0.04%)</title><rect x="44.7" y="5253" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="47.73" y="5263.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="626.8" y="5077" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="629.75" y="5087.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="408.0" y="4581" width="2.8" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="411.03" y="4591.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="172.4" y="1461" width="5.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="175.40" y="1471.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.04%)</title><rect x="308.5" y="5797" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="311.52" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (7 samples, 0.28%)</title><rect x="18.0" y="3717" width="3.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="20.98" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="393.5" y="3893" width="0.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="396.48" y="3903.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (1 samples, 0.04%)</title><rect x="27.8" y="4837" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="30.84" y="4847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="429.6" y="1701" width="1.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="432.62" y="1711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="425.9" y="3365" width="0.9" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="428.86" y="3375.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.04%)</title><rect x="354.0" y="5173" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="357.05" y="5183.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.04%)</title><rect x="879.3" y="5701" width="0.4" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="882.28" y="5711.5" ></text>
</g>
<g >
<title>0x11a477094 (43 samples, 1.71%)</title><rect x="252.2" y="4133" width="20.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="255.20" y="4143.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.04%)</title><rect x="535.2" y="5813" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="538.23" y="5823.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-CST-TO-AST^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="3413" width="63.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="170.24" y="3423.5" >`CONVER..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="326.4" y="4597" width="0.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="329.36" y="4607.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (93 samples, 3.70%)</title><rect x="12.8" y="5765" width="43.7" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="15.82" y="5775.5" >`cor..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="52.2" y="4613" width="2.9" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="55.24" y="4623.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="430.1" y="1653" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="433.09" y="1663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (22 samples, 0.88%)</title><rect x="423.0" y="4069" width="10.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="426.05" y="4079.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="255.5" y="3045" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="258.48" y="3055.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (11 samples, 0.44%)</title><rect x="276.1" y="4485" width="5.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="279.13" y="4495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="4293" width="1.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="424.64" y="4303.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="286.9" y="4533" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="289.93" y="4543.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="430.6" y="1653" width="0.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="433.56" y="1663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="405.7" y="4533" width="0.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="408.68" y="4543.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="240.0" y="2837" width="0.5" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="242.99" y="2847.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="1653" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="430.74" y="1663.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="414.1" y="4053" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="417.13" y="4063.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="278.9" y="741" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="281.95" y="751.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="790.6" y="5797" width="0.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="793.56" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="413.7" y="4661" width="1.8" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="416.66" y="4671.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="233.9" y="757" width="1.4" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="236.89" y="767.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (4 samples, 0.16%)</title><rect x="236.2" y="53" width="1.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="239.24" y="63.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="55.5" y="5669" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="58.53" y="5679.5" ></text>
</g>
<g >
<title>`core::core__ltvc_write_string(gctools::smart_ptr&lt;core::T_O&gt;, gc (1 samples, 0.04%)</title><rect x="684.5" y="5925" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="687.49" y="5935.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.04%)</title><rect x="888.7" y="5717" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="891.66" y="5727.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::getSCEV(llvm::Value*) (1 samples, 0.04%)</title><rect x="920.1" y="5589" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="923.11" y="5599.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="55.1" y="5285" width="0.4" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="58.06" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (40 samples, 1.59%)</title><rect x="232.0" y="3637" width="18.8" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="235.01" y="3647.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-FUNCTION^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="279.4" y="757" width="1.4" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="282.42" y="767.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ENCLOSE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="3797" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="408.68" y="3807.5" ></text>
</g>
<g >
<title>`core::cl__listSTAR(gctools::smart_ptr&lt;core::Vaslist&gt;) (1 samples, 0.04%)</title><rect x="664.8" y="5573" width="0.4" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="667.77" y="5583.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="396.8" y="3765" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="399.76" y="3775.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="408.5" y="2709" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="411.50" y="2719.5" ></text>
</g>
<g >
<title>`llvm::LazyBranchProbabilityInfoPass::runOnFunction(llvm::Functi (1 samples, 0.04%)</title><rect x="784.0" y="5893" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="786.99" y="5903.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="242.8" y="2533" width="8.0" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="245.81" y="2543.5" ></text>
</g>
<g >
<title>0x1225e5001 (1 samples, 0.04%)</title><rect x="87.4" y="4533" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="90.45" y="4543.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="414.1" y="4229" width="1.0" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="417.13" y="4239.5" ></text>
</g>
<g >
<title>`free_small (1 samples, 0.04%)</title><rect x="794.3" y="5845" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="797.32" y="5855.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="423.0" y="2437" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="426.05" y="2447.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.04%)</title><rect x="755.4" y="5797" width="0.4" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="758.36" y="5807.5" ></text>
</g>
<g >
<title>`0x10b6cf12a (1 samples, 0.04%)</title><rect x="12.8" y="5589" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="15.82" y="5599.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_uncollectable (1 samples, 0.04%)</title><rect x="405.2" y="4853" width="0.5" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="408.21" y="4863.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="2485" width="4.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="279.60" y="2495.5" ></text>
</g>
<g >
<title>`core::lambdaListHandler_createBindings(gctools::smart_ptr&lt;core: (1 samples, 0.04%)</title><rect x="641.8" y="5349" width="0.4" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="644.77" y="5359.5" ></text>
</g>
<g >
<title>`getValueFromCondition(llvm::Value*, llvm::Value*, bool) (2 samples, 0.08%)</title><rect x="694.8" y="5797" width="1.0" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="697.81" y="5807.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="233.9" y="37" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="236.89" y="47.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignment(llvm::Type*, bool) const (1 samples, 0.04%)</title><rect x="860.0" y="5781" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="863.03" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="161.1" y="4309" width="1.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="164.14" y="4319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="1573" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="423.70" y="1583.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoCache::insertResult(llvm::V (1 samples, 0.04%)</title><rect x="691.1" y="5813" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="694.06" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="381.7" y="4661" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="384.74" y="4671.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="3493" width="4.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="279.60" y="3503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="423.0" y="3237" width="1.9" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="426.05" y="3247.5" ></text>
</g>
<g >
<title>0x11a477094 (43 samples, 1.71%)</title><rect x="252.2" y="3589" width="20.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="255.20" y="3599.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (2 samples, 0.08%)</title><rect x="733.3" y="5685" width="0.9" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="736.30" y="5695.5" ></text>
</g>
<g >
<title>0x11a477094 (10 samples, 0.40%)</title><rect x="172.4" y="421" width="4.7" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="175.40" y="431.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="295.4" y="3525" width="1.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="298.38" y="3535.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (31 samples, 1.23%)</title><rect x="618.8" y="5365" width="14.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="621.77" y="5375.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="354.5" y="5461" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="357.52" y="5471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="1717" width="0.5" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="423.70" y="1727.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="240.0" y="2725" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="242.99" y="2735.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="430.6" y="2277" width="0.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="433.56" y="2287.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="1541" width="9.0" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="262.24" y="1551.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="409.9" y="2421" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="412.90" y="2431.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="2949" width="0.5" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="414.78" y="2959.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (5 samples, 0.20%)</title><rect x="178.0" y="2261" width="2.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="181.04" y="2271.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="382.2" y="4549" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="385.21" y="4559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="29.7" y="5125" width="1.0" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="32.71" y="5135.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="3237" width="1.0" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="427.92" y="3247.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (3 samples, 0.12%)</title><rect x="292.1" y="5589" width="1.4" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="295.09" y="5599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="1829" width="1.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="168.83" y="1839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="431.5" y="2789" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="434.50" y="2799.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="114.2" y="3525" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="117.20" y="3535.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (7 samples, 0.28%)</title><rect x="268.6" y="1429" width="3.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="271.62" y="1439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="4197" width="1.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="411.03" y="4207.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="39.1" y="4197" width="0.9" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="42.10" y="4207.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::apint_match::match&lt;llvm::Value const&gt;( (1 samples, 0.04%)</title><rect x="770.4" y="5781" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="773.38" y="5791.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'IF) T T T))^METHOD (7 samples, 0.28%)</title><rect x="268.6" y="821" width="3.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="271.62" y="831.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="580.3" y="5765" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="583.29" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (108 samples, 4.30%)</title><rect x="180.4" y="1637" width="50.7" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="183.38" y="1647.5" >`core..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.7" y="1157" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="430.74" y="1167.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="389.3" y="3733" width="0.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="392.25" y="3743.5" ></text>
</g>
<g >
<title>0x1225ef094 (6 samples, 0.24%)</title><rect x="269.1" y="581" width="2.8" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="272.09" y="591.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (3 samples, 0.12%)</title><rect x="435.3" y="5445" width="1.4" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="438.25" y="5455.5" ></text>
</g>
<g >
<title>`free_tiny (2 samples, 0.08%)</title><rect x="709.4" y="5877" width="0.9" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="712.36" y="5887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="413.7" y="4901" width="1.8" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="416.66" y="4911.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="122.6" y="2917" width="1.9" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="125.65" y="2927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1413" width="0.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="428.86" y="1423.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="312.7" y="5541" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="315.74" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (43 samples, 1.71%)</title><rect x="252.2" y="3685" width="20.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="255.20" y="3695.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2213" width="1.4" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="127.53" y="2223.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="254.5" y="3013" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="257.54" y="3023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="379.9" y="5045" width="3.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="382.86" y="5055.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (5 samples, 0.20%)</title><rect x="180.4" y="309" width="2.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="183.38" y="319.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (108 samples, 4.30%)</title><rect x="180.4" y="2085" width="50.7" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="183.38" y="2095.5" >`PROC..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="2885" width="3.8" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="420.41" y="2895.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="256.0" y="2789" width="0.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="258.95" y="2799.5" ></text>
</g>
<g >
<title>`core::cl__append(gctools::smart_ptr&lt;core::Vaslist&gt;) (1 samples, 0.04%)</title><rect x="494.4" y="5765" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="497.39" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="3141" width="1.0" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="427.92" y="3151.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::computeExitLimitFromCond(llvm::Loop cons (1 samples, 0.04%)</title><rect x="846.4" y="5701" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="849.42" y="5711.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::computeBackedgeTakenCount(llvm::Loop con (1 samples, 0.04%)</title><rect x="920.1" y="5813" width="0.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="923.11" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="102.0" y="3637" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="105.00" y="3647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="268.6" y="501" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="271.62" y="511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="2741" width="4.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="279.60" y="2751.5" ></text>
</g>
<g >
<title>`llvm::APInt::clearUnusedBits() (1 samples, 0.04%)</title><rect x="761.9" y="5797" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="764.93" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="384.6" y="4245" width="3.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="387.56" y="4255.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (37 samples, 1.47%)</title><rect x="325.9" y="4821" width="17.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="328.89" y="4831.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="384.1" y="4501" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="387.09" y="4511.5" ></text>
</g>
<g >
<title>0x11a477094 (19 samples, 0.76%)</title><rect x="259.2" y="1237" width="9.0" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="262.24" y="1247.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (2 samples, 0.08%)</title><rect x="891.5" y="5685" width="0.9" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="894.48" y="5695.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="259.2" y="293" width="1.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="262.24" y="303.5" ></text>
</g>
<g >
<title>`IRC-GEP^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="639.9" y="5397" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="642.90" y="5407.5" ></text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (1 samples, 0.04%)</title><rect x="165.4" y="2421" width="0.4" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="168.36" y="2431.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="49.4" y="5669" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="52.43" y="5679.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getBlockValue(llvm::V (1 samples, 0.04%)</title><rect x="692.5" y="5813" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="695.47" y="5823.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="354.5" y="5493" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="357.52" y="5503.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (19 samples, 0.76%)</title><rect x="259.2" y="1685" width="9.0" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="262.24" y="1695.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="282.7" y="1573" width="1.9" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="285.70" y="1583.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (3 samples, 0.12%)</title><rect x="827.6" y="5701" width="1.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="830.65" y="5711.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="268.2" y="1589" width="0.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="271.15" y="1599.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="383.2" y="5029" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="386.15" y="5039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="411.8" y="4229" width="0.9" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="414.78" y="4239.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (17 samples, 0.68%)</title><rect x="232.5" y="3189" width="8.0" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="235.48" y="3199.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="297.3" y="5413" width="0.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="300.26" y="5423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="431.5" y="2693" width="1.4" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="434.50" y="2703.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.04%)</title><rect x="554.9" y="5749" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="557.94" y="5759.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.04%)</title><rect x="554.9" y="5765" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="557.94" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2837" width="1.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="427.92" y="2847.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="285.1" y="933" width="0.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="288.05" y="943.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="18.0" y="3621" width="1.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="20.98" y="3631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="295.8" y="1925" width="0.5" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="298.85" y="1935.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="337.2" y="4501" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="340.15" y="4511.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="178.0" y="2357" width="2.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="181.04" y="2367.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="345.6" y="5013" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="348.60" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="4085" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="414.78" y="4095.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="95.9" y="3525" width="1.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="98.89" y="3535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((THE-AST T))^METHOD^^ (7 samples, 0.28%)</title><rect x="417.4" y="2181" width="3.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="420.41" y="2191.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="410.8" y="4069" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="413.84" y="4079.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="1797" width="5.6" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="236.89" y="1807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (56 samples, 2.23%)</title><rect x="407.6" y="5333" width="26.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="410.56" y="5343.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="2437" width="1.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="434.50" y="2447.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (336 samples, 13.37%)</title><rect x="129.7" y="5285" width="157.7" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="132.69" y="5295.5" >`core::clos__interpr..</text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.04%)</title><rect x="713.1" y="5861" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="716.12" y="5871.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (1 samples, 0.04%)</title><rect x="563.4" y="5685" width="0.5" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="566.39" y="5695.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="654.9" y="5477" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="657.92" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (5 samples, 0.20%)</title><rect x="284.6" y="1093" width="2.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="287.58" y="1103.5" ></text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (1 samples, 0.04%)</title><rect x="163.0" y="4389" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="166.02" y="4399.5" ></text>
</g>
<g >
<title>`core::core__integer_to_string(gctools::smart_ptr&lt;core::StrNs_O&gt; (1 samples, 0.04%)</title><rect x="409.9" y="1765" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="412.90" y="1775.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.04%)</title><rect x="98.2" y="3861" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="101.24" y="3871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="423.0" y="3573" width="3.8" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="426.05" y="3583.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="1877" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="411.97" y="1887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="294.0" y="3973" width="0.9" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="296.97" y="3983.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="425.9" y="1125" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="428.86" y="1135.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="125.9" y="2165" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="128.93" y="2175.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="1813" width="5.6" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="236.89" y="1823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="231.5" y="3685" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="234.54" y="3695.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (1 samples, 0.04%)</title><rect x="356.4" y="5541" width="0.5" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="359.40" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="420.7" y="405" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="423.70" y="415.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="282.7" y="1269" width="0.5" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="285.70" y="1279.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.04%)</title><rect x="49.0" y="5621" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="51.96" y="5631.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="112.8" y="3605" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="115.79" y="3615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="286.9" y="5157" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="289.93" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="401.9" y="3285" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="404.93" y="3295.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="385.5" y="3605" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="388.50" y="3615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.9" y="2565" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="412.90" y="2575.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (2 samples, 0.08%)</title><rect x="943.1" y="5781" width="0.9" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="946.11" y="5791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="413.7" y="3861" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="416.66" y="3871.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LOCALLY) T T T))^M (9 samples, 0.36%)</title><rect x="282.7" y="2437" width="4.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="285.70" y="2447.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="4309" width="1.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="411.03" y="4319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="44.7" y="5429" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="47.73" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="2117" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="423.70" y="2127.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="324.0" y="5141" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="327.01" y="5151.5" ></text>
</g>
<g >
<title>0x11a477094 (56 samples, 2.23%)</title><rect x="204.3" y="245" width="26.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="207.32" y="255.5" >0..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="240.0" y="2565" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="242.99" y="2575.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="34.4" y="4325" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="37.41" y="4335.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.12%)</title><rect x="241.4" y="2965" width="1.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="244.40" y="2975.5" ></text>
</g>
<g >
<title>0x122623094 (19 samples, 0.76%)</title><rect x="259.2" y="1093" width="9.0" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="262.24" y="1103.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Constant*, llvm::Consta (1 samples, 0.04%)</title><rect x="726.7" y="5861" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="729.73" y="5871.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.04%)</title><rect x="749.3" y="5637" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="752.26" y="5647.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.04%)</title><rect x="329.2" y="4309" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="332.17" y="4319.5" ></text>
</g>
<g >
<title>`core::cl__write_sequence(gctools::smart_ptr&lt;core::T_O&gt;, gctools (1 samples, 0.04%)</title><rect x="19.4" y="3429" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="22.39" y="3439.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (1 samples, 0.04%)</title><rect x="842.7" y="5765" width="0.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="845.67" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (7 samples, 0.28%)</title><rect x="379.9" y="5077" width="3.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="382.86" y="5087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="430.6" y="2309" width="0.9" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="433.56" y="2319.5" ></text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (2 samples, 0.08%)</title><rect x="157.9" y="4261" width="0.9" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="160.85" y="4271.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (19 samples, 0.76%)</title><rect x="259.2" y="1797" width="9.0" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="262.24" y="1807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="1317" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="434.96" y="1327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="423.5" y="2245" width="1.0" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="426.52" y="2255.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4181" width="1.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="39.28" y="4191.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (9 samples, 0.36%)</title><rect x="282.7" y="2069" width="4.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="285.70" y="2079.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="41.0" y="4421" width="0.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="43.98" y="4431.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (1 samples, 0.04%)</title><rect x="663.8" y="5637" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="666.83" y="5647.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getValueOnEdge(llvm:: (7 samples, 0.28%)</title><rect x="694.8" y="5829" width="3.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="697.81" y="5839.5" ></text>
</g>
<g >
<title>0x1225ef094 (9 samples, 0.36%)</title><rect x="243.3" y="1141" width="4.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="246.28" y="1151.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="4165" width="1.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="411.03" y="4175.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (26 samples, 1.03%)</title><rect x="357.3" y="5845" width="12.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="360.33" y="5855.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.04%)</title><rect x="656.8" y="5461" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="659.79" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="396.8" y="4229" width="0.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="399.76" y="4239.5" ></text>
</g>
<g >
<title>`llvm::iterator_range&lt;llvm::po_iterator&lt;llvm::DomTreeNodeBase&lt;ll (1 samples, 0.04%)</title><rect x="922.0" y="5861" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="924.99" y="5871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="242.8" y="2005" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="245.81" y="2015.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (54 samples, 2.15%)</title><rect x="379.4" y="5621" width="25.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="382.40" y="5631.5" >`..</text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.08%)</title><rect x="182.7" y="277" width="1.0" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="185.73" y="287.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getSinglePredecessor() const (1 samples, 0.04%)</title><rect x="932.8" y="5813" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="935.78" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (108 samples, 4.30%)</title><rect x="180.4" y="2245" width="50.7" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="183.38" y="2255.5" >`core..</text>
</g>
<g >
<title>`llvm::MemorySSA::~MemorySSA() (1 samples, 0.04%)</title><rect x="795.3" y="5845" width="0.4" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="798.26" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="171.9" y="1605" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="174.93" y="1615.5" ></text>
</g>
<g >
<title>`llvm::findDbgValues(llvm::SmallVectorImpl&lt;llvm::DbgValueInst*&gt;&amp; (1 samples, 0.04%)</title><rect x="738.9" y="5829" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="741.93" y="5839.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (3 samples, 0.12%)</title><rect x="862.4" y="5765" width="1.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="865.38" y="5775.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="183.7" y="245" width="3.7" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="186.67" y="255.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (4 samples, 0.16%)</title><rect x="165.4" y="3765" width="1.8" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="168.36" y="3775.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.04%)</title><rect x="530.1" y="5717" width="0.4" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="533.06" y="5727.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="113.3" y="3637" width="1.4" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="116.26" y="3647.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="343.7" y="4613" width="0.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="346.72" y="4623.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="321.7" y="5173" width="0.9" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="324.66" y="5183.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="412.3" y="3893" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="415.25" y="3903.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.04%)</title><rect x="324.5" y="4725" width="0.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="327.48" y="4735.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::Instruction&gt;, llvm:: (1 samples, 0.04%)</title><rect x="951.1" y="5861" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="954.09" y="5871.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="394.4" y="5045" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="397.42" y="5055.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="452.6" y="5333" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="455.62" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2917" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="412.44" y="2927.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.8" y="3941" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="414.78" y="3951.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (2 samples, 0.08%)</title><rect x="130.6" y="4613" width="1.0" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="133.63" y="4623.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'EVAL-WHEN) T T T)) (4 samples, 0.16%)</title><rect x="297.3" y="5637" width="1.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="300.26" y="5647.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (8 samples, 0.32%)</title><rect x="18.0" y="3877" width="3.7" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="20.98" y="3887.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="384.6" y="4101" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="387.56" y="4111.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="417.9" y="677" width="0.5" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="420.88" y="687.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="405.7" y="4933" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="408.68" y="4943.5" ></text>
</g>
<g >
<title>`SPECIALIZE^CLEAVIR-HIR-TO-MIR^((FETCH-INSTRUCTION CLASP T T))^M (1 samples, 0.04%)</title><rect x="455.4" y="5829" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="458.43" y="5839.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (5 samples, 0.20%)</title><rect x="949.2" y="6005" width="2.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="952.21" y="6015.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="408.0" y="4597" width="2.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="411.03" y="4607.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="21.3" y="3685" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="24.26" y="3695.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (5 samples, 0.20%)</title><rect x="247.5" y="1013" width="2.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="250.50" y="1023.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind)  (2 samples, 0.08%)</title><rect x="849.2" y="5893" width="1.0" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="852.24" y="5903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="274.7" y="5141" width="1.0" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="277.73" y="5151.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="3269" width="1.0" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="427.92" y="3279.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.04%)</title><rect x="489.7" y="5733" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="492.70" y="5743.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="905.6" y="5653" width="0.4" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="908.56" y="5663.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.04%)</title><rect x="376.1" y="5669" width="0.5" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="379.11" y="5679.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="25.5" y="4341" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="28.49" y="4351.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="386.4" y="3125" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="389.44" y="3135.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="676.5" y="5749" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="679.51" y="5759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4421" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="408.68" y="4431.5" ></text>
</g>
<g >
<title>`REMOVE-USELESS-INSTRUCTIONS^CLEAVIR-REMOVE-USELESS-INSTRUCTIONS (19 samples, 0.76%)</title><rect x="524.0" y="5829" width="8.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="526.96" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.0" y="2533" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="411.97" y="2543.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="409.4" y="3093" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="412.44" y="3103.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="55.1" y="5557" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="58.06" y="5567.5" ></text>
</g>
<g >
<title>0x1225f1094 (5 samples, 0.20%)</title><rect x="180.4" y="181" width="2.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="183.38" y="191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="284.6" y="1317" width="2.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="287.58" y="1327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="2613" width="4.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="430.27" y="2623.5" ></text>
</g>
<g >
<title>`CANONICALIZE-DECLARATION-SPECIFIERS^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.08%)</title><rect x="130.6" y="4629" width="1.0" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="133.63" y="4639.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (1 samples, 0.04%)</title><rect x="671.8" y="5781" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="674.81" y="5791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="100.6" y="3637" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="103.59" y="3647.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (57 samples, 2.27%)</title><rect x="204.3" y="613" width="26.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="207.32" y="623.5" >`..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'QUOTE) T T T))^MET (1 samples, 0.04%)</title><rect x="276.1" y="3845" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="279.13" y="3855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="386.0" y="3013" width="0.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="388.97" y="3023.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (1 samples, 0.04%)</title><rect x="20.3" y="3189" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="23.33" y="3199.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="423.0" y="4261" width="10.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="426.05" y="4271.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="326.8" y="4645" width="0.5" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="329.83" y="4655.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (31 samples, 1.23%)</title><rect x="257.4" y="2085" width="14.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="260.36" y="2095.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="123.6" y="773" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="126.59" y="783.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="295.4" y="2885" width="0.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="298.38" y="2895.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="287.4" y="4613" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="290.40" y="4623.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.5" y="4757" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="418.54" y="4767.5" ></text>
</g>
<g >
<title>`core::clasp_namestring(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="26.0" y="4229" width="0.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="28.96" y="4239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (19 samples, 0.76%)</title><rect x="259.2" y="1557" width="9.0" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="262.24" y="1567.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="313.2" y="5413" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="316.21" y="5423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="231.5" y="3765" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="234.54" y="3775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="401.9" y="4085" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="404.93" y="4095.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="418.8" y="965" width="1.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="421.82" y="975.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="390.7" y="3413" width="1.4" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="393.66" y="3423.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="172.4" y="949" width="5.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="175.40" y="959.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (43 samples, 1.71%)</title><rect x="252.2" y="3669" width="20.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="255.20" y="3679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="3573" width="4.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="279.60" y="3583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="414.1" y="4357" width="1.0" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="417.13" y="4367.5" ></text>
</g>
<g >
<title>`TRANSFORM-QUASIQUOTE-ARGUMENT^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="122.6" y="2469" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="125.65" y="2479.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.04%)</title><rect x="780.7" y="5829" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="783.71" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.3" y="1013" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="430.27" y="1023.5" ></text>
</g>
<g >
<title>`UPGRADED-ARRAY-ELEMENT-TYPE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="28.8" y="5013" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="31.77" y="5023.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="38.2" y="4229" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="41.16" y="4239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="3989" width="3.8" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="420.41" y="3999.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="3717" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="414.78" y="3727.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.04%)</title><rect x="513.2" y="5637" width="0.4" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="516.17" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.4" y="2997" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="412.44" y="3007.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="427.3" y="3045" width="4.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="430.27" y="3055.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (1 samples, 0.04%)</title><rect x="507.5" y="5765" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="510.53" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="3029" width="1.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="411.03" y="3039.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="230.6" y="197" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="233.60" y="207.5" ></text>
</g>
<g >
<title>`std::__1::unique_ptr&lt;std::__1::__tree_node&lt;std::__1::__value_ty (1 samples, 0.04%)</title><rect x="342.8" y="4501" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="345.78" y="4511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (7 samples, 0.28%)</title><rect x="304.3" y="5845" width="3.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="307.30" y="5855.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="168.6" y="741" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="171.65" y="751.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="252.2" y="3429" width="1.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="255.20" y="3439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (10 samples, 0.40%)</title><rect x="172.4" y="37" width="4.7" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="175.40" y="47.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (11 samples, 0.44%)</title><rect x="37.7" y="4773" width="5.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="40.69" y="4783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="396.8" y="3989" width="0.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="399.76" y="3999.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getEdgeValue(llvm::Va (1 samples, 0.04%)</title><rect x="701.4" y="5781" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="704.38" y="5791.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.04%)</title><rect x="906.0" y="5685" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="909.03" y="5695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="421.6" y="2133" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="424.64" y="2143.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (12 samples, 0.48%)</title><rect x="233.9" y="1685" width="5.6" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="236.89" y="1695.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="235.3" y="117" width="0.9" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="238.30" y="127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="4965" width="0.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="408.21" y="4975.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (57 samples, 2.27%)</title><rect x="204.3" y="437" width="26.8" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="207.32" y="447.5" >`..</text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (4 samples, 0.16%)</title><rect x="914.9" y="5829" width="1.9" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="917.95" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="421.6" y="3877" width="1.0" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="424.64" y="3887.5" ></text>
</g>
<g >
<title>0x1225e9094 (1 samples, 0.04%)</title><rect x="231.5" y="3301" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="234.54" y="3311.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUP^CLEAVIR-CST-TO-AST^((MULTI-PARAMETER-GR (108 samples, 4.30%)</title><rect x="180.4" y="2357" width="50.7" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="183.38" y="2367.5" >`PROC..</text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (2 samples, 0.08%)</title><rect x="123.6" y="1797" width="0.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="126.59" y="1807.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (1 samples, 0.04%)</title><rect x="861.4" y="5797" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="864.44" y="5807.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (11 samples, 0.44%)</title><rect x="49.9" y="5477" width="5.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="52.90" y="5487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="3653" width="4.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="279.60" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="391.6" y="2389" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="394.60" y="2399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="161.6" y="4213" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="164.61" y="4223.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="843.6" y="5669" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="846.60" y="5679.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.04%)</title><rect x="665.7" y="5541" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="668.71" y="5551.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (231 samples, 9.19%)</title><rect x="164.0" y="4533" width="108.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="166.95" y="4543.5" >`core::clos__..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="233.0" y="2245" width="0.9" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="235.95" y="2255.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="251.3" y="3125" width="0.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="254.26" y="3135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="420.7" y="2101" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="423.70" y="2111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3813" width="3.8" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="420.41" y="3823.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="165.8" y="1301" width="1.0" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="168.83" y="1311.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="34.4" y="4901" width="0.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="37.41" y="4911.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="423.0" y="3221" width="1.9" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="426.05" y="3231.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.08%)</title><rect x="642.2" y="5381" width="1.0" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="645.24" y="5391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="295.4" y="3717" width="1.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="298.38" y="3727.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (48 samples, 1.91%)</title><rect x="180.4" y="725" width="22.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="183.38" y="735.5" >`..</text>
</g>
<g >
<title>`PROCESS-PARAMETER^CLEAVIR-CST-TO-AST^((SIMPLE-VARIABLE T T T T  (1 samples, 0.04%)</title><rect x="255.5" y="2933" width="0.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="258.48" y="2943.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="92.1" y="3381" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="95.14" y="3391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="295.4" y="3861" width="1.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="298.38" y="3871.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (7 samples, 0.28%)</title><rect x="314.2" y="5429" width="3.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="317.15" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="400.5" y="3717" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="403.52" y="3727.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="654.0" y="5509" width="0.4" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="656.98" y="5519.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.04%)</title><rect x="327.8" y="4325" width="0.4" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="330.76" y="4335.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="289.7" y="5509" width="1.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="292.75" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="396.3" y="4805" width="3.7" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="399.29" y="4815.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (136 samples, 5.41%)</title><rect x="167.2" y="3093" width="63.9" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="170.24" y="3103.5" >`core::..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="105.8" y="3285" width="0.4" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="108.75" y="3295.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="295.4" y="3445" width="1.4" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="298.38" y="3455.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (16 samples, 0.64%)</title><rect x="260.6" y="293" width="7.6" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="263.64" y="303.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="323.1" y="5365" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="326.07" y="5375.5" ></text>
</g>
<g >
<title>`LOGAND^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="43.3" y="4933" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="46.33" y="4943.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="124.5" y="2997" width="1.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="127.53" y="3007.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (2 samples, 0.08%)</title><rect x="858.6" y="5813" width="1.0" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="861.62" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="235.3" y="261" width="4.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="238.30" y="271.5" ></text>
</g>
<g >
<title>all (2,514 samples, 100%)</title><rect x="10.0" y="6437" width="1180.0" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="13.00" y="6447.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (23 samples, 0.91%)</title><rect x="16.6" y="4725" width="10.8" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="19.57" y="4735.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="429.1" y="2213" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="432.15" y="2223.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (57 samples, 2.27%)</title><rect x="204.3" y="629" width="26.8" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="207.32" y="639.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="231.5" y="3669" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="234.54" y="3679.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.04%)</title><rect x="289.3" y="5589" width="0.4" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="292.28" y="5599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (43 samples, 1.71%)</title><rect x="252.2" y="3541" width="20.2" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="255.20" y="3551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2357" width="1.0" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="427.92" y="2367.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="282.7" y="1685" width="1.9" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="285.70" y="1695.5" ></text>
</g>
<g >
<title>`core::clasp_namestring(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="30.2" y="5013" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="33.18" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.2" y="3957" width="0.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="424.17" y="3967.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.04%)</title><rect x="501.0" y="5733" width="0.4" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="503.96" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (63 samples, 2.51%)</title><rect x="133.9" y="4453" width="29.6" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="136.91" y="4463.5" >`I..</text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="1557" width="0.9" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="126.59" y="1567.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="254.1" y="3173" width="1.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="257.07" y="3183.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (9 samples, 0.36%)</title><rect x="327.3" y="4581" width="4.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="330.30" y="4591.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="412.3" y="3109" width="0.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="415.25" y="3119.5" ></text>
</g>
<g >
<title>`LTV/CONS^LITERAL^FN^^ (15 samples, 0.60%)</title><rect x="332.9" y="4661" width="7.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="335.93" y="4671.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.04%)</title><rect x="343.7" y="4645" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="346.72" y="4655.5" ></text>
</g>
<g >
<title>`IRC-BIT-CAST^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="626.8" y="5141" width="0.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="629.75" y="5151.5" ></text>
</g>
<g >
<title>`llvm::getConstantStringInfo(llvm::Value const*, llvm::StringRef (1 samples, 0.04%)</title><rect x="780.7" y="5813" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="783.71" y="5823.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="432.9" y="3317" width="0.5" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="435.90" y="3327.5" ></text>
</g>
<g >
<title>`__cxa_throw (2 samples, 0.08%)</title><rect x="287.9" y="4469" width="0.9" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="290.87" y="4479.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="417.4" y="1269" width="2.4" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="420.41" y="1279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="408.0" y="4645" width="2.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="411.03" y="4655.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (31 samples, 1.23%)</title><rect x="257.4" y="2997" width="14.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="260.36" y="3007.5" ></text>
</g>
<g >
<title>0x1225ef094 (22 samples, 0.88%)</title><rect x="167.7" y="2197" width="10.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="170.71" y="2207.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="428.7" y="2213" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="431.68" y="2223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="2517" width="1.0" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="427.92" y="2527.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (229 samples, 9.11%)</title><rect x="164.9" y="4325" width="107.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="167.89" y="4335.5" >`core::clos__..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.7" y="1221" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="430.74" y="1231.5" ></text>
</g>
<g >
<title>`GC_free_block_ending_at (2 samples, 0.08%)</title><rect x="504.7" y="5477" width="1.0" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="507.72" y="5487.5" ></text>
</g>
<g >
<title>`MAKE-CONDITION^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="332.0" y="4405" width="0.5" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="334.99" y="4415.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const (1 samples, 0.04%)</title><rect x="922.0" y="5829" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="924.99" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="427.3" y="2165" width="0.9" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="430.27" y="2175.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="5173" width="0.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="290.87" y="5183.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="339.0" y="4421" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="342.03" y="4431.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="178.0" y="2197" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="181.04" y="2207.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="424.9" y="1285" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="427.92" y="1295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (54 samples, 2.15%)</title><rect x="379.4" y="5685" width="25.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="382.40" y="5695.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (15 samples, 0.60%)</title><rect x="232.5" y="2885" width="7.0" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="235.48" y="2895.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (55 samples, 2.19%)</title><rect x="60.7" y="5205" width="25.8" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="63.69" y="5215.5" >`..</text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="389.3" y="3701" width="0.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="392.25" y="3711.5" ></text>
</g>
<g >
<title>`SETUP-CALLING-CONVENTION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="317.0" y="5285" width="0.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="319.97" y="5295.5" ></text>
</g>
<g >
<title>`NSUBSTITUTE^COMMON-LISP^FN^^ (2 samples, 0.08%)</title><rect x="498.6" y="5797" width="1.0" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="501.62" y="5807.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="431.5" y="3125" width="1.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="434.50" y="3135.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="171.5" y="1637" width="0.9" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="174.46" y="1647.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="121.7" y="3445" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="124.71" y="3455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3509" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="414.78" y="3519.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="795.3" y="5829" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="798.26" y="5839.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (3 samples, 0.12%)</title><rect x="491.6" y="5781" width="1.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="494.58" y="5791.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (3 samples, 0.12%)</title><rect x="279.4" y="677" width="1.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="282.42" y="687.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="112.3" y="3781" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="115.32" y="3791.5" ></text>
</g>
<g >
<title>`llvm::gvn::GVNLegacyPass::runOnFunction(llvm::Function&amp;) (69 samples, 2.74%)</title><rect x="801.4" y="5893" width="32.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="804.36" y="5903.5" >`l..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="167.7" y="2277" width="10.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="170.71" y="2287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (25 samples, 0.99%)</title><rect x="383.6" y="5077" width="11.8" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="386.62" y="5087.5" ></text>
</g>
<g >
<title>`RECONSTRUCT^CONCRETE-SYNTAX-TREE^((T CST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="296.8" y="5189" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="299.79" y="5199.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (12 samples, 0.48%)</title><rect x="233.9" y="1957" width="5.6" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="236.89" y="1967.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-CALL^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="294.0" y="4245" width="2.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="296.97" y="4255.5" ></text>
</g>
<g >
<title>0x12252d0c9 (2 samples, 0.08%)</title><rect x="135.8" y="4341" width="0.9" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="138.79" y="4351.5" ></text>
</g>
<g >
<title>`core::type_of(gctools::smart_ptr&lt;core::T_O&gt;) (5 samples, 0.20%)</title><rect x="156.9" y="4309" width="2.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="159.91" y="4319.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="19.9" y="3221" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="22.86" y="3231.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (15 samples, 0.60%)</title><rect x="232.5" y="3077" width="7.0" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="235.48" y="3087.5" ></text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.08%)</title><rect x="269.1" y="197" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="272.09" y="207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="3941" width="0.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="408.68" y="3951.5" ></text>
</g>
<g >
<title>0x11a477094 (11 samples, 0.44%)</title><rect x="172.4" y="773" width="5.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="175.40" y="783.5" ></text>
</g>
<g >
<title>`unw_set_reg (1 samples, 0.04%)</title><rect x="33.9" y="5349" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="36.94" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.5" y="4453" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="418.54" y="4463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="295.8" y="2037" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="298.85" y="2047.5" ></text>
</g>
<g >
<title>`ALLOCA^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="315.6" y="5237" width="0.4" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="318.56" y="5247.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="277.1" y="805" width="1.8" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="280.07" y="815.5" ></text>
</g>
<g >
<title>`SLOT-MAKUNBOUND^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="349.4" y="5317" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="352.36" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="429.6" y="2021" width="1.0" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="432.62" y="2031.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (133 samples, 5.29%)</title><rect x="600.5" y="5637" width="62.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="603.47" y="5647.5" >`MEMOI..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.5" y="4373" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="418.54" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="411.8" y="2501" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="414.78" y="2511.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="1317" width="4.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="279.60" y="1327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="236.2" y="37" width="1.9" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="239.24" y="47.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.04%)</title><rect x="559.2" y="5765" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="562.16" y="5775.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="327.3" y="4421" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="330.30" y="4431.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="41.4" y="4581" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="44.45" y="4591.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.04%)</title><rect x="465.8" y="5733" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="468.76" y="5743.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="318.4" y="5317" width="0.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="321.38" y="5327.5" ></text>
</g>
<g >
<title>`AST-&gt;HIR^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="352.2" y="5589" width="1.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="355.17" y="5599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="1925" width="5.6" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="236.89" y="1935.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="49.9" y="5621" width="5.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="52.90" y="5631.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (136 samples, 5.41%)</title><rect x="167.2" y="3701" width="63.9" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="170.24" y="3711.5" >`core::..</text>
</g>
<g >
<title>`SYMBOLP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="524.4" y="5765" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="527.43" y="5775.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (3 samples, 0.12%)</title><rect x="241.4" y="2981" width="1.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="244.40" y="2991.5" ></text>
</g>
<g >
<title>`COMPILER-TIMER-ELAPSED^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="596.2" y="5861" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="599.25" y="5871.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (2 samples, 0.08%)</title><rect x="251.3" y="3301" width="0.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="254.26" y="3311.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.04%)</title><rect x="412.7" y="4949" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="415.72" y="4959.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (6 samples, 0.24%)</title><rect x="76.7" y="4997" width="2.8" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="79.65" y="5007.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (3 samples, 0.12%)</title><rect x="165.8" y="1605" width="1.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="168.83" y="1615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="398.2" y="3461" width="0.9" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="401.17" y="3471.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="432.0" y="1685" width="0.4" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="434.96" y="1695.5" ></text>
</g>
<g >
<title>`core::core__find_class_holder(gctools::smart_ptr&lt;core::Symbol_O (1 samples, 0.04%)</title><rect x="156.4" y="4293" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="159.44" y="4303.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="295.8" y="1845" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="298.85" y="1855.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (19 samples, 0.76%)</title><rect x="259.2" y="965" width="9.0" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="262.24" y="975.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="3669" width="4.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="279.60" y="3679.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (85 samples, 3.38%)</title><rect x="87.4" y="4581" width="39.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="90.45" y="4591.5" >`CO..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="146.6" y="4309" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="149.59" y="4319.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (1 samples, 0.04%)</title><rect x="247.0" y="453" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="250.03" y="463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="233.9" y="2197" width="5.6" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="236.89" y="2207.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="165.8" y="2309" width="1.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="168.83" y="2319.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="393.9" y="2917" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="396.95" y="2927.5" ></text>
</g>
<g >
<title>`CST-&gt;AST^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="336.2" y="4421" width="1.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="339.21" y="4431.5" ></text>
</g>
<g >
<title>`llvm::Value::stripAndAccumulateInBoundsConstantOffsets(llvm::Da (1 samples, 0.04%)</title><rect x="885.4" y="5813" width="0.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="888.38" y="5823.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="36.3" y="3733" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="39.28" y="3743.5" ></text>
</g>
<g >
<title>`FIND-SIMILAR^LITERAL^FN^^ (1 samples, 0.04%)</title><rect x="660.1" y="5509" width="0.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="663.08" y="5519.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="91.2" y="3813" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="94.20" y="3823.5" ></text>
</g>
<g >
<title>`boost::basic_format&lt;char, std::__1::char_traits&lt;char&gt;, std::__1 (1 samples, 0.04%)</title><rect x="644.1" y="5317" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="647.12" y="5327.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="2501" width="4.2" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="285.70" y="2511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="92.1" y="2917" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="95.14" y="2927.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="297.3" y="5557" width="1.8" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="300.26" y="5567.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.04%)</title><rect x="18.4" y="3429" width="0.5" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="21.45" y="3439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="297.3" y="5221" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="300.26" y="5231.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="400.5" y="3669" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="403.52" y="3679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="47.5" y="5477" width="1.0" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="50.55" y="5487.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="233.9" y="1477" width="5.6" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="236.89" y="1487.5" ></text>
</g>
<g >
<title>`CHILDREN^CLEAVIR-AST^((TYPEQ-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="307.1" y="5797" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="310.11" y="5807.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="278.9" y="677" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="281.95" y="687.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="286.9" y="4741" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="289.93" y="4751.5" ></text>
</g>
<g >
<title>0x11a479094 (8 samples, 0.32%)</title><rect x="268.2" y="1749" width="3.7" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="271.15" y="1759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.4" y="3045" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="412.44" y="3055.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="409.4" y="3653" width="1.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="412.44" y="3663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (23 samples, 0.91%)</title><rect x="167.2" y="2597" width="10.8" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="170.24" y="2607.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="330.6" y="4501" width="0.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="333.58" y="4511.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="326.8" y="4677" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="329.83" y="4687.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="413.7" y="4037" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="416.66" y="4047.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.12%)</title><rect x="409.4" y="3925" width="1.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="412.44" y="3935.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::computeSCEVAtScope(llvm::SCEV const*, ll (1 samples, 0.04%)</title><rect x="920.1" y="5637" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="923.11" y="5647.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="276.1" y="4357" width="5.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="279.13" y="4367.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.08%)</title><rect x="558.7" y="5781" width="0.9" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="561.70" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (31 samples, 1.23%)</title><rect x="257.4" y="2309" width="14.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="260.36" y="2319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="3077" width="1.0" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="427.92" y="3087.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (17 samples, 0.68%)</title><rect x="91.7" y="4101" width="7.9" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="94.67" y="4111.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="123.6" y="1349" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="126.59" y="1359.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="548.8" y="5797" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="551.84" y="5807.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (2 samples, 0.08%)</title><rect x="370.0" y="5813" width="0.9" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="373.01" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="414.1" y="3941" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="417.13" y="3951.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (1 samples, 0.04%)</title><rect x="286.9" y="4757" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="289.93" y="4767.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="417.4" y="2805" width="3.8" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="420.41" y="2815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="3685" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="414.31" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.9" y="4725" width="0.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="419.95" y="4735.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="310.4" y="5749" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="313.40" y="5759.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="249.4" y="405" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="252.38" y="415.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (114 samples, 4.53%)</title><rect x="600.9" y="5557" width="53.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="603.94" y="5567.5" >`DO-D..</text>
</g>
<g >
<title>`llvm::MDNodeKeyImpl&lt;llvm::DILocalVariable&gt;::getHashValue() cons (1 samples, 0.04%)</title><rect x="654.9" y="5301" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="657.92" y="5311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="285.5" y="485" width="1.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="288.52" y="495.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENTER-INSTRUCTION  (1 samples, 0.04%)</title><rect x="338.6" y="4309" width="0.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="341.56" y="4319.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="321.7" y="5253" width="1.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="324.66" y="5263.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="348.9" y="5221" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="351.89" y="5231.5" ></text>
</g>
<g >
<title>`BUILD-CST^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="296.8" y="5173" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="299.79" y="5183.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.04%)</title><rect x="724.4" y="5813" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="727.38" y="5823.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.36%)</title><rect x="282.7" y="1893" width="4.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="285.70" y="1903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.3" y="3589" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="414.31" y="3599.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="295.4" y="2837" width="0.9" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="298.38" y="2847.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;std::__1::pair&lt;llvm::Mem (1 samples, 0.04%)</title><rect x="809.8" y="5653" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="812.81" y="5663.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (4 samples, 0.16%)</title><rect x="165.4" y="4021" width="1.8" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="168.36" y="4031.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PROGN-AST-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="164.9" y="4197" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="167.89" y="4207.5" ></text>
</g>
<g >
<title>`CST-EVAL^CLEAVIR-CST-TO-AST^FN^^ (11 samples, 0.44%)</title><rect x="276.1" y="4725" width="5.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="279.13" y="4735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="430.6" y="1781" width="0.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="433.56" y="1791.5" ></text>
</g>
<g >
<title>`SOURCE-POSITION^ECLECTOR.PARSE-RESULT^((CLASP-CST-CLIENT T))^ME (1 samples, 0.04%)</title><rect x="51.3" y="4837" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="54.30" y="4847.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (1 samples, 0.04%)</title><rect x="838.9" y="5845" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="841.91" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="281.3" y="4725" width="5.6" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="284.30" y="4735.5" ></text>
</g>
<g >
<title>`core::type_of_decide_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="281.3" y="3029" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="284.30" y="3039.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="1717" width="5.6" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="236.89" y="1727.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.04%)</title><rect x="789.2" y="5669" width="0.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="792.16" y="5679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="247.5" y="325" width="1.9" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="250.50" y="335.5" ></text>
</g>
<g >
<title>`core::core__source_pos_info_column(gctools::smart_ptr&lt;core::T_O (1 samples, 0.04%)</title><rect x="616.4" y="5397" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="619.43" y="5407.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="398.2" y="3317" width="0.4" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="401.17" y="3327.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (22 samples, 0.88%)</title><rect x="34.4" y="5221" width="10.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="37.41" y="5231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="3781" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="404.93" y="3791.5" ></text>
</g>
<g >
<title>`IRC-SET-INSERT-POINT-BASIC-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="658.7" y="5589" width="0.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="661.67" y="5599.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIndexedOffsetInType(llvm::Type*, llvm::Arr (1 samples, 0.04%)</title><rect x="759.1" y="5749" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="762.12" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="275.2" y="5109" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="278.19" y="5119.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="411.8" y="3141" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="414.78" y="3151.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (87 samples, 3.46%)</title><rect x="86.5" y="5269" width="40.8" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="89.51" y="5279.5" >`co..</text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.04%)</title><rect x="640.4" y="5285" width="0.4" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="643.37" y="5295.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="203.9" y="885" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="206.85" y="895.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (19 samples, 0.76%)</title><rect x="259.2" y="773" width="9.0" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="262.24" y="783.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (KEY-PARAMETER-GROUP) (1 samples, 0.04%)</title><rect x="285.1" y="773" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="288.05" y="783.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="124.5" y="3109" width="1.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="127.53" y="3119.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="401.9" y="3109" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="404.93" y="3119.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.04%)</title><rect x="563.4" y="5733" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="566.39" y="5743.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (4 samples, 0.16%)</title><rect x="827.6" y="5765" width="1.9" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="830.65" y="5775.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="269.1" y="501" width="2.8" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="272.09" y="511.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (9 samples, 0.36%)</title><rect x="282.7" y="2517" width="4.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="285.70" y="2527.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.04%)</title><rect x="139.5" y="4309" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="142.55" y="4319.5" ></text>
</g>
<g >
<title>`llvm::isInstructionTriviallyDead(llvm::Instruction*, llvm::Targ (1 samples, 0.04%)</title><rect x="776.5" y="5845" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="779.48" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="165.8" y="981" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="168.83" y="991.5" ></text>
</g>
<g >
<title>`IRC-PTR-TO-INT^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="622.5" y="5173" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="625.53" y="5183.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (11 samples, 0.44%)</title><rect x="49.9" y="5253" width="5.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="52.90" y="5263.5" ></text>
</g>
<g >
<title>`llvm::AssumptionCacheTracker::getAssumptionCache(llvm::Function (1 samples, 0.04%)</title><rect x="929.5" y="5877" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="932.50" y="5887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="1669" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="423.70" y="1679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (35 samples, 1.39%)</title><rect x="417.4" y="4661" width="16.4" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="420.41" y="4671.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="3861" width="3.8" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="420.41" y="3871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="385.0" y="3893" width="2.8" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="388.03" y="3903.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.7" y="1237" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="430.74" y="1247.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.04%)</title><rect x="320.3" y="5285" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="323.25" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.4" y="3237" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="389.44" y="3247.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (40 samples, 1.59%)</title><rect x="232.0" y="3413" width="18.8" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="235.01" y="3423.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (312 samples, 12.41%)</title><rect x="129.7" y="5269" width="146.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="132.69" y="5279.5" >`CONVERT-CST^CLEAV..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="422.1" y="2789" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="425.11" y="2799.5" ></text>
</g>
<g >
<title>`core::cl__find_class(gctools::smart_ptr&lt;core::Symbol_O&gt;, bool,  (1 samples, 0.04%)</title><rect x="80.4" y="4933" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="83.41" y="4943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="427.3" y="2437" width="0.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="430.27" y="2447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="4197" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="414.78" y="4207.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.0" y="2197" width="0.4" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="411.97" y="2207.5" ></text>
</g>
<g >
<title>`llvm::AliasSetTracker::mergeAliasSetsForPointer(llvm::Value con (1 samples, 0.04%)</title><rect x="919.2" y="5781" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="922.17" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="123.6" y="837" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="126.59" y="847.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="121.7" y="3461" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="124.71" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="422.1" y="2421" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="425.11" y="2431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.6" y="2853" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="424.64" y="2863.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="124.5" y="1461" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="127.53" y="1471.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1:: (1 samples, 0.04%)</title><rect x="462.0" y="5781" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="465.00" y="5791.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (7 samples, 0.28%)</title><rect x="294.0" y="5285" width="3.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="296.97" y="5295.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (16 samples, 0.64%)</title><rect x="260.6" y="245" width="7.6" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="263.64" y="255.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::StringMapIterator&lt;llvm::MDString&gt;, bool&gt; l (1 samples, 0.04%)</title><rect x="656.3" y="5397" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="659.32" y="5407.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.04%)</title><rect x="16.1" y="5093" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="19.10" y="5103.5" ></text>
</g>
<g >
<title>`POSSIBLY-ADD-ITEM^CONCRETE-SYNTAX-TREE^((EARLEY-ITEM EARLEY-STA (1 samples, 0.04%)</title><rect x="281.8" y="3029" width="0.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="284.77" y="3039.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="124.5" y="1989" width="1.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="127.53" y="1999.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (2 samples, 0.08%)</title><rect x="233.0" y="2405" width="0.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="235.95" y="2415.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="92.6" y="3285" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="95.61" y="3295.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="47.5" y="5349" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="50.55" y="5359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="161.6" y="4261" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="164.61" y="4271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="413.7" y="4277" width="0.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="416.66" y="4287.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.08%)</title><rect x="657.3" y="5493" width="0.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="660.26" y="5503.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="18.0" y="3637" width="1.9" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="20.98" y="3647.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (6 samples, 0.24%)</title><rect x="95.0" y="3573" width="2.8" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="97.96" y="3583.5" ></text>
</g>
<g >
<title>`wrapped_core__input_stream_source_pos_info_T_sp (1 samples, 0.04%)</title><rect x="49.9" y="4373" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="52.90" y="4383.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="286.9" y="4597" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="289.93" y="4607.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.04%)</title><rect x="322.1" y="5109" width="0.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="325.13" y="5119.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="391.6" y="2501" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="394.60" y="2511.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="29.7" y="4981" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="32.71" y="4991.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (93 samples, 3.70%)</title><rect x="313.2" y="5765" width="43.7" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="316.21" y="5775.5" >`TRA..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (15 samples, 0.60%)</title><rect x="232.5" y="2869" width="7.0" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="235.48" y="2879.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (3 samples, 0.12%)</title><rect x="810.3" y="5637" width="1.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="813.28" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-CALLED-FUNCTION-REFERENCE^CLEAVIR-CST-TO-AST^((T T T T) (1 samples, 0.04%)</title><rect x="293.5" y="5381" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="296.50" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="2149" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="434.96" y="2159.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="249.4" y="805" width="0.4" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="252.38" y="815.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (2 samples, 0.08%)</title><rect x="311.8" y="5781" width="0.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="314.81" y="5791.5" ></text>
</g>
<g >
<title>`SLOT-MAKUNBOUND^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="359.7" y="5797" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="362.68" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="3173" width="4.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="285.70" y="3183.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.9" y="2981" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="412.90" y="2991.5" ></text>
</g>
<g >
<title>`SHARPSIGN-SINGLE-QUOTE^ECLECTOR.READER^FN^^ (7 samples, 0.28%)</title><rect x="51.8" y="5237" width="3.3" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="54.77" y="5247.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="3045" width="1.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="411.03" y="3055.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (10 samples, 0.40%)</title><rect x="182.7" y="293" width="4.7" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="185.73" y="303.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="4293" width="1.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="411.03" y="4303.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="124.5" y="2885" width="1.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="127.53" y="2895.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="249.4" y="501" width="0.4" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="252.38" y="511.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'PROGN) T T T))^MET (3 samples, 0.12%)</title><rect x="124.5" y="2933" width="1.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="127.53" y="2943.5" ></text>
</g>
<g >
<title>`llvm::AAResultsWrapperPass::runOnFunction(llvm::Function&amp;) (13 samples, 0.52%)</title><rect x="709.4" y="5893" width="6.1" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="712.36" y="5903.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="619.7" y="5269" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="622.71" y="5279.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (4 samples, 0.16%)</title><rect x="746.4" y="5797" width="1.9" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="749.44" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="252.2" y="3269" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="255.20" y="3279.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="92.1" y="2901" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="95.14" y="2911.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (11 samples, 0.44%)</title><rect x="276.1" y="4261" width="5.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="279.13" y="4271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3365" width="1.0" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="424.64" y="3375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="421.2" y="3781" width="0.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="424.17" y="3791.5" ></text>
</g>
<g >
<title>`WRITE-ARGUMENT-BYTE-CODE^LITERAL^FN^^ (9 samples, 0.36%)</title><rect x="680.7" y="5957" width="4.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="683.73" y="5967.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="27.8" y="4901" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="30.84" y="4911.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="417.4" y="2437" width="3.8" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="420.41" y="2447.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="493.0" y="5765" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="495.98" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="249.4" y="517" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="252.38" y="527.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (6 samples, 0.24%)</title><rect x="52.2" y="4661" width="2.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="55.24" y="4671.5" ></text>
</g>
<g >
<title>0x1225e5094 (1 samples, 0.04%)</title><rect x="247.0" y="133" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="250.03" y="143.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (4 samples, 0.16%)</title><rect x="254.1" y="3333" width="1.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="257.07" y="3343.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-SIZE_T^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="665.7" y="5621" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="668.71" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (3 samples, 0.12%)</title><rect x="92.1" y="3509" width="1.4" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="95.14" y="3519.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="631.4" y="5301" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="634.45" y="5311.5" ></text>
</g>
<g >
<title>`CALL-READER-MACRO^ECLECTOR.READER^((T T T T))^METHOD^^ (22 samples, 0.88%)</title><rect x="34.4" y="5269" width="10.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="37.41" y="5279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="427.3" y="3589" width="4.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="430.27" y="3599.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (8 samples, 0.32%)</title><rect x="502.4" y="5749" width="3.7" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="505.37" y="5759.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (2 samples, 0.08%)</title><rect x="905.1" y="5733" width="0.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="908.09" y="5743.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.9" y="3317" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="404.93" y="3327.5" ></text>
</g>
<g >
<title>`llvm::APInt::APInt(unsigned int, unsigned long long, bool) (1 samples, 0.04%)</title><rect x="747.9" y="5653" width="0.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="750.85" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (5 samples, 0.20%)</title><rect x="180.4" y="53" width="2.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="183.38" y="63.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.3" y="1045" width="0.4" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="430.27" y="1055.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="167.7" y="901" width="0.5" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="170.71" y="911.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (4 samples, 0.16%)</title><rect x="623.9" y="5141" width="1.9" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="626.94" y="5151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="424.9" y="1941" width="1.0" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="427.92" y="1951.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="2997" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="414.78" y="3007.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="287.4" y="4821" width="0.5" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="290.40" y="4831.5" ></text>
</g>
<g >
<title>`core::type_of(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="242.8" y="1909" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="245.81" y="1919.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="4229" width="1.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="411.03" y="4239.5" ></text>
</g>
<g >
<title>`llvm::FindAvailableLoadedValue(llvm::LoadInst*, llvm::BasicBloc (12 samples, 0.48%)</title><rect x="763.8" y="5829" width="5.6" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="766.81" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="257.4" y="1765" width="1.8" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="260.36" y="1775.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="287.4" y="5349" width="1.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="290.40" y="5359.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.08%)</title><rect x="461.1" y="5797" width="0.9" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="464.07" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T CLASP))^METHOD^^ (42 samples, 1.67%)</title><rect x="182.7" y="533" width="19.7" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="185.73" y="543.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (1 samples, 0.04%)</title><rect x="286.9" y="4837" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="289.93" y="4847.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_class_Symbol_spboolT_sp (1 samples, 0.04%)</title><rect x="242.8" y="1877" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="245.81" y="1887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="240.5" y="2885" width="0.9" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="243.46" y="2895.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="3141" width="63.9" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="170.24" y="3151.5" >`CONVER..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (85 samples, 3.38%)</title><rect x="87.4" y="4549" width="39.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="90.45" y="4559.5" >`IN..</text>
</g>
<g >
<title>`JIT-FUNCTION-NAME^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="346.5" y="5013" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="349.54" y="5023.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.08%)</title><rect x="538.5" y="5813" width="1.0" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="541.51" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1781" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="423.70" y="1791.5" ></text>
</g>
<g >
<title>`wrapped_core__generalp_T_sp (1 samples, 0.04%)</title><rect x="383.2" y="5013" width="0.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="386.15" y="5023.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="412.3" y="3749" width="0.4" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="415.25" y="3759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="385.0" y="3845" width="2.8" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="388.03" y="3855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="278.9" y="565" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="281.95" y="575.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="257.8" y="1637" width="1.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="260.83" y="1647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="597" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="423.70" y="607.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="355.9" y="5557" width="0.5" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="358.93" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="428.2" y="2325" width="0.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="431.21" y="2335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="411.8" y="2581" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="414.78" y="2591.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-CST-TO-AST^((T T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="279.4" y="661" width="1.4" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="282.42" y="671.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="38.2" y="4501" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="41.16" y="4511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="398.2" y="3205" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="401.17" y="3215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3157" width="1.4" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="411.03" y="3167.5" ></text>
</g>
<g >
<title>`COERCE-TO-CONDITION^CORE^FN^^ (1 samples, 0.04%)</title><rect x="98.7" y="3781" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="101.71" y="3791.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (4 samples, 0.16%)</title><rect x="732.4" y="5765" width="1.8" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="735.36" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2021" width="0.5" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="412.90" y="2031.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.0" y="3077" width="0.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="388.97" y="3087.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (95 samples, 3.78%)</title><rect x="12.3" y="5861" width="44.6" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="15.35" y="5871.5" >`INT..</text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoCache::isOverdefined(llvm:: (1 samples, 0.04%)</title><rect x="696.7" y="5749" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="699.69" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (54 samples, 2.15%)</title><rect x="379.4" y="5557" width="25.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="382.40" y="5567.5" >`..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="281.3" y="4213" width="5.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="284.30" y="4223.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="411.3" y="4021" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="414.31" y="4031.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="312.3" y="5637" width="0.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="315.28" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (9 samples, 0.36%)</title><rect x="423.0" y="3877" width="4.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="426.05" y="3887.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.3" y="1413" width="0.4" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="430.27" y="1423.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, (anonymous name (1 samples, 0.04%)</title><rect x="946.9" y="5845" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="949.87" y="5855.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (1 samples, 0.04%)</title><rect x="952.0" y="5957" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="955.03" y="5967.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="416.5" y="4389" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="419.48" y="4399.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="125.9" y="3269" width="1.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="128.93" y="3279.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.04%)</title><rect x="635.2" y="5333" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="638.20" y="5343.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (3 samples, 0.12%)</title><rect x="808.4" y="5605" width="1.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="811.40" y="5615.5" ></text>
</g>
<g >
<title>`core::cl__error(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (2 samples, 0.08%)</title><rect x="287.9" y="4533" width="0.9" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="290.87" y="4543.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (4 samples, 0.16%)</title><rect x="581.2" y="5813" width="1.9" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="584.23" y="5823.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="31.6" y="5221" width="0.5" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="34.59" y="5231.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (17 samples, 0.68%)</title><rect x="232.5" y="3205" width="8.0" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="235.48" y="3215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="412.3" y="3941" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="415.25" y="3951.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.04%)</title><rect x="423.5" y="1749" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="426.52" y="1759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="253.1" y="3141" width="1.0" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="256.13" y="3151.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="256.0" y="2837" width="1.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="258.95" y="2847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.0" y="1957" width="0.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="411.97" y="1967.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm:: (1 samples, 0.04%)</title><rect x="350.8" y="5269" width="0.4" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="353.76" y="5279.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.04%)</title><rect x="530.1" y="5701" width="0.4" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="533.06" y="5711.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="95.9" y="3477" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="98.89" y="3487.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="340.0" y="4677" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="342.97" y="4687.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="281.3" y="3781" width="5.6" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="284.30" y="3791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="933" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="430.74" y="943.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.04%)</title><rect x="393.0" y="4181" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="396.01" y="4191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="243.3" y="837" width="1.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="246.28" y="847.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (23 samples, 0.91%)</title><rect x="276.1" y="5029" width="10.8" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="279.13" y="5039.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (12 samples, 0.48%)</title><rect x="172.4" y="1701" width="5.6" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="175.40" y="1711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.9" y="4245" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="404.93" y="4255.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (5 samples, 0.20%)</title><rect x="949.2" y="5989" width="2.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="952.21" y="5999.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (113 samples, 4.49%)</title><rect x="178.0" y="2565" width="53.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="181.04" y="2575.5" >`core..</text>
</g>
<g >
<title>0x11a477094 (7 samples, 0.28%)</title><rect x="88.4" y="4181" width="3.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="91.39" y="4191.5" ></text>
</g>
<g >
<title>`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="331.5" y="4661" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="334.52" y="4671.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getSinglePredecessor() const (1 samples, 0.04%)</title><rect x="935.1" y="5813" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="938.13" y="5823.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="365.3" y="5669" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="368.31" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="122.6" y="2661" width="1.9" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="125.65" y="2671.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (60 samples, 2.39%)</title><rect x="407.1" y="5653" width="28.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="410.09" y="5663.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="1029" width="0.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="428.86" y="1039.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::SCEV const*, llvm::SmallVector&lt;llvm::Point (1 samples, 0.04%)</title><rect x="927.2" y="5829" width="0.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="930.15" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (48 samples, 1.91%)</title><rect x="180.4" y="981" width="22.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="183.38" y="991.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="294.0" y="4821" width="2.8" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="296.97" y="4831.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.04%)</title><rect x="526.3" y="5749" width="0.5" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="529.31" y="5759.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::getModRefInfo(llvm::ImmutableCallSite, l (1 samples, 0.04%)</title><rect x="906.5" y="5749" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="909.50" y="5759.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (7 samples, 0.28%)</title><rect x="294.0" y="5461" width="3.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="296.97" y="5471.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="421.6" y="2613" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="424.64" y="2623.5" ></text>
</g>
<g >
<title>`RENAME-FILE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="952.5" y="5973" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="955.50" y="5983.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::create(unsigned int, gctools::smart_ptr&lt;co (1 samples, 0.04%)</title><rect x="372.8" y="5765" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="375.82" y="5775.5" ></text>
</g>
<g >
<title>`PARSE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (20 samples, 0.80%)</title><rect x="112.8" y="3797" width="9.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="115.79" y="3807.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (43 samples, 1.71%)</title><rect x="383.6" y="5157" width="20.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="386.62" y="5167.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.04%)</title><rect x="829.5" y="5765" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="832.52" y="5775.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="606.1" y="5493" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="609.10" y="5503.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.4" y="2341" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="412.44" y="2351.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (4 samples, 0.16%)</title><rect x="583.1" y="5829" width="1.9" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="586.10" y="5839.5" ></text>
</g>
<g >
<title>`MAKE-HASH-TABLE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="126.9" y="2757" width="0.4" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="129.87" y="2767.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="179.9" y="2117" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="182.91" y="2127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.5" y="4437" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="418.54" y="4447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="233.9" y="197" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="236.89" y="207.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::MPPassManager::getOnTheFlyPass(llvm::Pas (1 samples, 0.04%)</title><rect x="838.9" y="5877" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="841.91" y="5887.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="414.1" y="4181" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="417.13" y="4191.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (137 samples, 5.45%)</title><rect x="167.2" y="3813" width="64.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="170.24" y="3823.5" >`PROCES..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="268.6" y="357" width="0.5" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="271.62" y="367.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="327.8" y="4389" width="0.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="330.76" y="4399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="36.3" y="3861" width="0.9" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="39.28" y="3871.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CVPLatticeFunc::visitCallSite(llvm::Call (1 samples, 0.04%)</title><rect x="939.4" y="5893" width="0.4" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="942.36" y="5903.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="388.3" y="4069" width="3.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="391.31" y="4079.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="465.3" y="5797" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="468.29" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-FUNCTION^CLEAVIR-CST-TO-AST^FN^^ (304 samples, 12.09%)</title><rect x="130.6" y="4741" width="142.7" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="133.63" y="4751.5" >`CONVERT-LAMBDA-FU..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (17 samples, 0.68%)</title><rect x="242.8" y="2581" width="8.0" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="245.81" y="2591.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="165.4" y="3781" width="1.8" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="168.36" y="3791.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="669.5" y="5733" width="0.4" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="672.47" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (3 samples, 0.12%)</title><rect x="409.4" y="4341" width="1.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="412.44" y="4351.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="532.9" y="5813" width="0.9" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="535.88" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="49.9" y="4741" width="0.9" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="52.90" y="4751.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="353.1" y="5477" width="0.5" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="356.11" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="2789" width="4.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="430.27" y="2799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="423.5" y="2181" width="1.0" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="426.52" y="2191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="1605" width="4.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="279.60" y="1615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="398.6" y="3365" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="401.64" y="3375.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (19 samples, 0.76%)</title><rect x="259.2" y="1269" width="9.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="262.24" y="1279.5" ></text>
</g>
<g >
<title>`llvm::TerminatorInst::getSuccessor(unsigned int) const (1 samples, 0.04%)</title><rect x="775.5" y="5845" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="778.54" y="5855.5" ></text>
</g>
<g >
<title>`PARSE-FUNCTION-TYPE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="333.9" y="4341" width="0.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="336.87" y="4351.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (561 samples, 22.32%)</title><rect x="685.4" y="5989" width="263.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="688.43" y="5999.5" >`core::SingleDispatchCxxEffectiveMe..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="34.9" y="4389" width="0.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="37.88" y="4399.5" ></text>
</g>
<g >
<title>`llvm::MDNode::classof(llvm::Metadata const*) (1 samples, 0.04%)</title><rect x="914.5" y="5797" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="917.48" y="5807.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.04%)</title><rect x="112.8" y="3573" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="115.79" y="3583.5" ></text>
</g>
<g >
<title>`core::MDArray_O::vectorPushExtend(gctools::smart_ptr&lt;core::T_O&gt; (1 samples, 0.04%)</title><rect x="30.2" y="4949" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="33.18" y="4959.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="608.4" y="5429" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="611.45" y="5439.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="243.3" y="853" width="1.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="246.28" y="863.5" ></text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (1 samples, 0.04%)</title><rect x="615.5" y="5253" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="618.49" y="5263.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="386.0" y="3349" width="0.9" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="388.97" y="3359.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.04%)</title><rect x="40.0" y="4341" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="43.04" y="4351.5" ></text>
</g>
<g >
<title>`LOGTEST^COMMON-LISP^FN^^ (2 samples, 0.08%)</title><rect x="45.7" y="5397" width="0.9" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="48.67" y="5407.5" ></text>
</g>
<g >
<title>`llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo  (6 samples, 0.24%)</title><rect x="834.7" y="5861" width="2.8" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="837.69" y="5871.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="289.7" y="5525" width="1.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="292.75" y="5535.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="408.0" y="3637" width="1.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="411.03" y="3647.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.08%)</title><rect x="401.0" y="2949" width="0.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="403.99" y="2959.5" ></text>
</g>
<g >
<title>`UNIVERSAL-ERROR-HANDLER^CORE^FN^^ (1 samples, 0.04%)</title><rect x="125.0" y="1765" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="128.00" y="1775.5" ></text>
</g>
<g >
<title>`IRC-PERSONALITY-FUNCTION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="354.5" y="5525" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="357.52" y="5535.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.04%)</title><rect x="336.2" y="4181" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="339.21" y="4191.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (136 samples, 5.41%)</title><rect x="167.2" y="3381" width="63.9" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="170.24" y="3391.5" >`INTERP..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="386.4" y="3157" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="389.44" y="3167.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="232.0" y="2997" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="235.01" y="3007.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (48 samples, 1.91%)</title><rect x="180.4" y="789" width="22.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="183.38" y="799.5" >`..</text>
</g>
<g >
<title>`OF-CLASS-P^CORE^FN^^ (1 samples, 0.04%)</title><rect x="365.3" y="5701" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="368.31" y="5711.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="337.2" y="4469" width="0.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="340.15" y="4479.5" ></text>
</g>
<g >
<title>`llvmo::Type_O::getPointerTo(int) (1 samples, 0.04%)</title><rect x="646.0" y="5301" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="649.00" y="5311.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (19 samples, 0.76%)</title><rect x="824.4" y="5813" width="8.9" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="827.36" y="5823.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="132.0" y="4533" width="1.0" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="135.04" y="4543.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (4 samples, 0.16%)</title><rect x="353.6" y="5573" width="1.9" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="356.58" y="5583.5" ></text>
</g>
<g >
<title>0x11a479094 (4 samples, 0.16%)</title><rect x="254.1" y="3445" width="1.9" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="257.07" y="3455.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (304 samples, 12.09%)</title><rect x="130.6" y="4693" width="142.7" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="133.63" y="4703.5" >`core::clos__inter..</text>
</g>
<g >
<title>`HIR-&gt;MIR^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="344.2" y="4869" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="347.19" y="4879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (36 samples, 1.43%)</title><rect x="416.9" y="5109" width="16.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="419.95" y="5119.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="410.8" y="4581" width="1.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="413.84" y="4591.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="65.9" y="4997" width="0.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="68.86" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (1 samples, 0.04%)</title><rect x="231.5" y="3365" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="234.54" y="3375.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="649.3" y="5333" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="652.28" y="5343.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="36.3" y="3845" width="0.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="39.28" y="3855.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="334.8" y="4485" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="337.81" y="4495.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="424.9" y="2901" width="1.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="427.92" y="2911.5" ></text>
</g>
<g >
<title>`realloc (1 samples, 0.04%)</title><rect x="834.2" y="5813" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="837.22" y="5823.5" ></text>
</g>
<g >
<title>`core::cl__streamp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="42.4" y="4517" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="45.39" y="4527.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="4629" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="408.68" y="4639.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (3 samples, 0.12%)</title><rect x="513.2" y="5749" width="1.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="516.17" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="2469" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="414.78" y="2479.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="36.8" y="3269" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="39.75" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="427.3" y="2197" width="0.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="430.27" y="2207.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (58 samples, 2.31%)</title><rect x="100.1" y="4277" width="27.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="103.12" y="4287.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="268.6" y="1141" width="3.3" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="271.62" y="1151.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="294.0" y="4197" width="2.8" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="296.97" y="4207.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.04%)</title><rect x="464.8" y="5813" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="467.82" y="5823.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Type*, llvm::PointerTyp (1 samples, 0.04%)</title><rect x="891.9" y="5653" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="894.95" y="5663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="276.1" y="4085" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="279.13" y="4095.5" ></text>
</g>
<g >
<title>`SHARPSIGN-PLUS-MINUS^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="23.6" y="4117" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="26.61" y="4127.5" ></text>
</g>
<g >
<title>`CONJOIN-TYPES^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.04%)</title><rect x="91.7" y="3669" width="0.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="94.67" y="3679.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET*) T T T))^METH (9 samples, 0.36%)</title><rect x="276.6" y="3605" width="4.2" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="279.60" y="3615.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="405.2" y="5493" width="0.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="408.21" y="5503.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.04%)</title><rect x="892.9" y="5733" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="895.89" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="424.0" y="1605" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="426.99" y="1615.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="336.2" y="4373" width="1.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="339.21" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="405.7" y="4101" width="0.4" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="408.68" y="4111.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AssertingVH&lt;llvm:: (1 samples, 0.04%)</title><rect x="705.6" y="5781" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="708.61" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="122.6" y="3301" width="3.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="125.65" y="3311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="168.2" y="1301" width="1.9" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="171.18" y="1311.5" ></text>
</g>
<g >
<title>`simplifyICmpWithConstant(llvm::CmpInst::Predicate, llvm::Value* (1 samples, 0.04%)</title><rect x="844.5" y="5829" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="847.54" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="165.8" y="2229" width="1.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="168.83" y="2239.5" ></text>
</g>
<g >
<title>`OPTIMIZED-FDEFINITION-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="382.2" y="3989" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="385.21" y="3999.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (12 samples, 0.48%)</title><rect x="17.5" y="4117" width="5.6" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="20.51" y="4127.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="39.1" y="4421" width="1.4" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="42.10" y="4431.5" ></text>
</g>
<g >
<title>`llvm::APInt::operator*(llvm::APInt const&amp;) const (2 samples, 0.08%)</title><rect x="735.6" y="5813" width="1.0" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="738.65" y="5823.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="382.2" y="4581" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="385.21" y="4591.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="18.0" y="3509" width="0.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="20.98" y="3519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="2005" width="0.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="428.86" y="2015.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="285.5" y="933" width="1.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="288.52" y="943.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (657 samples, 26.13%)</title><rect x="369.5" y="5893" width="308.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="372.54" y="5903.5" >`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="417.4" y="1573" width="2.4" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="420.41" y="1583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="417.4" y="1813" width="2.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="420.41" y="1823.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="18.0" y="3589" width="1.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="20.98" y="3599.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="424.9" y="2213" width="1.0" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="427.92" y="2223.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (8 samples, 0.32%)</title><rect x="417.4" y="3253" width="3.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="420.41" y="3263.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="423.0" y="3813" width="4.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="426.05" y="3823.5" ></text>
</g>
<g >
<title>`%SIGNAL^CORE^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="4501" width="0.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="290.87" y="4511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="416.0" y="4933" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="419.01" y="4943.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="233.9" y="773" width="1.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="236.89" y="783.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="278.9" y="485" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="281.95" y="495.5" ></text>
</g>
<g >
<title>`llvm::MDNodeKeyImpl&lt;llvm::DISubroutineType&gt;::getHashValue() con (1 samples, 0.04%)</title><rect x="342.3" y="4533" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="345.32" y="4543.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (93 samples, 3.70%)</title><rect x="12.8" y="5733" width="43.7" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="15.82" y="5743.5" >`cor..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.08%)</title><rect x="421.6" y="3349" width="1.0" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="424.64" y="3359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="287.9" y="5013" width="0.9" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="290.87" y="5023.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.04%)</title><rect x="943.6" y="5749" width="0.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="946.58" y="5759.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="286.9" y="4453" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="289.93" y="4463.5" ></text>
</g>
<g >
<title>`OPTIMIZED-MULTIPLE-VALUE-FOREIGN-CALL-INSTRUCTION-CONSTRUCTOR^K (1 samples, 0.04%)</title><rect x="399.1" y="3621" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="402.11" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="3445" width="0.5" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="414.31" y="3455.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (2 samples, 0.08%)</title><rect x="251.3" y="3781" width="0.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="254.26" y="3791.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="27.4" y="4805" width="0.4" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="30.37" y="4815.5" ></text>
</g>
<g >
<title>`llvm::DemandedBits::performAnalysis() (3 samples, 0.12%)</title><rect x="708.0" y="5861" width="1.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="710.96" y="5871.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.04%)</title><rect x="422.1" y="2165" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="425.11" y="2175.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="49.9" y="5285" width="5.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="52.90" y="5295.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="295.4" y="2469" width="0.9" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="298.38" y="2479.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="297.3" y="5525" width="1.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="300.26" y="5535.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="324.5" y="4869" width="0.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="327.48" y="4879.5" ></text>
</g>
<g >
<title>`COMPILE-WRONG-NUMBER-ARGUMENTS-BLOCK^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="321.2" y="5141" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="324.19" y="5151.5" ></text>
</g>
<g >
<title>`ThreadCmpOverPHI(llvm::CmpInst::Predicate, llvm::Value*, llvm:: (1 samples, 0.04%)</title><rect x="842.7" y="5829" width="0.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="845.67" y="5839.5" ></text>
</g>
<g >
<title>`ADD-ATOMS^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="280.8" y="3749" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="283.83" y="3759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="167.7" y="2069" width="10.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="170.71" y="2079.5" ></text>
</g>
<g >
<title>`REMOVE-USELESS-INSTRUCTIONS-WITH-WORKLIST^CLEAVIR-REMOVE-USELES (8 samples, 0.32%)</title><rect x="528.7" y="5813" width="3.7" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="531.66" y="5823.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="427.7" y="757" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="430.74" y="767.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.04%)</title><rect x="185.1" y="149" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="188.08" y="159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="432.0" y="1413" width="0.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="434.96" y="1423.5" ></text>
</g>
<g >
<title>`llvm::APInt::sextOrTrunc(unsigned int) const (1 samples, 0.04%)</title><rect x="773.2" y="5781" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="776.20" y="5791.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (2 samples, 0.08%)</title><rect x="320.7" y="5397" width="1.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="323.72" y="5407.5" ></text>
</g>
<g >
<title>0x11a477094 (19 samples, 0.76%)</title><rect x="259.2" y="661" width="9.0" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="262.24" y="671.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (1 samples, 0.04%)</title><rect x="242.8" y="1957" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="245.81" y="1967.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="247.5" y="261" width="1.9" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="250.50" y="271.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.04%)</title><rect x="99.2" y="3813" width="0.4" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="102.18" y="3823.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="298.2" y="5269" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="301.19" y="5279.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="466.2" y="5733" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="469.23" y="5743.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3877" width="1.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="168.36" y="3887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="386.9" y="3541" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="389.91" y="3551.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::StripPtrCastKeepAS(llvm::Constant*, llvm (1 samples, 0.04%)</title><rect x="843.1" y="5685" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="846.13" y="5695.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="165.4" y="2853" width="1.8" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="168.36" y="2863.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.04%)</title><rect x="628.6" y="5157" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="631.63" y="5167.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.04%)</title><rect x="653.0" y="5381" width="0.5" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="656.04" y="5391.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="20.8" y="3653" width="0.5" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="23.80" y="3663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="116.1" y="3461" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="119.08" y="3471.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::StripPtrCastKeepAS(llvm::Constant*, llvm (1 samples, 0.04%)</title><rect x="861.4" y="5813" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="864.44" y="5823.5" ></text>
</g>
<g >
<title>`llvm::isNoAliasFn(llvm::Value const*, llvm::TargetLibraryInfo c (1 samples, 0.04%)</title><rect x="820.6" y="5717" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="823.60" y="5727.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="42.9" y="4741" width="0.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="45.86" y="4751.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (13 samples, 0.52%)</title><rect x="92.1" y="3765" width="6.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="95.14" y="3775.5" ></text>
</g>
<g >
<title>`wrapped_StructType_O__get_LLVMContext_spcore__T_spbool (1 samples, 0.04%)</title><rect x="675.6" y="5797" width="0.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="678.57" y="5807.5" ></text>
</g>
<g >
<title>`llvm::Type::isSized(llvm::SmallPtrSetImpl&lt;llvm::Type*&gt;*) const (1 samples, 0.04%)</title><rect x="825.3" y="5605" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="828.30" y="5615.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="285.5" y="949" width="1.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="288.52" y="959.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="401.9" y="3205" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="404.93" y="3215.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.04%)</title><rect x="553.5" y="5749" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="556.53" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="295.4" y="2181" width="0.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="298.38" y="2191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (8 samples, 0.32%)</title><rect x="417.4" y="3637" width="3.8" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="420.41" y="3647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="397.7" y="3781" width="1.9" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="400.70" y="3791.5" ></text>
</g>
<g >
<title>`core::core__get_sysprop(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.04%)</title><rect x="283.6" y="1045" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="286.64" y="1055.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="36.8" y="3365" width="0.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="39.75" y="3375.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="295.8" y="2213" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="298.85" y="2223.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="24.1" y="4149" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="27.08" y="4159.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::getBackedgeTakenInfo(llvm::Loop const*) (1 samples, 0.04%)</title><rect x="846.4" y="5749" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="849.42" y="5759.5" ></text>
</g>
<g >
<title>`wrapped_cl__string_equal_T_spT_spFixnum_spT_spFixnum_spT_sp (1 samples, 0.04%)</title><rect x="162.5" y="4325" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="165.55" y="4335.5" ></text>
</g>
<g >
<title>`COMPLETER-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (1 samples, 0.04%)</title><rect x="244.7" y="501" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="247.69" y="511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="232.0" y="3237" width="0.5" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="235.01" y="3247.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2357" width="4.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="285.70" y="2367.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="627.2" y="5093" width="0.5" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="630.22" y="5103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (22 samples, 0.88%)</title><rect x="384.1" y="4741" width="10.3" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="387.09" y="4751.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="233.9" y="277" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="236.89" y="287.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (8 samples, 0.32%)</title><rect x="490.2" y="5813" width="3.7" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="493.17" y="5823.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::PointerType_O&gt; gctools::GCObjectAppro (1 samples, 0.04%)</title><rect x="646.0" y="5285" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="649.00" y="5295.5" ></text>
</g>
<g >
<title>`PREDICTOR-ACTION^CONCRETE-SYNTAX-TREE^((GRAMMAR-SYMBOL GRAMMAR  (4 samples, 0.16%)</title><rect x="277.1" y="661" width="1.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="280.07" y="671.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="124.5" y="2165" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="127.53" y="2175.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="431.5" y="3301" width="1.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="434.50" y="3311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="414.1" y="4261" width="1.0" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="417.13" y="4271.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (4 samples, 0.16%)</title><rect x="52.7" y="4085" width="1.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="55.71" y="4095.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="666.2" y="5621" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="669.18" y="5631.5" ></text>
</g>
<g >
<title>`llvm::ValueEnumerator::setInstructionID(llvm::Instruction const (4 samples, 0.16%)</title><rect x="957.2" y="5877" width="1.9" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="960.19" y="5887.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="411.3" y="3397" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="414.31" y="3407.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="34.4" y="4853" width="0.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="37.41" y="4863.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.04%)</title><rect x="156.9" y="4277" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="159.91" y="4287.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="270.0" y="213" width="1.9" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="273.03" y="223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (36 samples, 1.43%)</title><rect x="416.9" y="4949" width="16.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="419.95" y="4959.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="112.3" y="3717" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="115.32" y="3727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="427.3" y="3061" width="4.2" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="430.27" y="3071.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="421.6" y="4069" width="1.0" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="424.64" y="4079.5" ></text>
</g>
<g >
<title>`core::type_of(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.08%)</title><rect x="277.5" y="613" width="1.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="280.54" y="623.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="382.2" y="4181" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="385.21" y="4191.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.04%)</title><rect x="570.4" y="5765" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="573.43" y="5775.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.04%)</title><rect x="747.9" y="5669" width="0.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="750.85" y="5679.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="34.4" y="4533" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="37.41" y="4543.5" ></text>
</g>
<g >
<title>`GC_alloc_large (41 samples, 1.63%)</title><rect x="469.5" y="5669" width="19.3" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="472.51" y="5679.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.04%)</title><rect x="369.1" y="5717" width="0.4" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="372.07" y="5727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (52 samples, 2.07%)</title><rect x="379.4" y="5221" width="24.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="382.40" y="5231.5" >`..</text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.04%)</title><rect x="627.2" y="5061" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="630.22" y="5071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="423.0" y="2277" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="426.05" y="2287.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="417.4" y="949" width="1.4" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="420.41" y="959.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="414.1" y="3717" width="0.5" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="417.13" y="3727.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="427.3" y="2485" width="2.3" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="430.27" y="2495.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="427.3" y="3317" width="4.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="430.27" y="3327.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="336.2" y="4309" width="1.0" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="339.21" y="4319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="3845" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="414.78" y="3855.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="137.2" y="4229" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="140.20" y="4239.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="392.5" y="4165" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="395.54" y="4175.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="670.9" y="5781" width="0.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="673.88" y="5791.5" ></text>
</g>
<g >
<title>`PROCESS-LTV^CLASP-CLEAVIR-AST^FN^^ (2 samples, 0.08%)</title><rect x="336.2" y="4517" width="1.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="339.21" y="4527.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (9 samples, 0.36%)</title><rect x="276.6" y="3285" width="4.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="279.60" y="3295.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::Value*&gt;* ll (1 samples, 0.04%)</title><rect x="823.4" y="5749" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="826.42" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="254.1" y="3141" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="257.07" y="3151.5" ></text>
</g>
<g >
<title>`BACKQUOTE^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="38.2" y="4581" width="0.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="41.16" y="4591.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.12%)</title><rect x="428.2" y="2421" width="1.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="431.21" y="2431.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'CLEAVIR-PRIMOP:CST (3 samples, 0.12%)</title><rect x="279.4" y="1029" width="1.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="282.42" y="1039.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="421.6" y="3573" width="1.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="424.64" y="3583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="412.3" y="4133" width="0.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="415.25" y="4143.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="396.3" y="4869" width="3.7" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="399.29" y="4879.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.04%)</title><rect x="156.4" y="4277" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="159.44" y="4287.5" ></text>
</g>
<g >
<title>0x1225ef094 (48 samples, 1.91%)</title><rect x="180.4" y="869" width="22.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="183.38" y="879.5" >0..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1765" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="423.70" y="1775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="278.9" y="133" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="281.95" y="143.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.04%)</title><rect x="386.0" y="2917" width="0.4" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="388.97" y="2927.5" ></text>
</g>
<g >
<title>`DATA^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (1 samples, 0.04%)</title><rect x="578.9" y="5797" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="581.88" y="5807.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'IF) T T T))^METHOD (2 samples, 0.08%)</title><rect x="239.5" y="3109" width="1.0" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="242.52" y="3119.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solve() (1 samples, 0.04%)</title><rect x="693.9" y="5829" width="0.4" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="696.87" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="186.0" y="213" width="1.4" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="189.01" y="223.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="286.9" y="4805" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="289.93" y="4815.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="55.1" y="5445" width="0.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="58.06" y="5455.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (43 samples, 1.71%)</title><rect x="383.6" y="5141" width="20.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="386.62" y="5151.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="455.9" y="5733" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="458.90" y="5743.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="3477" width="4.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="279.60" y="3487.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="1989" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="423.70" y="1999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="415.5" y="4837" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="418.54" y="4847.5" ></text>
</g>
<g >
<title>`REFERENCED-CONS-TABLE^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="48.0" y="5445" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="51.02" y="5455.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (4 samples, 0.16%)</title><rect x="757.7" y="5829" width="1.9" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="760.71" y="5839.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="139.5" y="4261" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="142.55" y="4271.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.04%)</title><rect x="424.5" y="3077" width="0.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="427.46" y="3087.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getNonLocalPointerDependency(llv (17 samples, 0.68%)</title><rect x="815.9" y="5797" width="8.0" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="818.91" y="5807.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (16 samples, 0.64%)</title><rect x="371.4" y="5829" width="7.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="374.42" y="5839.5" ></text>
</g>
<g >
<title>0x11a477094 (9 samples, 0.36%)</title><rect x="282.7" y="2325" width="4.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="285.70" y="2335.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="283.2" y="1461" width="1.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="286.17" y="1471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="408.0" y="4837" width="2.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="411.03" y="4847.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (3 samples, 0.12%)</title><rect x="504.2" y="5525" width="1.5" height="15.0" fill="rgb(250,122,122)" rx="2" ry="2" />
<text  x="507.25" y="5535.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.04%)</title><rect x="125.0" y="1669" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="128.00" y="1679.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="405.7" y="4709" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="408.68" y="4719.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="125.9" y="2661" width="1.0" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="128.93" y="2671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.9" y="1253" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="427.92" y="1263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="401.0" y="3333" width="0.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="403.99" y="3343.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (1 samples, 0.04%)</title><rect x="700.9" y="5797" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="703.91" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="408.0" y="4773" width="2.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="411.03" y="4783.5" ></text>
</g>
<g >
<title>`MAKE-EQ-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="418.8" y="901" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="421.82" y="911.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="335.7" y="4421" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="338.74" y="4431.5" ></text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (63 samples, 2.51%)</title><rect x="133.9" y="4485" width="29.6" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="136.91" y="4495.5" >`P..</text>
</g>
<g >
<title>`core::clasp_namestring(gctools::smart_ptr&lt;core::T_O&gt;, int) (1 samples, 0.04%)</title><rect x="42.9" y="4789" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="45.86" y="4799.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (5 samples, 0.20%)</title><rect x="284.6" y="1349" width="2.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="287.58" y="1359.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (1 samples, 0.04%)</title><rect x="232.5" y="2389" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="235.48" y="2399.5" ></text>
</g>
<g >
<title>`LEFT-PARENTHESIS^ECLECTOR.READER^FN^^ (6 samples, 0.24%)</title><rect x="38.6" y="4581" width="2.8" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="41.63" y="4591.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="90.3" y="3893" width="1.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="93.26" y="3903.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1941" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="423.70" y="1951.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (3 samples, 0.12%)</title><rect x="491.6" y="5797" width="1.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="494.58" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="124.5" y="2469" width="1.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="127.53" y="2479.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="339.0" y="4453" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="342.03" y="4463.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.04%)</title><rect x="765.2" y="5701" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="768.22" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-TOPLEVEL^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="349.8" y="5381" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="352.82" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.12%)</title><rect x="125.9" y="3253" width="1.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="128.93" y="3263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="273.8" y="5125" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="276.79" y="5135.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (1 samples, 0.04%)</title><rect x="887.7" y="5733" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="890.72" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (7 samples, 0.28%)</title><rect x="332.9" y="4613" width="3.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="335.93" y="4623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="410.8" y="4789" width="1.9" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="413.84" y="4799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="408.0" y="3989" width="1.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="411.03" y="3999.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="268.2" y="1285" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="271.15" y="1295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="2165" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="428.86" y="2175.5" ></text>
</g>
<g >
<title>`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std:: (1 samples, 0.04%)</title><rect x="960.5" y="5861" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="963.48" y="5871.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hash_combine&lt;unsigned int, unsigned int,  (1 samples, 0.04%)</title><rect x="624.9" y="4997" width="0.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="627.88" y="5007.5" ></text>
</g>
<g >
<title>0x11a477094 (16 samples, 0.64%)</title><rect x="243.3" y="1461" width="7.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="246.28" y="1471.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="423.0" y="2581" width="1.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="426.05" y="2591.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="401.0" y="3429" width="0.9" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="403.99" y="3439.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="391.6" y="2597" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="394.60" y="2607.5" ></text>
</g>
<g >
<title>0x1225ef094 (15 samples, 0.60%)</title><rect x="232.5" y="2853" width="7.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="235.48" y="2863.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2629" width="4.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="285.70" y="2639.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="405.7" y="4229" width="0.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="408.68" y="4239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="2901" width="4.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="279.60" y="2911.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="320.7" y="5269" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="323.72" y="5279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="4245" width="1.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="411.03" y="4255.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="452.6" y="5381" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="455.62" y="5391.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="345.6" y="4789" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="348.60" y="4799.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="171.9" y="1589" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="174.93" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="417.9" y="725" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="420.88" y="735.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (11 samples, 0.44%)</title><rect x="276.1" y="4437" width="5.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="279.13" y="4447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="26.0" y="4517" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="28.96" y="4527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="409.9" y="2005" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="412.90" y="2015.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="410.8" y="4133" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="413.84" y="4143.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="429.6" y="2149" width="1.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="432.62" y="2159.5" ></text>
</g>
<g >
<title>`llvm::Type::getScalarSizeInBits() const (1 samples, 0.04%)</title><rect x="916.4" y="5813" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="919.36" y="5823.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (2 samples, 0.08%)</title><rect x="828.1" y="5653" width="1.0" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="831.11" y="5663.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="417.4" y="1301" width="2.4" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="420.41" y="1311.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="452.6" y="5493" width="0.5" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="455.62" y="5503.5" ></text>
</g>
<g >
<title>`core::core__hash_table_setf_gethash(gctools::smart_ptr&lt;core::Ha (1 samples, 0.04%)</title><rect x="496.7" y="5781" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="499.74" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.9" y="2645" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="412.90" y="2655.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="382.2" y="4165" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="385.21" y="4175.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (2 samples, 0.08%)</title><rect x="34.4" y="4997" width="0.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="37.41" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LET) T T T))^METHO (15 samples, 0.60%)</title><rect x="232.5" y="2837" width="7.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="235.48" y="2847.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="414.1" y="4325" width="1.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="417.13" y="4335.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (8 samples, 0.32%)</title><rect x="384.6" y="4421" width="3.7" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="387.56" y="4431.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (14 samples, 0.56%)</title><rect x="36.3" y="4869" width="6.6" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="39.28" y="4879.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (24 samples, 0.95%)</title><rect x="101.1" y="3733" width="11.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="104.06" y="3743.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="276.1" y="4101" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="279.13" y="4111.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.04%)</title><rect x="846.9" y="5845" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="849.89" y="5855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="337.2" y="4437" width="0.4" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="340.15" y="4447.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::run() (105 samples, 4.18%)</title><rect x="728.6" y="5861" width="49.3" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="731.61" y="5871.5" >`llv..</text>
</g>
<g >
<title>`PARSE-TOP-LEVEL^CONCRETE-SYNTAX-TREE^FN^^ (3 samples, 0.12%)</title><rect x="254.1" y="3285" width="1.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="257.07" y="3295.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="287.9" y="5253" width="0.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="290.87" y="5263.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="318.4" y="5557" width="0.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="321.38" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (23 samples, 0.91%)</title><rect x="167.2" y="2501" width="10.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="170.24" y="2511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="413.7" y="4533" width="1.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="416.66" y="4543.5" ></text>
</g>
<g >
<title>`llvm::GlobalValue::isDeclaration() const (1 samples, 0.04%)</title><rect x="841.3" y="5909" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="844.26" y="5919.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (336 samples, 13.37%)</title><rect x="129.7" y="5333" width="157.7" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="132.69" y="5343.5" >`CONVERT^CLEAVIR-CST..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="52.2" y="5077" width="2.9" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="55.24" y="5087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="165.4" y="2661" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="168.36" y="2671.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="247.0" y="741" width="0.5" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="250.03" y="751.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="400.0" y="4261" width="1.9" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="403.05" y="4271.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="336.7" y="3989" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="339.68" y="3999.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.0" y="2261" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="411.97" y="2271.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="287.4" y="4789" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="290.40" y="4799.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="276.6" y="2805" width="4.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="279.60" y="2815.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (4 samples, 0.16%)</title><rect x="122.6" y="3269" width="1.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="125.65" y="3279.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="52.7" y="4021" width="1.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="55.71" y="4031.5" ></text>
</g>
<g >
<title>`ENSURE-ORIGIN^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="334.3" y="4533" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="337.34" y="4543.5" ></text>
</g>
<g >
<title>`C+ (4 samples, 0.16%)</title><rect x="638.0" y="5381" width="1.9" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="641.02" y="5391.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="408.0" y="4373" width="1.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="411.03" y="4383.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="430.6" y="1749" width="0.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="433.56" y="1759.5" ></text>
</g>
<g >
<title>`llvm::IRBuilderBase::SetInstDebugLocation(llvm::Instruction*) c (1 samples, 0.04%)</title><rect x="605.6" y="5397" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="608.63" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.24%)</title><rect x="385.0" y="4005" width="2.8" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="388.03" y="4015.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="36.3" y="4741" width="1.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="39.28" y="4751.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;std::__1::pair&lt;llvm::DomTreeNodeBase&lt;l (1 samples, 0.04%)</title><rect x="922.0" y="5797" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="924.99" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="429.6" y="2229" width="1.0" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="432.62" y="2239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (12 samples, 0.48%)</title><rect x="233.9" y="2181" width="5.6" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="236.89" y="2191.5" ></text>
</g>
<g >
<title>`CHILDREN^CLEAVIR-AST^((IF-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="306.6" y="5797" width="0.5" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="309.64" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (6 samples, 0.24%)</title><rect x="413.7" y="4997" width="2.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="416.66" y="5007.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.04%)</title><rect x="203.9" y="837" width="0.4" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="206.85" y="847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.8" y="4117" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="414.78" y="4127.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="168.6" y="837" width="1.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="171.65" y="847.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.08%)</title><rect x="121.2" y="3589" width="1.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="124.24" y="3599.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (95 samples, 3.78%)</title><rect x="12.3" y="5845" width="44.6" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="15.35" y="5855.5" >`cor..</text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.04%)</title><rect x="425.9" y="2085" width="0.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="428.86" y="2095.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="49.9" y="4965" width="1.9" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="52.90" y="4975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.16%)</title><rect x="379.9" y="4757" width="1.8" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="382.86" y="4767.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="393.9" y="2869" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="396.95" y="2879.5" ></text>
</g>
<g >
<title>`core::bind_optional_va_list(gctools::Vec0&lt;core::OptionalArgumen (1 samples, 0.04%)</title><rect x="649.3" y="5253" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="652.28" y="5263.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="2837" width="1.8" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="168.36" y="2847.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SimplifyCFGOpt::run(llvm::BasicBlock*) (6 samples, 0.24%)</title><rect x="834.7" y="5845" width="2.8" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="837.69" y="5855.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="401.9" y="3237" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="404.93" y="3247.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="455.4" y="5813" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="458.43" y="5823.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (1 samples, 0.04%)</title><rect x="346.5" y="4981" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="349.54" y="4991.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="380.8" y="4565" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="383.80" y="4575.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((NULL))^METHOD^^ (1 samples, 0.04%)</title><rect x="299.6" y="5877" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="302.60" y="5887.5" ></text>
</g>
<g >
<title>`MAKE-ENTER-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="424.0" y="1493" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="426.99" y="1503.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (86 samples, 3.42%)</title><rect x="87.0" y="4805" width="40.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="89.98" y="4815.5" >`IN..</text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="283.2" y="1141" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="286.17" y="1151.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="413.7" y="4757" width="1.8" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="416.66" y="4767.5" ></text>
</g>
<g >
<title>`CST-FROM-LIST-EXPRESSION^CONCRETE-SYNTAX-TREE^FN^^ (1 samples, 0.04%)</title><rect x="323.1" y="5397" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="326.07" y="5407.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="414.1" y="4341" width="1.0" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="417.13" y="4351.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.04%)</title><rect x="753.0" y="5653" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="756.02" y="5663.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="336.7" y="4213" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="339.68" y="4223.5" ></text>
</g>
<g >
<title>`FAST-SUBTYPEP^CORE^FN^^ (1 samples, 0.04%)</title><rect x="168.2" y="725" width="0.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="171.18" y="735.5" ></text>
</g>
<g >
<title>`ELIMINATE-LOAD-TIME-VALUE-INPUTS^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="334.8" y="4517" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="337.81" y="4527.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="2965" width="1.4" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="411.03" y="2975.5" ></text>
</g>
<g >
<title>`IRC-EXTRACT-VALUE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="627.7" y="5125" width="0.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="630.69" y="5135.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="49.9" y="4421" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="52.90" y="4431.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="135.8" y="4245" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="138.79" y="4255.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="268.6" y="405" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="271.62" y="415.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.04%)</title><rect x="297.7" y="5237" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="300.72" y="5247.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="52.7" y="3541" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="55.71" y="3551.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (1 samples, 0.04%)</title><rect x="340.9" y="4469" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="343.91" y="4479.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="276.6" y="2837" width="4.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="279.60" y="2847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="1349" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="423.70" y="1359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="295.4" y="2165" width="0.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="298.38" y="2175.5" ></text>
</g>
<g >
<title>`IN^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="617.4" y="5413" width="0.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="620.37" y="5423.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="384.1" y="4693" width="10.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="387.09" y="4703.5" ></text>
</g>
<g >
<title>`llvm::FunctionPass::assignPassManager(llvm::PMStack&amp;, llvm::Pas (1 samples, 0.04%)</title><rect x="685.9" y="5893" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="688.89" y="5903.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="611.3" y="5365" width="0.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="614.26" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="411.3" y="3781" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="414.31" y="3791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3525" width="1.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="424.64" y="3535.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="658.2" y="5525" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="661.20" y="5535.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="401.0" y="2837" width="0.9" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="403.99" y="2847.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="53.7" y="3813" width="0.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="56.65" y="3823.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (2 samples, 0.08%)</title><rect x="279.9" y="325" width="0.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="282.89" y="335.5" ></text>
</g>
<g >
<title>0x1225e5094 (40 samples, 1.59%)</title><rect x="232.0" y="3845" width="18.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="235.01" y="3855.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.04%)</title><rect x="747.4" y="5701" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="750.38" y="5711.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="332.0" y="4373" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="334.99" y="4383.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (31 samples, 1.23%)</title><rect x="257.4" y="2853" width="14.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="260.36" y="2863.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="287.4" y="5301" width="1.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="290.40" y="5311.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (559 samples, 22.24%)</title><rect x="686.4" y="5941" width="262.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="689.36" y="5951.5" >`llvm::legacy::PassManagerImpl::run..</text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="3013" width="4.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="430.27" y="3023.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="420.7" y="2245" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="423.70" y="2255.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (12 samples, 0.48%)</title><rect x="233.9" y="1589" width="5.6" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="236.89" y="1599.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (4 samples, 0.16%)</title><rect x="315.6" y="5349" width="1.8" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="318.56" y="5359.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="421.2" y="4133" width="0.4" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="424.17" y="4143.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="231.5" y="3653" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="234.54" y="3663.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.04%)</title><rect x="871.3" y="5701" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="874.30" y="5711.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="287.9" y="5141" width="0.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="290.87" y="5151.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (16 samples, 0.64%)</title><rect x="260.6" y="341" width="7.6" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="263.64" y="351.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="242.8" y="2133" width="0.5" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="245.81" y="2143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="424.0" y="1621" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="426.99" y="1631.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="386.0" y="3365" width="0.9" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="388.97" y="3375.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((CONS T T T T T))^ (16 samples, 0.64%)</title><rect x="260.6" y="421" width="7.6" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="263.64" y="431.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="247.5" y="197" width="1.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="250.50" y="207.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="417.9" y="869" width="0.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="420.88" y="879.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.3" y="1557" width="0.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="430.27" y="1567.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="122.6" y="2757" width="1.9" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="125.65" y="2767.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="1237" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="428.86" y="1247.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="417.4" y="1701" width="2.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="420.41" y="1711.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (22 samples, 0.88%)</title><rect x="167.7" y="2133" width="10.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="170.71" y="2143.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="332.9" y="4501" width="1.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="335.93" y="4511.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (64 samples, 2.55%)</title><rect x="321.7" y="5509" width="30.0" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="324.66" y="5519.5" >`M..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (35 samples, 1.39%)</title><rect x="256.0" y="3301" width="16.4" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="258.95" y="3311.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.04%)</title><rect x="365.3" y="5685" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="368.31" y="5695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="427.3" y="853" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="430.27" y="863.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="497.2" y="5797" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="500.21" y="5807.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (2 samples, 0.08%)</title><rect x="471.4" y="5605" width="0.9" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="474.39" y="5615.5" ></text>
</g>
<g >
<title>`core::cl__get_output_stream_string(gctools::smart_ptr&lt;core::T_O (1 samples, 0.04%)</title><rect x="631.0" y="5141" width="0.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="633.98" y="5151.5" ></text>
</g>
<g >
<title>`llvm::raw_ostream::operator&lt;&lt;(llvm::StringRef) (1 samples, 0.04%)</title><rect x="769.4" y="5717" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="772.44" y="5727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="42.9" y="4869" width="0.4" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="45.86" y="4879.5" ></text>
</g>
<g >
<title>`CST-FROM-ELEMENT^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.08%)</title><rect x="313.2" y="5557" width="1.0" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="316.21" y="5567.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.04%)</title><rect x="752.1" y="5605" width="0.4" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="755.08" y="5615.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="114.7" y="3525" width="0.4" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="117.67" y="3535.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="284.6" y="1557" width="2.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="287.58" y="1567.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="408.5" y="2805" width="0.9" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="411.50" y="2815.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="420.7" y="453" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="423.70" y="463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="530.5" y="5781" width="1.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="533.53" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="168.2" y="1461" width="2.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="171.18" y="1471.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="429.6" y="1653" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="432.62" y="1663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="276.1" y="3781" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="279.13" y="3791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="423.0" y="4181" width="10.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="426.05" y="4191.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (53 samples, 2.11%)</title><rect x="324.0" y="5253" width="24.9" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="327.01" y="5263.5" >`..</text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-FUNCTION-INFO T T))^M (23 samples, 0.91%)</title><rect x="167.2" y="2437" width="10.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="170.24" y="2447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (6 samples, 0.24%)</title><rect x="269.1" y="549" width="2.8" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="272.09" y="559.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="34.4" y="4389" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="37.41" y="4399.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.04%)</title><rect x="384.6" y="4085" width="0.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="387.56" y="4095.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.04%)</title><rect x="633.8" y="5301" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="636.79" y="5311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="295.8" y="2245" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="298.85" y="2255.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.04%)</title><rect x="643.7" y="5301" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="646.65" y="5311.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (8 samples, 0.32%)</title><rect x="388.3" y="3877" width="3.8" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="391.31" y="3887.5" ></text>
</g>
<g >
<title>`DATUM-NAME-AS-STRING^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="617.8" y="5349" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="620.84" y="5359.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="3317" width="0.5" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="414.78" y="3327.5" ></text>
</g>
<g >
<title>`llvm::wouldInstructionBeTriviallyDead(llvm::Instruction*, llvm: (1 samples, 0.04%)</title><rect x="917.8" y="5845" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="920.76" y="5855.5" ></text>
</g>
<g >
<title>`GC_allocobj (37 samples, 1.47%)</title><rect x="435.3" y="5509" width="17.3" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="438.25" y="5519.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="422.1" y="2069" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="425.11" y="2079.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (56 samples, 2.23%)</title><rect x="204.3" y="181" width="26.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="207.32" y="191.5" >`..</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="122.6" y="2853" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="125.65" y="2863.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (23 samples, 0.91%)</title><rect x="804.6" y="5717" width="10.8" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="807.65" y="5727.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="123.1" y="2325" width="1.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="126.12" y="2335.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="282.7" y="1109" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="285.70" y="1119.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="632.4" y="5285" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="635.39" y="5295.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (1 samples, 0.04%)</title><rect x="952.0" y="5973" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="955.03" y="5983.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="179.4" y="2181" width="1.0" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="182.44" y="2191.5" ></text>
</g>
<g >
<title>`ELIMINATE-LOAD-TIME-VALUE-INPUTS^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="329.6" y="4469" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="332.64" y="4479.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="413.7" y="4565" width="1.4" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="416.66" y="4575.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="49.9" y="4501" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="52.90" y="4511.5" ></text>
</g>
<g >
<title>`core::core__generalp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="411.3" y="3253" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="414.31" y="3263.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ModuleBitcodeWriter::writeFunction(llvm: (10 samples, 0.40%)</title><rect x="954.8" y="5893" width="4.7" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="957.84" y="5903.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="416.5" y="4997" width="0.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="419.48" y="5007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="405.2" y="5109" width="0.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="408.21" y="5119.5" ></text>
</g>
<g >
<title>`std::__1::locale::locale() (1 samples, 0.04%)</title><rect x="346.5" y="4933" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="349.54" y="4943.5" ></text>
</g>
<g >
<title>`SLOT-MAKUNBOUND^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="411.8" y="2421" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="414.78" y="2431.5" ></text>
</g>
<g >
<title>`gctools::GCVector_moveable&lt;core::DynamicBinding&gt;::GCVector_move (1 samples, 0.04%)</title><rect x="409.0" y="1637" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="411.97" y="1647.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (17 samples, 0.68%)</title><rect x="232.5" y="3365" width="8.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="235.48" y="3375.5" ></text>
</g>
<g >
<title>`llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl&lt;llvm::Type (1 samples, 0.04%)</title><rect x="724.9" y="5797" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="727.85" y="5807.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (43 samples, 1.71%)</title><rect x="252.2" y="4245" width="20.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="255.20" y="4255.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.9" y="3125" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="404.93" y="3135.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (11 samples, 0.44%)</title><rect x="37.7" y="4709" width="5.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="40.69" y="4719.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="455.0" y="5669" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="457.96" y="5679.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (43 samples, 1.71%)</title><rect x="252.2" y="3925" width="20.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="255.20" y="3935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="423.0" y="3717" width="4.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="426.05" y="3727.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'LABELS) T T T))^ME (31 samples, 1.23%)</title><rect x="257.4" y="2005" width="14.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="260.36" y="2015.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="427.7" y="1445" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="430.74" y="1455.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-CST-TO-AST^FN^^ (2 samples, 0.08%)</title><rect x="123.6" y="1989" width="0.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="126.59" y="1999.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CONCRETE-SYNTAX-TREE^FN^^ (4 samples, 0.16%)</title><rect x="277.1" y="933" width="1.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="280.07" y="943.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (3 samples, 0.12%)</title><rect x="732.8" y="5733" width="1.4" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="735.83" y="5743.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="836.6" y="5797" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="839.56" y="5807.5" ></text>
</g>
<g >
<title>`wrapped_cl__write_T_spT_spT_spT_sp_______________T_spT_spT_spT_ (1 samples, 0.04%)</title><rect x="56.9" y="5925" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="59.94" y="5935.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (10 samples, 0.40%)</title><rect x="172.4" y="229" width="4.7" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="175.40" y="239.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (6 samples, 0.24%)</title><rect x="423.0" y="3365" width="2.9" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="426.05" y="3375.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.04%)</title><rect x="124.5" y="1669" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="127.53" y="1679.5" ></text>
</g>
<g >
<title>`llvm::Value::~Value() (1 samples, 0.04%)</title><rect x="704.7" y="5829" width="0.4" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="707.67" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="123.1" y="2549" width="1.4" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="126.12" y="2559.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="21.7" y="3893" width="1.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="24.73" y="3903.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="287.4" y="5205" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="290.40" y="5215.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="268.6" y="1013" width="3.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="271.62" y="1023.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (3 samples, 0.12%)</title><rect x="353.6" y="5541" width="1.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="356.58" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="348.9" y="5301" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="351.89" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="427.3" y="1941" width="0.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="430.27" y="1951.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="391.6" y="2693" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="394.60" y="2703.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="405.2" y="5333" width="0.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="408.21" y="5343.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.16%)</title><rect x="165.4" y="3013" width="1.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="168.36" y="3023.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (4 samples, 0.16%)</title><rect x="827.6" y="5749" width="1.9" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="830.65" y="5759.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.04%)</title><rect x="595.3" y="5797" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="598.31" y="5807.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="428.7" y="2149" width="0.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="431.68" y="2159.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (21 samples, 0.84%)</title><rect x="804.6" y="5701" width="9.9" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="807.65" y="5711.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="251.3" y="3589" width="0.9" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="254.26" y="3599.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="320.7" y="5253" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="323.72" y="5263.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="415.5" y="4133" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="418.54" y="4143.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.04%)</title><rect x="331.5" y="4581" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="334.52" y="4591.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="420.7" y="2133" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="423.70" y="2143.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorTemplateBase&lt;llvm::Value*, true&gt;::push_back(ll (1 samples, 0.04%)</title><rect x="889.1" y="5749" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="892.13" y="5759.5" ></text>
</g>
<g >
<title>`std::__1::__deque_base&lt;llvm::Function*, std::__1::allocator&lt;llv (1 samples, 0.04%)</title><rect x="857.7" y="5861" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="860.68" y="5871.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (25 samples, 0.99%)</title><rect x="357.8" y="5829" width="11.7" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="360.80" y="5839.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="278.9" y="181" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="281.95" y="191.5" ></text>
</g>
<g >
<title>`CST-&gt;AST^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="312.7" y="5765" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="315.74" y="5775.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (8 samples, 0.32%)</title><rect x="327.8" y="4517" width="3.7" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="330.76" y="4527.5" ></text>
</g>
<g >
<title>0x11a477094 (12 samples, 0.48%)</title><rect x="281.3" y="4645" width="5.6" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="284.30" y="4655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="401.9" y="4037" width="0.5" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="404.93" y="4047.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="53.2" y="3733" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="56.18" y="3743.5" ></text>
</g>
<g >
<title>`GC_clear_hdr_marks (1 samples, 0.04%)</title><rect x="470.9" y="5605" width="0.5" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="473.92" y="5615.5" ></text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (1 samples, 0.04%)</title><rect x="513.6" y="5621" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="516.64" y="5631.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (5 samples, 0.20%)</title><rect x="516.5" y="5765" width="2.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="519.45" y="5775.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="260.2" y="85" width="0.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="263.18" y="95.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="247.0" y="325" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="250.03" y="335.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="335.7" y="4549" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="338.74" y="4559.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="658.2" y="5493" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="661.20" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-TOPLEVEL^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.12%)</title><rect x="352.2" y="5573" width="1.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="355.17" y="5583.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="4325" width="5.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="284.30" y="4335.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="427.3" y="3253" width="4.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="430.27" y="3263.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="41.0" y="4453" width="0.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="43.98" y="4463.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="123.1" y="2261" width="1.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="126.12" y="2271.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-CST-TO-AST^FN^^ (12 samples, 0.48%)</title><rect x="172.4" y="1573" width="5.6" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="175.40" y="1583.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="125.9" y="2869" width="1.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="128.93" y="2879.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.04%)</title><rect x="594.4" y="5829" width="0.4" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="597.37" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3749" width="0.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="254.26" y="3759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="165.8" y="1781" width="1.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="168.83" y="1791.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="25.0" y="4117" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="28.02" y="4127.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="93.5" y="3317" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="96.55" y="3327.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.04%)</title><rect x="42.4" y="4501" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="45.39" y="4511.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="409.0" y="1941" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="411.97" y="1951.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (5 samples, 0.20%)</title><rect x="81.3" y="5013" width="2.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="84.34" y="5023.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="421.2" y="4165" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="424.17" y="4175.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="390.2" y="3621" width="1.9" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="393.19" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="3029" width="1.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="434.50" y="3039.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.04%)</title><rect x="609.9" y="5365" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="612.86" y="5375.5" ></text>
</g>
<g >
<title>`ThreadCmpOverPHI(llvm::CmpInst::Predicate, llvm::Value*, llvm:: (4 samples, 0.16%)</title><rect x="746.4" y="5813" width="1.9" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="749.44" y="5823.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="527.7" y="5637" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="530.72" y="5647.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="408.0" y="4405" width="1.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="411.03" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="417.9" y="501" width="0.5" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="420.88" y="511.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="36.3" y="4277" width="1.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="39.28" y="4287.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (1 samples, 0.04%)</title><rect x="919.2" y="5749" width="0.4" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="922.17" y="5759.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="417.9" y="277" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="420.88" y="287.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (148 samples, 5.89%)</title><rect x="599.1" y="5685" width="69.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="602.06" y="5695.5" >`TRANSL..</text>
</g>
<g >
<title>`PARSE-STEP^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (1 samples, 0.04%)</title><rect x="165.4" y="2645" width="0.4" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="168.36" y="2655.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (9 samples, 0.36%)</title><rect x="282.7" y="2229" width="4.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="285.70" y="2239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="123.6" y="1509" width="0.9" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="126.59" y="1519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="389.7" y="3733" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="392.72" y="3743.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.04%)</title><rect x="514.1" y="5669" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="517.11" y="5679.5" ></text>
</g>
<g >
<title>`llvm::Type::isSized(llvm::SmallPtrSetImpl&lt;llvm::Type*&gt;*) const (1 samples, 0.04%)</title><rect x="698.1" y="5733" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="701.10" y="5743.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="423.5" y="1845" width="1.0" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="426.52" y="1855.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="123.1" y="2453" width="1.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="126.12" y="2463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="416.5" y="4437" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="419.48" y="4447.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="168.2" y="981" width="1.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="171.18" y="991.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((:AROUND) (T T T))^METHOD^^ (305 samples, 12.13%)</title><rect x="130.2" y="5189" width="143.1" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="133.16" y="5199.5" >`CONVERT^CLEAVIR-C..</text>
</g>
<g >
<title>`HOIST-LOAD-TIME-VALUE^CLASP-CLEAVIR-AST^FN^^ (17 samples, 0.68%)</title><rect x="332.5" y="4725" width="7.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="335.46" y="4735.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.04%)</title><rect x="135.3" y="4325" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="138.32" y="4335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="393.5" y="4037" width="0.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="396.48" y="4047.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LoopUnroll::runOnLoop(llvm::Loop*, llvm: (2 samples, 0.08%)</title><rect x="919.6" y="5877" width="1.0" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="922.64" y="5887.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="1173" width="26.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="207.32" y="1183.5" >`..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="424.9" y="1621" width="0.5" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="427.92" y="1631.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.04%)</title><rect x="10.9" y="5941" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="13.94" y="5951.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.04%)</title><rect x="558.2" y="5781" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="561.23" y="5791.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="351.7" y="5525" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="354.70" y="5535.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="431.5" y="3365" width="1.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="434.50" y="3375.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SliceUpIllegalIntegerPHI(llvm::PHINode&amp;) (1 samples, 0.04%)</title><rect x="912.6" y="5829" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="915.60" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="93.5" y="3461" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="96.55" y="3471.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (10 samples, 0.40%)</title><rect x="508.5" y="5765" width="4.7" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="511.47" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="282.7" y="2485" width="4.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="285.70" y="2495.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (3 samples, 0.12%)</title><rect x="165.8" y="2469" width="1.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="168.83" y="2479.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.08%)</title><rect x="533.8" y="5829" width="1.0" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="536.82" y="5839.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (151 samples, 6.01%)</title><rect x="598.6" y="5733" width="70.9" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="601.59" y="5743.5" >`core::F..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="393.0" y="4277" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="396.01" y="4287.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="415.5" y="4421" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="418.54" y="4431.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="293.5" y="5397" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="296.50" y="5407.5" ></text>
</g>
<g >
<title>`COMPUTE-OUTCOME^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="284.6" y="997" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="287.58" y="1007.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="284.6" y="1253" width="2.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="287.58" y="1263.5" ></text>
</g>
<g >
<title>`ALLOCA-T*^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="598.1" y="5765" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="601.12" y="5775.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (3 samples, 0.12%)</title><rect x="168.6" y="789" width="1.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="171.65" y="799.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.04%)</title><rect x="100.6" y="3509" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="103.59" y="3519.5" ></text>
</g>
<g >
<title>`llvm::AnalysisResolver::addAnalysisImplsPair(void const*, llvm: (1 samples, 0.04%)</title><rect x="688.2" y="5909" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="691.24" y="5919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.36%)</title><rect x="427.3" y="3221" width="4.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="430.27" y="3231.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (2 samples, 0.08%)</title><rect x="843.1" y="5733" width="1.0" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="846.13" y="5743.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.04%)</title><rect x="842.7" y="5717" width="0.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="845.67" y="5727.5" ></text>
</g>
<g >
<title>`getCalledFunction(llvm::Value const*, bool, bool&amp;) (1 samples, 0.04%)</title><rect x="820.1" y="5669" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="823.14" y="5679.5" ></text>
</g>
<g >
<title>`STRING-DOWNCASE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="132.5" y="4453" width="0.5" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="135.51" y="4463.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="427.7" y="1621" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="430.74" y="1631.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="423.0" y="2389" width="0.5" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="426.05" y="2399.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.04%)</title><rect x="28.3" y="4981" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="31.31" y="4991.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="125.0" y="1861" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="128.00" y="1871.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T GLOBAL-MACRO-INFO T T))^METH (5 samples, 0.20%)</title><rect x="180.4" y="421" width="2.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="183.38" y="431.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.04%)</title><rect x="843.6" y="5685" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="846.60" y="5695.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::BasicBlock const*, std::__1::all (1 samples, 0.04%)</title><rect x="853.5" y="5813" width="0.4" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="856.46" y="5823.5" ></text>
</g>
<g >
<title>`core::cl__rename_file(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="952.5" y="5957" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="955.50" y="5967.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (58 samples, 2.31%)</title><rect x="100.1" y="4133" width="27.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="103.12" y="4143.5" >`..</text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.04%)</title><rect x="254.1" y="3077" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="257.07" y="3087.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="421.6" y="3381" width="1.0" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="424.64" y="3391.5" ></text>
</g>
<g >
<title>`llvm::getConstantStringInfo(llvm::Value const*, llvm::StringRef (1 samples, 0.04%)</title><rect x="829.1" y="5685" width="0.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="832.05" y="5695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="425.9" y="2741" width="0.9" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="428.86" y="2751.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (203 samples, 8.07%)</title><rect x="842.2" y="5925" width="95.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="845.20" y="5935.5" >`llvm::FPPa..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (52 samples, 2.07%)</title><rect x="379.4" y="5461" width="24.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="382.40" y="5471.5" >`..</text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.04%)</title><rect x="424.9" y="933" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="427.92" y="943.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="432.9" y="3253" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="435.90" y="3263.5" ></text>
</g>
<g >
<title>`setup_header (1 samples, 0.04%)</title><rect x="369.1" y="5685" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="372.07" y="5695.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="251.3" y="3397" width="0.9" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="254.26" y="3407.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="412.3" y="3877" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="415.25" y="3887.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.04%)</title><rect x="723.0" y="5749" width="0.4" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="725.98" y="5759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="233.9" y="437" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="236.89" y="447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="1989" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="428.86" y="1999.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitLoadInst(llvm::LoadInst&amp;) (20 samples, 0.80%)</title><rect x="903.2" y="5845" width="9.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="906.21" y="5855.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (87 samples, 3.46%)</title><rect x="86.5" y="5173" width="40.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="89.51" y="5183.5" >`co..</text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (1 samples, 0.04%)</title><rect x="316.5" y="5173" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="319.50" y="5183.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="401.9" y="3909" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="404.93" y="3919.5" ></text>
</g>
<g >
<title>`OPTIMIZED-TYPEQ-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="426.3" y="2405" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="429.33" y="2415.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="373.8" y="5765" width="0.4" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="376.76" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (22 samples, 0.88%)</title><rect x="384.1" y="4629" width="10.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="387.09" y="4639.5" ></text>
</g>
<g >
<title>`CONVERT-LET^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (4 samples, 0.16%)</title><rect x="282.7" y="1653" width="1.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="285.70" y="1663.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (51 samples, 2.03%)</title><rect x="139.1" y="4373" width="23.9" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="142.08" y="4383.5" >`..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-CST-TO-AST^((T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="249.4" y="757" width="0.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="252.38" y="767.5" ></text>
</g>
<g >
<title>0x11a477094 (3 samples, 0.12%)</title><rect x="285.5" y="581" width="1.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="288.52" y="591.5" ></text>
</g>
<g >
<title>`OPTIMIZED-EQ-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.04%)</title><rect x="385.0" y="3797" width="0.5" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="388.03" y="3807.5" ></text>
</g>
<g >
<title>0x11a477094 (34 samples, 1.35%)</title><rect x="256.0" y="3269" width="15.9" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="258.95" y="3279.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="409.4" y="2389" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="412.44" y="2399.5" ></text>
</g>
<g >
<title>`BUILD-CST^CONCRETE-SYNTAX-TREE^FN^^ (2 samples, 0.08%)</title><rect x="273.8" y="5157" width="0.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="276.79" y="5167.5" ></text>
</g>
<g >
<title>`INTERPRET-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="31.6" y="5205" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="34.59" y="5215.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((PRECALC-VALUE-INST (2 samples, 0.08%)</title><rect x="665.7" y="5653" width="1.0" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="668.71" y="5663.5" ></text>
</g>
<g >
<title>`DBG-CREATE-FUNCTION-TYPE^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="342.3" y="4645" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="345.32" y="4655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.08%)</title><rect x="340.4" y="4629" width="1.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="343.44" y="4639.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.04%)</title><rect x="433.4" y="4229" width="0.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="436.37" y="4239.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (9 samples, 0.36%)</title><rect x="282.7" y="3205" width="4.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="285.70" y="3215.5" ></text>
</g>
<g >
<title>`llvm::scc_iterator&lt;llvm::Function const*, llvm::GraphTraits&lt;llv (2 samples, 0.08%)</title><rect x="853.0" y="5861" width="0.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="855.99" y="5871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (4 samples, 0.16%)</title><rect x="289.7" y="5589" width="1.9" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="292.75" y="5599.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (2 samples, 0.08%)</title><rect x="427.3" y="1973" width="0.9" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="430.27" y="1983.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="412.3" y="3829" width="0.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="415.25" y="3839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="414.1" y="3637" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="417.13" y="3647.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETER-GROUPS^CLEAVIR-CST-TO-AST^((NULL T T T T T))^ (1 samples, 0.04%)</title><rect x="247.0" y="389" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="250.03" y="399.5" ></text>
</g>
<g >
<title>`HOIST-LOAD-TIME-VALUE^CLASP-CLEAVIR-AST^FN^^ (1 samples, 0.04%)</title><rect x="325.9" y="4693" width="0.5" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="328.89" y="4703.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="599.1" y="5653" width="0.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="602.06" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="410.8" y="4181" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="413.84" y="4191.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (305 samples, 12.13%)</title><rect x="130.2" y="5109" width="143.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="133.16" y="5119.5" >`core::clos__inter..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (9 samples, 0.36%)</title><rect x="276.6" y="2389" width="4.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="279.60" y="2399.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (100 samples, 3.98%)</title><rect x="406.1" y="5765" width="47.0" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="409.15" y="5775.5" >`cor..</text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (3 samples, 0.12%)</title><rect x="39.1" y="4405" width="1.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="42.10" y="4415.5" ></text>
</g>
<g >
<title>`ENSURE-ORIGIN^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="325.9" y="4677" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="328.89" y="4687.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.04%)</title><rect x="183.2" y="165" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="186.20" y="175.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getConstant(llvm::Value*, llvm::BasicBlock (2 samples, 0.08%)</title><rect x="691.1" y="5861" width="0.9" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="694.06" y="5871.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (41 samples, 1.63%)</title><rect x="469.5" y="5733" width="19.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="472.51" y="5743.5" ></text>
</g>
<g >
<title>`getAllocationData(llvm::Value const*, AllocType, llvm::TargetLi (1 samples, 0.04%)</title><rect x="820.1" y="5685" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="823.14" y="5695.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getEdgeValue(llvm::Va (1 samples, 0.04%)</title><rect x="696.7" y="5781" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="699.69" y="5791.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (14 samples, 0.56%)</title><rect x="91.7" y="3861" width="6.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="94.67" y="3871.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="92.6" y="3477" width="0.9" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="95.61" y="3487.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (1 samples, 0.04%)</title><rect x="123.6" y="1141" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="126.59" y="1151.5" ></text>
</g>
<g >
<title>`llvm::TargetTransformInfoImplCRTPBase&lt;(anonymous namespace)::No (1 samples, 0.04%)</title><rect x="782.1" y="5813" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="785.12" y="5823.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-CST-TO-AST^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="517" width="26.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="207.32" y="527.5" >`..</text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.04%)</title><rect x="401.9" y="4277" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="404.93" y="4287.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInBoundsGEP(llvm::Value*, gctools::sm (1 samples, 0.04%)</title><rect x="354.0" y="5269" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="357.05" y="5279.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="252.2" y="3173" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="255.20" y="3183.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.04%)</title><rect x="415.1" y="4437" width="0.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="418.07" y="4447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="382.2" y="4309" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="385.21" y="4319.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="400.5" y="3781" width="1.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="403.52" y="3791.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpBinOp(llvm::ICmpInst&amp;) (1 samples, 0.04%)</title><rect x="760.1" y="5829" width="0.4" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="763.06" y="5839.5" ></text>
</g>
<g >
<title>0x1225e30d4 (1 samples, 0.04%)</title><rect x="62.1" y="5013" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="65.10" y="5023.5" ></text>
</g>
<g >
<title>`MAKE-HASH-TABLE^COMMON-LISP^FN^^ (1 samples, 0.04%)</title><rect x="330.1" y="4437" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="333.11" y="4447.5" ></text>
</g>
<g >
<title>`CLEAVIR-COMPILE-FILE-CST^CLASP-CLEAVIR^FN^^ (1,322 samples, 52.59%)</title><rect x="57.4" y="5941" width="620.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="60.41" y="5951.5" >`CLEAVIR-COMPILE-FILE-CST^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (57 samples, 2.27%)</title><rect x="204.3" y="389" width="26.8" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="207.32" y="399.5" >`..</text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm (1 samples, 0.04%)</title><rect x="950.2" y="5765" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="953.15" y="5775.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="399.6" y="4101" width="0.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="402.58" y="4111.5" ></text>
</g>
<g >
<title>`PROCESS-CURRENT-STATE^CONCRETE-SYNTAX-TREE^((PARSER))^METHOD^^ (2 samples, 0.08%)</title><rect x="233.0" y="2277" width="0.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="235.95" y="2287.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.04%)</title><rect x="754.9" y="5717" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="757.89" y="5727.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (7 samples, 0.28%)</title><rect x="314.2" y="5413" width="3.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="317.15" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.12%)</title><rect x="417.4" y="901" width="1.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="420.41" y="911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.20%)</title><rect x="417.4" y="1749" width="2.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="420.41" y="1759.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="233.9" y="229" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="236.89" y="239.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (3 samples, 0.12%)</title><rect x="409.4" y="4325" width="1.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="412.44" y="4335.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="382.2" y="4437" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="385.21" y="4447.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="425.9" y="3173" width="0.9" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="428.86" y="3183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="417.9" y="405" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="420.88" y="415.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout con (1 samples, 0.04%)</title><rect x="776.0" y="5845" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="779.01" y="5855.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (7 samples, 0.28%)</title><rect x="314.2" y="5509" width="3.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="317.15" y="5519.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::keyTest(gctools::smart_ptr&lt;core::T_O&gt;, gc (1 samples, 0.04%)</title><rect x="74.3" y="4949" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="77.30" y="4959.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.04%)</title><rect x="653.0" y="5477" width="0.5" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="656.04" y="5487.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="335.7" y="4389" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="338.74" y="4399.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.04%)</title><rect x="608.4" y="5397" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="611.45" y="5407.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.04%)</title><rect x="425.4" y="1397" width="0.5" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="428.39" y="1407.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (23 samples, 0.91%)</title><rect x="332.5" y="4757" width="10.8" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="335.46" y="4767.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CAR-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="428.7" y="1749" width="0.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="431.68" y="1759.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.08%)</title><rect x="421.6" y="3253" width="1.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="424.64" y="3263.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="123.6" y="581" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="126.59" y="591.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((CONS T T T T T (1 samples, 0.04%)</title><rect x="247.0" y="597" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="250.03" y="607.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="100.6" y="3717" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="103.59" y="3727.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="397.7" y="3749" width="1.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="400.70" y="3759.5" ></text>
</g>
<g >
<title>0x11a477094 (2 samples, 0.08%)</title><rect x="235.3" y="133" width="0.9" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="238.30" y="143.5" ></text>
</g>
<g >
<title>`CST-EVAL^CLEAVIR-ENVIRONMENT^((T T CLASP-GLOBAL-ENVIRONMENT T)) (11 samples, 0.44%)</title><rect x="276.1" y="4597" width="5.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="279.13" y="4607.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (22 samples, 0.88%)</title><rect x="167.7" y="2309" width="10.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="170.71" y="2319.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (3 samples, 0.12%)</title><rect x="285.5" y="773" width="1.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="288.52" y="783.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="658.2" y="5477" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="661.20" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="414.6" y="4133" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="417.60" y="4143.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="391.6" y="2613" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="394.60" y="2623.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.48%)</title><rect x="281.3" y="4677" width="5.6" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="284.30" y="4687.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="425.9" y="2149" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="428.86" y="2159.5" ></text>
</g>
<g >
<title>`%I64^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="629.1" y="5189" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="632.10" y="5199.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="232.0" y="3269" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="235.01" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.12%)</title><rect x="431.5" y="3109" width="1.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="434.50" y="3119.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (99 samples, 3.94%)</title><rect x="606.6" y="5493" width="46.4" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="609.57" y="5503.5" >`INT..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="411.3" y="4101" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="414.31" y="4111.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="324.0" y="4917" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="327.01" y="4927.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="27.8" y="4869" width="0.5" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="30.84" y="4879.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="247.5" y="469" width="1.9" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="250.50" y="479.5" ></text>
</g>
<g >
<title>`wrapped_cl__type_of_T_sp (3 samples, 0.12%)</title><rect x="79.5" y="4997" width="1.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="82.47" y="5007.5" ></text>
</g>
<g >
<title>0x11a477094 (1 samples, 0.04%)</title><rect x="295.4" y="2293" width="0.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="298.38" y="2303.5" ></text>
</g>
<g >
<title>`isObjectSmallerThan(llvm::Value const*, unsigned long long, llv (2 samples, 0.08%)</title><rect x="804.6" y="5685" width="1.0" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="807.65" y="5695.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (7 samples, 0.28%)</title><rect x="304.3" y="5829" width="3.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="307.30" y="5839.5" ></text>
</g>
<g >
<title>`llvm::APInt::sdiv_ov(llvm::APInt const&amp;, bool&amp;) const (1 samples, 0.04%)</title><rect x="751.6" y="5701" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="754.61" y="5711.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (23 samples, 0.91%)</title><rect x="383.6" y="5045" width="10.8" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="386.62" y="5055.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.04%)</title><rect x="880.2" y="5829" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="883.21" y="5839.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (57 samples, 2.27%)</title><rect x="204.3" y="757" width="26.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="207.32" y="767.5" >`..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (136 samples, 5.41%)</title><rect x="167.2" y="2821" width="63.9" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="170.24" y="2831.5" >`core::..</text>
</g>
<g >
<title>`core::core__find_class_holder(gctools::smart_ptr&lt;core::Symbol_O (1 samples, 0.04%)</title><rect x="281.3" y="2981" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="284.30" y="2991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.04%)</title><rect x="425.9" y="933" width="0.4" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="428.86" y="943.5" ></text>
</g>
<g >
<title>`AST-&gt;HIR^CLASP-CLEAVIR^FN^^ (3 samples, 0.12%)</title><rect x="340.4" y="4725" width="1.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="343.44" y="4735.5" ></text>
</g>
<g >
<title>`PROCESS-PARAMETERS-IN-GROUP^CLEAVIR-CST-TO-AST^((NULL T T T T T (3 samples, 0.12%)</title><rect x="165.8" y="2325" width="1.4" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="168.83" y="2335.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (1 samples, 0.04%)</title><rect x="747.4" y="5765" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="750.38" y="5775.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-I64^COMPILER^FN^^ (1 samples, 0.04%)</title><rect x="667.1" y="5605" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="670.12" y="5615.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="430.6" y="1973" width="0.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="433.56" y="1983.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="295.8" y="2181" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="298.85" y="2191.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (1 samples, 0.04%)</title><rect x="829.5" y="5749" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="832.52" y="5759.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (5 samples, 0.20%)</title><rect x="417.4" y="1797" width="2.4" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="420.41" y="1807.5" ></text>
</g>
<g >
<title>0x1225ef094 (108 samples, 4.30%)</title><rect x="180.4" y="1557" width="50.7" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="183.38" y="1567.5" >0x122..</text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (4 samples, 0.16%)</title><rect x="168.2" y="1093" width="1.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="171.18" y="1103.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="411.8" y="4261" width="0.9" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="414.78" y="4271.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorBase::grow_pod(void*, unsigned long, unsigned  (2 samples, 0.08%)</title><rect x="833.7" y="5829" width="1.0" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="836.75" y="5839.5" ></text>
</g>
<g >
<title>`llvm::GVN::ValueTable::createExpr(llvm::Instruction*) (1 samples, 0.04%)</title><rect x="803.2" y="5797" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="806.24" y="5807.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="409.0" y="1845" width="0.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="411.97" y="1855.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.04%)</title><rect x="489.2" y="5781" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="492.23" y="5791.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="179.9" y="2149" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="182.91" y="2159.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="340.4" y="4677" width="1.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="343.44" y="4687.5" ></text>
</g>
<g >
<title>`INTERPRETED-DISCRIMINATING-FUNCTION^CLOS^FN^^ (1 samples, 0.04%)</title><rect x="255.5" y="3157" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="258.48" y="3167.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="52.7" y="3733" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="55.71" y="3743.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.04%)</title><rect x="736.6" y="5829" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="739.59" y="5839.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (6 samples, 0.24%)</title><rect x="52.2" y="4373" width="2.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="55.24" y="4383.5" ></text>
</g>
<g >
<title>`CONVERT-CST^CLEAVIR-CST-TO-AST^((T SPECIAL-OPERATOR-INFO T T))^ (3 samples, 0.12%)</title><rect x="279.4" y="1109" width="1.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="282.42" y="1119.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (1 samples, 0.04%)</title><rect x="34.9" y="4421" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="37.88" y="4431.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="414.6" y="4149" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="417.60" y="4159.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.08%)</title><rect x="251.3" y="3621" width="0.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="254.26" y="3631.5" ></text>
</g>
<g >
<title>`core::type_of_decide_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.04%)</title><rect x="244.7" y="437" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="247.69" y="447.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (1 samples, 0.04%)</title><rect x="240.0" y="2581" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="242.99" y="2591.5" ></text>
</g>
<g >
<title>`STORE-TMV^CLASP-CLEAVIR^FN^^ (1 samples, 0.04%)</title><rect x="665.2" y="5605" width="0.5" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="668.24" y="5615.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (108 samples, 4.30%)</title><rect x="180.4" y="2437" width="50.7" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="183.38" y="2447.5" >`core..</text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.04%)</title><rect x="96.8" y="3429" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="99.83" y="3439.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-CST-TO-AST^(((EQL #:'CLEAVIR-PRIMOP:MUL (5 samples, 0.20%)</title><rect x="284.6" y="1717" width="2.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="287.58" y="1727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.04%)</title><rect x="420.7" y="901" width="0.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="423.70" y="911.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (6 samples, 0.24%)</title><rect x="95.0" y="3589" width="2.8" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="97.96" y="3599.5" ></text>
</g>
<g >
<title>`SHARPSIGN-PLUS^ECLECTOR.READER^FN^^ (1 samples, 0.04%)</title><rect x="26.0" y="4581" width="0.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="28.96" y="4591.5" ></text>
</g>
<g >
<title>`core::FuncallableInstance_O::funcallable_entry_point(core::T_O* (2 samples, 0.08%)</title><rect x="233.0" y="2261" width="0.9" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="235.95" y="2271.5" ></text>
</g>
<g >
<title>`core::clos__interpret_dtree_program(gctools::smart_ptr&lt;core::Si (137 samples, 5.45%)</title><rect x="167.2" y="3829" width="64.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="170.24" y="3839.5" >`core::..</text>
</g>
</g>
</svg>
