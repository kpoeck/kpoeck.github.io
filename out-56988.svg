<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="6486" onload="init(evt)" viewBox="0 0 1200 6486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="6486.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="6469" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="6469" > </text>
<g id="frames">
<g >
<title>`GC_header_cache_miss (21 samples, 0.47%)</title><rect x="764.8" y="5557" width="5.5" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="767.78" y="5567.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T LEXICAL-VARIABLE-INFO))^METHO (1 samples, 0.02%)</title><rect x="74.6" y="3701" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="77.55" y="3711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4405" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="136.62" y="4415.5" ></text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (1 samples, 0.02%)</title><rect x="440.7" y="5605" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="443.71" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-FUNCTION^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="50.0" y="3269" width="1.6" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="52.99" y="3279.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="242.3" y="5509" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="245.34" y="5519.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="57.6" y="1141" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="60.57" y="1151.5" ></text>
</g>
<g >
<title>`llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer,  (1 samples, 0.02%)</title><rect x="57.8" y="981" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="60.83" y="991.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (1 samples, 0.02%)</title><rect x="567.7" y="5429" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="570.72" y="5439.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeAllocSize(llvm::Type*) const (1 samples, 0.02%)</title><rect x="670.4" y="5477" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="673.43" y="5487.5" ></text>
</g>
<g >
<title>`free_small (1 samples, 0.02%)</title><rect x="691.3" y="5605" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="694.34" y="5615.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="591.8" y="5637" width="0.2" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="594.77" y="5647.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="528.5" y="5477" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="531.52" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1893" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="69.19" y="1903.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="656.3" y="5605" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="659.32" y="5615.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="21.2" y="1749" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="24.24" y="1759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4533" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="136.62" y="4543.5" ></text>
</g>
<g >
<title>`DBG-CLEAR-IRBUILDER-SOURCE-LOCATION^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="326.0" y="5285" width="0.5" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="328.97" y="5295.5" ></text>
</g>
<g >
<title>`llvm::Constant::isNullValue() const (1 samples, 0.02%)</title><rect x="570.9" y="5573" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="573.86" y="5583.5" ></text>
</g>
<g >
<title>`%INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^CLASP-CLEAVIR^FN^^ (4 samples, 0.09%)</title><rect x="308.2" y="5461" width="1.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="311.20" y="5471.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="161.6" y="4997" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="164.58" y="5007.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpAndConstant(llvm::ICmpInst&amp;, llvm:: (1 samples, 0.02%)</title><rect x="656.6" y="5589" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="659.58" y="5599.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="343.7" y="5205" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="346.75" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="2181" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="64.75" y="2191.5" ></text>
</g>
<g >
<title>`INTERPRET-DTREE-PROGRAM^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="69.3" y="2389" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="72.33" y="2399.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (2 samples, 0.04%)</title><rect x="173.1" y="5157" width="0.5" height="15.0" fill="rgb(252,127,127)" rx="2" ry="2" />
<text  x="176.08" y="5167.5" ></text>
</g>
<g >
<title>`llvm::Value::doRAUW(llvm::Value*, bool) (1 samples, 0.02%)</title><rect x="694.0" y="5637" width="0.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="696.96" y="5647.5" ></text>
</g>
<g >
<title>`llvm::getObjectSize(llvm::Value const*, unsigned long long&amp;, ll (1 samples, 0.02%)</title><rect x="565.6" y="5413" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="568.63" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="821" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="65.53" y="831.5" ></text>
</g>
<g >
<title>`getAllocationData(llvm::Value const*, AllocType, llvm::TargetLi (1 samples, 0.02%)</title><rect x="566.9" y="5461" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="569.94" y="5471.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getModule() const (1 samples, 0.02%)</title><rect x="507.6" y="5573" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="510.61" y="5583.5" ></text>
</g>
<g >
<title>`core::Cons_O::member1(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.04%)</title><rect x="110.1" y="5557" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="113.10" y="5567.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="661" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="61.09" y="671.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="384.3" y="5317" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="387.25" y="5327.5" ></text>
</g>
<g >
<title>`llvm::TerminatorInst::getNumSuccessors() const (1 samples, 0.02%)</title><rect x="686.4" y="5605" width="0.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="689.38" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="139.9" y="5093" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="142.89" y="5103.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeAllocSize(llvm::Type*) const (1 samples, 0.02%)</title><rect x="559.9" y="5381" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="562.88" y="5391.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.02%)</title><rect x="260.6" y="5541" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="263.64" y="5551.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (2 samples, 0.04%)</title><rect x="66.5" y="1717" width="0.5" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="69.45" y="1727.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="57.6" y="2085" width="1.8" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="60.57" y="2095.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3109" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="100.29" y="3119.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="734.2" y="5589" width="0.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="737.20" y="5599.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hash_combine&lt;unsigned int, llvm::hash_cod (1 samples, 0.02%)</title><rect x="441.0" y="5589" width="0.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="443.97" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="2469" width="1.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="60.57" y="2479.5" ></text>
</g>
<g >
<title>`CCLASP-EVAL^CLASP-CLEAVIR^FN^^ (3 samples, 0.07%)</title><rect x="734.2" y="5717" width="0.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="737.20" y="5727.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="178.6" y="5621" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="181.57" y="5631.5" ></text>
</g>
<g >
<title>`SUBSTITUTE-INPUT^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="244.4" y="5589" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="247.43" y="5599.5" ></text>
</g>
<g >
<title>`wrapped_Create_llvm__LLVMContext_const_llvm__Twine_llvm__Functi (1 samples, 0.02%)</title><rect x="391.0" y="5397" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="394.05" y="5407.5" ></text>
</g>
<g >
<title>`cc_invoke_byte_code_interpreter (2,981 samples, 66.02%)</title><rect x="10.0" y="6277" width="779.1" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="13.00" y="6287.5" >`cc_invoke_byte_code_interpreter</text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="355.8" y="5173" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="358.77" y="5183.5" ></text>
</g>
<g >
<title>`IRC-STORE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="333.0" y="5093" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="336.03" y="5103.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="60.7" y="2981" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="63.70" y="2991.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4421" width="9.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="17.18" y="4431.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (3 samples, 0.07%)</title><rect x="238.7" y="5349" width="0.8" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="241.68" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="138.6" y="4805" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="141.58" y="4815.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="1973" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="73.63" y="1983.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1941" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="65.53" y="1951.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="1941" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="64.75" y="1951.5" ></text>
</g>
<g >
<title>`PROCESS-AUX^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2773" width="3.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="57.17" y="2783.5" ></text>
</g>
<g >
<title>`REGISTER-ELEMENTARY-INTERVAL^CORE^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1125" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="69.19" y="1135.5" ></text>
</g>
<g >
<title>`llvm::GlobalValue::isDeclaration() const (1 samples, 0.02%)</title><rect x="545.5" y="5413" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="548.51" y="5423.5" ></text>
</g>
<g >
<title>`llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::Arra (1 samples, 0.02%)</title><rect x="492.2" y="5589" width="0.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="495.19" y="5599.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="89.7" y="4485" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="92.71" y="4495.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="69.8" y="3253" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="72.85" y="3263.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="373.5" y="5349" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="376.54" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (5 samples, 0.11%)</title><rect x="68.5" y="2501" width="1.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="71.54" y="2511.5" ></text>
</g>
<g >
<title>`IRC-LOAD^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="334.6" y="5109" width="0.3" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="337.60" y="5119.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="77.2" y="4277" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="80.17" y="4287.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (1 samples, 0.02%)</title><rect x="350.0" y="5221" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="353.02" y="5231.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (2 samples, 0.04%)</title><rect x="454.6" y="5637" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="457.56" y="5647.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="67.2" y="1813" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="70.24" y="1823.5" ></text>
</g>
<g >
<title>`getCalledFunction(llvm::Value const*, bool, bool&amp;) (1 samples, 0.02%)</title><rect x="682.5" y="5605" width="0.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="685.46" y="5615.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.02%)</title><rect x="733.9" y="5733" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="736.94" y="5743.5" ></text>
</g>
<g >
<title>`llvm::hash_value(llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="570.3" y="5461" width="0.3" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="573.34" y="5471.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="63.8" y="1813" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="66.84" y="1823.5" ></text>
</g>
<g >
<title>`void write_unsigned_impl&lt;unsigned int&gt;(llvm::raw_ostream&amp;, unsi (1 samples, 0.02%)</title><rect x="346.4" y="5077" width="0.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="349.36" y="5087.5" ></text>
</g>
<g >
<title>`llvm::Twine::getSingleStringRef() const (1 samples, 0.02%)</title><rect x="353.9" y="5141" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="356.94" y="5151.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (2 samples, 0.04%)</title><rect x="353.7" y="5205" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="356.68" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (13 samples, 0.29%)</title><rect x="54.2" y="2021" width="3.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="57.17" y="2031.5" ></text>
</g>
<g >
<title>`ENSURE-ORIGIN^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="289.4" y="5509" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="292.38" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (61 samples, 1.35%)</title><rect x="128.1" y="5461" width="16.0" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="131.13" y="5471.5" ></text>
</g>
<g >
<title>`GEN-TYPE-CHECK^CC-HIR-TO-MIR^FN^^ (5 samples, 0.11%)</title><rect x="258.3" y="5573" width="1.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="261.28" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (13 samples, 0.29%)</title><rect x="54.2" y="3029" width="3.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="57.17" y="3039.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="53.9" y="3045" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="56.91" y="3055.5" ></text>
</g>
<g >
<title>`GC_clear_marks (1 samples, 0.02%)</title><rect x="33.3" y="4261" width="0.2" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="36.26" y="4271.5" ></text>
</g>
<g >
<title>`NEW-DATUM-VARIABLE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="354.5" y="5269" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="357.46" y="5279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((RETURN-FROM-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4565" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="140.02" y="4575.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="2485" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="65.27" y="2495.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (7 samples, 0.16%)</title><rect x="68.0" y="2805" width="1.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="71.02" y="2815.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (5 samples, 0.11%)</title><rect x="54.2" y="1749" width="1.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="57.17" y="1759.5" ></text>
</g>
<g >
<title>`FUNCTION-TYPE^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="51.8" y="3365" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="54.82" y="3375.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1541" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="24.50" y="1551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (1 samples, 0.02%)</title><rect x="65.9" y="1141" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="68.93" y="1151.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.04%)</title><rect x="367.0" y="5397" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="370.01" y="5407.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2357" width="0.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="65.27" y="2367.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (5 samples, 0.11%)</title><rect x="19.9" y="1957" width="1.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="22.93" y="1967.5" ></text>
</g>
<g >
<title>`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="589.7" y="5509" width="0.2" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="592.68" y="5519.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.02%)</title><rect x="44.5" y="4581" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="47.50" y="4591.5" ></text>
</g>
<g >
<title>`wrapped_core__make_simple_vector_t_size_t______________________ (1 samples, 0.02%)</title><rect x="370.4" y="5301" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="373.40" y="5311.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.02%)</title><rect x="321.3" y="5141" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="324.27" y="5151.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="355.0" y="5237" width="1.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="357.98" y="5247.5" ></text>
</g>
<g >
<title>`PROPER-LIST-P^CLEAVIR-CODE-UTILITIES^FN^^ (1 samples, 0.02%)</title><rect x="37.7" y="4773" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="40.70" y="4783.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (17 samples, 0.38%)</title><rect x="132.6" y="4965" width="4.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="135.57" y="4975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4261" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="135.31" y="4271.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="965" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="62.13" y="975.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="165" width="1.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="57.17" y="175.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="614.0" y="5509" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="616.98" y="5519.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::AggressiveDeadCodeElimination::markLive( (1 samples, 0.02%)</title><rect x="428.9" y="5637" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="431.95" y="5647.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="59.4" y="2933" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="62.40" y="2943.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'TAGBODY) T T T)) (4 samples, 0.09%)</title><rect x="64.1" y="1685" width="1.0" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="67.10" y="1695.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="286.5" y="5429" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="289.51" y="5439.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.02%)</title><rect x="79.8" y="3621" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="82.78" y="3631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="70.9" y="3381" width="0.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="73.89" y="3391.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="23.1" y="3717" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="26.07" y="3727.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="44.2" y="4597" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="47.24" y="4607.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="3765" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="139.23" y="3775.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="175.7" y="5317" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="178.70" y="5327.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="734.2" y="5381" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="737.20" y="5391.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.13%)</title><rect x="24.6" y="4453" width="1.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="27.64" y="4463.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (25 samples, 0.55%)</title><rect x="16.3" y="2981" width="6.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="19.27" y="2991.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1381" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="69.19" y="1391.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="281.5" y="5541" width="0.3" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="284.54" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="40.1" y="4069" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="43.06" y="4079.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.5" y="1989" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="65.53" y="1999.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (6 samples, 0.13%)</title><rect x="230.3" y="5477" width="1.6" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="233.32" y="5487.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1685" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="65.53" y="1695.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="69.8" y="2997" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="72.85" y="3007.5" ></text>
</g>
<g >
<title>`szone_size (1 samples, 0.02%)</title><rect x="724.5" y="5605" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="727.53" y="5615.5" ></text>
</g>
<g >
<title>`FIND-SIMILAR^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="369.1" y="5365" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="372.10" y="5375.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="24.4" y="3797" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="27.37" y="3807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="3829" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="135.31" y="3839.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (56 samples, 1.24%)</title><rect x="81.3" y="4837" width="14.7" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="84.35" y="4847.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="60.4" y="2949" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="63.44" y="2959.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (6 samples, 0.13%)</title><rect x="57.8" y="1557" width="1.6" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="60.83" y="1567.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.6" y="4917" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="100.55" y="4927.5" ></text>
</g>
<g >
<title>`llvm::ReplaceableMetadataImpl::getIfExists(llvm::Metadata&amp;) (1 samples, 0.02%)</title><rect x="480.4" y="5589" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="483.43" y="5599.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (2 samples, 0.04%)</title><rect x="15.5" y="3525" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="18.49" y="3535.5" ></text>
</g>
<g >
<title>`GC_mark_from (1 samples, 0.02%)</title><rect x="203.1" y="5301" width="0.3" height="15.0" fill="rgb(250,122,122)" rx="2" ry="2" />
<text  x="206.14" y="5311.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="686.1" y="5493" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="689.12" y="5503.5" ></text>
</g>
<g >
<title>`llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer,  (2 samples, 0.04%)</title><rect x="58.6" y="917" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="61.61" y="927.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;std::__1::__value_type&lt;llvm::Function const*,  (1 samples, 0.02%)</title><rect x="700.8" y="5541" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="703.75" y="5551.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="549" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="65.01" y="559.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2901" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="65.53" y="2911.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="64.4" y="837" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="67.36" y="847.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (2 samples, 0.04%)</title><rect x="78.7" y="3637" width="0.6" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="81.74" y="3647.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="64.6" y="229" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="67.62" y="239.5" ></text>
</g>
<g >
<title>`wrapped_core__cons_length_Cons_sp (1 samples, 0.02%)</title><rect x="735.2" y="5381" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="738.25" y="5391.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.02%)</title><rect x="307.9" y="5461" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="310.94" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (108 samples, 2.39%)</title><rect x="49.5" y="4901" width="28.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="52.46" y="4911.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4533" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="142.11" y="4543.5" ></text>
</g>
<g >
<title>`PPRINT-FILL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="735.5" y="5621" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="738.51" y="5631.5" ></text>
</g>
<g >
<title>`LITERAL-DATUM-P^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="421.9" y="5733" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="424.89" y="5743.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="380.9" y="5349" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="383.86" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="16.3" y="2133" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="19.27" y="2143.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="437.0" y="5477" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="440.05" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (34 samples, 0.75%)</title><rect x="36.7" y="5029" width="8.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="39.66" y="5039.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (24 samples, 0.53%)</title><rect x="666.5" y="5557" width="6.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="669.51" y="5567.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (5 samples, 0.11%)</title><rect x="506.0" y="5509" width="1.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="509.04" y="5519.5" ></text>
</g>
<g >
<title>`PROCESS-REQUIRED^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="3285" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="73.11" y="3295.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="2725" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="72.85" y="2735.5" ></text>
</g>
<g >
<title>`GC_add_to_fl (1 samples, 0.02%)</title><rect x="205.8" y="5397" width="0.2" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="208.75" y="5407.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1541" width="1.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="58.48" y="1551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4245" width="0.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="141.85" y="4255.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="64.9" y="1237" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="67.88" y="1247.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="60.7" y="3013" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="63.70" y="3023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.11%)</title><rect x="128.7" y="4421" width="1.3" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="131.65" y="4431.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="735.0" y="5685" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="737.99" y="5695.5" ></text>
</g>
<g >
<title>0x10d596094 (25 samples, 0.55%)</title><rect x="16.3" y="3125" width="6.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="19.27" y="3135.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="356.0" y="5173" width="0.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="359.03" y="5183.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="381.6" y="5333" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="384.64" y="5343.5" ></text>
</g>
<g >
<title>`OPTIMIZED-LEXICAL-LOCATION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="139.9" y="5029" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="142.89" y="5039.5" ></text>
</g>
<g >
<title>`llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (2 samples, 0.04%)</title><rect x="58.6" y="901" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="61.61" y="911.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (8 samples, 0.18%)</title><rect x="55.5" y="2005" width="2.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="58.48" y="2015.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (2 samples, 0.04%)</title><rect x="239.5" y="5541" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="242.47" y="5551.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SimplifyCFGOpt::run(llvm::BasicBlock*) (14 samples, 0.31%)</title><rect x="695.0" y="5621" width="3.7" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="698.00" y="5631.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="2773" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="62.40" y="2783.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2949" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="64.75" y="2959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4437" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="135.31" y="4447.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="174.9" y="5317" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="177.91" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="677" width="1.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="57.17" y="687.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="60.4" y="2837" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="63.44" y="2847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (60 samples, 1.33%)</title><rect x="128.1" y="5349" width="15.7" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="131.13" y="5359.5" ></text>
</g>
<g >
<title>`EQL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="110.1" y="5541" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="113.10" y="5551.5" ></text>
</g>
<g >
<title>0x10d596094 (13 samples, 0.29%)</title><rect x="54.2" y="2197" width="3.4" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="57.17" y="2207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="128.7" y="4357" width="1.0" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="131.65" y="4367.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::ImmutableCallSite, llvm::M (3 samples, 0.07%)</title><rect x="560.1" y="5493" width="0.8" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="563.14" y="5503.5" ></text>
</g>
<g >
<title>`GC_mark_some (2 samples, 0.04%)</title><rect x="182.0" y="5381" width="0.5" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="184.97" y="5391.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="280.0" y="5557" width="0.2" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="282.98" y="5567.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (4 samples, 0.09%)</title><rect x="184.8" y="5605" width="1.1" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="187.84" y="5615.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="734.7" y="5525" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="737.73" y="5535.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::MarkBlockExecutable(llvm::Ba (1 samples, 0.02%)</title><rect x="713.6" y="5637" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="716.56" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.16%)</title><rect x="135.2" y="4853" width="1.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="138.19" y="4863.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (55 samples, 1.22%)</title><rect x="81.3" y="4581" width="14.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="84.35" y="4591.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="134.4" y="4645" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="137.40" y="4655.5" ></text>
</g>
<g >
<title>`getFoldedCast(llvm::Instruction::CastOps, llvm::Constant*, llvm (2 samples, 0.04%)</title><rect x="615.3" y="5605" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="618.29" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4357" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="137.14" y="4367.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitCallInst(llvm::CallInst&amp;) (27 samples, 0.60%)</title><rect x="483.0" y="5621" width="7.1" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="486.05" y="5631.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="443.8" y="5589" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="446.84" y="5599.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="67.5" y="1781" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="70.50" y="1791.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="52.6" y="3589" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="55.60" y="3599.5" ></text>
</g>
<g >
<title>`default_zone_malloc (1 samples, 0.02%)</title><rect x="459.0" y="5541" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="462.00" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="17.3" y="1989" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="20.32" y="1999.5" ></text>
</g>
<g >
<title>`CHECK-SPECIAL-FORM-SYNTAX^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T) (1 samples, 0.02%)</title><rect x="73.5" y="4517" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="76.51" y="4527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((MULTIPLE-VALUE-FOREIGN-CALL-AS (1 samples, 0.02%)</title><rect x="129.7" y="4101" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="132.70" y="4111.5" ></text>
</g>
<g >
<title>`IRC-SET-INSERT-POINT-BASIC-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="294.3" y="5413" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="297.35" y="5423.5" ></text>
</g>
<g >
<title>`PROCESS-REQUIRED^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5269" width="1.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="14.31" y="5279.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::BasicBlock*, llvm::SmallPtrSet&lt;llvm::Ba (1 samples, 0.02%)</title><rect x="686.4" y="5621" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="689.38" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (55 samples, 1.22%)</title><rect x="81.3" y="4613" width="14.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="84.35" y="4623.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (2 samples, 0.04%)</title><rect x="733.4" y="5573" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="736.42" y="5583.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (3 samples, 0.07%)</title><rect x="85.8" y="4357" width="0.8" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="88.79" y="4367.5" ></text>
</g>
<g >
<title>`core::cl__zerop(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="203.9" y="5573" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="206.92" y="5583.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::MPPassManager::getOnTheFlyPass(llvm::Pas (2 samples, 0.04%)</title><rect x="590.5" y="5653" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="593.46" y="5663.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="3109" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="62.40" y="3119.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.02%)</title><rect x="71.4" y="3381" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="74.42" y="3391.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="74.6" y="3845" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="77.55" y="3855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4677" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="137.14" y="4687.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (12 samples, 0.27%)</title><rect x="78.0" y="4773" width="3.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="80.95" y="4783.5" ></text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="124.7" y="5589" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="127.73" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.1" y="2069" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="68.15" y="2079.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (1 samples, 0.02%)</title><rect x="97.6" y="4581" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="100.55" y="4591.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="23.6" y="4549" width="1.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="26.59" y="4559.5" ></text>
</g>
<g >
<title>`void llvm::AAResults::addAAResult&lt;llvm::BasicAAResult&gt;(llvm::Ba (1 samples, 0.02%)</title><rect x="600.4" y="5653" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="603.39" y="5663.5" ></text>
</g>
<g >
<title>`llvm::GVN::findLeader(llvm::BasicBlock const*, unsigned int) (2 samples, 0.04%)</title><rect x="579.2" y="5605" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="582.22" y="5615.5" ></text>
</g>
<g >
<title>`llvm::hash_value(llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="477.6" y="5509" width="0.2" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="480.56" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (7 samples, 0.16%)</title><rect x="66.2" y="2245" width="1.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="69.19" y="2255.5" ></text>
</g>
<g >
<title>`ADD-SIDE-EFFECT-CALL^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="335.9" y="5173" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="338.90" y="5183.5" ></text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="121.9" y="5573" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="124.86" y="5583.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getEdgeValue(llvm::Va (2 samples, 0.04%)</title><rect x="447.8" y="5541" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="450.76" y="5551.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2981" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="65.01" y="2991.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T LEXICAL-VARIABLE-INFO))^METHO (1 samples, 0.02%)</title><rect x="13.7" y="4645" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="16.66" y="4655.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="79.8" y="3829" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="82.78" y="3839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="145.1" y="5253" width="1.6" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="148.12" y="5263.5" ></text>
</g>
<g >
<title>`MAKE-TOP-LEVEL-ENTER-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="178.3" y="5621" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="181.31" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="3989" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="131.65" y="3999.5" ></text>
</g>
<g >
<title>0x10d596094 (6 samples, 0.13%)</title><rect x="50.0" y="3381" width="1.6" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="52.99" y="3391.5" ></text>
</g>
<g >
<title>`TREAT-AS-SPECIAL-OPERATOR-P^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="15.5" y="3397" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="18.49" y="3407.5" ></text>
</g>
<g >
<title>`GC_mark_from (2 samples, 0.04%)</title><rect x="132.6" y="4597" width="0.5" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="135.57" y="4607.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (3 samples, 0.07%)</title><rect x="36.7" y="4757" width="0.7" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="39.66" y="4767.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="70.1" y="3413" width="1.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="73.11" y="3423.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2053" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="65.53" y="2063.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="65.1" y="1957" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="68.15" y="1967.5" ></text>
</g>
<g >
<title>`core::cl__class_of(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="196.6" y="5589" width="0.3" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="199.60" y="5599.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="64.4" y="693" width="0.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="67.36" y="703.5" ></text>
</g>
<g >
<title>`core::ext__class_unboundp(gctools::smart_ptr&lt;core::ClassHolder_ (1 samples, 0.02%)</title><rect x="267.2" y="5557" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="270.17" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2149" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="65.01" y="2159.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CastGEPIndices(llvm::Type*, llvm::ArrayR (1 samples, 0.02%)</title><rect x="559.1" y="5397" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="562.10" y="5407.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MachineInstr const (1 samples, 0.02%)</title><rect x="58.6" y="741" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="61.61" y="751.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="448.3" y="5557" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="451.29" y="5567.5" ></text>
</g>
<g >
<title>`GC_mark_local (3 samples, 0.07%)</title><rect x="192.2" y="5365" width="0.7" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="195.16" y="5375.5" ></text>
</g>
<g >
<title>`wrapped_core__reader_list_allow_consing_dot_T_spCharacter_sp (2 samples, 0.04%)</title><rect x="421.4" y="5669" width="0.5" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="424.37" y="5679.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.02%)</title><rect x="123.4" y="5541" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="126.43" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-TAG-CHECK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="295.1" y="5445" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="298.13" y="5455.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="773" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="20.58" y="783.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2245" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="64.75" y="2255.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::retrack(void*, llvm::Metadata&amp;, void*) (2 samples, 0.04%)</title><rect x="676.7" y="5605" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="679.71" y="5615.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInBoundsGEP(llvm::Value*, gctools::sm (3 samples, 0.07%)</title><rect x="361.0" y="5269" width="0.8" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="363.99" y="5279.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="401.0" y="5381" width="0.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="403.98" y="5391.5" ></text>
</g>
<g >
<title>`IRC-STORE^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="391.3" y="5413" width="0.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="394.31" y="5423.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::push_binding(gctools::smart_ptr&lt;core (1 samples, 0.02%)</title><rect x="135.2" y="3973" width="0.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="138.19" y="3983.5" ></text>
</g>
<g >
<title>`llvm::PopulateLoopsDFS&lt;llvm::BasicBlock, llvm::Loop&gt;::traverse( (4 samples, 0.09%)</title><rect x="685.6" y="5637" width="1.0" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="688.59" y="5647.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.3" y="3269" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="100.29" y="3279.5" ></text>
</g>
<g >
<title>`CHECK-SPECIAL-FORM-SYNTAX^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="50.8" y="2773" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="53.77" y="2783.5" ></text>
</g>
<g >
<title>`wrapped_APInt_O__makeAPIntWidth_core__Integer_spuintbool (1 samples, 0.02%)</title><rect x="295.1" y="5397" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="298.13" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((MULTIPLE-VALUE-SETQ-AST T))^ME (1 samples, 0.02%)</title><rect x="128.9" y="3781" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="131.91" y="3791.5" ></text>
</g>
<g >
<title>`llvm::CallInst::onlyReadsMemory() const (1 samples, 0.02%)</title><rect x="681.7" y="5605" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="684.67" y="5615.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoWrapperPass::runOnFunction(llvm::Function&amp;) (9 samples, 0.20%)</title><rect x="685.1" y="5669" width="2.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="688.07" y="5679.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="455.1" y="5621" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="458.08" y="5631.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.04%)</title><rect x="173.1" y="5221" width="0.5" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="176.08" y="5231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (42 samples, 0.93%)</title><rect x="128.4" y="5029" width="11.0" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="131.39" y="5039.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4309" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="100.29" y="4319.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="19.7" y="1973" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="22.67" y="1983.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::push_binding(gctools::smart_ptr&lt;core (1 samples, 0.02%)</title><rect x="128.9" y="3685" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="131.91" y="3695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="155.0" y="5093" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="158.05" y="5103.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="376.4" y="5189" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="379.41" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (5 samples, 0.11%)</title><rect x="54.2" y="341" width="1.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="57.17" y="351.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="64.1" y="1509" width="1.0" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="67.10" y="1519.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="63.1" y="2549" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="66.05" y="2559.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.02%)</title><rect x="449.9" y="5541" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="452.85" y="5551.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (3 samples, 0.07%)</title><rect x="42.4" y="4309" width="0.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="45.41" y="4319.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1253" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="65.01" y="1263.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="115.1" y="5573" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="118.06" y="5583.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (6 samples, 0.13%)</title><rect x="57.8" y="1429" width="1.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="60.83" y="1439.5" ></text>
</g>
<g >
<title>`llvm::GlobalDCEPass::MarkLive(llvm::GlobalValue&amp;, llvm::SmallVe (1 samples, 0.02%)</title><rect x="587.8" y="5669" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="590.85" y="5679.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="353.2" y="5173" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="356.15" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4309" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="138.71" y="4319.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (2 samples, 0.04%)</title><rect x="68.8" y="2357" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="71.80" y="2367.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="3269" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="62.40" y="3279.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="195.3" y="5605" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="198.30" y="5615.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.3" y="4485" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="100.29" y="4495.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (197 samples, 4.36%)</title><rect x="314.0" y="5413" width="51.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="316.95" y="5423.5" >`DO-D..</text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="88.9" y="4373" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="91.93" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (3 samples, 0.07%)</title><rect x="172.8" y="5317" width="0.8" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="175.82" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.18%)</title><rect x="137.3" y="4965" width="2.1" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="140.28" y="4975.5" ></text>
</g>
<g >
<title>`ENSURE-ORIGIN^CLASP-CLEAVIR^FN^^ (4 samples, 0.09%)</title><rect x="112.7" y="5637" width="1.1" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="115.71" y="5647.5" ></text>
</g>
<g >
<title>`intersect(llvm::ValueLatticeElement const&amp;, llvm::ValueLatticeE (1 samples, 0.02%)</title><rect x="447.5" y="5557" width="0.3" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="450.50" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="74.6" y="3765" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="77.55" y="3775.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2645" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="73.63" y="2655.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2005" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="65.53" y="2015.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.02%)</title><rect x="19.1" y="1877" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="22.15" y="1887.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (3 samples, 0.07%)</title><rect x="256.5" y="5573" width="0.7" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="259.45" y="5583.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="343.2" y="5189" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="346.22" y="5199.5" ></text>
</g>
<g >
<title>`llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (1 samples, 0.02%)</title><rect x="57.8" y="965" width="0.3" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="60.83" y="975.5" ></text>
</g>
<g >
<title>`TRANSMIT-DYNAMIC-LOCATION^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (4 samples, 0.09%)</title><rect x="241.6" y="5573" width="1.0" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="244.56" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-FUNCTION^CLEAVIR-GENERATE-AST^((GLOBAL-FUNCTION-INFO T  (1 samples, 0.02%)</title><rect x="39.8" y="4085" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="42.79" y="4095.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="131.0" y="4597" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="134.01" y="4607.5" ></text>
</g>
<g >
<title>`FINALIZE-UNLESS-FORWARD^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.2" y="5621" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="736.16" y="5631.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="265.6" y="5541" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="268.60" y="5551.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setup(unsigned int, gctools::smart_ptr&lt;core: (1 samples, 0.02%)</title><rect x="115.8" y="5557" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="118.85" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4309" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="132.70" y="4319.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="1029" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="61.09" y="1039.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="474.7" y="5541" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="477.68" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="2485" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="65.01" y="2495.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (3 samples, 0.07%)</title><rect x="71.4" y="4069" width="0.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="74.42" y="4079.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="52.9" y="3317" width="1.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="55.86" y="3327.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CVPLatticeVal::operator!=((anonymous nam (2 samples, 0.04%)</title><rect x="706.0" y="5669" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="708.98" y="5679.5" ></text>
</g>
<g >
<title>`std::__1::enable_if&lt;is_hashable_data&lt;unsigned int const&gt;::value (1 samples, 0.02%)</title><rect x="625.7" y="5509" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="628.74" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-FUNCTION^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3893" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="100.29" y="3903.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="68.5" y="2517" width="1.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="71.54" y="2527.5" ></text>
</g>
<g >
<title>`wrapped_Create_llvm__LLVMContext_const_llvm__Twine_llvm__Functi (1 samples, 0.02%)</title><rect x="294.1" y="5413" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="297.09" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4837" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="136.62" y="4847.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (1 samples, 0.02%)</title><rect x="64.6" y="309" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="67.62" y="319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (9 samples, 0.20%)</title><rect x="152.4" y="5253" width="2.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="155.44" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="12.4" y="4309" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="15.35" y="4319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="135.2" y="4677" width="0.8" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="138.19" y="4687.5" ></text>
</g>
<g >
<title>`COMPUTE-DYNENV-DESTINATIONS^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="345.8" y="5221" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="348.84" y="5231.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="24.6" y="4261" width="1.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="27.64" y="4271.5" ></text>
</g>
<g >
<title>`llvm::GlobalDCEPass::ComputeDependencies(llvm::Value*, llvm::Sm (1 samples, 0.02%)</title><rect x="588.1" y="5653" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="591.11" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (2 samples, 0.04%)</title><rect x="67.5" y="1957" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="70.50" y="1967.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.02%)</title><rect x="136.2" y="3685" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="139.23" y="3695.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="356.6" y="5269" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="359.55" y="5279.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (12 samples, 0.27%)</title><rect x="74.0" y="4213" width="3.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="77.03" y="4223.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="351.1" y="5221" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="354.06" y="5231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4117" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="132.96" y="4127.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::getModRefBehavior(llvm::ImmutableCallSit (1 samples, 0.02%)</title><rect x="560.7" y="5477" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="563.67" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.4" y="4165" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="132.44" y="4175.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="351.1" y="5077" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="354.06" y="5087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4629" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="140.02" y="4639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.7" y="4389" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="137.66" y="4399.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (71 samples, 1.57%)</title><rect x="52.9" y="3605" width="18.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="55.86" y="3615.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::getHash() const (1 samples, 0.02%)</title><rect x="467.4" y="5525" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="470.36" y="5535.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (2 samples, 0.04%)</title><rect x="500.3" y="5605" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="503.29" y="5615.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="331.7" y="5045" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="334.72" y="5055.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (4 samples, 0.09%)</title><rect x="299.3" y="5301" width="1.1" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="302.32" y="5311.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5317" width="0.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="736.42" y="5327.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (2 samples, 0.04%)</title><rect x="443.1" y="5589" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="446.06" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (8 samples, 0.18%)</title><rect x="160.0" y="5093" width="2.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="163.02" y="5103.5" ></text>
</g>
<g >
<title>`void boost::io::detail::distribute&lt;char, std::__1::char_traits&lt; (1 samples, 0.02%)</title><rect x="368.6" y="5333" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="371.57" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (40 samples, 0.89%)</title><rect x="14.2" y="4837" width="10.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="17.18" y="4847.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="1733" width="1.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="59.52" y="1743.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (25 samples, 0.55%)</title><rect x="329.1" y="5253" width="6.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="332.11" y="5263.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="66.2" y="1621" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="69.19" y="1631.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::create(unsigned int, gctools::smart_ptr&lt;co (1 samples, 0.02%)</title><rect x="273.2" y="5525" width="0.2" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="276.18" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3861" width="0.2" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="132.96" y="3871.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="346.4" y="5237" width="0.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="349.36" y="5247.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (2 samples, 0.04%)</title><rect x="208.6" y="5349" width="0.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="211.63" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="4069" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="131.91" y="4079.5" ></text>
</g>
<g >
<title>`core::core__clock_gettime_nanoseconds() (1 samples, 0.02%)</title><rect x="198.2" y="5589" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="201.17" y="5599.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="190.1" y="5557" width="0.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="193.07" y="5567.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2629" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="65.27" y="2639.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.02%)</title><rect x="189.8" y="5493" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="192.81" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (6 samples, 0.13%)</title><rect x="12.4" y="4997" width="1.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="15.35" y="5007.5" ></text>
</g>
<g >
<title>`llvm::wouldInstructionBeTriviallyDead(llvm::Instruction*, llvm: (5 samples, 0.11%)</title><rect x="678.8" y="5621" width="1.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="681.80" y="5631.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="19.9" y="2021" width="1.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="22.93" y="2031.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (2 samples, 0.04%)</title><rect x="23.1" y="3941" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="26.07" y="3951.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::LookupBucketFor(llvm::StringRef) (1 samples, 0.02%)</title><rect x="375.4" y="5317" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="378.37" y="5327.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4853" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="736.42" y="4863.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.20%)</title><rect x="78.2" y="4293" width="2.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="81.21" y="4303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4149" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="137.14" y="4159.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (18 samples, 0.40%)</title><rect x="17.3" y="2453" width="4.7" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="20.32" y="2463.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T CLASP))^METHOD^^ (4 samples, 0.09%)</title><rect x="14.2" y="3141" width="1.0" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="17.18" y="3151.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.4" y="2853" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="56.38" y="2863.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="432.3" y="5557" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="435.34" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="127.1" y="5541" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="130.09" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="60.7" y="2997" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="63.70" y="3007.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.0" y="2629" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="63.96" y="2639.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="68.0" y="2949" width="1.8" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="71.02" y="2959.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2389" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="64.75" y="2399.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (1 samples, 0.02%)</title><rect x="238.4" y="5429" width="0.3" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="241.42" y="5439.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="24.4" y="4005" width="0.2" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="27.37" y="4015.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="2565" width="1.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="60.57" y="2575.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="331.2" y="5045" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="334.20" y="5055.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="1541" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="65.01" y="1551.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (2 samples, 0.04%)</title><rect x="15.5" y="3493" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="18.49" y="3503.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="12.9" y="4341" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="15.87" y="4351.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="23.9" y="3685" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="26.85" y="3695.5" ></text>
</g>
<g >
<title>`boost::basic_format&lt;char, std::__1::char_traits&lt;char&gt;, std::__1 (1 samples, 0.02%)</title><rect x="311.9" y="5381" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="314.86" y="5391.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="559.6" y="5349" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="562.62" y="5359.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1605" width="1.1" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="59.52" y="1615.5" ></text>
</g>
<g >
<title>`simplifyICmpWithConstant(llvm::CmpInst::Predicate, llvm::Value* (4 samples, 0.09%)</title><rect x="654.2" y="5589" width="1.1" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="657.23" y="5599.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="332.2" y="5045" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="335.25" y="5055.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (2 samples, 0.04%)</title><rect x="626.3" y="5541" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="629.27" y="5551.5" ></text>
</g>
<g >
<title>`cc_enclose (4 samples, 0.09%)</title><rect x="735.8" y="5397" width="1.0" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="738.77" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4645" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="140.28" y="4655.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="16.3" y="2245" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="19.27" y="2255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4485" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="132.96" y="4495.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldConstant(llvm::Constant const*, llvm::DataLay (4 samples, 0.09%)</title><rect x="608.5" y="5637" width="1.0" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="611.49" y="5647.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="279.5" y="5541" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="282.45" y="5551.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="77.2" y="4101" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="80.17" y="4111.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="149" width="1.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="59.52" y="159.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_combine_recursive_helper::combine(u (1 samples, 0.02%)</title><rect x="478.6" y="5525" width="0.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="481.60" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (83 samples, 1.84%)</title><rect x="152.2" y="5429" width="21.7" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="155.17" y="5439.5" >`..</text>
</g>
<g >
<title>`core::SimpleCharacterString_O::element_type() const (1 samples, 0.02%)</title><rect x="44.8" y="4757" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="47.76" y="4767.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="241.8" y="5525" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="244.82" y="5535.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::LookupBucketFor(llvm::StringRef) (1 samples, 0.02%)</title><rect x="384.3" y="5253" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="387.25" y="5263.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_combine_recursive_helper::combine(u (1 samples, 0.02%)</title><rect x="627.6" y="5509" width="0.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="630.57" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (10 samples, 0.22%)</title><rect x="140.4" y="5109" width="2.6" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="143.41" y="5119.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="468.4" y="5573" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="471.41" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.4" y="4021" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="132.44" y="4031.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="97.3" y="5045" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="100.29" y="5055.5" ></text>
</g>
<g >
<title>`FIXNUMP^CORE^FN^^ (1 samples, 0.02%)</title><rect x="187.7" y="5525" width="0.3" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="190.72" y="5535.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="320.2" y="5205" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="323.22" y="5215.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.02%)</title><rect x="231.9" y="5557" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="234.89" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="734.2" y="5573" width="0.8" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="737.20" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.20%)</title><rect x="160.0" y="5109" width="2.4" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="163.02" y="5119.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="70.6" y="2709" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="73.63" y="2719.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::alias(llvm::MemoryLocation const&amp;, llvm: (1 samples, 0.02%)</title><rect x="567.5" y="5397" width="0.2" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="570.46" y="5407.5" ></text>
</g>
<g >
<title>`IRC-CREATE-CALL^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="410.7" y="5397" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="413.65" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="66.2" y="2229" width="1.8" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="69.19" y="2239.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="14.7" y="2613" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="17.70" y="2623.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="3269" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="64.22" y="3279.5" ></text>
</g>
<g >
<title>0x10d596094 (26 samples, 0.58%)</title><rect x="52.9" y="3381" width="6.8" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="55.86" y="3391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2997" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="73.63" y="3007.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (2 samples, 0.04%)</title><rect x="605.4" y="5589" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="608.36" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4405" width="0.2" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="132.96" y="4415.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (1 samples, 0.02%)</title><rect x="570.1" y="5541" width="0.2" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="573.08" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="144.3" y="5317" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="147.33" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4117" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="137.93" y="4127.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (2 samples, 0.04%)</title><rect x="364.1" y="5237" width="0.6" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="367.13" y="5247.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="241.3" y="5541" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="244.30" y="5551.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2853" width="0.2" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="65.27" y="2863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4133" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="132.70" y="4143.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (3 samples, 0.07%)</title><rect x="61.7" y="3301" width="0.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="64.75" y="3311.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="55.5" y="1509" width="1.0" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="58.48" y="1519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SYMBOL-VALUE-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="145.1" y="5125" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="148.12" y="5135.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::retrack(void*, llvm::Metadata&amp;, void*) (1 samples, 0.02%)</title><rect x="333.0" y="4965" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="336.03" y="4975.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="651.6" y="5365" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="654.62" y="5375.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (3 samples, 0.07%)</title><rect x="205.2" y="5557" width="0.8" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="208.23" y="5567.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.3" y="2309" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="65.27" y="2319.5" ></text>
</g>
<g >
<title>`LLVM-LINK^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="720.9" y="5797" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="723.87" y="5807.5" ></text>
</g>
<g >
<title>`llvm::isFreeCall(llvm::Value const*, llvm::TargetLibraryInfo co (1 samples, 0.02%)</title><rect x="682.7" y="5621" width="0.3" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="685.72" y="5631.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="126.8" y="5333" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="129.82" y="5343.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="461.9" y="5573" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="464.88" y="5583.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="3221" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="62.40" y="3231.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="52.6" y="3621" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="55.60" y="3631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (7 samples, 0.16%)</title><rect x="57.6" y="2373" width="1.8" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="60.57" y="2383.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="453" width="1.0" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="58.48" y="463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="177.3" y="5525" width="0.7" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="180.26" y="5535.5" ></text>
</g>
<g >
<title>`wrapped_FunctionType_O__get_core__T_spcore__T_spcore__T_sp (1 samples, 0.02%)</title><rect x="342.7" y="5237" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="345.70" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4277" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="138.19" y="4287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="137.0" y="4469" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="140.02" y="4479.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="58.3" y="853" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="61.35" y="863.5" ></text>
</g>
<g >
<title>`DOUBLE-FLOAT-DATUM-P^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="422.4" y="5717" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="425.41" y="5727.5" ></text>
</g>
<g >
<title>`llvm::ConstantRange::makeAllowedICmpRegion(llvm::CmpInst::Predi (1 samples, 0.02%)</title><rect x="695.8" y="5589" width="0.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="698.79" y="5599.5" ></text>
</g>
<g >
<title>`llvm::CallInst::doesNotReadMemory() const (2 samples, 0.04%)</title><rect x="543.2" y="5525" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="546.16" y="5535.5" ></text>
</g>
<g >
<title>`core::interpreter_lookup_function_or_error(gctools::smart_ptr&lt;c (1 samples, 0.02%)</title><rect x="110.4" y="5541" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="113.36" y="5551.5" ></text>
</g>
<g >
<title>`llvm::getOrEnforceKnownAlignment(llvm::Value*, unsigned int, ll (1 samples, 0.02%)</title><rect x="678.3" y="5621" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="681.27" y="5631.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.02%)</title><rect x="68.5" y="2341" width="0.3" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="71.54" y="2351.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="366.5" y="5333" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="369.48" y="5343.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getABITypeAlignment(llvm::Type*) const (1 samples, 0.02%)</title><rect x="511.3" y="5477" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="514.27" y="5487.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="597" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="65.01" y="607.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (499 samples, 11.05%)</title><rect x="287.6" y="5525" width="130.4" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="290.55" y="5535.5" >`LAYOUT-BASIC-BL..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET*) T T T))^ME (1 samples, 0.02%)</title><rect x="62.3" y="1461" width="0.2" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="65.27" y="1471.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4037" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="100.29" y="4047.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5013" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="180.26" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="137.5" y="4869" width="1.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="140.54" y="4879.5" ></text>
</g>
<g >
<title>`GC_mark_thread_local_free_lists (1 samples, 0.02%)</title><rect x="788.3" y="5605" width="0.3" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="791.30" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (25 samples, 0.55%)</title><rect x="16.3" y="2853" width="6.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="19.27" y="2863.5" ></text>
</g>
<g >
<title>`llvm::Type::getPrimitiveSizeInBits() const (1 samples, 0.02%)</title><rect x="721.7" y="5653" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="724.66" y="5663.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceSet(unsigned long, gctools::smart_ptr (1 samples, 0.02%)</title><rect x="159.0" y="5301" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="161.97" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (91 samples, 2.02%)</title><rect x="12.4" y="5189" width="23.7" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="15.35" y="5199.5" >`..</text>
</g>
<g >
<title>`llvm::DataLayout::getPrefTypeAlignment(llvm::Type*) const (1 samples, 0.02%)</title><rect x="631.5" y="5621" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="634.49" y="5631.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="24.9" y="3413" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="27.90" y="3423.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="399.2" y="5365" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="402.15" y="5375.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="63.1" y="3045" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="66.05" y="3055.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solveBlockValueImpl(l (3 samples, 0.07%)</title><rect x="436.5" y="5573" width="0.8" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="439.52" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="3701" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="100.29" y="3711.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llv (1 samples, 0.02%)</title><rect x="532.2" y="5653" width="0.2" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="535.18" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="66.2" y="2261" width="1.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="69.19" y="2271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (47 samples, 1.04%)</title><rect x="159.5" y="5301" width="12.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="162.49" y="5311.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="30.6" y="4261" width="0.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="33.65" y="4271.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (20 samples, 0.44%)</title><rect x="81.3" y="4549" width="5.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="84.35" y="4559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4725" width="0.3" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="137.14" y="4735.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="340.9" y="5077" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="343.87" y="5087.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (2 samples, 0.04%)</title><rect x="24.6" y="3973" width="0.6" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="27.64" y="3983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="177.8" y="5269" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="180.79" y="5279.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="54.2" y="1589" width="1.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="57.17" y="1599.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="157.4" y="5365" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="160.40" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="137.8" y="4741" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="140.80" y="4751.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="62.0" y="2565" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="65.01" y="2575.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="1509" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="68.93" y="1519.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (16 samples, 0.35%)</title><rect x="739.7" y="5637" width="4.2" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="742.69" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (13 samples, 0.29%)</title><rect x="54.2" y="2213" width="3.4" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="57.17" y="2223.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (4 samples, 0.09%)</title><rect x="23.6" y="4293" width="1.0" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="26.59" y="4303.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.04%)</title><rect x="266.1" y="5509" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="269.12" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4453" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="137.40" y="4463.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="3013" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="73.11" y="3023.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'FUNCTION) T T T) (1 samples, 0.02%)</title><rect x="97.3" y="5029" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="100.29" y="5039.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2389" width="1.8" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="60.57" y="2399.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="23.1" y="3813" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="26.07" y="3823.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="96.5" y="4885" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="99.51" y="4895.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="68.0" y="2901" width="1.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="71.02" y="2911.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="4837" width="1.1" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="14.31" y="4847.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="15.2" y="3413" width="0.3" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="18.23" y="3423.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="16.3" y="2517" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="19.27" y="2527.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="59.9" y="3157" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="62.92" y="3167.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4421" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="100.29" y="4431.5" ></text>
</g>
<g >
<title>`wrapped_core__enum_logical_or_SymbolToEnumConverter_spList_sp (1 samples, 0.02%)</title><rect x="418.5" y="5557" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="421.49" y="5567.5" ></text>
</g>
<g >
<title>`VALID-KEYWORDS-FROM-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="12.1" y="4517" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="15.09" y="4527.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (43 samples, 0.95%)</title><rect x="128.4" y="5173" width="11.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="131.39" y="5183.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="50.0" y="3557" width="1.6" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="52.99" y="3567.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasGEP(llvm::GEPOperator const*, unsigne (2 samples, 0.04%)</title><rect x="566.2" y="5429" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="569.16" y="5439.5" ></text>
</g>
<g >
<title>`CLASS-SLOTS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="91.5" y="4453" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="94.54" y="4463.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="70.9" y="3301" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="73.89" y="3311.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2645" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="65.53" y="2655.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="62.8" y="1573" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="65.79" y="1583.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="547.9" y="5317" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="550.86" y="5327.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="320.7" y="5205" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="323.75" y="5215.5" ></text>
</g>
<g >
<title>`llvmo::Function_O::__class() const (1 samples, 0.02%)</title><rect x="410.1" y="5397" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="413.13" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (7 samples, 0.16%)</title><rect x="57.6" y="2869" width="1.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="60.57" y="2879.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="732.9" y="5573" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="735.90" y="5583.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="60.4" y="2629" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="63.44" y="2639.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="74.0" y="4373" width="3.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="77.03" y="4383.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="167.9" y="4965" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="170.86" y="4975.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="605.1" y="5589" width="0.3" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="608.10" y="5599.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="337.7" y="5173" width="0.3" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="340.73" y="5183.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="136.8" y="3909" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="139.76" y="3919.5" ></text>
</g>
<g >
<title>`cc_makeCell (3 samples, 0.07%)</title><rect x="416.9" y="5509" width="0.8" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="419.92" y="5519.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (25 samples, 0.55%)</title><rect x="329.1" y="5221" width="6.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="332.11" y="5231.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="67.2" y="1605" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="70.24" y="1615.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="64.4" y="517" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="67.36" y="527.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2965" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="64.75" y="2975.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="11.3" y="4933" width="1.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="14.31" y="4943.5" ></text>
</g>
<g >
<title>`llvm::Value::destroyValueName() (1 samples, 0.02%)</title><rect x="719.3" y="5573" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="722.31" y="5583.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="12.4" y="4277" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="15.35" y="4287.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (8 samples, 0.18%)</title><rect x="330.4" y="5125" width="2.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="333.42" y="5135.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="259.3" y="5509" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="262.33" y="5519.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="345.6" y="5173" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="348.57" y="5183.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.4" y="2133" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="68.41" y="2143.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="63.1" y="3141" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="66.05" y="3151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3733" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="132.96" y="3743.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="64.1" y="1717" width="1.0" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="67.10" y="1727.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="331.5" y="5029" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="334.46" y="5039.5" ></text>
</g>
<g >
<title>`%INTRINSIC-CALL^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="354.7" y="5285" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="357.72" y="5295.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::~ScalarEvolution() (2 samples, 0.04%)</title><rect x="691.1" y="5621" width="0.5" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="694.08" y="5631.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (1 samples, 0.02%)</title><rect x="376.7" y="5397" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="379.68" y="5407.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (2 samples, 0.04%)</title><rect x="493.8" y="5509" width="0.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="496.76" y="5519.5" ></text>
</g>
<g >
<title>`__gmp_default_reallocate (1 samples, 0.02%)</title><rect x="183.5" y="5589" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="186.54" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (12 samples, 0.27%)</title><rect x="78.0" y="4869" width="3.1" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="80.95" y="4879.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="1957" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="65.01" y="1967.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1461" width="0.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="65.79" y="1471.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="64.6" y="389" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="67.62" y="399.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="2453" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="65.79" y="2463.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1429" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="24.50" y="1439.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="294.3" y="5381" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="297.35" y="5391.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="148.0" y="5413" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="150.99" y="5423.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="528.3" y="5461" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="531.26" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="69.8" y="2901" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="72.85" y="2911.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="258.8" y="5445" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="261.81" y="5455.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SimpleValue::canHandle(llvm::Instruction (1 samples, 0.02%)</title><rect x="439.1" y="5637" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="442.14" y="5647.5" ></text>
</g>
<g >
<title>`ADD-BLOCK^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="78.2" y="4165" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="81.21" y="4175.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="614.0" y="5461" width="0.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="616.98" y="5471.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ENTER-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="149.3" y="5045" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="152.30" y="5055.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="54.2" y="1493" width="1.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="57.17" y="1503.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (11 samples, 0.24%)</title><rect x="49.7" y="3893" width="2.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="52.73" y="3903.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.02%)</title><rect x="399.2" y="5333" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="402.15" y="5343.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="55.5" y="789" width="1.0" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="58.48" y="799.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1685" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="24.50" y="1695.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((HEADERQ-INSTRUCTIO (4 samples, 0.09%)</title><rect x="330.7" y="5109" width="1.0" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="333.68" y="5119.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="737.3" y="5637" width="0.3" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="740.34" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (6 samples, 0.13%)</title><rect x="24.6" y="4581" width="1.6" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="27.64" y="4591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4117" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="136.36" y="4127.5" ></text>
</g>
<g >
<title>`COMPUTE-DYNENV-DESTINATIONS^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="398.6" y="5397" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="401.63" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4645" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="137.14" y="4655.5" ></text>
</g>
<g >
<title>`core::cl__stringp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="48.7" y="5093" width="0.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="51.68" y="5103.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2437" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="64.75" y="2447.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="205.5" y="5509" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="208.49" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="58.3" y="581" width="0.3" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="61.35" y="591.5" ></text>
</g>
<g >
<title>`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^ (3 samples, 0.07%)</title><rect x="734.2" y="5685" width="0.8" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="737.20" y="5695.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::BinaryOp_match&lt;llvm::PatternMatch::Bin (1 samples, 0.02%)</title><rect x="491.7" y="5589" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="494.67" y="5599.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (4 samples, 0.09%)</title><rect x="276.3" y="5557" width="1.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="279.32" y="5567.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1749" width="1.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="59.52" y="1759.5" ></text>
</g>
<g >
<title>`PROCESS-OPTIONALS^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2821" width="3.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="57.17" y="2831.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="12.4" y="4709" width="1.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="15.35" y="4719.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PointerIntPair&lt;llv (4 samples, 0.09%)</title><rect x="708.6" y="5653" width="1.0" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="711.59" y="5663.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="423.5" y="5541" width="0.2" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="426.46" y="5551.5" ></text>
</g>
<g >
<title>`wrapped_cl__get_internal_run_time_ (1 samples, 0.02%)</title><rect x="183.5" y="5621" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="186.54" y="5631.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleBaseString_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="96.5" y="4773" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="99.51" y="4783.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="149" width="1.0" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="58.48" y="159.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="70.1" y="2821" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="73.11" y="2831.5" ></text>
</g>
<g >
<title>`IRC-SWITCH^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="397.8" y="5381" width="0.6" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="400.84" y="5391.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="197" width="1.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="57.17" y="207.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getUniquePredecessor() const (1 samples, 0.02%)</title><rect x="580.8" y="5621" width="0.3" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="583.79" y="5631.5" ></text>
</g>
<g >
<title>`core::cl__error(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (5 samples, 0.11%)</title><rect x="735.8" y="5621" width="1.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="738.77" y="5631.5" ></text>
</g>
<g >
<title>0x10d596094 (36 samples, 0.80%)</title><rect x="14.2" y="4533" width="9.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="17.18" y="4543.5" ></text>
</g>
<g >
<title>`std::__1::function&lt;llvm::TargetTransformInfo (llvm::Function co (1 samples, 0.02%)</title><rect x="429.7" y="5637" width="0.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="432.73" y="5647.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((INITIALIZE-CLOSURE (3 samples, 0.07%)</title><rect x="399.7" y="5477" width="0.8" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="402.67" y="5487.5" ></text>
</g>
<g >
<title>`NUMBERP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="197.9" y="5605" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="200.91" y="5615.5" ></text>
</g>
<g >
<title>0x10d596094 (83 samples, 1.84%)</title><rect x="49.7" y="4021" width="21.7" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="52.73" y="4031.5" >0..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4757" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="139.76" y="4767.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="531.1" y="5557" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="534.13" y="5567.5" ></text>
</g>
<g >
<title>`TYPE-SPECIFIER-AST^CLEAVIR-AST^FN^^ (4 samples, 0.09%)</title><rect x="114.8" y="5605" width="1.0" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="117.80" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="51.0" y="2757" width="0.6" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="54.03" y="2767.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1045" width="1.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="59.52" y="1055.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="2101" width="1.8" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="60.57" y="2111.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="53.1" y="3253" width="1.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="56.12" y="3263.5" ></text>
</g>
<g >
<title>`llvm::MDNode::classof(llvm::Metadata const*) (1 samples, 0.02%)</title><rect x="333.0" y="4949" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="336.03" y="4959.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="52.6" y="3733" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="55.60" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="167.3" y="5029" width="0.6" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="170.33" y="5039.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (1 samples, 0.02%)</title><rect x="328.3" y="5269" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="331.33" y="5279.5" ></text>
</g>
<g >
<title>`void llvm::SmallVectorImpl&lt;llvm::BasicBlock*&gt;::append&lt;std::__1: (2 samples, 0.04%)</title><rect x="606.4" y="5589" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="609.40" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="17.6" y="1685" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="20.58" y="1695.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (6 samples, 0.13%)</title><rect x="12.4" y="4789" width="1.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="15.35" y="4799.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="60.2" y="2965" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="63.18" y="2975.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (3 samples, 0.07%)</title><rect x="34.6" y="4565" width="0.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="37.57" y="4575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4373" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="139.23" y="4383.5" ></text>
</g>
<g >
<title>`core::cl__subseq(gctools::smart_ptr&lt;core::T_O&gt;, unsigned long,  (1 samples, 0.02%)</title><rect x="721.1" y="5573" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="724.14" y="5583.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="456.4" y="5621" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="459.39" y="5631.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (4 samples, 0.09%)</title><rect x="442.5" y="5605" width="1.1" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="445.54" y="5615.5" ></text>
</g>
<g >
<title>`llvm::TerminatorInst::getNumSuccessors() const (1 samples, 0.02%)</title><rect x="562.2" y="5461" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="565.23" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (6 samples, 0.13%)</title><rect x="24.6" y="4325" width="1.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="27.64" y="4335.5" ></text>
</g>
<g >
<title>`FUNCTION-INLINE^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="76.6" y="3797" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="79.64" y="3807.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="62.0" y="373" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="65.01" y="383.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="489.8" y="5589" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="492.84" y="5599.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="176.0" y="5365" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="178.96" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4517" width="0.2" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="136.36" y="4527.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="78.7" y="3717" width="0.6" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="81.74" y="3727.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4837" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="100.29" y="4847.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (2 samples, 0.04%)</title><rect x="363.1" y="5301" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="366.09" y="5311.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="682.7" y="5605" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="685.72" y="5615.5" ></text>
</g>
<g >
<title>`szone_size (1 samples, 0.02%)</title><rect x="603.3" y="5541" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="606.27" y="5551.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="459.8" y="5557" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="462.79" y="5567.5" ></text>
</g>
<g >
<title>`GEN-TYPE-CHECK^CC-HIR-TO-MIR^FN^^ (1 samples, 0.02%)</title><rect x="259.1" y="5557" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="262.07" y="5567.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::Valu (1 samples, 0.02%)</title><rect x="522.8" y="5509" width="0.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="525.77" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T LEXICAL-VARIABLE-INFO T T (1 samples, 0.02%)</title><rect x="23.1" y="3669" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="26.07" y="3679.5" ></text>
</g>
<g >
<title>`llvm::SROA::runImpl(llvm::Function&amp;, llvm::DominatorTree&amp;, llvm (2 samples, 0.04%)</title><rect x="581.1" y="5653" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="584.05" y="5663.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getBlockValue(llvm::V (1 samples, 0.02%)</title><rect x="447.2" y="5557" width="0.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="450.24" y="5567.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="67.2" y="1301" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="70.24" y="1311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="144.6" y="5301" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="147.60" y="5311.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="365.4" y="5285" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="368.44" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (71 samples, 1.57%)</title><rect x="52.9" y="3797" width="18.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="55.86" y="3807.5" ></text>
</g>
<g >
<title>`FORMAT^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="26.5" y="4645" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="29.47" y="4655.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::Value const*, unsigned int&gt;* l (1 samples, 0.02%)</title><rect x="724.5" y="5621" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="727.53" y="5631.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (8 samples, 0.18%)</title><rect x="510.2" y="5525" width="2.1" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="513.23" y="5535.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.02%)</title><rect x="331.7" y="4997" width="0.3" height="15.0" fill="rgb(254,128,128)" rx="2" ry="2" />
<text  x="334.72" y="5007.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="981" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="20.58" y="991.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.02%)</title><rect x="53.4" y="2565" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="56.38" y="2575.5" ></text>
</g>
<g >
<title>`SET-DIFFERENCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="194.8" y="5541" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="197.78" y="5551.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_combine_recursive_helper::combine(u (1 samples, 0.02%)</title><rect x="578.2" y="5509" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="581.18" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="127.6" y="5461" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="130.61" y="5471.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="23.9" y="3621" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="26.85" y="3631.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="68.5" y="2421" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="71.54" y="2431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4501" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="137.40" y="4511.5" ></text>
</g>
<g >
<title>`GC_gcollect (188 samples, 4.16%)</title><rect x="739.7" y="5701" width="49.1" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="742.69" y="5711.5" >`GC_..</text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (1 samples, 0.02%)</title><rect x="441.0" y="5557" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="443.97" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((RETURN-FROM-AST T))^METHOD^^ (33 samples, 0.73%)</title><rect x="162.4" y="5125" width="8.6" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="165.37" y="5135.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1173" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="68.93" y="1183.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="66.2" y="1077" width="0.3" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="69.19" y="1087.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (2 samples, 0.04%)</title><rect x="595.7" y="5541" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="598.69" y="5551.5" ></text>
</g>
<g >
<title>`POSITION^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="735.5" y="5461" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="738.51" y="5471.5" ></text>
</g>
<g >
<title>`OPTIMIZE-STACK-ENCLOSE^CLASP-CLEAVIR^FN^^ (5 samples, 0.11%)</title><rect x="228.5" y="5621" width="1.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="231.49" y="5631.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="677" width="1.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="59.52" y="687.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (6 samples, 0.13%)</title><rect x="12.4" y="4933" width="1.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="15.35" y="4943.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::getModRefBehavior(llvm::Function const*) (1 samples, 0.02%)</title><rect x="542.9" y="5509" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="545.89" y="5519.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (6 samples, 0.13%)</title><rect x="57.8" y="1365" width="1.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="60.83" y="1375.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="235.8" y="5461" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="238.81" y="5471.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::BasicBlock*, std::__1::unique_ptr&lt;llvm::Do (2 samples, 0.04%)</title><rect x="533.7" y="5621" width="0.6" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="536.75" y="5631.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (4 samples, 0.09%)</title><rect x="335.6" y="5221" width="1.1" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="338.64" y="5231.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="595.7" y="5397" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="598.69" y="5407.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="143.3" y="5141" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="146.29" y="5151.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="3077" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="72.85" y="3087.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="568.2" y="5493" width="0.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="571.25" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="60.2" y="2853" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="63.18" y="2863.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="437.0" y="5493" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="440.05" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="126.8" y="5413" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="129.82" y="5423.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisPass(void const*) (1 samples, 0.02%)</title><rect x="458.2" y="5621" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="461.22" y="5631.5" ></text>
</g>
<g >
<title>`core::string_get_std_string(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="289.6" y="5493" width="0.3" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="292.65" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="97.3" y="4437" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="100.29" y="4447.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (1 samples, 0.02%)</title><rect x="24.9" y="3397" width="0.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="27.90" y="3407.5" ></text>
</g>
<g >
<title>`void llvm::concat_iterator&lt;llvm::GlobalValue, llvm::ilist_itera (1 samples, 0.02%)</title><rect x="729.2" y="5653" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="732.24" y="5663.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (2 samples, 0.04%)</title><rect x="68.8" y="2245" width="0.5" height="15.0" fill="rgb(204,55,55)" rx="2" ry="2" />
<text  x="71.80" y="2255.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T CLASP-GLOBAL-ENVIRONMENT))^METHO (6 samples, 0.13%)</title><rect x="57.8" y="1253" width="1.6" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="60.83" y="1263.5" ></text>
</g>
<g >
<title>`llvm::Value::destroyValueName() (1 samples, 0.02%)</title><rect x="445.7" y="5589" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="448.67" y="5599.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::Value_O&gt; gctools::GCObjectAppropriate (1 samples, 0.02%)</title><rect x="292.3" y="5349" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="295.26" y="5359.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CONTEXT-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="145.4" y="5045" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="148.38" y="5055.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="563.0" y="5477" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="566.02" y="5487.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (10 samples, 0.22%)</title><rect x="49.7" y="3765" width="2.6" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="52.73" y="3775.5" ></text>
</g>
<g >
<title>`llvm::Value::setValueName(llvm::StringMapEntry&lt;llvm::Value*&gt;*) (1 samples, 0.02%)</title><rect x="361.3" y="5205" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="364.26" y="5215.5" ></text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (1 samples, 0.02%)</title><rect x="261.4" y="5589" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="264.42" y="5599.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="63.8" y="2005" width="1.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="66.84" y="2015.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.07%)</title><rect x="168.6" y="5013" width="0.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="171.64" y="5023.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="337.7" y="5221" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="340.73" y="5231.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="572.4" y="5445" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="575.43" y="5455.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldGetElementPtr(llvm::Type*, llvm::Constant*, b (2 samples, 0.04%)</title><rect x="611.6" y="5557" width="0.6" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="614.63" y="5567.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.09%)</title><rect x="20.2" y="1909" width="1.0" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="23.19" y="1919.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="395.8" y="5301" width="0.2" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="398.75" y="5311.5" ></text>
</g>
<g >
<title>`llvm::SSAUpdater::GetValueAtEndOfBlockInternal(llvm::BasicBlock (1 samples, 0.02%)</title><rect x="562.2" y="5525" width="0.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="565.23" y="5535.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4565" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="736.42" y="4575.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="95.7" y="4693" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="98.72" y="4703.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2661" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="66.05" y="2671.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (3 samples, 0.07%)</title><rect x="11.6" y="4597" width="0.8" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="14.57" y="4607.5" ></text>
</g>
<g >
<title>`core::parse_ltvc_toplevel_funcall(gctools::GCRootsInModule*, gc (214 samples, 4.74%)</title><rect x="732.9" y="5765" width="55.9" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="735.90" y="5775.5" >`core..</text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="17.6" y="1317" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="20.58" y="1327.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="169.4" y="4917" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="172.42" y="4927.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.04%)</title><rect x="145.4" y="5125" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="148.38" y="5135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.8" y="4613" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="134.79" y="4623.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (1 samples, 0.02%)</title><rect x="721.9" y="5589" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="724.92" y="5599.5" ></text>
</g>
<g >
<title>`GC_mark_some (2 samples, 0.04%)</title><rect x="173.1" y="5109" width="0.5" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="176.08" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.1" y="4709" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="141.06" y="4719.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (13 samples, 0.29%)</title><rect x="54.2" y="2981" width="3.4" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="57.17" y="2991.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (3 samples, 0.07%)</title><rect x="190.1" y="5493" width="0.8" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="193.07" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1669" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="20.58" y="1679.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="285.5" y="5477" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="288.46" y="5487.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (3 samples, 0.07%)</title><rect x="612.7" y="5541" width="0.8" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="615.68" y="5551.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="19.7" y="1749" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="22.67" y="1759.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (1 samples, 0.02%)</title><rect x="62.5" y="1973" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="65.53" y="1983.5" ></text>
</g>
<g >
<title>`MAKE-LET-INIT-ASTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1877" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="65.01" y="1887.5" ></text>
</g>
<g >
<title>`GET-DILOCATION^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="288.9" y="5461" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="291.86" y="5471.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="527.5" y="5365" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="530.48" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="4661" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="100.29" y="4671.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="76.9" y="3973" width="0.3" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="79.91" y="3983.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (4 samples, 0.09%)</title><rect x="24.6" y="4085" width="1.1" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="27.64" y="4095.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (3 samples, 0.07%)</title><rect x="64.1" y="1333" width="0.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="67.10" y="1343.5" ></text>
</g>
<g >
<title>`wrapped_DILocation_O__make_llvm__LLVMContext___________________ (12 samples, 0.27%)</title><rect x="298.3" y="5413" width="3.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="301.27" y="5423.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (233 samples, 5.16%)</title><rect x="36.4" y="5365" width="60.9" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="39.40" y="5375.5" >`FUNCA..</text>
</g>
<g >
<title>`computeUnsignedMinMaxValuesFromKnownBits(llvm::KnownBits const&amp; (1 samples, 0.02%)</title><rect x="496.1" y="5605" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="499.11" y="5615.5" ></text>
</g>
<g >
<title>`MAKE-EQ-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="144.9" y="5301" width="0.2" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="147.86" y="5311.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="82.1" y="4485" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="85.13" y="4495.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="149" width="1.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="57.17" y="159.5" ></text>
</g>
<g >
<title>`CONVERT-LOCAL-FUNCTION^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="3365" width="0.5" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="73.11" y="3375.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(l (63 samples, 1.40%)</title><rect x="545.2" y="5525" width="16.5" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="548.25" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4293" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="135.31" y="4303.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::BasicBlock(llvm::LLVMContext&amp;, llvm::Twine co (1 samples, 0.02%)</title><rect x="365.4" y="5381" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="368.44" y="5391.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="22.3" y="2757" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="25.28" y="2767.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="309.8" y="5413" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="312.77" y="5423.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1365" width="0.3" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="65.79" y="1375.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (4 samples, 0.09%)</title><rect x="29.9" y="4309" width="1.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="32.86" y="4319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (75 samples, 1.66%)</title><rect x="127.6" y="5525" width="19.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="130.61" y="5535.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="177.0" y="5429" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="180.00" y="5439.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (7 samples, 0.16%)</title><rect x="358.6" y="5317" width="1.9" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="361.64" y="5327.5" ></text>
</g>
<g >
<title>`sanitizeFunctionName(llvm::StringRef) (1 samples, 0.02%)</title><rect x="638.3" y="5525" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="641.29" y="5535.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (1 samples, 0.02%)</title><rect x="66.7" y="1429" width="0.3" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="69.71" y="1439.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (5 samples, 0.11%)</title><rect x="302.7" y="5397" width="1.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="305.71" y="5407.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.04%)</title><rect x="68.8" y="2277" width="0.5" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="71.80" y="2287.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="24.4" y="3813" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="27.37" y="3823.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (7 samples, 0.16%)</title><rect x="57.6" y="2501" width="1.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="60.57" y="2511.5" ></text>
</g>
<g >
<title>`MAKE-LET-INIT-ASTS^CLEAVIR-GENERATE-AST^FN^^ (11 samples, 0.24%)</title><rect x="49.7" y="3909" width="2.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="52.73" y="3919.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="4565" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="100.55" y="4575.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;std::__1::pair&lt;llvm (1 samples, 0.02%)</title><rect x="565.9" y="5381" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="568.89" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (7 samples, 0.16%)</title><rect x="57.6" y="2357" width="1.8" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="60.57" y="2367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4469" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="138.71" y="4479.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPreferredAlignment(llvm::GlobalVariable co (1 samples, 0.02%)</title><rect x="670.4" y="5509" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="673.43" y="5519.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5093" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="736.42" y="5103.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1509" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="65.79" y="1519.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.02%)</title><rect x="592.3" y="5589" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="595.29" y="5599.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (8 samples, 0.18%)</title><rect x="118.2" y="5605" width="2.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="121.20" y="5615.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="43.7" y="4357" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="46.71" y="4367.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (2 samples, 0.04%)</title><rect x="21.2" y="2053" width="0.6" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="24.24" y="2063.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="57.8" y="1109" width="0.3" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="60.83" y="1119.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::Valu (1 samples, 0.02%)</title><rect x="717.0" y="5637" width="0.2" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="719.95" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="177.3" y="5445" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="180.26" y="5455.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="493.2" y="5429" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="496.24" y="5439.5" ></text>
</g>
<g >
<title>`llvm::IRBuilderBase::SetInstDebugLocation(llvm::Instruction*) c (1 samples, 0.02%)</title><rect x="337.7" y="5141" width="0.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="340.73" y="5151.5" ></text>
</g>
<g >
<title>`SLOT-DEFINITION-LOCATION^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="102.3" y="5605" width="0.2" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="105.26" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.8" y="4693" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="140.80" y="4703.5" ></text>
</g>
<g >
<title>`SAFE-CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2485" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="71.28" y="2495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.8" y="5461" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="180.79" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-FUNCTION^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="16.3" y="1925" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="19.27" y="1935.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2693" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="63.18" y="2703.5" ></text>
</g>
<g >
<title>0x10d596094 (88 samples, 1.95%)</title><rect x="49.5" y="4821" width="23.0" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="52.46" y="4831.5" >0..</text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (2 samples, 0.04%)</title><rect x="12.4" y="4373" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="15.35" y="4383.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="1861" width="0.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="68.93" y="1871.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="602.0" y="5557" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="604.96" y="5567.5" ></text>
</g>
<g >
<title>`MAKE-CONDITION^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="735.8" y="5573" width="1.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="738.77" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2581" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="63.18" y="2591.5" ></text>
</g>
<g >
<title>`llvm::ModuleSummaryIndex::getOrInsertValuePtr(unsigned long lon (2 samples, 0.04%)</title><rect x="731.9" y="5701" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="734.85" y="5711.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="14.2" y="3461" width="1.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="17.18" y="3471.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.04%)</title><rect x="239.5" y="5573" width="0.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="242.47" y="5583.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::ResolvedUndefsIn(llvm::Funct (2 samples, 0.04%)</title><rect x="581.8" y="5653" width="0.6" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="584.84" y="5663.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="410.4" y="5413" width="0.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="413.39" y="5423.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.02%)</title><rect x="53.4" y="2549" width="0.2" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="56.38" y="2559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="3989" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="138.19" y="3999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4213" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="136.36" y="4223.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (2 samples, 0.04%)</title><rect x="173.1" y="5141" width="0.5" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="176.08" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.0" y="2469" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="65.01" y="2479.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="23.6" y="4341" width="1.0" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="26.59" y="4351.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::T_O&gt;::notnilp() const (1 samples, 0.02%)</title><rect x="344.5" y="5189" width="0.3" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="347.53" y="5199.5" ></text>
</g>
<g >
<title>`GENERATE-RETHROW-LANDING-PAD^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="396.3" y="5381" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="399.28" y="5391.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="66.2" y="1957" width="0.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="69.19" y="1967.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="244.4" y="5557" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="247.43" y="5567.5" ></text>
</g>
<g >
<title>`llvmo::ConstantInt_O::create(llvm::ConstantInt*) (1 samples, 0.02%)</title><rect x="403.1" y="5413" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="406.07" y="5423.5" ></text>
</g>
<g >
<title>0x10d596094 (9 samples, 0.20%)</title><rect x="50.0" y="3637" width="2.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="52.99" y="3647.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::getHash() const (1 samples, 0.02%)</title><rect x="549.7" y="5301" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="552.69" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="136.2" y="4709" width="0.6" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="139.23" y="4719.5" ></text>
</g>
<g >
<title>`llvmo::FunctionType_O::get(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="342.7" y="5221" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="345.70" y="5231.5" ></text>
</g>
<g >
<title>`llvm::DILocation::getImpl(llvm::LLVMContext&amp;, unsigned int, uns (2 samples, 0.04%)</title><rect x="316.0" y="5237" width="0.6" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="319.04" y="5247.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="158.7" y="5381" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="161.71" y="5391.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="145.6" y="5061" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="148.64" y="5071.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (3 samples, 0.07%)</title><rect x="269.8" y="5589" width="0.8" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="272.78" y="5599.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_combine_recursive_helper::combine(u (1 samples, 0.02%)</title><rect x="548.4" y="5269" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="551.38" y="5279.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="14.2" y="3669" width="1.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="17.18" y="3679.5" ></text>
</g>
<g >
<title>`DECLARE-FUNCTION-IN-MODULE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="734.2" y="5461" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="737.20" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1029" width="1.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="58.48" y="1039.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::getHash() const (1 samples, 0.02%)</title><rect x="612.7" y="5525" width="0.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="615.68" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.11%)</title><rect x="128.7" y="4469" width="1.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="131.65" y="4479.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.04%)</title><rect x="190.9" y="5525" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="193.85" y="5535.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="1893" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="64.75" y="1903.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="229.0" y="5589" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="232.01" y="5599.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="118.5" y="5557" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="121.46" y="5567.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.02%)</title><rect x="733.9" y="5653" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="736.94" y="5663.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getBitCast(llvm::Constant*, llvm::Type*, bo (1 samples, 0.02%)</title><rect x="443.6" y="5605" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="446.58" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="143.6" y="5189" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="146.55" y="5199.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="332.5" y="5045" width="0.3" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="335.51" y="5055.5" ></text>
</g>
<g >
<title>`IRC-EXTRACT-VALUE^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="344.3" y="5221" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="347.27" y="5231.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.6" y="4789" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="100.55" y="4799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.7" y="4629" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="133.74" y="4639.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.02%)</title><rect x="527.5" y="5413" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="530.48" y="5423.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2533" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="71.28" y="2543.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1557" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="65.79" y="1567.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="16.3" y="2213" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="19.27" y="2223.5" ></text>
</g>
<g >
<title>`IRC-BIT-CAST^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="312.9" y="5461" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="315.91" y="5471.5" ></text>
</g>
<g >
<title>`ELIMINATE-CONSTANT-INPUT^CLASP-CLEAVIR^FN^^ (6 samples, 0.13%)</title><rect x="207.6" y="5589" width="1.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="210.58" y="5599.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (5 samples, 0.11%)</title><rect x="200.8" y="5541" width="1.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="203.79" y="5551.5" ></text>
</g>
<g >
<title>`POSITION-IF-NOT^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2485" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="17.70" y="2495.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="154.0" y="5221" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="157.00" y="5231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4229" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="139.76" y="4239.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (7 samples, 0.16%)</title><rect x="31.4" y="4373" width="1.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="34.43" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4469" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="136.62" y="4479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (190 samples, 4.21%)</title><rect x="127.6" y="5589" width="49.7" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="130.61" y="5599.5" >`COMP..</text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="223.5" y="5525" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="226.52" y="5535.5" ></text>
</g>
<g >
<title>`GC_mark_some (2 samples, 0.04%)</title><rect x="208.6" y="5365" width="0.5" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="211.63" y="5375.5" ></text>
</g>
<g >
<title>`core::Pathname_O::sxhash_equal(core::HashGenerator&amp;, void*) con (2 samples, 0.04%)</title><rect x="370.9" y="5285" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="373.93" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (10 samples, 0.22%)</title><rect x="65.4" y="2981" width="2.6" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="68.41" y="2991.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2645" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="63.18" y="2655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (2 samples, 0.04%)</title><rect x="132.6" y="4869" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="135.57" y="4879.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (7 samples, 0.16%)</title><rect x="57.6" y="2245" width="1.8" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="60.57" y="2255.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="365.4" y="5365" width="0.3" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="368.44" y="5375.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::pushToWorkList((anonymous na (1 samples, 0.02%)</title><rect x="583.7" y="5621" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="586.67" y="5631.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.02%)</title><rect x="585.0" y="5573" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="587.97" y="5583.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="249.1" y="5557" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="252.14" y="5567.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.04%)</title><rect x="146.2" y="5157" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="149.16" y="5167.5" ></text>
</g>
<g >
<title>`DATUM-KIND^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="207.6" y="5509" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="210.58" y="5519.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="40.3" y="4101" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="43.32" y="4111.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (5 samples, 0.11%)</title><rect x="19.9" y="1989" width="1.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="22.93" y="1999.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (3 samples, 0.07%)</title><rect x="192.2" y="5349" width="0.7" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="195.16" y="5359.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="69.8" y="3237" width="0.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="72.85" y="3247.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::BasicBlock*, std::__1::allocator&lt;ll (1 samples, 0.02%)</title><rect x="462.1" y="5637" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="465.14" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4037" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="132.96" y="4047.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (2 samples, 0.04%)</title><rect x="318.1" y="5269" width="0.6" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="321.13" y="5279.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="57.8" y="1045" width="0.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="60.83" y="1055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4869" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="140.28" y="4879.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="78.5" y="4085" width="2.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="81.47" y="4095.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'TAGBODY) T T T)) (1 samples, 0.02%)</title><rect x="17.6" y="1109" width="0.2" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="20.58" y="1119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4789" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="140.02" y="4799.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (5 samples, 0.11%)</title><rect x="118.7" y="5557" width="1.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="121.72" y="5567.5" ></text>
</g>
<g >
<title>`ALLOCA-I8^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="311.6" y="5461" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="314.60" y="5471.5" ></text>
</g>
<g >
<title>`FAST-SUBTYPEP^CORE^FN^^ (1 samples, 0.02%)</title><rect x="23.1" y="3541" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="26.07" y="3551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (21 samples, 0.47%)</title><rect x="38.7" y="4581" width="5.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="41.75" y="4591.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (2 samples, 0.04%)</title><rect x="353.7" y="5173" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="356.68" y="5183.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (1 samples, 0.02%)</title><rect x="109.3" y="5589" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="112.31" y="5599.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="68.5" y="2357" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="71.54" y="2367.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="23.9" y="3749" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="26.85" y="3759.5" ></text>
</g>
<g >
<title>`llvm::raw_ostream::write(char const*, unsigned long) (1 samples, 0.02%)</title><rect x="346.4" y="5061" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="349.36" y="5071.5" ></text>
</g>
<g >
<title>`GC_remove_protection (1 samples, 0.02%)</title><rect x="330.2" y="5077" width="0.2" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="333.16" y="5087.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (12 samples, 0.27%)</title><rect x="604.1" y="5653" width="3.1" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="607.05" y="5663.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="96.2" y="4757" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="99.25" y="4767.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleBaseString_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="243.9" y="5525" width="0.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="246.91" y="5535.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::reference_raw_(core::Symbol_O*, gcto (1 samples, 0.02%)</title><rect x="358.4" y="5301" width="0.2" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="361.38" y="5311.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="27.5" y="4309" width="0.3" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="30.51" y="4319.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::PointerIntPair&lt;llvm::Value const*,  (1 samples, 0.02%)</title><rect x="568.2" y="5509" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="571.25" y="5519.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (3 samples, 0.07%)</title><rect x="527.7" y="5541" width="0.8" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="530.74" y="5551.5" ></text>
</g>
<g >
<title>`sprintf (1 samples, 0.02%)</title><rect x="240.5" y="5525" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="243.51" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="4005" width="0.5" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="131.91" y="4015.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.3" y="4101" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="100.29" y="4111.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="137.0" y="4437" width="0.3" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="140.02" y="4447.5" ></text>
</g>
<g >
<title>`llvm::AliasSetTracker::mergeAliasSetsForPointer(llvm::Value con (1 samples, 0.02%)</title><rect x="523.0" y="5557" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="526.03" y="5567.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="82.9" y="4453" width="0.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="85.92" y="4463.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::CmpClass_match&lt;llvm::PatternMatch::spe (1 samples, 0.02%)</title><rect x="487.7" y="5573" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="490.75" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="64.4" y="1189" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="67.36" y="1199.5" ></text>
</g>
<g >
<title>`llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::Arra (1 samples, 0.02%)</title><rect x="476.5" y="5541" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="479.51" y="5551.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.4" y="421" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="67.36" y="431.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (2 samples, 0.04%)</title><rect x="16.8" y="2421" width="0.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="19.80" y="2431.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="17.3" y="2053" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="20.32" y="2063.5" ></text>
</g>
<g >
<title>`DBG-CLEAR-IRBUILDER-SOURCE-LOCATION^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="297.5" y="5461" width="0.8" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="300.49" y="5471.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="2261" width="0.3" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="65.01" y="2271.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2997" width="1.8" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="60.57" y="3007.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="292.3" y="5397" width="0.2" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="295.26" y="5407.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="97.8" y="5557" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="100.81" y="5567.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="205.8" y="5445" width="0.2" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="208.75" y="5455.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2533" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="64.22" y="2543.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="63.8" y="2293" width="1.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="66.84" y="2303.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (3 samples, 0.07%)</title><rect x="11.6" y="4565" width="0.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="14.57" y="4575.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (2 samples, 0.04%)</title><rect x="566.2" y="5413" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="569.16" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="1509" width="1.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="57.17" y="1519.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::getModRefBehavior(llvm::ImmutableCallSite) (1 samples, 0.02%)</title><rect x="526.7" y="5541" width="0.3" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="529.69" y="5551.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4165" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="100.29" y="4175.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4309" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="736.42" y="4319.5" ></text>
</g>
<g >
<title>`WRITE-ARGUMENTS-BYTE-CODE^LITERAL^FN^^ (12 samples, 0.27%)</title><rect x="422.4" y="5749" width="3.1" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="425.41" y="5759.5" ></text>
</g>
<g >
<title>`PROCESS-LAMBDA-LIST^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="14.4" y="3109" width="0.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="17.44" y="3119.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="663.9" y="5477" width="0.3" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="666.90" y="5487.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="53.4" y="2677" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="56.38" y="2687.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="175.4" y="5285" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="178.44" y="5295.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.02%)</title><rect x="523.3" y="5621" width="0.3" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="526.29" y="5631.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="2869" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="72.85" y="2879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4789" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="137.14" y="4799.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="24.6" y="3797" width="0.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="27.64" y="3807.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="557.8" y="5301" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="560.79" y="5311.5" ></text>
</g>
<g >
<title>`llvm::AttributeSet::getDereferenceableBytes() const (1 samples, 0.02%)</title><rect x="643.3" y="5541" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="646.25" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="128.7" y="4533" width="1.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="131.65" y="4543.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.04%)</title><rect x="278.1" y="5509" width="0.6" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="281.15" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2933" width="3.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="57.17" y="2943.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="321.8" y="5205" width="0.3" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="324.79" y="5215.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (35 samples, 0.78%)</title><rect x="103.0" y="5621" width="9.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="106.04" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((LEXICAL-VARIABLE-INFO T T T (1 samples, 0.02%)</title><rect x="70.6" y="1797" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="73.63" y="1807.5" ></text>
</g>
<g >
<title>`simplifyFunctionCFG(llvm::Function&amp;, llvm::TargetTransformInfo  (11 samples, 0.24%)</title><rect x="584.7" y="5669" width="2.9" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="587.71" y="5679.5" ></text>
</g>
<g >
<title>`operator delete(void*) (1 samples, 0.02%)</title><rect x="581.6" y="5669" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="584.57" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (26 samples, 0.58%)</title><rect x="16.3" y="3733" width="6.8" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="19.27" y="3743.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="580.3" y="5573" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="583.27" y="5583.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="38.0" y="4757" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="40.96" y="4767.5" ></text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="187.7" y="5557" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="190.72" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (36 samples, 0.80%)</title><rect x="14.2" y="4453" width="9.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="17.18" y="4463.5" ></text>
</g>
<g >
<title>`GC_mark_local (3 samples, 0.07%)</title><rect x="299.6" y="5221" width="0.8" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="302.58" y="5231.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="2821" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="73.63" y="2831.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="241.0" y="5525" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="244.03" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="128.4" y="4789" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="131.39" y="4799.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="355.0" y="5173" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="357.98" y="5183.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ModuleBitcodeWriter::writeMetadataRecord (2 samples, 0.04%)</title><rect x="723.2" y="5653" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="726.23" y="5663.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="4805" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="100.55" y="4815.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (2 samples, 0.04%)</title><rect x="311.9" y="5445" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="314.86" y="5455.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="156.1" y="5189" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="159.10" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'CLEAVIR-PRIMOP:M (2 samples, 0.04%)</title><rect x="67.5" y="1541" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="70.50" y="1551.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="72.7" y="4805" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="75.72" y="4815.5" ></text>
</g>
<g >
<title>`wrapped_get_llvm__Type_ (1 samples, 0.02%)</title><rect x="343.0" y="5221" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="345.96" y="5231.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (25 samples, 0.55%)</title><rect x="16.3" y="3141" width="6.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="19.27" y="3151.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatticeElement, llvm::D (1 samples, 0.02%)</title><rect x="448.0" y="5509" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="451.02" y="5519.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="76.9" y="3925" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="79.91" y="3935.5" ></text>
</g>
<g >
<title>`ImageLoader::weakBind(ImageLoader::LinkContext const&amp;) (1 samples, 0.02%)</title><rect x="788.8" y="5765" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="791.83" y="5775.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="53.4" y="2869" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="56.38" y="2879.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (2 samples, 0.04%)</title><rect x="278.7" y="5493" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="281.67" y="5503.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5013" width="1.1" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="14.31" y="5023.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="501" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="61.35" y="511.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.09%)</title><rect x="130.7" y="4677" width="1.1" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="133.74" y="4687.5" ></text>
</g>
<g >
<title>`%FORMATTER-GUTS^CORE^FN^^ (2 samples, 0.04%)</title><rect x="26.5" y="4629" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="29.47" y="4639.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="59.9" y="3109" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="62.92" y="3119.5" ></text>
</g>
<g >
<title>`CONVERT-GLOBAL-FUNCTION^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="96.2" y="4837" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="99.25" y="4847.5" ></text>
</g>
<g >
<title>`IRC-MAKE-TMV^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="322.8" y="5253" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="325.84" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'TAGBODY) T T T)) (1 samples, 0.02%)</title><rect x="70.6" y="2325" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="73.63" y="2335.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="64.1" y="1253" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="67.10" y="1263.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="191.9" y="5525" width="1.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="194.90" y="5535.5" ></text>
</g>
<g >
<title>`GC_mark_some (1 samples, 0.02%)</title><rect x="171.0" y="4981" width="0.3" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="173.99" y="4991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4677" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="139.23" y="4687.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::SwitchInst_O&gt; gctools::GCObjectApprop (1 samples, 0.02%)</title><rect x="397.8" y="5301" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="400.84" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.2" y="3701" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="132.18" y="3711.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="63.6" y="2629" width="1.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="66.58" y="2639.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="139.6" y="5109" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="142.63" y="5119.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="739.4" y="5637" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="742.43" y="5647.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="429.7" y="5573" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="432.73" y="5583.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="331.2" y="5061" width="0.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="334.20" y="5071.5" ></text>
</g>
<g >
<title>`llvm::Value::getContext() const (1 samples, 0.02%)</title><rect x="573.0" y="5509" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="575.95" y="5519.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="2677" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="62.40" y="2687.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="285.7" y="5429" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="288.73" y="5439.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="193.7" y="5525" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="196.73" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="2501" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="65.79" y="2511.5" ></text>
</g>
<g >
<title>`ADD-BLOCK^CLEAVIR-ENVIRONMENT^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="78.2" y="4149" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="81.21" y="4159.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="53.1" y="2901" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="56.12" y="2911.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="96.2" y="4981" width="0.6" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="99.25" y="4991.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt;::smart_ptr() (1 samples, 0.02%)</title><rect x="396.0" y="5333" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="399.02" y="5343.5" ></text>
</g>
<g >
<title>`llvm::Value::setValueName(llvm::StringMapEntry&lt;llvm::Value*&gt;*) (1 samples, 0.02%)</title><rect x="314.5" y="5221" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="317.47" y="5231.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="1109" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="67.88" y="1119.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldConstant(llvm::Constant const*, llvm::DataLay (3 samples, 0.07%)</title><rect x="463.4" y="5637" width="0.8" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="466.44" y="5647.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.02%)</title><rect x="574.5" y="5557" width="0.3" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="577.52" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="17.6" y="1941" width="0.2" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="20.58" y="1951.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="191.9" y="5509" width="1.0" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="194.90" y="5519.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="386.1" y="5413" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="389.08" y="5423.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1621" width="0.3" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="68.93" y="1631.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (6 samples, 0.13%)</title><rect x="230.3" y="5541" width="1.6" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="233.32" y="5551.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="80.6" y="4693" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="83.56" y="4703.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (10 samples, 0.22%)</title><rect x="74.6" y="4069" width="2.6" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="77.55" y="4079.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="441.8" y="5573" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="444.75" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4757" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="137.40" y="4767.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (2 samples, 0.04%)</title><rect x="72.7" y="4725" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="75.72" y="4735.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1365" width="1.1" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="59.52" y="1375.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (2 samples, 0.04%)</title><rect x="43.7" y="4437" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="46.71" y="4447.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="64.6" y="85" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="67.62" y="95.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="397.6" y="5333" width="0.2" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="400.58" y="5343.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="255.9" y="5573" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="258.93" y="5583.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.02%)</title><rect x="331.5" y="5013" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="334.46" y="5023.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="39.8" y="4181" width="1.0" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="42.79" y="4191.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (9 samples, 0.20%)</title><rect x="148.5" y="5141" width="2.4" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="151.52" y="5151.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="255.1" y="5541" width="0.3" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="258.15" y="5551.5" ></text>
</g>
<g >
<title>`llvm::Constant::getNullValue(llvm::Type*) (1 samples, 0.02%)</title><rect x="615.3" y="5589" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="618.29" y="5599.5" ></text>
</g>
<g >
<title>`GC_mark_local (2 samples, 0.04%)</title><rect x="374.6" y="5221" width="0.5" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="377.58" y="5231.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="1973" width="1.8" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="60.57" y="1983.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="61.2" y="2901" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="64.22" y="2911.5" ></text>
</g>
<g >
<title>`llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (1 samples, 0.02%)</title><rect x="732.9" y="5429" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="735.90" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4645" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="136.62" y="4655.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (1 samples, 0.02%)</title><rect x="97.6" y="5125" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="100.55" y="5135.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="21.2" y="1765" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="24.24" y="1775.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="401.0" y="5397" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="403.98" y="5407.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;unsigned int, llvm::GVN: (1 samples, 0.02%)</title><rect x="543.9" y="5557" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="546.94" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="97.3" y="4181" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="100.29" y="4191.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (1 samples, 0.02%)</title><rect x="403.6" y="5301" width="0.3" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="406.59" y="5311.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="715.6" y="5653" width="0.3" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="718.65" y="5663.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (3 samples, 0.07%)</title><rect x="494.3" y="5573" width="0.8" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="497.28" y="5583.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, void (llvmo::Module_O::*)()&gt;::method_e (12 samples, 0.27%)</title><rect x="717.7" y="5733" width="3.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="720.74" y="5743.5" ></text>
</g>
<g >
<title>`IRC-EXTRACT-VALUE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="333.6" y="5045" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="336.55" y="5055.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="67.2" y="1525" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="70.24" y="1535.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="12.9" y="4197" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="15.87" y="4207.5" ></text>
</g>
<g >
<title>`llvm::iterator_range&lt;llvm::df_iterator&lt;llvm::BasicBlock*, llvm: (1 samples, 0.02%)</title><rect x="597.5" y="5637" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="600.52" y="5647.5" ></text>
</g>
<g >
<title>`DEFCLASS^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="735.0" y="5669" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="737.99" y="5679.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="136.2" y="3621" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="139.23" y="3631.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.04%)</title><rect x="259.6" y="5589" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="262.59" y="5599.5" ></text>
</g>
<g >
<title>`core::SourcePosInfo_O::make(std::__1::basic_string&lt;char, std::_ (1 samples, 0.02%)</title><rect x="356.3" y="5301" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="359.29" y="5311.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1957" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="65.27" y="1967.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="64.4" y="1141" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="67.36" y="1151.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.02%)</title><rect x="123.4" y="5493" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="126.43" y="5503.5" ></text>
</g>
<g >
<title>`llvm::MergeBlockIntoPredecessor(llvm::BasicBlock*, llvm::Domina (1 samples, 0.02%)</title><rect x="697.6" y="5605" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="700.61" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="3653" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="100.29" y="3663.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="2853" width="2.6" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="68.41" y="2863.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::track(void*, llvm::Metadata&amp;, llvm::Poi (1 samples, 0.02%)</title><rect x="359.9" y="5157" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="362.95" y="5167.5" ></text>
</g>
<g >
<title>`getAllocationDataForFunction(llvm::Function const*, AllocType,  (1 samples, 0.02%)</title><rect x="594.9" y="5573" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="597.90" y="5583.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.02%)</title><rect x="551.8" y="5269" width="0.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="554.78" y="5279.5" ></text>
</g>
<g >
<title>`core::core__integer_to_string(gctools::smart_ptr&lt;core::StrNs_O&gt; (1 samples, 0.02%)</title><rect x="124.5" y="5397" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="127.47" y="5407.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="506.8" y="5413" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="509.83" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="132.6" y="4917" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="135.57" y="4927.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="188.5" y="5541" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="191.50" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="126.8" y="5605" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="129.82" y="5615.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.3" y="3525" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="100.29" y="3535.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (1 samples, 0.02%)</title><rect x="259.3" y="5541" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="262.33" y="5551.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="366.2" y="5397" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="369.22" y="5407.5" ></text>
</g>
<g >
<title>`llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo  (14 samples, 0.31%)</title><rect x="695.0" y="5637" width="3.7" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="698.00" y="5647.5" ></text>
</g>
<g >
<title>`_platform_memcmp (1 samples, 0.02%)</title><rect x="486.7" y="5541" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="489.70" y="5551.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="180.9" y="5509" width="0.3" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="183.92" y="5519.5" ></text>
</g>
<g >
<title>`core::lambdaListHandler_createBindings(gctools::smart_ptr&lt;core: (1 samples, 0.02%)</title><rect x="391.6" y="5333" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="394.57" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="60.4" y="2853" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="63.44" y="2863.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (3 samples, 0.07%)</title><rect x="361.0" y="5317" width="0.8" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="363.99" y="5327.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1189" width="1.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="57.17" y="1199.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="11.3" y="5493" width="1.1" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="14.31" y="5503.5" ></text>
</g>
<g >
<title>`llvm::Value* SimplifyCall&lt;llvm::Use*&gt;(llvm::ImmutableCallSite,  (2 samples, 0.04%)</title><rect x="644.3" y="5589" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="647.30" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4885" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="136.62" y="4895.5" ></text>
</g>
<g >
<title>`%LITERAL-REF^CLASP-CLEAVIR^FN^^ (3 samples, 0.07%)</title><rect x="350.0" y="5253" width="0.8" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="353.02" y="5263.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="50.5" y="3173" width="1.1" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="53.51" y="3183.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (1 samples, 0.02%)</title><rect x="589.9" y="5653" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="592.94" y="5663.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::isGEPBaseAtNegativeOffset(llvm::GEPOperato (1 samples, 0.02%)</title><rect x="556.7" y="5461" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="559.75" y="5471.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="65.9" y="533" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="68.93" y="543.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (18 samples, 0.40%)</title><rect x="17.3" y="2245" width="4.7" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="20.32" y="2255.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="17.3" y="1813" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="20.32" y="1823.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (1 samples, 0.02%)</title><rect x="60.4" y="2885" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="63.44" y="2895.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::ImmutableCallSite, llvm::M (16 samples, 0.35%)</title><rect x="659.5" y="5541" width="4.1" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="662.46" y="5551.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4357" width="23.0" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="52.46" y="4367.5" >`..</text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass* (1 samples, 0.02%)</title><rect x="532.2" y="5637" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="535.18" y="5647.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.1" y="2293" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="20.06" y="2303.5" ></text>
</g>
<g >
<title>`llvm::orc::IRTransformLayer&lt;llvm::orc::IRCompileLayer&lt;llvm::orc (1 samples, 0.02%)</title><rect x="732.9" y="5461" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="735.90" y="5471.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Type*, llvm::Point (1 samples, 0.02%)</title><rect x="613.5" y="5525" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="616.46" y="5535.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::isCompare() const (1 samples, 0.02%)</title><rect x="630.2" y="5605" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="633.19" y="5615.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (2 samples, 0.04%)</title><rect x="182.0" y="5413" width="0.5" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="184.97" y="5423.5" ></text>
</g>
<g >
<title>`llvm::AttributeSet::getAlignment() const (1 samples, 0.02%)</title><rect x="516.5" y="5477" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="519.50" y="5487.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="725" width="1.3" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="57.17" y="735.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (13 samples, 0.29%)</title><rect x="54.2" y="2069" width="3.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="57.17" y="2079.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="533" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="65.01" y="543.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (1 samples, 0.02%)</title><rect x="523.0" y="5525" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="526.03" y="5535.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;std::__1::pair&lt;llvm::Bas (3 samples, 0.07%)</title><rect x="713.8" y="5621" width="0.8" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="716.82" y="5631.5" ></text>
</g>
<g >
<title>`cc_setSymbolValue (1 samples, 0.02%)</title><rect x="66.2" y="1093" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="69.19" y="1103.5" ></text>
</g>
<g >
<title>`llvm::FoldBranchToCommonDest(llvm::BranchInst*, unsigned int) (4 samples, 0.09%)</title><rect x="585.2" y="5589" width="1.1" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="588.23" y="5599.5" ></text>
</g>
<g >
<title>`llvm::isMallocOrCallocLikeFn(llvm::Value const*, llvm::TargetLi (2 samples, 0.04%)</title><rect x="502.1" y="5509" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="505.12" y="5519.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="260.4" y="5541" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="263.37" y="5551.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="221.2" y="5557" width="0.2" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="224.17" y="5567.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="196.3" y="5605" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="199.34" y="5615.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (2 samples, 0.04%)</title><rect x="85.8" y="4277" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="88.79" y="4287.5" ></text>
</g>
<g >
<title>`GC_mark_from (2 samples, 0.04%)</title><rect x="164.5" y="4821" width="0.5" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="167.46" y="4831.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="97.3" y="5077" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="100.29" y="5087.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::pointsToConstantMemory(llvm::MemoryLocatio (3 samples, 0.07%)</title><rect x="528.8" y="5573" width="0.8" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="531.78" y="5583.5" ></text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::isFnAttrDi (1 samples, 0.02%)</title><rect x="526.7" y="5493" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="529.69" y="5503.5" ></text>
</g>
<g >
<title>`MAKE-HASH-TABLE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="115.8" y="5621" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="118.85" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (18 samples, 0.40%)</title><rect x="17.3" y="2485" width="4.7" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="20.32" y="2495.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::ModuleHandle (1 samples, 0.02%)</title><rect x="732.9" y="5493" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="735.90" y="5503.5" ></text>
</g>
<g >
<title>`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="321.0" y="5141" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="324.01" y="5151.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp_big(void const*) (1 samples, 0.02%)</title><rect x="705.7" y="5621" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="708.72" y="5631.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.02%)</title><rect x="115.8" y="5541" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="118.85" y="5551.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="289.1" y="5429" width="0.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="292.12" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="133.6" y="4741" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="136.62" y="4751.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="43.2" y="4421" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="46.19" y="4431.5" ></text>
</g>
<g >
<title>`MAKE-EQ-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="148.0" y="5493" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="150.99" y="5503.5" ></text>
</g>
<g >
<title>`llvm::FoldingSetBase::FindNodeOrInsertPos(llvm::FoldingSetNodeI (1 samples, 0.02%)</title><rect x="420.6" y="5477" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="423.58" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4389" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="139.76" y="4399.5" ></text>
</g>
<g >
<title>`llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::Arra (1 samples, 0.02%)</title><rect x="626.0" y="5541" width="0.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="629.00" y="5551.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (1 samples, 0.02%)</title><rect x="645.9" y="5589" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="648.87" y="5599.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.3" y="3125" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="100.29" y="3135.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="242.3" y="5525" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="245.34" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (18 samples, 0.40%)</title><rect x="147.5" y="5541" width="4.7" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="150.47" y="5551.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="180.7" y="5573" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="183.66" y="5583.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SimplifyCFGOpt::SimplifyCondBranch(llvm: (6 samples, 0.13%)</title><rect x="585.0" y="5605" width="1.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="587.97" y="5615.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (3 samples, 0.07%)</title><rect x="475.5" y="5493" width="0.8" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="478.47" y="5503.5" ></text>
</g>
<g >
<title>`void llvm::AAResults::addAAResult&lt;llvm::BasicAAResult&gt;(llvm::Ba (1 samples, 0.02%)</title><rect x="455.3" y="5653" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="458.34" y="5663.5" ></text>
</g>
<g >
<title>`core::cl__macroexpand_1(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.02%)</title><rect x="735.0" y="5701" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="737.99" y="5711.5" ></text>
</g>
<g >
<title>`llvm::getConstantStringInfo(llvm::Value const*, llvm::StringRef (1 samples, 0.02%)</title><rect x="616.9" y="5621" width="0.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="619.86" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="41.1" y="4357" width="2.1" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="44.10" y="4367.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="53.6" y="2949" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="56.65" y="2959.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="1317" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="65.27" y="1327.5" ></text>
</g>
<g >
<title>`PROCESS-LAMBDA-LIST^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="69" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="61.35" y="79.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (3 samples, 0.07%)</title><rect x="374.6" y="5269" width="0.8" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="377.58" y="5279.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomT (1 samples, 0.02%)</title><rect x="536.9" y="5621" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="539.88" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="3813" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="131.65" y="3823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (7 samples, 0.16%)</title><rect x="135.2" y="4837" width="1.8" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="138.19" y="4847.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1861" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="65.27" y="1871.5" ></text>
</g>
<g >
<title>`IRC-LOAD^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="294.6" y="5429" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="297.61" y="5439.5" ></text>
</g>
<g >
<title>`core::HashTableEqual_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt; (1 samples, 0.02%)</title><rect x="413.3" y="5365" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="416.26" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (5 samples, 0.11%)</title><rect x="141.7" y="5045" width="1.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="144.72" y="5055.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.04%)</title><rect x="101.2" y="5589" width="0.5" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="104.21" y="5599.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="350.3" y="5173" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="353.28" y="5183.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="12.4" y="4325" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="15.35" y="4335.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (5 samples, 0.11%)</title><rect x="612.2" y="5557" width="1.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="615.15" y="5567.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="169.9" y="4981" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="172.95" y="4991.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (10 samples, 0.22%)</title><rect x="65.4" y="2773" width="2.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="68.41" y="2783.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="37" width="1.0" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="58.48" y="47.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (3 samples, 0.07%)</title><rect x="31.7" y="4341" width="0.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="34.69" y="4351.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="28.3" y="4325" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="31.29" y="4335.5" ></text>
</g>
<g >
<title>`GC_mark_local (3 samples, 0.07%)</title><rect x="736.0" y="5221" width="0.8" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="739.03" y="5231.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="346.1" y="5221" width="0.3" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="349.10" y="5231.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4629" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="100.29" y="4639.5" ></text>
</g>
<g >
<title>0x10d596094 (17 samples, 0.38%)</title><rect x="17.3" y="2133" width="4.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="20.32" y="2143.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (1 samples, 0.02%)</title><rect x="545.0" y="5525" width="0.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="547.99" y="5535.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (6 samples, 0.13%)</title><rect x="251.7" y="5573" width="1.6" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="254.75" y="5583.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::getStructValueState(llvm::Va (1 samples, 0.02%)</title><rect x="712.8" y="5637" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="715.77" y="5647.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="53.4" y="2581" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="56.38" y="2591.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2277" width="1.8" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="60.57" y="2287.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="338.0" y="5205" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="341.00" y="5215.5" ></text>
</g>
<g >
<title>`FIND-SIMILAR^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="123.2" y="5589" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="126.17" y="5599.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.02%)</title><rect x="44.5" y="4645" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="47.50" y="4655.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="74.6" y="3861" width="1.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="77.55" y="3871.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="117.7" y="5573" width="0.2" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="120.68" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4213" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="141.85" y="4223.5" ></text>
</g>
<g >
<title>0x10d596094 (10 samples, 0.22%)</title><rect x="74.6" y="4053" width="2.6" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="77.55" y="4063.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ModuleBitcodeWriterBase::ModuleBitcodeWr (5 samples, 0.11%)</title><rect x="727.9" y="5685" width="1.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="730.93" y="5695.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="370.1" y="5269" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="373.14" y="5279.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::StoreInst const*, llvm::Me (4 samples, 0.09%)</title><rect x="527.7" y="5557" width="1.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="530.74" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (4 samples, 0.09%)</title><rect x="56.5" y="1525" width="1.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="59.52" y="1535.5" ></text>
</g>
<g >
<title>`llvm::ReversePostOrderTraversal&lt;llvm::Function*, llvm::GraphTra (2 samples, 0.04%)</title><rect x="576.9" y="5621" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="579.87" y="5631.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="145.4" y="5029" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="148.38" y="5039.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.5" y="1765" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="65.53" y="1775.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="165" width="1.0" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="58.48" y="175.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (5 samples, 0.11%)</title><rect x="46.9" y="4917" width="1.3" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="49.85" y="4927.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="67.2" y="1413" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="70.24" y="1423.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="63.6" y="2405" width="1.8" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="66.58" y="2415.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (13 samples, 0.29%)</title><rect x="74.0" y="4357" width="3.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="77.03" y="4367.5" ></text>
</g>
<g >
<title>`FDEFINITION^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="20.2" y="1893" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="23.19" y="1903.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="63.3" y="2725" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="66.32" y="2735.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="65.7" y="2085" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="68.67" y="2095.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (25 samples, 0.55%)</title><rect x="16.3" y="3269" width="6.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="19.27" y="3279.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T GLOBAL-FUNCTION-INFO))^METHOD (1 samples, 0.02%)</title><rect x="76.6" y="3829" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="79.64" y="3839.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (1 samples, 0.02%)</title><rect x="368.6" y="5349" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="371.57" y="5359.5" ></text>
</g>
<g >
<title>`NEW-DATUM^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="371.4" y="5365" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="374.45" y="5375.5" ></text>
</g>
<g >
<title>`LITERAL-NODE-CREATOR-LITERAL-NAME^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="350.3" y="5221" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="353.28" y="5231.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (1 samples, 0.02%)</title><rect x="734.7" y="5365" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="737.73" y="5375.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::BinaryOp_match&lt;llvm::PatternMatch::cla (1 samples, 0.02%)</title><rect x="655.3" y="5605" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="658.28" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4773" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="140.02" y="4783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (46 samples, 1.02%)</title><rect x="159.5" y="5285" width="12.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="162.49" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="3957" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="137.14" y="3967.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="22.0" y="2661" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="25.02" y="2671.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (3 samples, 0.07%)</title><rect x="363.9" y="5253" width="0.8" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="366.87" y="5263.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="456.4" y="5637" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="459.39" y="5647.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpInstWithConstant(llvm::ICmpInst&amp;) (1 samples, 0.02%)</title><rect x="656.6" y="5605" width="0.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="659.58" y="5615.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="602.0" y="5573" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="604.96" y="5583.5" ></text>
</g>
<g >
<title>`llvm::ConstantRange::inverse() const (1 samples, 0.02%)</title><rect x="654.8" y="5573" width="0.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="657.75" y="5583.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="390.3" y="5317" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="393.27" y="5327.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="421.9" y="5637" width="0.3" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="424.89" y="5647.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="79.5" y="3669" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="82.52" y="3679.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="23.6" y="4453" width="1.0" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="26.59" y="4463.5" ></text>
</g>
<g >
<title>`FUDGE-VALUES-TYPE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="23.1" y="3621" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="26.07" y="3631.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="65.1" y="1989" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="68.15" y="1999.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="789" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="68.93" y="799.5" ></text>
</g>
<g >
<title>`core::Cons_O::last(long long) const (1 samples, 0.02%)</title><rect x="93.6" y="4437" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="96.63" y="4447.5" ></text>
</g>
<g >
<title>`std::__1::ctype&lt;char&gt;::do_widen(char) const (1 samples, 0.02%)</title><rect x="383.7" y="5365" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="386.73" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="3013" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="64.22" y="3023.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="97.6" y="5525" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="100.55" y="5535.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="595.7" y="5413" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="598.69" y="5423.5" ></text>
</g>
<g >
<title>`getValueFromCondition(llvm::Value*, llvm::Value*, bool, llvm::D (1 samples, 0.02%)</title><rect x="435.2" y="5557" width="0.3" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="438.22" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="126.8" y="5445" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="129.82" y="5455.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.8" y="2837" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="65.79" y="2847.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solve() (2 samples, 0.04%)</title><rect x="447.8" y="5573" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="450.76" y="5583.5" ></text>
</g>
<g >
<title>`REPLACE-CONSTANT-WITH-PRECALC^CLASP-CLEAVIR^FN^^ (5 samples, 0.11%)</title><rect x="207.8" y="5573" width="1.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="210.84" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.4" y="3925" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="132.44" y="3935.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="567.7" y="5349" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="570.72" y="5359.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="548.6" y="5349" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="551.64" y="5359.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (3 samples, 0.07%)</title><rect x="47.4" y="4821" width="0.8" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="50.37" y="4831.5" ></text>
</g>
<g >
<title>`getFoldedCast(llvm::Instruction::CastOps, llvm::Constant*, llvm (1 samples, 0.02%)</title><rect x="328.8" y="5189" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="331.85" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="19.7" y="1957" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="22.67" y="1967.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="1477" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="20.58" y="1487.5" ></text>
</g>
<g >
<title>`CCLASP-COMPILE*^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="57.8" y="1125" width="0.5" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="60.83" y="1135.5" ></text>
</g>
<g >
<title>`llvm::ReplaceableMetadataImpl::getIfExists(llvm::Metadata&amp;) (1 samples, 0.02%)</title><rect x="677.0" y="5589" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="679.97" y="5599.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$pthread_getspecific (1 samples, 0.02%)</title><rect x="402.5" y="5381" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="405.55" y="5391.5" ></text>
</g>
<g >
<title>`GET-OR-DECLARE-FUNCTION-OR-ERROR^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="355.0" y="5221" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="357.98" y="5231.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="77.2" y="4165" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="80.17" y="4175.5" ></text>
</g>
<g >
<title>`TREAT-AS-SPECIAL-OPERATOR-P^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="97.0" y="5125" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="100.03" y="5135.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (2 samples, 0.04%)</title><rect x="197.4" y="5557" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="200.39" y="5567.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="23.9" y="3701" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="26.85" y="3711.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5125" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="736.42" y="5135.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4245" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="736.42" y="4255.5" ></text>
</g>
<g >
<title>`core::byte_code_interpreter(gctools::GCRootsInModule*, gctools: (215 samples, 4.76%)</title><rect x="732.6" y="5781" width="56.2" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="735.64" y="5791.5" >`core..</text>
</g>
<g >
<title>`GC_mark_some (3 samples, 0.07%)</title><rect x="283.4" y="5413" width="0.8" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="286.37" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (7 samples, 0.16%)</title><rect x="39.3" y="4325" width="1.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="42.27" y="4335.5" ></text>
</g>
<g >
<title>`GC_mark_from (2 samples, 0.04%)</title><rect x="423.7" y="5493" width="0.5" height="15.0" fill="rgb(248,119,119)" rx="2" ry="2" />
<text  x="426.72" y="5503.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5573" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="123.55" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="58.3" y="805" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="61.35" y="815.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="78.0" y="4549" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="80.95" y="4559.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5493" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="123.55" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="1301" width="1.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="57.17" y="1311.5" ></text>
</g>
<g >
<title>`llvm::DenseMapInfo&lt;(anonymous namespace)::SimpleValue&gt;::isEqual (2 samples, 0.04%)</title><rect x="439.9" y="5621" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="442.92" y="5631.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (3 samples, 0.07%)</title><rect x="361.0" y="5285" width="0.8" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="363.99" y="5295.5" ></text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="310.6" y="5381" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="313.55" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.11%)</title><rect x="128.7" y="4437" width="1.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="131.65" y="4447.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (5 samples, 0.11%)</title><rect x="68.5" y="2693" width="1.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="71.54" y="2703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="4117" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="131.91" y="4127.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="689.3" y="5573" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="692.25" y="5583.5" ></text>
</g>
<g >
<title>`llvm::Argument::hasStructRetAttr() const (1 samples, 0.02%)</title><rect x="510.5" y="5477" width="0.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="513.49" y="5487.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="31.2" y="4373" width="0.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="34.17" y="4383.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="63.1" y="2997" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="66.05" y="3007.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="12.9" y="4309" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="15.87" y="4319.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="68.8" y="2181" width="0.3" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="71.80" y="2191.5" ></text>
</g>
<g >
<title>`SIMPLE-MEMBER-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="51.0" y="2389" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="54.03" y="2399.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::getModRefBehavior(llvm::Function const*) (1 samples, 0.02%)</title><rect x="659.7" y="5493" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="662.72" y="5503.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.02%)</title><rect x="45.8" y="5061" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="48.81" y="5071.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="304.5" y="5429" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="307.54" y="5439.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="421.9" y="5701" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="424.89" y="5711.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (1 samples, 0.02%)</title><rect x="449.6" y="5477" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="452.59" y="5487.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="3077" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="64.75" y="3087.5" ></text>
</g>
<g >
<title>`IRC-MAKE-TMV^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="332.2" y="5061" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="335.25" y="5071.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (30 samples, 0.66%)</title><rect x="37.4" y="4949" width="7.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="40.44" y="4959.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="348.7" y="5253" width="0.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="351.71" y="5263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="146.7" y="5381" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="149.69" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5077" width="1.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="14.31" y="5087.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="150.1" y="5029" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="153.08" y="5039.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="574.8" y="5557" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="577.78" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4805" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="136.36" y="4815.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="635.2" y="5509" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="638.15" y="5519.5" ></text>
</g>
<g >
<title>`%INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^CLASP-CLEAVIR^FN^^ (3 samples, 0.07%)</title><rect x="409.6" y="5461" width="0.8" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="412.61" y="5471.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="421.9" y="5685" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="424.89" y="5695.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="1573" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="65.27" y="1583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="127.1" y="5365" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="130.09" y="5375.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="69.6" y="2341" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="72.59" y="2351.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (7 samples, 0.16%)</title><rect x="268.0" y="5573" width="1.8" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="270.95" y="5583.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.02%)</title><rect x="651.6" y="5397" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="654.62" y="5407.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (4 samples, 0.09%)</title><rect x="610.1" y="5605" width="1.0" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="613.06" y="5615.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5509" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="713.94" y="5519.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="418.0" y="5525" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="420.97" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4277" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="137.14" y="4287.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="2917" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="62.40" y="2927.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (86 samples, 1.90%)</title><rect x="49.7" y="4149" width="22.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="52.73" y="4159.5" >`..</text>
</g>
<g >
<title>0x10d596094 (20 samples, 0.44%)</title><rect x="54.2" y="3221" width="5.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="57.17" y="3231.5" ></text>
</g>
<g >
<title>`core::cl__error(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.02%)</title><rect x="735.0" y="5573" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="737.99" y="5583.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="182.5" y="5461" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="185.49" y="5471.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="410.4" y="5349" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="413.39" y="5359.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="461.6" y="5557" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="464.61" y="5567.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="381.6" y="5285" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="384.64" y="5295.5" ></text>
</g>
<g >
<title>`PROCESS-OPTIONALS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5253" width="1.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="14.31" y="5263.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="367.0" y="5413" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="370.01" y="5423.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="350.3" y="5205" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="353.28" y="5215.5" ></text>
</g>
<g >
<title>`CONJOIN-TYPES^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="71.7" y="3653" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="74.68" y="3663.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="168.9" y="4917" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="171.90" y="4927.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignment(llvm::Type*, bool) const (1 samples, 0.02%)</title><rect x="494.0" y="5445" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="497.02" y="5455.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::OptimizeOverflowCheck(llvm::OverflowCheckFl (1 samples, 0.02%)</title><rect x="637.2" y="5605" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="640.24" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4389" width="0.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="132.70" y="4399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4309" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="138.45" y="4319.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="1413" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="65.01" y="1423.5" ></text>
</g>
<g >
<title>`core::core__source_pos_info_lineno(gctools::smart_ptr&lt;core::T_O (1 samples, 0.02%)</title><rect x="320.0" y="5237" width="0.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="322.96" y="5247.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="176.0" y="5237" width="0.2" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="178.96" y="5247.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="211.2" y="5461" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="214.24" y="5471.5" ></text>
</g>
<g >
<title>`llvm::TerminatorInst::getSuccessor(unsigned int) const (1 samples, 0.02%)</title><rect x="460.0" y="5557" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="463.05" y="5567.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.02%)</title><rect x="610.6" y="5541" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="613.58" y="5551.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="342.7" y="5205" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="345.70" y="5215.5" ></text>
</g>
<g >
<title>`llvm::Loop::isRecursivelyLCSSAForm(llvm::DominatorTree&amp;, llvm:: (1 samples, 0.02%)</title><rect x="684.3" y="5653" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="687.29" y="5663.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, (1 samples, 0.02%)</title><rect x="447.0" y="5509" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="449.98" y="5519.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (26 samples, 0.58%)</title><rect x="27.5" y="4469" width="6.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="30.51" y="4479.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="67.5" y="1365" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="70.50" y="1375.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (1 samples, 0.02%)</title><rect x="257.2" y="5589" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="260.24" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="65.9" y="917" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="68.93" y="927.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="138.8" y="4037" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="141.85" y="4047.5" ></text>
</g>
<g >
<title>`llvm::AssumptionCache::assumptionsFor(llvm::Value const*) (1 samples, 0.02%)</title><rect x="668.1" y="5493" width="0.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="671.08" y="5503.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="291.0" y="5477" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="293.95" y="5487.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.02%)</title><rect x="26.7" y="4501" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="29.73" y="4511.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (4 samples, 0.09%)</title><rect x="571.9" y="5509" width="1.1" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="574.90" y="5519.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1301" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="24.50" y="1311.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (18 samples, 0.40%)</title><rect x="17.3" y="2405" width="4.7" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="20.32" y="2415.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.04%)</title><rect x="279.2" y="5557" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="282.19" y="5567.5" ></text>
</g>
<g >
<title>`VARIABLE-TYPE^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="42.9" y="4277" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="45.93" y="4287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.1" y="4917" width="0.6" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="137.14" y="4927.5" ></text>
</g>
<g >
<title>`NREVERSE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="41.4" y="4277" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="44.36" y="4287.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (4 samples, 0.09%)</title><rect x="423.2" y="5589" width="1.0" height="15.0" fill="rgb(254,128,128)" rx="2" ry="2" />
<text  x="426.20" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="4021" width="0.5" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="131.91" y="4031.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (1 samples, 0.02%)</title><rect x="244.4" y="5541" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="247.43" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="138.6" y="4885" width="0.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="141.58" y="4895.5" ></text>
</g>
<g >
<title>`llvm::LexicalScopes::initialize(llvm::MachineFunction const&amp;) (1 samples, 0.02%)</title><rect x="58.6" y="805" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="61.61" y="815.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="24.9" y="3333" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="27.90" y="3343.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (4 samples, 0.09%)</title><rect x="117.2" y="5621" width="1.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="120.15" y="5631.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*, (1 samples, 0.02%)</title><rect x="459.0" y="5621" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="462.00" y="5631.5" ></text>
</g>
<g >
<title>`GC_mark_some (3 samples, 0.07%)</title><rect x="192.2" y="5397" width="0.7" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="195.16" y="5407.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="1221" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="67.88" y="1231.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.02%)</title><rect x="305.1" y="5429" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="308.07" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4389" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="138.71" y="4399.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (2 samples, 0.04%)</title><rect x="527.2" y="5445" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="530.21" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4261" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="139.76" y="4271.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="14.7" y="2901" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="17.70" y="2911.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (2 samples, 0.04%)</title><rect x="146.2" y="4981" width="0.5" height="15.0" fill="rgb(239,106,106)" rx="2" ry="2" />
<text  x="149.16" y="4991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4533" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="137.14" y="4543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.9" y="3733" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="131.91" y="3743.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="505.8" y="5413" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="508.78" y="5423.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="139.6" y="5141" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="142.63" y="5151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.18%)</title><rect x="154.8" y="5237" width="2.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="157.79" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1173" width="1.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="57.17" y="1183.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.02%)</title><rect x="367.5" y="5317" width="0.3" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="370.53" y="5327.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="65.7" y="1909" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="68.67" y="1919.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (2 samples, 0.04%)</title><rect x="160.5" y="4805" width="0.6" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="163.54" y="4815.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="143.0" y="5173" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="146.03" y="5183.5" ></text>
</g>
<g >
<title>`llvm::Instruction::getMetadataImpl(unsigned int) const (1 samples, 0.02%)</title><rect x="643.8" y="5573" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="646.78" y="5583.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="469" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="65.01" y="479.5" ></text>
</g>
<g >
<title>`llvm::SSAUpdaterTraits&lt;llvm::SSAUpdater&gt;::BlkSucc_end(llvm::Bas (1 samples, 0.02%)</title><rect x="562.2" y="5477" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="565.23" y="5487.5" ></text>
</g>
<g >
<title>`llvm::ReplaceableMetadataImpl::getOrCreate(llvm::Metadata&amp;) (1 samples, 0.02%)</title><rect x="481.5" y="5605" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="484.48" y="5615.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="85.0" y="4501" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="88.01" y="4511.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.3" y="2037" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="65.27" y="2047.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="3061" width="1.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="60.57" y="3071.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.04%)</title><rect x="131.3" y="4581" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="134.27" y="4591.5" ></text>
</g>
<g >
<title>`llvm::AssumptionCache::assumptionsFor(llvm::Value const*) (1 samples, 0.02%)</title><rect x="510.2" y="5493" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="513.23" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="24.6" y="3685" width="0.6" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="27.64" y="3695.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.1" y="2165" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="68.15" y="2175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4213" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="139.76" y="4223.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="734.2" y="5509" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="737.20" y="5519.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="531.1" y="5589" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="534.13" y="5599.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1605" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="65.79" y="1615.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::pop_binding() (1 samples, 0.02%)</title><rect x="143.6" y="5125" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="146.55" y="5135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="4981" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="130.35" y="4991.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="63.8" y="2085" width="1.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="66.84" y="2095.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4613" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="140.02" y="4623.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="869" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="20.58" y="879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5125" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="130.35" y="5135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.02%)</title><rect x="147.7" y="5461" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="150.73" y="5471.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (1 samples, 0.02%)</title><rect x="58.6" y="853" width="0.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="61.61" y="863.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4981" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="736.42" y="4991.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::LoadInst_O&gt; gctools::GCObjectAppropri (1 samples, 0.02%)</title><rect x="385.8" y="5333" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="388.82" y="5343.5" ></text>
</g>
<g >
<title>`MAKE-MULTIPLE-TO-FIXED-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="154.3" y="5237" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="157.27" y="5247.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (7 samples, 0.16%)</title><rect x="237.6" y="5573" width="1.9" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="240.64" y="5583.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::Value const*, llvm::StringMapE (1 samples, 0.02%)</title><rect x="337.2" y="5093" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="340.21" y="5103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="151.4" y="5301" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="154.39" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="16.3" y="2005" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="19.27" y="2015.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (3 samples, 0.07%)</title><rect x="184.1" y="5605" width="0.7" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="187.06" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (91 samples, 2.02%)</title><rect x="12.4" y="5253" width="23.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="15.35" y="5263.5" >`..</text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="376.2" y="5269" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="379.15" y="5279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (95 samples, 2.10%)</title><rect x="152.2" y="5509" width="24.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="155.17" y="5519.5" >`..</text>
</g>
<g >
<title>`GC_try_to_collect_inner (3 samples, 0.07%)</title><rect x="36.7" y="4805" width="0.7" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="39.66" y="4815.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="732.9" y="5653" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="735.90" y="5663.5" ></text>
</g>
<g >
<title>`llvm::isa_impl_wrap&lt;llvm::DbgInfoIntrinsic, llvm::ilist_iterato (1 samples, 0.02%)</title><rect x="514.1" y="5605" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="517.15" y="5615.5" ></text>
</g>
<g >
<title>`MAKE-LIST^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="389.7" y="5413" width="0.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="392.74" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.1" y="4741" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="141.06" y="4751.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__error (1 samples, 0.02%)</title><rect x="421.4" y="5541" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="424.37" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3893" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="132.96" y="3903.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="1509" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="73.63" y="1519.5" ></text>
</g>
<g >
<title>`COMPUTE-APPLICABLE-METHODS^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="207.8" y="5525" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="210.84" y="5535.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="163.7" y="5013" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="166.67" y="5023.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (2 samples, 0.04%)</title><rect x="76.4" y="3845" width="0.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="79.38" y="3855.5" ></text>
</g>
<g >
<title>`BASIC-TREE^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="735.8" y="5445" width="1.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="738.77" y="5455.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2805" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="64.22" y="2815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.2" y="3765" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="132.18" y="3775.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="757" width="1.0" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="58.48" y="767.5" ></text>
</g>
<g >
<title>`IRC-LOAD^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="385.6" y="5413" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="388.56" y="5423.5" ></text>
</g>
<g >
<title>`PRIMITIVE-RETURN-TYPE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="413.0" y="5381" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="416.00" y="5391.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="1029" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="62.13" y="1039.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="331.2" y="5029" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="334.20" y="5039.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="376.9" y="5397" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="379.94" y="5407.5" ></text>
</g>
<g >
<title>`GC_mark_from (3 samples, 0.07%)</title><rect x="736.0" y="5189" width="0.8" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="739.03" y="5199.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="53.4" y="2949" width="0.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="56.38" y="2959.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="405.7" y="5317" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="408.69" y="5327.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (1 samples, 0.02%)</title><rect x="437.8" y="5621" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="440.83" y="5631.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="651.6" y="5429" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="654.62" y="5439.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;std::__1::pair&lt;llvm::BasicBlock*, llvm::T (2 samples, 0.04%)</title><rect x="685.9" y="5573" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="688.85" y="5583.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (1 samples, 0.02%)</title><rect x="17.1" y="2053" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="20.06" y="2063.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (3 samples, 0.07%)</title><rect x="384.3" y="5381" width="0.7" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="387.25" y="5391.5" ></text>
</g>
<g >
<title>`IRC-CREATE-CALL^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="323.1" y="5221" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="326.10" y="5231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4325" width="0.2" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="139.76" y="4335.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1381" width="1.0" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="58.48" y="1391.5" ></text>
</g>
<g >
<title>`ImageLoaderMachOCompressed::getAddressCoalIterator(ImageLoader: (1 samples, 0.02%)</title><rect x="788.8" y="5749" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="791.83" y="5759.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="2085" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="65.01" y="2095.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="66.2" y="2309" width="1.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="69.19" y="2319.5" ></text>
</g>
<g >
<title>`COMPILE-LAMBDA-LIST-CODE^COMPILER^FN^^ (7 samples, 0.16%)</title><rect x="337.7" y="5285" width="1.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="340.73" y="5295.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="415.4" y="5477" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="418.36" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (5 samples, 0.11%)</title><rect x="54.2" y="1701" width="1.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="57.17" y="1711.5" ></text>
</g>
<g >
<title>`llvm::AttrBuilder::addAttribute(llvm::Attribute) (1 samples, 0.02%)</title><rect x="734.2" y="5301" width="0.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="737.20" y="5311.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="401.0" y="5333" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="403.98" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4293" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="138.19" y="4303.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="70.1" y="2549" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="73.11" y="2559.5" ></text>
</g>
<g >
<title>`llvm::AAResultsWrapperPass::runOnFunction(llvm::Function&amp;) (13 samples, 0.29%)</title><rect x="453.5" y="5669" width="3.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="456.51" y="5679.5" ></text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="95.2" y="4405" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="98.20" y="4415.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="24.6" y="4181" width="1.1" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="27.64" y="4191.5" ></text>
</g>
<g >
<title>`llvm::generic_gep_type_iterator&lt;llvm::Use const*&gt;::operator+ (1 samples, 0.02%)</title><rect x="672.5" y="5541" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="675.52" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.18%)</title><rect x="174.4" y="5413" width="2.1" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="177.39" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (30 samples, 0.66%)</title><rect x="37.4" y="4933" width="7.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="40.44" y="4943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="128.7" y="4501" width="1.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="131.65" y="4511.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="139.4" y="5077" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="142.37" y="5087.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="19.7" y="1813" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="22.67" y="1823.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="63.8" y="1989" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="66.84" y="1999.5" ></text>
</g>
<g >
<title>`__vfprintf (1 samples, 0.02%)</title><rect x="139.4" y="4965" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="142.37" y="4975.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1717" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="65.27" y="1727.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="853" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="62.13" y="863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="151.9" y="5445" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="154.91" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="61.0" y="2725" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="63.96" y="2735.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (4 samples, 0.09%)</title><rect x="23.6" y="4437" width="1.0" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="26.59" y="4447.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1845" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="65.53" y="1855.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="344.8" y="5109" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="347.79" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5045" width="0.2" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="180.26" y="5055.5" ></text>
</g>
<g >
<title>`COMPILE-AND-UNBOX-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="137.0" y="4501" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="140.02" y="4511.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1125" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="68.93" y="1135.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;std::__1::__value_type&lt;llvm::ConstantInt*, uns (1 samples, 0.02%)</title><rect x="698.4" y="5605" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="701.40" y="5615.5" ></text>
</g>
<g >
<title>`void llvm::SmallVectorImpl&lt;char&gt;::append&lt;char const*, void&gt;(cha (1 samples, 0.02%)</title><rect x="721.9" y="5605" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="724.92" y="5615.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (2 samples, 0.04%)</title><rect x="687.7" y="5653" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="690.68" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="581" width="1.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="57.17" y="591.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="933" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="68.93" y="943.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="41.9" y="4309" width="0.2" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="44.88" y="4319.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.02%)</title><rect x="592.3" y="5605" width="0.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="595.29" y="5615.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.0" y="2485" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="63.96" y="2495.5" ></text>
</g>
<g >
<title>`GC_mark_local (3 samples, 0.07%)</title><rect x="201.0" y="5365" width="0.8" height="15.0" fill="rgb(206,60,60)" rx="2" ry="2" />
<text  x="204.05" y="5375.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (30 samples, 0.66%)</title><rect x="27.5" y="4677" width="7.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="30.51" y="4687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4165" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="132.96" y="4175.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="257.5" y="5605" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="260.50" y="5615.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::StringMapIterator&lt;llvm::Value*&gt;, bool&gt; llv (1 samples, 0.02%)</title><rect x="384.3" y="5269" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="387.25" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="63.8" y="2053" width="1.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="66.84" y="2063.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.02%)</title><rect x="367.5" y="5413" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="370.53" y="5423.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2805" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="65.27" y="2815.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="1989" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="65.01" y="1999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4101" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="139.76" y="4111.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="336.2" y="5125" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="339.17" y="5135.5" ></text>
</g>
<g >
<title>`llvm::CallSiteBase&lt;llvm::Function const, llvm::BasicBlock const (1 samples, 0.02%)</title><rect x="643.3" y="5557" width="0.2" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="646.25" y="5567.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="176.2" y="5365" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="179.22" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (5 samples, 0.11%)</title><rect x="54.2" y="1253" width="1.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="57.17" y="1263.5" ></text>
</g>
<g >
<title>`DYNENV-DESTINATIONS^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="398.6" y="5381" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="401.63" y="5391.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="53.4" y="2773" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="56.38" y="2783.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, unsigned i (1 samples, 0.02%)</title><rect x="540.3" y="5589" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="543.28" y="5599.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="10.3" y="5685" width="0.2" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="13.26" y="5695.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2421" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="65.79" y="2431.5" ></text>
</g>
<g >
<title>`IRC-FUNCTION-CREATE^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="375.4" y="5413" width="0.8" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="378.37" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="70.6" y="2133" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="73.63" y="2143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.4" y="4133" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="132.44" y="4143.5" ></text>
</g>
<g >
<title>0x10d596094 (9 samples, 0.20%)</title><rect x="24.6" y="4885" width="2.4" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="27.64" y="4895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4101" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="141.85" y="4111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (11 samples, 0.24%)</title><rect x="148.3" y="5237" width="2.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="151.25" y="5247.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="689.3" y="5589" width="0.2" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="692.25" y="5599.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="238.4" y="5397" width="0.3" height="15.0" fill="rgb(217,76,76)" rx="2" ry="2" />
<text  x="241.42" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5205" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="130.35" y="5215.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="679.8" y="5573" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="682.84" y="5583.5" ></text>
</g>
<g >
<title>`boost::basic_format&lt;char, std::__1::char_traits&lt;char&gt;, std::__1 (2 samples, 0.04%)</title><rect x="340.9" y="5173" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="343.87" y="5183.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.02%)</title><rect x="572.4" y="5477" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="575.43" y="5487.5" ></text>
</g>
<g >
<title>`TREAT-AS-SPECIAL-OPERATOR-P^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="40.6" y="3973" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="43.58" y="3983.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="715.6" y="5637" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="718.65" y="5647.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="853" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="20.58" y="863.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (1 samples, 0.02%)</title><rect x="58.3" y="309" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="61.35" y="319.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="65.1" y="1941" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="68.15" y="1951.5" ></text>
</g>
<g >
<title>`llvm::canConstantFoldCallTo(llvm::ImmutableCallSite, llvm::Func (1 samples, 0.02%)</title><rect x="575.0" y="5541" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="578.04" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="78.5" y="3989" width="2.1" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="81.47" y="3999.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4661" width="23.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="52.46" y="4671.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4325" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="141.85" y="4335.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1573" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="20.58" y="1583.5" ></text>
</g>
<g >
<title>`default_zone_malloc (1 samples, 0.02%)</title><rect x="455.3" y="5557" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="458.34" y="5567.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorTemplateBase&lt;unsigned int, true&gt;::push_back(un (2 samples, 0.04%)</title><rect x="723.7" y="5653" width="0.6" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="726.75" y="5663.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (6 samples, 0.13%)</title><rect x="749.6" y="5573" width="1.6" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="752.62" y="5583.5" ></text>
</g>
<g >
<title>`core::two_arg__PLUS_FB(long long, gctools::smart_ptr&lt;core::Bign (1 samples, 0.02%)</title><rect x="739.4" y="5685" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="742.43" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:BEFORE) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="177.5" y="5237" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="180.53" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (3 samples, 0.07%)</title><rect x="66.5" y="1765" width="0.7" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="69.45" y="1775.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (1 samples, 0.02%)</title><rect x="490.1" y="5589" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="493.10" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4741" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="141.32" y="4751.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="449.9" y="5573" width="0.2" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="452.85" y="5583.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock** std::__1::uninitialized_copy&lt;std::__1::rever (2 samples, 0.04%)</title><rect x="606.4" y="5573" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="609.40" y="5583.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::freePass(llvm::Pass*, llvm::StringRef, llv (1 samples, 0.02%)</title><rect x="700.8" y="5685" width="0.2" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="703.75" y="5695.5" ></text>
</g>
<g >
<title>`core::Symbol_O::sxhash_equal(core::HashGenerator&amp;, void*) const (1 samples, 0.02%)</title><rect x="371.2" y="5269" width="0.2" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="374.19" y="5279.5" ></text>
</g>
<g >
<title>`llvm::SymbolTableListTraits&lt;llvm::Instruction&gt;::removeNodeFromL (1 samples, 0.02%)</title><rect x="438.6" y="5621" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="441.62" y="5631.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.0" y="2501" width="0.2" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="63.96" y="2511.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="82.9" y="4405" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="85.92" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-FILE-SERIAL^COMPILER^FN^^ (2,764 samples, 61.22%)</title><rect x="10.0" y="5893" width="722.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="13.00" y="5903.5" >`COMPILE-FILE-SERIAL^COMPILER^FN^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (19 samples, 0.42%)</title><rect x="152.4" y="5333" width="5.0" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="155.44" y="5343.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getDependency(llvm::Instruction* (1 samples, 0.02%)</title><rect x="449.6" y="5605" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="452.59" y="5615.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (4 samples, 0.09%)</title><rect x="210.5" y="5493" width="1.0" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="213.46" y="5503.5" ></text>
</g>
<g >
<title>`void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl&lt;unsigned l (1 samples, 0.02%)</title><rect x="723.0" y="5621" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="725.97" y="5631.5" ></text>
</g>
<g >
<title>`PATH-PAIR-KEY^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4053" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="736.42" y="4063.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="63.1" y="3205" width="2.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="66.05" y="3215.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="172.8" y="5253" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="175.82" y="5263.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (10 samples, 0.22%)</title><rect x="546.6" y="5429" width="2.6" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="549.55" y="5439.5" ></text>
</g>
<g >
<title>`core::core__vref(gctools::smart_ptr&lt;core::AbstractSimpleVector_ (1 samples, 0.02%)</title><rect x="424.2" y="5685" width="0.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="427.24" y="5695.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="343.2" y="5173" width="0.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="346.22" y="5183.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="537.7" y="5493" width="0.2" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="540.67" y="5503.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="72.2" y="4085" width="0.3" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="75.20" y="4095.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="57.6" y="773" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="60.57" y="783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4437" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="139.76" y="4447.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::DecomposeGEPExpression(llvm::Value const*, (7 samples, 0.16%)</title><rect x="549.2" y="5445" width="1.8" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="552.17" y="5455.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.04%)</title><rect x="363.1" y="5333" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="366.09" y="5343.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="294.1" y="5365" width="0.2" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="297.09" y="5375.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((MULTIPLE-TO-FIXED- (5 samples, 0.11%)</title><rect x="400.7" y="5477" width="1.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="403.72" y="5487.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4805" width="23.0" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="52.46" y="4815.5" >`..</text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="506.3" y="5397" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="509.31" y="5407.5" ></text>
</g>
<g >
<title>`MAKE-ENTER-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="124.5" y="5461" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="127.47" y="5471.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyMultipleUseDemandedBits(llvm::Instr (1 samples, 0.02%)</title><rect x="657.4" y="5541" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="660.37" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (233 samples, 5.16%)</title><rect x="36.4" y="5189" width="60.9" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="39.40" y="5199.5" >`CONVE..</text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (7 samples, 0.16%)</title><rect x="234.2" y="5509" width="1.9" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="237.24" y="5519.5" ></text>
</g>
<g >
<title>`OUT^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="354.2" y="5285" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="357.20" y="5295.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="61.2" y="2021" width="0.3" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="64.22" y="2031.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="337.0" y="5173" width="0.2" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="339.95" y="5183.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (332 samples, 7.35%)</title><rect x="11.3" y="5637" width="86.8" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="14.31" y="5647.5" >`CONVERT^C..</text>
</g>
<g >
<title>`DIFFERENTIATE-SPECIALIZERS^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5461" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="736.42" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4421" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="136.36" y="4431.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="367.0" y="5365" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="370.01" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="67.5" y="1653" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="70.50" y="1663.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="89.2" y="4389" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="92.19" y="4399.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4117" width="1.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="26.59" y="4127.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (1 samples, 0.02%)</title><rect x="493.2" y="5573" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="496.24" y="5583.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::BasicBlock(llvm::LLVMContext&amp;, llvm::Twine co (1 samples, 0.02%)</title><rect x="391.0" y="5381" width="0.3" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="394.05" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4741" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="142.11" y="4751.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="12.4" y="4549" width="1.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="15.35" y="4559.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="12.9" y="4357" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="15.87" y="4367.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (1 samples, 0.02%)</title><rect x="493.2" y="5541" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="496.24" y="5551.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::PassInfo c (1 samples, 0.02%)</title><rect x="690.6" y="5621" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="693.56" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="66.5" y="1989" width="1.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="69.45" y="1999.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1253" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="20.58" y="1263.5" ></text>
</g>
<g >
<title>`GC_clear_marks (1 samples, 0.02%)</title><rect x="252.0" y="5397" width="0.3" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="255.01" y="5407.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::ConstantInt_O&gt; gctools::GCObjectAppro (1 samples, 0.02%)</title><rect x="403.6" y="5381" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="406.59" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="64.6" y="325" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="67.62" y="335.5" ></text>
</g>
<g >
<title>`COMPILE-RANGES^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.2" y="5445" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="738.25" y="5455.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="1109" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="61.09" y="1119.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.20%)</title><rect x="50.0" y="3653" width="2.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="52.99" y="3663.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="148.3" y="5013" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="151.25" y="5023.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="385.8" y="5381" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="388.82" y="5391.5" ></text>
</g>
<g >
<title>0x10d596094 (40 samples, 0.89%)</title><rect x="14.2" y="4869" width="10.4" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="17.18" y="4879.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (5 samples, 0.11%)</title><rect x="46.9" y="4965" width="1.3" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="49.85" y="4975.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (5 samples, 0.11%)</title><rect x="118.7" y="5509" width="1.3" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="121.72" y="5519.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitLoadInst(llvm::LoadInst&amp;) (60 samples, 1.33%)</title><rect x="657.9" y="5621" width="15.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="660.89" y="5631.5" ></text>
</g>
<g >
<title>`llvm::AAResultsWrapperPass::runOnFunction(llvm::Function&amp;) (4 samples, 0.09%)</title><rect x="599.6" y="5669" width="1.1" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="602.61" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'FUNCTION) T T T) (4 samples, 0.09%)</title><rect x="11.3" y="5397" width="1.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="14.31" y="5407.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (5 samples, 0.11%)</title><rect x="118.7" y="5525" width="1.3" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="121.72" y="5535.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (2 samples, 0.04%)</title><rect x="171.8" y="5189" width="0.5" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="174.78" y="5199.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (7 samples, 0.16%)</title><rect x="87.6" y="4453" width="1.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="90.62" y="4463.5" ></text>
</g>
<g >
<title>`GENERATE-AST^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="124.2" y="5525" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="127.21" y="5535.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunct (1 samples, 0.02%)</title><rect x="57.8" y="869" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="60.83" y="879.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="741" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="60.57" y="751.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.04%)</title><rect x="346.9" y="5253" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="349.88" y="5263.5" ></text>
</g>
<g >
<title>`OF-CLASS-P^CORE^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="2549" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="72.85" y="2559.5" ></text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (1 samples, 0.02%)</title><rect x="22.5" y="2741" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="25.54" y="2751.5" ></text>
</g>
<g >
<title>`HANDLER-CASE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="22.8" y="3301" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="25.81" y="3311.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::BinaryOp_match&lt;llvm::PatternMatch::bin (1 samples, 0.02%)</title><rect x="621.0" y="5621" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="624.04" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="2805" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="64.75" y="2815.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1173" width="1.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="59.52" y="1183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="134.7" y="4357" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="137.66" y="4367.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="365.4" y="5333" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="368.44" y="5343.5" ></text>
</g>
<g >
<title>`%I64^CLASP-CLEAVIR^FN^^ (3 samples, 0.07%)</title><rect x="402.5" y="5461" width="0.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="405.55" y="5471.5" ></text>
</g>
<g >
<title>`core::Cons_O::length() const (1 samples, 0.02%)</title><rect x="190.3" y="5429" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="193.33" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3621" width="0.3" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="100.29" y="3631.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (1 samples, 0.02%)</title><rect x="420.8" y="5557" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="423.84" y="5567.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="2997" width="2.6" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="68.41" y="3007.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="334.6" y="5077" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="337.60" y="5087.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="1173" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="20.58" y="1183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="4037" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="131.91" y="4047.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomT (1 samples, 0.02%)</title><rect x="458.5" y="5637" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="461.48" y="5647.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="149.8" y="5061" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="152.82" y="5071.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="64.6" y="181" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="67.62" y="191.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="97.8" y="5509" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="100.81" y="5519.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="133.9" y="4885" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="136.88" y="4895.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3573" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="100.29" y="3583.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (6 samples, 0.13%)</title><rect x="12.4" y="5013" width="1.5" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="15.35" y="5023.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="70.1" y="2629" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="73.11" y="2639.5" ></text>
</g>
<g >
<title>`llvm::IRBuilderBase::SetInsertPoint(llvm::Instruction*) (1 samples, 0.02%)</title><rect x="697.4" y="5605" width="0.2" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="700.35" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="135.2" y="4693" width="0.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="138.19" y="4703.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="338.5" y="5157" width="0.3" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="341.52" y="5167.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2901" width="1.8" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="60.57" y="2911.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (18 samples, 0.40%)</title><rect x="65.4" y="3317" width="4.7" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="68.41" y="3327.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (2 samples, 0.04%)</title><rect x="570.1" y="5557" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="573.08" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="3973" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="131.65" y="3983.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="64.1" y="1893" width="1.0" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="67.10" y="1903.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2597" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="64.75" y="2607.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4805" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="140.02" y="4815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4341" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="137.14" y="4351.5" ></text>
</g>
<g >
<title>`LISTP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="174.7" y="5285" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="177.65" y="5295.5" ></text>
</g>
<g >
<title>`FAST-SUBTYPEP^CORE^FN^^ (1 samples, 0.02%)</title><rect x="94.9" y="4421" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="97.94" y="4431.5" ></text>
</g>
<g >
<title>`core::cl__make_hash_table(gctools::smart_ptr&lt;core::T_O&gt;, gctool (1 samples, 0.02%)</title><rect x="273.2" y="5541" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="276.18" y="5551.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="201.8" y="5461" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="204.83" y="5471.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="40.6" y="4133" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="43.58" y="4143.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="378.8" y="5413" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="381.77" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((RETURN-FROM-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4565" width="0.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="141.85" y="4575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="4133" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="131.65" y="4143.5" ></text>
</g>
<g >
<title>`sanitizeFunctionName(llvm::StringRef) (1 samples, 0.02%)</title><rect x="679.6" y="5573" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="682.58" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="3877" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="131.65" y="3887.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="1477" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="60.57" y="1487.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (13 samples, 0.29%)</title><rect x="74.0" y="4389" width="3.4" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="77.03" y="4399.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="134.4" y="4149" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="137.40" y="4159.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2741" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="73.63" y="2751.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="38.5" y="4789" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="41.49" y="4799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="3909" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="131.91" y="3919.5" ></text>
</g>
<g >
<title>`llvm::MachineDominatorTree::~MachineDominatorTree() (1 samples, 0.02%)</title><rect x="58.9" y="773" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="61.87" y="783.5" ></text>
</g>
<g >
<title>`SORT-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="115.3" y="5509" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="118.32" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4437" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="132.96" y="4447.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.02%)</title><rect x="528.3" y="5477" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="531.26" y="5487.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="22.8" y="3285" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="25.81" y="3295.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="53.1" y="2933" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="56.12" y="2943.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="738.4" y="5685" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="741.39" y="5695.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="605.1" y="5605" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="608.10" y="5615.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="16.3" y="2277" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="19.27" y="2287.5" ></text>
</g>
<g >
<title>`std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::basi (1 samples, 0.02%)</title><rect x="317.1" y="5301" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="320.09" y="5311.5" ></text>
</g>
<g >
<title>`isIntrinsicCall(llvm::ImmutableCallSite, llvm::Intrinsic::ID) (1 samples, 0.02%)</title><rect x="660.0" y="5509" width="0.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="662.98" y="5519.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="149.3" y="5029" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="152.30" y="5039.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="24.6" y="3717" width="0.6" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="27.64" y="3727.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="2405" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="65.79" y="2415.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="16.3" y="2149" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="19.27" y="2159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4117" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="138.19" y="4127.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="660.2" y="5349" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="663.24" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (13 samples, 0.29%)</title><rect x="54.2" y="2245" width="3.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="57.17" y="2255.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="19.7" y="1861" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="22.67" y="1871.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="413.0" y="5349" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="416.00" y="5359.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (2 samples, 0.04%)</title><rect x="384.3" y="5349" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="387.25" y="5359.5" ></text>
</g>
<g >
<title>`PROCESS-PROGN^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="25.2" y="4069" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="28.16" y="4079.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (234 samples, 5.18%)</title><rect x="36.4" y="5461" width="61.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="39.40" y="5471.5" >`CONVE..</text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, (anonymous name (1 samples, 0.02%)</title><rect x="713.0" y="5637" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="716.03" y="5647.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="40.3" y="4085" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="43.32" y="4095.5" ></text>
</g>
<g >
<title>0x10d596094 (8 samples, 0.18%)</title><rect x="63.3" y="2853" width="2.1" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="66.32" y="2863.5" ></text>
</g>
<g >
<title>`llvm::orc::IRTransformLayer&lt;llvm::orc::IRCompileLayer&lt;llvm::orc (1 samples, 0.02%)</title><rect x="57.8" y="997" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="60.83" y="1007.5" ></text>
</g>
<g >
<title>`std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::basi (2 samples, 0.04%)</title><rect x="413.5" y="5445" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="416.53" y="5455.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="52.9" y="3269" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="55.86" y="3279.5" ></text>
</g>
<g >
<title>`llvm::GVN::splitCriticalEdges(llvm::BasicBlock*, llvm::BasicBlo (3 samples, 0.07%)</title><rect x="562.5" y="5557" width="0.8" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="565.50" y="5567.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.8" y="2629" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="65.79" y="2639.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const (1 samples, 0.02%)</title><rect x="568.2" y="5461" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="571.25" y="5471.5" ></text>
</g>
<g >
<title>`core::core__make_vector(gctools::smart_ptr&lt;core::T_O&gt;, unsigned (1 samples, 0.02%)</title><rect x="46.1" y="4965" width="0.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="49.07" y="4975.5" ></text>
</g>
<g >
<title>`GC_allocobj (2 samples, 0.04%)</title><rect x="146.2" y="4997" width="0.5" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="149.16" y="5007.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (34 samples, 0.75%)</title><rect x="14.2" y="3909" width="8.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="17.18" y="3919.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.02%)</title><rect x="268.7" y="5317" width="0.3" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="271.74" y="5327.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (3 samples, 0.07%)</title><rect x="268.5" y="5429" width="0.8" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="271.48" y="5439.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="340.9" y="5125" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="343.87" y="5135.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::initializeAnalysisImpl(llvm::Pass*) (3 samples, 0.07%)</title><rect x="531.4" y="5669" width="0.8" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="534.40" y="5679.5" ></text>
</g>
<g >
<title>`WRITE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="11.0" y="5717" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="14.05" y="5727.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;llvm::ConstantExpr*, llvm (1 samples, 0.02%)</title><rect x="328.8" y="5157" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="331.85" y="5167.5" ></text>
</g>
<g >
<title>`core::write_object(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smar (1 samples, 0.02%)</title><rect x="11.0" y="5621" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="14.05" y="5631.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignment(llvm::Type*, bool) const (1 samples, 0.02%)</title><rect x="609.0" y="5589" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="612.02" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.3" y="1877" width="0.3" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="20.32" y="1887.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.02%)</title><rect x="402.8" y="5381" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="405.81" y="5391.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getNonLocalPointerDepFromBB(llvm (5 samples, 0.11%)</title><rect x="567.2" y="5541" width="1.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="570.20" y="5551.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (1 samples, 0.02%)</title><rect x="69.1" y="2181" width="0.2" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="72.07" y="2191.5" ></text>
</g>
<g >
<title>`SLOT-DEFINITION-INITARGS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="84.7" y="4469" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="87.75" y="4479.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^ (1 samples, 0.02%)</title><rect x="35.1" y="4517" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="38.09" y="4527.5" ></text>
</g>
<g >
<title>`llvm::AssumptionCache::assumptionsFor(llvm::Value const*) (1 samples, 0.02%)</title><rect x="510.7" y="5477" width="0.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="513.75" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((RETURN-FROM-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4533" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="141.32" y="4543.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2021" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="65.27" y="2031.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (26 samples, 0.58%)</title><rect x="16.3" y="3397" width="6.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="19.27" y="3407.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (5 samples, 0.11%)</title><rect x="412.2" y="5397" width="1.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="415.22" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-LAMBDA-LIST-CODE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="333.3" y="5109" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="336.29" y="5119.5" ></text>
</g>
<g >
<title>`ImageLoader::link(ImageLoader::LinkContext const&amp;, bool, bool,  (1 samples, 0.02%)</title><rect x="788.8" y="5781" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="791.83" y="5791.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="261" width="1.0" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="58.48" y="271.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (2 samples, 0.04%)</title><rect x="493.8" y="5541" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="496.76" y="5551.5" ></text>
</g>
<g >
<title>`llvm::hash_value(llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="548.6" y="5285" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="551.64" y="5295.5" ></text>
</g>
<g >
<title>`MAKE-LITERAL-NODE-CREATOR^LITERAL^FN^^ (5 samples, 0.11%)</title><rect x="369.4" y="5317" width="1.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="372.36" y="5327.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="21.2" y="1685" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="24.24" y="1695.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::ConstantInt_O&gt; gctools::GCObjectAppro (1 samples, 0.02%)</title><rect x="334.1" y="5029" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="337.08" y="5039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4661" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="140.28" y="4671.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::removeDeadPasses(llvm::Pass*, llvm::String (13 samples, 0.29%)</title><rect x="532.7" y="5669" width="3.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="535.70" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="63.1" y="2837" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="66.05" y="2847.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1925" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="65.01" y="1935.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="16.8" y="2277" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="19.80" y="2287.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (4 samples, 0.09%)</title><rect x="56.5" y="453" width="1.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="59.52" y="463.5" ></text>
</g>
<g >
<title>`core::Cons_O::onthcdr(long long) const (1 samples, 0.02%)</title><rect x="401.5" y="5445" width="0.3" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="404.50" y="5455.5" ></text>
</g>
<g >
<title>0x10d596094 (10 samples, 0.22%)</title><rect x="65.4" y="3013" width="2.6" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="68.41" y="3023.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4677" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="100.29" y="4687.5" ></text>
</g>
<g >
<title>`GC_alloc_large (3 samples, 0.07%)</title><rect x="201.0" y="5461" width="0.8" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="204.05" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="405" width="1.1" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="59.52" y="415.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (25 samples, 0.55%)</title><rect x="16.3" y="2901" width="6.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="19.27" y="2911.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="280.0" y="5605" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="282.98" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (6 samples, 0.13%)</title><rect x="50.0" y="3477" width="1.6" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="52.99" y="3487.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="96.2" y="4885" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="99.25" y="4895.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1093" width="0.2" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="20.58" y="1103.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="19.7" y="1893" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="22.67" y="1903.5" ></text>
</g>
<g >
<title>`combineInstructionsOverFunction(llvm::Function&amp;, llvm::InstComb (291 samples, 6.45%)</title><rect x="607.2" y="5653" width="76.0" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="610.19" y="5663.5" >`combine..</text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(l (1 samples, 0.02%)</title><rect x="449.6" y="5573" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="452.59" y="5583.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (1 samples, 0.02%)</title><rect x="525.1" y="5589" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="528.12" y="5599.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="853" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="61.09" y="863.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (22 samples, 0.49%)</title><rect x="16.3" y="2709" width="5.7" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="19.27" y="2719.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::LoadInst const*, llvm::Mem (1 samples, 0.02%)</title><rect x="449.3" y="5589" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="452.33" y="5599.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.0" y="2645" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="63.96" y="2655.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="22.0" y="2613" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="25.02" y="2623.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.02%)</title><rect x="733.9" y="5621" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="736.94" y="5631.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (1 samples, 0.02%)</title><rect x="732.9" y="5397" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="735.90" y="5407.5" ></text>
</g>
<g >
<title>`IRC-STORE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="401.0" y="5445" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="403.98" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="127.1" y="5381" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="130.09" y="5391.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="207.6" y="5557" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="210.58" y="5567.5" ></text>
</g>
<g >
<title>0x10d596094 (9 samples, 0.20%)</title><rect x="78.2" y="4517" width="2.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="81.21" y="4527.5" ></text>
</g>
<g >
<title>`JIT-FUNCTION-NAME^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="376.2" y="5429" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="379.15" y="5439.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="16.0" y="3557" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="19.01" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="134.1" y="4597" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="137.14" y="4607.5" ></text>
</g>
<g >
<title>`%INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^CLASP-CLEAVIR^FN^^ (3 samples, 0.07%)</title><rect x="410.4" y="5461" width="0.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="413.39" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.6" y="2821" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="56.65" y="2831.5" ></text>
</g>
<g >
<title>`ENSURE-DYNAMIC-LOCATION-AVAILABLE^CLEAVIR-HIR-TRANSFORMATIONS^F (8 samples, 0.18%)</title><rect x="240.8" y="5589" width="2.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="243.77" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="55.5" y="581" width="1.0" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="58.48" y="591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.8" y="5285" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="180.79" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (11 samples, 0.24%)</title><rect x="62.5" y="3285" width="2.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="65.53" y="3295.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::DILocation_O&gt; gctools::GCObjectApprop (6 samples, 0.13%)</title><rect x="298.8" y="5381" width="1.6" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="301.79" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="16.3" y="2117" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="19.27" y="2127.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.07%)</title><rect x="221.4" y="5541" width="0.8" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="224.43" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'CLEAVIR-PRIMOP:A (1 samples, 0.02%)</title><rect x="78.7" y="3589" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="81.74" y="3599.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="52.9" y="3237" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="55.86" y="3247.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="699.2" y="5637" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="702.18" y="5647.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="673.6" y="5605" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="676.57" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="94.9" y="4533" width="0.6" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="97.94" y="4543.5" ></text>
</g>
<g >
<title>`INSERT-INSTRUCTION-AFTER^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="240.8" y="5557" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="243.77" y="5567.5" ></text>
</g>
<g >
<title>`llvmo::Pass_O::externalObject() const (1 samples, 0.02%)</title><rect x="111.1" y="5589" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="114.14" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="177.3" y="5541" width="0.7" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="180.26" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="3029" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="64.75" y="3039.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="251.7" y="5509" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="254.75" y="5519.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getConstant(llvm::Value*, llvm::BasicBlock (12 samples, 0.27%)</title><rect x="430.8" y="5637" width="3.1" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="433.78" y="5647.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="63.6" y="2501" width="1.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="66.58" y="2511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4741" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="140.28" y="4751.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Function_O&gt; gctools::As&lt;gctools::smart (1 samples, 0.02%)</title><rect x="310.0" y="5397" width="0.3" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="313.03" y="5407.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="343.7" y="5221" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="346.75" y="5231.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="68.0" y="3109" width="1.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="71.02" y="3119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4053" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="136.36" y="4063.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="24.6" y="3749" width="0.6" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="27.64" y="3759.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.02%)</title><rect x="282.1" y="5605" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="285.07" y="5615.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="210.5" y="5381" width="0.2" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="213.46" y="5391.5" ></text>
</g>
<g >
<title>`GC_clear_marks (1 samples, 0.02%)</title><rect x="268.5" y="5413" width="0.2" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="271.48" y="5423.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.04%)</title><rect x="206.3" y="5557" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="209.27" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2293" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="64.22" y="2303.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.6" y="5237" width="0.2" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="100.55" y="5247.5" ></text>
</g>
<g >
<title>`DESCRIBE-FORM^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="11.0" y="5733" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="14.05" y="5743.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="58.3" y="357" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="61.35" y="367.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="415.4" y="5493" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="418.36" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (8 samples, 0.18%)</title><rect x="55.5" y="1861" width="2.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="58.48" y="1871.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="65.4" y="2213" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="68.41" y="2223.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.02%)</title><rect x="652.4" y="5429" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="655.40" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4757" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="137.14" y="4767.5" ></text>
</g>
<g >
<title>`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^ (3 samples, 0.07%)</title><rect x="734.2" y="5653" width="0.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="737.20" y="5663.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^FN^^ (15 samples, 0.33%)</title><rect x="90.2" y="4485" width="4.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="93.23" y="4495.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="53" width="1.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="59.52" y="63.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="23.9" y="3829" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="26.85" y="3839.5" ></text>
</g>
<g >
<title>`llvm::isInstructionTriviallyDead(llvm::Instruction*, llvm::Targ (1 samples, 0.02%)</title><rect x="683.8" y="5653" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="686.76" y="5663.5" ></text>
</g>
<g >
<title>`%INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="309.8" y="5461" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="312.77" y="5471.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (4 samples, 0.09%)</title><rect x="559.1" y="5445" width="1.0" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="562.10" y="5455.5" ></text>
</g>
<g >
<title>`CHECK-SPECIAL-FORM-SYNTAX^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ)  (1 samples, 0.02%)</title><rect x="74.0" y="4133" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="77.03" y="4143.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (2 samples, 0.04%)</title><rect x="630.4" y="5605" width="0.6" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="633.45" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (9 samples, 0.20%)</title><rect x="50.0" y="3605" width="2.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="52.99" y="3615.5" ></text>
</g>
<g >
<title>`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std:: (1 samples, 0.02%)</title><rect x="382.9" y="5317" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="385.95" y="5327.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="66.2" y="2085" width="1.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="69.19" y="2095.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="453.3" y="5669" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="456.25" y="5679.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="77.4" y="4565" width="0.3" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="80.43" y="4575.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="16.3" y="2549" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="19.27" y="2559.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::__1:: (3 samples, 0.07%)</title><rect x="689.8" y="5621" width="0.8" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="692.77" y="5631.5" ></text>
</g>
<g >
<title>`POSITION^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="41.6" y="4261" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="44.62" y="4271.5" ></text>
</g>
<g >
<title>`llvm::GEPOperator::hasAllZeroIndices() const (1 samples, 0.02%)</title><rect x="664.9" y="5557" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="667.95" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'CLEAVIR-PRIMOP:V (1 samples, 0.02%)</title><rect x="62.0" y="2421" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="65.01" y="2431.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1669" width="0.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="65.79" y="1679.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="57.6" y="1653" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="60.57" y="1663.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="737.9" y="5685" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="740.86" y="5695.5" ></text>
</g>
<g >
<title>`llvm::User::operator new(unsigned long, unsigned int) (1 samples, 0.02%)</title><rect x="381.6" y="5301" width="0.3" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="384.64" y="5311.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="595.7" y="5365" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="598.69" y="5375.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="642.7" y="5477" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="645.73" y="5487.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (26 samples, 0.58%)</title><rect x="16.3" y="3573" width="6.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="19.27" y="3583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4405" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="138.19" y="4415.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="501" width="1.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="57.17" y="511.5" ></text>
</g>
<g >
<title>`GET-DILOCATION^COMPILER^FN^^ (23 samples, 0.51%)</title><rect x="298.3" y="5445" width="6.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="301.27" y="5455.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="19.7" y="2005" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="22.67" y="2015.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="353.4" y="5205" width="0.3" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="356.42" y="5215.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2773" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="65.01" y="2783.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.04%)</title><rect x="202.9" y="5509" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="205.88" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="74.0" y="4421" width="3.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="77.03" y="4431.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.07%)</title><rect x="61.7" y="3285" width="0.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="64.75" y="3295.5" ></text>
</g>
<g >
<title>0x10d596094 (10 samples, 0.22%)</title><rect x="65.4" y="2597" width="2.6" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="68.41" y="2607.5" ></text>
</g>
<g >
<title>`TREAT-AS-SPECIAL-OPERATOR-P^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="17.1" y="2037" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="20.06" y="2047.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (2 samples, 0.04%)</title><rect x="240.3" y="5557" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="243.25" y="5567.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="392.1" y="5381" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="395.10" y="5391.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (1 samples, 0.02%)</title><rect x="171.0" y="5061" width="0.3" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="173.99" y="5071.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (2 samples, 0.04%)</title><rect x="274.0" y="5557" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="276.96" y="5567.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.5" y="1605" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="65.53" y="1615.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::StoreInst const*, llvm::Me (1 samples, 0.02%)</title><rect x="567.7" y="5461" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="570.72" y="5471.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="138.3" y="4325" width="0.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="141.32" y="4335.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatticeElement, llvm::D (1 samples, 0.02%)</title><rect x="435.2" y="5509" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="438.22" y="5519.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const (1 samples, 0.02%)</title><rect x="587.8" y="5605" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="590.85" y="5615.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (2 samples, 0.04%)</title><rect x="620.5" y="5621" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="623.52" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (7 samples, 0.16%)</title><rect x="68.0" y="2933" width="1.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="71.02" y="2943.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="22.0" y="2693" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="25.02" y="2703.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="176.7" y="5493" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="179.74" y="5503.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CONTEXT-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="149.0" y="4933" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="152.04" y="4943.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="308.5" y="5397" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="311.46" y="5407.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="608.8" y="5589" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="611.76" y="5599.5" ></text>
</g>
<g >
<title>`COMPUTE-LANDING-PAD-FROM-LOCATION^CLASP-CLEAVIR^FN^^ (17 samples, 0.38%)</title><rect x="395.0" y="5429" width="4.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="397.97" y="5439.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="194.5" y="5461" width="0.3" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="197.51" y="5471.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((PRECALC-VALUE-INST (5 samples, 0.11%)</title><rect x="334.1" y="5125" width="1.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="337.08" y="5135.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((MEMREF2-INSTRUCTIO (8 samples, 0.18%)</title><rect x="346.1" y="5301" width="2.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="349.10" y="5311.5" ></text>
</g>
<g >
<title>`LITERAL-NODE-INDEX^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="350.5" y="5221" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="353.54" y="5231.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DILocation*, llvm: (2 samples, 0.04%)</title><rect x="316.0" y="5221" width="0.6" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="319.04" y="5231.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="337.2" y="5141" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="340.21" y="5151.5" ></text>
</g>
<g >
<title>`GC_mark_local (4 samples, 0.09%)</title><rect x="230.3" y="5349" width="1.1" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="233.32" y="5359.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="635.2" y="5477" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="638.15" y="5487.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getPointerDependencyFrom(llvm::M (1 samples, 0.02%)</title><rect x="449.6" y="5589" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="452.59" y="5599.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="314.5" y="5253" width="0.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="317.47" y="5263.5" ></text>
</g>
<g >
<title>`MODULE-MAKE-GLOBAL-STRING^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="376.7" y="5429" width="0.5" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="379.68" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4085" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="138.19" y="4095.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="38.0" y="4693" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="40.96" y="4703.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::FunctionType*, llv (1 samples, 0.02%)</title><rect x="387.9" y="5365" width="0.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="390.91" y="5375.5" ></text>
</g>
<g >
<title>`llvm::DIBuilder::createParameterVariable(llvm::DIScope*, llvm:: (5 samples, 0.11%)</title><rect x="359.2" y="5253" width="1.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="362.17" y="5263.5" ></text>
</g>
<g >
<title>`GC_alloc_large (1 samples, 0.02%)</title><rect x="260.6" y="5461" width="0.3" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text  x="263.64" y="5471.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateExtractValue(llvm::Value*, gctools::s (1 samples, 0.02%)</title><rect x="333.6" y="4965" width="0.2" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="336.55" y="4975.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="328.6" y="5253" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="331.59" y="5263.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="629" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="61.09" y="639.5" ></text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE T (1 samples, 0.02%)</title><rect x="24.4" y="3925" width="0.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="27.37" y="3935.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="24.6" y="3861" width="0.6" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="27.64" y="3871.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Value const*&gt;::insert(llvm::Value c (1 samples, 0.02%)</title><rect x="444.1" y="5541" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="447.10" y="5551.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="103.8" y="5605" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="106.83" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="97.6" y="5541" width="0.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="100.55" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4245" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="137.40" y="4255.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (7 samples, 0.16%)</title><rect x="551.3" y="5381" width="1.8" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="554.26" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4213" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="138.19" y="4223.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="59.4" y="2613" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="62.40" y="2623.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="56.5" y="1013" width="1.1" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="59.52" y="1023.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="107.2" y="5573" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="110.22" y="5583.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::analyzeModule(llvm::Module&amp;, llvm::Targe (1 samples, 0.02%)</title><rect x="700.5" y="5685" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="703.49" y="5695.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="59.7" y="3317" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="62.66" y="3327.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="1093" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="61.09" y="1103.5" ></text>
</g>
<g >
<title>`SETUP-CALLING-CONVENTION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="789" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="62.13" y="799.5" ></text>
</g>
<g >
<title>`DELETE-THE^CLEAVIR-KILDALL-TYPE-INFERENCE^FN^^ (20 samples, 0.44%)</title><rect x="198.4" y="5621" width="5.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="201.43" y="5631.5" ></text>
</g>
<g >
<title>`PROCESS-LAMBDA-LIST^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="3301" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="73.11" y="3311.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (12 samples, 0.27%)</title><rect x="74.0" y="4277" width="3.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="77.03" y="4287.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="1589" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="73.63" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4565" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="137.40" y="4575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="128.7" y="4325" width="1.0" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="131.65" y="4335.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="48.4" y="5093" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="51.42" y="5103.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="321.3" y="5189" width="0.2" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="324.27" y="5199.5" ></text>
</g>
<g >
<title>`IRC-FUNCTION-CREATE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="420.6" y="5589" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="423.58" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4357" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="141.85" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (42 samples, 0.93%)</title><rect x="128.4" y="4997" width="11.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="131.39" y="5007.5" ></text>
</g>
<g >
<title>`PARSE-INTEGER^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5733" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="736.42" y="5743.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (2,981 samples, 66.02%)</title><rect x="10.0" y="6149" width="779.1" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="13.00" y="6159.5" >`CATCH-LAMBDA^CC-GENERATE-AST^FN^^</text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="51.0" y="2421" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="54.03" y="2431.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="188.2" y="5541" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="191.24" y="5551.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="381.6" y="5221" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="384.64" y="5231.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="53.9" y="2693" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="56.91" y="2703.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (1 samples, 0.02%)</title><rect x="62.3" y="1253" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="65.27" y="1263.5" ></text>
</g>
<g >
<title>`ELIMINATE-LOAD-TIME-VALUE-INPUTS^CLASP-CLEAVIR^FN^^ (81 samples, 1.79%)</title><rect x="207.1" y="5621" width="21.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="210.06" y="5631.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="70.9" y="3253" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="73.89" y="3263.5" ></text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::bundle_op_ (1 samples, 0.02%)</title><rect x="538.2" y="5573" width="0.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="541.19" y="5583.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (2 samples, 0.04%)</title><rect x="278.7" y="5461" width="0.5" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="281.67" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="55.5" y="1669" width="1.0" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="58.48" y="1679.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.0" y="1685" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="65.01" y="1695.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="78.0" y="4469" width="0.2" height="15.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="80.95" y="4479.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="167.6" y="5013" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="170.59" y="5023.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2853" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="64.22" y="2863.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="735.0" y="5349" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="737.99" y="5359.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="365.4" y="5237" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="368.44" y="5247.5" ></text>
</g>
<g >
<title>`DBG-REGISTER-PARAMETER^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="741" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="62.13" y="751.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (10 samples, 0.22%)</title><rect x="65.4" y="3285" width="2.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="68.41" y="3295.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="52.6" y="3605" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="55.60" y="3615.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (2 samples, 0.04%)</title><rect x="25.2" y="3893" width="0.5" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="28.16" y="3903.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="737.1" y="5653" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="740.08" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (5 samples, 0.11%)</title><rect x="54.2" y="373" width="1.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="57.17" y="383.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2997" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="63.18" y="3007.5" ></text>
</g>
<g >
<title>`llvm::formLCSSA(llvm::Loop&amp;, llvm::DominatorTree&amp;, llvm::LoopIn (1 samples, 0.02%)</title><rect x="598.0" y="5637" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="601.04" y="5647.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (3 samples, 0.07%)</title><rect x="182.0" y="5493" width="0.8" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="184.97" y="5503.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="560.4" y="5461" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="563.41" y="5471.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.02%)</title><rect x="205.8" y="5525" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="208.75" y="5535.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="60.4" y="2965" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="63.44" y="2975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4725" width="0.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="136.36" y="4735.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedBits(llvm::Instruction*, un (1 samples, 0.02%)</title><rect x="498.5" y="5557" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="501.47" y="5567.5" ></text>
</g>
<g >
<title>`core::Closure_O::describeFunction() const (1 samples, 0.02%)</title><rect x="295.4" y="5461" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="298.40" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="55.5" y="549" width="1.0" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="58.48" y="559.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="53.1" y="3045" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="56.12" y="3055.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="58.3" y="901" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="61.35" y="911.5" ></text>
</g>
<g >
<title>`wrapped_Create_llvm__LLVMContext_const_llvm__Twine_llvm__Functi (4 samples, 0.09%)</title><rect x="396.5" y="5365" width="1.1" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="399.54" y="5375.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (3 samples, 0.07%)</title><rect x="209.4" y="5589" width="0.8" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="212.41" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'FUNCTION) T T T) (6 samples, 0.13%)</title><rect x="50.0" y="3285" width="1.6" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="52.99" y="3295.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (20 samples, 0.44%)</title><rect x="54.2" y="3205" width="5.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="57.17" y="3215.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="24.6" y="3989" width="0.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="27.64" y="3999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4741" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="137.40" y="4751.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="22.8" y="3269" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="25.81" y="3279.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="5397" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="100.55" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4021" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="137.14" y="4031.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::StrWNs_O&gt; gctools::GCObjectAppropriate (1 samples, 0.02%)</title><rect x="46.1" y="4933" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="49.07" y="4943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="128.7" y="4229" width="1.0" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="131.65" y="4239.5" ></text>
</g>
<g >
<title>`C+ (1 samples, 0.02%)</title><rect x="379.6" y="5413" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="382.55" y="5423.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (2 samples, 0.04%)</title><rect x="527.2" y="5461" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="530.21" y="5471.5" ></text>
</g>
<g >
<title>`llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (1 samples, 0.02%)</title><rect x="734.7" y="5381" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="737.73" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="22.0" y="2597" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="25.02" y="2607.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="39.3" y="4069" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="42.27" y="4079.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="19.7" y="1733" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="22.67" y="1743.5" ></text>
</g>
<g >
<title>`llvm::GVN::AnalyzeLoadAvailability(llvm::LoadInst*, llvm::MemDe (2 samples, 0.04%)</title><rect x="544.2" y="5573" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="547.20" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4293" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="137.93" y="4303.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="145.1" y="4981" width="0.3" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="148.12" y="4991.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="284.2" y="5589" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="287.16" y="5599.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Type*, unsigned int, ll (1 samples, 0.02%)</title><rect x="729.0" y="5637" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="731.98" y="5647.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="1829" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="64.75" y="1839.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="101" width="1.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="57.17" y="111.5" ></text>
</g>
<g >
<title>`llvm::iterator_range&lt;llvm::po_iterator&lt;llvm::BasicBlock*, llvm: (2 samples, 0.04%)</title><rect x="685.9" y="5621" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="688.85" y="5631.5" ></text>
</g>
<g >
<title>`translate::from_object&lt;llvm::ArrayRef&lt;llvm::Value*&gt;, std::__1:: (1 samples, 0.02%)</title><rect x="399.9" y="5317" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="402.94" y="5327.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="155.3" y="5077" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="158.31" y="5087.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="1173" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="60.57" y="1183.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (2 samples, 0.04%)</title><rect x="15.5" y="3477" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="18.49" y="3487.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LABELS) T T T))^ (3 samples, 0.07%)</title><rect x="70.1" y="3381" width="0.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="73.11" y="3391.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="62.5" y="3141" width="0.6" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="65.53" y="3151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5269" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="130.35" y="5279.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.02%)</title><rect x="169.2" y="4885" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="172.16" y="4895.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="341.9" y="5237" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="344.92" y="5247.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, bool (llvmo::Type_O::*)(gctools::smart (1 samples, 0.02%)</title><rect x="391.8" y="5349" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="394.83" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4021" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="136.36" y="4031.5" ></text>
</g>
<g >
<title>`core::cl__find_package(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="40.6" y="3941" width="0.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="43.58" y="3951.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitLoadInst(llvm::LoadInst&amp;) (53 samples, 1.17%)</title><rect x="499.8" y="5621" width="13.8" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="502.77" y="5631.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::BasicBlock_O&gt; gctools::GCObjectApprop (4 samples, 0.09%)</title><rect x="396.5" y="5349" width="1.1" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="399.54" y="5359.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="357.3" y="5285" width="0.3" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="360.34" y="5295.5" ></text>
</g>
<g >
<title>`llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl&lt;llvm::Type (1 samples, 0.02%)</title><rect x="552.3" y="5285" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="555.30" y="5295.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5589" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="713.94" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4565" width="23.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="52.46" y="4575.5" >`..</text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="142.2" y="4917" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="145.24" y="4927.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="87.1" y="4437" width="0.3" height="15.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="90.10" y="4447.5" ></text>
</g>
<g >
<title>`EXPAND-CONTROL-STRING^CORE^FN^^ (8 samples, 0.18%)</title><rect x="46.1" y="5077" width="2.1" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="49.07" y="5087.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="241.0" y="5429" width="0.3" height="15.0" fill="rgb(239,106,106)" rx="2" ry="2" />
<text  x="244.03" y="5439.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (1 samples, 0.02%)</title><rect x="144.1" y="5445" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="147.07" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4373" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="132.70" y="4383.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="885" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="60.57" y="895.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="54.2" y="421" width="1.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="57.17" y="431.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldGetElementPtr(llvm::Type*, llvm::Constant*, b (1 samples, 0.02%)</title><rect x="572.2" y="5493" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="575.17" y="5503.5" ></text>
</g>
<g >
<title>`llvm::Value::getName() const (1 samples, 0.02%)</title><rect x="681.9" y="5573" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="684.93" y="5583.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (5 samples, 0.11%)</title><rect x="735.8" y="5541" width="1.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="738.77" y="5551.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-AST^CLEAVIR-AST^FN^^ (3 samples, 0.07%)</title><rect x="36.7" y="4981" width="0.7" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="39.66" y="4991.5" ></text>
</g>
<g >
<title>`llvm::sroa::SROALegacyPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.04%)</title><rect x="581.1" y="5669" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="584.05" y="5679.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (3 samples, 0.07%)</title><rect x="363.9" y="5269" width="0.8" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="366.87" y="5279.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (2 samples, 0.04%)</title><rect x="506.3" y="5493" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="509.31" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (3 samples, 0.07%)</title><rect x="50.8" y="2933" width="0.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="53.77" y="2943.5" ></text>
</g>
<g >
<title>`llvm::MergeBlockIntoPredecessor(llvm::BasicBlock*, llvm::Domina (1 samples, 0.02%)</title><rect x="580.8" y="5637" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="583.79" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1685" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="68.93" y="1695.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (2 samples, 0.04%)</title><rect x="660.2" y="5461" width="0.6" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="663.24" y="5471.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (1 samples, 0.02%)</title><rect x="576.3" y="5557" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="579.35" y="5567.5" ></text>
</g>
<g >
<title>`small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="563.0" y="5381" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="566.02" y="5391.5" ></text>
</g>
<g >
<title>`llvm::KnownBits::resetAll() (1 samples, 0.02%)</title><rect x="669.4" y="5477" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="672.39" y="5487.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (10 samples, 0.22%)</title><rect x="78.0" y="4709" width="2.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="80.95" y="4719.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4341" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="138.45" y="4351.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.02%)</title><rect x="453.8" y="5637" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="456.77" y="5647.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="24.6" y="4245" width="1.1" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="27.64" y="4255.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="311.9" y="5269" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="314.86" y="5279.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4389" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="736.42" y="4399.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.04%)</title><rect x="363.1" y="5317" width="0.5" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="366.09" y="5327.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="322.3" y="5253" width="0.3" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="325.31" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (16 samples, 0.35%)</title><rect x="73.5" y="4677" width="4.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="76.51" y="4687.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.02%)</title><rect x="656.3" y="5573" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="659.32" y="5583.5" ></text>
</g>
<g >
<title>`GC_mark_local (3 samples, 0.07%)</title><rect x="75.3" y="3653" width="0.8" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="78.34" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.1" y="4757" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="141.06" y="4767.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (6 samples, 0.13%)</title><rect x="57.8" y="1525" width="1.6" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="60.83" y="1535.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (4 samples, 0.09%)</title><rect x="210.5" y="5509" width="1.0" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="213.46" y="5519.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="51.6" y="3557" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="54.55" y="3567.5" ></text>
</g>
<g >
<title>`ALLOCA-T*^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="354.2" y="5221" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="357.20" y="5231.5" ></text>
</g>
<g >
<title>`GC_install_counts (1 samples, 0.02%)</title><rect x="225.1" y="5397" width="0.3" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="228.09" y="5407.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (4 samples, 0.09%)</title><rect x="735.8" y="5381" width="1.0" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="738.77" y="5391.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="60.2" y="3109" width="1.0" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="63.18" y="3119.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (2 samples, 0.04%)</title><rect x="25.2" y="4005" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="28.16" y="4015.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.02%)</title><rect x="159.0" y="5349" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="161.97" y="5359.5" ></text>
</g>
<g >
<title>`DO-DISPATCH-MISS^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="58.3" y="1189" width="1.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="61.35" y="1199.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="933" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="62.13" y="943.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.02%)</title><rect x="406.5" y="5317" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="409.47" y="5327.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (8 samples, 0.18%)</title><rect x="234.0" y="5525" width="2.1" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="236.98" y="5535.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LiveDebugValues::runOnMachineFunction(ll (1 samples, 0.02%)</title><rect x="58.6" y="821" width="0.3" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="61.61" y="831.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&amp;,  (1 samples, 0.02%)</title><rect x="679.8" y="5589" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="682.84" y="5599.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="376.2" y="5237" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="379.15" y="5247.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (2 samples, 0.04%)</title><rect x="527.2" y="5493" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="530.21" y="5503.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="19.9" y="1941" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="22.93" y="1951.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((FUNCALL-INSTRUCTIO (65 samples, 1.44%)</title><rect x="382.7" y="5477" width="17.0" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="385.69" y="5487.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.04%)</title><rect x="276.6" y="5525" width="0.5" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="279.58" y="5535.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="719.3" y="5541" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="722.31" y="5551.5" ></text>
</g>
<g >
<title>0x10d596094 (3 samples, 0.07%)</title><rect x="65.4" y="2501" width="0.8" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="68.41" y="2511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4293" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="137.14" y="4303.5" ></text>
</g>
<g >
<title>`COMPUTE-LOCATION-OWNERS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (14 samples, 0.31%)</title><rect x="236.3" y="5605" width="3.7" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="239.33" y="5615.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.04%)</title><rect x="108.0" y="5589" width="0.5" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="111.01" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="145.4" y="5109" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="148.38" y="5119.5" ></text>
</g>
<g >
<title>`APPEND^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="236.3" y="5573" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="239.33" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'FUNCTION) T T T) (1 samples, 0.02%)</title><rect x="58.3" y="149" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="61.35" y="159.5" ></text>
</g>
<g >
<title>`_platform_memchr$VARIANT$Base (1 samples, 0.02%)</title><rect x="382.9" y="5301" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="385.95" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="171.5" y="5253" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="174.51" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="57.6" y="1349" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="60.57" y="1359.5" ></text>
</g>
<g >
<title>`GC_allocobj (2 samples, 0.04%)</title><rect x="132.6" y="4725" width="0.5" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="135.57" y="4735.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="3109" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="73.63" y="3119.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="562.5" y="5445" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="565.50" y="5455.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (6 samples, 0.13%)</title><rect x="191.6" y="5573" width="1.6" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="194.64" y="5583.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="34.6" y="4549" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="37.57" y="4559.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1749" width="1.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="58.48" y="1759.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (163 samples, 3.61%)</title><rect x="315.0" y="5365" width="42.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="318.00" y="5375.5" >`DO-..</text>
</g>
<g >
<title>`THES-&gt;TYPEQS^CLEAVIR-KILDALL-TYPE-INFERENCE^FN^^ (49 samples, 1.09%)</title><rect x="267.4" y="5621" width="12.8" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="270.43" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (2 samples, 0.04%)</title><rect x="62.5" y="2981" width="0.6" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="65.53" y="2991.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (4 samples, 0.09%)</title><rect x="559.1" y="5413" width="1.0" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="562.10" y="5423.5" ></text>
</g>
<g >
<title>`PROCESS-REST^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="50.8" y="3125" width="0.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="53.77" y="3135.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="96.5" y="4901" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="99.51" y="4911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4885" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="140.28" y="4895.5" ></text>
</g>
<g >
<title>`llvm::DominatorTree&amp; llvm::function_ref&lt;llvm::DominatorTree&amp; (l (2 samples, 0.04%)</title><rect x="590.5" y="5669" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="593.46" y="5679.5" ></text>
</g>
<g >
<title>`llvm::CallInst::onlyReadsMemory() const (2 samples, 0.04%)</title><rect x="518.1" y="5589" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="521.07" y="5599.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (3 samples, 0.07%)</title><rect x="494.3" y="5557" width="0.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="497.28" y="5567.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1541" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="20.58" y="1551.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (12 samples, 0.27%)</title><rect x="78.0" y="4805" width="3.1" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="80.95" y="4815.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="266.9" y="5541" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="269.91" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="533" width="1.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="57.17" y="543.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.04%)</title><rect x="276.6" y="5541" width="0.5" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="279.58" y="5551.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::alias(llvm::MemoryLocation const&amp;, llvm: (1 samples, 0.02%)</title><rect x="507.4" y="5557" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="510.35" y="5567.5" ></text>
</g>
<g >
<title>`core::cl__find_package(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="15.7" y="3365" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="18.75" y="3375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="16.3" y="2261" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="19.27" y="2271.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1045" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="65.53" y="1055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4213" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="132.70" y="4223.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="96.5" y="4757" width="0.3" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="99.51" y="4767.5" ></text>
</g>
<g >
<title>0x10d596094 (34 samples, 0.75%)</title><rect x="14.2" y="3925" width="8.9" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="17.18" y="3935.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="688.5" y="5621" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="691.47" y="5631.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="949" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="67.88" y="959.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="452.5" y="5621" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="455.47" y="5631.5" ></text>
</g>
<g >
<title>`core::Cache_O::vector_hash_key(gctools::Vec0&lt;gctools::smart_ptr (1 samples, 0.02%)</title><rect x="362.3" y="5301" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="365.30" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="147.7" y="5477" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="150.73" y="5487.5" ></text>
</g>
<g >
<title>`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPILER^FN^^ (1,117 samples, 24.74%)</title><rect x="425.8" y="5797" width="291.9" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="428.81" y="5807.5" >`OPTIMIZE-MODULE-FOR-COMPILE-FILE^COMPI..</text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.02%)</title><rect x="17.3" y="1685" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="20.32" y="1695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.16%)</title><rect x="135.2" y="4885" width="1.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="138.19" y="4895.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (6 samples, 0.13%)</title><rect x="251.7" y="5557" width="1.6" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="254.75" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3909" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="132.96" y="3919.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (26 samples, 0.58%)</title><rect x="113.8" y="5637" width="6.8" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="116.76" y="5647.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (6 samples, 0.13%)</title><rect x="57.8" y="1301" width="1.6" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="60.83" y="1311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4613" width="0.3" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="137.40" y="4623.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="3157" width="2.6" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="68.41" y="3167.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="186.9" y="5525" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="189.93" y="5535.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="315.5" y="5301" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="318.52" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="130.7" y="4661" width="1.1" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="133.74" y="4671.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="289.9" y="5509" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="292.91" y="5519.5" ></text>
</g>
<g >
<title>`IRC-BEGIN-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="329.9" y="5173" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="332.89" y="5183.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (3 samples, 0.07%)</title><rect x="627.0" y="5573" width="0.8" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="630.05" y="5583.5" ></text>
</g>
<g >
<title>`llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer,  (1 samples, 0.02%)</title><rect x="732.9" y="5445" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="735.90" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET*) T T T))^ME (1 samples, 0.02%)</title><rect x="62.5" y="1717" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="65.53" y="1727.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.04%)</title><rect x="237.9" y="5509" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="240.90" y="5519.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt;::dominates(llv (1 samples, 0.02%)</title><rect x="523.6" y="5653" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="526.55" y="5663.5" ></text>
</g>
<g >
<title>`getFoldedCast(llvm::Instruction::CastOps, llvm::Constant*, llvm (1 samples, 0.02%)</title><rect x="629.1" y="5589" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="632.14" y="5599.5" ></text>
</g>
<g >
<title>`llvm::Value::getContext() const (1 samples, 0.02%)</title><rect x="550.5" y="5349" width="0.2" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="553.47" y="5359.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::reference_raw_(core::Symbol_O*, gcto (1 samples, 0.02%)</title><rect x="329.6" y="5141" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="332.63" y="5151.5" ></text>
</g>
<g >
<title>`GC_clear_hdr_marks (1 samples, 0.02%)</title><rect x="423.2" y="5541" width="0.3" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="426.20" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.1" y="4725" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="141.06" y="4735.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.02%)</title><rect x="334.3" y="5045" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="337.34" y="5055.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="244.4" y="5525" width="0.3" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="247.43" y="5535.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="78.7" y="3797" width="1.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="81.74" y="3807.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (2 samples, 0.04%)</title><rect x="70.1" y="2677" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="73.11" y="2687.5" ></text>
</g>
<g >
<title>`FORM-ASTS^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="82.4" y="4517" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="85.39" y="4527.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="237.6" y="5541" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="240.64" y="5551.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.02%)</title><rect x="147.7" y="5445" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="150.73" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5157" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="130.35" y="5167.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.02%)</title><rect x="16.0" y="3589" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="19.01" y="3599.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedUseBits(llvm::Value*, llvm: (1 samples, 0.02%)</title><rect x="635.2" y="5557" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="638.15" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="53.9" y="2933" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="56.91" y="2943.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T LEXICAL-VARIABLE-INFO T T (1 samples, 0.02%)</title><rect x="73.8" y="4437" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="76.77" y="4447.5" ></text>
</g>
<g >
<title>`GET-DILOCATION^LLVM-SYS^FN^^ (1 samples, 0.02%)</title><rect x="318.7" y="5269" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="321.66" y="5279.5" ></text>
</g>
<g >
<title>`UNIVERSAL-ERROR-HANDLER^CORE^FN^^ (5 samples, 0.11%)</title><rect x="735.8" y="5605" width="1.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="738.77" y="5615.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAWrapperPass* llvm::Pass::getAnalysisIfAvailable&lt; (1 samples, 0.02%)</title><rect x="599.6" y="5653" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="602.61" y="5663.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5205" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="736.42" y="5215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4805" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="137.66" y="4815.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="66.2" y="1925" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="69.19" y="1935.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::push_binding(gctools::smart_ptr&lt;core (1 samples, 0.02%)</title><rect x="377.5" y="5429" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="380.46" y="5439.5" ></text>
</g>
<g >
<title>`IRC-AND^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="330.7" y="5061" width="0.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="333.68" y="5071.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (6 samples, 0.13%)</title><rect x="604.3" y="5637" width="1.6" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="607.31" y="5647.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.1" y="1157" width="0.3" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="67.10" y="1167.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="242.6" y="5573" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="245.60" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4165" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="139.76" y="4175.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2645" width="1.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="60.57" y="2655.5" ></text>
</g>
<g >
<title>`getAllocationDataForFunction(llvm::Function const*, AllocType,  (2 samples, 0.04%)</title><rect x="681.9" y="5589" width="0.6" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="684.93" y="5599.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="31.4" y="4389" width="1.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="34.43" y="4399.5" ></text>
</g>
<g >
<title>`POSITION^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="23.1" y="3589" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="26.07" y="3599.5" ></text>
</g>
<g >
<title>0x10d596094 (3 samples, 0.07%)</title><rect x="64.1" y="1381" width="0.8" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="67.10" y="1391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4325" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="138.45" y="4335.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (2 samples, 0.04%)</title><rect x="461.6" y="5589" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="464.61" y="5599.5" ></text>
</g>
<g >
<title>`GC_mark_from (3 samples, 0.07%)</title><rect x="75.3" y="3621" width="0.8" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="78.34" y="3631.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="12.4" y="4901" width="1.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="15.35" y="4911.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="67.5" y="1909" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="70.50" y="1919.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (1 samples, 0.02%)</title><rect x="546.0" y="5445" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="549.03" y="5455.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2517" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="71.28" y="2527.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="56.5" y="773" width="1.1" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="59.52" y="783.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="33.0" y="4357" width="0.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="36.00" y="4367.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedUseBits(llvm::Value*, llvm: (1 samples, 0.02%)</title><rect x="657.1" y="5541" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="660.11" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="65.1" y="2293" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="68.15" y="2303.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="357.3" y="5301" width="0.3" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="360.34" y="5311.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="346.4" y="5141" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="349.36" y="5151.5" ></text>
</g>
<g >
<title>`_pthread_body (1,533 samples, 33.95%)</title><rect x="789.3" y="6389" width="400.7" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="792.35" y="6399.5" >`_pthread_body</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (13 samples, 0.29%)</title><rect x="54.2" y="2165" width="3.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="57.17" y="2175.5" ></text>
</g>
<g >
<title>`AST-&gt;HIR^CLASP-CLEAVIR^FN^^ (219 samples, 4.85%)</title><rect x="126.6" y="5653" width="57.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="129.56" y="5663.5" >`AST-&gt;..</text>
</g>
<g >
<title>`BCLASP-COMPILE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="732.9" y="5685" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="735.90" y="5695.5" ></text>
</g>
<g >
<title>`CHILDREN^CLEAVIR-AST^((RETURN-FROM-AST))^METHOD^^ (1 samples, 0.02%)</title><rect x="114.5" y="5621" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="117.54" y="5631.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="19.7" y="1909" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="22.67" y="1919.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="68.0" y="3029" width="1.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="71.02" y="3039.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="3189" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="64.22" y="3199.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.3" y="1701" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="20.32" y="1711.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2837" width="0.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="64.22" y="2847.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="11.3" y="5109" width="1.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="14.31" y="5119.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (4 samples, 0.09%)</title><rect x="14.2" y="3365" width="1.0" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="17.18" y="3375.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AssumptionCacheTra (1 samples, 0.02%)</title><rect x="598.3" y="5653" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="601.30" y="5663.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="334.6" y="5045" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="337.60" y="5055.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="694.5" y="5589" width="0.2" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="697.48" y="5599.5" ></text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (1 samples, 0.02%)</title><rect x="625.5" y="5493" width="0.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="628.48" y="5503.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_equal(core::HashGenerator&amp;, gctools:: (1 samples, 0.02%)</title><rect x="370.9" y="5269" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="373.93" y="5279.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="74.8" y="3765" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="77.82" y="3775.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="24.1" y="3765" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="27.11" y="3775.5" ></text>
</g>
<g >
<title>`STANDARD-INSTANCE-ACCESS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="187.7" y="5541" width="0.3" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="190.72" y="5551.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="77.2" y="4229" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="80.17" y="4239.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="70.1" y="2789" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="73.11" y="2799.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.3" y="1477" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="65.27" y="1487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4549" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="136.36" y="4559.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="981" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="68.93" y="991.5" ></text>
</g>
<g >
<title>`llvm::RecursivelyDeleteTriviallyDeadInstructions(llvm::Value*,  (2 samples, 0.04%)</title><rect x="594.6" y="5637" width="0.6" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="597.64" y="5647.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (13 samples, 0.29%)</title><rect x="473.9" y="5573" width="3.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="476.90" y="5583.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (7 samples, 0.16%)</title><rect x="268.0" y="5557" width="1.8" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="270.95" y="5567.5" ></text>
</g>
<g >
<title>`VARIABLE-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="72.5" y="4789" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="75.46" y="4799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FIXNUM-ADD-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4085" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="141.85" y="4095.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="354.7" y="5189" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="357.72" y="5199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5061" width="0.2" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="180.26" y="5071.5" ></text>
</g>
<g >
<title>`llvmo::DILocation_O::make(llvm::LLVMContext&amp;, unsigned int, uns (2 samples, 0.04%)</title><rect x="326.5" y="5221" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="329.50" y="5231.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="2389" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="73.63" y="2399.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="178.6" y="5605" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="181.57" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4197" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="135.31" y="4207.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="338.8" y="5157" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="341.78" y="5167.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="77.2" y="4149" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="80.17" y="4159.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="474.7" y="5525" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="477.68" y="5535.5" ></text>
</g>
<g >
<title>`GC_finish_collection (18 samples, 0.40%)</title><rect x="744.1" y="5653" width="4.7" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="747.14" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="21.2" y="1973" width="0.6" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="24.24" y="1983.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.1" y="3013" width="0.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="56.12" y="3023.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="53.1" y="3173" width="1.1" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="56.12" y="3183.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1413" width="1.0" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="58.48" y="1423.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2885" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="65.79" y="2895.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (5 samples, 0.11%)</title><rect x="252.0" y="5461" width="1.3" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="255.01" y="5471.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2757" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="17.70" y="2767.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="96.2" y="4661" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="99.25" y="4671.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (36 samples, 0.80%)</title><rect x="14.2" y="4293" width="9.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="17.18" y="4303.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.3" y="1077" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="65.27" y="1087.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="125.0" y="5637" width="0.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="127.99" y="5647.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="64.1" y="1093" width="0.3" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="67.10" y="1103.5" ></text>
</g>
<g >
<title>`MAYBE-SPILL-TO-REGISTER-SAVE-AREA^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="757" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="62.13" y="767.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (2 samples, 0.04%)</title><rect x="23.9" y="3909" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="26.85" y="3919.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="320.2" y="5189" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="323.22" y="5199.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DILocation*, llvm: (1 samples, 0.02%)</title><rect x="291.7" y="5365" width="0.3" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="294.74" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="2981" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="72.85" y="2991.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (4 samples, 0.09%)</title><rect x="153.0" y="5093" width="1.0" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="155.96" y="5103.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="180.9" y="5557" width="0.3" height="15.0" fill="rgb(202,52,52)" rx="2" ry="2" />
<text  x="183.92" y="5567.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="310.3" y="5445" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="313.29" y="5455.5" ></text>
</g>
<g >
<title>`VARIABLE-IS-SPECIAL-P^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="22.0" y="2485" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="25.02" y="2495.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="243.4" y="5541" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="246.39" y="5551.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;std::__1::pair&lt;llvm (1 samples, 0.02%)</title><rect x="546.0" y="5413" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="549.03" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="24.6" y="4069" width="0.6" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="27.64" y="4079.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (91 samples, 2.02%)</title><rect x="12.4" y="5397" width="23.7" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="15.35" y="5407.5" >`..</text>
</g>
<g >
<title>`llvm::BasicAAResult::DecomposeGEPExpression(llvm::Value const*, (1 samples, 0.02%)</title><rect x="505.8" y="5509" width="0.2" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="508.78" y="5519.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (2 samples, 0.04%)</title><rect x="606.4" y="5621" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="609.40" y="5631.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1317" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="65.53" y="1327.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (3 samples, 0.07%)</title><rect x="202.1" y="5573" width="0.8" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="205.09" y="5583.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="16.0" y="3637" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="19.01" y="3647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="67.5" y="1509" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="70.50" y="1519.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (3 samples, 0.07%)</title><rect x="71.4" y="3925" width="0.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="74.42" y="3935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (42 samples, 0.93%)</title><rect x="128.4" y="5093" width="11.0" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="131.39" y="5103.5" ></text>
</g>
<g >
<title>`COMPILE-HEADER-CHECK^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="330.7" y="5093" width="1.0" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="333.68" y="5103.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Value const*&gt;::insert(llvm::Value c (1 samples, 0.02%)</title><rect x="639.1" y="5573" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="642.07" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5013" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="130.35" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4005" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="135.31" y="4015.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.5" y="1525" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="65.53" y="1535.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.0" y="5173" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="100.03" y="5183.5" ></text>
</g>
<g >
<title>`wrapped_cl__make_hash_table_T_spFixnum_spNumber_spReal_spSymbol (1 samples, 0.02%)</title><rect x="273.2" y="5557" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="276.18" y="5567.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="391.6" y="5349" width="0.2" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="394.57" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="66.2" y="1813" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="69.19" y="1823.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.04%)</title><rect x="68.8" y="2293" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="71.80" y="2303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4709" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="137.40" y="4719.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (4 samples, 0.09%)</title><rect x="56.5" y="293" width="1.1" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="59.52" y="303.5" ></text>
</g>
<g >
<title>`eliminateDeadStores(llvm::Function&amp;, llvm::AAResults*, llvm::Me (5 samples, 0.11%)</title><rect x="451.7" y="5669" width="1.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="454.68" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="68.0" y="3157" width="1.8" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="71.02" y="3167.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="67.0" y="1701" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="69.97" y="1711.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::Valu (1 samples, 0.02%)</title><rect x="700.8" y="5445" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="703.75" y="5455.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="356.0" y="5157" width="0.3" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="359.03" y="5167.5" ></text>
</g>
<g >
<title>`llvm::BitstreamWriter::EmitVBR(unsigned int, unsigned int) (1 samples, 0.02%)</title><rect x="726.1" y="5637" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="729.10" y="5647.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4469" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="100.29" y="4479.5" ></text>
</g>
<g >
<title>`llvm::TrackingMDRef::~TrackingMDRef() (1 samples, 0.02%)</title><rect x="520.7" y="5637" width="0.2" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="523.68" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="2485" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="65.53" y="2495.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (1 samples, 0.02%)</title><rect x="167.6" y="4997" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="170.59" y="5007.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (5 samples, 0.11%)</title><rect x="338.3" y="5237" width="1.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="341.26" y="5247.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="3125" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="64.75" y="3135.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (2 samples, 0.04%)</title><rect x="238.9" y="5285" width="0.6" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="241.94" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4085" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="139.76" y="4095.5" ></text>
</g>
<g >
<title>`getAllocationData(llvm::Value const*, AllocType, llvm::TargetLi (1 samples, 0.02%)</title><rect x="521.7" y="5605" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="524.73" y="5615.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="49.2" y="5125" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="52.20" y="5135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (60 samples, 1.33%)</title><rect x="128.1" y="5333" width="15.7" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="131.13" y="5343.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::StringMapIterator&lt;llvm::Value*&gt;, bool&gt; llv (1 samples, 0.02%)</title><rect x="366.5" y="5253" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="369.48" y="5263.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;(anonymous namespace)::S (1 samples, 0.02%)</title><rect x="440.7" y="5621" width="0.3" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="443.71" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.04%)</title><rect x="131.3" y="4517" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="134.27" y="4527.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (3 samples, 0.07%)</title><rect x="463.4" y="5621" width="0.8" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="466.44" y="5631.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.02%)</title><rect x="392.1" y="5365" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="395.10" y="5375.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="62.5" y="3205" width="0.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="65.53" y="3215.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="63.6" y="2517" width="1.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="66.58" y="2527.5" ></text>
</g>
<g >
<title>`GC_push_marked (1 samples, 0.02%)</title><rect x="153.7" y="4981" width="0.3" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="156.74" y="4991.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::asMinimalSimpleString() const (1 samples, 0.02%)</title><rect x="25.9" y="4261" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="28.94" y="4271.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (23 samples, 0.51%)</title><rect x="38.7" y="4773" width="6.1" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="41.75" y="4783.5" ></text>
</g>
<g >
<title>`core::cl__load(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2,981 samples, 66.02%)</title><rect x="10.0" y="6037" width="779.1" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="13.00" y="6047.5" >`core::cl__load(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt</text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((SPECIAL-VARIABLE-INFO T T T (2 samples, 0.04%)</title><rect x="23.9" y="4005" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="26.85" y="4015.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="64.1" y="1749" width="1.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="67.10" y="1759.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldCastOperand(unsigned int, llvm::Constant*, ll (1 samples, 0.02%)</title><rect x="574.3" y="5557" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="577.26" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (19 samples, 0.42%)</title><rect x="152.4" y="5349" width="5.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="155.44" y="5359.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.04%)</title><rect x="28.0" y="4389" width="0.6" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="31.03" y="4399.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (3 samples, 0.07%)</title><rect x="353.4" y="5253" width="0.8" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="356.42" y="5263.5" ></text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5525" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="736.42" y="5535.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="139.1" y="4469" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="142.11" y="4479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (60 samples, 1.33%)</title><rect x="128.1" y="5253" width="15.7" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="131.13" y="5263.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="130.5" y="4661" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="133.48" y="4671.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="386.1" y="5349" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="389.08" y="5359.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="340.3" y="5221" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="343.35" y="5231.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2469" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="66.05" y="2479.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="580.3" y="5589" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="583.27" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.6" y="4885" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="100.55" y="4895.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="38.0" y="4565" width="0.2" height="15.0" fill="rgb(237,103,103)" rx="2" ry="2" />
<text  x="40.96" y="4575.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T LEXICAL-VARIABLE-INFO))^METHO (1 samples, 0.02%)</title><rect x="45.3" y="4949" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="48.28" y="4959.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="3189" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="62.40" y="3199.5" ></text>
</g>
<g >
<title>`ALLOCA^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="314.5" y="5349" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="317.47" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="12.4" y="4437" width="1.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="15.35" y="4447.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.8" y="2533" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="65.79" y="2543.5" ></text>
</g>
<g >
<title>`llvm::Function::dropAllReferences() (10 samples, 0.22%)</title><rect x="717.7" y="5669" width="2.7" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="720.74" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT-TLL-LIST^CC-HIR-TO-MIR^FN^^ (2 samples, 0.04%)</title><rect x="190.9" y="5573" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="193.85" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4085" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="139.23" y="4095.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (5 samples, 0.11%)</title><rect x="141.7" y="5013" width="1.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="144.72" y="5023.5" ></text>
</g>
<g >
<title>`void llvm::BitstreamWriter::EmitRecord&lt;llvm::SmallVector&lt;unsign (2 samples, 0.04%)</title><rect x="726.1" y="5653" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="729.10" y="5663.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::track(void*, llvm::Metadata&amp;, llvm::Poi (1 samples, 0.02%)</title><rect x="699.4" y="5589" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="702.44" y="5599.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (9 samples, 0.20%)</title><rect x="404.6" y="5429" width="2.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="407.64" y="5439.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignment(llvm::Type*, bool) const (1 samples, 0.02%)</title><rect x="647.2" y="5605" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="650.17" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (26 samples, 0.58%)</title><rect x="16.3" y="3333" width="6.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="19.27" y="3343.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="66.5" y="1461" width="0.2" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="69.45" y="1471.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1589" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="20.58" y="1599.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="55.5" y="1717" width="1.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="58.48" y="1727.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4821" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="736.42" y="4831.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.02%)</title><rect x="141.7" y="4949" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="144.72" y="4959.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (10 samples, 0.22%)</title><rect x="17.3" y="2085" width="2.6" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="20.32" y="2095.5" ></text>
</g>
<g >
<title>`GC_help_marker (1,533 samples, 33.95%)</title><rect x="789.3" y="6357" width="400.7" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="792.35" y="6367.5" >`GC_help_marker</text>
</g>
<g >
<title>`llvm::SHA1::writebyte(unsigned char) (1 samples, 0.02%)</title><rect x="727.7" y="5669" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="730.67" y="5679.5" ></text>
</g>
<g >
<title>`llvm::Value::getName() const (1 samples, 0.02%)</title><rect x="726.9" y="5653" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="729.89" y="5663.5" ></text>
</g>
<g >
<title>`wrapped_core__cons_length_Cons_sp (1 samples, 0.02%)</title><rect x="152.2" y="5317" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="155.17" y="5327.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="737.1" y="5669" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="740.08" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (36 samples, 0.80%)</title><rect x="14.2" y="3989" width="9.4" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="17.18" y="3999.5" ></text>
</g>
<g >
<title>`GET-DILOCATION^LLVM-SYS^FN^^ (12 samples, 0.27%)</title><rect x="298.3" y="5429" width="3.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="301.27" y="5439.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="157.1" y="5205" width="0.3" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="160.14" y="5215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="131.3" y="4597" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="134.27" y="4607.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="63.3" y="2629" width="0.3" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="66.32" y="2639.5" ></text>
</g>
<g >
<title>`GC_mark_some (2 samples, 0.04%)</title><rect x="171.8" y="5141" width="0.5" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="174.78" y="5151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5317" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="130.35" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="134.4" y="4789" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="137.40" y="4799.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="560.9" y="5429" width="0.3" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="563.93" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (36 samples, 0.80%)</title><rect x="14.2" y="4741" width="9.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="17.18" y="4751.5" ></text>
</g>
<g >
<title>`IRC-CREATE-FUNCTION-DESCRIPTION^COMPILER^FN^^ (27 samples, 0.60%)</title><rect x="368.3" y="5413" width="7.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="371.31" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'TAGBODY) T T T)) (36 samples, 0.80%)</title><rect x="14.2" y="4069" width="9.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="17.18" y="4079.5" ></text>
</g>
<g >
<title>`GC_mark_local (2 samples, 0.04%)</title><rect x="171.8" y="5109" width="0.5" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="174.78" y="5119.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2853" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="65.53" y="2863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="136.2" y="4725" width="0.6" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="139.23" y="4735.5" ></text>
</g>
<g >
<title>`HIR-&gt;MIR^CLASP-CLEAVIR^FN^^ (369 samples, 8.17%)</title><rect x="183.8" y="5653" width="96.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="186.80" y="5663.5" >`HIR-&gt;MIR^C..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4629" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="135.31" y="4639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4341" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="137.93" y="4351.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.20%)</title><rect x="24.6" y="4917" width="2.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="27.64" y="4927.5" ></text>
</g>
<g >
<title>`UNSAFE-FUNCALL1^CORE^FN^^ (1 samples, 0.02%)</title><rect x="23.1" y="3573" width="0.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="26.07" y="3583.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="340.9" y="5109" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="343.87" y="5119.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="65.9" y="997" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="68.93" y="1007.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (88 samples, 1.95%)</title><rect x="49.5" y="4773" width="23.0" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="52.46" y="4783.5" >`..</text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T  (17 samples, 0.38%)</title><rect x="291.2" y="5493" width="4.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="294.21" y="5503.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="14.2" y="3413" width="1.0" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="17.18" y="3423.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (1 samples, 0.02%)</title><rect x="35.4" y="4933" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="38.35" y="4943.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="741" width="1.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="57.17" y="751.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="40.6" y="4053" width="0.2" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="43.58" y="4063.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2869" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="65.79" y="2879.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="304.5" y="5445" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="307.54" y="5455.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="366.5" y="5349" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="369.48" y="5359.5" ></text>
</g>
<g >
<title>`FORCE-DISPATCHER^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.0" y="5461" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="737.99" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4229" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="137.93" y="4239.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="23.1" y="3909" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="26.07" y="3919.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="210.5" y="5413" width="0.2" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="213.46" y="5423.5" ></text>
</g>
<g >
<title>`llvm::InstructionCombiningPass::runOnFunction(llvm::Function&amp;) (231 samples, 5.12%)</title><rect x="462.4" y="5669" width="60.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="465.40" y="5679.5" >`llvm:..</text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.02%)</title><rect x="654.0" y="5589" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="656.97" y="5599.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="400.7" y="5413" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="403.72" y="5423.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (2 samples, 0.04%)</title><rect x="15.5" y="3541" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="18.49" y="3551.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="58.6" y="1013" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="61.61" y="1023.5" ></text>
</g>
<g >
<title>`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="737.3" y="5669" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="740.34" y="5679.5" ></text>
</g>
<g >
<title>`ALLOCA-T*^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="285.7" y="5541" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="288.73" y="5551.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="429.7" y="5509" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="432.73" y="5519.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (2 samples, 0.04%)</title><rect x="361.0" y="5253" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="363.99" y="5263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="128.7" y="4613" width="1.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="131.65" y="4623.5" ></text>
</g>
<g >
<title>`GC_allocobj (1 samples, 0.02%)</title><rect x="403.6" y="5317" width="0.3" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="406.59" y="5327.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="3173" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="66.05" y="3183.5" ></text>
</g>
<g >
<title>`llvm::PtrUseVisitor&lt;llvm::sroa::AllocaSlices::SliceBuilder&gt;::vi (1 samples, 0.02%)</title><rect x="581.1" y="5621" width="0.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="584.05" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (1 samples, 0.02%)</title><rect x="64.9" y="1445" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="67.88" y="1455.5" ></text>
</g>
<g >
<title>`llvm::UndefValue::get(llvm::Type*) (1 samples, 0.02%)</title><rect x="343.0" y="5205" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="345.96" y="5215.5" ></text>
</g>
<g >
<title>`OPTIMIZED-FLOAT-ADD-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (2 samples, 0.04%)</title><rect x="166.3" y="5061" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="169.29" y="5071.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="312.4" y="5445" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="315.38" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="69.8" y="2837" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="72.85" y="2847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="137.8" y="4821" width="0.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="140.80" y="4831.5" ></text>
</g>
<g >
<title>`llvm::TrackingMDRef::~TrackingMDRef() (1 samples, 0.02%)</title><rect x="638.5" y="5573" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="641.55" y="5583.5" ></text>
</g>
<g >
<title>`core::cl__class_of(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="84.5" y="4453" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="87.49" y="4463.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="401.0" y="5413" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="403.98" y="5423.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2853" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="66.05" y="2863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4453" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="139.76" y="4463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4661" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="139.23" y="4671.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (4 samples, 0.09%)</title><rect x="396.5" y="5333" width="1.1" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="399.54" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="134.1" y="4549" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="137.14" y="4559.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2901" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="66.05" y="2911.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1365" width="1.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="57.17" y="1375.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="82.9" y="4485" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="85.92" y="4495.5" ></text>
</g>
<g >
<title>`llvm::CallInst::onlyReadsMemory() const (1 samples, 0.02%)</title><rect x="664.4" y="5557" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="667.42" y="5567.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DILocalVariable*,  (2 samples, 0.04%)</title><rect x="359.2" y="5189" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="362.17" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (3 samples, 0.07%)</title><rect x="23.9" y="4037" width="0.7" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="26.85" y="4047.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (4 samples, 0.09%)</title><rect x="56.5" y="917" width="1.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="59.52" y="927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4533" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="139.76" y="4543.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.02%)</title><rect x="489.1" y="5541" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="492.06" y="5551.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="143.8" y="5253" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="146.81" y="5263.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getPointerDependencyFrom(llvm::M (65 samples, 1.44%)</title><rect x="544.7" y="5557" width="17.0" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="547.72" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="1381" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="20.58" y="1391.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::BasicBlock_O&gt; gctools::GCObjectApprop (1 samples, 0.02%)</title><rect x="350.8" y="5189" width="0.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="353.80" y="5199.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="68.0" y="2517" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="71.02" y="2527.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (3 samples, 0.07%)</title><rect x="736.0" y="5205" width="0.8" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="739.03" y="5215.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="662.6" y="5509" width="0.3" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="665.59" y="5519.5" ></text>
</g>
<g >
<title>`llvm::LLVMContext::shouldDiscardValueNames() const (1 samples, 0.02%)</title><rect x="353.7" y="5157" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="356.68" y="5167.5" ></text>
</g>
<g >
<title>`llvm::MemorySSA::CachingWalker::getClobberingMemoryAccess(llvm: (2 samples, 0.04%)</title><rect x="529.6" y="5589" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="532.57" y="5599.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Value const*&gt;::insert(llvm::Value c (2 samples, 0.04%)</title><rect x="665.2" y="5557" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="668.21" y="5567.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5557" width="1.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="14.31" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.6" y="4693" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="100.55" y="4703.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="679.3" y="5557" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="682.32" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="97.6" y="4773" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="100.55" y="4783.5" ></text>
</g>
<g >
<title>`IRC-CALCULATE-ENTRY^COMPILER^FN^^ (27 samples, 0.60%)</title><rect x="382.7" y="5429" width="7.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="385.69" y="5439.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="4661" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="100.55" y="4671.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="2373" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="65.01" y="2383.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::~ScalarEvolution() (1 samples, 0.02%)</title><rect x="535.6" y="5621" width="0.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="538.58" y="5631.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1989" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="69.19" y="1999.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Metadata*, llvm::Metada (1 samples, 0.02%)</title><rect x="360.5" y="5269" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="363.47" y="5279.5" ></text>
</g>
<g >
<title>`isUseTriviallyOptimizableToLiveOnEntry(llvm::AAResults&amp;, llvm:: (3 samples, 0.07%)</title><rect x="528.8" y="5605" width="0.8" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="531.78" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="4165" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="131.91" y="4175.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="853" width="1.0" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="58.48" y="863.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL-BINDING^CLEAVIR-GENERATE-AST^FN^^ (27 samples, 0.60%)</title><rect x="16.0" y="3781" width="7.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="19.01" y="3791.5" ></text>
</g>
<g >
<title>`llvm::CallInst::paramHasAttr(unsigned int, llvm::Attribute::Att (1 samples, 0.02%)</title><rect x="484.4" y="5589" width="0.2" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="487.35" y="5599.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.13%)</title><rect x="12.4" y="5061" width="1.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="15.35" y="5071.5" ></text>
</g>
<g >
<title>`llvmo::ConstantInt_O::create(llvm::ConstantInt*) (1 samples, 0.02%)</title><rect x="403.6" y="5397" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="406.59" y="5407.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="312.9" y="5413" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="315.91" y="5423.5" ></text>
</g>
<g >
<title>`cc_enclose (3 samples, 0.07%)</title><rect x="160.5" y="4965" width="0.8" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="163.54" y="4975.5" ></text>
</g>
<g >
<title>`IRC-BASIC-BLOCK-CREATE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="338.0" y="5237" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="341.00" y="5247.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout con (16 samples, 0.35%)</title><rect x="509.4" y="5589" width="4.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="512.44" y="5599.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="386.1" y="5381" width="0.2" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="389.08" y="5391.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="355.2" y="5157" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="358.24" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (46 samples, 1.02%)</title><rect x="159.5" y="5253" width="12.0" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="162.49" y="5263.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="445.7" y="5573" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="448.67" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="151.9" y="5429" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="154.91" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="65.4" y="2517" width="0.8" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="68.41" y="2527.5" ></text>
</g>
<g >
<title>`COMPUTE-APPLICABLE-METHODS^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="19.1" y="1941" width="0.6" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="22.15" y="1951.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="595.7" y="5381" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="598.69" y="5391.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.1" y="2789" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="56.12" y="2799.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (1 samples, 0.02%)</title><rect x="57.8" y="933" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="60.83" y="943.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (2 samples, 0.04%)</title><rect x="415.6" y="5493" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="418.62" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="145.1" y="5269" width="1.6" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="148.12" y="5279.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="567.5" y="5365" width="0.2" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="570.46" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.6" y="2869" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="56.65" y="2879.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="459.0" y="5589" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="462.00" y="5599.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="62.8" y="1173" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="65.79" y="1183.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="64.9" y="885" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="67.88" y="895.5" ></text>
</g>
<g >
<title>`llvm::CallSiteBase&lt;llvm::Function, llvm::BasicBlock, llvm::Valu (1 samples, 0.02%)</title><rect x="622.1" y="5621" width="0.2" height="15.0" fill="rgb(75,222,75)" rx="2" ry="2" />
<text  x="625.08" y="5631.5" ></text>
</g>
<g >
<title>`MAKE-TEMPS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="133.9" y="4917" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="136.88" y="4927.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="5157" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="100.55" y="5167.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="315.8" y="5317" width="1.0" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="318.78" y="5327.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="1013" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="61.35" y="1023.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="70.1" y="2965" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="73.11" y="2975.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="581" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="65.53" y="591.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (9 samples, 0.20%)</title><rect x="24.6" y="4869" width="2.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="27.64" y="4879.5" ></text>
</g>
<g >
<title>`PROCESS-LTV^CLASP-CLEAVIR-AST^FN^^ (17 samples, 0.38%)</title><rect x="120.6" y="5637" width="4.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="123.55" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="4165" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="131.65" y="4175.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="50.2" y="3221" width="1.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="53.25" y="3231.5" ></text>
</g>
<g >
<title>`IRC-LOAD^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="353.4" y="5285" width="0.8" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="356.42" y="5295.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.02%)</title><rect x="245.5" y="5589" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="248.48" y="5599.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (3 samples, 0.07%)</title><rect x="396.8" y="5173" width="0.8" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="399.80" y="5183.5" ></text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="53.6" y="2565" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="56.65" y="2575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4245" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="139.23" y="4255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.4" y="4149" width="0.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="132.44" y="4159.5" ></text>
</g>
<g >
<title>`ALLOCA^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="285.7" y="5525" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="288.73" y="5535.5" ></text>
</g>
<g >
<title>`POSITION-IF-NOT^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="41.6" y="4277" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="44.62" y="4287.5" ></text>
</g>
<g >
<title>`wrapped_core__vset_T_spAbstractSimpleVector_spsize_t (1 samples, 0.02%)</title><rect x="80.8" y="4613" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="83.83" y="4623.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="2773" width="1.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="60.57" y="2783.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="44.5" y="4501" width="0.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="47.50" y="4511.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="885" width="0.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="68.93" y="895.5" ></text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (1 samples, 0.02%)</title><rect x="467.6" y="5509" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="470.63" y="5519.5" ></text>
</g>
<g >
<title>`llvm::getOrEnforceKnownAlignment(llvm::Value*, unsigned int, ll (17 samples, 0.38%)</title><rect x="509.2" y="5605" width="4.4" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="512.18" y="5615.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="229.8" y="5573" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="232.80" y="5583.5" ></text>
</g>
<g >
<title>`ENVIRONMENT-POLICY^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="79.8" y="3653" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="82.78" y="3663.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (233 samples, 5.16%)</title><rect x="36.4" y="5285" width="60.9" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="39.40" y="5295.5" >`CONVE..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="128.7" y="4629" width="1.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="131.65" y="4639.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2341" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="64.75" y="2351.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="320.2" y="5253" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="323.22" y="5263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4373" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="136.62" y="4383.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="571.9" y="5477" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="574.90" y="5487.5" ></text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (1 samples, 0.02%)</title><rect x="306.9" y="5461" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="309.89" y="5471.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="662.3" y="5525" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="665.33" y="5535.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="66.2" y="2277" width="1.8" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="69.19" y="2287.5" ></text>
</g>
<g >
<title>`llvm::ScopedNoAliasAAResult::mayAliasInScopes(llvm::MDNode cons (1 samples, 0.02%)</title><rect x="505.5" y="5509" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="508.52" y="5519.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (2 samples, 0.04%)</title><rect x="660.2" y="5477" width="0.6" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="663.24" y="5487.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getDependency(llvm::Instruction* (1 samples, 0.02%)</title><rect x="451.9" y="5653" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="454.94" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.5" y="5269" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="180.53" y="5279.5" ></text>
</g>
<g >
<title>`CLOSURE-CALL-OR-INVOKE^CLASP-CLEAVIR^FN^^ (18 samples, 0.40%)</title><rect x="340.6" y="5269" width="4.7" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="343.61" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LOCALLY) T T T)) (1 samples, 0.02%)</title><rect x="70.6" y="1989" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="73.63" y="1999.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="25.9" y="4277" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="28.94" y="4287.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::Type*, std::__1::allocator&lt;llvm::Ty (2 samples, 0.04%)</title><rect x="388.7" y="5365" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="391.70" y="5375.5" ></text>
</g>
<g >
<title>`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^ (2,981 samples, 66.02%)</title><rect x="10.0" y="5941" width="779.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="13.00" y="5951.5" >`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`GC_generic_malloc_inner (4 samples, 0.09%)</title><rect x="75.3" y="3765" width="1.1" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="78.34" y="3775.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="499.0" y="5541" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="501.99" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4549" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="137.40" y="4559.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'FUNCTION) T T T) (1 samples, 0.02%)</title><rect x="58.3" y="789" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="61.35" y="799.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.04%)</title><rect x="399.7" y="5365" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="402.67" y="5375.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="114.8" y="5525" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="117.80" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (2 samples, 0.04%)</title><rect x="21.2" y="1813" width="0.6" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="24.24" y="1823.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="44.2" y="4549" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="47.24" y="4559.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::BinaryOp_match&lt;llvm::PatternMatch::bin (1 samples, 0.02%)</title><rect x="652.7" y="5541" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="655.66" y="5551.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.02%)</title><rect x="166.5" y="5029" width="0.3" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="169.55" y="5039.5" ></text>
</g>
<g >
<title>`IRC-TMV-PRIMARY^COMPILER^FN^^ (6 samples, 0.13%)</title><rect x="392.9" y="5413" width="1.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="395.88" y="5423.5" ></text>
</g>
<g >
<title>`INSTANCE-CLASS^CORE^FN^^ (1 samples, 0.02%)</title><rect x="193.5" y="5541" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="196.47" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (22 samples, 0.49%)</title><rect x="16.3" y="2693" width="5.7" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="19.27" y="2703.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;std::__1::pair&lt;llvm::Val (1 samples, 0.02%)</title><rect x="712.8" y="5621" width="0.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="715.77" y="5631.5" ></text>
</g>
<g >
<title>`llvm::SmallVector&lt;llvm::Value*, 8u&gt;::SmallVector&lt;llvm::Use*, vo (2 samples, 0.04%)</title><rect x="650.3" y="5605" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="653.31" y="5615.5" ></text>
</g>
<g >
<title>`llvm::Value::doRAUW(llvm::Value*, bool) (1 samples, 0.02%)</title><rect x="425.5" y="5701" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="428.55" y="5711.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="336.4" y="5077" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="339.43" y="5087.5" ></text>
</g>
<g >
<title>`llvm::CallInst::getReturnedArgOperand() const (1 samples, 0.02%)</title><rect x="436.8" y="5525" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="439.79" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((LEXICAL-VARIABLE-INFO T T T (1 samples, 0.02%)</title><rect x="62.3" y="1701" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="65.27" y="1711.5" ></text>
</g>
<g >
<title>`GC_mark_from (3 samples, 0.07%)</title><rect x="192.2" y="5333" width="0.7" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="195.16" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4213" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="138.71" y="4223.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="155.8" y="5173" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="158.83" y="5183.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (15 samples, 0.33%)</title><rect x="90.2" y="4469" width="4.0" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="93.23" y="4479.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="61.2" y="2677" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="64.22" y="2687.5" ></text>
</g>
<g >
<title>`wrapped_cl__error_T_spList_sp (2 samples, 0.04%)</title><rect x="733.4" y="5669" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="736.42" y="5679.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="59.7" y="3333" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="62.66" y="3343.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="56.5" y="1237" width="1.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="59.52" y="1247.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="657.4" y="5493" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="660.37" y="5503.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="64.4" y="933" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="67.36" y="943.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::Function&gt;, llvm::Sym (1 samples, 0.02%)</title><rect x="589.7" y="5653" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="592.68" y="5663.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2517" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="17.70" y="2527.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="229.3" y="5509" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="232.27" y="5519.5" ></text>
</g>
<g >
<title>`IRC-CALCULATE-REAL-ARGS^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="389.7" y="5429" width="0.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="392.74" y="5439.5" ></text>
</g>
<g >
<title>`ADD-NAMED-CREATOR^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="123.4" y="5557" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="126.43" y="5567.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getPredicateOnEdge(unsigned int, llvm::Val (11 samples, 0.24%)</title><rect x="434.7" y="5621" width="2.9" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="437.70" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T LEXICAL-VARIABLE-INFO T T (1 samples, 0.02%)</title><rect x="66.2" y="1349" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="69.19" y="1359.5" ></text>
</g>
<g >
<title>`wrapped_cl__acons_T_spT_spT_sp (1 samples, 0.02%)</title><rect x="51.0" y="2373" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="54.03" y="2383.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="52.6" y="3685" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="55.60" y="3695.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (1 samples, 0.02%)</title><rect x="203.1" y="5413" width="0.3" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="206.14" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4053" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="139.76" y="4063.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="351.1" y="5125" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="354.06" y="5135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.02%)</title><rect x="131.0" y="4581" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="134.01" y="4591.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.9" y="2949" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="73.89" y="2959.5" ></text>
</g>
<g >
<title>`ALLOCA^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="285.5" y="5525" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="288.46" y="5535.5" ></text>
</g>
<g >
<title>`llvm::DILocation::getImpl(llvm::LLVMContext&amp;, unsigned int, uns (2 samples, 0.04%)</title><rect x="326.5" y="5205" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="329.50" y="5215.5" ></text>
</g>
<g >
<title>`wrapped_cl__boundp_Symbol_sp (1 samples, 0.02%)</title><rect x="144.9" y="5269" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="147.86" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="63.3" y="2661" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="66.32" y="2671.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="125.8" y="5605" width="0.2" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="128.78" y="5615.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="338.0" y="5157" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="341.00" y="5167.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (2 samples, 0.04%)</title><rect x="283.4" y="5397" width="0.5" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="286.37" y="5407.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.02%)</title><rect x="235.3" y="5365" width="0.2" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="238.28" y="5375.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="407.5" y="5381" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="410.51" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="949" width="1.1" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="59.52" y="959.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="63.1" y="2965" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="66.05" y="2975.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.0" y="1237" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="65.01" y="1247.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="62.3" y="1125" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="65.27" y="1135.5" ></text>
</g>
<g >
<title>`FIXNUMP^CORE^FN^^ (1 samples, 0.02%)</title><rect x="61.0" y="2437" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="63.96" y="2447.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.9" y="1205" width="0.2" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="67.88" y="1215.5" ></text>
</g>
<g >
<title>`llvm::ValueEnumerator::EnumerateValue(llvm::Value const*) (3 samples, 0.07%)</title><rect x="724.8" y="5637" width="0.8" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="727.80" y="5647.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.02%)</title><rect x="48.2" y="5077" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="51.16" y="5087.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="52.9" y="3205" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="55.86" y="3215.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="366.5" y="5317" width="0.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="369.48" y="5327.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::Instruction&gt;, llvm:: (2 samples, 0.04%)</title><rect x="696.8" y="5573" width="0.6" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="699.83" y="5583.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (9 samples, 0.20%)</title><rect x="234.0" y="5541" width="2.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="236.98" y="5551.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getValueOnEdge(llvm:: (11 samples, 0.24%)</title><rect x="434.7" y="5605" width="2.9" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="437.70" y="5615.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="413.0" y="5317" width="0.3" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="416.00" y="5327.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1445" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="65.01" y="1455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4565" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="137.14" y="4575.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="524.6" y="5541" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="527.60" y="5551.5" ></text>
</g>
<g >
<title>`core::StackFrameDynamicScopeManager::new_binding(core::Argument (1 samples, 0.02%)</title><rect x="386.9" y="5349" width="0.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="389.87" y="5359.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::PassI (1 samples, 0.02%)</title><rect x="690.6" y="5605" width="0.2" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="693.56" y="5615.5" ></text>
</g>
<g >
<title>`gctools::multiple_values&lt;core::T_O&gt; core::eval::applyLastArgsPL (5 samples, 0.11%)</title><rect x="735.8" y="5669" width="1.3" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="738.77" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4517" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="141.85" y="4527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4853" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="140.28" y="4863.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="53.9" y="2837" width="0.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="56.91" y="2847.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (5 samples, 0.11%)</title><rect x="252.0" y="5493" width="1.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="255.01" y="5503.5" ></text>
</g>
<g >
<title>`llvmo::Pass_O::externalObject() const (1 samples, 0.02%)</title><rect x="101.7" y="5589" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="104.73" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="24.6" y="3893" width="0.6" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="27.64" y="3903.5" ></text>
</g>
<g >
<title>`IRC-STORE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="362.3" y="5349" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="365.30" y="5359.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="66.2" y="1525" width="0.3" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="69.19" y="1535.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="393.9" y="5269" width="0.3" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="396.92" y="5279.5" ></text>
</g>
<g >
<title>`llvm::KnownBits::zextOrTrunc(unsigned int) (1 samples, 0.02%)</title><rect x="642.7" y="5445" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="645.73" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="24.6" y="4133" width="1.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="27.64" y="4143.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1877" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="20.58" y="1887.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="83.4" y="4469" width="1.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="86.44" y="4479.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (5 samples, 0.11%)</title><rect x="181.4" y="5541" width="1.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="184.45" y="5551.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (4 samples, 0.09%)</title><rect x="75.3" y="3813" width="1.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="78.34" y="3823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4117" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="141.85" y="4127.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (70 samples, 1.55%)</title><rect x="52.9" y="3445" width="18.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="55.86" y="3455.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="528.5" y="5429" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="531.52" y="5439.5" ></text>
</g>
<g >
<title>`llvm::ValueEnumerator::EnumerateType(llvm::Type*) (1 samples, 0.02%)</title><rect x="729.0" y="5653" width="0.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="731.98" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="64.1" y="1349" width="0.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="67.10" y="1359.5" ></text>
</g>
<g >
<title>`MEMBER1^CORE^FN^^ (2 samples, 0.04%)</title><rect x="110.1" y="5589" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="113.10" y="5599.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="53.4" y="2821" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="56.38" y="2831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.9" y="3749" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="131.91" y="3759.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="30.9" y="4293" width="0.3" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="33.91" y="4303.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="236.9" y="5557" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="239.85" y="5567.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="24.6" y="4485" width="1.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="27.64" y="4495.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (7 samples, 0.16%)</title><rect x="57.6" y="2709" width="1.8" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="60.57" y="2719.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (7 samples, 0.16%)</title><rect x="39.3" y="4341" width="1.8" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="42.27" y="4351.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2133" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="65.79" y="2143.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="138.6" y="4677" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="141.58" y="4687.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="124.5" y="5429" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="127.47" y="5439.5" ></text>
</g>
<g >
<title>`llvm::UnaryInstruction::UnaryInstruction(llvm::Type*, unsigned  (1 samples, 0.02%)</title><rect x="334.6" y="4997" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="337.60" y="5007.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1077" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="68.93" y="1087.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="16.8" y="2389" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="19.80" y="2399.5" ></text>
</g>
<g >
<title>`REPLACE-OUTPUTS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (5 samples, 0.11%)</title><rect x="243.1" y="5589" width="1.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="246.13" y="5599.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="156.1" y="5173" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="159.10" y="5183.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="52.9" y="3301" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="55.86" y="3311.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2885" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="65.01" y="2895.5" ></text>
</g>
<g >
<title>`llvm::MemoryLocation::get(llvm::LoadInst const*) (1 samples, 0.02%)</title><rect x="566.7" y="5477" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="569.68" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.5" y="2693" width="0.3" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="65.53" y="2703.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T CLASP))^METHOD^^ (6 samples, 0.13%)</title><rect x="50.0" y="3237" width="1.6" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="52.99" y="3247.5" ></text>
</g>
<g >
<title>`EXPANDER^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="309" width="1.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="57.17" y="319.5" ></text>
</g>
<g >
<title>`core::cl__boundp(gctools::smart_ptr&lt;core::Symbol_O&gt;) (1 samples, 0.02%)</title><rect x="144.9" y="5253" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="147.86" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="50.8" y="3045" width="0.8" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="53.77" y="3055.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="382.4" y="5429" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="385.43" y="5439.5" ></text>
</g>
<g >
<title>`llvm::iterator_range&lt;llvm::df_iterator&lt;llvm::BasicBlock*, llvm: (1 samples, 0.02%)</title><rect x="580.5" y="5605" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="583.53" y="5615.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="53.4" y="2885" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="56.38" y="2895.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="57.8" y="1077" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="60.83" y="1087.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (5 samples, 0.11%)</title><rect x="226.4" y="5557" width="1.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="229.40" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.9" y="1077" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="67.88" y="1087.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="67.5" y="1429" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="70.50" y="1439.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="312.4" y="5397" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="315.38" y="5407.5" ></text>
</g>
<g >
<title>`core::ll_read_char(gctools::smart_ptr&lt;core::T_O&gt;, bool, unsigne (1 samples, 0.02%)</title><rect x="732.6" y="5749" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="735.64" y="5759.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="694.2" y="5605" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="697.22" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="142.5" y="4917" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="145.50" y="4927.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="52.6" y="3813" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="55.60" y="3823.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="66.2" y="2389" width="1.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="69.19" y="2399.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="311.1" y="5413" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="314.08" y="5423.5" ></text>
</g>
<g >
<title>`llvm::MDOperand::track(llvm::Metadata*) (1 samples, 0.02%)</title><rect x="359.9" y="5173" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="362.95" y="5183.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="527.0" y="5525" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="529.95" y="5535.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.02%)</title><rect x="354.5" y="5205" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="357.46" y="5215.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (1 samples, 0.02%)</title><rect x="161.8" y="5045" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="164.84" y="5055.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="385.8" y="5365" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="388.82" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (8 samples, 0.18%)</title><rect x="63.3" y="2901" width="2.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="66.32" y="2911.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="57.6" y="1509" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="60.57" y="1519.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="77.4" y="4549" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="80.43" y="4559.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (4 samples, 0.09%)</title><rect x="565.6" y="5445" width="1.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="568.63" y="5455.5" ></text>
</g>
<g >
<title>`llvm::Value* SimplifyCall&lt;llvm::Use*&gt;(llvm::ImmutableCallSite,  (1 samples, 0.02%)</title><rect x="505.8" y="5461" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="508.78" y="5471.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4741" width="1.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="26.59" y="4751.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="366.5" y="5285" width="0.2" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="369.48" y="5295.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::ResolvedUndefsIn(llvm::Funct (2 samples, 0.04%)</title><rect x="711.2" y="5685" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="714.20" y="5695.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="949" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="61.09" y="959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FLOAT-MUL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4517" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="140.02" y="4527.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatt (1 samples, 0.02%)</title><rect x="448.0" y="5493" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="451.02" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="55.5" y="1477" width="1.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="58.48" y="1487.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3045" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="100.29" y="3055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4069" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="139.23" y="4079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4533" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="136.36" y="4543.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2069" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="73.63" y="2079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="3941" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="137.14" y="3951.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (2 samples, 0.04%)</title><rect x="595.7" y="5573" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="598.69" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SYMBOL-VALUE-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.5" y="5285" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="180.53" y="5295.5" ></text>
</g>
<g >
<title>`llvm::GVN::processLoad(llvm::LoadInst*) (67 samples, 1.48%)</title><rect x="544.2" y="5589" width="17.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="547.20" y="5599.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="65.4" y="2149" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="68.41" y="2159.5" ></text>
</g>
<g >
<title>`isBlockInLCSSAForm(llvm::Loop const&amp;, llvm::BasicBlock const&amp;,  (1 samples, 0.02%)</title><rect x="523.3" y="5637" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="526.29" y="5647.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CONTEXT-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="176.0" y="5349" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="178.96" y="5359.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (2 samples, 0.04%)</title><rect x="268.7" y="5349" width="0.6" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="271.74" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4293" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="138.71" y="4303.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="62.0" y="1365" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="65.01" y="1375.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.02%)</title><rect x="652.4" y="5445" width="0.3" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="655.40" y="5455.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="71.7" y="3685" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="74.68" y="3695.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="95.7" y="4661" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="98.72" y="4671.5" ></text>
</g>
<g >
<title>`core::write_object(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smar (1 samples, 0.02%)</title><rect x="11.0" y="5669" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="14.05" y="5679.5" ></text>
</g>
<g >
<title>`core::lisp_getStaticClass(gctools::Header_s::Value) (1 samples, 0.02%)</title><rect x="186.2" y="5381" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="189.15" y="5391.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="693" width="1.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="57.17" y="703.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (1 samples, 0.02%)</title><rect x="177.0" y="5413" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="180.00" y="5423.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="456.6" y="5573" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="459.65" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((SPECIAL-VARIABLE-INFO T T T (2 samples, 0.04%)</title><rect x="96.2" y="4997" width="0.6" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="99.25" y="5007.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="327.0" y="5221" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="330.02" y="5231.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoBase&lt;llvm::BasicBlock, llvm::Loop&gt;::releaseMemory (1 samples, 0.02%)</title><rect x="534.3" y="5637" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="537.27" y="5647.5" ></text>
</g>
<g >
<title>`COERCE-FDESIGNATOR^CORE^FN^^ (1 samples, 0.02%)</title><rect x="313.4" y="5397" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="316.43" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="133.1" y="4901" width="0.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="136.10" y="4911.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="207.8" y="5493" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="210.84" y="5503.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (5 samples, 0.11%)</title><rect x="265.6" y="5573" width="1.3" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="268.60" y="5583.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="62.3" y="981" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="65.27" y="991.5" ></text>
</g>
<g >
<title>`CLEAVIR-COMPILE-FILE-FORM^CLASP-CLEAVIR^FN^^ (1,569 samples, 34.75%)</title><rect x="11.3" y="5717" width="410.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="14.31" y="5727.5" >`CLEAVIR-COMPILE-FILE-FORM^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`llvm::PrettyStackTraceEntry::PrettyStackTraceEntry() (1 samples, 0.02%)</title><rect x="700.2" y="5685" width="0.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="703.23" y="5695.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="230.1" y="5573" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="233.06" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="3973" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="139.76" y="3983.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1973" width="0.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="65.27" y="1983.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2981" width="0.3" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="64.22" y="2991.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-INVOKE^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="395.2" y="5333" width="0.6" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="398.23" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="2389" width="0.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="65.53" y="2399.5" ></text>
</g>
<g >
<title>`ENSURE-ORIGIN^CLASP-CLEAVIR^FN^^ (6 samples, 0.13%)</title><rect x="413.5" y="5493" width="1.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="416.53" y="5503.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="71.4" y="3957" width="0.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="74.42" y="3967.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="429.5" y="5541" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="432.47" y="5551.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="65.7" y="2101" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="68.67" y="2111.5" ></text>
</g>
<g >
<title>`GC_mark_from (2 samples, 0.04%)</title><rect x="85.8" y="4261" width="0.5" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="88.79" y="4271.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.04%)</title><rect x="305.8" y="5413" width="0.6" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="308.85" y="5423.5" ></text>
</g>
<g >
<title>`MAKE-ENTER-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="139.4" y="5093" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="142.37" y="5103.5" ></text>
</g>
<g >
<title>`llvm::AttributeSetNode::get(llvm::LLVMContext&amp;, llvm::AttrBuild (1 samples, 0.02%)</title><rect x="426.1" y="5605" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="429.07" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="645" width="1.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="58.48" y="655.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.02%)</title><rect x="493.8" y="5429" width="0.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="496.76" y="5439.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (2 samples, 0.04%)</title><rect x="208.6" y="5317" width="0.5" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="211.63" y="5327.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="53.6" y="2693" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="56.65" y="2703.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (3 samples, 0.07%)</title><rect x="596.5" y="5621" width="0.8" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="599.47" y="5631.5" ></text>
</g>
<g >
<title>`SUBSTITUTE-OUTPUT^CLEAVIR-IR^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="244.7" y="5573" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="247.69" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="69.8" y="3189" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="72.85" y="3199.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2053" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="65.79" y="2063.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (83 samples, 1.84%)</title><rect x="49.7" y="3973" width="21.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="52.73" y="3983.5" >`..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (36 samples, 0.80%)</title><rect x="14.2" y="4597" width="9.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="17.18" y="4607.5" ></text>
</g>
<g >
<title>`GC_clear_hdr_marks (5 samples, 0.11%)</title><rect x="741.8" y="5621" width="1.3" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="744.78" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="70.6" y="2005" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="73.63" y="2015.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="14.2" y="3157" width="1.0" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="17.18" y="3167.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.1" y="2245" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="20.06" y="2255.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="11.3" y="4805" width="1.1" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="14.31" y="4815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4101" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="139.23" y="4111.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="315.8" y="5237" width="0.2" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="318.78" y="5247.5" ></text>
</g>
<g >
<title>`llvm::SmallVector&lt;llvm::Value*, 8u&gt;::SmallVector&lt;llvm::Use*, vo (1 samples, 0.02%)</title><rect x="597.3" y="5621" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="600.26" y="5631.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.1" y="2117" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="20.06" y="2127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="4933" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="130.35" y="4943.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="68.0" y="2917" width="1.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="71.02" y="2927.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="67.0" y="1557" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="69.97" y="1567.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (3 samples, 0.07%)</title><rect x="374.6" y="5349" width="0.8" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="377.58" y="5359.5" ></text>
</g>
<g >
<title>`TOKENIZE-CONTROL-STRING^CORE^FN^^ (1 samples, 0.02%)</title><rect x="80.6" y="4661" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="83.56" y="4671.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="61.2" y="2949" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="64.22" y="2959.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="600.4" y="5605" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="603.39" y="5615.5" ></text>
</g>
<g >
<title>`OPTIMIZED-EQ-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="148.0" y="5477" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="150.99" y="5487.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="63.1" y="2533" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="66.05" y="2543.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (12 samples, 0.27%)</title><rect x="74.0" y="4245" width="3.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="77.03" y="4255.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="2229" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="65.01" y="2239.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2661" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="65.79" y="2671.5" ></text>
</g>
<g >
<title>`COMPILE-LAMBDA-LIST-CODE^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="378.2" y="5461" width="1.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="381.24" y="5471.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.02%)</title><rect x="489.1" y="5557" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="492.06" y="5567.5" ></text>
</g>
<g >
<title>`POSITION^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="75.1" y="3749" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="78.08" y="3759.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="397.8" y="5253" width="0.3" height="15.0" fill="rgb(224,86,86)" rx="2" ry="2" />
<text  x="400.84" y="5263.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="10.3" y="5653" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="13.26" y="5663.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="175.7" y="5333" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="178.70" y="5343.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (4 samples, 0.09%)</title><rect x="153.0" y="5061" width="1.0" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="155.96" y="5071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (11 samples, 0.24%)</title><rect x="144.3" y="5477" width="2.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="147.33" y="5487.5" ></text>
</g>
<g >
<title>`PROCESS-REST^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4901" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="100.29" y="4911.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (9 samples, 0.20%)</title><rect x="78.2" y="4261" width="2.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="81.21" y="4271.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="14.2" y="3317" width="1.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="17.18" y="3327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.04%)</title><rect x="132.6" y="4933" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="135.57" y="4943.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="297.7" y="5445" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="300.75" y="5455.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5237" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="736.42" y="5247.5" ></text>
</g>
<g >
<title>`ALLOCA^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="354.2" y="5205" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="357.20" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (13 samples, 0.29%)</title><rect x="54.2" y="2101" width="3.4" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="57.17" y="2111.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="62.8" y="2581" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="65.79" y="2591.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (8 samples, 0.18%)</title><rect x="39.0" y="4357" width="2.1" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="42.01" y="4367.5" ></text>
</g>
<g >
<title>`DO-MEMORY-RAMP^CORE^FN^^ (1,569 samples, 34.75%)</title><rect x="11.3" y="5733" width="410.1" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="14.31" y="5743.5" >`DO-MEMORY-RAMP^CORE^FN^^</text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="362.8" y="5349" width="0.3" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="365.82" y="5359.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.9" y="2885" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="73.89" y="2895.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (6 samples, 0.13%)</title><rect x="12.4" y="4725" width="1.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="15.35" y="4735.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="735.2" y="5557" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="738.25" y="5567.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.02%)</title><rect x="176.0" y="5285" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="178.96" y="5295.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1109" width="1.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="57.17" y="1119.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (1 samples, 0.02%)</title><rect x="142.5" y="4901" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="145.50" y="4911.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (14 samples, 0.31%)</title><rect x="73.8" y="4453" width="3.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="76.77" y="4463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4677" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="140.28" y="4687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4757" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="142.11" y="4767.5" ></text>
</g>
<g >
<title>`GC_allocobj (2 samples, 0.04%)</title><rect x="182.0" y="5445" width="0.5" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="184.97" y="5455.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4565" width="1.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="26.59" y="4575.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="3237" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="100.29" y="3247.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (7 samples, 0.16%)</title><rect x="29.6" y="4389" width="1.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="32.60" y="4399.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="14.2" y="3781" width="1.8" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="17.18" y="3791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.16%)</title><rect x="135.2" y="4821" width="1.8" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="138.19" y="4831.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="1045" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="62.13" y="1055.5" ></text>
</g>
<g >
<title>`GENSYM^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="46.3" y="5013" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="49.33" y="5023.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (5 samples, 0.11%)</title><rect x="359.2" y="5301" width="1.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="362.17" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (34 samples, 0.75%)</title><rect x="14.2" y="3973" width="8.9" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="17.18" y="3983.5" ></text>
</g>
<g >
<title>`core::SourcePosInfo_O::make(std::__1::basic_string&lt;char, std::_ (2 samples, 0.04%)</title><rect x="325.2" y="5285" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="328.19" y="5295.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (8 samples, 0.18%)</title><rect x="118.2" y="5621" width="2.1" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="121.20" y="5631.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (1 samples, 0.02%)</title><rect x="493.2" y="5557" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="496.24" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="3813" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="139.23" y="3823.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.3" y="1557" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="65.27" y="1567.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (6 samples, 0.13%)</title><rect x="237.9" y="5525" width="1.6" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="240.90" y="5535.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.27%)</title><rect x="78.0" y="4853" width="3.1" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="80.95" y="4863.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_package_T_sp (1 samples, 0.02%)</title><rect x="24.9" y="3365" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="27.90" y="3375.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="429.5" y="5589" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="432.47" y="5599.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::apint_match::match&lt;llvm::Value const&gt;( (1 samples, 0.02%)</title><rect x="666.3" y="5557" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="669.25" y="5567.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="78.2" y="4341" width="2.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="81.21" y="4351.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="286.5" y="5477" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="289.51" y="5487.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="421" width="1.1" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="59.52" y="431.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (3 samples, 0.07%)</title><rect x="268.5" y="5445" width="0.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="271.48" y="5455.5" ></text>
</g>
<g >
<title>`MAKE-FUNCTION-METADATA^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="366.0" y="5413" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="368.96" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (233 samples, 5.16%)</title><rect x="36.4" y="5317" width="60.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="39.40" y="5327.5" >`CONVE..</text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="64.1" y="1173" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="67.10" y="1183.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="268.2" y="5509" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="271.21" y="5519.5" ></text>
</g>
<g >
<title>`core::make_unbound_setf_symbol_function(gctools::smart_ptr&lt;core (1 samples, 0.02%)</title><rect x="148.3" y="5029" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="151.25" y="5039.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="652.4" y="5557" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="655.40" y="5567.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="651.6" y="5317" width="0.3" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="654.62" y="5327.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="14.7" y="2357" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="17.70" y="2367.5" ></text>
</g>
<g >
<title>0x10d596094 (82 samples, 1.82%)</title><rect x="14.2" y="5029" width="21.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="17.18" y="5039.5" >0..</text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::ValueHand (1 samples, 0.02%)</title><rect x="700.8" y="5461" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="703.75" y="5471.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::ModuleHandle (1 samples, 0.02%)</title><rect x="57.8" y="1029" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="60.83" y="1039.5" ></text>
</g>
<g >
<title>`llvm::PointerType::get(llvm::Type*, unsigned int) (1 samples, 0.02%)</title><rect x="613.5" y="5557" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="616.46" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (5 samples, 0.11%)</title><rect x="54.2" y="2005" width="1.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="57.17" y="2015.5" ></text>
</g>
<g >
<title>`tiny_free_reattach_region (1 samples, 0.02%)</title><rect x="697.6" y="5541" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="700.61" y="5551.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="69.6" y="2325" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="72.59" y="2335.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="105.9" y="5557" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="108.92" y="5567.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="354.2" y="5157" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="357.20" y="5167.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="13.9" y="5029" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="16.92" y="5039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (15 samples, 0.33%)</title><rect x="128.4" y="4853" width="3.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="131.39" y="4863.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="137.0" y="4421" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="140.02" y="4431.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (1 samples, 0.02%)</title><rect x="171.0" y="4997" width="0.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="173.99" y="5007.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromAssume(llvm::Value const*, llvm::KnownBits&amp; (1 samples, 0.02%)</title><rect x="441.8" y="5557" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="444.75" y="5567.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="2645" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="73.11" y="2655.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1061" width="1.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="57.17" y="1071.5" ></text>
</g>
<g >
<title>`llvm::FindAvailablePtrLoadStore(llvm::Value*, llvm::Type*, bool (31 samples, 0.69%)</title><rect x="500.8" y="5589" width="8.1" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="503.82" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.22%)</title><rect x="167.9" y="5045" width="2.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="170.86" y="5055.5" ></text>
</g>
<g >
<title>`GC_mark_local (2 samples, 0.04%)</title><rect x="423.7" y="5525" width="0.5" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="426.72" y="5535.5" ></text>
</g>
<g >
<title>`%INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="395.2" y="5365" width="0.6" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="398.23" y="5375.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="96.8" y="5125" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="99.77" y="5135.5" ></text>
</g>
<g >
<title>`client_validate (1 samples, 0.02%)</title><rect x="105.7" y="5493" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="108.65" y="5503.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4133" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="100.29" y="4143.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="450.9" y="5605" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="453.90" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (57 samples, 1.26%)</title><rect x="81.3" y="4933" width="14.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="84.35" y="4943.5" ></text>
</g>
<g >
<title>`FAST-SUBTYPEP^CORE^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2501" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="71.28" y="2511.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="1573" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="73.63" y="1583.5" ></text>
</g>
<g >
<title>`core::cl__truename(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="721.1" y="5685" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="724.14" y="5695.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (91 samples, 2.02%)</title><rect x="12.4" y="5365" width="23.7" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="15.35" y="5375.5" >`..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="67.5" y="1669" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="70.50" y="1679.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (40 samples, 0.89%)</title><rect x="14.2" y="4901" width="10.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="17.18" y="4911.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::getValueState(llvm::Value*) (1 samples, 0.02%)</title><rect x="582.9" y="5621" width="0.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="585.88" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4133" width="0.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="137.93" y="4143.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="63.6" y="2693" width="1.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="66.58" y="2703.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (40 samples, 0.89%)</title><rect x="14.2" y="4821" width="10.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="17.18" y="4831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4661" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="139.76" y="4671.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="68.5" y="2677" width="1.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="71.54" y="2687.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::BasicBlock_O&gt; gctools::GCObjectApprop (1 samples, 0.02%)</title><rect x="294.1" y="5397" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="297.09" y="5407.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeAllocSize(llvm::Type*) const (1 samples, 0.02%)</title><rect x="511.5" y="5477" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="514.53" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="2645" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="65.79" y="2655.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4597" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="736.42" y="4607.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="697.6" y="5557" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="700.61" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="3237" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="73.63" y="3247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3845" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="132.96" y="3855.5" ></text>
</g>
<g >
<title>`DBG-CREATE-PARAMETER-VARIABLE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="725" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="62.13" y="735.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="346.4" y="5253" width="0.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="349.36" y="5263.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.02%)</title><rect x="115.8" y="5525" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="118.85" y="5535.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (25 samples, 0.55%)</title><rect x="16.3" y="3109" width="6.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="19.27" y="3119.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="2901" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="64.75" y="2911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="146.9" y="5397" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="149.95" y="5407.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="64.1" y="1909" width="1.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="67.10" y="1919.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="14.2" y="3765" width="1.8" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="17.18" y="3775.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (2 samples, 0.04%)</title><rect x="173.1" y="5237" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="176.08" y="5247.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="91.8" y="4421" width="1.0" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="94.80" y="4431.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="21.5" y="1525" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="24.50" y="1535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="1973" width="1.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="57.17" y="1983.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2709" width="0.3" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="64.22" y="2719.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="20.7" y="1877" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="23.72" y="1887.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.02%)</title><rect x="437.6" y="5605" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="440.57" y="5615.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm:: (9 samples, 0.20%)</title><rect x="526.4" y="5573" width="2.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="529.43" y="5583.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="321.3" y="5237" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="324.27" y="5247.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="54.2" y="661" width="1.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="57.17" y="671.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((CREATE-CELL-INSTRU (2 samples, 0.04%)</title><rect x="309.8" y="5477" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="312.77" y="5487.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="41.1" y="4325" width="1.0" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="44.10" y="4335.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.02%)</title><rect x="266.6" y="5477" width="0.3" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="269.65" y="5487.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromAssume(llvm::Value const*, llvm::KnownBits&amp; (1 samples, 0.02%)</title><rect x="512.3" y="5525" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="515.32" y="5535.5" ></text>
</g>
<g >
<title>`MAKE-LOAD-TIME-VALUE-AST^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="114.8" y="5573" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="117.80" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4277" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="139.23" y="4287.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="1397" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="65.79" y="1407.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (1 samples, 0.02%)</title><rect x="63.1" y="2949" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="66.05" y="2959.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2405" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="71.28" y="2415.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="75.1" y="3813" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="78.08" y="3823.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="2629" width="2.6" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="68.41" y="2639.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (2 samples, 0.04%)</title><rect x="590.5" y="5621" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="593.46" y="5631.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (450 samples, 9.97%)</title><rect x="295.9" y="5493" width="117.6" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="298.92" y="5503.5" >`DO-DEBUG-INFO..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4197" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="137.93" y="4207.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (88 samples, 1.95%)</title><rect x="49.5" y="4581" width="23.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="52.46" y="4591.5" >`..</text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1749" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="24.50" y="1759.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (25 samples, 0.55%)</title><rect x="16.3" y="2997" width="6.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="19.27" y="3007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4853" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="142.11" y="4863.5" ></text>
</g>
<g >
<title>`ENSURE-CLASS-USING-CLASS^CLOS^((NULL T))^METHOD^^ (1 samples, 0.02%)</title><rect x="733.2" y="5685" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="736.16" y="5695.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="22.0" y="2645" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="25.02" y="2655.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="17.6" y="1365" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="20.58" y="1375.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="229.3" y="5525" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="232.27" y="5535.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2533" width="1.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="60.57" y="2543.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInBoundsGEP(llvm::Value*, gctools::sm (1 samples, 0.02%)</title><rect x="381.6" y="5349" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="384.64" y="5359.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="68.0" y="2965" width="1.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="71.02" y="2975.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="2085" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="64.75" y="2095.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="135.2" y="4725" width="1.0" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="138.19" y="4735.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="13.9" y="5013" width="0.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="16.92" y="5023.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (3 samples, 0.07%)</title><rect x="283.4" y="5509" width="0.8" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="286.37" y="5519.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::find_imp(void const*) const (2 samples, 0.04%)</title><rect x="451.2" y="5621" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="454.16" y="5631.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="53.1" y="3109" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="56.12" y="3119.5" ></text>
</g>
<g >
<title>`cc_enclose (5 samples, 0.11%)</title><rect x="422.9" y="5701" width="1.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="425.93" y="5711.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="461.4" y="5589" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="464.35" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="138.6" y="4917" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="141.58" y="4927.5" ></text>
</g>
<g >
<title>`core::parse_directories(gctools::smart_ptr&lt;core::T_O&gt;, int, uns (1 samples, 0.02%)</title><rect x="721.1" y="5605" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="724.14" y="5615.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (6 samples, 0.13%)</title><rect x="231.9" y="5573" width="1.6" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="234.89" y="5583.5" ></text>
</g>
<g >
<title>`ThreadCmpOverSelect(llvm::CmpInst::Predicate, llvm::Value*, llv (1 samples, 0.02%)</title><rect x="493.2" y="5589" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="496.24" y="5599.5" ></text>
</g>
<g >
<title>`free_small (1 samples, 0.02%)</title><rect x="608.2" y="5637" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="611.23" y="5647.5" ></text>
</g>
<g >
<title>`llvmo::Value_O::create(llvm::Value*) (1 samples, 0.02%)</title><rect x="293.8" y="5333" width="0.3" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="296.83" y="5343.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="142.8" y="4981" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="145.77" y="4991.5" ></text>
</g>
<g >
<title>`OUT^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="333.0" y="5109" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="336.03" y="5119.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (7 samples, 0.16%)</title><rect x="57.6" y="1765" width="1.8" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="60.57" y="1775.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::StringMapIterator&lt;llvm::Value*&gt;, bool&gt; llv (1 samples, 0.02%)</title><rect x="633.8" y="5509" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="636.84" y="5519.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (22 samples, 0.49%)</title><rect x="623.4" y="5589" width="5.7" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="626.39" y="5599.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::MoveHelper(unsigned int, llvm::Small (1 samples, 0.02%)</title><rect x="525.1" y="5605" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="528.12" y="5615.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENTER-INSTRUCTION  (1 samples, 0.02%)</title><rect x="333.3" y="5125" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="336.29" y="5135.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.1" y="1189" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="67.10" y="1199.5" ></text>
</g>
<g >
<title>`malloc (2 samples, 0.04%)</title><rect x="388.7" y="5333" width="0.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="391.70" y="5343.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="69.8" y="3045" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="72.85" y="3055.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="355.2" y="5141" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="358.24" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="55.5" y="1205" width="1.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="58.48" y="1215.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="19.9" y="2005" width="1.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="22.93" y="2015.5" ></text>
</g>
<g >
<title>0x10d596094 (12 samples, 0.27%)</title><rect x="78.0" y="4821" width="3.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="80.95" y="4831.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="17.6" y="1413" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="20.58" y="1423.5" ></text>
</g>
<g >
<title>`malloc (2 samples, 0.04%)</title><rect x="626.3" y="5493" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="629.27" y="5503.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (2 samples, 0.04%)</title><rect x="25.2" y="4021" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="28.16" y="4031.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (2 samples, 0.04%)</title><rect x="24.6" y="3877" width="0.6" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="27.64" y="3887.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="3253" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="62.40" y="3263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4789" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="141.85" y="4799.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (2 samples, 0.04%)</title><rect x="43.7" y="4341" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="46.71" y="4351.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::reference_raw_(core::Symbol_O*, gcto (1 samples, 0.02%)</title><rect x="127.6" y="5397" width="0.3" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="130.61" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="65.9" y="1365" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="68.93" y="1375.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (2 samples, 0.04%)</title><rect x="605.4" y="5557" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="608.36" y="5567.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="694.2" y="5621" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="697.22" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5237" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="130.35" y="5247.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="139.1" y="4437" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="142.11" y="4447.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="1621" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="65.53" y="1631.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="466.8" y="5557" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="469.84" y="5567.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (2 samples, 0.04%)</title><rect x="616.3" y="5621" width="0.6" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="619.33" y="5631.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.04%)</title><rect x="20.7" y="1861" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="23.72" y="1871.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="401.0" y="5365" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="403.98" y="5375.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="199.7" y="5557" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="202.74" y="5567.5" ></text>
</g>
<g >
<title>`GC_mark_local (3 samples, 0.07%)</title><rect x="234.5" y="5349" width="0.8" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="237.50" y="5359.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2565" width="0.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="71.28" y="2575.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="192.9" y="5541" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="195.95" y="5551.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;llvm::Value*, llvm::Value (1 samples, 0.02%)</title><rect x="715.1" y="5669" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="718.13" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4133" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="139.23" y="4143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="126.8" y="5381" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="129.82" y="5391.5" ></text>
</g>
<g >
<title>`llvm::CallInst::onlyReadsMemory() const (1 samples, 0.02%)</title><rect x="543.7" y="5525" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="546.68" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4709" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="142.11" y="4719.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.02%)</title><rect x="49.5" y="4117" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="52.46" y="4127.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="23.9" y="3861" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="26.85" y="3871.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1621" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="20.58" y="1631.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.02%)</title><rect x="570.3" y="5477" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="573.34" y="5487.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="165.8" y="5045" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="168.77" y="5055.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (2 samples, 0.04%)</title><rect x="43.7" y="4373" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="46.71" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.5" y="5317" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="180.53" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.02%)</title><rect x="134.7" y="4341" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="137.66" y="4351.5" ></text>
</g>
<g >
<title>`llvm::wouldInstructionBeTriviallyDead(llvm::Instruction*, llvm: (1 samples, 0.02%)</title><rect x="695.5" y="5541" width="0.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="698.52" y="5551.5" ></text>
</g>
<g >
<title>`GLOBAL-ENVIRONMENT^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="79.0" y="3573" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="82.00" y="3583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5349" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="130.35" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="5333" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="100.29" y="5343.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="17.1" y="2069" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="20.06" y="2079.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2357" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="65.53" y="2367.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (1 samples, 0.02%)</title><rect x="22.5" y="2757" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="25.54" y="2767.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (32 samples, 0.71%)</title><rect x="86.6" y="4517" width="8.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="89.58" y="4527.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^ (1 samples, 0.02%)</title><rect x="62.5" y="725" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="65.53" y="735.5" ></text>
</g>
<g >
<title>`llvm::BinaryOperator::BinaryOperator(llvm::Instruction::BinaryO (1 samples, 0.02%)</title><rect x="320.7" y="5125" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="323.75" y="5135.5" ></text>
</g>
<g >
<title>`WRITE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="735.5" y="5685" width="0.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="738.51" y="5695.5" ></text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (2 samples, 0.04%)</title><rect x="475.5" y="5477" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="478.47" y="5487.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="665.7" y="5573" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="668.73" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (9 samples, 0.20%)</title><rect x="24.6" y="4805" width="2.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="27.64" y="4815.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (91 samples, 2.02%)</title><rect x="12.4" y="5157" width="23.7" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="15.35" y="5167.5" >`..</text>
</g>
<g >
<title>`core::General_O::_instanceClass() const (1 samples, 0.02%)</title><rect x="297.5" y="5445" width="0.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="300.49" y="5455.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (1 samples, 0.02%)</title><rect x="241.6" y="5525" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="244.56" y="5535.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (3 samples, 0.07%)</title><rect x="117.4" y="5605" width="0.8" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="120.42" y="5615.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="339.0" y="5221" width="0.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="342.04" y="5231.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction const* (2 samples, 0.04%)</title><rect x="725.6" y="5621" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="728.58" y="5631.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="70.6" y="3317" width="0.3" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="73.63" y="3327.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2821" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="65.01" y="2831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.8" y="4645" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="134.79" y="4655.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="127.3" y="4773" width="0.3" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="130.35" y="4783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="3845" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="139.23" y="3855.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="507.4" y="5525" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="510.35" y="5535.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="72.5" y="4805" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="75.46" y="4815.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (1 samples, 0.02%)</title><rect x="291.5" y="5381" width="0.2" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="294.48" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (73 samples, 1.62%)</title><rect x="128.1" y="5493" width="19.1" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="131.13" y="5503.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="689.5" y="5605" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="692.51" y="5615.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.02%)</title><rect x="79.8" y="3589" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="82.78" y="3599.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="113.5" y="5589" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="116.50" y="5599.5" ></text>
</g>
<g >
<title>`DO-COMPILER-TIMER^COMPILER^FN^^ (2,764 samples, 61.22%)</title><rect x="10.0" y="5861" width="722.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="13.00" y="5871.5" >`DO-COMPILER-TIMER^COMPILER^FN^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (42 samples, 0.93%)</title><rect x="160.0" y="5141" width="11.0" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="163.02" y="5151.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="610.3" y="5525" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="613.32" y="5535.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="75.1" y="3685" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="78.08" y="3695.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="69.8" y="3109" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="72.85" y="3119.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="186.9" y="5541" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="189.93" y="5551.5" ></text>
</g>
<g >
<title>`FUNCTION-INLINE^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="52.3" y="3701" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="55.34" y="3711.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="1189" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="65.27" y="1199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (190 samples, 4.21%)</title><rect x="127.6" y="5605" width="49.7" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="130.61" y="5615.5" >`COMP..</text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="324.4" y="5221" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="327.41" y="5231.5" ></text>
</g>
<g >
<title>`IRC-BIT-CAST^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="384.3" y="5413" width="0.7" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="387.25" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.6" y="4533" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="100.55" y="4543.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (4 samples, 0.09%)</title><rect x="372.0" y="5349" width="1.0" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="374.97" y="5359.5" ></text>
</g>
<g >
<title>`llvm::MachineFunctionPass::runOnFunction(llvm::Function&amp;) (1 samples, 0.02%)</title><rect x="57.8" y="901" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="60.83" y="911.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="997" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="67.88" y="1007.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="285.5" y="5509" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="288.46" y="5519.5" ></text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE T (1 samples, 0.02%)</title><rect x="24.4" y="3909" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="27.37" y="3919.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="139.9" y="5013" width="0.3" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="142.89" y="5023.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (4 samples, 0.09%)</title><rect x="23.6" y="4181" width="1.0" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="26.59" y="4191.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ModuleBitcodeWriterBase::writePerModuleG (1 samples, 0.02%)</title><rect x="726.9" y="5669" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="729.89" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="67.5" y="1749" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="70.50" y="1759.5" ></text>
</g>
<g >
<title>0x10d596094 (3 samples, 0.07%)</title><rect x="65.4" y="2357" width="0.8" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="68.41" y="2367.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (109 samples, 2.41%)</title><rect x="49.5" y="4997" width="28.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="52.46" y="5007.5" >`C..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="3125" width="0.2" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="65.27" y="3135.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (6 samples, 0.13%)</title><rect x="237.9" y="5541" width="1.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="240.90" y="5551.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (4 samples, 0.09%)</title><rect x="29.9" y="4325" width="1.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="32.86" y="4335.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="67.5" y="1493" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="70.50" y="1503.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="128.7" y="3765" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="131.65" y="3775.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="79.8" y="3701" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="82.78" y="3711.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DILocalVariable*, llvm: (1 samples, 0.02%)</title><rect x="359.7" y="5125" width="0.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="362.69" y="5135.5" ></text>
</g>
<g >
<title>`UNDEF-T-PTR^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="343.0" y="5237" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="345.96" y="5247.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="63.8" y="1941" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="66.84" y="1951.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4197" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="136.36" y="4207.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="130.7" y="4533" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="133.74" y="4543.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (1 samples, 0.02%)</title><rect x="93.1" y="4437" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="96.11" y="4447.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="64.6" y="357" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="67.62" y="367.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.1" y="2213" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="68.15" y="2223.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.3" y="1973" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="20.32" y="1983.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="58.3" y="405" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="61.35" y="415.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="60.7" y="2757" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="63.70" y="2767.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="501.6" y="5509" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="504.60" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3765" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="132.96" y="3775.5" ></text>
</g>
<g >
<title>`GC_mark_some (6 samples, 0.13%)</title><rect x="230.3" y="5381" width="1.6" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="233.32" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="96.2" y="4901" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="99.25" y="4911.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1189" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="65.53" y="1199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4725" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="141.85" y="4735.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="1557" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="68.93" y="1567.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (3 samples, 0.07%)</title><rect x="211.5" y="5589" width="0.8" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="214.50" y="5599.5" ></text>
</g>
<g >
<title>`ENSURE-ORIGIN^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="317.1" y="5349" width="0.2" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="320.09" y="5359.5" ></text>
</g>
<g >
<title>`deleteIfDead(llvm::GlobalValue&amp;, llvm::SmallSet&lt;llvm::Comdat co (3 samples, 0.07%)</title><rect x="589.2" y="5669" width="0.7" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="592.15" y="5679.5" ></text>
</g>
<g >
<title>`llvm::SymbolTableListTraits&lt;llvm::BasicBlock&gt;::addNodeToList(ll (1 samples, 0.02%)</title><rect x="391.0" y="5349" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="394.05" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (9 samples, 0.20%)</title><rect x="78.2" y="4181" width="2.4" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="81.21" y="4191.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="332.2" y="4965" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="335.25" y="4975.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.8" y="2437" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="65.79" y="2447.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (3 samples, 0.07%)</title><rect x="674.9" y="5573" width="0.8" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="677.88" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4357" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="139.76" y="4367.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="178.0" y="5589" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="181.05" y="5599.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="385.8" y="5269" width="0.3" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="388.82" y="5279.5" ></text>
</g>
<g >
<title>`GC_clear_hdr_marks (1 samples, 0.02%)</title><rect x="252.0" y="5365" width="0.3" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="255.01" y="5375.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="1125" width="0.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="60.57" y="1135.5" ></text>
</g>
<g >
<title>`C+ (4 samples, 0.09%)</title><rect x="379.6" y="5429" width="1.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="382.55" y="5439.5" ></text>
</g>
<g >
<title>0x10d596094 (30 samples, 0.66%)</title><rect x="27.5" y="4645" width="7.9" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="30.51" y="4655.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="45.3" y="4933" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="48.28" y="4943.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="523.0" y="5349" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="526.03" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (88 samples, 1.95%)</title><rect x="49.5" y="4597" width="23.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="52.46" y="4607.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="4085" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="131.65" y="4095.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="57.8" y="1157" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="60.83" y="1167.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (3 samples, 0.07%)</title><rect x="201.0" y="5429" width="0.8" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="204.05" y="5439.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__bzero (1 samples, 0.02%)</title><rect x="169.2" y="4789" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="172.16" y="4799.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (5 samples, 0.11%)</title><rect x="277.9" y="5525" width="1.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="280.88" y="5535.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="249.4" y="5541" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="252.40" y="5551.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (4 samples, 0.09%)</title><rect x="164.2" y="4997" width="1.0" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="167.20" y="5007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (8 samples, 0.18%)</title><rect x="128.7" y="4725" width="2.0" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="131.65" y="4735.5" ></text>
</g>
<g >
<title>0x10d596094 (8 samples, 0.18%)</title><rect x="78.5" y="4021" width="2.1" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="81.47" y="4031.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (11 samples, 0.24%)</title><rect x="623.9" y="5573" width="2.9" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="626.91" y="5583.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="393.9" y="5253" width="0.3" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="396.92" y="5263.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.02%)</title><rect x="399.2" y="5317" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="402.15" y="5327.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_T_spT_spT_spT_sp (2 samples, 0.04%)</title><rect x="421.4" y="5733" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="424.37" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4309" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="132.96" y="4319.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="80.6" y="4757" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="83.56" y="4767.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::__class() const (1 samples, 0.02%)</title><rect x="340.1" y="5237" width="0.2" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="343.09" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (40 samples, 0.89%)</title><rect x="14.2" y="4917" width="10.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="17.18" y="4927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4229" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="137.14" y="4239.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((SPECIAL-VARIABLE-INFO T T T (56 samples, 1.24%)</title><rect x="81.3" y="4789" width="14.7" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="84.35" y="4799.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'TAGBODY) T T T)) (5 samples, 0.11%)</title><rect x="54.2" y="469" width="1.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="57.17" y="479.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (1 samples, 0.02%)</title><rect x="77.7" y="4805" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="80.69" y="4815.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="149.3" y="4965" width="0.3" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="152.30" y="4975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.6" y="4789" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="141.58" y="4799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4965" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="140.02" y="4975.5" ></text>
</g>
<g >
<title>`VARIABLE-IGNORE^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE LEXICAL- (1 samples, 0.02%)</title><rect x="73.0" y="4645" width="0.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="75.99" y="4655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4549" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="140.02" y="4559.5" ></text>
</g>
<g >
<title>`core::Lisp_O::getOrRegisterFileScope(std::__1::basic_string&lt;cha (1 samples, 0.02%)</title><rect x="356.3" y="5285" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="359.29" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.04%)</title><rect x="167.3" y="5045" width="0.6" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="170.33" y="5055.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="62.3" y="1029" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="65.27" y="1039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5285" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="130.35" y="5295.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="5109" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="100.55" y="5119.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="14.7" y="2373" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="17.70" y="2383.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="62.8" y="1269" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="65.79" y="1279.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (4 samples, 0.09%)</title><rect x="191.9" y="5493" width="1.0" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="194.90" y="5503.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="14.2" y="3349" width="1.0" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="17.18" y="3359.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (1,116 samples, 24.72%)</title><rect x="426.1" y="5717" width="291.6" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="429.07" y="5727.5" >`llvm::legacy::PassManagerImpl::run(llv..</text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="378.2" y="5397" width="0.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="381.24" y="5407.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="23.1" y="3637" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="26.07" y="3647.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (19 samples, 0.42%)</title><rect x="464.8" y="5605" width="4.9" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="467.75" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-ERROR-IF-TOO-MANY-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="333.3" y="5077" width="0.3" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="336.29" y="5087.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (2 samples, 0.04%)</title><rect x="66.5" y="1573" width="0.5" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="69.45" y="1583.5" ></text>
</g>
<g >
<title>0x10d596094 (30 samples, 0.66%)</title><rect x="27.5" y="4821" width="7.9" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="30.51" y="4831.5" ></text>
</g>
<g >
<title>`llvm::Instruction::mayWriteToMemory() const (2 samples, 0.04%)</title><rect x="681.4" y="5621" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="684.41" y="5631.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2757" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="64.22" y="2767.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="354.7" y="5205" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="357.72" y="5215.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="65.1" y="2181" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="68.15" y="2191.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="54.2" y="1957" width="1.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="57.17" y="1967.5" ></text>
</g>
<g >
<title>`unsigned int llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorT (11 samples, 0.24%)</title><rect x="459.3" y="5637" width="2.8" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="462.26" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2149" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="65.53" y="2159.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="2869" width="2.6" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="68.41" y="2879.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1717" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="20.58" y="1727.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;std::__1::pair&lt;llvm::Basi (1 samples, 0.02%)</title><rect x="436.5" y="5525" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="439.52" y="5535.5" ></text>
</g>
<g >
<title>`llvm::MemoryLocation::get(llvm::LoadInst const*) (1 samples, 0.02%)</title><rect x="525.6" y="5573" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="528.65" y="5583.5" ></text>
</g>
<g >
<title>`llvm::Value::getValueName() const (1 samples, 0.02%)</title><rect x="485.7" y="5509" width="0.2" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="488.66" y="5519.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="167.9" y="4981" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="170.86" y="4991.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::Value_O&gt; gctools::GCObjectAppropriate (1 samples, 0.02%)</title><rect x="346.1" y="5173" width="0.3" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="349.10" y="5183.5" ></text>
</g>
<g >
<title>`void llvm::SmallVectorImpl&lt;char&gt;::append&lt;char const*, void&gt;(cha (1 samples, 0.02%)</title><rect x="726.4" y="5605" width="0.2" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="729.36" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4101" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="137.93" y="4111.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (3 samples, 0.07%)</title><rect x="85.8" y="4405" width="0.8" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="88.79" y="4415.5" ></text>
</g>
<g >
<title>`GC_release_mark_lock (1 samples, 0.02%)</title><rect x="27.5" y="4293" width="0.3" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="30.51" y="4303.5" ></text>
</g>
<g >
<title>`llvm::Value::getValueName() const (1 samples, 0.02%)</title><rect x="438.6" y="5605" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="441.62" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="12.4" y="4261" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="15.35" y="4271.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="1685" width="1.0" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="58.48" y="1695.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="19.7" y="1941" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="22.67" y="1951.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="389.5" y="5381" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="392.48" y="5391.5" ></text>
</g>
<g >
<title>`MAKE-CALLING-CONVENTION-IMPL^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="358.1" y="5365" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="361.12" y="5375.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (1 samples, 0.02%)</title><rect x="550.7" y="5349" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="553.74" y="5359.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="163.7" y="5029" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="166.67" y="5039.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="668.9" y="5477" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="671.87" y="5487.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="366.0" y="5237" width="0.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="368.96" y="5247.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (13 samples, 0.29%)</title><rect x="45.5" y="5157" width="3.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="48.54" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4405" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="137.93" y="4415.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.02%)</title><rect x="258.8" y="5477" width="0.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="261.81" y="5487.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIndexedOffsetInType(llvm::Type*, llvm::Arr (1 samples, 0.02%)</title><rect x="505.3" y="5429" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="508.26" y="5439.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::BasicBlock*&gt;::insert(llvm::BasicBlo (1 samples, 0.02%)</title><rect x="591.8" y="5653" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="594.77" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="61.2" y="3173" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="64.22" y="3183.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getConstant(llvm::Value*, llvm::BasicBlock (1 samples, 0.02%)</title><rect x="447.0" y="5589" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="449.98" y="5599.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="225.9" y="5525" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="228.88" y="5535.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="405" width="1.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="57.17" y="415.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="78.2" y="4357" width="2.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="81.21" y="4367.5" ></text>
</g>
<g >
<title>`llvm::canConstantFoldCallTo(llvm::ImmutableCallSite, llvm::Func (1 samples, 0.02%)</title><rect x="444.9" y="5589" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="447.89" y="5599.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="522.5" y="5605" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="525.51" y="5615.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="355.2" y="5189" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="358.24" y="5199.5" ></text>
</g>
<g >
<title>`core::Rational_O::create(__gmp_expr&lt;__mpz_struct [1], __mpz_str (1 samples, 0.02%)</title><rect x="365.2" y="5317" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="368.18" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4933" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="140.02" y="4943.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.3" y="3365" width="0.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="100.29" y="3375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4773" width="0.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="139.76" y="4783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="136.2" y="4805" width="0.8" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="139.23" y="4815.5" ></text>
</g>
<g >
<title>`llvm::KnownBits::KnownBits(unsigned int) (1 samples, 0.02%)</title><rect x="433.1" y="5541" width="0.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="436.13" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5029" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="130.35" y="5039.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (70 samples, 1.55%)</title><rect x="52.9" y="3525" width="18.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="55.86" y="3535.5" ></text>
</g>
<g >
<title>`CHILDREN^CLEAVIR-AST^((BLOCK-AST))^METHOD^^ (1 samples, 0.02%)</title><rect x="11.3" y="4581" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="14.31" y="4591.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="821" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="65.01" y="831.5" ></text>
</g>
<g >
<title>`IRC-BEGIN-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="315.5" y="5333" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="318.52" y="5343.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="177.3" y="4885" width="0.2" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="180.26" y="4895.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (2 samples, 0.04%)</title><rect x="283.4" y="5333" width="0.5" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="286.37" y="5343.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Symbol_O&gt; gctools::GCObjectAllocator&lt;c (1 samples, 0.02%)</title><rect x="155.8" y="5125" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="158.83" y="5135.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (5 samples, 0.11%)</title><rect x="54.2" y="773" width="1.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="57.17" y="783.5" ></text>
</g>
<g >
<title>`GC_mark_some (3 samples, 0.07%)</title><rect x="238.7" y="5365" width="0.8" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="241.68" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="1461" width="1.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="57.17" y="1471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4821" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="137.66" y="4831.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="255.4" y="5557" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="258.41" y="5567.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::Grow(unsigned int) (1 samples, 0.02%)</title><rect x="713.6" y="5573" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="716.56" y="5583.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.02%)</title><rect x="650.0" y="5589" width="0.3" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="653.05" y="5599.5" ></text>
</g>
<g >
<title>`_platform_memcmp (1 samples, 0.02%)</title><rect x="519.1" y="5557" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="522.11" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (4 samples, 0.09%)</title><rect x="64.1" y="1829" width="1.0" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="67.10" y="1839.5" ></text>
</g>
<g >
<title>`llvmo::Value_O::create(llvm::Value*) (1 samples, 0.02%)</title><rect x="292.3" y="5365" width="0.2" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="295.26" y="5375.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::apint_match::match&lt;llvm::Value const&gt;( (1 samples, 0.02%)</title><rect x="667.6" y="5525" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="670.56" y="5535.5" ></text>
</g>
<g >
<title>`llvm::FoldBranchToCommonDest(llvm::BranchInst*, unsigned int) (1 samples, 0.02%)</title><rect x="586.8" y="5605" width="0.3" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="589.80" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="3925" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="135.31" y="3935.5" ></text>
</g>
<g >
<title>`core::SimpleCharacterString_O::get_std_string() const (1 samples, 0.02%)</title><rect x="324.4" y="5109" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="327.41" y="5119.5" ></text>
</g>
<g >
<title>`PROCESS-KEYS^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2789" width="3.4" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="57.17" y="2799.5" ></text>
</g>
<g >
<title>`llvmo::llvm_sys__FunctionCreate(gctools::smart_ptr&lt;llvmo::Funct (3 samples, 0.07%)</title><rect x="375.4" y="5381" width="0.8" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="378.37" y="5391.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="61.7" y="1717" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="64.75" y="1727.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (8 samples, 0.18%)</title><rect x="55.5" y="1877" width="2.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="58.48" y="1887.5" ></text>
</g>
<g >
<title>`GC_push_marked (1 samples, 0.02%)</title><rect x="86.3" y="4293" width="0.3" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="89.31" y="4303.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="70.9" y="2981" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="73.89" y="2991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4693" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="140.02" y="4703.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="308.2" y="5429" width="1.0" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="311.20" y="5439.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::ConstantExpr*, llv (1 samples, 0.02%)</title><rect x="321.3" y="5125" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="324.27" y="5135.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (1 samples, 0.02%)</title><rect x="134.9" y="4021" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="137.93" y="4031.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="3861" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="131.91" y="3871.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (8 samples, 0.18%)</title><rect x="63.3" y="3157" width="2.1" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="66.32" y="3167.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::ImmutableCallSite, llvm::M (4 samples, 0.09%)</title><rect x="526.7" y="5557" width="1.0" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="529.69" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="128.7" y="4245" width="1.0" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="131.65" y="4255.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="60.2" y="2501" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="63.18" y="2511.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (3 samples, 0.07%)</title><rect x="677.5" y="5589" width="0.8" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="680.49" y="5599.5" ></text>
</g>
<g >
<title>`llvm::PromoteMemToReg(llvm::ArrayRef&lt;llvm::AllocaInst*&gt;, llvm:: (6 samples, 0.13%)</title><rect x="693.2" y="5653" width="1.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="696.17" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.6" y="469" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="67.62" y="479.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2213" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="73.63" y="2223.5" ></text>
</g>
<g >
<title>`core::Symbol_O::fmakunbound_setf() (2 samples, 0.04%)</title><rect x="146.2" y="5093" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="149.16" y="5103.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.0" y="1493" width="0.3" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="65.01" y="1503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4181" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="137.14" y="4191.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="600.4" y="5589" width="0.3" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="603.39" y="5599.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="17.1" y="2277" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="20.06" y="2287.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="57.6" y="1493" width="0.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="60.57" y="1503.5" ></text>
</g>
<g >
<title>`PROCESS-REQUIRED^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2837" width="3.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="57.17" y="2847.5" ></text>
</g>
<g >
<title>`ENVIRONMENT-POLICY^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="44.5" y="4677" width="0.3" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="47.50" y="4687.5" ></text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="335.6" y="5189" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="338.64" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="4613" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="100.29" y="4623.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (3 samples, 0.07%)</title><rect x="209.4" y="5573" width="0.8" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="212.41" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1157" width="1.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="59.52" y="1167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.2" y="3733" width="0.2" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="132.18" y="3743.5" ></text>
</g>
<g >
<title>`core::read_lisp_object(gctools::smart_ptr&lt;core::T_O&gt;, bool, gct (2 samples, 0.04%)</title><rect x="421.4" y="5701" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="424.37" y="5711.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="320.5" y="5237" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="323.49" y="5247.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="735.8" y="5557" width="1.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="738.77" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (8 samples, 0.18%)</title><rect x="63.3" y="2805" width="2.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="66.32" y="2815.5" ></text>
</g>
<g >
<title>`GC_mark_some (2 samples, 0.04%)</title><rect x="33.5" y="4245" width="0.5" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="36.52" y="4255.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="51.0" y="2437" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="54.03" y="2447.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="269.5" y="5541" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="272.52" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="3781" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="131.65" y="3791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="148.8" y="4981" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="151.78" y="4991.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (4 samples, 0.09%)</title><rect x="565.6" y="5461" width="1.1" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="568.63" y="5471.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="148.3" y="5109" width="0.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="151.25" y="5119.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4149" width="9.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="17.18" y="4159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4181" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="137.93" y="4191.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="355.5" y="5205" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="358.51" y="5215.5" ></text>
</g>
<g >
<title>0x10d596094 (22 samples, 0.49%)</title><rect x="38.7" y="4677" width="5.8" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="41.75" y="4687.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="61.2" y="3045" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="64.22" y="3055.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="61.7" y="3221" width="0.8" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="64.75" y="3231.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::GVN::Expression, unsign (2 samples, 0.04%)</title><rect x="541.6" y="5557" width="0.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="544.59" y="5567.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="277" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="61.35" y="287.5" ></text>
</g>
<g >
<title>`IRC-CREATE-LANDING-PAD^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="345.6" y="5205" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="348.57" y="5215.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="171.0" y="5077" width="0.3" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="173.99" y="5087.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::StoreInst const*, llvm::Me (7 samples, 0.16%)</title><rect x="505.8" y="5573" width="1.8" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="508.78" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="581" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="65.01" y="591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="148.3" y="5141" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="151.25" y="5151.5" ></text>
</g>
<g >
<title>`runImpl(llvm::Function&amp;, llvm::LazyValueInfo*, llvm::SimplifyQu (33 samples, 0.73%)</title><rect x="430.3" y="5653" width="8.6" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="433.25" y="5663.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (1 samples, 0.02%)</title><rect x="418.8" y="5573" width="0.2" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="421.75" y="5583.5" ></text>
</g>
<g >
<title>`llvm::MDNodeKeyImpl&lt;llvm::DILocalVariable&gt;::getHashValue() cons (1 samples, 0.02%)</title><rect x="359.7" y="5077" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="362.69" y="5087.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="53.6" y="2933" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="56.65" y="2943.5" ></text>
</g>
<g >
<title>`UNSAFE-FUNCALL1^CORE^FN^^ (1 samples, 0.02%)</title><rect x="12.6" y="4149" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="15.61" y="4159.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (249 samples, 5.51%)</title><rect x="313.2" y="5461" width="65.0" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="316.17" y="5471.5" >`MEMOIZ..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.6" y="341" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="67.62" y="351.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Type*, std::__1::unique (1 samples, 0.02%)</title><rect x="343.0" y="5189" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="345.96" y="5199.5" ></text>
</g>
<g >
<title>`__gmp_default_reallocate (1 samples, 0.02%)</title><rect x="737.3" y="5701" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="740.34" y="5711.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="345.1" y="5141" width="0.2" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="348.05" y="5151.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.02%)</title><rect x="493.2" y="5493" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="496.24" y="5503.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="593.9" y="5605" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="596.86" y="5615.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2613" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="64.75" y="2623.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (3 samples, 0.07%)</title><rect x="36.7" y="4789" width="0.7" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="39.66" y="4799.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="586.3" y="5509" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="589.28" y="5519.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1653" width="1.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="57.17" y="1663.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (4 samples, 0.09%)</title><rect x="664.7" y="5573" width="1.0" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="667.68" y="5583.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.02%)</title><rect x="586.8" y="5573" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="589.80" y="5583.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2693" width="0.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="65.79" y="2703.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="44.5" y="4629" width="0.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="47.50" y="4639.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (20 samples, 0.44%)</title><rect x="54.2" y="3157" width="5.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="57.17" y="3167.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2517" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="66.05" y="2527.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="53.4" y="2709" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="56.38" y="2719.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4709" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="137.14" y="4719.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.02%)</title><rect x="334.1" y="4981" width="0.2" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="337.08" y="4991.5" ></text>
</g>
<g >
<title>`POSITION^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="43.2" y="4341" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="46.19" y="4351.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="1045" width="1.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="57.17" y="1055.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;std::__1::pair&lt;llvm::Basi (3 samples, 0.07%)</title><rect x="713.8" y="5637" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="716.82" y="5647.5" ></text>
</g>
<g >
<title>`llvm::SimplifyCall(llvm::ImmutableCallSite, llvm::SimplifyQuery (1 samples, 0.02%)</title><rect x="575.0" y="5573" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="578.04" y="5583.5" ></text>
</g>
<g >
<title>`MAKE-LET-INIT-ASTS^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2341" width="3.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="57.17" y="2351.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="12.9" y="4325" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="15.87" y="4335.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (5 samples, 0.11%)</title><rect x="54.2" y="1877" width="1.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="57.17" y="1887.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="71.7" y="3621" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="74.68" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5333" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="180.26" y="5343.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (2 samples, 0.04%)</title><rect x="488.3" y="5541" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="491.27" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4549" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="142.11" y="4559.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="686.6" y="5573" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="689.64" y="5583.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2197" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="64.75" y="2207.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="208.4" y="5381" width="0.2" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="211.37" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (30 samples, 0.66%)</title><rect x="37.4" y="4869" width="7.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="40.44" y="4879.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="66.5" y="1829" width="0.7" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="69.45" y="1839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (15 samples, 0.33%)</title><rect x="128.4" y="4821" width="3.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="131.39" y="4831.5" ></text>
</g>
<g >
<title>`llvm::Use::zap(llvm::Use*, llvm::Use const*, bool) (1 samples, 0.02%)</title><rect x="719.0" y="5589" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="722.05" y="5599.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4693" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="736.42" y="4703.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="57.6" y="1301" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="60.57" y="1311.5" ></text>
</g>
<g >
<title>`CALL-WITH-COMPILATION-RESULTS^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="58.3" y="1077" width="1.1" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="61.35" y="1087.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="203.1" y="5477" width="0.3" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="206.14" y="5487.5" ></text>
</g>
<g >
<title>`FUNCTION-DESCRIPTION-NAME^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="311.9" y="5461" width="0.7" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="314.86" y="5471.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="39.5" y="4165" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="42.53" y="4175.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4293" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="736.42" y="4303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.02%)</title><rect x="130.7" y="4581" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="133.74" y="4591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (19 samples, 0.42%)</title><rect x="152.4" y="5317" width="5.0" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="155.44" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'RETURN-FROM) T T (3 samples, 0.07%)</title><rect x="71.4" y="4021" width="0.8" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="74.42" y="4031.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::LoadInst_O&gt; gctools::GCObjectAppropri (1 samples, 0.02%)</title><rect x="322.6" y="5173" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="325.58" y="5183.5" ></text>
</g>
<g >
<title>`llvm::AAResults::Model&lt;llvm::BasicAAResult&gt;::~Model() (1 samples, 0.02%)</title><rect x="453.5" y="5653" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="456.51" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (30 samples, 0.66%)</title><rect x="27.5" y="4709" width="7.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="30.51" y="4719.5" ></text>
</g>
<g >
<title>`llvm::GVN::ValueTable::phiTranslate(llvm::BasicBlock const*, ll (5 samples, 0.11%)</title><rect x="577.9" y="5605" width="1.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="580.92" y="5615.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (1 samples, 0.02%)</title><rect x="125.5" y="5637" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="128.52" y="5647.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (18 samples, 0.40%)</title><rect x="65.4" y="3413" width="4.7" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="68.41" y="3423.5" ></text>
</g>
<g >
<title>`FORCE-DISPATCHER^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5557" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="736.42" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="167.1" y="5093" width="0.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="170.07" y="5103.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (27 samples, 0.60%)</title><rect x="666.3" y="5573" width="7.0" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="669.25" y="5583.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisPass(void const*) (1 samples, 0.02%)</title><rect x="599.9" y="5621" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="602.87" y="5631.5" ></text>
</g>
<g >
<title>`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="710.2" y="5573" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="713.16" y="5583.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ASSIGNMENT-INSTRUC (6 samples, 0.13%)</title><rect x="306.6" y="5477" width="1.6" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="309.63" y="5487.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="197.7" y="5477" width="0.2" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="200.65" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="49.7" y="3781" width="2.6" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="52.73" y="3791.5" ></text>
</g>
<g >
<title>`CCLASP-COMPILE*^CLASP-CLEAVIR^FN^^ (3 samples, 0.07%)</title><rect x="734.2" y="5541" width="0.8" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="737.20" y="5551.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.02%)</title><rect x="266.6" y="5509" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="269.65" y="5519.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="3301" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="73.63" y="3311.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1685" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="69.19" y="1695.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.07%)</title><rect x="50.8" y="3061" width="0.8" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="53.77" y="3071.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5621" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="713.94" y="5631.5" ></text>
</g>
<g >
<title>`MAKE-FUNCTION-INFO-MAP^CLASP-CLEAVIR^FN^^ (9 samples, 0.20%)</title><rect x="195.6" y="5637" width="2.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="198.56" y="5647.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.02%)</title><rect x="333.6" y="4981" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="336.55" y="4991.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::T_O&gt;::notnilp() const (1 samples, 0.02%)</title><rect x="298.0" y="5445" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="301.01" y="5455.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="409.3" y="5333" width="0.3" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="412.34" y="5343.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="444.1" y="5525" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="447.10" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.0" y="3013" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="65.01" y="3023.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="17.3" y="2005" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="20.32" y="2015.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeWrapperPass::releaseMemory() (6 samples, 0.13%)</title><rect x="689.0" y="5637" width="1.6" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="691.99" y="5647.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (1 samples, 0.02%)</title><rect x="109.1" y="5605" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="112.05" y="5615.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="332.5" y="5029" width="0.3" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="335.51" y="5039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4517" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="137.66" y="4527.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="79.5" y="3749" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="82.52" y="3759.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (4 samples, 0.09%)</title><rect x="56.5" y="1221" width="1.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="59.52" y="1231.5" ></text>
</g>
<g >
<title>`llvm::LLVMContext::getDiagnosticsOutputFile() (1 samples, 0.02%)</title><rect x="544.5" y="5557" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="547.46" y="5567.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T GLOBAL-FUNCTION-INFO))^METHOD (1 samples, 0.02%)</title><rect x="38.0" y="4661" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="40.96" y="4671.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="39.8" y="4149" width="1.0" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="42.79" y="4159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.1" y="4693" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="141.06" y="4703.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="62.5" y="1109" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="65.53" y="1119.5" ></text>
</g>
<g >
<title>`llvm::isFreeCall(llvm::Value const*, llvm::TargetLibraryInfo co (1 samples, 0.02%)</title><rect x="679.6" y="5605" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="682.58" y="5615.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="424.5" y="5685" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="427.50" y="5695.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="293" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="61.35" y="303.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="60.7" y="2693" width="0.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="63.70" y="2703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (11 samples, 0.24%)</title><rect x="148.3" y="5253" width="2.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="151.25" y="5263.5" ></text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.9" y="773" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="67.88" y="783.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.02%)</title><rect x="22.3" y="2677" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="25.28" y="2687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="137.8" y="4837" width="0.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="140.80" y="4847.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.02%)</title><rect x="136.2" y="3605" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="139.23" y="3615.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (9 samples, 0.20%)</title><rect x="74.6" y="3909" width="2.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="77.55" y="3919.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="493.2" y="5445" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="496.24" y="5455.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (4 samples, 0.09%)</title><rect x="85.5" y="4485" width="1.1" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="88.53" y="4495.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::OperandChangedState(llvm::In (1 samples, 0.02%)</title><rect x="582.6" y="5637" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="585.62" y="5647.5" ></text>
</g>
<g >
<title>`llvm::orc::IRTransformLayer&lt;llvm::orc::IRCompileLayer&lt;llvm::orc (1 samples, 0.02%)</title><rect x="734.7" y="5413" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="737.73" y="5423.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="362.0" y="5333" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="365.04" y="5343.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="85.0" y="4517" width="0.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="88.01" y="4527.5" ></text>
</g>
<g >
<title>`core::core__coerce_to_file_pathname(gctools::smart_ptr&lt;core::T_ (1 samples, 0.02%)</title><rect x="720.9" y="5701" width="0.2" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="723.87" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4597" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="137.66" y="4607.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (12 samples, 0.27%)</title><rect x="74.0" y="4197" width="3.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="77.03" y="4207.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (10 samples, 0.22%)</title><rect x="332.8" y="5141" width="2.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="335.77" y="5151.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefBehavior(llvm::ImmutableCallSite) (1 samples, 0.02%)</title><rect x="427.1" y="5653" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="430.12" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="3109" width="0.3" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="65.01" y="3119.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.07%)</title><rect x="374.6" y="5365" width="0.8" height="15.0" fill="rgb(215,73,73)" rx="2" ry="2" />
<text  x="377.58" y="5375.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (5 samples, 0.11%)</title><rect x="118.7" y="5477" width="1.3" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="121.72" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="17.6" y="1653" width="0.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="20.58" y="1663.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymou (1 samples, 0.02%)</title><rect x="701.8" y="5685" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="704.80" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="127.1" y="5445" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="130.09" y="5455.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T GLOBAL-FUNCTION-INFO))^METHOD (1 samples, 0.02%)</title><rect x="52.3" y="3765" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="55.34" y="3775.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4149" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="736.42" y="4159.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.02%)</title><rect x="26.7" y="4533" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="29.73" y="4543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.11%)</title><rect x="128.7" y="4453" width="1.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="131.65" y="4463.5" ></text>
</g>
<g >
<title>`COMPILE-TAG-CHECK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="320.5" y="5269" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="323.49" y="5279.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="285.7" y="5477" width="0.3" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="288.73" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="128.7" y="4389" width="1.0" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="131.65" y="4399.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="396.5" y="5221" width="0.3" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="399.54" y="5231.5" ></text>
</g>
<g >
<title>`LITERAL-DNODE-DATUM^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="424.8" y="5717" width="0.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="427.76" y="5727.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (2 samples, 0.04%)</title><rect x="567.2" y="5445" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="570.20" y="5455.5" ></text>
</g>
<g >
<title>`MAKE-CALL-AST^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="39.3" y="4133" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="42.27" y="4143.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="77.2" y="4261" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="80.17" y="4271.5" ></text>
</g>
<g >
<title>`LANDING-PAD^CLASP-CLEAVIR^FN^^ (17 samples, 0.38%)</title><rect x="395.0" y="5445" width="4.4" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="397.97" y="5455.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Value const*&gt;::insert(llvm::Value c (1 samples, 0.02%)</title><rect x="574.5" y="5493" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="577.52" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4773" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="141.85" y="4783.5" ></text>
</g>
<g >
<title>`GC_alloc_large (3 samples, 0.07%)</title><rect x="283.4" y="5477" width="0.8" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="286.37" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="66.2" y="1877" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="69.19" y="1887.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="70.1" y="3397" width="1.1" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="73.11" y="3407.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::BasicBlock*&gt;::find(llvm::BasicBlock (1 samples, 0.02%)</title><rect x="712.3" y="5653" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="715.25" y="5663.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (2 samples, 0.04%)</title><rect x="460.6" y="5525" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="463.57" y="5535.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (4 samples, 0.09%)</title><rect x="191.9" y="5445" width="1.0" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="194.90" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'TAGBODY) T T T)) (2 samples, 0.04%)</title><rect x="64.4" y="949" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="67.36" y="959.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="309.5" y="5381" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="312.51" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2357" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="73.63" y="2367.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="349.2" y="5237" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="352.23" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="933" width="0.3" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="65.53" y="943.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="137.5" y="4837" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="140.54" y="4847.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="493.8" y="5461" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="496.76" y="5471.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (15 samples, 0.33%)</title><rect x="441.5" y="5637" width="3.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="444.49" y="5647.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="16.3" y="2021" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="19.27" y="2031.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (4 samples, 0.09%)</title><rect x="27.5" y="4405" width="1.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="30.51" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (7 samples, 0.16%)</title><rect x="148.5" y="5093" width="1.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="151.52" y="5103.5" ></text>
</g>
<g >
<title>`llvm::getOrEnforceKnownAlignment(llvm::Value*, unsigned int, ll (28 samples, 0.62%)</title><rect x="666.3" y="5605" width="7.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="669.25" y="5615.5" ></text>
</g>
<g >
<title>`CODEGEN-STARTUP-SHUTDOWN^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="734.2" y="5525" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="737.20" y="5535.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (10 samples, 0.22%)</title><rect x="223.5" y="5541" width="2.6" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="226.52" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4005" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="132.96" y="4015.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (7 samples, 0.16%)</title><rect x="17.8" y="2037" width="1.9" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="20.84" y="2047.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="741" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="65.53" y="751.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;llvm::BasicBlock*, llvm:: (2 samples, 0.04%)</title><rect x="568.8" y="5541" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="571.77" y="5551.5" ></text>
</g>
<g >
<title>`llvm::isMallocOrCallocLikeFn(llvm::Value const*, llvm::TargetLi (1 samples, 0.02%)</title><rect x="560.1" y="5461" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="563.14" y="5471.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="773" width="1.0" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="58.48" y="783.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (2 samples, 0.04%)</title><rect x="263.2" y="5557" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="266.25" y="5567.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.02%)</title><rect x="367.5" y="5349" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="370.53" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (91 samples, 2.02%)</title><rect x="12.4" y="5381" width="23.7" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="15.35" y="5391.5" >`..</text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="321.8" y="5221" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="324.79" y="5231.5" ></text>
</g>
<g >
<title>`llvm::Use::initTags(llvm::Use*, llvm::Use*) (1 samples, 0.02%)</title><rect x="364.1" y="5205" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="367.13" y="5215.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5397" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="736.42" y="5407.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hash_combine&lt;unsigned int, unsigned int,  (1 samples, 0.02%)</title><rect x="316.3" y="5205" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="319.30" y="5215.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (4 samples, 0.09%)</title><rect x="396.5" y="5269" width="1.1" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="399.54" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="23.1" y="3733" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="26.07" y="3743.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="741" width="1.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="59.52" y="751.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="334.9" y="5093" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="337.86" y="5103.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.02%)</title><rect x="332.2" y="4997" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="335.25" y="5007.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::GlobalObject const*, ll (1 samples, 0.02%)</title><rect x="720.4" y="5653" width="0.2" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="723.35" y="5663.5" ></text>
</g>
<g >
<title>`ERROR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="735.2" y="5669" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="738.25" y="5679.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (2 samples, 0.04%)</title><rect x="231.4" y="5365" width="0.5" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="234.36" y="5375.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="349.2" y="5221" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="352.23" y="5231.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="469" width="1.0" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="58.48" y="479.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (5 samples, 0.11%)</title><rect x="12.4" y="4533" width="1.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="15.35" y="4543.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="710.2" y="5605" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="713.16" y="5615.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (12 samples, 0.27%)</title><rect x="717.7" y="5765" width="3.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="720.74" y="5775.5" ></text>
</g>
<g >
<title>`core::Function_O::functionName() const (2 samples, 0.04%)</title><rect x="305.3" y="5429" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="308.33" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="3989" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="137.14" y="3999.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="71.4" y="4053" width="0.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="74.42" y="4063.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasGEP(llvm::GEPOperator const*, unsigne (29 samples, 0.64%)</title><rect x="549.2" y="5461" width="7.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="552.17" y="5471.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (5 samples, 0.11%)</title><rect x="488.0" y="5573" width="1.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="491.01" y="5583.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="61.2" y="1877" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="64.22" y="1887.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (7 samples, 0.16%)</title><rect x="135.2" y="4901" width="1.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="138.19" y="4911.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (4 samples, 0.09%)</title><rect x="75.3" y="3717" width="1.1" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="78.34" y="3727.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="17.6" y="1957" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="20.58" y="1967.5" ></text>
</g>
<g >
<title>`llvm::APInt::APInt(unsigned int, unsigned long long, bool) (1 samples, 0.02%)</title><rect x="511.0" y="5493" width="0.3" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="514.01" y="5503.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (2 samples, 0.04%)</title><rect x="181.4" y="5509" width="0.6" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="184.45" y="5519.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::SelectAllBasicBlocks(llvm::Function con (1 samples, 0.02%)</title><rect x="57.8" y="853" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="60.83" y="863.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::getHash() const (1 samples, 0.02%)</title><rect x="660.2" y="5365" width="0.3" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="663.24" y="5375.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.02%)</title><rect x="71.9" y="3781" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="74.94" y="3791.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="21.5" y="1477" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="24.50" y="1487.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="735.0" y="5333" width="0.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="737.99" y="5343.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldBinaryInstruction(unsigned int, llvm::Constan (1 samples, 0.02%)</title><rect x="405.9" y="5301" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="408.95" y="5311.5" ></text>
</g>
<g >
<title>`TRANSLATE-FUNCALL^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5365" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="123.55" y="5375.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="269.0" y="5317" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="272.00" y="5327.5" ></text>
</g>
<g >
<title>`PROCESS-OPTIONALS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4917" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="100.29" y="4927.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="67.2" y="1621" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="70.24" y="1631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.20%)</title><rect x="24.6" y="4741" width="2.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="27.64" y="4751.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="517" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="65.53" y="527.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;llvm::PoisoningVH&lt;llvm:: (2 samples, 0.04%)</title><rect x="431.0" y="5573" width="0.6" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="434.04" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="55.5" y="133" width="1.0" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="58.48" y="143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="177.3" y="5493" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="180.26" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.4" y="2757" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="56.38" y="2767.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.04%)</title><rect x="186.2" y="5525" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="189.15" y="5535.5" ></text>
</g>
<g >
<title>`FIND-SLOT-DEFINITION^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="188.0" y="5541" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="190.98" y="5551.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="11.3" y="4981" width="1.1" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="14.31" y="4991.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (2 samples, 0.04%)</title><rect x="562.5" y="5493" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="565.50" y="5503.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::GVN::Expression, u (2 samples, 0.04%)</title><rect x="541.6" y="5541" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="544.59" y="5551.5" ></text>
</g>
<g >
<title>`GENERATE-AST^CLASP-CLEAVIR^FN^^ (332 samples, 7.35%)</title><rect x="11.3" y="5685" width="86.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="14.31" y="5695.5" >`GENERATE-..</text>
</g>
<g >
<title>`INSERT-INSTRUCTION-AFTER^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="241.3" y="5573" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="244.30" y="5583.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.02%)</title><rect x="354.5" y="5237" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="357.46" y="5247.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="21.0" y="1829" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="23.98" y="1839.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (4 samples, 0.09%)</title><rect x="75.3" y="3701" width="1.1" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="78.34" y="3711.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="75.1" y="3829" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="78.08" y="3839.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (332 samples, 7.35%)</title><rect x="11.3" y="5653" width="86.8" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="14.31" y="5663.5" >`COMBINE-M..</text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.02%)</title><rect x="382.4" y="5445" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="385.43" y="5455.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.02%)</title><rect x="36.9" y="4693" width="0.3" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="39.92" y="4703.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MDNode*, llvm::SmallVec (1 samples, 0.02%)</title><rect x="519.9" y="5605" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="522.90" y="5615.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4757" width="1.0" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="26.59" y="4767.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="3045" width="0.2" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="65.27" y="3055.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.8" y="2277" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="65.79" y="2287.5" ></text>
</g>
<g >
<title>`std::__1::basic_stringbuf&lt;char, std::__1::char_traits&lt;char&gt;, st (1 samples, 0.02%)</title><rect x="120.6" y="5221" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="123.55" y="5231.5" ></text>
</g>
<g >
<title>`llvm::KnownBits::zextOrTrunc(unsigned int) (1 samples, 0.02%)</title><rect x="498.5" y="5493" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="501.47" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (2 samples, 0.04%)</title><rect x="67.5" y="1557" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="70.50" y="1567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.1" y="4853" width="0.6" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="137.14" y="4863.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="71.4" y="3669" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="74.42" y="3679.5" ></text>
</g>
<g >
<title>`llvm::SparseSolver&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anon (7 samples, 0.16%)</title><rect x="708.3" y="5669" width="1.9" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="711.33" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="24.6" y="4101" width="1.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="27.64" y="4111.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2741" width="1.8" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="60.57" y="2751.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="16.0" y="3605" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="19.01" y="3615.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LoopInvariantCodeMotion::runOnLoop(llvm: (2 samples, 0.04%)</title><rect x="522.8" y="5637" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="525.77" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="1813" width="1.8" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="60.57" y="1823.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="333.6" y="4997" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="336.55" y="5007.5" ></text>
</g>
<g >
<title>`llvm::getObjectSize(llvm::Value const*, unsigned long long&amp;, ll (2 samples, 0.04%)</title><rect x="545.5" y="5445" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="548.51" y="5455.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisPass(void const*) (2 samples, 0.04%)</title><rect x="454.0" y="5621" width="0.6" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="457.04" y="5631.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="560.9" y="5477" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="563.93" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="2613" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="64.22" y="2623.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="57.8" y="1173" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="60.83" y="1183.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (1 samples, 0.02%)</title><rect x="65.9" y="901" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="68.93" y="911.5" ></text>
</g>
<g >
<title>`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="311.9" y="5253" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="314.86" y="5263.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.02%)</title><rect x="163.4" y="4981" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="166.41" y="4991.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="885" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="65.01" y="895.5" ></text>
</g>
<g >
<title>`llvm::PopulateLoopsDFS&lt;llvm::BasicBlock, llvm::Loop&gt;::insertInt (1 samples, 0.02%)</title><rect x="685.6" y="5621" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="688.59" y="5631.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (22 samples, 0.49%)</title><rect x="28.6" y="4421" width="5.7" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="31.56" y="4431.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::BinaryOp_match&lt;llvm::PatternMatch::Bin (2 samples, 0.04%)</title><rect x="649.0" y="5589" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="652.00" y="5599.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="121.6" y="5557" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="124.60" y="5567.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (5 samples, 0.11%)</title><rect x="422.9" y="5685" width="1.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="425.93" y="5695.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="278.9" y="5445" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="281.93" y="5455.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="175.7" y="5301" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="178.70" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4533" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="139.23" y="4543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.1" y="4629" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="141.06" y="4639.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="75.1" y="3669" width="0.2" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="78.08" y="3679.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.0" y="1653" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="65.01" y="1663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="2805" width="0.3" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="65.79" y="2815.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="400.5" y="5381" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="403.46" y="5391.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="96.2" y="4773" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="99.25" y="4783.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(l (4 samples, 0.09%)</title><rect x="567.2" y="5493" width="1.0" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="570.20" y="5503.5" ></text>
</g>
<g >
<title>`CHECK-SPECIAL-FORM-SYNTAX^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="37.4" y="4821" width="0.6" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="40.44" y="4831.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="735.2" y="5573" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="738.25" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="16.3" y="2485" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="19.27" y="2495.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (2 samples, 0.04%)</title><rect x="68.0" y="2597" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="71.02" y="2607.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="1029" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="20.58" y="1039.5" ></text>
</g>
<g >
<title>`DELETE-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.04%)</title><rect x="202.9" y="5557" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="205.88" y="5567.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="65.7" y="2117" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="68.67" y="2127.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="65.7" y="1893" width="0.2" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="68.67" y="1903.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (1 samples, 0.02%)</title><rect x="167.9" y="4949" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="170.86" y="4959.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (5 samples, 0.11%)</title><rect x="54.2" y="1413" width="1.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="57.17" y="1423.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="189.8" y="5509" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="192.81" y="5519.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="114.5" y="5573" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="117.54" y="5583.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="65.9" y="1093" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="68.93" y="1103.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="656.3" y="5589" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="659.32" y="5599.5" ></text>
</g>
<g >
<title>`LITERAL-NODE-CREATOR-LITERAL-NAME^LITERAL^FN^^ (2 samples, 0.04%)</title><rect x="121.1" y="5605" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="124.07" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4597" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="135.31" y="4607.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;std::__1::__value_type&lt;llvm::Function const*,  (1 samples, 0.02%)</title><rect x="700.8" y="5589" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="703.75" y="5599.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::eraseInstFromFunction(llvm::Instruction&amp;) (1 samples, 0.02%)</title><rect x="665.7" y="5605" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="668.73" y="5615.5" ></text>
</g>
<g >
<title>`llvm::JumpThreadingPass::ProcessImpliedCondition(llvm::BasicBlo (1 samples, 0.02%)</title><rect x="446.7" y="5621" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="449.72" y="5631.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="79.8" y="3605" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="82.78" y="3615.5" ></text>
</g>
<g >
<title>`wrapped_Create_llvm__LLVMContext_const_llvm__Twine_llvm__Functi (1 samples, 0.02%)</title><rect x="365.4" y="5397" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="368.44" y="5407.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2277" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="71.28" y="2287.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (5 samples, 0.11%)</title><rect x="46.9" y="4997" width="1.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="49.85" y="5007.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2565" width="0.2" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="66.05" y="2575.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (2 samples, 0.04%)</title><rect x="160.0" y="4949" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="163.02" y="4959.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="349.8" y="5269" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="352.76" y="5279.5" ></text>
</g>
<g >
<title>`FAST-SUBTYPEP^CORE^FN^^ (2 samples, 0.04%)</title><rect x="51.0" y="2517" width="0.6" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="54.03" y="2527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="4005" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="131.65" y="4015.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (2 samples, 0.04%)</title><rect x="278.7" y="5509" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="281.67" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (1 samples, 0.02%)</title><rect x="97.6" y="4981" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="100.55" y="4991.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (332 samples, 7.35%)</title><rect x="11.3" y="5589" width="86.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="14.31" y="5599.5" >`CONVERT^C..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="1621" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="65.27" y="1631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="2261" width="1.8" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="60.57" y="2271.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="1525" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="65.27" y="1535.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="241.6" y="5509" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="244.56" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="126.8" y="5557" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="129.82" y="5567.5" ></text>
</g>
<g >
<title>`MAKE-SINGLE-FLOAT-P-INSTRUCTION^CC-MIR^FN^^ (1 samples, 0.02%)</title><rect x="258.8" y="5525" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="261.81" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="67.5" y="1941" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="70.50" y="1951.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="108.8" y="5589" width="0.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="111.79" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="65.4" y="2229" width="0.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="68.41" y="2239.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="12.9" y="4261" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="15.87" y="4271.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="2965" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="100.29" y="2975.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.0" y="789" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="65.01" y="799.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="14.7" y="2949" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="17.70" y="2959.5" ></text>
</g>
<g >
<title>`GC_mark_some (2 samples, 0.04%)</title><rect x="373.8" y="5253" width="0.5" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="376.80" y="5263.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="71.4" y="3653" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="74.42" y="3663.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="610.3" y="5541" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="613.32" y="5551.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Instruction*, unsigned long, llvm::DenseMa (1 samples, 0.02%)</title><rect x="452.7" y="5621" width="0.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="455.73" y="5631.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (5 samples, 0.11%)</title><rect x="232.1" y="5557" width="1.4" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="235.15" y="5567.5" ></text>
</g>
<g >
<title>`PROCESS-AUX^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="50.8" y="3093" width="0.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="53.77" y="3103.5" ></text>
</g>
<g >
<title>`EXECUTE-LINK-FASL^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="720.9" y="5781" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="723.87" y="5791.5" ></text>
</g>
<g >
<title>`IRC-GEP-VARIABLE^COMPILER^FN^^ (6 samples, 0.13%)</title><rect x="351.8" y="5285" width="1.6" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="354.85" y="5295.5" ></text>
</g>
<g >
<title>`UNSAFE-FUNCALL1^CORE^FN^^ (2 samples, 0.04%)</title><rect x="51.0" y="2549" width="0.6" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="54.03" y="2559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="177.3" y="5397" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="180.26" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="127.1" y="5493" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="130.09" y="5503.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T  (9 samples, 0.20%)</title><rect x="330.4" y="5141" width="2.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="333.42" y="5151.5" ></text>
</g>
<g >
<title>`CCLASP-EVAL^CLASP-CLEAVIR^FN^^ (2,981 samples, 66.02%)</title><rect x="10.0" y="6133" width="779.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="13.00" y="6143.5" >`CCLASP-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (117 samples, 2.59%)</title><rect x="325.7" y="5317" width="30.6" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="328.71" y="5327.5" >`D..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="61.7" y="2133" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="64.75" y="2143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.5" y="5365" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="180.53" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="805" width="1.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="57.17" y="815.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="60.4" y="2805" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="63.44" y="2815.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.3" y="1781" width="0.2" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="65.27" y="1791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4085" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="135.31" y="4095.5" ></text>
</g>
<g >
<title>`IRC-GEP^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="385.0" y="5413" width="0.6" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="388.04" y="5423.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="172.8" y="5189" width="0.3" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="175.82" y="5199.5" ></text>
</g>
<g >
<title>`DBG-CLEAR-IRBUILDER-SOURCE-LOCATION^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="318.1" y="5301" width="0.6" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="321.13" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (6 samples, 0.13%)</title><rect x="24.6" y="4597" width="1.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="27.64" y="4607.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.02%)</title><rect x="399.2" y="5397" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="402.15" y="5407.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="198.7" y="5589" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="201.70" y="5599.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="53.4" y="2917" width="0.2" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="56.38" y="2927.5" ></text>
</g>
<g >
<title>`void llvm::BitstreamWriter::EmitRecord&lt;llvm::SmallVectorImpl&lt;un (1 samples, 0.02%)</title><rect x="723.5" y="5621" width="0.2" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="726.49" y="5631.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="39.3" y="4293" width="1.8" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="42.27" y="4303.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorImpl&lt;llvm::detail::PtrUseVisitorBase::UseToVis (1 samples, 0.02%)</title><rect x="581.3" y="5605" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="584.31" y="5615.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_short(char const*, unsigned long, u (1 samples, 0.02%)</title><rect x="476.0" y="5461" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="478.99" y="5471.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.04%)</title><rect x="279.2" y="5573" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="282.19" y="5583.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (4 samples, 0.09%)</title><rect x="20.2" y="1925" width="1.0" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="23.19" y="1935.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (7 samples, 0.16%)</title><rect x="234.2" y="5477" width="1.9" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="237.24" y="5487.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::track(void*, llvm::Metadata&amp;, llvm::Poi (1 samples, 0.02%)</title><rect x="514.7" y="5621" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="517.67" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (4 samples, 0.09%)</title><rect x="55.5" y="1621" width="1.0" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="58.48" y="1631.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2805" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="66.05" y="2815.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="115.3" y="5557" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="118.32" y="5567.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.02%)</title><rect x="371.7" y="5381" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="374.71" y="5391.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="311.9" y="5317" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="314.86" y="5327.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((FUNCALL-INSTRUCTIO (1 samples, 0.02%)</title><rect x="120.6" y="5381" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="123.55" y="5391.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="166.3" y="5029" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="169.29" y="5039.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="56.5" y="341" width="1.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="59.52" y="351.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="71.4" y="3989" width="0.8" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="74.42" y="3999.5" ></text>
</g>
<g >
<title>`PROCESS-OPTIONALS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3797" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="100.29" y="3807.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((HEADERQ-INSTRUCTIO (6 samples, 0.13%)</title><rect x="320.7" y="5285" width="1.6" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="323.75" y="5295.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.3" y="3685" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="100.29" y="3695.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="614.0" y="5493" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="616.98" y="5503.5" ></text>
</g>
<g >
<title>`HIR-&gt;MIR^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="734.5" y="5525" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="737.47" y="5535.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="50.0" y="3445" width="1.6" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="52.99" y="3455.5" ></text>
</g>
<g >
<title>`llvm::ReplaceableMetadataImpl::getIfExists(llvm::Metadata&amp;) (1 samples, 0.02%)</title><rect x="412.0" y="5237" width="0.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="414.96" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="131.3" y="4565" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="134.27" y="4575.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (3 samples, 0.07%)</title><rect x="363.9" y="5285" width="0.8" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="366.87" y="5295.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.02%)</title><rect x="220.4" y="5573" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="223.39" y="5583.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="225.4" y="5477" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="228.35" y="5487.5" ></text>
</g>
<g >
<title>`llvm::KnownBits::zextOrTrunc(unsigned int) (1 samples, 0.02%)</title><rect x="516.2" y="5525" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="519.24" y="5535.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.7" y="1957" width="0.2" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="68.67" y="1967.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4197" width="0.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="132.96" y="4207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (13 samples, 0.29%)</title><rect x="128.7" y="4789" width="3.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="131.65" y="4799.5" ></text>
</g>
<g >
<title>`IRC-BASIC-BLOCK-CREATE^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="396.5" y="5381" width="1.1" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="399.54" y="5391.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="338.0" y="5141" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="341.00" y="5151.5" ></text>
</g>
<g >
<title>`GC_mark_from (2 samples, 0.04%)</title><rect x="208.6" y="5301" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="211.63" y="5311.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="70.6" y="2085" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="73.63" y="2095.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="57.6" y="3013" width="1.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="60.57" y="3023.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.20%)</title><rect x="24.6" y="4901" width="2.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="27.64" y="4911.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::Value*, llvm::ValueLatticeElem (1 samples, 0.02%)</title><rect x="435.2" y="5525" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="438.22" y="5535.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisUsage(llvm::Pass*) (1 samples, 0.02%)</title><rect x="536.1" y="5669" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="539.10" y="5679.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::getHash() const (1 samples, 0.02%)</title><rect x="572.4" y="5461" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="575.43" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (10 samples, 0.22%)</title><rect x="78.0" y="4741" width="2.6" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="80.95" y="4751.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_O, gctools::smar (1 samples, 0.02%)</title><rect x="121.3" y="5573" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="124.34" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4613" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="136.62" y="4623.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="2245" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="73.63" y="2255.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="62.5" y="2821" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="65.53" y="2831.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="38.0" y="4629" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="40.96" y="4639.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (3 samples, 0.07%)</title><rect x="160.5" y="4901" width="0.8" height="15.0" fill="rgb(208,61,61)" rx="2" ry="2" />
<text  x="163.54" y="4911.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeAllocSize(llvm::Type*) const (1 samples, 0.02%)</title><rect x="548.9" y="5349" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="551.91" y="5359.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::getValueState(llvm::Value*) (1 samples, 0.02%)</title><rect x="711.5" y="5669" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="714.47" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4213" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="132.96" y="4223.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="2037" width="0.3" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="65.53" y="2047.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="1589" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="65.01" y="1599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="1893" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="65.27" y="1903.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="642.7" y="5461" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="645.73" y="5471.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="80.6" y="4581" width="0.2" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="83.56" y="4591.5" ></text>
</g>
<g >
<title>`llvm::ReassociatePass::ReassociateExpression(llvm::BinaryOperat (1 samples, 0.02%)</title><rect x="449.9" y="5621" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="452.85" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="773" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="68.93" y="783.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="66.2" y="1589" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="69.19" y="1599.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisUsage(llvm::Pass*) (1 samples, 0.02%)</title><rect x="692.1" y="5653" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="695.13" y="5663.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (1 samples, 0.02%)</title><rect x="565.9" y="5429" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="568.89" y="5439.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="171.3" y="5157" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="174.25" y="5167.5" ></text>
</g>
<g >
<title>0x10d596094 (3 samples, 0.07%)</title><rect x="12.4" y="4421" width="0.7" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="15.35" y="4431.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="67.0" y="1637" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="69.97" y="1647.5" ></text>
</g>
<g >
<title>`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="563.0" y="5413" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="566.02" y="5423.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="78.7" y="3557" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="81.74" y="3567.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeAllocSize(llvm::Type*) const (3 samples, 0.07%)</title><rect x="468.9" y="5573" width="0.8" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="471.93" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (2 samples, 0.04%)</title><rect x="79.8" y="3733" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="82.78" y="3743.5" ></text>
</g>
<g >
<title>`OUTPUT-BITCODE^COMPILER^FN^^ (42 samples, 0.93%)</title><rect x="721.4" y="5797" width="11.0" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="724.40" y="5807.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (2 samples, 0.04%)</title><rect x="370.9" y="5349" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="373.93" y="5359.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="23.1" y="3749" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="26.07" y="3759.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4917" width="0.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="736.42" y="4927.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="79.3" y="3717" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="82.26" y="3727.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="67.0" y="1477" width="0.2" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="69.97" y="1487.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;std::__1::pair&lt;llvm::Memo (2 samples, 0.04%)</title><rect x="529.6" y="5557" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="532.57" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4261" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="137.14" y="4271.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (1 samples, 0.02%)</title><rect x="155.6" y="5189" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="158.57" y="5199.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeAllocSize(llvm::Type*) const (1 samples, 0.02%)</title><rect x="614.8" y="5589" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="617.77" y="5599.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (1 samples, 0.02%)</title><rect x="734.7" y="5333" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="737.73" y="5343.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.02%)</title><rect x="351.1" y="5189" width="0.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="354.06" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="917" width="1.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="57.17" y="927.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::reinsertValue(llvm::Value*) (3 samples, 0.07%)</title><rect x="375.4" y="5349" width="0.8" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="378.37" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (27 samples, 0.60%)</title><rect x="27.5" y="4517" width="7.1" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="30.51" y="4527.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="62.0" y="357" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="65.01" y="367.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-AST^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="71.9" y="3845" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="74.94" y="3855.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitAnd(llvm::BinaryOperator&amp;) (2 samples, 0.04%)</title><rect x="635.2" y="5621" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="638.15" y="5631.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (1 samples, 0.02%)</title><rect x="412.7" y="5365" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="415.74" y="5375.5" ></text>
</g>
<g >
<title>`core::cl__parse_integer(gctools::smart_ptr&lt;core::Array_O&gt;, long (2 samples, 0.04%)</title><rect x="733.4" y="5717" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="736.42" y="5727.5" ></text>
</g>
<g >
<title>`GC_allocobj (1 samples, 0.02%)</title><rect x="203.1" y="5429" width="0.3" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="206.14" y="5439.5" ></text>
</g>
<g >
<title>`DYNENV-DESTINATIONS^CLASP-CLEAVIR^FN^^ (3 samples, 0.07%)</title><rect x="398.6" y="5413" width="0.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="401.63" y="5423.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="1093" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="67.88" y="1103.5" ></text>
</g>
<g >
<title>`llvm::BlockFrequencyInfoImplBase::finalizeMetrics() (1 samples, 0.02%)</title><rect x="602.2" y="5637" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="605.22" y="5647.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="49.2" y="5109" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="52.20" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4741" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="137.66" y="4751.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="64.4" y="1045" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="67.36" y="1055.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5077" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="736.42" y="5087.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (1 samples, 0.02%)</title><rect x="340.6" y="5221" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="343.61" y="5231.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2389" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="65.01" y="2399.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="734.7" y="5509" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="737.73" y="5519.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2629" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="66.05" y="2639.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (5 samples, 0.11%)</title><rect x="363.9" y="5333" width="1.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="366.87" y="5343.5" ></text>
</g>
<g >
<title>`llvm::APInt::sdiv_ov(llvm::APInt const&amp;, bool&amp;) const (1 samples, 0.02%)</title><rect x="661.5" y="5429" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="664.55" y="5439.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2837" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="73.63" y="2847.5" ></text>
</g>
<g >
<title>`OPTIMIZED-FETCH-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="241.0" y="5541" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="244.03" y="5551.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::APInt_O&gt; gctools::GCObjectAppropriate (1 samples, 0.02%)</title><rect x="402.5" y="5397" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="405.55" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="97.3" y="5317" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="100.29" y="5327.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedUseBits(llvm::Value*, llvm: (4 samples, 0.09%)</title><rect x="498.2" y="5573" width="1.0" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="501.20" y="5583.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.04%)</title><rect x="239.5" y="5557" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="242.47" y="5567.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="653.4" y="5525" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="656.45" y="5535.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (2 samples, 0.04%)</title><rect x="510.5" y="5493" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="513.49" y="5503.5" ></text>
</g>
<g >
<title>`llvm::IRBuilderBase::SetInstDebugLocation(llvm::Instruction*) c (1 samples, 0.02%)</title><rect x="412.0" y="5285" width="0.2" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="414.96" y="5295.5" ></text>
</g>
<g >
<title>`GC_allocobj (4 samples, 0.09%)</title><rect x="164.2" y="4949" width="1.0" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="167.20" y="4959.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="65.9" y="1045" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="68.93" y="1055.5" ></text>
</g>
<g >
<title>`IRC-TMV-NRET^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="392.1" y="5413" width="0.8" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="395.10" y="5423.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::ConstantExpr*, llv (1 samples, 0.02%)</title><rect x="493.2" y="5397" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="496.24" y="5407.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="259.9" y="5573" width="0.2" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="262.85" y="5583.5" ></text>
</g>
<g >
<title>`FIND-SIMILAR^LITERAL^FN^^ (2 samples, 0.04%)</title><rect x="370.9" y="5333" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="373.93" y="5343.5" ></text>
</g>
<g >
<title>`GLOBAL-FTYPE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="43.7" y="4309" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="46.71" y="4319.5" ></text>
</g>
<g >
<title>`SIGNAL-SIMPLE-ERROR^CORE^FN^^ (1 samples, 0.02%)</title><rect x="735.0" y="5621" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="737.99" y="5631.5" ></text>
</g>
<g >
<title>`core::SimpleCharacterString_O::get_std_string() const (2 samples, 0.04%)</title><rect x="113.2" y="5605" width="0.6" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="116.23" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="3189" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="73.63" y="3199.5" ></text>
</g>
<g >
<title>`llvm::isNoAliasFn(llvm::Value const*, llvm::TargetLibraryInfo c (1 samples, 0.02%)</title><rect x="561.5" y="5509" width="0.2" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="564.45" y="5519.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.04%)</title><rect x="168.9" y="4949" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="171.90" y="4959.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="55.5" y="629" width="1.0" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="58.48" y="639.5" ></text>
</g>
<g >
<title>`llvm::Module::getFunction(llvm::StringRef) const (1 samples, 0.02%)</title><rect x="434.4" y="5605" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="437.43" y="5615.5" ></text>
</g>
<g >
<title>`llvm::GVN::processNonLocalLoad(llvm::LoadInst*) (30 samples, 0.66%)</title><rect x="561.7" y="5589" width="7.9" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="564.71" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="63.8" y="2245" width="1.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="66.84" y="2255.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (1 samples, 0.02%)</title><rect x="59.1" y="901" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="62.13" y="911.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="378.0" y="5429" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="380.98" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="3941" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="139.76" y="3951.5" ></text>
</g>
<g >
<title>`llvm::ExtractValueInst::Create(llvm::Value*, llvm::ArrayRef&lt;uns (1 samples, 0.02%)</title><rect x="333.6" y="4933" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="336.55" y="4943.5" ></text>
</g>
<g >
<title>0x10d596094 (18 samples, 0.40%)</title><rect x="17.3" y="2437" width="4.7" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="20.32" y="2447.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="128.7" y="3749" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="131.65" y="3759.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="71.2" y="3493" width="0.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="74.16" y="3503.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (8 samples, 0.18%)</title><rect x="17.8" y="2069" width="2.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="20.84" y="2079.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="55.5" y="885" width="1.0" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="58.48" y="895.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.09%)</title><rect x="145.1" y="5173" width="1.1" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="148.12" y="5183.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.02%)</title><rect x="599.6" y="5637" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="602.61" y="5647.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="420.3" y="5541" width="0.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="423.32" y="5551.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="474.9" y="5541" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="477.94" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.8" y="5445" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="180.79" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (3 samples, 0.07%)</title><rect x="64.1" y="1301" width="0.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="67.10" y="1311.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.02%)</title><rect x="560.9" y="5445" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="563.93" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="869" width="1.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="59.52" y="879.5" ></text>
</g>
<g >
<title>`llvm::LegacyAARGetter::operator()(llvm::Function&amp;) (1 samples, 0.02%)</title><rect x="427.4" y="5669" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="430.38" y="5679.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="57.6" y="709" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="60.57" y="719.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (10 samples, 0.22%)</title><rect x="74.6" y="4005" width="2.6" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="77.55" y="4015.5" ></text>
</g>
<g >
<title>`GC_mark_from (3 samples, 0.07%)</title><rect x="153.0" y="4949" width="0.7" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="155.96" y="4959.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="62.5" y="2949" width="0.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="65.53" y="2959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.02%)</title><rect x="143.8" y="5301" width="0.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="146.81" y="5311.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.02%)</title><rect x="506.8" y="5365" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="509.83" y="5375.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="17.6" y="1829" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="20.58" y="1839.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="1813" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="68.93" y="1823.5" ></text>
</g>
<g >
<title>`GC_clear_marks (17 samples, 0.38%)</title><rect x="739.7" y="5653" width="4.4" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="742.69" y="5663.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="292.5" y="5349" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="295.52" y="5359.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="63.8" y="1957" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="66.84" y="1967.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (2 samples, 0.04%)</title><rect x="373.8" y="5269" width="0.5" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="376.80" y="5279.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="4501" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="100.55" y="4511.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::pointsToConstantMemory(llvm::MemoryLocatio (4 samples, 0.09%)</title><rect x="502.6" y="5525" width="1.1" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="505.65" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (6 samples, 0.13%)</title><rect x="66.5" y="2005" width="1.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="69.45" y="2015.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="677" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="65.01" y="687.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="24.6" y="3957" width="0.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="27.64" y="3967.5" ></text>
</g>
<g >
<title>`llvm::isMathLibCallNoop(llvm::CallSite, llvm::TargetLibraryInfo (1 samples, 0.02%)</title><rect x="522.5" y="5621" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="525.51" y="5631.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="192.9" y="5493" width="0.3" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="195.95" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (4 samples, 0.09%)</title><rect x="11.3" y="5045" width="1.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="14.31" y="5055.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="683.0" y="5605" width="0.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="685.98" y="5615.5" ></text>
</g>
<g >
<title>`REMOVE-DUPLICATES^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="398.6" y="5349" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="401.63" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="177.3" y="5573" width="0.7" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="180.26" y="5583.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::~FPPassManager() (1 samples, 0.02%)</title><rect x="58.9" y="805" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="61.87" y="815.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="11.3" y="5093" width="1.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="14.31" y="5103.5" ></text>
</g>
<g >
<title>`core::utf_8_decoder(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="421.4" y="5589" width="0.2" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="424.37" y="5599.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="386.1" y="5365" width="0.2" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="389.08" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2693" width="1.8" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="60.57" y="2703.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::Solve() (7 samples, 0.16%)</title><rect x="582.4" y="5653" width="1.8" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="585.36" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.4" y="3973" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="132.44" y="3983.5" ></text>
</g>
<g >
<title>`FUNCTION-INLINE^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="52.3" y="3685" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="55.34" y="3695.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="402.8" y="5413" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="405.81" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4741" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="135.31" y="4751.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="2341" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="64.22" y="2351.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="805" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="67.88" y="815.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_combine_recursive_helper::combine(u (1 samples, 0.02%)</title><rect x="612.7" y="5493" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="615.68" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (13 samples, 0.29%)</title><rect x="54.2" y="2421" width="3.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="57.17" y="2431.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="344.8" y="5189" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="347.79" y="5199.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (8 samples, 0.18%)</title><rect x="39.0" y="4453" width="2.1" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="42.01" y="4463.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (2 samples, 0.04%)</title><rect x="364.1" y="5221" width="0.6" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="367.13" y="5231.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout con (1 samples, 0.02%)</title><rect x="449.1" y="5621" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="452.07" y="5631.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.02%)</title><rect x="354.5" y="5189" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="357.46" y="5199.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (83 samples, 1.84%)</title><rect x="14.2" y="5061" width="21.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="17.18" y="5071.5" >`..</text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="281.0" y="5605" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="284.02" y="5615.5" ></text>
</g>
<g >
<title>`POSITION-IF-NOT^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="75.1" y="3765" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="78.08" y="3775.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="537.7" y="5525" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="540.67" y="5535.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (1 samples, 0.02%)</title><rect x="736.8" y="5397" width="0.3" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="739.82" y="5407.5" ></text>
</g>
<g >
<title>`llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef&lt;llvm::Type* (1 samples, 0.02%)</title><rect x="98.1" y="5637" width="0.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="101.08" y="5647.5" ></text>
</g>
<g >
<title>`INTERPRET-DTREE-PROGRAM^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="131.8" y="4597" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="134.79" y="4607.5" ></text>
</g>
<g >
<title>`llvm::AssumptionCache::assumptionsFor(llvm::Value const*) (1 samples, 0.02%)</title><rect x="643.0" y="5541" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="645.99" y="5551.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::makeUniqueName(llvm::Value*, llvm::Smal (1 samples, 0.02%)</title><rect x="633.8" y="5525" width="0.3" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="636.84" y="5535.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="138.8" y="3989" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="141.85" y="3999.5" ></text>
</g>
<g >
<title>0x10d596094 (23 samples, 0.51%)</title><rect x="16.3" y="2773" width="6.0" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="19.27" y="2783.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (2 samples, 0.04%)</title><rect x="443.8" y="5605" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="446.84" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="12.4" y="4469" width="1.0" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="15.35" y="4479.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1765" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="20.58" y="1775.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="67.2" y="1701" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="70.24" y="1711.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4405" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="736.42" y="4415.5" ></text>
</g>
<g >
<title>`LTV/MLF^LITERAL^FN^^ (2 samples, 0.04%)</title><rect x="124.2" y="5589" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="127.21" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET*) T T T))^ME (1 samples, 0.02%)</title><rect x="70.6" y="2661" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="73.63" y="2671.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (2 samples, 0.04%)</title><rect x="190.9" y="5541" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="193.85" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="57.8" y="1189" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="60.83" y="1199.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::clear() (1 samples, 0.02%)</title><rect x="663.1" y="5525" width="0.3" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="666.12" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="60.2" y="2773" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="63.18" y="2783.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="124.5" y="5525" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="127.47" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="3269" width="2.6" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="68.41" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4565" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="139.76" y="4575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4357" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="138.45" y="4367.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="717.5" y="5653" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="720.48" y="5663.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5381" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="736.42" y="5391.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="196.9" y="5589" width="0.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="199.87" y="5599.5" ></text>
</g>
<g >
<title>`llvm::iterator_range&lt;llvm::po_iterator&lt;llvm::DomTreeNodeBase&lt;ll (1 samples, 0.02%)</title><rect x="525.1" y="5621" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="528.12" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (34 samples, 0.75%)</title><rect x="14.2" y="3893" width="8.9" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="17.18" y="3903.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-AST^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="21.2" y="1717" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="24.24" y="1727.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="79.8" y="3717" width="0.5" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="82.78" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="127.3" y="4869" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="130.35" y="4879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4741" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="139.76" y="4751.5" ></text>
</g>
<g >
<title>`llvm::MemorySSAWalker::getClobberingMemoryAccess(llvm::Instruct (2 samples, 0.04%)</title><rect x="529.6" y="5605" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="532.57" y="5615.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1493" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="24.50" y="1503.5" ></text>
</g>
<g >
<title>`ENVIRONMENT-POLICY^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="22.3" y="2773" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="25.28" y="2783.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="168.1" y="4981" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="171.12" y="4991.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="52.1" y="3525" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="55.08" y="3535.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2037" width="3.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="57.17" y="2047.5" ></text>
</g>
<g >
<title>`stripAndComputeConstantOffsets(llvm::DataLayout const&amp;, llvm::V (1 samples, 0.02%)</title><rect x="570.3" y="5541" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="573.34" y="5551.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldGetElementPtr(llvm::Type*, llvm::Constant*, b (1 samples, 0.02%)</title><rect x="467.1" y="5557" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="470.10" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4405" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="139.76" y="4415.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorBase::grow_pod(void*, unsigned long, unsigned  (1 samples, 0.02%)</title><rect x="426.3" y="5605" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="429.33" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="132.3" y="3861" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="135.31" y="3871.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2613" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="65.79" y="2623.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (25 samples, 0.55%)</title><rect x="16.3" y="3301" width="6.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="19.27" y="3311.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2661" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="64.75" y="2671.5" ></text>
</g>
<g >
<title>`IRC-SET-INSERT-POINT-BASIC-BLOCK^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="286.2" y="5493" width="0.6" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="289.25" y="5503.5" ></text>
</g>
<g >
<title>`GC_mark_local (2 samples, 0.04%)</title><rect x="182.0" y="5349" width="0.5" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="184.97" y="5359.5" ></text>
</g>
<g >
<title>`llvm::ConstantRange::makeAllowedICmpRegion(llvm::CmpInst::Predi (1 samples, 0.02%)</title><rect x="655.0" y="5557" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="658.01" y="5567.5" ></text>
</g>
<g >
<title>`llvm::SSAUpdater::GetValueAtEndOfBlockInternal(llvm::BasicBlock (1 samples, 0.02%)</title><rect x="598.0" y="5573" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="601.04" y="5583.5" ></text>
</g>
<g >
<title>`PARSE-DIRECTIVE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="80.6" y="4645" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="83.56" y="4655.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="97.3" y="3605" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="100.29" y="3615.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="2757" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="73.11" y="2767.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="38.0" y="4725" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="40.96" y="4735.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="65.7" y="2053" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="68.67" y="2063.5" ></text>
</g>
<g >
<title>`INPUTS^CLEAVIR-IR^SETF^^ (1 samples, 0.02%)</title><rect x="241.6" y="5557" width="0.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="244.56" y="5567.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="19.1" y="1909" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="22.15" y="1919.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (6 samples, 0.13%)</title><rect x="57.8" y="1701" width="1.6" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="60.83" y="1711.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="63.8" y="2133" width="1.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="66.84" y="2143.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::isNonIntegralPointerType(llvm::Type*) const (2 samples, 0.04%)</title><rect x="631.8" y="5621" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="634.75" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4229" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="139.23" y="4239.5" ></text>
</g>
<g >
<title>`wrapped_cl__get_internal_run_time_ (1 samples, 0.02%)</title><rect x="198.2" y="5605" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="201.17" y="5615.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;std::__1::pair&lt;llvm::Bas (1 samples, 0.02%)</title><rect x="436.5" y="5509" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="439.52" y="5519.5" ></text>
</g>
<g >
<title>`GC_mark_local (2 samples, 0.04%)</title><rect x="268.7" y="5365" width="0.6" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="271.74" y="5375.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::BasicBlock*&gt;::insert(llvm::BasicBlo (1 samples, 0.02%)</title><rect x="709.9" y="5653" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="712.90" y="5663.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="24.4" y="3781" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="27.37" y="3791.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="733.2" y="5653" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="736.16" y="5663.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (1 samples, 0.02%)</title><rect x="177.8" y="5221" width="0.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="180.79" y="5231.5" ></text>
</g>
<g >
<title>`GC_mark_some (3 samples, 0.07%)</title><rect x="396.8" y="5221" width="0.8" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="399.80" y="5231.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="64.4" y="901" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="67.36" y="911.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromAssume(llvm::Value const*, llvm::KnownBits&amp; (2 samples, 0.04%)</title><rect x="667.8" y="5509" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="670.82" y="5519.5" ></text>
</g>
<g >
<title>`SAFE-CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="94.9" y="4405" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="97.94" y="4415.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="68.5" y="2405" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="71.54" y="2415.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="58.3" y="485" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="61.35" y="495.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (1 samples, 0.02%)</title><rect x="732.9" y="5413" width="0.3" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="735.90" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5301" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="180.26" y="5311.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="322.6" y="5189" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="325.58" y="5199.5" ></text>
</g>
<g >
<title>`MAKE-TEMPS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.04%)</title><rect x="146.2" y="5173" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="149.16" y="5183.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="71.4" y="3541" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="74.42" y="3551.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2581" width="0.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="64.22" y="2591.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((LEXICAL-VARIABLE-INFO T T T (1 samples, 0.02%)</title><rect x="62.0" y="1189" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="65.01" y="1199.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="60.7" y="2773" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="63.70" y="2783.5" ></text>
</g>
<g >
<title>`cc_enclose (4 samples, 0.09%)</title><rect x="153.0" y="5157" width="1.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="155.96" y="5167.5" ></text>
</g>
<g >
<title>`llvm::SROA::runOnAlloca(llvm::AllocaInst&amp;) (2 samples, 0.04%)</title><rect x="581.1" y="5637" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="584.05" y="5647.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="344.0" y="5221" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="347.01" y="5231.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="107.0" y="5509" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="109.96" y="5519.5" ></text>
</g>
<g >
<title>`core::Lisp_O::findPackage(std::__1::basic_string&lt;char, std::__1 (1 samples, 0.02%)</title><rect x="96.5" y="4805" width="0.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="99.51" y="4815.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="345.1" y="5125" width="0.2" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="348.05" y="5135.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'TAGBODY) T T T)) (25 samples, 0.55%)</title><rect x="16.3" y="2821" width="6.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="19.27" y="2831.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (4 samples, 0.09%)</title><rect x="265.9" y="5541" width="1.0" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="268.86" y="5551.5" ></text>
</g>
<g >
<title>`IRC-SET-INSERT-POINT-BASIC-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="350.8" y="5269" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="353.80" y="5279.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (1 samples, 0.02%)</title><rect x="523.0" y="5493" width="0.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="526.03" y="5503.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="441.0" y="5573" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="443.97" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((MULTIPLE-VALUE-SETQ-AST T))^ME (62 samples, 1.37%)</title><rect x="128.1" y="5477" width="16.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="131.13" y="5487.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="688.5" y="5637" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="691.47" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (2 samples, 0.04%)</title><rect x="60.7" y="2869" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="63.70" y="2879.5" ></text>
</g>
<g >
<title>`TOKENIZE-CONTROL-STRING^CORE^FN^^ (6 samples, 0.13%)</title><rect x="46.6" y="5061" width="1.6" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="49.59" y="5071.5" ></text>
</g>
<g >
<title>`IRC-PTR-TO-INT^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="293.3" y="5413" width="0.8" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="296.30" y="5423.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="310.3" y="5397" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="313.29" y="5407.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="600.4" y="5573" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="603.39" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="1029" width="1.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="59.52" y="1039.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="337.2" y="5157" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="340.21" y="5167.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="60.4" y="2933" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="63.44" y="2943.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (2 samples, 0.04%)</title><rect x="376.2" y="5381" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="379.15" y="5391.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="59.4" y="2629" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="62.40" y="2639.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (1 samples, 0.02%)</title><rect x="70.6" y="1829" width="0.3" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="73.63" y="1839.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="14.2" y="3429" width="1.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="17.18" y="3439.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.0" y="1525" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="65.01" y="1535.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="169.7" y="4949" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="172.69" y="4959.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="393.4" y="5317" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="396.40" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-ONLY-REG-AND-OPT-ARGUMENTS^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="378.2" y="5445" width="1.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="381.24" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.9" y="3045" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="73.89" y="3055.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="62.3" y="901" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="65.27" y="911.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-I64^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="368.8" y="5381" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="371.83" y="5391.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.2" y="2373" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="64.22" y="2383.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="70.6" y="2181" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="73.63" y="2191.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::run() (181 samples, 4.01%)</title><rect x="472.1" y="5637" width="47.3" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="475.07" y="5647.5" >`llv..</text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="289.1" y="5445" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="292.12" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4421" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="136.62" y="4431.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (2 samples, 0.04%)</title><rect x="311.9" y="5429" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="314.86" y="5439.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (2 samples, 0.04%)</title><rect x="173.1" y="5189" width="0.5" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="176.08" y="5199.5" ></text>
</g>
<g >
<title>`COMPUTE-LANDING-PAD^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="345.6" y="5237" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="348.57" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.3" y="1301" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="65.27" y="1311.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1509" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="20.58" y="1519.5" ></text>
</g>
<g >
<title>`IRC-INT-TO-PTR^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="292.8" y="5445" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="295.78" y="5455.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (3 samples, 0.07%)</title><rect x="467.4" y="5557" width="0.7" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="470.36" y="5567.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (4 samples, 0.09%)</title><rect x="265.9" y="5525" width="1.0" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="268.86" y="5535.5" ></text>
</g>
<g >
<title>`llvm::changeToUnreachable(llvm::Instruction*, bool, bool) (1 samples, 0.02%)</title><rect x="715.6" y="5685" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="718.65" y="5695.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="132.1" y="4773" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="135.05" y="4783.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="63.1" y="2485" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="66.05" y="2495.5" ></text>
</g>
<g >
<title>`szone_free_definite_size (1 samples, 0.02%)</title><rect x="573.2" y="5509" width="0.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="576.21" y="5519.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="34.6" y="4597" width="0.8" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="37.57" y="4607.5" ></text>
</g>
<g >
<title>`llvm::Value::getName() const (1 samples, 0.02%)</title><rect x="537.4" y="5669" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="540.41" y="5679.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.02%)</title><rect x="49.5" y="4133" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="52.46" y="4143.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="1029" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="60.57" y="1039.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.02%)</title><rect x="464.5" y="5541" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="467.49" y="5551.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;(anonymous namespace)::Simple (2 samples, 0.04%)</title><rect x="441.0" y="5621" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="443.97" y="5631.5" ></text>
</g>
<g >
<title>`core::core__clock_gettime_nanoseconds() (1 samples, 0.02%)</title><rect x="285.2" y="5605" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="288.20" y="5615.5" ></text>
</g>
<g >
<title>`%SADD.WITH-OVERFLOW^CLASP-CLEAVIR^((T T ABI-X86-64))^METHOD^^ (1 samples, 0.02%)</title><rect x="292.5" y="5429" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="295.52" y="5439.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="155.8" y="5157" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="158.83" y="5167.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (2 samples, 0.04%)</title><rect x="202.9" y="5589" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="205.88" y="5599.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (4 samples, 0.09%)</title><rect x="191.9" y="5477" width="1.0" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="194.90" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET*) T T T))^ME (1 samples, 0.02%)</title><rect x="62.8" y="2181" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="65.79" y="2191.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="52.3" y="3797" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="55.34" y="3807.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="612.9" y="5525" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="615.94" y="5535.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="534.3" y="5557" width="0.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="537.27" y="5567.5" ></text>
</g>
<g >
<title>`GC_clear_marks (1 samples, 0.02%)</title><rect x="118.7" y="5445" width="0.3" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="121.72" y="5455.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="385.6" y="5397" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="388.56" y="5407.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="95.2" y="4469" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="98.20" y="4479.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2021" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="65.01" y="2031.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="2869" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="62.40" y="2879.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="66.5" y="1781" width="0.7" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="69.45" y="1791.5" ></text>
</g>
<g >
<title>`void boost::io::detail::put&lt;char, std::__1::char_traits&lt;char&gt;,  (1 samples, 0.02%)</title><rect x="384.0" y="5349" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="386.99" y="5359.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1829" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="68.93" y="1839.5" ></text>
</g>
<g >
<title>`llvm::CFLAndersAAWrapperPass* llvm::Pass::getAnalysisIfAvailabl (1 samples, 0.02%)</title><rect x="453.8" y="5653" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="456.77" y="5663.5" ></text>
</g>
<g >
<title>`FUNCTION-BASIC-BLOCKS^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="367.8" y="5429" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="370.79" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (20 samples, 0.44%)</title><rect x="54.2" y="3269" width="5.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="57.17" y="3279.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="572.4" y="5429" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="575.43" y="5439.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="72.7" y="4837" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="75.72" y="4847.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((SAVE-FRAME-INSTRUC (1 samples, 0.02%)</title><rect x="409.3" y="5477" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="412.34" y="5487.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="666.8" y="5541" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="669.78" y="5551.5" ></text>
</g>
<g >
<title>`llvmo::Module_O::moduleDelete() (12 samples, 0.27%)</title><rect x="717.7" y="5717" width="3.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="720.74" y="5727.5" ></text>
</g>
<g >
<title>`core::core__ltvc_write_object(gctools::smart_ptr&lt;core::T_O&gt;, gc (1 samples, 0.02%)</title><rect x="425.0" y="5701" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="428.03" y="5711.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="68.0" y="2549" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="71.02" y="2559.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::GlobalValue*&gt;::insert(llvm::GlobalV (1 samples, 0.02%)</title><rect x="587.8" y="5653" width="0.3" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="590.85" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (2 samples, 0.04%)</title><rect x="14.7" y="2837" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="17.70" y="2847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="168.9" y="4965" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="171.90" y="4975.5" ></text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE T (1 samples, 0.02%)</title><rect x="24.1" y="3717" width="0.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="27.11" y="3727.5" ></text>
</g>
<g >
<title>`FUDGE-VALUES-TYPE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="12.6" y="4197" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="15.61" y="4207.5" ></text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE T (1 samples, 0.02%)</title><rect x="38.2" y="4725" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="41.23" y="4735.5" ></text>
</g>
<g >
<title>`__gmp_default_allocate (1 samples, 0.02%)</title><rect x="739.4" y="5669" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="742.43" y="5679.5" ></text>
</g>
<g >
<title>`OPTIMIZED-SYMBOL-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="151.9" y="5381" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="154.91" y="5391.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((PRECALC-VALUE-INST (12 samples, 0.27%)</title><rect x="351.6" y="5301" width="3.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="354.59" y="5311.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.02%)</title><rect x="173.3" y="5093" width="0.3" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="176.34" y="5103.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (16 samples, 0.35%)</title><rect x="73.5" y="4805" width="4.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="76.51" y="4815.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="16.3" y="2325" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="19.27" y="2335.5" ></text>
</g>
<g >
<title>`MAKE-FETCH-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="241.0" y="5557" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="244.03" y="5567.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.02%)</title><rect x="477.6" y="5541" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="480.56" y="5551.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.07%)</title><rect x="160.5" y="4933" width="0.8" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="163.54" y="4943.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="357" width="1.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="57.17" y="367.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (40 samples, 0.89%)</title><rect x="14.2" y="4789" width="10.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="17.18" y="4799.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_combine_recursive_helper::combine(u (1 samples, 0.02%)</title><rect x="359.7" y="5013" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="362.69" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TYPEQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="3909" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="137.14" y="3919.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (6 samples, 0.13%)</title><rect x="230.3" y="5461" width="1.6" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="233.32" y="5471.5" ></text>
</g>
<g >
<title>`std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp; st (1 samples, 0.02%)</title><rect x="120.6" y="5269" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="123.55" y="5279.5" ></text>
</g>
<g >
<title>`llvm::X86TargetLowering::isTypeDesirableForOp(unsigned int, llv (1 samples, 0.02%)</title><rect x="57.8" y="805" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="60.83" y="815.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="67.2" y="1749" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="70.24" y="1759.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (34 samples, 0.75%)</title><rect x="14.2" y="3829" width="8.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="17.18" y="3839.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="2789" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="65.53" y="2799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (61 samples, 1.35%)</title><rect x="128.1" y="5429" width="16.0" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="131.13" y="5439.5" ></text>
</g>
<g >
<title>`llvm::InstVisitor&lt;(anonymous namespace)::SCCPSolver, void&gt;::vis (4 samples, 0.09%)</title><rect x="583.1" y="5637" width="1.1" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="586.14" y="5647.5" ></text>
</g>
<g >
<title>`llvm::User::operator new(unsigned long, unsigned int) (1 samples, 0.02%)</title><rect x="612.4" y="5525" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="615.41" y="5535.5" ></text>
</g>
<g >
<title>`llvm::DemandedBits::isInstructionDead(llvm::Instruction*) (5 samples, 0.11%)</title><rect x="450.4" y="5653" width="1.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="453.38" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5541" width="1.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="14.31" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4261" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="139.23" y="4271.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;std::__1::unique_ptr&lt;llvm::AAResults::Con (1 samples, 0.02%)</title><rect x="600.4" y="5637" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="603.39" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="145.1" y="5205" width="1.6" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="148.12" y="5215.5" ></text>
</g>
<g >
<title>`llvm::DIBuilder::createBasicType(llvm::StringRef, unsigned long (1 samples, 0.02%)</title><rect x="366.0" y="5317" width="0.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="368.96" y="5327.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="637.2" y="5493" width="0.3" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="640.24" y="5503.5" ></text>
</g>
<g >
<title>`core::lisp_getStaticClass(gctools::Header_s::Value) (1 samples, 0.02%)</title><rect x="187.2" y="5541" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="190.20" y="5551.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="207.1" y="5605" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="210.06" y="5615.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (2 samples, 0.04%)</title><rect x="642.5" y="5541" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="645.47" y="5551.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2309" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="64.22" y="2319.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="418.0" y="5541" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="420.97" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="60.2" y="2629" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="63.18" y="2639.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (7 samples, 0.16%)</title><rect x="57.6" y="2661" width="1.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="60.57" y="2671.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="71.4" y="3637" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="74.42" y="3647.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="64.1" y="1621" width="1.0" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="67.10" y="1631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="12.4" y="4517" width="1.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="15.35" y="4527.5" ></text>
</g>
<g >
<title>`llvmo::ClaspJIT_O::addModule(gctools::smart_ptr&lt;llvmo::Module_O (1 samples, 0.02%)</title><rect x="57.8" y="1013" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="60.83" y="1023.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (9 samples, 0.20%)</title><rect x="24.6" y="4789" width="2.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="27.64" y="4799.5" ></text>
</g>
<g >
<title>`MAKE-LET-INIT-ASTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="1285" width="0.2" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="60.57" y="1295.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T LEXICAL-VARIABLE-INFO T T (1 samples, 0.02%)</title><rect x="21.5" y="1333" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="24.50" y="1343.5" ></text>
</g>
<g >
<title>`llvm::APInt::clearUnusedBits() (1 samples, 0.02%)</title><rect x="527.0" y="5445" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="529.95" y="5455.5" ></text>
</g>
<g >
<title>`szone_malloc (1 samples, 0.02%)</title><rect x="552.6" y="5221" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="555.56" y="5231.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="48.9" y="5093" width="0.3" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="51.94" y="5103.5" ></text>
</g>
<g >
<title>`llvm::DILocalVariable* llvm::MDNode::storeImpl&lt;llvm::DILocalVar (1 samples, 0.02%)</title><rect x="359.7" y="5189" width="0.2" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="362.69" y="5199.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="60.4" y="2741" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="63.44" y="2751.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (16 samples, 0.35%)</title><rect x="744.7" y="5621" width="4.1" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="747.66" y="5631.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="1733" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="65.01" y="1743.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitCallSite(llvm::CallSite) (24 samples, 0.53%)</title><rect x="483.3" y="5605" width="6.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="486.31" y="5615.5" ></text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE T (1 samples, 0.02%)</title><rect x="64.9" y="741" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="67.88" y="751.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="1365" width="1.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="58.48" y="1375.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="332.2" y="5029" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="335.25" y="5039.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="390.3" y="5365" width="0.2" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="393.27" y="5375.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5253" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="736.42" y="5263.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="72.7" y="4789" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="75.72" y="4799.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="60.7" y="2805" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="63.70" y="2815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="177.3" y="5461" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="180.26" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="16.0" y="3669" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="19.01" y="3679.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="78.0" y="4517" width="0.2" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="80.95" y="4527.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="165.8" y="5013" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="168.77" y="5023.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="352.9" y="5157" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="355.89" y="5167.5" ></text>
</g>
<g >
<title>`FIXNUMP^CORE^FN^^ (1 samples, 0.02%)</title><rect x="134.1" y="3845" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="137.14" y="3855.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (7 samples, 0.16%)</title><rect x="57.6" y="2213" width="1.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="60.57" y="2223.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (8 samples, 0.18%)</title><rect x="200.0" y="5589" width="2.1" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="203.00" y="5599.5" ></text>
</g>
<g >
<title>`OPTIMIZED-LOAD-TIME-VALUE-AST-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="71.4" y="3429" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="74.42" y="3439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (13 samples, 0.29%)</title><rect x="54.2" y="2677" width="3.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="57.17" y="2687.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="65.7" y="1941" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="68.67" y="1951.5" ></text>
</g>
<g >
<title>`llvm::FortifiedLibCallSimplifier::optimizeCall(llvm::CallInst*) (2 samples, 0.04%)</title><rect x="637.8" y="5557" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="640.77" y="5567.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="345.1" y="5173" width="0.2" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="348.05" y="5183.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="342.2" y="5237" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="345.18" y="5247.5" ></text>
</g>
<g >
<title>`LITERAL-DNODE-P^LITERAL^FN^^ (2 samples, 0.04%)</title><rect x="10.0" y="5749" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="13.00" y="5759.5" ></text>
</g>
<g >
<title>`llvm::Module::getNamedValue(llvm::StringRef) const (1 samples, 0.02%)</title><rect x="410.4" y="5285" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="413.39" y="5295.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.02%)</title><rect x="390.0" y="5333" width="0.3" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="393.00" y="5343.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="541.3" y="5557" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="544.33" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="53.4" y="2933" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="56.38" y="2943.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="180.9" y="5541" width="0.3" height="15.0" fill="rgb(237,103,103)" rx="2" ry="2" />
<text  x="183.92" y="5551.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CONTEXT-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="163.4" y="5029" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="166.41" y="5039.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="80.0" y="3653" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="83.04" y="3663.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.1" y="2165" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="20.06" y="2175.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="51.0" y="2533" width="0.6" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="54.03" y="2543.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="612.4" y="5493" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="615.41" y="5503.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="169.4" y="4981" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="172.42" y="4991.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="461.6" y="5573" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="464.61" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="127.1" y="5573" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="130.09" y="5583.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="634.9" y="5557" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="637.89" y="5567.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5125" width="1.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="14.31" y="5135.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.5" y="2165" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="65.53" y="2175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4773" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="137.14" y="4783.5" ></text>
</g>
<g >
<title>`core::clasp_write_symbol(gctools::smart_ptr&lt;core::Symbol_O&gt;, gc (1 samples, 0.02%)</title><rect x="11.0" y="5589" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="14.05" y="5599.5" ></text>
</g>
<g >
<title>`GC_clear_fl_marks (1 samples, 0.02%)</title><rect x="735.8" y="5253" width="0.2" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="738.77" y="5263.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="49.2" y="5093" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="52.20" y="5103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((MULTIPLE-VALUE-FOREIGN-CALL-AS (1 samples, 0.02%)</title><rect x="136.8" y="4005" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="139.76" y="4015.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.04%)</title><rect x="132.6" y="4757" width="0.5" height="15.0" fill="rgb(224,86,86)" rx="2" ry="2" />
<text  x="135.57" y="4767.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5445" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="713.94" y="5455.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="631.0" y="5605" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="633.97" y="5615.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitLShr(llvm::BinaryOperator&amp;) (1 samples, 0.02%)</title><rect x="657.6" y="5621" width="0.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="660.63" y="5631.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="330.2" y="5141" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="333.16" y="5151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.1" y="4837" width="0.6" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="137.14" y="4847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="135.2" y="4533" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="138.19" y="4543.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="361.5" y="5237" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="364.52" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5141" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="180.26" y="5151.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (1 samples, 0.02%)</title><rect x="197.7" y="5493" width="0.2" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="200.65" y="5503.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="53.1" y="3285" width="1.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="56.12" y="3295.5" ></text>
</g>
<g >
<title>0x10d596094 (27 samples, 0.60%)</title><rect x="27.5" y="4549" width="7.1" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="30.51" y="4559.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (5 samples, 0.11%)</title><rect x="359.2" y="5269" width="1.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="362.17" y="5279.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::StripPtrCastKeepAS(llvm::Constant*, llvm (1 samples, 0.02%)</title><rect x="558.1" y="5397" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="561.05" y="5407.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.02%)</title><rect x="138.8" y="3973" width="0.3" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="141.85" y="3983.5" ></text>
</g>
<g >
<title>`core::Cache_O::vector_hash_key(gctools::Vec0&lt;gctools::smart_ptr (1 samples, 0.02%)</title><rect x="371.7" y="5365" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="374.71" y="5375.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.8" y="1525" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="65.79" y="1535.5" ></text>
</g>
<g >
<title>`llvm::iterator_range&lt;llvm::po_iterator&lt;llvm::DomTreeNodeBase&lt;ll (1 samples, 0.02%)</title><rect x="686.6" y="5637" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="689.64" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.3" y="2389" width="0.2" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="65.27" y="2399.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.04%)</title><rect x="240.3" y="5541" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="243.25" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="59.4" y="3029" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="62.40" y="3039.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (88 samples, 1.95%)</title><rect x="49.5" y="4789" width="23.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="52.46" y="4799.5" >`..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="1349" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="65.79" y="1359.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="286.5" y="5413" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="289.51" y="5423.5" ></text>
</g>
<g >
<title>`%SIZE_T^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="334.1" y="5109" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="337.08" y="5119.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="63.3" y="2709" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="66.32" y="2719.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="65.1" y="2197" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="68.15" y="2207.5" ></text>
</g>
<g >
<title>`core::core__hash_table_setf_gethash(gctools::smart_ptr&lt;core::Ha (1 samples, 0.02%)</title><rect x="267.7" y="5589" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="270.69" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (11 samples, 0.24%)</title><rect x="144.3" y="5445" width="2.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="147.33" y="5455.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getValueInBlock(llvm: (1 samples, 0.02%)</title><rect x="447.0" y="5573" width="0.2" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="449.98" y="5583.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T SPECIAL-VARIABLE-INFO))^METHO (1 samples, 0.02%)</title><rect x="78.5" y="3829" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="81.47" y="3839.5" ></text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="422.7" y="5701" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="425.67" y="5711.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (2 samples, 0.04%)</title><rect x="11.6" y="4549" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="14.57" y="4559.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="1797" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="65.79" y="1807.5" ></text>
</g>
<g >
<title>`GC_allocobj (3 samples, 0.07%)</title><rect x="208.4" y="5429" width="0.7" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="211.37" y="5439.5" ></text>
</g>
<g >
<title>`GC_mark_from (3 samples, 0.07%)</title><rect x="230.6" y="5317" width="0.8" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="233.58" y="5327.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solve() (3 samples, 0.07%)</title><rect x="436.5" y="5589" width="0.8" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="439.52" y="5599.5" ></text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::isFnAttrDi (1 samples, 0.02%)</title><rect x="538.5" y="5589" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="541.45" y="5599.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (1 samples, 0.02%)</title><rect x="487.5" y="5589" width="0.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="490.49" y="5599.5" ></text>
</g>
<g >
<title>`llvm::Instruction::getMetadataImpl(unsigned int) const (1 samples, 0.02%)</title><rect x="433.4" y="5557" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="436.39" y="5567.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="5253" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="100.29" y="5263.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (7 samples, 0.16%)</title><rect x="87.6" y="4437" width="1.9" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="90.62" y="4447.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="51.8" y="3285" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="54.82" y="3295.5" ></text>
</g>
<g >
<title>`IRC-COND-BR^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="321.8" y="5253" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="324.79" y="5263.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="399.4" y="5381" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="402.41" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="97.6" y="4597" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="100.55" y="4607.5" ></text>
</g>
<g >
<title>`ADD-FETCH^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (2 samples, 0.04%)</title><rect x="240.8" y="5573" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="243.77" y="5583.5" ></text>
</g>
<g >
<title>`llvm::CallSiteBase&lt;llvm::Function const, llvm::BasicBlock const (1 samples, 0.02%)</title><rect x="502.4" y="5477" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="505.39" y="5487.5" ></text>
</g>
<g >
<title>`llvm::GVN::ValueTable::phiTranslate(llvm::BasicBlock const*, ll (2 samples, 0.04%)</title><rect x="578.4" y="5573" width="0.6" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="581.44" y="5583.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="308.7" y="5333" width="0.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="311.72" y="5343.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="166.3" y="5013" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="169.29" y="5023.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.02%)</title><rect x="159.5" y="5077" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="162.49" y="5087.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.6" y="293" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="67.62" y="303.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="523.0" y="5429" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="526.03" y="5439.5" ></text>
</g>
<g >
<title>`llvmo::FunctionType_O::get(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (7 samples, 0.16%)</title><rect x="387.4" y="5397" width="1.8" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="390.39" y="5407.5" ></text>
</g>
<g >
<title>`llvm::removeUnreachableBlocks(llvm::Function&amp;, llvm::LazyValueI (5 samples, 0.11%)</title><rect x="698.7" y="5653" width="1.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="701.66" y="5663.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="68.5" y="2533" width="1.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="71.54" y="2543.5" ></text>
</g>
<g >
<title>`wrapped_core__vset_T_spAbstractSimpleVector_spsize_t (1 samples, 0.02%)</title><rect x="73.8" y="4373" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="76.77" y="4383.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="362.0" y="5237" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="365.04" y="5247.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.02%)</title><rect x="123.4" y="5461" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="126.43" y="5471.5" ></text>
</g>
<g >
<title>`llvm::APInt::udiv(llvm::APInt const&amp;) const (1 samples, 0.02%)</title><rect x="466.1" y="5557" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="469.06" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="62.0" y="1781" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="65.01" y="1791.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (10 samples, 0.22%)</title><rect x="49.7" y="3813" width="2.6" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="52.73" y="3823.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="21.2" y="1989" width="0.6" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="24.24" y="1999.5" ></text>
</g>
<g >
<title>`COMPUTE-APPLICABLE-METHODS^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="50.0" y="3189" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="52.99" y="3199.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (8 samples, 0.18%)</title><rect x="55.5" y="1989" width="2.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="58.48" y="1999.5" ></text>
</g>
<g >
<title>`GC_finalize (2 samples, 0.04%)</title><rect x="744.1" y="5637" width="0.6" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="747.14" y="5647.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="96.8" y="5109" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="99.77" y="5119.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3301" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="100.29" y="3311.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="837" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="61.09" y="847.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.02%)</title><rect x="628.6" y="5573" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="631.62" y="5583.5" ></text>
</g>
<g >
<title>`llvm::MDNode::classof(llvm::Metadata const*) (1 samples, 0.02%)</title><rect x="332.2" y="4901" width="0.3" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="335.25" y="4911.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.1" y="1061" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="67.10" y="1071.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (20 samples, 0.44%)</title><rect x="320.0" y="5301" width="5.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="322.96" y="5311.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (3 samples, 0.07%)</title><rect x="283.4" y="5445" width="0.8" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="286.37" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4421" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="138.19" y="4431.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="139.6" y="5045" width="0.3" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="142.63" y="5055.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;std::__1::__value_type&lt;llvm::Function const*,  (1 samples, 0.02%)</title><rect x="700.8" y="5621" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="703.75" y="5631.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatt (1 samples, 0.02%)</title><rect x="435.2" y="5541" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="438.22" y="5551.5" ></text>
</g>
<g >
<title>0x10d596094 (8 samples, 0.18%)</title><rect x="39.0" y="4421" width="2.1" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="42.01" y="4431.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (30 samples, 0.66%)</title><rect x="245.7" y="5605" width="7.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="248.74" y="5615.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (3 samples, 0.07%)</title><rect x="283.4" y="5493" width="0.8" height="15.0" fill="rgb(217,74,74)" rx="2" ry="2" />
<text  x="286.37" y="5503.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="65.4" y="2485" width="0.8" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="68.41" y="2495.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (18 samples, 0.40%)</title><rect x="65.4" y="3301" width="4.7" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="68.41" y="3311.5" ></text>
</g>
<g >
<title>`llvm::BitstreamWriter::Emit(unsigned int, unsigned int) (1 samples, 0.02%)</title><rect x="726.4" y="5621" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="729.36" y="5631.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::IntegerType_O&gt; gctools::GCObjectAppro (4 samples, 0.09%)</title><rect x="374.3" y="5381" width="1.1" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="377.32" y="5391.5" ></text>
</g>
<g >
<title>`llvm::ValueEnumerator::getValueID(llvm::Value const*) const (1 samples, 0.02%)</title><rect x="724.3" y="5653" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="727.27" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (36 samples, 0.80%)</title><rect x="14.2" y="4277" width="9.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="17.18" y="4287.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="330.7" y="5029" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="333.68" y="5039.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="357.9" y="5397" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="360.86" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="21.2" y="2069" width="0.6" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="24.24" y="2079.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="57.6" y="1845" width="1.8" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="60.57" y="1855.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (3 samples, 0.07%)</title><rect x="18.4" y="1909" width="0.7" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="21.36" y="1919.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="80.6" y="4709" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="83.56" y="4719.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SET-SYMBOL-VALUE-AST T))^METHO (1 samples, 0.02%)</title><rect x="127.1" y="5349" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="130.09" y="5359.5" ></text>
</g>
<g >
<title>`PROCESS-REQUIRED^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="50.5" y="3189" width="1.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="53.51" y="3199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="145.1" y="5221" width="1.6" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="148.12" y="5231.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1717" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="24.50" y="1727.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (2 samples, 0.04%)</title><rect x="171.8" y="5173" width="0.5" height="15.0" fill="rgb(202,52,52)" rx="2" ry="2" />
<text  x="174.78" y="5183.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="576.6" y="5605" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="579.61" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'CLEAVIR-PRIMOP:F (1 samples, 0.02%)</title><rect x="57.6" y="949" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="60.57" y="959.5" ></text>
</g>
<g >
<title>`GET-OR-DECLARE-FUNCTION-OR-ERROR^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="410.4" y="5397" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="413.39" y="5407.5" ></text>
</g>
<g >
<title>`SPECIALIZE^CLEAVIR-HIR-TO-MIR^FN^^ (37 samples, 0.82%)</title><rect x="185.9" y="5621" width="9.7" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="188.89" y="5631.5" ></text>
</g>
<g >
<title>`FIND-OR-CREATE-LOCATION^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="132.1" y="4789" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="135.05" y="4799.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (4 samples, 0.09%)</title><rect x="154.8" y="5205" width="1.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="157.79" y="5215.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (1 samples, 0.02%)</title><rect x="652.4" y="5573" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="655.40" y="5583.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="292.5" y="5397" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="295.52" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="97.6" y="4997" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="100.55" y="5007.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.3" y="2213" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="65.27" y="2223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="148.3" y="5189" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="151.25" y="5199.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="401.8" y="5461" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="404.77" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4517" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="137.40" y="4527.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::pop_binding() (1 samples, 0.02%)</title><rect x="172.6" y="5317" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="175.56" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="97.3" y="4725" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="100.29" y="4735.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="80.3" y="3893" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="83.30" y="3903.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::apint_match::match&lt;llvm::Value&gt;(llvm:: (1 samples, 0.02%)</title><rect x="570.6" y="5541" width="0.3" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="573.60" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="3989" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="139.23" y="3999.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="36.1" y="5397" width="0.3" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="39.14" y="5407.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="136.8" y="3925" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="139.76" y="3935.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="2581" width="2.6" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="68.41" y="2591.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIntPtrType(llvm::Type*) const (1 samples, 0.02%)</title><rect x="464.0" y="5589" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="466.97" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4789" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="140.28" y="4799.5" ></text>
</g>
<g >
<title>`wrapped_core__ltvc_write_object_T_spT_spT_spsize_t (1 samples, 0.02%)</title><rect x="425.0" y="5717" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="428.03" y="5727.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="60.4" y="3045" width="0.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="63.44" y="3055.5" ></text>
</g>
<g >
<title>`llvm::iterator_range&lt;llvm::df_iterator&lt;llvm::BasicBlock*, llvm: (1 samples, 0.02%)</title><rect x="580.5" y="5621" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="583.53" y="5631.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::BasicBlock*, llvm::SmallPtrSet&lt;llvm::Ba (1 samples, 0.02%)</title><rect x="577.1" y="5605" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="580.13" y="5615.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="50.0" y="3573" width="1.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="52.99" y="3583.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="733.9" y="5685" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="736.94" y="5695.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LOCALLY) T T T)) (1 samples, 0.02%)</title><rect x="66.2" y="1861" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="69.19" y="1871.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, unsi (2 samples, 0.04%)</title><rect x="725.1" y="5605" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="728.06" y="5615.5" ></text>
</g>
<g >
<title>`llvm::LoadInst::LoadInst(llvm::Type*, llvm::Value*, char const* (1 samples, 0.02%)</title><rect x="334.6" y="5013" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="337.60" y="5023.5" ></text>
</g>
<g >
<title>`llvm::GVN::ValueTable::assignExpNewValueNum(llvm::GVN::Expressi (3 samples, 0.07%)</title><rect x="541.6" y="5573" width="0.8" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="544.59" y="5583.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4085" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="736.42" y="4095.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="67.2" y="1461" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="70.24" y="1471.5" ></text>
</g>
<g >
<title>`IRC-GEP-VARIABLE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="349.2" y="5269" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="352.23" y="5279.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.7" y="2549" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="64.75" y="2559.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (36 samples, 0.80%)</title><rect x="14.2" y="4341" width="9.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="17.18" y="4351.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="53.6" y="2805" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="56.65" y="2815.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="167.3" y="4949" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="170.33" y="4959.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="16.3" y="2389" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="19.27" y="2399.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4197" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="736.42" y="4207.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::PassI (1 samples, 0.02%)</title><rect x="532.4" y="5637" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="535.44" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="3141" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="100.29" y="3151.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::untrack(void*, llvm::Metadata&amp;) (1 samples, 0.02%)</title><rect x="481.2" y="5605" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="484.22" y="5615.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="507.4" y="5477" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="510.35" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4757" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="136.62" y="4767.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="629" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="65.01" y="639.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.3" y="1781" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="20.32" y="1791.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (22 samples, 0.49%)</title><rect x="28.6" y="4453" width="5.7" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="31.56" y="4463.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="381.1" y="5381" width="0.3" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="384.12" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SYMBOL-VALUE-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="175.4" y="5381" width="0.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="178.44" y="5391.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="479.4" y="5589" width="0.2" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="482.39" y="5599.5" ></text>
</g>
<g >
<title>`%FORMATTER-GUTS^CORE^FN^^ (1 samples, 0.02%)</title><rect x="80.6" y="4725" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="83.56" y="4735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="172.8" y="5349" width="0.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="175.82" y="5359.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="869" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="61.35" y="879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (5 samples, 0.11%)</title><rect x="160.0" y="4997" width="1.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="163.02" y="5007.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="661" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="65.01" y="671.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="23.6" y="4405" width="1.0" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="26.59" y="4415.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="62.5" y="3109" width="0.6" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="65.53" y="3119.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="53.4" y="2725" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="56.38" y="2735.5" ></text>
</g>
<g >
<title>`llvm::BranchProbabilityInfo::setEdgeProbability(llvm::BasicBloc (1 samples, 0.02%)</title><rect x="602.5" y="5621" width="0.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="605.48" y="5631.5" ></text>
</g>
<g >
<title>`core::load_stream(gctools::smart_ptr&lt;core::T_O&gt;, bool) (2,981 samples, 66.02%)</title><rect x="10.0" y="5973" width="779.1" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="13.00" y="5983.5" >`core::load_stream(gctools::smart_ptr&lt;core::T_O&gt;, bool)</text>
</g>
<g >
<title>`IRC-BEGIN-BLOCK^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="338.3" y="5221" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="341.26" y="5231.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getNonLocalPointerDependency(llv (24 samples, 0.53%)</title><rect x="563.3" y="5573" width="6.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="566.28" y="5583.5" ></text>
</g>
<g >
<title>`llvm::Argument::hasByValAttr() const (1 samples, 0.02%)</title><rect x="545.2" y="5445" width="0.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="548.25" y="5455.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="72.2" y="4117" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="75.20" y="4127.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1445" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="65.27" y="1455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="167.9" y="5013" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="170.86" y="5023.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="311.1" y="5429" width="0.5" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="314.08" y="5439.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="24.9" y="3477" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="27.90" y="3487.5" ></text>
</g>
<g >
<title>`llvm::isNoAliasFn(llvm::Value const*, llvm::TargetLibraryInfo c (1 samples, 0.02%)</title><rect x="566.9" y="5477" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="569.94" y="5487.5" ></text>
</g>
<g >
<title>0x10d596094 (3 samples, 0.07%)</title><rect x="50.8" y="3029" width="0.8" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="53.77" y="3039.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (4 samples, 0.09%)</title><rect x="55.5" y="1765" width="1.0" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="58.48" y="1775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="3925" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="137.14" y="3935.5" ></text>
</g>
<g >
<title>`0x1065e7efb (1 samples, 0.02%)</title><rect x="49.5" y="4149" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="52.46" y="4159.5" ></text>
</g>
<g >
<title>`GC_mark_some (1 samples, 0.02%)</title><rect x="145.1" y="4869" width="0.3" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="148.12" y="4879.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="349.5" y="5253" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="352.50" y="5263.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4709" width="9.4" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="17.18" y="4719.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="64.1" y="1573" width="1.0" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="67.10" y="1583.5" ></text>
</g>
<g >
<title>`main (2,981 samples, 66.02%)</title><rect x="10.0" y="6389" width="779.1" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="13.00" y="6399.5" >`main</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="16.8" y="2357" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="19.80" y="2367.5" ></text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::isFnAttrDi (1 samples, 0.02%)</title><rect x="453.0" y="5637" width="0.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="455.99" y="5647.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (1 samples, 0.02%)</title><rect x="366.5" y="5397" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="369.48" y="5407.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="336.2" y="5173" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="339.17" y="5183.5" ></text>
</g>
<g >
<title>`cc_enclose (5 samples, 0.11%)</title><rect x="46.9" y="5013" width="1.3" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="49.85" y="5023.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="15.2" y="3397" width="0.3" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="18.23" y="3407.5" ></text>
</g>
<g >
<title>`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="474.9" y="5525" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="477.94" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4373" width="0.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="132.96" y="4383.5" ></text>
</g>
<g >
<title>`NORMALIZE-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="259.3" y="5557" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="262.33" y="5567.5" ></text>
</g>
<g >
<title>`core::lisp_object_query(gctools::smart_ptr&lt;core::T_O&gt;, bool, gc (2 samples, 0.04%)</title><rect x="421.4" y="5685" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="424.37" y="5695.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="30.9" y="4309" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="33.91" y="4319.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (4 samples, 0.09%)</title><rect x="210.5" y="5525" width="1.0" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="213.46" y="5535.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="356.0" y="5221" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="359.03" y="5231.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout con (3 samples, 0.07%)</title><rect x="677.5" y="5621" width="0.8" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="680.49" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET*) T T T))^ME (3 samples, 0.07%)</title><rect x="64.1" y="1285" width="0.8" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="67.10" y="1295.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="64.1" y="1477" width="1.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="67.10" y="1487.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="355.0" y="5189" width="0.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="357.98" y="5199.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (6 samples, 0.13%)</title><rect x="230.3" y="5573" width="1.6" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="233.32" y="5583.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="115.6" y="5541" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="118.59" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="97.3" y="3477" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="100.29" y="3487.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="5061" width="0.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="100.29" y="5071.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="79.8" y="3509" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="82.78" y="3519.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, llvm::Small (1 samples, 0.02%)</title><rect x="447.0" y="5493" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="449.98" y="5503.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="398.4" y="5365" width="0.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="401.37" y="5375.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (33 samples, 0.73%)</title><rect x="329.1" y="5285" width="8.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="332.11" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4629" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="140.28" y="4639.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="586.3" y="5493" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="589.28" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="66.2" y="1749" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="69.19" y="1759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.1" y="4613" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="141.06" y="4623.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="5253" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="100.55" y="5263.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="30.6" y="4293" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="33.65" y="4303.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (2 samples, 0.04%)</title><rect x="21.2" y="2037" width="0.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="24.24" y="2047.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (14 samples, 0.31%)</title><rect x="148.3" y="5381" width="3.6" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="151.25" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="2597" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="65.79" y="2607.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.11%)</title><rect x="141.7" y="5029" width="1.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="144.72" y="5039.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (3 samples, 0.07%)</title><rect x="528.8" y="5525" width="0.8" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="531.78" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="79.8" y="3749" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="82.78" y="3759.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="108.3" y="5557" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="111.27" y="5567.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::operator==(llvm::ConstantExpr const* (1 samples, 0.02%)</title><rect x="612.2" y="5525" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="615.15" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (24 samples, 0.53%)</title><rect x="16.3" y="2789" width="6.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="19.27" y="2799.5" ></text>
</g>
<g >
<title>`%INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^CLASP-CLEAVIR^FN^^ (8 samples, 0.18%)</title><rect x="411.4" y="5461" width="2.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="414.44" y="5471.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (2 samples, 0.04%)</title><rect x="146.2" y="5125" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="149.16" y="5135.5" ></text>
</g>
<g >
<title>`core::Cons_O::reverse() (1 samples, 0.02%)</title><rect x="174.1" y="5397" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="177.13" y="5407.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.02%)</title><rect x="143.8" y="5285" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="146.81" y="5295.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (6 samples, 0.13%)</title><rect x="57.8" y="1493" width="1.6" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="60.83" y="1503.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldOpWithConstantIntoOperand(llvm::BinaryO (1 samples, 0.02%)</title><rect x="633.6" y="5621" width="0.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="636.58" y="5631.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::pushBlockValue(std::_ (1 samples, 0.02%)</title><rect x="436.5" y="5541" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="439.52" y="5551.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (3 samples, 0.07%)</title><rect x="66.5" y="1733" width="0.7" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="69.45" y="1743.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="134.1" y="3861" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="137.14" y="3871.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="66.2" y="1797" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="69.19" y="1807.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="2629" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="65.01" y="2639.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (233 samples, 5.16%)</title><rect x="36.4" y="5237" width="60.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="39.40" y="5247.5" >`CONVE..</text>
</g>
<g >
<title>`llvm::GVN::processBlock(llvm::BasicBlock*) (146 samples, 3.23%)</title><rect x="538.7" y="5621" width="38.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="541.71" y="5631.5" >`ll..</text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="312.9" y="5397" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="315.91" y="5407.5" ></text>
</g>
<g >
<title>`core::cl__last(gctools::smart_ptr&lt;core::List_V&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="111.4" y="5589" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="114.40" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4485" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="137.40" y="4495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="133.1" y="4789" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="136.10" y="4799.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIndexedOffsetInType(llvm::Type*, llvm::Arr (1 samples, 0.02%)</title><rect x="609.3" y="5589" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="612.28" y="5599.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_equal(core::HashGenerator&amp;, gctools:: (1 samples, 0.02%)</title><rect x="413.3" y="5349" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="416.26" y="5359.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="142.2" y="4965" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="145.24" y="4975.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="64.4" y="565" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="67.36" y="575.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="409.6" y="5445" width="0.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="412.61" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="5285" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="100.29" y="5295.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (18 samples, 0.40%)</title><rect x="17.3" y="2421" width="4.7" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="20.32" y="2431.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (2 samples, 0.04%)</title><rect x="190.9" y="5477" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="193.85" y="5487.5" ></text>
</g>
<g >
<title>`AUGMENT-ENVIRONMENT-WITH-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="22.0" y="2501" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="25.02" y="2511.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((UNBOX-INSTRUCTION  (9 samples, 0.20%)</title><rect x="411.2" y="5477" width="2.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="414.17" y="5487.5" ></text>
</g>
<g >
<title>`GC_alloc_large (6 samples, 0.13%)</title><rect x="230.3" y="5445" width="1.6" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="233.32" y="5455.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="346.4" y="5157" width="0.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="349.36" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4245" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="136.36" y="4255.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="57.6" y="1157" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="60.57" y="1167.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="67.0" y="1653" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="69.97" y="1663.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((FIXED-TO-MULTIPLE- (1 samples, 0.02%)</title><rect x="340.3" y="5301" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="343.35" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="68.5" y="2613" width="1.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="71.54" y="2623.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="1221" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="65.53" y="1231.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="50.8" y="3013" width="0.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="53.77" y="3023.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="13.7" y="4661" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="16.66" y="4671.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="605.1" y="5621" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="608.10" y="5631.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::neg_match&lt;llvm::PatternMatch::CastClas (1 samples, 0.02%)</title><rect x="652.1" y="5589" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="655.14" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="2773" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="73.63" y="2783.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (36 samples, 0.80%)</title><rect x="270.6" y="5605" width="9.4" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="273.57" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (9 samples, 0.20%)</title><rect x="24.6" y="4933" width="2.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="27.64" y="4943.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::ImmutableCallSite, llvm::M (17 samples, 0.38%)</title><rect x="501.3" y="5541" width="4.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="504.34" y="5551.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (26 samples, 0.58%)</title><rect x="27.5" y="4485" width="6.8" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="30.51" y="4495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4693" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="140.28" y="4703.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="143.3" y="5205" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="146.29" y="5215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4197" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="141.85" y="4207.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (2 samples, 0.04%)</title><rect x="527.2" y="5525" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="530.21" y="5535.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="42.1" y="4341" width="1.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="45.15" y="4351.5" ></text>
</g>
<g >
<title>`llvm::LiveVariables::HandleRegMask(llvm::MachineOperand const&amp;) (1 samples, 0.02%)</title><rect x="732.9" y="5301" width="0.3" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="735.90" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (88 samples, 1.95%)</title><rect x="49.5" y="4421" width="23.0" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="52.46" y="4431.5" >`..</text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (1 samples, 0.02%)</title><rect x="409.3" y="5381" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="412.34" y="5391.5" ></text>
</g>
<g >
<title>`CHILDREN^CLEAVIR-AST^((TYPEQ-AST))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.1" y="2597" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="73.11" y="2607.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="426.6" y="5589" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="429.59" y="5599.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (2 samples, 0.04%)</title><rect x="234.8" y="5301" width="0.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="237.76" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (233 samples, 5.16%)</title><rect x="36.4" y="5301" width="60.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="39.40" y="5311.5" >`CONVE..</text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2629" width="0.3" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="65.53" y="2639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="135.2" y="4773" width="1.0" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="138.19" y="4783.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="379.6" y="5381" width="0.2" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="382.55" y="5391.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="410.4" y="5429" width="0.8" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="413.39" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4741" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="136.36" y="4751.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (14 samples, 0.31%)</title><rect x="148.3" y="5445" width="3.6" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="151.25" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="3973" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="137.14" y="3983.5" ></text>
</g>
<g >
<title>`core::SimpleBaseString_O::get_std_string() const (1 samples, 0.02%)</title><rect x="17.1" y="1989" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="20.06" y="1999.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (91 samples, 2.02%)</title><rect x="12.4" y="5461" width="23.7" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="15.35" y="5471.5" >`..</text>
</g>
<g >
<title>`llvm::SmallVectorTemplateBase&lt;llvm::Constant*, true&gt;::push_back (1 samples, 0.02%)</title><rect x="631.2" y="5605" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="634.23" y="5615.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="75.1" y="3845" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="78.08" y="3855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.02%)</title><rect x="159.0" y="5365" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="161.97" y="5375.5" ></text>
</g>
<g >
<title>`ALLOCA-SIZE_T^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="285.5" y="5541" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="288.46" y="5551.5" ></text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (1 samples, 0.02%)</title><rect x="467.4" y="5493" width="0.2" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="470.36" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1141" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="65.53" y="1151.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1957" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="65.53" y="1967.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="14.4" y="3125" width="0.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="17.44" y="3135.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2389" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="71.28" y="2399.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="53.4" y="2997" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="56.38" y="3007.5" ></text>
</g>
<g >
<title>`llvm::Instruction::getAAMetadata(llvm::AAMDNodes&amp;, bool) const (1 samples, 0.02%)</title><rect x="525.6" y="5557" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="528.65" y="5567.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute (1 samples, 0.02%)</title><rect x="484.1" y="5573" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="487.09" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.9" y="3237" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="73.89" y="3247.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="65.1" y="2149" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="68.15" y="2159.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (22 samples, 0.49%)</title><rect x="16.3" y="2597" width="5.7" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="19.27" y="2607.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (13 samples, 0.29%)</title><rect x="54.2" y="2405" width="3.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="57.17" y="2415.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.02%)</title><rect x="458.2" y="5605" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="461.22" y="5615.5" ></text>
</g>
<g >
<title>`AUGMENT-ENVIRONMENT-WITH-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="21.2" y="1733" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="24.24" y="1743.5" ></text>
</g>
<g >
<title>`flockfile (1 samples, 0.02%)</title><rect x="732.4" y="5781" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="735.37" y="5791.5" ></text>
</g>
<g >
<title>`CHILDREN^CLEAVIR-AST^((IF-AST))^METHOD^^ (1 samples, 0.02%)</title><rect x="63.3" y="2565" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="66.32" y="2575.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2741" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="65.01" y="2751.5" ></text>
</g>
<g >
<title>`PRESERVE-EXCEPTION-INFO^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="396.3" y="5365" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="399.28" y="5375.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (3 samples, 0.07%)</title><rect x="396.8" y="5237" width="0.8" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="399.80" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="66.2" y="2069" width="1.8" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="69.19" y="2079.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="14.2" y="3605" width="1.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="17.18" y="3615.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="70.6" y="2277" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="73.63" y="2287.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="263.0" y="5557" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="265.99" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="1173" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="67.88" y="1183.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="56.5" y="85" width="1.1" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="59.52" y="95.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.02%)</title><rect x="26.5" y="4565" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="29.47" y="4575.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="309.8" y="5301" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="312.77" y="5311.5" ></text>
</g>
<g >
<title>`COMPUTE-APPLICABLE-METHODS^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="65.7" y="1829" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="68.67" y="1839.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (1 samples, 0.02%)</title><rect x="58.6" y="885" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="61.61" y="895.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="71.4" y="3845" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="74.42" y="3855.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (108 samples, 2.39%)</title><rect x="49.5" y="4885" width="28.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="52.46" y="4895.5" >`..</text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="338.8" y="5205" width="0.2" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="341.78" y="5215.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="418.8" y="5589" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="421.75" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="62.8" y="2741" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="65.79" y="2751.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (2 samples, 0.04%)</title><rect x="15.5" y="3509" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="18.49" y="3519.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="70.1" y="3125" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="73.11" y="3135.5" ></text>
</g>
<g >
<title>`core::General_O::_instanceClass() const (1 samples, 0.02%)</title><rect x="144.3" y="5301" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="147.33" y="5311.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2581" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="17.70" y="2591.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="308.7" y="5317" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="311.72" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (12 samples, 0.27%)</title><rect x="148.3" y="5301" width="3.1" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="151.25" y="5311.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (3 samples, 0.07%)</title><rect x="374.6" y="5285" width="0.8" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="377.58" y="5295.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="16.0" y="3653" width="0.3" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="19.01" y="3663.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="733.7" y="5045" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="736.68" y="5055.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="329.4" y="5109" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="332.37" y="5119.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="14.2" y="3333" width="1.0" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="17.18" y="3343.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="23.1" y="3701" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="26.07" y="3711.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="805" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="62.13" y="815.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoCache::insertResult(llvm::V (1 samples, 0.02%)</title><rect x="447.0" y="5541" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="449.98" y="5551.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::BasicBlock_O&gt; gctools::GCObjectApprop (1 samples, 0.02%)</title><rect x="395.2" y="5189" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="398.23" y="5199.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="191.9" y="5397" width="0.3" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="194.90" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.29%)</title><rect x="148.3" y="5333" width="3.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="151.25" y="5343.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="374.1" y="5173" width="0.2" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="377.06" y="5183.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (3 samples, 0.07%)</title><rect x="33.3" y="4293" width="0.7" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="36.26" y="4303.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="593.1" y="5605" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="596.07" y="5615.5" ></text>
</g>
<g >
<title>`core::contagen_div(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (5 samples, 0.11%)</title><rect x="735.8" y="5717" width="1.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="738.77" y="5727.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="30.1" y="4293" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="33.12" y="4303.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1781" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="69.19" y="1791.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="422.7" y="5669" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="425.67" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="60.4" y="2789" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="63.44" y="2799.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="717.5" y="5637" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="720.48" y="5647.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::GetNonLocalInfoForBlock(llvm::In (5 samples, 0.11%)</title><rect x="567.2" y="5525" width="1.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="570.20" y="5535.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="86.1" y="4245" width="0.2" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="89.05" y="4255.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.04%)</title><rect x="367.0" y="5381" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="370.01" y="5391.5" ></text>
</g>
<g >
<title>`PROCESS-REQUIRED^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="53" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="61.35" y="63.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (4 samples, 0.09%)</title><rect x="55.5" y="1301" width="1.0" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="58.48" y="1311.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.0" y="757" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="65.01" y="767.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4885" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="137.66" y="4895.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="66.2" y="2037" width="1.8" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="69.19" y="2047.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.04%)</title><rect x="391.6" y="5365" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="394.57" y="5375.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="2661" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="73.11" y="2671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="138.6" y="4933" width="0.8" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="141.58" y="4943.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (2 samples, 0.04%)</title><rect x="477.3" y="5573" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="480.30" y="5583.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="70.4" y="2517" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="73.37" y="2527.5" ></text>
</g>
<g >
<title>`ENSURE-ORIGIN^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="287.3" y="5525" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="290.29" y="5535.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="181" width="1.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="57.17" y="191.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.02%)</title><rect x="78.0" y="4533" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="80.95" y="4543.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (34 samples, 0.75%)</title><rect x="14.2" y="3861" width="8.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="17.18" y="3871.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="14.7" y="2741" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="17.70" y="2751.5" ></text>
</g>
<g >
<title>`GC_allocobj (4 samples, 0.09%)</title><rect x="153.0" y="5077" width="1.0" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="155.96" y="5087.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="67.0" y="1621" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="69.97" y="1631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5253" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="180.26" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T CLASP))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="3861" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="100.29" y="3871.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (5 samples, 0.11%)</title><rect x="624.7" y="5541" width="1.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="627.70" y="5551.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="190.9" y="5461" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="193.85" y="5471.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="74.6" y="3669" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="77.55" y="3679.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (35 samples, 0.78%)</title><rect x="36.4" y="5109" width="9.1" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="39.40" y="5119.5" ></text>
</g>
<g >
<title>`wrapped_getInt32Ty_llvm__LLVMContext_ (2 samples, 0.04%)</title><rect x="373.8" y="5397" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="376.80" y="5407.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="202.9" y="5541" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="205.88" y="5551.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (2 samples, 0.04%)</title><rect x="493.8" y="5493" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="496.76" y="5503.5" ></text>
</g>
<g >
<title>`llvm::CallInst::onlyReadsMemory() const (2 samples, 0.04%)</title><rect x="517.0" y="5605" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="520.02" y="5615.5" ></text>
</g>
<g >
<title>`IRC-STORE^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="309.2" y="5445" width="0.6" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="312.25" y="5455.5" ></text>
</g>
<g >
<title>`llvmo::Function_O::getArgumentList() (1 samples, 0.02%)</title><rect x="367.3" y="5349" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="370.27" y="5359.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="97.0" y="5157" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="100.03" y="5167.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="70.6" y="1541" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="73.63" y="1551.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="44.2" y="4533" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="47.24" y="4543.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="395.2" y="5349" width="0.6" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="398.23" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="2533" width="0.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="65.01" y="2543.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::removeNotPreservedAnalysis(llvm::Pass*) (2 samples, 0.04%)</title><rect x="691.9" y="5669" width="0.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="694.86" y="5679.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::BasicBlock*&gt;::insert(llvm::BasicBlo (1 samples, 0.02%)</title><rect x="438.4" y="5621" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="441.35" y="5631.5" ></text>
</g>
<g >
<title>`llvm::Constant::handleOperandChange(llvm::Value*, llvm::Value*) (1 samples, 0.02%)</title><rect x="425.5" y="5685" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="428.55" y="5695.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="528.3" y="5413" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="531.26" y="5423.5" ></text>
</g>
<g >
<title>`REGISTER-INTERVAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2213" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="71.28" y="2223.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.9" y="3317" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="73.89" y="3327.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (5 samples, 0.11%)</title><rect x="63.8" y="2181" width="1.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="66.84" y="2191.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (3 samples, 0.07%)</title><rect x="323.4" y="5093" width="0.7" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="326.36" y="5103.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="417.2" y="5477" width="0.2" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="420.18" y="5487.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="137.0" y="4453" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="140.02" y="4463.5" ></text>
</g>
<g >
<title>`core::cl__translate_logical_pathname(gctools::smart_ptr&lt;core::T (1 samples, 0.02%)</title><rect x="720.9" y="5685" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="723.87" y="5695.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="136.2" y="3637" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="139.23" y="3647.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.09%)</title><rect x="68.8" y="2421" width="1.0" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="71.80" y="2431.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1093" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="65.53" y="1103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4405" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="137.40" y="4415.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (3 samples, 0.07%)</title><rect x="248.9" y="5573" width="0.8" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="251.87" y="5583.5" ></text>
</g>
<g >
<title>`COMPUTE-APPLICABLE-METHODS^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="149.8" y="5029" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="152.82" y="5039.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="3253" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="73.63" y="3263.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, ll (1 samples, 0.02%)</title><rect x="498.5" y="5525" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="501.47" y="5535.5" ></text>
</g>
<g >
<title>`llvm::CompositeType::indexValid(llvm::Value const*) const (1 samples, 0.02%)</title><rect x="626.0" y="5525" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="629.00" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET*) T T T))^ME (8 samples, 0.18%)</title><rect x="63.3" y="2757" width="2.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="66.32" y="2767.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="30.9" y="4277" width="0.3" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="33.91" y="4287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4421" width="0.3" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="139.23" y="4431.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5477" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="123.55" y="5487.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::add(llvm::Pass*, bool) (1 samples, 0.02%)</title><rect x="425.8" y="5637" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="428.81" y="5647.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="367.5" y="5381" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="370.53" y="5391.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (2 samples, 0.04%)</title><rect x="66.5" y="1589" width="0.5" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="69.45" y="1599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (10 samples, 0.22%)</title><rect x="78.0" y="4645" width="2.6" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="80.95" y="4655.5" ></text>
</g>
<g >
<title>`RUN-ALL/Users/karstenpoeck/lisp/compiler/clasp2/src/lisp/kernel (2,981 samples, 66.02%)</title><rect x="10.0" y="6293" width="779.1" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="13.00" y="6303.5" >`RUN-ALL/Users/karstenpoeck/lisp/compiler/clasp2/src/lisp/kernel</text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (2 samples, 0.04%)</title><rect x="64.4" y="853" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="67.36" y="863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="3957" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="136.36" y="3967.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.02%)</title><rect x="528.3" y="5397" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="531.26" y="5407.5" ></text>
</g>
<g >
<title>`core::cl__error(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.02%)</title><rect x="735.2" y="5637" width="0.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="738.25" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="70.1" y="3429" width="1.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="73.11" y="3439.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="58.3" y="325" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="61.35" y="335.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (6 samples, 0.13%)</title><rect x="50.0" y="3525" width="1.6" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="52.99" y="3535.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::getModRefInfo(llvm::ImmutableCallSite, llv (5 samples, 0.11%)</title><rect x="660.0" y="5525" width="1.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="662.98" y="5535.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (1 samples, 0.02%)</title><rect x="367.8" y="5413" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="370.79" y="5423.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="121.9" y="5525" width="0.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="124.86" y="5535.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="71.7" y="3637" width="0.2" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="74.68" y="3647.5" ></text>
</g>
<g >
<title>`CCLASP-COMPILE*^CLASP-CLEAVIR^FN^^ (4 samples, 0.09%)</title><rect x="58.3" y="1061" width="1.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="61.35" y="1071.5" ></text>
</g>
<g >
<title>`IRC-CREATE-CALL^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="355.2" y="5221" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="358.24" y="5231.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (2 samples, 0.04%)</title><rect x="173.1" y="5269" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="176.08" y="5279.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="77.2" y="4181" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="80.17" y="4191.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="71.4" y="3493" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="74.42" y="3503.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (7 samples, 0.16%)</title><rect x="57.6" y="2837" width="1.8" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="60.57" y="2847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="177.3" y="5557" width="0.7" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="180.26" y="5567.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (7 samples, 0.16%)</title><rect x="551.3" y="5333" width="1.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="554.26" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (13 samples, 0.29%)</title><rect x="74.0" y="4293" width="3.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="77.03" y="4303.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (2 samples, 0.04%)</title><rect x="527.2" y="5429" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="530.21" y="5439.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (1 samples, 0.02%)</title><rect x="10.5" y="5701" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="13.52" y="5711.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="355.5" y="5189" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="358.51" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.0" y="1269" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="65.01" y="1279.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="2037" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="68.93" y="2047.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="139.9" y="4981" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="142.89" y="4991.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="175.4" y="5269" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="178.44" y="5279.5" ></text>
</g>
<g >
<title>`wrapped_core__copy_instance_T_sp (3 samples, 0.07%)</title><rect x="208.4" y="5541" width="0.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="211.37" y="5551.5" ></text>
</g>
<g >
<title>`LOGIOR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="14.7" y="2325" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="17.70" y="2335.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="61.7" y="2021" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="64.75" y="2031.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.02%)</title><rect x="598.0" y="5509" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="601.04" y="5519.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="663.9" y="5525" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="666.90" y="5535.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (3 samples, 0.07%)</title><rect x="18.4" y="1973" width="0.7" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="21.36" y="1983.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="1957" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="64.75" y="1967.5" ></text>
</g>
<g >
<title>`GC_allocobj (1 samples, 0.02%)</title><rect x="171.0" y="5045" width="0.3" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="173.99" y="5055.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="66.2" y="1493" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="69.19" y="1503.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, ll (1 samples, 0.02%)</title><rect x="635.4" y="5541" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="638.41" y="5551.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="53" width="1.0" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="58.48" y="63.5" ></text>
</g>
<g >
<title>`OPTIMIZED-FDEFINITION-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="140.9" y="5029" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="143.94" y="5039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5109" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="180.26" y="5119.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.0" y="2741" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="63.96" y="2751.5" ></text>
</g>
<g >
<title>`COERCE-TO-CONDITION^CORE^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5621" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="736.42" y="5631.5" ></text>
</g>
<g >
<title>`llvm::getObjectSize(llvm::Value const*, unsigned long long&amp;, ll (1 samples, 0.02%)</title><rect x="527.7" y="5493" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="530.74" y="5503.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="384.3" y="5333" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="387.25" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="66.2" y="2117" width="1.8" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="69.19" y="2127.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="734.2" y="5189" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="737.20" y="5199.5" ></text>
</g>
<g >
<title>`core::core__pathname_translations(gctools::smart_ptr&lt;core::T_O&gt; (1 samples, 0.02%)</title><rect x="720.9" y="5653" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="723.87" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (91 samples, 2.02%)</title><rect x="12.4" y="5093" width="23.7" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="15.35" y="5103.5" >`..</text>
</g>
<g >
<title>`sanitizeFunctionName(llvm::StringRef) (1 samples, 0.02%)</title><rect x="682.2" y="5573" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="685.19" y="5583.5" ></text>
</g>
<g >
<title>`void llvm::SmallVectorImpl&lt;llvm::Value*&gt;::append&lt;llvm::Use*, vo (1 samples, 0.02%)</title><rect x="650.6" y="5589" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="653.57" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="167.3" y="5013" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="170.33" y="5023.5" ></text>
</g>
<g >
<title>`cc_setSymbolValue (1 samples, 0.02%)</title><rect x="370.7" y="5301" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="373.66" y="5311.5" ></text>
</g>
<g >
<title>`OPTIMIZED-FUNCALL-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="150.9" y="5141" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="153.87" y="5151.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="64.4" y="549" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="67.36" y="559.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::GlobalVariable&gt;, llv (1 samples, 0.02%)</title><rect x="720.6" y="5685" width="0.3" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="723.61" y="5695.5" ></text>
</g>
<g >
<title>`CCLASP-EVAL-WITH-ENV^CLASP-CLEAVIR^((T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="734.2" y="5637" width="0.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="737.20" y="5647.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solve() (10 samples, 0.22%)</title><rect x="431.0" y="5605" width="2.7" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="434.04" y="5615.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="400.2" y="5349" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="403.20" y="5359.5" ></text>
</g>
<g >
<title>`llvm::MDNodeKeyImpl&lt;llvm::DIBasicType&gt;::getHashValue() const (1 samples, 0.02%)</title><rect x="366.0" y="5253" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="368.96" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.6" y="2773" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="56.65" y="2783.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="68.0" y="2645" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="71.02" y="2655.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.04%)</title><rect x="116.6" y="5605" width="0.6" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="119.63" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="66.2" y="2533" width="1.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="69.19" y="2543.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="16.0" y="3749" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="19.01" y="3759.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (25 samples, 0.55%)</title><rect x="16.3" y="3253" width="6.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="19.27" y="3263.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="634.9" y="5589" width="0.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="637.89" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'FUNCTION) T T T) (1 samples, 0.02%)</title><rect x="16.3" y="1941" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="19.27" y="1951.5" ></text>
</g>
<g >
<title>`std::__1::enable_if&lt;is_hashable_data&lt;llvm::RegisterBankInfo::Va (1 samples, 0.02%)</title><rect x="625.2" y="5493" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="628.22" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="53.1" y="3269" width="1.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="56.12" y="3279.5" ></text>
</g>
<g >
<title>`core::add_dynamic_library_impl(bool, std::__1::basic_string&lt;cha (1 samples, 0.02%)</title><rect x="732.4" y="5829" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="735.37" y="5839.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (23 samples, 0.51%)</title><rect x="16.3" y="2757" width="6.0" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="19.27" y="2767.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="12.1" y="4533" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="15.09" y="4543.5" ></text>
</g>
<g >
<title>`wrapped_core__vref_AbstractSimpleVector_spsize_t (1 samples, 0.02%)</title><rect x="424.2" y="5701" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="427.24" y="5711.5" ></text>
</g>
<g >
<title>`wrapped_clos__classp_T_sp (1 samples, 0.02%)</title><rect x="43.2" y="4293" width="0.3" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="46.19" y="4303.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="14.2" y="3253" width="1.0" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="17.18" y="3263.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="94.9" y="4565" width="0.6" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="97.94" y="4575.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Value*, std::__1::allocator&lt;llvm::Value* (1 samples, 0.02%)</title><rect x="694.5" y="5637" width="0.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="697.48" y="5647.5" ></text>
</g>
<g >
<title>`cc_gatherDynamicExtentRestArguments (1 samples, 0.02%)</title><rect x="111.7" y="5605" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="114.67" y="5615.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (26 samples, 0.58%)</title><rect x="473.1" y="5621" width="6.8" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="476.11" y="5631.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2725" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="65.79" y="2735.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.02%)</title><rect x="441.8" y="5605" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="444.75" y="5615.5" ></text>
</g>
<g >
<title>`llvm::Module::getDataLayout() const (1 samples, 0.02%)</title><rect x="637.8" y="5541" width="0.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="640.77" y="5551.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (2 samples, 0.04%)</title><rect x="300.9" y="5317" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="303.88" y="5327.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="67.0" y="1669" width="0.2" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="69.97" y="1679.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL-BINDING^CLEAVIR-GENERATE-AST^((T T T T T))^METH (6 samples, 0.13%)</title><rect x="78.7" y="3861" width="1.6" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="81.74" y="3871.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::BlockFrequencyInfoImplBase::Work (1 samples, 0.02%)</title><rect x="602.0" y="5589" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="604.96" y="5599.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (2 samples, 0.04%)</title><rect x="68.8" y="2213" width="0.5" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="71.80" y="2223.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (3 samples, 0.07%)</title><rect x="64.1" y="1445" width="0.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="67.10" y="1455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (15 samples, 0.33%)</title><rect x="148.3" y="5493" width="3.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="151.25" y="5503.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="39.3" y="4213" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="42.27" y="4223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5125" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="180.26" y="5135.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (2 samples, 0.04%)</title><rect x="25.2" y="3973" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="28.16" y="3983.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::HashTableEq_O&gt; gctools::GCObjectApprop (1 samples, 0.02%)</title><rect x="273.2" y="5509" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="276.18" y="5519.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout con (28 samples, 0.62%)</title><rect x="666.3" y="5589" width="7.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="669.25" y="5599.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="516.5" y="5541" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="519.50" y="5551.5" ></text>
</g>
<g >
<title>`AUGMENT-ENVIRONMENT-WITH-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="81.1" y="4997" width="0.2" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="84.09" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.3" y="2005" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="65.27" y="2015.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="378.0" y="5397" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="380.98" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (5 samples, 0.11%)</title><rect x="54.2" y="1397" width="1.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="57.17" y="1407.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (3 samples, 0.07%)</title><rect x="205.2" y="5589" width="0.8" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="208.23" y="5599.5" ></text>
</g>
<g >
<title>0x10d596094 (6 samples, 0.13%)</title><rect x="12.4" y="5029" width="1.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="15.35" y="5039.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.07%)</title><rect x="53.4" y="3141" width="0.8" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="56.38" y="3151.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="14.2" y="3397" width="1.0" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="17.18" y="3407.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="410.7" y="5365" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="413.65" y="5375.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (249 samples, 5.51%)</title><rect x="313.2" y="5445" width="65.0" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="316.17" y="5455.5" >`LAYOUT..</text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="172.8" y="5269" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="175.82" y="5279.5" ></text>
</g>
<g >
<title>`llvm::Constant::removeDeadConstantUsers() const (2 samples, 0.04%)</title><rect x="589.2" y="5653" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="592.15" y="5663.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (2 samples, 0.04%)</title><rect x="146.2" y="4965" width="0.5" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="149.16" y="4975.5" ></text>
</g>
<g >
<title>`IRC-COND-BR^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="378.2" y="5413" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="381.24" y="5423.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (2 samples, 0.04%)</title><rect x="182.0" y="5397" width="0.5" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="184.97" y="5407.5" ></text>
</g>
<g >
<title>0x10d596094 (8 samples, 0.18%)</title><rect x="63.3" y="3013" width="2.1" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="66.32" y="3023.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (7 samples, 0.16%)</title><rect x="87.6" y="4469" width="1.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="90.62" y="4479.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (12 samples, 0.27%)</title><rect x="571.1" y="5557" width="3.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="574.12" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (88 samples, 1.95%)</title><rect x="49.5" y="4213" width="23.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="52.46" y="4223.5" >`..</text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (5 samples, 0.11%)</title><rect x="52.9" y="3333" width="1.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="55.86" y="3343.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="60.4" y="2773" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="63.44" y="2783.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.5" y="2869" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="65.53" y="2879.5" ></text>
</g>
<g >
<title>`core::Cons_O::nreverse() (1 samples, 0.02%)</title><rect x="110.6" y="5573" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="113.62" y="5583.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefBehavior(llvm::ImmutableCallSite) (1 samples, 0.02%)</title><rect x="530.3" y="5589" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="533.35" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="16.3" y="1989" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="19.27" y="1999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="145.1" y="5301" width="1.6" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="148.12" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="3813" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="135.31" y="3823.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (30 samples, 0.66%)</title><rect x="27.5" y="4757" width="7.9" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="30.51" y="4767.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="869" width="1.0" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="58.48" y="879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.0" y="4677" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="138.97" y="4687.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="3077" width="2.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="68.41" y="3087.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (10 samples, 0.22%)</title><rect x="65.4" y="2757" width="2.6" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="68.41" y="2767.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="453" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="61.35" y="463.5" ></text>
</g>
<g >
<title>`GC_mark_from (3 samples, 0.07%)</title><rect x="201.0" y="5333" width="0.8" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="204.05" y="5343.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="400.7" y="5445" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="403.72" y="5455.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="738.1" y="5685" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="741.12" y="5695.5" ></text>
</g>
<g >
<title>`FUNCTION-DESCRIPTION-NAME^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="368.3" y="5397" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="371.31" y="5407.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="485" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="65.01" y="495.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T LEXICAL-VARIABLE-INFO T T (2 samples, 0.04%)</title><rect x="12.4" y="4245" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="15.35" y="4255.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (332 samples, 7.35%)</title><rect x="11.3" y="5605" width="86.8" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="14.31" y="5615.5" >`FUNCALL^C..</text>
</g>
<g >
<title>`llvm::MetadataTracking::untrack(void*, llvm::Metadata&amp;) (2 samples, 0.04%)</title><rect x="675.7" y="5621" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="678.66" y="5631.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2869" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="64.22" y="2879.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="69.8" y="2613" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="72.85" y="2623.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="11.8" y="4501" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="14.83" y="4511.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="66.2" y="1541" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="69.19" y="1551.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (9 samples, 0.20%)</title><rect x="78.2" y="4229" width="2.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="81.21" y="4239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4645" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="139.76" y="4655.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::commonCastTransforms(llvm::CastInst&amp;) (1 samples, 0.02%)</title><rect x="481.7" y="5621" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="484.74" y="5631.5" ></text>
</g>
<g >
<title>`MULTIPLE-VALUE-ARRAY-ADDRESS^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="340.3" y="5269" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="343.35" y="5279.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerABIAlignment(unsigned int) const (1 samples, 0.02%)</title><rect x="671.5" y="5541" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="674.48" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.9" y="2949" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="56.91" y="2959.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="323.4" y="5221" width="1.0" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="326.36" y="5231.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="61.0" y="2565" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="63.96" y="2575.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.02%)</title><rect x="142.2" y="4933" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="145.24" y="4943.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::MaxMin_match&lt;llvm::ICmpInst, llvm::Pat (2 samples, 0.04%)</title><rect x="655.8" y="5605" width="0.5" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="658.80" y="5615.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="64.1" y="1957" width="1.0" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="67.10" y="1967.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="293" width="1.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="58.48" y="303.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.02%)</title><rect x="331.5" y="4997" width="0.2" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="334.46" y="5007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.1" y="4821" width="0.6" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="137.14" y="4831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="135.2" y="4597" width="0.8" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="138.19" y="4607.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.04%)</title><rect x="88.7" y="4389" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="91.67" y="4399.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="21.2" y="1941" width="0.6" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="24.24" y="1951.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.02%)</title><rect x="334.3" y="4965" width="0.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="337.34" y="4975.5" ></text>
</g>
<g >
<title>`wrapped_core__cons_length_Cons_sp (1 samples, 0.02%)</title><rect x="347.7" y="5269" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="350.67" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (182 samples, 4.03%)</title><rect x="49.5" y="5173" width="47.5" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="52.46" y="5183.5" >`CON..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="70.1" y="3093" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="73.11" y="3103.5" ></text>
</g>
<g >
<title>`GC_push_roots (2 samples, 0.04%)</title><rect x="788.3" y="5621" width="0.5" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="791.30" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="58.3" y="933" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="61.35" y="943.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="165.8" y="4981" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="168.77" y="4991.5" ></text>
</g>
<g >
<title>`llvm::IRBuilderBase::SetInstDebugLocation(llvm::Instruction*) c (1 samples, 0.02%)</title><rect x="333.0" y="4997" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="336.03" y="5007.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Type*, llvm::Point (1 samples, 0.02%)</title><rect x="337.5" y="5141" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="340.47" y="5151.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="16.3" y="2165" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="19.27" y="2175.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;std::__1::__tree_iterator&lt;std::__1::__value_type (2 samples, 0.04%)</title><rect x="731.9" y="5685" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="734.85" y="5695.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (4 samples, 0.09%)</title><rect x="153.0" y="5029" width="1.0" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="155.96" y="5039.5" ></text>
</g>
<g >
<title>`FAST-SUBTYPEP^CORE^FN^^ (1 samples, 0.02%)</title><rect x="67.8" y="1285" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="70.76" y="1295.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="67.2" y="1733" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="70.24" y="1743.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="692.6" y="5621" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="695.65" y="5631.5" ></text>
</g>
<g >
<title>`VARIABLE-IS-SPECIAL-P^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="38.2" y="4773" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="41.23" y="4783.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="62.5" y="2933" width="0.6" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="65.53" y="2943.5" ></text>
</g>
<g >
<title>`core::ext__class_unboundp(gctools::smart_ptr&lt;core::ClassHolder_ (1 samples, 0.02%)</title><rect x="394.7" y="5413" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="397.71" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="68.0" y="2997" width="1.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="71.02" y="3007.5" ></text>
</g>
<g >
<title>`GC_mark_some (3 samples, 0.07%)</title><rect x="299.6" y="5253" width="0.8" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="302.58" y="5263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4485" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="141.85" y="4495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4085" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="137.14" y="4095.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (3 samples, 0.07%)</title><rect x="211.5" y="5573" width="0.8" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="214.50" y="5583.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5477" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="713.94" y="5487.5" ></text>
</g>
<g >
<title>`INITIALIZE-CALLING-CONVENTION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="773" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="62.13" y="783.5" ></text>
</g>
<g >
<title>`PROCESS-OPTIONALS^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="50.8" y="3141" width="0.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="53.77" y="3151.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="184.6" y="5525" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="187.58" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'CLEAVIR-PRIMOP:M (36 samples, 0.80%)</title><rect x="14.2" y="4773" width="9.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="17.18" y="4783.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass* (1 samples, 0.02%)</title><rect x="454.8" y="5589" width="0.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="457.82" y="5599.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, bool (llvmo::Type_O::*)(gctools::smart (1 samples, 0.02%)</title><rect x="355.8" y="5109" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="358.77" y="5119.5" ></text>
</g>
<g >
<title>`PROCESS-LAMBDA-LIST^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="709" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="61.35" y="719.5" ></text>
</g>
<g >
<title>`core::startup_functions_invoke() (2,981 samples, 66.02%)</title><rect x="10.0" y="6309" width="779.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="13.00" y="6319.5" >`core::startup_functions_invoke()</text>
</g>
<g >
<title>`llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::Arra (1 samples, 0.02%)</title><rect x="443.1" y="5557" width="0.2" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="446.06" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="97.6" y="4741" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="100.55" y="4751.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.02%)</title><rect x="468.1" y="5557" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="471.15" y="5567.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (1 samples, 0.02%)</title><rect x="394.7" y="5429" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="397.71" y="5439.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Value*&gt;::insert(llvm::Value*) (1 samples, 0.02%)</title><rect x="562.0" y="5509" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="564.97" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (21 samples, 0.47%)</title><rect x="59.9" y="3397" width="5.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="62.92" y="3407.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (2 samples, 0.04%)</title><rect x="23.1" y="3829" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="26.07" y="3839.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (2 samples, 0.04%)</title><rect x="566.2" y="5397" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="569.16" y="5407.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (2 samples, 0.04%)</title><rect x="164.5" y="4869" width="0.5" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="167.46" y="4879.5" ></text>
</g>
<g >
<title>`%INTRINSIC-CALL^CLASP-CLEAVIR^FN^^ (3 samples, 0.07%)</title><rect x="310.3" y="5461" width="0.8" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="313.29" y="5471.5" ></text>
</g>
<g >
<title>`llvm::TerminatorInst::getNumSuccessors() const (1 samples, 0.02%)</title><rect x="693.4" y="5605" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="696.43" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4693" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="141.85" y="4703.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="22.8" y="3253" width="0.3" height="15.0" fill="rgb(75,222,75)" rx="2" ry="2" />
<text  x="25.81" y="3263.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="111.9" y="5605" width="0.3" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="114.93" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (61 samples, 1.35%)</title><rect x="128.1" y="5445" width="16.0" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="131.13" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (10 samples, 0.22%)</title><rect x="167.9" y="5093" width="2.6" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="170.86" y="5103.5" ></text>
</g>
<g >
<title>`TYPE-SPECIFIER-AST^CLEAVIR-AST^((:AROUND) (TYPEQ-AST))^METHOD^^ (4 samples, 0.09%)</title><rect x="114.8" y="5589" width="1.0" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="117.80" y="5599.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.02%)</title><rect x="31.2" y="4341" width="0.2" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="34.17" y="4351.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="2325" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="65.01" y="2335.5" ></text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.0" y="2469" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="63.96" y="2479.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::CmpClass_match&lt;llvm::PatternMatch::spe (1 samples, 0.02%)</title><rect x="639.9" y="5573" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="642.86" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5605" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="123.55" y="5615.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::create(llvm::Type*) const (1 samples, 0.02%)</title><rect x="612.4" y="5541" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="615.41" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4181" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="132.70" y="4191.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="63.1" y="2869" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="66.05" y="2879.5" ></text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::isFnAttrDi (1 samples, 0.02%)</title><rect x="575.0" y="5525" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="578.04" y="5535.5" ></text>
</g>
<g >
<title>`UNSAFE-FUNCALL1^CORE^FN^^ (1 samples, 0.02%)</title><rect x="43.2" y="4325" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="46.19" y="4335.5" ></text>
</g>
<g >
<title>`MAKE-FORMAT-DIRECTIVE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="80.6" y="4629" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="83.56" y="4639.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::track(void*, llvm::Metadata&amp;, llvm::Poi (1 samples, 0.02%)</title><rect x="332.2" y="4933" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="335.25" y="4943.5" ></text>
</g>
<g >
<title>`TEMP-ASTS-FROM-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="80.3" y="3909" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="83.30" y="3919.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="332.0" y="5045" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="334.98" y="5055.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="12.1" y="4437" width="0.3" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="15.09" y="4447.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="427.1" y="5621" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="430.12" y="5631.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2501" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="64.22" y="2511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (42 samples, 0.93%)</title><rect x="128.4" y="5077" width="11.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="131.39" y="5087.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="62.8" y="1733" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="65.79" y="1743.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (5 samples, 0.11%)</title><rect x="228.5" y="5605" width="1.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="231.49" y="5615.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="527.0" y="5461" width="0.2" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="529.95" y="5471.5" ></text>
</g>
<g >
<title>`CHECK-INITARGS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="91.3" y="4453" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="94.28" y="4463.5" ></text>
</g>
<g >
<title>`CALLEE-AST^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="130.0" y="3669" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="132.96" y="3679.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="431.6" y="5573" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="434.56" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (12 samples, 0.27%)</title><rect x="78.0" y="4901" width="3.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="80.95" y="4911.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitCallSite(llvm::CallSite) (26 samples, 0.58%)</title><rect x="637.5" y="5605" width="6.8" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="640.50" y="5615.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (3 samples, 0.07%)</title><rect x="651.4" y="5461" width="0.7" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="654.36" y="5471.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2805" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="65.01" y="2815.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (10 samples, 0.22%)</title><rect x="49.7" y="3717" width="2.6" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="52.73" y="3727.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (21 samples, 0.47%)</title><rect x="38.7" y="4629" width="5.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="41.75" y="4639.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.3" y="1509" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="65.27" y="1519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((THE-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.2" y="3605" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="132.18" y="3615.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2981" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="17.70" y="2991.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="62.5" y="1285" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="65.53" y="1295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="4901" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="130.35" y="4911.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (1 samples, 0.02%)</title><rect x="732.9" y="5381" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="735.90" y="5391.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getPredicateOnEdge(unsigned int, llvm::Val (4 samples, 0.09%)</title><rect x="447.2" y="5605" width="1.1" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="450.24" y="5615.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (5 samples, 0.11%)</title><rect x="210.2" y="5589" width="1.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="213.19" y="5599.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="23.9" y="3605" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="26.85" y="3615.5" ></text>
</g>
<g >
<title>`gctools::GCVector_moveable&lt;core::DynamicBinding&gt;::GCVector_move (1 samples, 0.02%)</title><rect x="135.2" y="3957" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="138.19" y="3967.5" ></text>
</g>
<g >
<title>`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="720.6" y="5573" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="723.61" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="66.2" y="1909" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="69.19" y="1919.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="11.3" y="5157" width="1.1" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="14.31" y="5167.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="65.4" y="2341" width="0.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="68.41" y="2351.5" ></text>
</g>
<g >
<title>`llvm::isMathLibCallNoop(llvm::CallSite, llvm::TargetLibraryInfo (1 samples, 0.02%)</title><rect x="683.0" y="5621" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="685.98" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (4 samples, 0.09%)</title><rect x="66.5" y="1957" width="1.0" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="69.45" y="1967.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="35.9" y="5061" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="38.87" y="5071.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5685" width="0.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="713.94" y="5695.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="346.4" y="5125" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="349.36" y="5135.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="2965" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="62.40" y="2975.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (26 samples, 0.58%)</title><rect x="16.3" y="3701" width="6.8" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="19.27" y="3711.5" ></text>
</g>
<g >
<title>`GC_mark_some (1 samples, 0.02%)</title><rect x="203.1" y="5365" width="0.3" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="206.14" y="5375.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="207.8" y="5445" width="0.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="210.84" y="5455.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (2 samples, 0.04%)</title><rect x="567.2" y="5413" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="570.20" y="5423.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="409.3" y="5397" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="412.34" y="5407.5" ></text>
</g>
<g >
<title>`llvm::canConstantFoldCallTo(llvm::ImmutableCallSite, llvm::Func (1 samples, 0.02%)</title><rect x="506.6" y="5397" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="509.57" y="5407.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.02%)</title><rect x="595.9" y="5525" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="598.95" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (7 samples, 0.16%)</title><rect x="152.4" y="5237" width="1.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="155.44" y="5247.5" ></text>
</g>
<g >
<title>`getAllocationDataForFunction(llvm::Function const*, AllocType,  (1 samples, 0.02%)</title><rect x="518.6" y="5573" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="521.59" y="5583.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="79.8" y="3765" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="82.78" y="3775.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="333.0" y="5013" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="336.03" y="5023.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (2 samples, 0.04%)</title><rect x="186.2" y="5541" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="189.15" y="5551.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="355.2" y="5173" width="0.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="358.24" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="168.6" y="5029" width="1.1" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="171.64" y="5039.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::brc_match&lt;llvm::PatternMatch::OneUse_m (1 samples, 0.02%)</title><rect x="482.8" y="5605" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="485.78" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4517" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="135.31" y="4527.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="68.0" y="2629" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="71.02" y="2639.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="4965" width="1.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="14.31" y="4975.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="2709" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="73.11" y="2719.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout con (3 samples, 0.07%)</title><rect x="516.0" y="5621" width="0.8" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="518.98" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4261" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="138.19" y="4271.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1701" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="65.79" y="1711.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="124.5" y="5445" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="127.47" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="55.5" y="1973" width="2.1" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="58.48" y="1983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.02%)</title><rect x="147.5" y="5493" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="150.47" y="5503.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="136.0" y="4533" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="138.97" y="4543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.9" y="3701" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="131.91" y="3711.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::~PassManagerImpl() (1 samples, 0.02%)</title><rect x="58.9" y="885" width="0.2" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="61.87" y="895.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.07%)</title><rect x="65.4" y="2533" width="0.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="68.41" y="2543.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="57.6" y="1621" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="60.57" y="1631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (1 samples, 0.02%)</title><rect x="62.5" y="2277" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="65.53" y="2287.5" ></text>
</g>
<g >
<title>`REGISTER-MEMBER-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="51.0" y="2405" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="54.03" y="2415.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="12.6" y="4101" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="15.61" y="4111.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="43.7" y="4293" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="46.71" y="4303.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="11.3" y="4597" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="14.31" y="4607.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (2 samples, 0.04%)</title><rect x="132.6" y="4741" width="0.5" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text  x="135.57" y="4751.5" ></text>
</g>
<g >
<title>`OUT^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="356.0" y="5285" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="359.03" y="5295.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5669" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="713.94" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5237" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="180.26" y="5247.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="174.9" y="5365" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="177.91" y="5375.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="78.7" y="3685" width="0.6" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="81.74" y="3695.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="70.6" y="2853" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="73.63" y="2863.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="178.6" y="5589" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="181.57" y="5599.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="593.6" y="5605" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="596.60" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (83 samples, 1.84%)</title><rect x="49.7" y="3989" width="21.7" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="52.73" y="3999.5" >`..</text>
</g>
<g >
<title>`LOOP-READ-AND-COMPILE-FILE-FORMS^COMPILER^FN^^ (1,572 samples, 34.82%)</title><rect x="11.0" y="5765" width="410.9" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="14.05" y="5775.5" >`LOOP-READ-AND-COMPILE-FILE-FORMS^COMPILER^FN^^</text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.02%)</title><rect x="242.3" y="5557" width="0.3" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="245.34" y="5567.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (2 samples, 0.04%)</title><rect x="182.0" y="5365" width="0.5" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="184.97" y="5375.5" ></text>
</g>
<g >
<title>`0x1 (2,981 samples, 66.02%)</title><rect x="10.0" y="6421" width="779.1" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="13.00" y="6431.5" >`0x1</text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="449.1" y="5637" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="452.07" y="5647.5" ></text>
</g>
<g >
<title>`boost::io::basic_altstringbuf&lt;char, std::__1::char_traits&lt;char&gt; (1 samples, 0.02%)</title><rect x="376.4" y="5269" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="379.41" y="5279.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="145.1" y="5029" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="148.12" y="5039.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="901" width="1.1" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="59.52" y="911.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::makeUniqueName(llvm::Value*, llvm::Smal (1 samples, 0.02%)</title><rect x="365.4" y="5317" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="368.44" y="5327.5" ></text>
</g>
<g >
<title>`SAFE-CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="51.0" y="2501" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="54.03" y="2511.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="65.7" y="1813" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="68.67" y="1823.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="64.4" y="869" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="67.36" y="879.5" ></text>
</g>
<g >
<title>`llvm::getConstantDataArrayInfo(llvm::Value const*, llvm::Consta (1 samples, 0.02%)</title><rect x="503.4" y="5429" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="506.43" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="3909" width="0.3" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="135.31" y="3919.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (9 samples, 0.20%)</title><rect x="24.6" y="4709" width="2.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="27.64" y="4719.5" ></text>
</g>
<g >
<title>`OPTIMIZED-TYPEQ-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="134.1" y="3877" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="137.14" y="3887.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="63.6" y="2645" width="1.8" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="66.58" y="2655.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (6 samples, 0.13%)</title><rect x="24.6" y="4613" width="1.6" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="27.64" y="4623.5" ></text>
</g>
<g >
<title>`llvm::APInt::sdiv(llvm::APInt const&amp;) const (1 samples, 0.02%)</title><rect x="507.4" y="5445" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="510.35" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.5" y="2725" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="65.53" y="2735.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="404.6" y="5365" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="407.64" y="5375.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="789" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="20.58" y="799.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="1381" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="65.01" y="1391.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (10 samples, 0.22%)</title><rect x="65.4" y="2565" width="2.6" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="68.41" y="2575.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="70.4" y="2613" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="73.37" y="2623.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="805" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="20.58" y="815.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="11.3" y="4677" width="1.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="14.31" y="4687.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="447.0" y="5461" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="449.98" y="5471.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (2 samples, 0.04%)</title><rect x="373.8" y="5205" width="0.5" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="376.80" y="5215.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="335.1" y="5109" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="338.12" y="5119.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="97.3" y="5189" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="100.29" y="5199.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (91 samples, 2.02%)</title><rect x="12.4" y="5317" width="23.7" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="15.35" y="5327.5" >`..</text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="276.6" y="5509" width="0.2" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="279.58" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4469" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="132.96" y="4479.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.02%)</title><rect x="392.9" y="5365" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="395.88" y="5375.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.02%)</title><rect x="50.0" y="3205" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="52.99" y="3215.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (245 samples, 5.43%)</title><rect x="1011.2" y="6293" width="64.1" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="1014.24" y="6303.5" >`GC_hea..</text>
</g>
<g >
<title>`GC_do_parallel_mark (3 samples, 0.07%)</title><rect x="201.0" y="5381" width="0.8" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="204.05" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="72.7" y="4821" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="75.72" y="4831.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (6 samples, 0.13%)</title><rect x="392.9" y="5381" width="1.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="395.88" y="5391.5" ></text>
</g>
<g >
<title>`GC_mark_local (1 samples, 0.02%)</title><rect x="403.6" y="5221" width="0.3" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="406.59" y="5231.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="64.9" y="965" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="67.88" y="975.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.8" y="2357" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="65.79" y="2367.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="614.2" y="5589" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="617.24" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="52.6" y="3701" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="55.60" y="3711.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (2 samples, 0.04%)</title><rect x="299.6" y="5173" width="0.5" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="302.58" y="5183.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="205.8" y="5429" width="0.2" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="208.75" y="5439.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="19.7" y="2037" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="22.67" y="2047.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="422.7" y="5653" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="425.67" y="5663.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1685" width="1.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="57.17" y="1695.5" ></text>
</g>
<g >
<title>`llvm::SparseSolver&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anon (33 samples, 0.73%)</title><rect x="702.1" y="5685" width="8.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="705.06" y="5695.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.02%)</title><rect x="586.8" y="5557" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="589.80" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (4 samples, 0.09%)</title><rect x="60.2" y="3157" width="1.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="63.18" y="3167.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (13 samples, 0.29%)</title><rect x="54.2" y="2469" width="3.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="57.17" y="2479.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (2 samples, 0.04%)</title><rect x="627.3" y="5541" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="630.31" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="23.9" y="3877" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="26.85" y="3887.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="48.9" y="5157" width="0.6" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="51.94" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="3893" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="131.91" y="3903.5" ></text>
</g>
<g >
<title>`OF-CLASS-P^CORE^FN^^ (2 samples, 0.04%)</title><rect x="91.8" y="4405" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="94.80" y="4415.5" ></text>
</g>
<g >
<title>`core::ext__class_unboundp(gctools::smart_ptr&lt;core::ClassHolder_ (1 samples, 0.02%)</title><rect x="332.8" y="5093" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="335.77" y="5103.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="127.6" y="5413" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="130.61" y="5423.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4965" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="736.42" y="4975.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::AggressiveDeadCodeElimination::performDe (4 samples, 0.09%)</title><rect x="428.7" y="5653" width="1.0" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="431.68" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="57.6" y="997" width="0.2" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="60.57" y="1007.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="60.7" y="3029" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="63.70" y="3039.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::PruneEH::runOnSCC(llvm::CallGraphSCC&amp;) (3 samples, 0.07%)</title><rect x="427.6" y="5685" width="0.8" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="430.64" y="5695.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (4 samples, 0.09%)</title><rect x="551.8" y="5301" width="1.0" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="554.78" y="5311.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="290.2" y="5509" width="1.0" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="293.17" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (21 samples, 0.47%)</title><rect x="54.2" y="3317" width="5.5" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="57.17" y="3327.5" ></text>
</g>
<g >
<title>`core::cl__write(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.02%)</title><rect x="735.5" y="5653" width="0.3" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="738.51" y="5663.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="133" width="1.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="57.17" y="143.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (1 samples, 0.02%)</title><rect x="186.9" y="5509" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="189.93" y="5519.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((UNWIND-INSTRUCTION (8 samples, 0.18%)</title><rect x="323.1" y="5285" width="2.1" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="326.10" y="5295.5" ></text>
</g>
<g >
<title>`llvm::DIBuilder::DIBuilder(llvm::Module&amp;, bool) (1 samples, 0.02%)</title><rect x="519.9" y="5621" width="0.3" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="522.90" y="5631.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eql(core::Hash1Generator&amp;, gctools::s (1 samples, 0.02%)</title><rect x="123.4" y="5445" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="126.43" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (22 samples, 0.49%)</title><rect x="16.3" y="2613" width="5.7" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="19.27" y="2623.5" ></text>
</g>
<g >
<title>`MODULE-MAKE-GLOBAL-STRING^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="420.8" y="5605" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="423.84" y="5615.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2645" width="0.3" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="65.01" y="2655.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;std::__1::pair&lt;llvm::BasicBlock*, llvm::Option (1 samples, 0.02%)</title><rect x="429.2" y="5637" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="432.21" y="5647.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="79.5" y="3685" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="82.52" y="3695.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (3 samples, 0.07%)</title><rect x="185.1" y="5557" width="0.8" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="188.11" y="5567.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="35.9" y="4997" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="38.87" y="5007.5" ></text>
</g>
<g >
<title>`llvm::MachineFunctionPass::runOnFunction(llvm::Function&amp;) (1 samples, 0.02%)</title><rect x="58.6" y="837" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="61.61" y="847.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (2 samples, 0.04%)</title><rect x="658.2" y="5605" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="661.15" y="5615.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2165" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="73.63" y="2175.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="69.8" y="2677" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="72.85" y="2687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4661" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="137.66" y="4671.5" ></text>
</g>
<g >
<title>`llvm::objcarc::ObjCARCAAWrapperPass* llvm::Pass::getAnalysisIfA (2 samples, 0.04%)</title><rect x="454.6" y="5653" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="457.56" y="5663.5" ></text>
</g>
<g >
<title>`GC_clear_hdr_marks (1 samples, 0.02%)</title><rect x="396.5" y="5205" width="0.3" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="399.54" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="69.8" y="3157" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="72.85" y="3167.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2789" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="65.01" y="2799.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="60.2" y="3189" width="1.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="63.18" y="3199.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (8 samples, 0.18%)</title><rect x="275.5" y="5573" width="2.1" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="278.53" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="57.6" y="1205" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="60.57" y="1215.5" ></text>
</g>
<g >
<title>0x10d596094 (181 samples, 4.01%)</title><rect x="49.5" y="5125" width="47.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="52.46" y="5135.5" >0x10..</text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="64.4" y="1253" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="67.36" y="1263.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (5 samples, 0.11%)</title><rect x="323.1" y="5237" width="1.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="326.10" y="5247.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="44.5" y="4565" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="47.50" y="4575.5" ></text>
</g>
<g >
<title>0x10d596094 (3 samples, 0.07%)</title><rect x="53.4" y="3109" width="0.8" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="56.38" y="3119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4645" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="141.85" y="4655.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (71 samples, 1.57%)</title><rect x="52.9" y="3541" width="18.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="55.86" y="3551.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, (anonymous (1 samples, 0.02%)</title><rect x="711.5" y="5653" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="714.47" y="5663.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="56.5" y="549" width="1.1" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="59.52" y="559.5" ></text>
</g>
<g >
<title>`STANDARD-INSTANCE-ACCESS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="28.0" y="4341" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="31.03" y="4351.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (1 samples, 0.02%)</title><rect x="368.6" y="5365" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="371.57" y="5375.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="334.6" y="5093" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="337.60" y="5103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.4" y="4117" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="132.44" y="4127.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2757" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="65.27" y="2767.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (8 samples, 0.18%)</title><rect x="118.2" y="5589" width="2.1" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="121.20" y="5599.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorTemplateBase&lt;llvm::Constant*, true&gt;::push_back (1 samples, 0.02%)</title><rect x="610.1" y="5557" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="613.06" y="5567.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="341.4" y="5221" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="344.39" y="5231.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (2 samples, 0.04%)</title><rect x="627.3" y="5525" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="630.31" y="5535.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="57.6" y="1045" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="60.57" y="1055.5" ></text>
</g>
<g >
<title>`llvm::AttrBuilder::addAttribute(llvm::StringRef, llvm::StringRe (1 samples, 0.02%)</title><rect x="734.2" y="5285" width="0.3" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="737.20" y="5295.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="420.8" y="5461" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="423.84" y="5471.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="2821" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="62.40" y="2831.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="355.5" y="5173" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="358.51" y="5183.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4469" width="1.0" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="26.59" y="4479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (9 samples, 0.20%)</title><rect x="160.0" y="5125" width="2.4" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="163.02" y="5135.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (10 samples, 0.22%)</title><rect x="624.2" y="5557" width="2.6" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="627.17" y="5567.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="360.7" y="5333" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="363.73" y="5343.5" ></text>
</g>
<g >
<title>`GC_malloc_atomic (1 samples, 0.02%)</title><rect x="140.2" y="4981" width="0.2" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="143.15" y="4991.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="869" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="65.01" y="879.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (4 samples, 0.09%)</title><rect x="33.3" y="4389" width="1.0" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="36.26" y="4399.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="60.2" y="2405" width="0.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="63.18" y="2415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4341" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="135.31" y="4351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5205" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="180.26" y="5215.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.02%)</title><rect x="328.8" y="5173" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="331.85" y="5183.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (5 samples, 0.11%)</title><rect x="54.2" y="1541" width="1.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="57.17" y="1551.5" ></text>
</g>
<g >
<title>0x10d596094 (86 samples, 1.90%)</title><rect x="49.7" y="4117" width="22.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="52.73" y="4127.5" >0..</text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="346.1" y="5157" width="0.3" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="349.10" y="5167.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (2 samples, 0.04%)</title><rect x="67.5" y="1701" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="70.50" y="1711.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::getModRefBehavior(llvm::ImmutableCallSite) (1 samples, 0.02%)</title><rect x="451.7" y="5637" width="0.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="454.68" y="5647.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="38.0" y="4581" width="0.2" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="40.96" y="4591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4421" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="137.14" y="4431.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (27 samples, 0.60%)</title><rect x="27.5" y="4533" width="7.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="30.51" y="4543.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Value*&gt;::find(llvm::Value const*) c (1 samples, 0.02%)</title><rect x="434.7" y="5541" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="437.70" y="5551.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (1 samples, 0.02%)</title><rect x="171.0" y="5029" width="0.3" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="173.99" y="5039.5" ></text>
</g>
<g >
<title>`STRINGP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="408.6" y="5461" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="411.56" y="5471.5" ></text>
</g>
<g >
<title>`BASIC-TREE^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.0" y="5397" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="737.99" y="5407.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.02%)</title><rect x="71.2" y="3525" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="74.16" y="3535.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="134.4" y="4165" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="137.40" y="4175.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="64.1" y="1669" width="1.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="67.10" y="1679.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (1 samples, 0.02%)</title><rect x="639.1" y="5589" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="642.07" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2933" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="66.05" y="2943.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((MEMSET2-INSTRUCTIO (1 samples, 0.02%)</title><rect x="400.5" y="5477" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="403.46" y="5487.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::push_binding(gctools::smart_ptr&lt;core (1 samples, 0.02%)</title><rect x="330.4" y="5093" width="0.3" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="333.42" y="5103.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (8 samples, 0.18%)</title><rect x="200.0" y="5557" width="2.1" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="203.00" y="5567.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="327.0" y="5237" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="330.02" y="5247.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="468.4" y="5589" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="471.41" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4645" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="136.36" y="4655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4597" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="141.32" y="4607.5" ></text>
</g>
<g >
<title>`core::cl__list(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="319.7" y="5317" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="322.70" y="5327.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (11 samples, 0.24%)</title><rect x="223.5" y="5573" width="2.9" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="226.52" y="5583.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.02%)</title><rect x="527.5" y="5397" width="0.2" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="530.48" y="5407.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (4 samples, 0.09%)</title><rect x="735.8" y="5301" width="1.0" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="738.77" y="5311.5" ></text>
</g>
<g >
<title>`tiny_free_detach_region (1 samples, 0.02%)</title><rect x="697.9" y="5541" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="700.88" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (2 samples, 0.04%)</title><rect x="51.0" y="2773" width="0.6" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="54.03" y="2783.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="917" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="20.58" y="927.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="341.7" y="5205" width="0.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="344.65" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="17.6" y="1781" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="20.58" y="1791.5" ></text>
</g>
<g >
<title>`JIT-ADD-MODULE-RETURN-FUNCTION^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="58.6" y="1045" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="61.61" y="1055.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="322.3" y="5221" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="325.31" y="5231.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="390.8" y="5349" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="393.79" y="5359.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Function* (llvmo::Module_O::*)(g (1 samples, 0.02%)</title><rect x="292.5" y="5301" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="295.52" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'MACROLET) T T T) (7 samples, 0.16%)</title><rect x="57.6" y="1749" width="1.8" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="60.57" y="1759.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (6 samples, 0.13%)</title><rect x="282.6" y="5589" width="1.6" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="285.59" y="5599.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="638.0" y="5525" width="0.3" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="641.03" y="5535.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (91 samples, 2.02%)</title><rect x="12.4" y="5269" width="23.7" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="15.35" y="5279.5" >`..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2997" width="3.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="57.17" y="3007.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="77.7" y="4853" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="80.69" y="4863.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (3 samples, 0.07%)</title><rect x="20.5" y="1893" width="0.7" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="23.45" y="1903.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.02%)</title><rect x="26.5" y="4533" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="29.47" y="4543.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="14.2" y="3621" width="1.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="17.18" y="3631.5" ></text>
</g>
<g >
<title>`core::lisp_getStaticClass(gctools::Header_s::Value) (1 samples, 0.02%)</title><rect x="328.1" y="5253" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="331.06" y="5263.5" ></text>
</g>
<g >
<title>`llvm::APInt::clearUnusedBits() (1 samples, 0.02%)</title><rect x="575.6" y="5557" width="0.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="578.56" y="5567.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="64.4" y="597" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="67.36" y="607.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::reference_raw_(core::Symbol_O*, gcto (1 samples, 0.02%)</title><rect x="348.7" y="5237" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="351.71" y="5247.5" ></text>
</g>
<g >
<title>`core::General_O::_instanceClass() const (1 samples, 0.02%)</title><rect x="301.7" y="5429" width="0.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="304.67" y="5439.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (2 samples, 0.04%)</title><rect x="350.3" y="5237" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="353.28" y="5247.5" ></text>
</g>
<g >
<title>`llvm::hash_value(llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="573.7" y="5477" width="0.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="576.73" y="5487.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="157.9" y="5285" width="0.3" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="160.92" y="5295.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Type*, std::__1::u (1 samples, 0.02%)</title><rect x="343.0" y="5173" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="345.96" y="5183.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="21.5" y="1605" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="24.50" y="1615.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (2 samples, 0.04%)</title><rect x="340.9" y="5205" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="343.87" y="5215.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="401.0" y="5317" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="403.98" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (7 samples, 0.16%)</title><rect x="68.0" y="3125" width="1.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="71.02" y="3135.5" ></text>
</g>
<g >
<title>`PRIMITIVE-PROPERTIES^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="310.8" y="5445" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="313.82" y="5455.5" ></text>
</g>
<g >
<title>`llvm::LibCallSimplifier::optimizeCall(llvm::CallInst*) (3 samples, 0.07%)</title><rect x="637.8" y="5573" width="0.7" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="640.77" y="5583.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="57.6" y="901" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="60.57" y="911.5" ></text>
</g>
<g >
<title>`PROCESS-REQUIRED^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="693" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="61.35" y="703.5" ></text>
</g>
<g >
<title>`llvm::Instruction::isIdenticalToWhenDefined(llvm::Instruction c (1 samples, 0.02%)</title><rect x="440.2" y="5605" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="443.18" y="5615.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="3173" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="72.85" y="3183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4581" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="136.36" y="4591.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="341.7" y="5173" width="0.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="344.65" y="5183.5" ></text>
</g>
<g >
<title>`core::cl__values(gctools::smart_ptr&lt;core::Vaslist&gt;) (1 samples, 0.02%)</title><rect x="422.7" y="5685" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="425.67" y="5695.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="64.4" y="805" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="67.36" y="815.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="12.4" y="4357" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="15.35" y="4367.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (2 samples, 0.04%)</title><rect x="132.6" y="4645" width="0.5" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="135.57" y="4655.5" ></text>
</g>
<g >
<title>`GC_mark_from (2 samples, 0.04%)</title><rect x="283.4" y="5349" width="0.5" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="286.37" y="5359.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (2 samples, 0.04%)</title><rect x="506.3" y="5445" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="509.31" y="5455.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="80.3" y="3877" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="83.30" y="3887.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4581" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="100.29" y="4591.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="178.8" y="5605" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="181.83" y="5615.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DILocation*, llvm: (3 samples, 0.07%)</title><rect x="300.6" y="5365" width="0.8" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="303.62" y="5375.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="261" width="1.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="57.17" y="271.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.02%)</title><rect x="157.1" y="5189" width="0.3" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="160.14" y="5199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4405" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="141.85" y="4415.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1637" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="65.53" y="1647.5" ></text>
</g>
<g >
<title>`FUNCTION-TYPE^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="51.8" y="3461" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="54.82" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4309" width="0.3" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="137.40" y="4319.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="56.5" y="37" width="1.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="59.52" y="47.5" ></text>
</g>
<g >
<title>`llvm::WriteBitcodeToFile(llvm::Module const*, llvm::raw_ostream (31 samples, 0.69%)</title><rect x="721.4" y="5717" width="8.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="724.40" y="5727.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="258.8" y="5461" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="261.81" y="5471.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="39.3" y="4149" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="42.27" y="4159.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="3141" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="64.75" y="3151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="137.8" y="4789" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="140.80" y="4799.5" ></text>
</g>
<g >
<title>`std::__1::__vector_base&lt;std::__1::pair&lt;llvm::WeakTrackingVH, ll (1 samples, 0.02%)</title><rect x="700.8" y="5509" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="703.75" y="5519.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="528.5" y="5461" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="531.52" y="5471.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::make(unsigned long, int, bool, gctools::smart_p (1 samples, 0.02%)</title><rect x="140.2" y="4997" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="143.15" y="5007.5" ></text>
</g>
<g >
<title>0x10d596094 (8 samples, 0.18%)</title><rect x="41.1" y="4389" width="2.1" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="44.10" y="4399.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="53.4" y="3029" width="0.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="56.38" y="3039.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (6 samples, 0.13%)</title><rect x="24.6" y="4389" width="1.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="27.64" y="4399.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (4 samples, 0.09%)</title><rect x="75.3" y="3797" width="1.1" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="78.34" y="3807.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="204.4" y="5573" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="207.45" y="5583.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="501" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="65.01" y="511.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="23.9" y="3941" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="26.85" y="3951.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="52.6" y="3797" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="55.60" y="3807.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction*, unsi (2 samples, 0.04%)</title><rect x="471.3" y="5605" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="474.28" y="5615.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getParent() (1 samples, 0.02%)</title><rect x="315.5" y="5269" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="318.52" y="5279.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (4 samples, 0.09%)</title><rect x="704.4" y="5573" width="1.1" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="707.41" y="5583.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LegacyLICMPass::runOnLoop(llvm::Loop*, l (2 samples, 0.04%)</title><rect x="522.8" y="5653" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="525.77" y="5663.5" ></text>
</g>
<g >
<title>`core::bind_optional_va_list(gctools::Vec0&lt;core::OptionalArgumen (1 samples, 0.02%)</title><rect x="320.5" y="5157" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="323.49" y="5167.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="445.7" y="5557" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="448.67" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="11.3" y="4725" width="1.1" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="14.31" y="4735.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="350.3" y="5189" width="0.2" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="353.28" y="5199.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::StoreInst const*, llvm::Me (2 samples, 0.04%)</title><rect x="663.6" y="5573" width="0.6" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="666.64" y="5583.5" ></text>
</g>
<g >
<title>`llvmo::Value_O::create(llvm::Value*) (1 samples, 0.02%)</title><rect x="353.2" y="5205" width="0.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="356.15" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (9 samples, 0.20%)</title><rect x="78.2" y="4469" width="2.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="81.21" y="4479.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitSelectInst(llvm::SelectInst&amp;) (1 samples, 0.02%)</title><rect x="673.8" y="5621" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="676.83" y="5631.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="213" width="1.1" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="59.52" y="223.5" ></text>
</g>
<g >
<title>`llvm::FortifiedLibCallSimplifier::optimizeCall(llvm::CallInst*) (4 samples, 0.09%)</title><rect x="484.9" y="5557" width="1.0" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="487.87" y="5567.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="186.9" y="5557" width="0.6" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="189.93" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4293" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="141.85" y="4303.5" ></text>
</g>
<g >
<title>`core::Function_O::functionName() const (1 samples, 0.02%)</title><rect x="393.1" y="5365" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="396.14" y="5375.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="163.4" y="4997" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="166.41" y="5007.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="19.7" y="1797" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="22.67" y="1807.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="1333" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="65.01" y="1343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="14.2" y="3301" width="1.0" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="17.18" y="3311.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (4 samples, 0.09%)</title><rect x="250.4" y="5573" width="1.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="253.44" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="136.2" y="4741" width="0.6" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="139.23" y="4751.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpUsingKnownBits(llvm::ICmpInst&amp;) (3 samples, 0.07%)</title><rect x="656.8" y="5605" width="0.8" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="659.84" y="5615.5" ></text>
</g>
<g >
<title>`core::Lisp_O::findPackage(std::__1::basic_string&lt;char, std::__1 (1 samples, 0.02%)</title><rect x="15.7" y="3349" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="18.75" y="3359.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="94.7" y="4469" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="97.68" y="4479.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (3 samples, 0.07%)</title><rect x="208.4" y="5413" width="0.7" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="211.37" y="5423.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="68.0" y="3045" width="1.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="71.02" y="3055.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::setLastUser(llvm::ArrayRef&lt;llvm::Pass* (1 samples, 0.02%)</title><rect x="425.8" y="5621" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="428.81" y="5631.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="1733" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="73.63" y="1743.5" ></text>
</g>
<g >
<title>`%INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="311.1" y="5461" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="314.08" y="5471.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (3 samples, 0.07%)</title><rect x="18.4" y="1893" width="0.7" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="21.36" y="1903.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-I64^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="403.3" y="5429" width="0.6" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="406.33" y="5439.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (22 samples, 0.49%)</title><rect x="28.6" y="4405" width="5.7" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="31.56" y="4415.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2613" width="1.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="60.57" y="2623.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4261" width="1.0" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="26.59" y="4271.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (3 samples, 0.07%)</title><rect x="47.4" y="4885" width="0.8" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="50.37" y="4895.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (2 samples, 0.04%)</title><rect x="361.0" y="5237" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="363.99" y="5247.5" ></text>
</g>
<g >
<title>`DO-LITERAL-TABLE^LITERAL^FN^^ (1,591 samples, 35.24%)</title><rect x="10.0" y="5781" width="415.8" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="13.00" y="5791.5" >`DO-LITERAL-TABLE^LITERAL^FN^^</text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="737.3" y="5621" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="740.34" y="5631.5" ></text>
</g>
<g >
<title>`GC_allocobj (3 samples, 0.07%)</title><rect x="160.5" y="4885" width="0.8" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="163.54" y="4895.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="67.5" y="1349" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="70.50" y="1359.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.02%)</title><rect x="464.5" y="5525" width="0.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="467.49" y="5535.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="460.6" y="5541" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="463.57" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4485" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="136.62" y="4495.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="316.8" y="5333" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="319.83" y="5343.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.3" y="3109" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="65.27" y="3119.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="236.1" y="5525" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="239.07" y="5535.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (5 samples, 0.11%)</title><rect x="557.0" y="5413" width="1.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="560.01" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4597" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="142.11" y="4607.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4613" width="1.0" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="26.59" y="4623.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (25 samples, 0.55%)</title><rect x="16.3" y="2885" width="6.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="19.27" y="2895.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="55.5" y="1253" width="1.0" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="58.48" y="1263.5" ></text>
</g>
<g >
<title>`core::core__load_source(gctools::smart_ptr&lt;core::T_O&gt;, bool, bo (2,981 samples, 66.02%)</title><rect x="10.0" y="5989" width="779.1" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="13.00" y="5999.5" >`core::core__load_source(gctools::smart_ptr&lt;core::T_O&gt;, bool, bo</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="4101" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="131.91" y="4111.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="16.3" y="2229" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="19.27" y="2239.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (5 samples, 0.11%)</title><rect x="210.2" y="5557" width="1.3" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="213.19" y="5567.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="507.4" y="5541" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="510.35" y="5551.5" ></text>
</g>
<g >
<title>`llvm::GVN::propagateEquality(llvm::Value*, llvm::Value*, llvm:: (1 samples, 0.02%)</title><rect x="569.6" y="5589" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="572.55" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="837" width="1.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="57.17" y="847.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.02%)</title><rect x="27.8" y="4341" width="0.2" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="30.77" y="4351.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (1 samples, 0.02%)</title><rect x="523.0" y="5461" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="526.03" y="5471.5" ></text>
</g>
<g >
<title>`core::lisp_true() (1 samples, 0.02%)</title><rect x="100.2" y="5589" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="103.17" y="5599.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="51.3" y="2501" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="54.29" y="2511.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="405.7" y="5333" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="408.69" y="5343.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="593.1" y="5557" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="596.07" y="5567.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="134.7" y="4261" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="137.66" y="4271.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (6 samples, 0.13%)</title><rect x="50.0" y="3349" width="1.6" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="52.99" y="3359.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="16.3" y="2085" width="0.2" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="19.27" y="2095.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::getModRefInfo(llvm::ImmutableCallSite, llv (3 samples, 0.07%)</title><rect x="501.9" y="5525" width="0.7" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="504.86" y="5535.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (2 samples, 0.04%)</title><rect x="168.9" y="4933" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="171.90" y="4943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="160.0" y="4981" width="0.5" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="163.02" y="4991.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="341.7" y="5125" width="0.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="344.65" y="5135.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="67.2" y="1509" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="70.24" y="1519.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="420.8" y="5429" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="423.84" y="5439.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="191.1" y="5461" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="194.12" y="5471.5" ></text>
</g>
<g >
<title>`DBG-CREATE-FUNCTION-TYPE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="418.5" y="5573" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="421.49" y="5583.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="675.1" y="5525" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="678.14" y="5535.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="69.6" y="2309" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="72.59" y="2319.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'THE) T T T))^MET (3 samples, 0.07%)</title><rect x="53.4" y="3157" width="0.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="56.38" y="3167.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5525" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="713.94" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="133.6" y="4693" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="136.62" y="4703.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (506 samples, 11.21%)</title><rect x="286.0" y="5557" width="132.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="288.99" y="5567.5" >`DO-DEBUG-INFO-S..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="60.2" y="2725" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="63.18" y="2735.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::commonPointerCastTransforms(llvm::CastInst&amp; (1 samples, 0.02%)</title><rect x="636.2" y="5605" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="639.20" y="5615.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.02%)</title><rect x="458.2" y="5637" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="461.22" y="5647.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="74.6" y="3989" width="2.6" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="77.55" y="3999.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="1765" width="1.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="57.17" y="1775.5" ></text>
</g>
<g >
<title>`GET-DILOCATION^LLVM-SYS^FN^^ (1 samples, 0.02%)</title><rect x="288.9" y="5445" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="291.86" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="2725" width="0.3" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="73.63" y="2735.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="3237" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="64.22" y="3247.5" ></text>
</g>
<g >
<title>`PARSE-DIRECTIVE^CORE^FN^^ (6 samples, 0.13%)</title><rect x="46.6" y="5045" width="1.6" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="49.59" y="5055.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="63.3" y="2981" width="2.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="66.32" y="2991.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="64.6" y="453" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="67.62" y="463.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET*) T T T))^ME (1 samples, 0.02%)</title><rect x="21.5" y="1765" width="0.3" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="24.50" y="1775.5" ></text>
</g>
<g >
<title>`llvm::Instruction::getMetadataImpl(unsigned int) const (1 samples, 0.02%)</title><rect x="636.5" y="5605" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="639.46" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (20 samples, 0.44%)</title><rect x="54.2" y="3285" width="5.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="57.17" y="3295.5" ></text>
</g>
<g >
<title>`free_tiny (2 samples, 0.04%)</title><rect x="690.0" y="5605" width="0.6" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="693.04" y="5615.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="140.2" y="5045" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="143.15" y="5055.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (6 samples, 0.13%)</title><rect x="50.0" y="3333" width="1.6" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="52.99" y="3343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (43 samples, 0.95%)</title><rect x="128.4" y="5125" width="11.2" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="131.39" y="5135.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.6" y="2597" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="56.65" y="2607.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (7 samples, 0.16%)</title><rect x="63.6" y="2437" width="1.8" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="66.58" y="2447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3973" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="132.96" y="3983.5" ></text>
</g>
<g >
<title>`iterativelySimplifyCFG(llvm::Function&amp;, llvm::TargetTransformIn (9 samples, 0.20%)</title><rect x="584.7" y="5653" width="2.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="587.71" y="5663.5" ></text>
</g>
<g >
<title>`FUDGE-VALUES-TYPE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="41.4" y="4293" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="44.36" y="4303.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="406.5" y="5269" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="409.47" y="5279.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="418.8" y="5509" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="421.75" y="5519.5" ></text>
</g>
<g >
<title>`wrapped_core__pathname_translations_T_spT_spT_sp (1 samples, 0.02%)</title><rect x="720.9" y="5669" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="723.87" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.8" y="4693" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="134.79" y="4703.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="328.8" y="5221" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="331.85" y="5231.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedUseBits(llvm::Value*, llvm: (2 samples, 0.04%)</title><rect x="635.2" y="5589" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="638.15" y="5599.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (18 samples, 0.40%)</title><rect x="17.3" y="2469" width="4.7" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="20.32" y="2479.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (3 samples, 0.07%)</title><rect x="323.4" y="5173" width="0.7" height="15.0" fill="rgb(208,61,61)" rx="2" ry="2" />
<text  x="326.36" y="5183.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="16.0" y="3701" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="19.01" y="3711.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (3 samples, 0.07%)</title><rect x="283.4" y="5461" width="0.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="286.37" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="69.8" y="2805" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="72.85" y="2815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4629" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="141.85" y="4639.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::ConstantExpr*, llv (1 samples, 0.02%)</title><rect x="328.8" y="5141" width="0.3" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="331.85" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'CLEAVIR-PRIMOP:L (7 samples, 0.16%)</title><rect x="68.0" y="3285" width="1.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="71.02" y="3295.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (1 samples, 0.02%)</title><rect x="403.6" y="5285" width="0.3" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="406.59" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4773" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="142.11" y="4783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4485" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="136.36" y="4495.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="175.4" y="5301" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="178.44" y="5311.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2821" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="64.75" y="2831.5" ></text>
</g>
<g >
<title>`llvmo::llvm_sys__writeBitcodeToFile(gctools::smart_ptr&lt;llvmo::M (42 samples, 0.93%)</title><rect x="721.4" y="5733" width="11.0" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="724.40" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="134.4" y="4213" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="137.40" y="4223.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="197.1" y="5589" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="200.13" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'TAGBODY) T T T)) (7 samples, 0.16%)</title><rect x="63.6" y="2421" width="1.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="66.58" y="2431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4229" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="132.70" y="4239.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (25 samples, 0.55%)</title><rect x="16.3" y="2933" width="6.5" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="19.27" y="2943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.11%)</title><rect x="137.3" y="4933" width="1.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="140.28" y="4943.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.8" y="1445" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="65.79" y="1455.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.6" y="165" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="67.62" y="175.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpIntrinsicWithConstant(llvm::ICmpIns (1 samples, 0.02%)</title><rect x="497.4" y="5589" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="500.42" y="5599.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="362.0" y="5301" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="365.04" y="5311.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="455.9" y="5621" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="458.86" y="5631.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="64.6" y="101" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="67.62" y="111.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="376.9" y="5333" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="379.94" y="5343.5" ></text>
</g>
<g >
<title>`getAllocationData(llvm::Value const*, AllocType, llvm::TargetLi (2 samples, 0.04%)</title><rect x="660.8" y="5493" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="663.76" y="5503.5" ></text>
</g>
<g >
<title>`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="389.0" y="5269" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="391.96" y="5279.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ModuleBitcodeWriter::writeDILocalVariabl (1 samples, 0.02%)</title><rect x="723.2" y="5637" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="726.23" y="5647.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="64.1" y="1973" width="1.0" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="67.10" y="1983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4485" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="138.45" y="4495.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="3077" width="1.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="60.57" y="3087.5" ></text>
</g>
<g >
<title>`core::cl__make_hash_table(gctools::smart_ptr&lt;core::T_O&gt;, gctool (1 samples, 0.02%)</title><rect x="115.8" y="5589" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="118.85" y="5599.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::find_imp(void const*) const (1 samples, 0.02%)</title><rect x="434.7" y="5525" width="0.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="437.70" y="5535.5" ></text>
</g>
<g >
<title>`OF-CLASS-P^CORE^FN^^ (1 samples, 0.02%)</title><rect x="19.1" y="1893" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="22.15" y="1903.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;std::__1::__tree_iterator&lt;std::__1::__value_type (1 samples, 0.02%)</title><rect x="593.1" y="5637" width="0.2" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="596.07" y="5647.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (4 samples, 0.09%)</title><rect x="263.0" y="5573" width="1.0" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="265.99" y="5583.5" ></text>
</g>
<g >
<title>`tiny_free_list_remove_ptr (4 samples, 0.09%)</title><rect x="717.7" y="5573" width="1.1" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="720.74" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="126.8" y="5397" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="129.82" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2133" width="1.8" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="60.57" y="2143.5" ></text>
</g>
<g >
<title>`llvm::ReplaceableMetadataImpl::getOrCreate(llvm::Metadata&amp;) (1 samples, 0.02%)</title><rect x="514.7" y="5605" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="517.67" y="5615.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="60.2" y="2421" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="63.18" y="2431.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="24.4" y="3829" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="27.37" y="3839.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::track(void*, llvm::Metadata&amp;, llvm::Poi (2 samples, 0.04%)</title><rect x="480.7" y="5605" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="483.69" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="78.2" y="4565" width="2.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="81.21" y="4575.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="63.3" y="2597" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="66.32" y="2607.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4485" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="135.31" y="4495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="129.2" y="3573" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="132.18" y="3583.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="73.8" y="4421" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="76.77" y="4431.5" ></text>
</g>
<g >
<title>`core::Lisp_O::findPackage_no_lock(std::__1::basic_string&lt;char,  (1 samples, 0.02%)</title><rect x="15.7" y="3333" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="18.75" y="3343.5" ></text>
</g>
<g >
<title>`AST-&gt;HIR^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="124.5" y="5509" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="127.47" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (94 samples, 2.08%)</title><rect x="152.2" y="5493" width="24.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="155.17" y="5503.5" >`..</text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="355.0" y="5253" width="1.0" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="357.98" y="5263.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoCache::isOverdefined(llvm:: (1 samples, 0.02%)</title><rect x="434.7" y="5557" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="437.70" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (8 samples, 0.18%)</title><rect x="174.4" y="5445" width="2.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="177.39" y="5455.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (3 samples, 0.07%)</title><rect x="75.3" y="3637" width="0.8" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="78.34" y="3647.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.02%)</title><rect x="463.7" y="5541" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="466.71" y="5551.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="139.9" y="5045" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="142.89" y="5055.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::sm (1 samples, 0.02%)</title><rect x="15.5" y="3317" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="18.49" y="3327.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.07%)</title><rect x="71.4" y="4005" width="0.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="74.42" y="4015.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="1701" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="20.58" y="1711.5" ></text>
</g>
<g >
<title>`FIND-BUILT-IN-TAG^CORE^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2245" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="71.28" y="2255.5" ></text>
</g>
<g >
<title>`COMPILE-RANGES^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.2" y="5413" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="738.25" y="5423.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="612.7" y="5509" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="615.68" y="5519.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolution::~ScalarEvolution() (1 samples, 0.02%)</title><rect x="535.1" y="5637" width="0.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="538.05" y="5647.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(l (8 samples, 0.18%)</title><rect x="565.1" y="5493" width="2.1" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="568.11" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="133.4" y="3909" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="136.36" y="3919.5" ></text>
</g>
<g >
<title>`GC_alloc_large (1 samples, 0.02%)</title><rect x="205.8" y="5461" width="0.2" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="208.75" y="5471.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="79.8" y="3541" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="82.78" y="3551.5" ></text>
</g>
<g >
<title>`llvmo::Value_O::create(llvm::Value*) (1 samples, 0.02%)</title><rect x="322.8" y="5173" width="0.3" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="325.84" y="5183.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="61.7" y="3013" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="64.75" y="3023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (85 samples, 1.88%)</title><rect x="152.2" y="5445" width="22.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="155.17" y="5455.5" >`..</text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="693" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="68.93" y="703.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="58.3" y="885" width="0.3" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="61.35" y="895.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (13 samples, 0.29%)</title><rect x="54.2" y="2373" width="3.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="57.17" y="2383.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="22.8" y="3317" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="25.81" y="3327.5" ></text>
</g>
<g >
<title>`llvm::GVN::fillImplicitControlFlowInfo(llvm::BasicBlock*) (2 samples, 0.04%)</title><rect x="538.2" y="5621" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="541.19" y="5631.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="366.0" y="5333" width="0.2" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="368.96" y="5343.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="171.0" y="4901" width="0.3" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="173.99" y="4911.5" ></text>
</g>
<g >
<title>`UNDEF-T-PTR^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="390.3" y="5413" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="393.27" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="613" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="61.35" y="623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4757" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="140.28" y="4767.5" ></text>
</g>
<g >
<title>`llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::initializeRPOT( (2 samples, 0.04%)</title><rect x="601.7" y="5621" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="604.70" y="5631.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="138.8" y="3957" width="0.3" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="141.85" y="3967.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (2 samples, 0.04%)</title><rect x="589.9" y="5669" width="0.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="592.94" y="5679.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::StoreInst_O&gt; gctools::GCObjectAppropr (1 samples, 0.02%)</title><rect x="356.0" y="5189" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="359.03" y="5199.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="528.5" y="5525" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="531.52" y="5535.5" ></text>
</g>
<g >
<title>`wrapped_clos__classp_T_sp (1 samples, 0.02%)</title><rect x="49.2" y="4997" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="52.20" y="5007.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (11 samples, 0.24%)</title><rect x="233.5" y="5589" width="2.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="236.46" y="5599.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (6 samples, 0.13%)</title><rect x="230.3" y="5397" width="1.6" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="233.32" y="5407.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (3 samples, 0.07%)</title><rect x="234.5" y="5333" width="0.8" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="237.50" y="5343.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="133.4" y="3845" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="136.36" y="3855.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="78.7" y="3749" width="0.8" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="81.74" y="3759.5" ></text>
</g>
<g >
<title>`VARIABLE-IGNORE^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="73.0" y="4693" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="75.99" y="4703.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1733" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="24.50" y="1743.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="789" width="0.3" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="65.53" y="799.5" ></text>
</g>
<g >
<title>`llvm::APInt::operator*(llvm::APInt const&amp;) const (1 samples, 0.02%)</title><rect x="551.5" y="5317" width="0.3" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="554.52" y="5327.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2821" width="0.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="63.18" y="2831.5" ></text>
</g>
<g >
<title>`core::core__ltvc_write_size_t(gctools::smart_ptr&lt;core::T_O&gt;, gc (1 samples, 0.02%)</title><rect x="425.3" y="5685" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="428.29" y="5695.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="345.6" y="5189" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="348.57" y="5199.5" ></text>
</g>
<g >
<title>`GC_mark_from (2 samples, 0.04%)</title><rect x="210.7" y="5333" width="0.5" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="213.72" y="5343.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="149.0" y="4885" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="152.04" y="4895.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (3 samples, 0.07%)</title><rect x="299.6" y="5237" width="0.8" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="302.58" y="5247.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.02%)</title><rect x="362.3" y="5317" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="365.30" y="5327.5" ></text>
</g>
<g >
<title>`core::cl__acons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.02%)</title><rect x="51.0" y="2357" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="54.03" y="2367.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (88 samples, 1.95%)</title><rect x="49.5" y="4181" width="23.0" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="52.46" y="4191.5" >`..</text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.02%)</title><rect x="572.7" y="5493" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="575.69" y="5503.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5349" width="0.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="736.42" y="5359.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1173" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="65.01" y="1183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4837" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="142.11" y="4847.5" ></text>
</g>
<g >
<title>`getAllocationData(llvm::Value const*, AllocType, llvm::TargetLi (1 samples, 0.02%)</title><rect x="560.1" y="5445" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="563.14" y="5455.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="330.7" y="4981" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="333.68" y="4991.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::ConstantInt_O&gt; gctools::GCObjectAppro (1 samples, 0.02%)</title><rect x="403.1" y="5397" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="406.07" y="5407.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="885" width="1.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="59.52" y="895.5" ></text>
</g>
<g >
<title>`SUCCESSORS^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="183.8" y="5605" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="186.80" y="5615.5" ></text>
</g>
<g >
<title>`GC_mark_from (1 samples, 0.02%)</title><rect x="160.8" y="4757" width="0.3" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="163.80" y="4767.5" ></text>
</g>
<g >
<title>0x10d596094 (13 samples, 0.29%)</title><rect x="54.2" y="2549" width="3.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="57.17" y="2559.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="17.3" y="2069" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="20.32" y="2079.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="61.2" y="2549" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="64.22" y="2559.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="466.3" y="5573" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="469.32" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (10 samples, 0.22%)</title><rect x="65.4" y="3173" width="2.6" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="68.41" y="3183.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="2949" width="2.6" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="68.41" y="2959.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.9" y="3109" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="73.89" y="3119.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::GVN::Expression, u (1 samples, 0.02%)</title><rect x="578.2" y="5557" width="0.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="581.18" y="5567.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="19.7" y="1989" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="22.67" y="1999.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="342.7" y="5189" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="345.70" y="5199.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (4 samples, 0.09%)</title><rect x="234.5" y="5397" width="1.0" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="237.50" y="5407.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (3 samples, 0.07%)</title><rect x="182.8" y="5573" width="0.7" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="185.75" y="5583.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="44.2" y="4517" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="47.24" y="4527.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpWithConstant(llvm::ICmpInst&amp;) (1 samples, 0.02%)</title><rect x="482.0" y="5621" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="485.00" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="4245" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="100.29" y="4255.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="410.9" y="5349" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="413.91" y="5359.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="104.3" y="5573" width="1.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="107.35" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="126.8" y="5349" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="129.82" y="5359.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (5 samples, 0.11%)</title><rect x="422.9" y="5653" width="1.3" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="425.93" y="5663.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="692.6" y="5637" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="695.65" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="22.0" y="2709" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="25.02" y="2719.5" ></text>
</g>
<g >
<title>`vsprintf_l (1 samples, 0.02%)</title><rect x="124.5" y="5365" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="127.47" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="2693" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="64.22" y="2703.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="71.4" y="3909" width="0.8" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="74.42" y="3919.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="455.3" y="5573" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="458.34" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="1461" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="68.93" y="1471.5" ></text>
</g>
<g >
<title>`core::ext__class_unboundp(gctools::smart_ptr&lt;core::ClassHolder_ (1 samples, 0.02%)</title><rect x="144.1" y="5429" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="147.07" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (10 samples, 0.22%)</title><rect x="65.4" y="2821" width="2.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="68.41" y="2831.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2181" width="3.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="57.17" y="2191.5" ></text>
</g>
<g >
<title>`GC_allocobj (4 samples, 0.09%)</title><rect x="75.3" y="3749" width="1.1" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="78.34" y="3759.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (505 samples, 11.18%)</title><rect x="286.0" y="5541" width="132.0" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="288.99" y="5551.5" >`DO-DBG-LEXICAL-..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="16.3" y="2533" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="19.27" y="2543.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1413" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="65.27" y="1423.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1717" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="65.01" y="1727.5" ></text>
</g>
<g >
<title>`llvm::ReassociatePass::OptimizeInst(llvm::Instruction*) (1 samples, 0.02%)</title><rect x="449.9" y="5637" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="452.85" y="5647.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (3 samples, 0.07%)</title><rect x="153.0" y="4965" width="0.7" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="155.96" y="4975.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'RETURN-FROM) T T (18 samples, 0.40%)</title><rect x="17.3" y="2341" width="4.7" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="20.32" y="2351.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCastsAndBarriers() const (2 samples, 0.04%)</title><rect x="558.3" y="5461" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="561.31" y="5471.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (2 samples, 0.04%)</title><rect x="132.6" y="4837" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="135.57" y="4847.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="339.3" y="5173" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="342.30" y="5183.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (10 samples, 0.22%)</title><rect x="65.4" y="3029" width="2.6" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="68.41" y="3039.5" ></text>
</g>
<g >
<title>`llvm::Function::Function(llvm::FunctionType*, llvm::GlobalValue (3 samples, 0.07%)</title><rect x="375.4" y="5365" width="0.8" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="378.37" y="5375.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (1 samples, 0.02%)</title><rect x="66.7" y="1461" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="69.71" y="1471.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="329.4" y="5157" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="332.37" y="5167.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="61.7" y="1845" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="64.75" y="1855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4133" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="139.76" y="4143.5" ></text>
</g>
<g >
<title>`llvm::InstCombineWorklist::AddInitialGroup(llvm::ArrayRef&lt;llvm: (3 samples, 0.07%)</title><rect x="471.3" y="5637" width="0.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="474.28" y="5647.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (3 samples, 0.07%)</title><rect x="353.4" y="5269" width="0.8" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="356.42" y="5279.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.02%)</title><rect x="72.2" y="4149" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="75.20" y="4159.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.02%)</title><rect x="491.9" y="5573" width="0.3" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="494.93" y="5583.5" ></text>
</g>
<g >
<title>`GC_set_fl_marks (1 samples, 0.02%)</title><rect x="788.3" y="5573" width="0.3" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="791.30" y="5583.5" ></text>
</g>
<g >
<title>`CONS^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="315.0" y="5349" width="0.3" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="318.00" y="5359.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="320.5" y="5205" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="323.49" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (1 samples, 0.02%)</title><rect x="66.2" y="1701" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="69.19" y="1711.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="54.2" y="1797" width="1.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="57.17" y="1807.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (22 samples, 0.49%)</title><rect x="261.7" y="5589" width="5.7" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="264.68" y="5599.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (7 samples, 0.16%)</title><rect x="551.3" y="5349" width="1.8" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="554.26" y="5359.5" ></text>
</g>
<g >
<title>`llvm::SymbolTableListTraits&lt;llvm::BasicBlock&gt;::removeNodeFromLi (3 samples, 0.07%)</title><rect x="719.6" y="5637" width="0.8" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="722.57" y="5647.5" ></text>
</g>
<g >
<title>`SKIP-P^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.0" y="5365" width="0.2" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="737.99" y="5375.5" ></text>
</g>
<g >
<title>`wrapped_cl__logandc2_Integer_spInteger_sp (1 samples, 0.02%)</title><rect x="68.3" y="2197" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="71.28" y="2207.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="57.6" y="2549" width="1.8" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="60.57" y="2559.5" ></text>
</g>
<g >
<title>`POSITION-IF-NOT^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="51.0" y="2581" width="0.6" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="54.03" y="2591.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;std::__1::unique_ptr&lt;llvm::AAResults:: (1 samples, 0.02%)</title><rect x="600.4" y="5621" width="0.3" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="603.39" y="5631.5" ></text>
</g>
<g >
<title>`POSITION^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="67.8" y="1333" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="70.76" y="1343.5" ></text>
</g>
<g >
<title>`GC_allocobj (2 samples, 0.04%)</title><rect x="66.5" y="1541" width="0.5" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="69.45" y="1551.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::GlobalDCELegacyPass::runOnModule(llvm::M (3 samples, 0.07%)</title><rect x="587.8" y="5701" width="0.8" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="590.85" y="5711.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::BasicBlock*, llvm::SmallPtrSet&lt;llvm::Ba (2 samples, 0.04%)</title><rect x="685.9" y="5589" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="688.85" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'TAGBODY) T T T)) (4 samples, 0.09%)</title><rect x="55.5" y="229" width="1.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="58.48" y="239.5" ></text>
</g>
<g >
<title>`llvm::DILocalVariable::getImpl(llvm::LLVMContext&amp;, llvm::Metada (4 samples, 0.09%)</title><rect x="359.2" y="5205" width="1.0" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="362.17" y="5215.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="19.7" y="1845" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="22.67" y="1855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4165" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="136.36" y="4175.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2725" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="65.01" y="2735.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="412.0" y="5301" width="0.2" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="414.96" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="135.2" y="4805" width="1.0" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="138.19" y="4815.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'MACROLET) T T T) (4 samples, 0.09%)</title><rect x="55.5" y="85" width="1.0" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="58.48" y="95.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (2 samples, 0.04%)</title><rect x="373.8" y="5285" width="0.5" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="376.80" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="23.6" y="4101" width="1.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="26.59" y="4111.5" ></text>
</g>
<g >
<title>`llvmo::Type_O::getPointerTo(int) (1 samples, 0.02%)</title><rect x="344.8" y="5141" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="347.79" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="50.0" y="3429" width="1.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="52.99" y="3439.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.07%)</title><rect x="160.5" y="4981" width="0.8" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="163.54" y="4991.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::create(unsigned int, gctools::smart_ptr&lt;co (2 samples, 0.04%)</title><rect x="66.5" y="1653" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="69.45" y="1663.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1189" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="20.58" y="1199.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (2 samples, 0.04%)</title><rect x="573.5" y="5525" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="576.47" y="5535.5" ></text>
</g>
<g >
<title>`ImageLoaderMachOCompressed::findShallowExportedSymbol(char cons (1 samples, 0.02%)</title><rect x="788.8" y="5733" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="791.83" y="5743.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="82.1" y="4501" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="85.13" y="4511.5" ></text>
</g>
<g >
<title>`std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp; st (1 samples, 0.02%)</title><rect x="376.4" y="5317" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="379.41" y="5327.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (6 samples, 0.13%)</title><rect x="57.8" y="1349" width="1.6" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="60.83" y="1359.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.5" y="1157" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="65.53" y="1167.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (26 samples, 0.58%)</title><rect x="16.3" y="3413" width="6.8" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="19.27" y="3423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="3845" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="135.31" y="3855.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2741" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="65.27" y="2751.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (82 samples, 1.82%)</title><rect x="14.2" y="4965" width="21.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="17.18" y="4975.5" >`..</text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (3 samples, 0.07%)</title><rect x="351.8" y="5173" width="0.8" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="354.85" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4517" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="141.32" y="4527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="133.1" y="4853" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="136.10" y="4863.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="14.7" y="2565" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="17.70" y="2575.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="633.8" y="5541" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="636.84" y="5551.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ASSIGNMENT-INSTRUC (2 samples, 0.04%)</title><rect x="332.8" y="5125" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="335.77" y="5135.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="68.0" y="2981" width="1.8" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="71.02" y="2991.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.20%)</title><rect x="78.2" y="4549" width="2.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="81.21" y="4559.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="60.4" y="2981" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="63.44" y="2991.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="70.1" y="2725" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="73.11" y="2735.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1861" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="20.58" y="1871.5" ></text>
</g>
<g >
<title>`llvm::Function::setPersonalityFn(llvm::Constant*) (1 samples, 0.02%)</title><rect x="367.0" y="5349" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="370.01" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="14.2" y="3685" width="1.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="17.18" y="3695.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignmentInfo(llvm::AlignTypeEnum, unsigne (1 samples, 0.02%)</title><rect x="647.4" y="5605" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="650.44" y="5615.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::GVN::Expression, std::__1::allocato (1 samples, 0.02%)</title><rect x="542.1" y="5557" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="545.11" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4389" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="138.45" y="4399.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (4 samples, 0.09%)</title><rect x="661.3" y="5493" width="1.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="664.29" y="5503.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2405" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="65.01" y="2415.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="533.0" y="5621" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="535.96" y="5631.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.02%)</title><rect x="409.1" y="5461" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="412.08" y="5471.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (3 samples, 0.07%)</title><rect x="268.5" y="5493" width="0.8" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="271.48" y="5503.5" ></text>
</g>
<g >
<title>`GC_mark_some (2 samples, 0.04%)</title><rect x="423.7" y="5557" width="0.5" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="426.72" y="5567.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="24.6" y="4005" width="0.6" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="27.64" y="4015.5" ></text>
</g>
<g >
<title>`llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm: (1 samples, 0.02%)</title><rect x="407.5" y="5349" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="410.51" y="5359.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="341.7" y="5141" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="344.65" y="5151.5" ></text>
</g>
<g >
<title>`wrapped_core__sequence_start_end_T_spFixnum_spT_sp (1 samples, 0.02%)</title><rect x="74.6" y="3653" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="77.55" y="3663.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.04%)</title><rect x="202.9" y="5493" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="205.88" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4245" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="132.70" y="4255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4341" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="139.23" y="4351.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="65.9" y="805" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="68.93" y="815.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (7 samples, 0.16%)</title><rect x="128.7" y="4709" width="1.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="131.65" y="4719.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (1 samples, 0.02%)</title><rect x="62.0" y="2165" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="65.01" y="2175.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldTerminator(llvm::BasicBlock*, bool, llvm::Tar (1 samples, 0.02%)</title><rect x="591.5" y="5653" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="594.51" y="5663.5" ></text>
</g>
<g >
<title>`MAKE-TEMPS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="154.5" y="5237" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="157.53" y="5247.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="161.6" y="5045" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="164.58" y="5055.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::create(unsigned int, gctools::smart_ptr&lt;co (1 samples, 0.02%)</title><rect x="115.8" y="5573" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="118.85" y="5583.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="675.1" y="5557" width="0.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="678.14" y="5567.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::JumpThreading::runOnFunction(llvm::Funct (10 samples, 0.22%)</title><rect x="446.5" y="5669" width="2.6" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="449.46" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="65.9" y="1701" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="68.93" y="1711.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="645" width="1.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="57.17" y="655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4581" width="0.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="138.71" y="4591.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="528.3" y="5365" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="531.26" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="53.9" y="3029" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="56.91" y="3039.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="105.9" y="5541" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="108.92" y="5551.5" ></text>
</g>
<g >
<title>`STANDARD-INSTANCE-ACCESS^CLOS^SETF^^ (1 samples, 0.02%)</title><rect x="31.7" y="4325" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="34.69" y="4335.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="3109" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="73.11" y="3119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4629" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="142.11" y="4639.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="320.0" y="5269" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="322.96" y="5279.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (1 samples, 0.02%)</title><rect x="445.1" y="5589" width="0.3" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="448.15" y="5599.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4277" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="736.42" y="4287.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="107.0" y="5557" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="109.96" y="5567.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="314.5" y="5333" width="0.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="317.47" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="5237" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="100.29" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4629" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="141.32" y="4639.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2485" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="64.75" y="2495.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="252.3" y="5397" width="0.2" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="255.27" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="94.9" y="4485" width="0.6" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="97.94" y="4495.5" ></text>
</g>
<g >
<title>`unsigned int llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorT (1 samples, 0.02%)</title><rect x="590.2" y="5653" width="0.3" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="593.20" y="5663.5" ></text>
</g>
<g >
<title>`GC_remove_protection (1 samples, 0.02%)</title><rect x="80.6" y="4533" width="0.2" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="83.56" y="4543.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="1797" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="65.01" y="1807.5" ></text>
</g>
<g >
<title>`wrapped_getInt8Ty_llvm__LLVMContext_ (4 samples, 0.09%)</title><rect x="374.3" y="5397" width="1.1" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="377.32" y="5407.5" ></text>
</g>
<g >
<title>`llvm::GVN::PerformLoadPRE(llvm::LoadInst*, llvm::SmallVector&lt;ll (4 samples, 0.09%)</title><rect x="562.2" y="5573" width="1.1" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="565.23" y="5583.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="24.9" y="3493" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="27.90" y="3503.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (2 samples, 0.04%)</title><rect x="70.1" y="3029" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="73.11" y="3039.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="67.2" y="1269" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="70.24" y="1279.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="70.6" y="2037" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="73.63" y="2047.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="661" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="68.93" y="671.5" ></text>
</g>
<g >
<title>`GC_mark_from (1 samples, 0.02%)</title><rect x="252.5" y="5317" width="0.3" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="255.53" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="147.7" y="5509" width="0.6" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="150.73" y="5519.5" ></text>
</g>
<g >
<title>`IRC-ICMP-UGT^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="337.7" y="5237" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="340.73" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4245" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="138.45" y="4255.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2917" width="0.2" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="63.18" y="2927.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (25 samples, 0.55%)</title><rect x="16.3" y="3221" width="6.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="19.27" y="3231.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="423.5" y="5573" width="0.2" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="426.46" y="5583.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="507.4" y="5493" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="510.35" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4181" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="136.36" y="4191.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="531.1" y="5541" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="534.13" y="5551.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (2 samples, 0.04%)</title><rect x="268.7" y="5381" width="0.6" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="271.74" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (7 samples, 0.16%)</title><rect x="57.6" y="1797" width="1.8" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="60.57" y="1807.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="33.8" y="4165" width="0.2" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="36.78" y="4175.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::RemoveKey(llvm::StringRef) (1 samples, 0.02%)</title><rect x="719.6" y="5605" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="722.57" y="5615.5" ></text>
</g>
<g >
<title>`FORCE-DISPATCHER^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.2" y="5541" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="738.25" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="1541" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="65.79" y="1551.5" ></text>
</g>
<g >
<title>`VALID-KEYWORDS-FROM-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="190.6" y="5461" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="193.59" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (16 samples, 0.35%)</title><rect x="128.4" y="4901" width="4.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="131.39" y="4911.5" ></text>
</g>
<g >
<title>0x10d596094 (3 samples, 0.07%)</title><rect x="71.4" y="3973" width="0.8" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="74.42" y="3983.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (4 samples, 0.09%)</title><rect x="549.7" y="5365" width="1.0" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="552.69" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((RETURN-FROM-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5061" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="130.35" y="5071.5" ></text>
</g>
<g >
<title>`llvm::CallInst::init(llvm::FunctionType*, llvm::Value*, llvm::A (1 samples, 0.02%)</title><rect x="410.7" y="5285" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="413.65" y="5295.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="195.3" y="5573" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="198.30" y="5583.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="61.2" y="2005" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="64.22" y="2015.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4037" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="137.93" y="4047.5" ></text>
</g>
<g >
<title>`gctools::startupGarbageCollectorAndSystem(int (*)(int, char**,  (2,981 samples, 66.02%)</title><rect x="10.0" y="6373" width="779.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="13.00" y="6383.5" >`gctools::startupGarbageCollectorAndSystem(int (*)(int, char**, </text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="1957" width="1.8" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="60.57" y="1967.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.04%)</title><rect x="250.7" y="5541" width="0.5" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="253.70" y="5551.5" ></text>
</g>
<g >
<title>`core::core__make_vector(gctools::smart_ptr&lt;core::T_O&gt;, unsigned (1 samples, 0.02%)</title><rect x="172.8" y="5221" width="0.3" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="175.82" y="5231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4405" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="138.45" y="4415.5" ></text>
</g>
<g >
<title>`llvm::MDNode::classof(llvm::Metadata const*) (1 samples, 0.02%)</title><rect x="514.7" y="5589" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="517.67" y="5599.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="121.1" y="5573" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="124.07" y="5583.5" ></text>
</g>
<g >
<title>`llvm::getConstantDataArrayInfo(llvm::Value const*, llvm::Consta (1 samples, 0.02%)</title><rect x="555.7" y="5349" width="0.3" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="558.70" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:BEFORE) (T T CLASP-64BIT))^METH (1 samples, 0.02%)</title><rect x="63.6" y="2357" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="66.58" y="2367.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((UNBOX-INSTRUCTION  (4 samples, 0.09%)</title><rect x="355.0" y="5301" width="1.0" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="357.98" y="5311.5" ></text>
</g>
<g >
<title>`ALLOCATE-DYNAMIC-LOCATIONS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (2 samples, 0.04%)</title><rect x="240.3" y="5589" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="243.25" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="177.8" y="5301" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="180.79" y="5311.5" ></text>
</g>
<g >
<title>`COMPILER-TIMER-ELAPSED^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="285.2" y="5637" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="288.20" y="5647.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="464.5" y="5605" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="467.49" y="5615.5" ></text>
</g>
<g >
<title>`gctools::gctools__garbage_collect() (188 samples, 4.16%)</title><rect x="739.7" y="5717" width="49.1" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="742.69" y="5727.5" >`gct..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4453" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="132.96" y="4463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="171.5" y="5269" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="174.51" y="5279.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::Instruction*, unsigned int&gt;* l (1 samples, 0.02%)</title><rect x="471.8" y="5605" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="474.81" y="5615.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="96.8" y="5093" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="99.77" y="5103.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.02%)</title><rect x="22.5" y="2773" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="25.54" y="2783.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&amp;,  (1 samples, 0.02%)</title><rect x="638.3" y="5557" width="0.2" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="641.29" y="5567.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceSet(unsigned long, gctools::smart_ptr (2 samples, 0.04%)</title><rect x="249.7" y="5573" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="252.66" y="5583.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="142.8" y="4949" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="145.77" y="4959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4133" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="137.14" y="4143.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="67.5" y="1461" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="70.50" y="1471.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (6 samples, 0.13%)</title><rect x="128.7" y="4645" width="1.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="131.65" y="4655.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1205" width="1.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="57.17" y="1215.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="21.5" y="1621" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="24.50" y="1631.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (7 samples, 0.16%)</title><rect x="66.2" y="2549" width="1.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="69.19" y="2559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="127.1" y="5413" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="130.09" y="5423.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5397" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="123.55" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="629" width="1.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="57.17" y="639.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitCallSite(llvm::CallSite) (1 samples, 0.02%)</title><rect x="490.1" y="5621" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="493.10" y="5631.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (3 samples, 0.07%)</title><rect x="264.8" y="5573" width="0.8" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="267.82" y="5583.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="330.7" y="5045" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="333.68" y="5055.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3397" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="100.29" y="3407.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="124.5" y="5413" width="0.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="127.47" y="5423.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (2 samples, 0.04%)</title><rect x="15.5" y="3573" width="0.5" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="18.49" y="3583.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (6 samples, 0.13%)</title><rect x="351.8" y="5221" width="1.6" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="354.85" y="5231.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="61.7" y="1701" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="64.75" y="1711.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5189" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="736.42" y="5199.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="241.0" y="5477" width="0.3" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="244.03" y="5487.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (1 samples, 0.02%)</title><rect x="252.5" y="5333" width="0.3" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="255.53" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (10 samples, 0.22%)</title><rect x="78.0" y="4629" width="2.6" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="80.95" y="4639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="3797" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="139.23" y="3807.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (2 samples, 0.04%)</title><rect x="24.6" y="3829" width="0.6" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="27.64" y="3839.5" ></text>
</g>
<g >
<title>0x10d596094 (70 samples, 1.55%)</title><rect x="52.9" y="3477" width="18.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="55.86" y="3487.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="28.3" y="4309" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="31.29" y="4319.5" ></text>
</g>
<g >
<title>`SAVE-MULTIPLE-VALUE-0^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="332.0" y="5093" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="334.98" y="5103.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="1637" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="60.57" y="1647.5" ></text>
</g>
<g >
<title>`core::cl__append(gctools::smart_ptr&lt;core::Vaslist&gt;) (1 samples, 0.02%)</title><rect x="236.3" y="5541" width="0.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="239.33" y="5551.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const (1 samples, 0.02%)</title><rect x="451.4" y="5605" width="0.3" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="454.42" y="5615.5" ></text>
</g>
<g >
<title>0x10d596094 (326 samples, 7.22%)</title><rect x="12.4" y="5525" width="85.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="15.35" y="5535.5" >0x10d596094</text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="174.4" y="5285" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="177.39" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="62.8" y="1333" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="65.79" y="1343.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET*) T T T))^ME (5 samples, 0.11%)</title><rect x="63.8" y="2021" width="1.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="66.84" y="2031.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.02%)</title><rect x="786.2" y="5605" width="0.3" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="789.21" y="5615.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="738.9" y="5685" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="741.91" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (8 samples, 0.18%)</title><rect x="148.5" y="5109" width="2.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="151.52" y="5119.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="403.3" y="5397" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="406.33" y="5407.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="571.9" y="5493" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="574.90" y="5503.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PointerIntPair&lt;llvm::Va (1 samples, 0.02%)</title><rect x="709.6" y="5653" width="0.3" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="712.64" y="5663.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="318.1" y="5317" width="1.1" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="321.13" y="5327.5" ></text>
</g>
<g >
<title>`llvm::TrackingMDRef::~TrackingMDRef() (1 samples, 0.02%)</title><rect x="720.4" y="5621" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="723.35" y="5631.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="238.4" y="5381" width="0.3" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="241.42" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (71 samples, 1.57%)</title><rect x="52.9" y="3557" width="18.5" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="55.86" y="3567.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::apint_match::match&lt;llvm::Value const&gt;( (1 samples, 0.02%)</title><rect x="674.9" y="5557" width="0.2" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="677.88" y="5567.5" ></text>
</g>
<g >
<title>`FUNCTION-TYPE^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="51.8" y="3349" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="54.82" y="3359.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (7 samples, 0.16%)</title><rect x="148.5" y="5077" width="1.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="151.52" y="5087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="135.7" y="4197" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="138.71" y="4207.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="162.1" y="5013" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="165.11" y="5023.5" ></text>
</g>
<g >
<title>`llvm::GVN::iterateOnFunction(llvm::Function&amp;) (151 samples, 3.34%)</title><rect x="537.9" y="5637" width="39.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="540.93" y="5647.5" >`ll..</text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2933" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="65.01" y="2943.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="523.0" y="5397" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="526.03" y="5407.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpUsingKnownBits(llvm::ICmpInst&amp;) (6 samples, 0.13%)</title><rect x="497.9" y="5605" width="1.6" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="500.94" y="5615.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="59.7" y="3349" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="62.66" y="3359.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::BasicBlock*&gt;::find(llvm::BasicBlock (1 samples, 0.02%)</title><rect x="582.1" y="5637" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="585.10" y="5647.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="675.1" y="5509" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="678.14" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1589" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="68.93" y="1599.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="422.9" y="5637" width="0.3" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="425.93" y="5647.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (2 samples, 0.04%)</title><rect x="164.5" y="4805" width="0.5" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="167.46" y="4815.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2229" width="3.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="57.17" y="2239.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::AnalysisKey*, std::__1::unique_ptr&lt;llvm::d (1 samples, 0.02%)</title><rect x="598.6" y="5637" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="601.56" y="5647.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (1 samples, 0.02%)</title><rect x="419.3" y="5557" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="422.28" y="5567.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="390.0" y="5349" width="0.3" height="15.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="393.00" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4405" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="139.23" y="4415.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="549" width="1.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="57.17" y="559.5" ></text>
</g>
<g >
<title>`llvm::InstVisitor&lt;(anonymous namespace)::SCCPSolver, void&gt;::vis (2 samples, 0.04%)</title><rect x="714.6" y="5669" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="717.60" y="5679.5" ></text>
</g>
<g >
<title>`wrapped_cl__nreverse_T_sp (1 samples, 0.02%)</title><rect x="110.6" y="5589" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="113.62" y="5599.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="71.4" y="3829" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="74.42" y="3839.5" ></text>
</g>
<g >
<title>`core::Symbol_O::sxhash_equal(core::HashGenerator&amp;, void*) const (1 samples, 0.02%)</title><rect x="77.2" y="4085" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="80.17" y="4095.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="400.5" y="5413" width="0.2" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="403.46" y="5423.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="605.4" y="5525" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="608.36" y="5535.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2933" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="73.63" y="2943.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2405" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="64.22" y="2415.5" ></text>
</g>
<g >
<title>`ADD-ENTRY^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="735.8" y="5429" width="1.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="738.77" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="132.3" y="4853" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="135.31" y="4863.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4437" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="736.42" y="4447.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="821" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="68.93" y="831.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::pointsToConstantMemory(llvm::MemoryLocatio (2 samples, 0.04%)</title><rect x="527.2" y="5541" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="530.21" y="5551.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldGetElementPtr(llvm::Type*, llvm::Constant*, b (1 samples, 0.02%)</title><rect x="548.1" y="5317" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="551.12" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="157.9" y="5397" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="160.92" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="1061" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="65.01" y="1071.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="720.6" y="5589" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="723.61" y="5599.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (2 samples, 0.04%)</title><rect x="423.7" y="5573" width="0.5" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="426.72" y="5583.5" ></text>
</g>
<g >
<title>`llvm::GVN::ValueTable::phiTranslateImpl(llvm::BasicBlock const* (1 samples, 0.02%)</title><rect x="578.7" y="5557" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="581.70" y="5567.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_O, gctools::smar (1 samples, 0.02%)</title><rect x="80.8" y="4597" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="83.83" y="4607.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="3237" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="62.40" y="3247.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="453.0" y="5653" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="455.99" y="5663.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="241.0" y="5461" width="0.3" height="15.0" fill="rgb(226,87,87)" rx="2" ry="2" />
<text  x="244.03" y="5471.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (3 samples, 0.07%)</title><rect x="160.5" y="4869" width="0.8" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="163.54" y="4879.5" ></text>
</g>
<g >
<title>`IRC-FDEFINITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="325.7" y="5301" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="328.71" y="5311.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.02%)</title><rect x="555.7" y="5381" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="558.70" y="5391.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="68.0" y="2469" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="71.02" y="2479.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="154.3" y="5205" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="157.27" y="5215.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="145.1" y="5013" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="148.12" y="5023.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::BasicBlock&gt;, llvm::S (10 samples, 0.22%)</title><rect x="717.7" y="5653" width="2.7" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="720.74" y="5663.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="613" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="68.93" y="623.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="14.2" y="3269" width="1.0" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="17.18" y="3279.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5541" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="713.94" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (26 samples, 0.58%)</title><rect x="16.3" y="3557" width="6.8" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="19.27" y="3567.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.02%)</title><rect x="438.1" y="5621" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="441.09" y="5631.5" ></text>
</g>
<g >
<title>`OPTIMIZED-TYPEQ-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="162.1" y="5061" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="165.11" y="5071.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="2293" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="65.79" y="2303.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.1" y="1109" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="67.10" y="1119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4565" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="136.36" y="4575.5" ></text>
</g>
<g >
<title>`SPECIALIZE^CLEAVIR-HIR-TO-MIR^((READ-CELL-INSTRUCTION CLASP T T (6 samples, 0.13%)</title><rect x="191.6" y="5589" width="1.6" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="194.64" y="5599.5" ></text>
</g>
<g >
<title>`llvm::MemoryLocation::getOrNone(llvm::Instruction const*) (1 samples, 0.02%)</title><rect x="525.6" y="5589" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="528.65" y="5599.5" ></text>
</g>
<g >
<title>`SimplifyFunction(llvm::Function*, llvm::CallGraph&amp;) (2 samples, 0.04%)</title><rect x="427.9" y="5669" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="430.90" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (16 samples, 0.35%)</title><rect x="128.4" y="4949" width="4.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="131.39" y="4959.5" ></text>
</g>
<g >
<title>`MAKE-DATUM-ALLOCA^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="354.2" y="5237" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="357.20" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4037" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="137.14" y="4047.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="3285" width="0.3" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="73.63" y="3295.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="320.7" y="5173" width="0.3" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="323.75" y="5183.5" ></text>
</g>
<g >
<title>`COERCE-TO-CONDITION^CORE^FN^^ (5 samples, 0.11%)</title><rect x="735.8" y="5589" width="1.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="738.77" y="5599.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="524.3" y="5573" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="527.34" y="5583.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="688.2" y="5637" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="691.21" y="5647.5" ></text>
</g>
<g >
<title>`GC_mark_thread (1,533 samples, 33.95%)</title><rect x="789.3" y="6373" width="400.7" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="792.35" y="6383.5" >`GC_mark_thread</text>
</g>
<g >
<title>`PROCESS-KEYS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3765" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="100.29" y="3775.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (1 samples, 0.02%)</title><rect x="421.4" y="5621" width="0.2" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="424.37" y="5631.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_short(char const*, unsigned long, u (1 samples, 0.02%)</title><rect x="548.6" y="5269" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="551.64" y="5279.5" ></text>
</g>
<g >
<title>`llvm::MemorySSA::~MemorySSA() (1 samples, 0.02%)</title><rect x="534.5" y="5621" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="537.53" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="19.7" y="2021" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="22.67" y="2031.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (18 samples, 0.40%)</title><rect x="39.0" y="4469" width="4.7" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="42.01" y="4479.5" ></text>
</g>
<g >
<title>`llvm::iterator_range&lt;llvm::df_iterator&lt;llvm::BasicBlock*, llvm: (1 samples, 0.02%)</title><rect x="580.5" y="5589" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="583.53" y="5599.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="23.9" y="3589" width="0.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="26.85" y="3599.5" ></text>
</g>
<g >
<title>`NAME^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="90.0" y="4485" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="92.97" y="4495.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="330.4" y="5109" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="333.42" y="5119.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="3205" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="64.22" y="3215.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'FUNCTION) T T T) (4 samples, 0.09%)</title><rect x="14.2" y="3189" width="1.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="17.18" y="3199.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignmentInfo(llvm::AlignTypeEnum, unsigne (2 samples, 0.04%)</title><rect x="649.5" y="5589" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="652.53" y="5599.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2853" width="3.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="57.17" y="2863.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="12.4" y="4645" width="1.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="15.35" y="4655.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="429.5" y="5605" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="432.47" y="5615.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="550.2" y="5269" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="553.21" y="5279.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (8 samples, 0.18%)</title><rect x="78.5" y="4149" width="2.1" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="81.47" y="4159.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="288.9" y="5509" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="291.86" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="3877" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="139.23" y="3887.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="2933" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="65.27" y="2943.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="24.6" y="4309" width="1.3" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="27.64" y="4319.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="70.6" y="2421" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="73.63" y="2431.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&amp; (618 samples, 13.69%)</title><rect x="426.1" y="5701" width="161.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="429.07" y="5711.5" >`(anonymous namespac..</text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm:: (18 samples, 0.40%)</title><rect x="658.9" y="5573" width="4.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="661.93" y="5583.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="63.6" y="2709" width="1.8" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="66.58" y="2719.5" ></text>
</g>
<g >
<title>`SLOT-DEFINITION-NAME^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="108.5" y="5589" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="111.53" y="5599.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="21.5" y="1653" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="24.50" y="1663.5" ></text>
</g>
<g >
<title>`llvm::Value::getPointerAlignment(llvm::DataLayout const&amp;) const (1 samples, 0.02%)</title><rect x="512.1" y="5509" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="515.06" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="128.7" y="4549" width="1.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="131.65" y="4559.5" ></text>
</g>
<g >
<title>`llvm::AliasSet::aliasesPointer(llvm::Value const*, unsigned lon (1 samples, 0.02%)</title><rect x="523.0" y="5541" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="526.03" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="70.6" y="2677" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="73.63" y="2687.5" ></text>
</g>
<g >
<title>`core::frame_check(unsigned long) (1 samples, 0.02%)</title><rect x="72.2" y="4133" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="75.20" y="4143.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (15 samples, 0.33%)</title><rect x="73.5" y="4581" width="3.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="76.51" y="4591.5" ></text>
</g>
<g >
<title>`llvm::Value* SimplifyCall&lt;llvm::Use*&gt;(llvm::ImmutableCallSite,  (1 samples, 0.02%)</title><rect x="444.9" y="5605" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="447.89" y="5615.5" ></text>
</g>
<g >
<title>`NORMALIZE-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="259.1" y="5541" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="262.07" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1397" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="65.27" y="1407.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="68.0" y="2453" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="71.02" y="2463.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_package_T_sp (1 samples, 0.02%)</title><rect x="40.6" y="3957" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="43.58" y="3967.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (2 samples, 0.04%)</title><rect x="72.7" y="4741" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="75.72" y="4751.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="3941" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="131.91" y="3951.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (3 samples, 0.07%)</title><rect x="208.4" y="5397" width="0.7" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="211.37" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="1429" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="20.58" y="1439.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (2 samples, 0.04%)</title><rect x="224.6" y="5493" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="227.57" y="5503.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="355.2" y="5205" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="358.24" y="5215.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2549" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="65.27" y="2559.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="89.2" y="4405" width="0.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="92.19" y="4415.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="123.2" y="5573" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="126.17" y="5583.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (1 samples, 0.02%)</title><rect x="190.3" y="5445" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="193.33" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (5 samples, 0.11%)</title><rect x="54.2" y="1285" width="1.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="57.17" y="1295.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (2 samples, 0.04%)</title><rect x="14.7" y="2677" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="17.70" y="2687.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="79.8" y="3797" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="82.78" y="3807.5" ></text>
</g>
<g >
<title>`computeOverflowForSignedAdd(llvm::Value const*, llvm::Value con (1 samples, 0.02%)</title><rect x="637.2" y="5573" width="0.3" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="640.24" y="5583.5" ></text>
</g>
<g >
<title>`llvm::MetadataAsValue::get(llvm::LLVMContext&amp;, llvm::Metadata*) (1 samples, 0.02%)</title><rect x="360.5" y="5333" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="363.47" y="5343.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="378.2" y="5365" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="381.24" y="5375.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1029" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="65.01" y="1039.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.04%)</title><rect x="372.5" y="5301" width="0.5" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="375.49" y="5311.5" ></text>
</g>
<g >
<title>`llvm::MemorySSAWrapperPass::runOnFunction(llvm::Function&amp;) (23 samples, 0.51%)</title><rect x="525.4" y="5669" width="6.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="528.38" y="5679.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T GLOBAL-FUNCTION-INFO))^METHOD (2 samples, 0.04%)</title><rect x="34.8" y="4549" width="0.6" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="37.83" y="4559.5" ></text>
</g>
<g >
<title>`fgets (1 samples, 0.02%)</title><rect x="732.4" y="5797" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="735.37" y="5807.5" ></text>
</g>
<g >
<title>`GC_mark_from (3 samples, 0.07%)</title><rect x="323.4" y="5013" width="0.7" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="326.36" y="5023.5" ></text>
</g>
<g >
<title>0x10d596094 (6 samples, 0.13%)</title><rect x="63.8" y="2373" width="1.6" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="66.84" y="2383.5" ></text>
</g>
<g >
<title>`llvm::APInt::clearUnusedBits() (1 samples, 0.02%)</title><rect x="669.7" y="5493" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="672.65" y="5503.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT))^ (1 samples, 0.02%)</title><rect x="44.5" y="4549" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="47.50" y="4559.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'RETURN-FROM) T T (2 samples, 0.04%)</title><rect x="23.1" y="3925" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="26.07" y="3935.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::ConstantExpr*, llv (1 samples, 0.02%)</title><rect x="352.1" y="5141" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="355.11" y="5151.5" ></text>
</g>
<g >
<title>`BCLASP-COMPILE*^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="732.9" y="5589" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="735.90" y="5599.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="603.3" y="5557" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="606.27" y="5567.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="79.5" y="3605" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="82.52" y="3615.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (1 samples, 0.02%)</title><rect x="368.6" y="5381" width="0.2" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="371.57" y="5391.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.1" y="2149" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="20.06" y="2159.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="3061" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="65.01" y="3071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4517" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="137.14" y="4527.5" ></text>
</g>
<g >
<title>`llvm::TargetTransformInfo::getTgtMemIntrinsic(llvm::IntrinsicIn (1 samples, 0.02%)</title><rect x="445.4" y="5637" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="448.41" y="5647.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="79.8" y="3445" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="82.78" y="3455.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (25 samples, 0.55%)</title><rect x="16.3" y="3173" width="6.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="19.27" y="3183.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="148.3" y="4997" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="151.25" y="5007.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3989" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="100.29" y="3999.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="314.5" y="5269" width="0.2" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="317.47" y="5279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4341" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="138.19" y="4351.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="549" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="61.35" y="559.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind)  (1 samples, 0.02%)</title><rect x="542.9" y="5493" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="545.89" y="5503.5" ></text>
</g>
<g >
<title>`CALL-WITH-COMPILATION-RESULTS^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="57.8" y="1141" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="60.83" y="1151.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (9 samples, 0.20%)</title><rect x="78.2" y="4197" width="2.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="81.21" y="4207.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::asMinimalSimpleString() const (1 samples, 0.02%)</title><rect x="80.3" y="3861" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="83.30" y="3871.5" ></text>
</g>
<g >
<title>`llvm::LPPassManager::runOnFunction(llvm::Function&amp;) (3 samples, 0.07%)</title><rect x="522.8" y="5669" width="0.8" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="525.77" y="5679.5" ></text>
</g>
<g >
<title>`llvm::Type::getInt1Ty(llvm::LLVMContext&amp;) (1 samples, 0.02%)</title><rect x="596.2" y="5605" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="599.21" y="5615.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="501.9" y="5461" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="504.86" y="5471.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (3 samples, 0.07%)</title><rect x="164.5" y="4901" width="0.7" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="167.46" y="4911.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="453" width="1.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="57.17" y="463.5" ></text>
</g>
<g >
<title>`_platform_memchr$VARIANT$Base (1 samples, 0.02%)</title><rect x="660.8" y="5445" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="663.76" y="5455.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="80.6" y="4549" width="0.2" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="83.56" y="4559.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="319.2" y="5301" width="0.2" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="322.18" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="1845" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="65.01" y="1855.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="21.2" y="1845" width="0.6" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="24.24" y="1855.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="57.6" y="1365" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="60.57" y="1375.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.02%)</title><rect x="548.4" y="5301" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="551.38" y="5311.5" ></text>
</g>
<g >
<title>`GENERATE-AST^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="1029" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="61.35" y="1039.5" ></text>
</g>
<g >
<title>`llvm::getConstantStringInfo(llvm::Value const*, llvm::StringRef (1 samples, 0.02%)</title><rect x="529.3" y="5493" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="532.30" y="5503.5" ></text>
</g>
<g >
<title>`llvm::getConstantStringInfo(llvm::Value const*, llvm::StringRef (1 samples, 0.02%)</title><rect x="567.5" y="5333" width="0.2" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="570.46" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5221" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="130.35" y="5231.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (1 samples, 0.02%)</title><rect x="567.7" y="5397" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="570.72" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="151.4" y="5269" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="154.39" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="97.3" y="3957" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="100.29" y="3967.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (3 samples, 0.07%)</title><rect x="268.5" y="5477" width="0.8" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="271.48" y="5487.5" ></text>
</g>
<g >
<title>`GC_release_mark_lock (1 samples, 0.02%)</title><rect x="417.4" y="5477" width="0.3" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="420.45" y="5487.5" ></text>
</g>
<g >
<title>`llvm::GlobalValue::~GlobalValue() (1 samples, 0.02%)</title><rect x="720.6" y="5669" width="0.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="723.61" y="5679.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorTemplateBase&lt;unsigned long long, true&gt;::push_b (1 samples, 0.02%)</title><rect x="721.4" y="5653" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="724.40" y="5663.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2181" width="1.8" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="60.57" y="2191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4069" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="132.70" y="4079.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignment(llvm::Type*, bool) const (1 samples, 0.02%)</title><rect x="660.5" y="5429" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="663.50" y="5439.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2629" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="73.63" y="2639.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (4 samples, 0.09%)</title><rect x="610.1" y="5589" width="1.0" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="613.06" y="5599.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="61.2" y="3285" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="64.22" y="3295.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="78.7" y="3733" width="0.6" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="81.74" y="3743.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="4501" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="100.29" y="4511.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (1 samples, 0.02%)</title><rect x="145.1" y="4949" width="0.3" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="148.12" y="4959.5" ></text>
</g>
<g >
<title>`core::Lisp_O::findPackage(std::__1::basic_string&lt;char, std::__1 (1 samples, 0.02%)</title><rect x="40.6" y="3925" width="0.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="43.58" y="3935.5" ></text>
</g>
<g >
<title>`llvm::DILocation::getImpl(llvm::LLVMContext&amp;, unsigned int, uns (4 samples, 0.09%)</title><rect x="300.4" y="5381" width="1.0" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="303.36" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="1045" width="0.2" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="65.27" y="1055.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (3 samples, 0.07%)</title><rect x="205.2" y="5573" width="0.8" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="208.23" y="5583.5" ></text>
</g>
<g >
<title>`PROCESS-KEYS^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="50.8" y="3109" width="0.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="53.77" y="3119.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="34.3" y="4469" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="37.31" y="4479.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (88 samples, 1.95%)</title><rect x="49.5" y="4437" width="23.0" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="52.46" y="4447.5" >`..</text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="173.9" y="5365" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="176.87" y="5375.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1701" width="1.0" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="58.48" y="1711.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="322.1" y="5237" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="325.05" y="5247.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="17.6" y="1461" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="20.58" y="1471.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="97.3" y="2997" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="100.29" y="3007.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="79.8" y="3637" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="82.78" y="3647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="63.1" y="2453" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="66.05" y="2463.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (3 samples, 0.07%)</title><rect x="23.9" y="4053" width="0.7" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="26.85" y="4063.5" ></text>
</g>
<g >
<title>`core::StringOutputStream_O::getAndReset() (1 samples, 0.02%)</title><rect x="312.1" y="5397" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="315.12" y="5407.5" ></text>
</g>
<g >
<title>`CHECK-SPECIAL-FORM-SYNTAX^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="73.5" y="4533" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="76.51" y="4543.5" ></text>
</g>
<g >
<title>`PRIMITIVE-PROPERTIES^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="339.3" y="5189" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="342.30" y="5199.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="53.1" y="2981" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="56.12" y="2991.5" ></text>
</g>
<g >
<title>`llvm::Instruction::getMetadataImpl(unsigned int) const (1 samples, 0.02%)</title><rect x="669.1" y="5477" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="672.13" y="5487.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="126.0" y="5621" width="0.3" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="129.04" y="5631.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleBaseString_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="174.9" y="5285" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="177.91" y="5295.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="184.6" y="5573" width="0.2" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="187.58" y="5583.5" ></text>
</g>
<g >
<title>`getSymTab(llvm::Value*, llvm::ValueSymbolTable*&amp;) (1 samples, 0.02%)</title><rect x="293.0" y="5317" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="296.04" y="5327.5" ></text>
</g>
<g >
<title>`llvm::APInt::operator (1 samples, 0.02%)</title><rect x="442.3" y="5573" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="445.27" y="5583.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonEqual(llvm::Value const*, llvm::Value const*, l (2 samples, 0.04%)</title><rect x="653.4" y="5589" width="0.6" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="656.45" y="5599.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="105.9" y="5509" width="0.3" height="15.0" fill="rgb(254,128,128)" rx="2" ry="2" />
<text  x="108.92" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1445" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="69.19" y="1455.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (2 samples, 0.04%)</title><rect x="488.3" y="5557" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="491.27" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="137.8" y="4853" width="0.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="140.80" y="4863.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setup(unsigned int, gctools::smart_ptr&lt;core: (2 samples, 0.04%)</title><rect x="66.5" y="1637" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="69.45" y="1647.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="70.9" y="3173" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="73.89" y="3183.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2597" width="1.8" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="60.57" y="2607.5" ></text>
</g>
<g >
<title>`COMPUTE-LANDING-PAD-FROM-LOCATION^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="345.6" y="5253" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="348.57" y="5263.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.02%)</title><rect x="60.4" y="2613" width="0.3" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="63.44" y="2623.5" ></text>
</g>
<g >
<title>`C+ (11 samples, 0.24%)</title><rect x="379.6" y="5445" width="2.8" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="382.55" y="5455.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasGEP(llvm::GEPOperator const*, unsigne (6 samples, 0.13%)</title><rect x="505.8" y="5525" width="1.6" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="508.78" y="5535.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="137.5" y="4741" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="140.54" y="4751.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="71.4" y="3765" width="0.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="74.42" y="3775.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (4 samples, 0.09%)</title><rect x="502.6" y="5509" width="1.1" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="505.65" y="5519.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="79.5" y="3765" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="82.52" y="3775.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (7 samples, 0.16%)</title><rect x="405.2" y="5365" width="1.8" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="408.16" y="5375.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="2949" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="73.11" y="2959.5" ></text>
</g>
<g >
<title>`llvm::isInstructionTriviallyDead(llvm::Instruction*, llvm::Targ (1 samples, 0.02%)</title><rect x="678.5" y="5621" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="681.54" y="5631.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="2597" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="62.40" y="2607.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((FDEFINITION-INSTRU (12 samples, 0.27%)</title><rect x="379.3" y="5477" width="3.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="382.29" y="5487.5" ></text>
</g>
<g >
<title>`wrapped_cl__probe_file_T_sp (1 samples, 0.02%)</title><rect x="721.1" y="5717" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="724.14" y="5727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4421" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="135.31" y="4431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5189" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="180.26" y="5199.5" ></text>
</g>
<g >
<title>`OPTIMIZED-MULTIPLE-TO-FIXED-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^ (1 samples, 0.02%)</title><rect x="154.3" y="5221" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="157.27" y="5231.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.02%)</title><rect x="367.5" y="5365" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="370.53" y="5375.5" ></text>
</g>
<g >
<title>`PREDECESSORS^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="262.2" y="5573" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="265.20" y="5583.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.02%)</title><rect x="167.3" y="4965" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="170.33" y="4975.5" ></text>
</g>
<g >
<title>`PRIN1^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="43.5" y="4453" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="46.45" y="4463.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="63.8" y="1925" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="66.84" y="1935.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="180.4" y="5573" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="183.40" y="5583.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="30.9" y="4245" width="0.3" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="33.91" y="4255.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="447.0" y="5477" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="449.98" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4453" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="137.14" y="4463.5" ></text>
</g>
<g >
<title>`DATUM-KIND^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="421.9" y="5717" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="424.89" y="5727.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (8 samples, 0.18%)</title><rect x="63.3" y="2837" width="2.1" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="66.32" y="2847.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2069" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="65.01" y="2079.5" ></text>
</g>
<g >
<title>`cc_makeCell (1 samples, 0.02%)</title><rect x="357.3" y="5349" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="360.34" y="5359.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.02%)</title><rect x="81.9" y="4501" width="0.2" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="84.87" y="4511.5" ></text>
</g>
<g >
<title>`EXECUTE-LINK-LIBRARY^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="720.9" y="5765" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="723.87" y="5775.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2437" width="3.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="57.17" y="2447.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="65.4" y="2197" width="0.3" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="68.41" y="2207.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="409.3" y="5349" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="412.34" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="22.0" y="2549" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="25.02" y="2559.5" ></text>
</g>
<g >
<title>`GC_mark_some (2 samples, 0.04%)</title><rect x="210.7" y="5397" width="0.5" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="213.72" y="5407.5" ></text>
</g>
<g >
<title>`getAllocationDataForFunction(llvm::Function const*, AllocType,  (1 samples, 0.02%)</title><rect x="502.1" y="5477" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="505.12" y="5487.5" ></text>
</g>
<g >
<title>`ASSERT-CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="152.2" y="5333" width="0.2" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="155.17" y="5343.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="38.0" y="4549" width="0.2" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="40.96" y="4559.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="23.9" y="3781" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="26.85" y="3791.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="517.8" y="5589" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="520.81" y="5599.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="933" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="65.01" y="943.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SourcePosInfo_O&gt; gctools::GCObjectAppr (1 samples, 0.02%)</title><rect x="332.5" y="5093" width="0.3" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="335.51" y="5103.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="3061" width="0.5" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="73.11" y="3071.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="70.4" y="2597" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="73.37" y="2607.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="734.2" y="5237" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="737.20" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4133" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="138.19" y="4143.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="74.6" y="3733" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="77.55" y="3743.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (14 samples, 0.31%)</title><rect x="73.8" y="4517" width="3.6" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="76.77" y="4527.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (6 samples, 0.13%)</title><rect x="118.5" y="5573" width="1.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="121.46" y="5583.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction*, unsi (1 samples, 0.02%)</title><rect x="618.7" y="5605" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="621.69" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4469" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="139.76" y="4479.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (9 samples, 0.20%)</title><rect x="78.2" y="4437" width="2.4" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="81.21" y="4447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4501" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="139.76" y="4511.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="1717" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="68.93" y="1727.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="885" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="20.58" y="895.5" ></text>
</g>
<g >
<title>`wrapped_llvm_sys__FunctionCreate_FunctionType_spllvm__GlobalVal (1 samples, 0.02%)</title><rect x="337.2" y="5221" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="340.21" y="5231.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="331.7" y="5013" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="334.72" y="5023.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (9 samples, 0.20%)</title><rect x="234.0" y="5573" width="2.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="236.98" y="5583.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.02%)</title><rect x="44.5" y="4613" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="47.50" y="4623.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="140.9" y="5013" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="143.94" y="5023.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="516.5" y="5509" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="519.50" y="5519.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (22 samples, 0.49%)</title><rect x="28.6" y="4437" width="5.7" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="31.56" y="4447.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2901" width="0.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="65.79" y="2911.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="176.5" y="5477" width="0.2" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="179.48" y="5487.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="67.5" y="1413" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="70.50" y="1423.5" ></text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::getNumOper (1 samples, 0.02%)</title><rect x="439.1" y="5605" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="442.14" y="5615.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (2 samples, 0.04%)</title><rect x="264.3" y="5573" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="267.29" y="5583.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (1 samples, 0.02%)</title><rect x="355.8" y="5189" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="358.77" y="5199.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="31.2" y="4357" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="34.17" y="4367.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="1301" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="67.88" y="1311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4885" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="140.02" y="4895.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="166.0" y="5029" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="169.03" y="5039.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="330.7" y="5013" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="333.68" y="5023.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="523.8" y="5621" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="526.82" y="5631.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="258.8" y="5493" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="261.81" y="5503.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="64.4" y="1173" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="67.36" y="1183.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="51.0" y="2469" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="54.03" y="2479.5" ></text>
</g>
<g >
<title>`LOAD^COMMON-LISP^FN^^ (2,981 samples, 66.02%)</title><rect x="10.0" y="6069" width="779.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="13.00" y="6079.5" >`LOAD^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="48.7" y="5109" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="51.68" y="5119.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::make(unsigned long, int, bool, gctools::smart_p (1 samples, 0.02%)</title><rect x="240.3" y="5509" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="243.25" y="5519.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="292.0" y="5413" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="295.00" y="5423.5" ></text>
</g>
<g >
<title>`llvm::Value::deleteValue() (1 samples, 0.02%)</title><rect x="719.3" y="5605" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="722.31" y="5615.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2789" width="1.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="60.57" y="2799.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::addAttribute(llvm::LLVMContext&amp;, unsigned  (1 samples, 0.02%)</title><rect x="734.2" y="5349" width="0.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="737.20" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (4 samples, 0.09%)</title><rect x="56.5" y="1765" width="1.1" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="59.52" y="1775.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="821" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="60.57" y="831.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1685" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="65.27" y="1695.5" ></text>
</g>
<g >
<title>`wrapped_GlobalVariable_O__make_Module_spType_spboolcore__Symbol (1 samples, 0.02%)</title><rect x="373.3" y="5397" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="376.28" y="5407.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="64.1" y="1989" width="1.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="67.10" y="1999.5" ></text>
</g>
<g >
<title>`wrapped_cl__copy_list_List_sp (1 samples, 0.02%)</title><rect x="245.2" y="5589" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="248.22" y="5599.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="64.1" y="1365" width="0.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="67.10" y="1375.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="64.4" y="613" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="67.36" y="623.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.02%)</title><rect x="173.1" y="5029" width="0.2" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="176.08" y="5039.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.04%)</title><rect x="146.2" y="5045" width="0.5" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="149.16" y="5055.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="23.9" y="3925" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="26.85" y="3935.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="673.6" y="5541" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="676.57" y="5551.5" ></text>
</g>
<g >
<title>`OPTIMIZED-OPTIMIZE-INFO-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="79.8" y="3477" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="82.78" y="3487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (70 samples, 1.55%)</title><rect x="52.9" y="3493" width="18.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="55.86" y="3503.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="49.5" y="4085" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="52.46" y="4095.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerABIAlignment(unsigned int) const (1 samples, 0.02%)</title><rect x="610.8" y="5573" width="0.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="613.85" y="5583.5" ></text>
</g>
<g >
<title>`GC_mark_local (2 samples, 0.04%)</title><rect x="160.5" y="4789" width="0.6" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="163.54" y="4799.5" ></text>
</g>
<g >
<title>`llvm::BranchProbabilityInfoWrapperPass::runOnFunction(llvm::Fun (5 samples, 0.11%)</title><rect x="602.5" y="5669" width="1.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="605.48" y="5679.5" ></text>
</g>
<g >
<title>`llvm::MDNode::classof(llvm::Metadata const*) (1 samples, 0.02%)</title><rect x="481.0" y="5573" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="483.95" y="5583.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::CallInst_O&gt; gctools::GCObjectAppropri (1 samples, 0.02%)</title><rect x="411.7" y="5317" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="414.70" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4549" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="141.85" y="4559.5" ></text>
</g>
<g >
<title>`llvmo::PointerType_O::__class() const (1 samples, 0.02%)</title><rect x="373.0" y="5397" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="376.02" y="5407.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (4 samples, 0.09%)</title><rect x="206.0" y="5589" width="1.1" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="209.01" y="5599.5" ></text>
</g>
<g >
<title>`llvmo::ConstantInt_O::create(llvm::ConstantInt*) (1 samples, 0.02%)</title><rect x="334.1" y="5045" width="0.2" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="337.08" y="5055.5" ></text>
</g>
<g >
<title>`getValueFromCondition(llvm::Value*, llvm::Value*, bool) (5 samples, 0.11%)</title><rect x="435.2" y="5573" width="1.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="438.22" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4773" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="141.32" y="4783.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CFGSimplifyPass::runOnFunction(llvm::Fun (1 samples, 0.02%)</title><rect x="429.7" y="5669" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="432.73" y="5679.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="287.0" y="5509" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="290.03" y="5519.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.02%)</title><rect x="149.6" y="5013" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="152.56" y="5023.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="229.3" y="5557" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="232.27" y="5567.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (1 samples, 0.02%)</title><rect x="658.4" y="5589" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="661.41" y="5599.5" ></text>
</g>
<g >
<title>`sprintf (1 samples, 0.02%)</title><rect x="126.8" y="5269" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="129.82" y="5279.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="77.4" y="4581" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="80.43" y="4591.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (1 samples, 0.02%)</title><rect x="652.7" y="5557" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="655.66" y="5567.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (1 samples, 0.02%)</title><rect x="171.0" y="4933" width="0.3" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="173.99" y="4943.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm::Str (1 samples, 0.02%)</title><rect x="330.7" y="4917" width="0.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="333.68" y="4927.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4245" width="9.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="17.18" y="4255.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="693" width="1.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="59.52" y="703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="136.2" y="4773" width="0.6" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="139.23" y="4783.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="1829" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="65.53" y="1839.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="115.6" y="5557" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="118.59" y="5567.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="24.6" y="3621" width="0.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="27.64" y="3631.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="53.9" y="2885" width="0.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="56.91" y="2895.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (2 samples, 0.04%)</title><rect x="119.5" y="5349" width="0.5" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="122.51" y="5359.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="177.8" y="5237" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="180.79" y="5247.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.02%)</title><rect x="503.4" y="5461" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="506.43" y="5471.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.02%)</title><rect x="733.9" y="5701" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="736.94" y="5711.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="5445" width="0.2" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="100.55" y="5455.5" ></text>
</g>
<g >
<title>`FUNCTION-TYPE^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="51.8" y="3493" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="54.82" y="3503.5" ></text>
</g>
<g >
<title>`core::cl__last(gctools::smart_ptr&lt;core::List_V&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="735.2" y="5717" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="738.25" y="5727.5" ></text>
</g>
<g >
<title>`core::parse_word(gctools::smart_ptr&lt;core::T_O&gt;, int (*)(int), i (1 samples, 0.02%)</title><rect x="721.1" y="5589" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="724.14" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="168.6" y="4965" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="171.64" y="4975.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2597" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="73.63" y="2607.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.0" y="2677" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="63.96" y="2687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4325" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="137.40" y="4335.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4261" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="736.42" y="4271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4261" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="132.70" y="4271.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (36 samples, 0.80%)</title><rect x="14.2" y="4133" width="9.4" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="17.18" y="4143.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (4 samples, 0.09%)</title><rect x="119.0" y="5445" width="1.0" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="121.98" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.3" y="1749" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="65.27" y="1759.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-UI64^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="331.5" y="5061" width="0.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="334.46" y="5071.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="166.5" y="5013" width="0.3" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="169.55" y="5023.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2501" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="65.01" y="2511.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="498.5" y="5509" width="0.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="501.47" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="128.7" y="4661" width="1.5" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="131.65" y="4671.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (5 samples, 0.11%)</title><rect x="29.9" y="4373" width="1.3" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="32.86" y="4383.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.07%)</title><rect x="65.4" y="2293" width="0.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="68.41" y="2303.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="157.1" y="5269" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="160.14" y="5279.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="710.2" y="5621" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="713.16" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="1557" width="1.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="57.17" y="1567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((MULTIPLE-VALUE-SETQ-AST T))^ME (2 samples, 0.04%)</title><rect x="134.7" y="4901" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="137.66" y="4911.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2597" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="65.53" y="2607.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (10 samples, 0.22%)</title><rect x="553.3" y="5397" width="2.7" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="556.35" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4709" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="141.85" y="4719.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="65.9" y="1157" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="68.93" y="1167.5" ></text>
</g>
<g >
<title>`core::SimpleCharacterString_O::get_std_string() const (1 samples, 0.02%)</title><rect x="287.3" y="5493" width="0.3" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="290.29" y="5503.5" ></text>
</g>
<g >
<title>`wrapped_core__convert_overflow_result_to_bignum_Fixnum_sp (1 samples, 0.02%)</title><rect x="739.4" y="5733" width="0.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="742.43" y="5743.5" ></text>
</g>
<g >
<title>`llvm::Function::~Function() (1 samples, 0.02%)</title><rect x="589.7" y="5637" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="592.68" y="5647.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (10 samples, 0.22%)</title><rect x="45.8" y="5109" width="2.6" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="48.81" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4245" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="138.71" y="4255.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (2 samples, 0.04%)</title><rect x="186.2" y="5477" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="189.15" y="5487.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="411.4" y="5429" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="414.44" y="5439.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerABIAlignment(unsigned int) const (1 samples, 0.02%)</title><rect x="469.5" y="5557" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="472.46" y="5567.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="456.4" y="5573" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="459.39" y="5583.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (12 samples, 0.27%)</title><rect x="267.4" y="5605" width="3.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="270.43" y="5615.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::Value_O&gt; gctools::GCObjectAppropriate (1 samples, 0.02%)</title><rect x="349.0" y="5173" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="351.97" y="5183.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (2 samples, 0.04%)</title><rect x="66.5" y="1621" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="69.45" y="1631.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="77.7" y="4837" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="80.69" y="4847.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="65.9" y="1397" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="68.93" y="1407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((RETURN-FROM-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4229" width="0.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="138.71" y="4239.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="12.4" y="4197" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="15.35" y="4207.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="547.6" y="5317" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="550.60" y="5327.5" ></text>
</g>
<g >
<title>`llvm::getConstantDataArrayInfo(llvm::Value const*, llvm::Consta (1 samples, 0.02%)</title><rect x="574.5" y="5525" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="577.52" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="4021" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="100.29" y="4031.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="168.6" y="4885" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="171.64" y="4895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (13 samples, 0.29%)</title><rect x="128.7" y="4773" width="3.4" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="131.65" y="4783.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="49.2" y="5141" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="52.20" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="23.6" y="4501" width="1.0" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="26.59" y="4511.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.6" y="4837" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="100.55" y="4847.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitAllocSite(llvm::Instruction&amp;) (1 samples, 0.02%)</title><rect x="482.5" y="5605" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="485.52" y="5615.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.6" y="4677" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="100.55" y="4687.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="405" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="65.01" y="415.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2357" width="0.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="64.22" y="2367.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="12.4" y="4581" width="1.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="15.35" y="4591.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="65.7" y="1925" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="68.67" y="1935.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (21 samples, 0.47%)</title><rect x="38.7" y="4501" width="5.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="41.75" y="4511.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="885" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="62.13" y="895.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="399.7" y="5285" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="402.67" y="5295.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.02%)</title><rect x="479.6" y="5605" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="482.65" y="5615.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.02%)</title><rect x="49.5" y="4069" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="52.46" y="4079.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="506.6" y="5365" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="509.57" y="5375.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="53.1" y="3141" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="56.12" y="3151.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="323.4" y="5205" width="1.0" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="326.36" y="5215.5" ></text>
</g>
<g >
<title>`llvm::PrettyStackTraceEntry::~PrettyStackTraceEntry() (1 samples, 0.02%)</title><rect x="690.8" y="5637" width="0.3" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="693.82" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4677" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="137.40" y="4687.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="68.0" y="2709" width="1.8" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="71.02" y="2719.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (4 samples, 0.09%)</title><rect x="119.0" y="5381" width="1.0" height="15.0" fill="rgb(254,128,128)" rx="2" ry="2" />
<text  x="121.98" y="5391.5" ></text>
</g>
<g >
<title>`llvm::hash_value(llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="627.3" y="5509" width="0.3" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="630.31" y="5519.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="67.2" y="1429" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="70.24" y="1439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (32 samples, 0.71%)</title><rect x="162.4" y="5109" width="8.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="165.37" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="145.1" y="5285" width="1.6" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="148.12" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="2389" width="0.3" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="64.22" y="2399.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="64.1" y="1013" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="67.10" y="1023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5173" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="130.35" y="5183.5" ></text>
</g>
<g >
<title>`SLOT-MAKUNBOUND^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="102.0" y="5621" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="105.00" y="5631.5" ></text>
</g>
<g >
<title>`sprintf (1 samples, 0.02%)</title><rect x="243.6" y="5509" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="246.65" y="5519.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="294.3" y="5397" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="297.35" y="5407.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldGetElementPtr(llvm::Type*, llvm::Constant*, b (1 samples, 0.02%)</title><rect x="501.9" y="5397" width="0.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="504.86" y="5407.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.13%)</title><rect x="50.0" y="3541" width="1.6" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="52.99" y="3551.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="422.9" y="5621" width="0.3" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="425.93" y="5631.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.04%)</title><rect x="171.8" y="5253" width="0.5" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="174.78" y="5263.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="2981" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="100.29" y="2991.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm: (1 samples, 0.02%)</title><rect x="536.9" y="5605" width="0.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="539.88" y="5615.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="186.2" y="5445" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="189.15" y="5455.5" ></text>
</g>
<g >
<title>0x10d596094 (10 samples, 0.22%)</title><rect x="49.7" y="3733" width="2.6" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="52.73" y="3743.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1349" width="1.1" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="59.52" y="1359.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="334.3" y="5077" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="337.34" y="5087.5" ></text>
</g>
<g >
<title>`llvm::isFreeCall(llvm::Value const*, llvm::TargetLibraryInfo co (1 samples, 0.02%)</title><rect x="489.8" y="5605" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="492.84" y="5615.5" ></text>
</g>
<g >
<title>`PROCESS-REST^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5237" width="1.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="14.31" y="5247.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIntPtrType(llvm::Type*) const (1 samples, 0.02%)</title><rect x="465.8" y="5573" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="468.80" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (7 samples, 0.16%)</title><rect x="57.6" y="2197" width="1.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="60.57" y="2207.5" ></text>
</g>
<g >
<title>`llvm::df_iterator&lt;llvm::BasicBlock*, llvm::df_iterator_default_ (1 samples, 0.02%)</title><rect x="438.4" y="5637" width="0.2" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="441.35" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.6" y="4933" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="100.55" y="4943.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="464.5" y="5557" width="0.3" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="467.49" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (4 samples, 0.09%)</title><rect x="140.7" y="5061" width="1.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="143.68" y="5071.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="67.2" y="1397" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="70.24" y="1407.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="1109" width="1.0" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="58.48" y="1119.5" ></text>
</g>
<g >
<title>`llvm::GVN::ValueTable::lookupOrAdd(llvm::Value*) (12 samples, 0.27%)</title><rect x="540.8" y="5589" width="3.1" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="543.80" y="5599.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.04%)</title><rect x="411.7" y="5365" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="414.70" y="5375.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.2" y="2725" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="64.22" y="2735.5" ></text>
</g>
<g >
<title>`cc_enclose (2 samples, 0.04%)</title><rect x="369.9" y="5301" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="372.88" y="5311.5" ></text>
</g>
<g >
<title>`llvm::RecursivelyDeleteTriviallyDeadInstructions(llvm::Value*,  (2 samples, 0.04%)</title><rect x="696.8" y="5589" width="0.6" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="699.83" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="64.9" y="917" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="67.88" y="927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4805" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="142.11" y="4815.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="23.1" y="3957" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="26.07" y="3967.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="560.1" y="5413" width="0.3" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="563.14" y="5423.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::Value_O&gt; gctools::GCObjectAppropriate (1 samples, 0.02%)</title><rect x="384.5" y="5317" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="387.52" y="5327.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="50.0" y="3221" width="0.2" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="52.99" y="3231.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (2 samples, 0.04%)</title><rect x="27.5" y="4389" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="30.51" y="4399.5" ></text>
</g>
<g >
<title>`llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (1 samples, 0.02%)</title><rect x="57.8" y="949" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="60.83" y="959.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="10.3" y="5717" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="13.26" y="5727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (10 samples, 0.22%)</title><rect x="144.3" y="5413" width="2.6" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="147.33" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.07%)</title><rect x="167.1" y="5077" width="0.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="170.07" y="5087.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="30.6" y="4277" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="33.65" y="4287.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="357.9" y="5349" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="360.86" y="5359.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="59.1" y="693" width="0.3" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="62.13" y="703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4581" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="137.66" y="4591.5" ></text>
</g>
<g >
<title>`CHECK-FORM-PROPER-LIST^CLEAVIR-CODE-UTILITIES^FN^^ (1 samples, 0.02%)</title><rect x="37.4" y="4805" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="40.44" y="4815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4181" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="139.76" y="4191.5" ></text>
</g>
<g >
<title>`GENERATE-RESUME-BLOCK^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="398.4" y="5397" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="401.37" y="5407.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="64.9" y="1365" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="67.88" y="1375.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="10.5" y="5765" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="13.52" y="5775.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (8 samples, 0.18%)</title><rect x="41.1" y="4421" width="2.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="44.10" y="4431.5" ></text>
</g>
<g >
<title>`COMPILE-TREE^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.2" y="5477" width="0.3" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="738.25" y="5487.5" ></text>
</g>
<g >
<title>`core::core__hash_table_setf_gethash(gctools::smart_ptr&lt;core::Ha (1 samples, 0.02%)</title><rect x="250.2" y="5573" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="253.18" y="5583.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (5 samples, 0.11%)</title><rect x="252.0" y="5413" width="1.3" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="255.01" y="5423.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="50.8" y="2853" width="0.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="53.77" y="2863.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolutionWrapperPass::releaseMemory() (2 samples, 0.04%)</title><rect x="535.3" y="5637" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="538.32" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4165" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="137.93" y="4175.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm::Str (1 samples, 0.02%)</title><rect x="361.3" y="5189" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="364.26" y="5199.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="378.0" y="5413" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="380.98" y="5423.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="145.1" y="5045" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="148.12" y="5055.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-FUNCTION^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="14.2" y="3173" width="1.0" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="17.18" y="3183.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="741" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="68.93" y="751.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm:: (3 samples, 0.07%)</title><rect x="560.1" y="5509" width="0.8" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="563.14" y="5519.5" ></text>
</g>
<g >
<title>`core::Lisp_O::findPackage_no_lock(std::__1::basic_string&lt;char,  (1 samples, 0.02%)</title><rect x="40.6" y="3909" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="43.58" y="3919.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="70.6" y="2229" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="73.63" y="2239.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (2 samples, 0.04%)</title><rect x="567.2" y="5461" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="570.20" y="5471.5" ></text>
</g>
<g >
<title>`_platform_memcmp (1 samples, 0.02%)</title><rect x="599.1" y="5573" width="0.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="602.09" y="5583.5" ></text>
</g>
<g >
<title>`wrapped_core__stack_monitor_T_sp (1 samples, 0.02%)</title><rect x="95.2" y="4373" width="0.3" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="98.20" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="126.8" y="5493" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="129.82" y="5503.5" ></text>
</g>
<g >
<title>`free_tiny (2 samples, 0.04%)</title><rect x="388.2" y="5365" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="391.17" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4565" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="142.11" y="4575.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="418.8" y="5541" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="421.75" y="5551.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm: (1 samples, 0.02%)</title><rect x="568.5" y="5509" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="571.51" y="5519.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="409.3" y="5429" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="412.34" y="5439.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getDependency(llvm::Instruction* (65 samples, 1.44%)</title><rect x="544.7" y="5573" width="17.0" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="547.72" y="5583.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="635.4" y="5509" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="638.41" y="5519.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="67.2" y="1685" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="70.24" y="1695.5" ></text>
</g>
<g >
<title>`llvm::Type::getInt8Ty(llvm::LLVMContext&amp;) (1 samples, 0.02%)</title><rect x="392.4" y="5381" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="395.36" y="5391.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="11.3" y="4549" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="14.31" y="4559.5" ></text>
</g>
<g >
<title>`llvm::APInt::isMinSignedValue() const (1 samples, 0.02%)</title><rect x="551.3" y="5317" width="0.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="554.26" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="53.4" y="2965" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="56.38" y="2975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4373" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="137.14" y="4383.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="312.4" y="5429" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="315.38" y="5439.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="410.4" y="5381" width="0.3" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="413.39" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (4 samples, 0.09%)</title><rect x="55.5" y="837" width="1.0" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="58.48" y="847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (16 samples, 0.35%)</title><rect x="128.4" y="4933" width="4.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="131.39" y="4943.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="652.4" y="5397" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="655.40" y="5407.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="78.0" y="4565" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="80.95" y="4575.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="67.5" y="1797" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="70.50" y="1807.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5429" width="1.1" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="14.31" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4133" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="141.85" y="4143.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="16.0" y="3621" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="19.01" y="3631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="2277" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="65.01" y="2287.5" ></text>
</g>
<g >
<title>`ADD-SIDE-EFFECT-CALL-ARGLIST^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="123.7" y="5541" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="126.69" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET*) T T T))^ME (32 samples, 0.71%)</title><rect x="27.0" y="4933" width="8.4" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="29.99" y="4943.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (4 samples, 0.09%)</title><rect x="210.5" y="5541" width="1.0" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="213.46" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="35.4" y="4917" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="38.35" y="4927.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (10 samples, 0.22%)</title><rect x="65.4" y="3237" width="2.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="68.41" y="3247.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="39.3" y="4229" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="42.27" y="4239.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2405" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="65.27" y="2415.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="2613" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="65.01" y="2623.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.02%)</title><rect x="105.9" y="5493" width="0.3" height="15.0" fill="rgb(250,122,122)" rx="2" ry="2" />
<text  x="108.92" y="5503.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="327.8" y="5205" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="330.80" y="5215.5" ></text>
</g>
<g >
<title>`llvm::BitcodeWriter::writeSymtab() (1 samples, 0.02%)</title><rect x="729.2" y="5701" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="732.24" y="5711.5" ></text>
</g>
<g >
<title>`MAKE-LET-INIT-ASTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="2933" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="72.85" y="2943.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (6 samples, 0.13%)</title><rect x="24.6" y="4405" width="1.6" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="27.64" y="4415.5" ></text>
</g>
<g >
<title>`MAKE-LITERAL-DATUM^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="371.4" y="5349" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="374.45" y="5359.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="70.1" y="2565" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="73.11" y="2575.5" ></text>
</g>
<g >
<title>`szone_size (1 samples, 0.02%)</title><rect x="452.5" y="5605" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="455.47" y="5615.5" ></text>
</g>
<g >
<title>`GC_mark_some (3 samples, 0.07%)</title><rect x="201.0" y="5397" width="0.8" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="204.05" y="5407.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (1,235 samples, 27.35%)</title><rect x="98.6" y="5685" width="322.8" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="101.60" y="5695.5" >`TRANSLATE-AST^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::User const*&gt;::insert(llvm::User con (1 samples, 0.02%)</title><rect x="731.6" y="5685" width="0.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="734.59" y="5695.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="161.6" y="4917" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="164.58" y="4927.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="339.3" y="5157" width="0.3" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="342.30" y="5167.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="22.0" y="2565" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="25.02" y="2575.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="56.5" y="1637" width="1.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="59.52" y="1647.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (18 samples, 0.40%)</title><rect x="17.3" y="2501" width="4.7" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="20.32" y="2511.5" ></text>
</g>
<g >
<title>`llvm::ConstantRange::isFullSet() const (1 samples, 0.02%)</title><rect x="653.2" y="5589" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="656.18" y="5599.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="320.7" y="5221" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="323.75" y="5231.5" ></text>
</g>
<g >
<title>`llvm::Function::dropAllReferences() (1 samples, 0.02%)</title><rect x="589.7" y="5621" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="592.68" y="5631.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="341.7" y="5157" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="344.65" y="5167.5" ></text>
</g>
<g >
<title>`__toupper (1 samples, 0.02%)</title><rect x="720.9" y="5621" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="723.87" y="5631.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="384.8" y="5349" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="387.78" y="5359.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (8 samples, 0.18%)</title><rect x="63.3" y="3141" width="2.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="66.32" y="3151.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (2 samples, 0.04%)</title><rect x="64.4" y="965" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="67.36" y="975.5" ></text>
</g>
<g >
<title>`llvm::LoadInst::LoadInst(llvm::Type*, llvm::Value*, char const* (1 samples, 0.02%)</title><rect x="407.5" y="5365" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="410.51" y="5375.5" ></text>
</g>
<g >
<title>`FIXNUMP^CORE^FN^^ (1 samples, 0.02%)</title><rect x="245.0" y="5541" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="247.95" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="59.4" y="3045" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="62.40" y="3055.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (5 samples, 0.11%)</title><rect x="29.9" y="4341" width="1.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="32.86" y="4351.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (2 samples, 0.04%)</title><rect x="376.2" y="5365" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="379.15" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="21.2" y="1925" width="0.6" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="24.24" y="1935.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="455.6" y="5621" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="458.60" y="5631.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="11.3" y="4709" width="1.1" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="14.31" y="4719.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="314.5" y="5237" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="317.47" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="66.2" y="2005" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="69.19" y="2015.5" ></text>
</g>
<g >
<title>`core::LambdaListHandler_O::createBindingsInScopeVaList(unsigned (1 samples, 0.02%)</title><rect x="320.5" y="5173" width="0.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="323.49" y="5183.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="53.1" y="2853" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="56.12" y="2863.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_equal(core::HashGenerator&amp;, gctools:: (1 samples, 0.02%)</title><rect x="371.2" y="5253" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="374.19" y="5263.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceSet(unsigned long, gctools::smart_ptr (1 samples, 0.02%)</title><rect x="220.6" y="5573" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="223.65" y="5583.5" ></text>
</g>
<g >
<title>`GC_wait_marker (1 samples, 0.02%)</title><rect x="1189.2" y="6325" width="0.3" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="1192.22" y="6335.5" ></text>
</g>
<g >
<title>`std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt; (1 samples, 0.02%)</title><rect x="120.6" y="5253" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="123.55" y="5263.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ModuleBitcodeWriter::writeConstants(unsi (2 samples, 0.04%)</title><rect x="722.7" y="5653" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="725.70" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.04%)</title><rect x="127.1" y="5525" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="130.09" y="5535.5" ></text>
</g>
<g >
<title>0x10d596094 (26 samples, 0.58%)</title><rect x="16.3" y="3381" width="6.8" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="19.27" y="3391.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.8" y="1781" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="65.79" y="1791.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::List_V&gt; (llvm (1 samples, 0.02%)</title><rect x="367.3" y="5365" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="370.27" y="5375.5" ></text>
</g>
<g >
<title>`ALLOCA-T*^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="314.5" y="5365" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="317.47" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.6" y="4485" width="0.2" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="100.55" y="4495.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (7 samples, 0.16%)</title><rect x="68.0" y="2837" width="1.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="71.02" y="2847.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="694.5" y="5605" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="697.48" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (7 samples, 0.16%)</title><rect x="66.2" y="2341" width="1.8" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="69.19" y="2351.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="97.3" y="3029" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="100.29" y="3039.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="2933" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="100.29" y="2943.5" ></text>
</g>
<g >
<title>`llvm::Module::~Module() (12 samples, 0.27%)</title><rect x="717.7" y="5701" width="3.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="720.74" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4725" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="137.40" y="4735.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (2 samples, 0.04%)</title><rect x="202.9" y="5525" width="0.5" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="205.88" y="5535.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitICmpInst(llvm::ICmpInst&amp;) (26 samples, 0.58%)</title><rect x="650.8" y="5621" width="6.8" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="653.83" y="5631.5" ></text>
</g>
<g >
<title>`free_small (1 samples, 0.02%)</title><rect x="458.0" y="5653" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="460.96" y="5663.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="61.7" y="3237" width="0.8" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="64.75" y="3247.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4133" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="736.42" y="4143.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="64.4" y="789" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="67.36" y="799.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::Instruction&gt;, llvm:: (1 samples, 0.02%)</title><rect x="694.2" y="5637" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="697.22" y="5647.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_equal(core::HashGenerator&amp;, gctools:: (1 samples, 0.02%)</title><rect x="379.0" y="5349" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="382.03" y="5359.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="12.4" y="4885" width="1.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="15.35" y="4895.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (3 samples, 0.07%)</title><rect x="467.4" y="5541" width="0.7" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="470.36" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="138.6" y="4853" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="141.58" y="4863.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="501.9" y="5413" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="504.86" y="5423.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5429" width="0.3" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="713.94" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="17.6" y="1989" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="20.58" y="1999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3829" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="132.96" y="3839.5" ></text>
</g>
<g >
<title>`OPTIMIZED-LEXICAL-LOCATION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="165.8" y="5029" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="168.77" y="5039.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="837" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="60.57" y="847.5" ></text>
</g>
<g >
<title>`llvm::CallGraph::getOrInsertFunction(llvm::Function const*) (1 samples, 0.02%)</title><rect x="593.1" y="5653" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="596.07" y="5663.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="333.0" y="5045" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="336.03" y="5055.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2197" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="65.01" y="2207.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CastGEPIndices(llvm::Type*, llvm::ArrayR (1 samples, 0.02%)</title><rect x="610.1" y="5573" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="613.06" y="5583.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="62.8" y="1221" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="65.79" y="1231.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="66.2" y="1365" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="69.19" y="1375.5" ></text>
</g>
<g >
<title>`wrapped_cl__reverse_T_sp (1 samples, 0.02%)</title><rect x="174.1" y="5429" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="177.13" y="5439.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="307.4" y="5445" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="310.42" y="5455.5" ></text>
</g>
<g >
<title>`wrapped_cl__special_operator_p_Symbol_sp (1 samples, 0.02%)</title><rect x="97.0" y="5093" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="100.03" y="5103.5" ></text>
</g>
<g >
<title>`llvm::GlobalValue::getGUID() const (1 samples, 0.02%)</title><rect x="731.1" y="5685" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="734.07" y="5695.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="395.2" y="5221" width="0.3" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="398.23" y="5231.5" ></text>
</g>
<g >
<title>`COMPUTE-CONSTRUCTOR^STATIC-GFS^FN^^ (1 samples, 0.02%)</title><rect x="732.9" y="5701" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="735.90" y="5711.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="184.8" y="5557" width="0.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="187.84" y="5567.5" ></text>
</g>
<g >
<title>`NSUBSTITUTE^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="203.7" y="5589" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="206.66" y="5599.5" ></text>
</g>
<g >
<title>`llvm::Constant::destroyConstant() (1 samples, 0.02%)</title><rect x="720.6" y="5621" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="723.61" y="5631.5" ></text>
</g>
<g >
<title>`llvm::TypeBasedAAResult::alias(llvm::MemoryLocation const&amp;, llv (1 samples, 0.02%)</title><rect x="507.1" y="5493" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="510.09" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.02%)</title><rect x="175.4" y="5333" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="178.44" y="5343.5" ></text>
</g>
<g >
<title>`SPECIALIZE^CLEAVIR-HIR-TO-MIR^((INSTRUCTION CLASP T T))^METHOD^ (1 samples, 0.02%)</title><rect x="191.4" y="5589" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="194.38" y="5599.5" ></text>
</g>
<g >
<title>`llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::Arra (1 samples, 0.02%)</title><rect x="555.2" y="5317" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="558.18" y="5327.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="635.4" y="5493" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="638.41" y="5503.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="79.5" y="3733" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="82.52" y="3743.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (88 samples, 1.95%)</title><rect x="49.5" y="4389" width="23.0" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="52.46" y="4399.5" >`..</text>
</g>
<g >
<title>`MAKE-FORMAT-DIRECTIVE^CORE^FN^^ (6 samples, 0.13%)</title><rect x="46.6" y="5029" width="1.6" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="49.59" y="5039.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="169.2" y="4869" width="0.2" height="15.0" fill="rgb(217,74,74)" rx="2" ry="2" />
<text  x="172.16" y="4879.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="23.6" y="4389" width="1.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="26.59" y="4399.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="5109" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="100.29" y="5119.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasGEP(llvm::GEPOperator const*, unsigne (1 samples, 0.02%)</title><rect x="528.0" y="5509" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="531.00" y="5519.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitCallSite(llvm::CallSite) (2 samples, 0.04%)</title><rect x="645.6" y="5621" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="648.61" y="5631.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Type*, llvm::PointerTyp (1 samples, 0.02%)</title><rect x="550.0" y="5333" width="0.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="552.95" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="5205" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="100.29" y="5215.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="473.1" y="5493" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="476.11" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="17.3" y="1765" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="20.32" y="1775.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerTypeSizeInBits(llvm::Type*) const (1 samples, 0.02%)</title><rect x="673.3" y="5573" width="0.3" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="676.31" y="5583.5" ></text>
</g>
<g >
<title>`GC_alloc_large (1 samples, 0.02%)</title><rect x="278.7" y="5445" width="0.2" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="281.67" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3877" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="100.29" y="3887.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (3 samples, 0.07%)</title><rect x="47.4" y="4853" width="0.8" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="50.37" y="4863.5" ></text>
</g>
<g >
<title>`LOAD-DEFCLASS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.2" y="5733" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="736.16" y="5743.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="138.3" y="4357" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="141.32" y="4367.5" ></text>
</g>
<g >
<title>`GC_mark_local (3 samples, 0.07%)</title><rect x="36.7" y="4741" width="0.7" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="39.66" y="4751.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (2 samples, 0.04%)</title><rect x="60.7" y="2853" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="63.70" y="2863.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getPointerDependencyFrom(llvm::M (4 samples, 0.09%)</title><rect x="567.2" y="5509" width="1.0" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="570.20" y="5519.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="57.6" y="2917" width="1.8" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="60.57" y="2927.5" ></text>
</g>
<g >
<title>`non-virtual thunk to (anonymous namespace)::MPPassManager::~MPP (1 samples, 0.02%)</title><rect x="58.9" y="853" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="61.87" y="863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4101" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="136.36" y="4111.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="652.4" y="5509" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="655.40" y="5519.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="77.2" y="4197" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="80.17" y="4207.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="157.1" y="5253" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="160.14" y="5263.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2293" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="64.75" y="2303.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="23.6" y="4645" width="1.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="26.59" y="4655.5" ></text>
</g>
<g >
<title>`llvm::MachineFunctionPass::runOnFunction(llvm::Function&amp;) (1 samples, 0.02%)</title><rect x="732.9" y="5365" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="735.90" y="5375.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.20%)</title><rect x="78.2" y="4309" width="2.4" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="81.21" y="4319.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (2 samples, 0.04%)</title><rect x="516.2" y="5573" width="0.6" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="519.24" y="5583.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="228.2" y="5621" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="231.23" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (3 samples, 0.07%)</title><rect x="39.8" y="4133" width="0.8" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="42.79" y="4143.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1733" width="1.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="57.17" y="1743.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="67.2" y="1493" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="70.24" y="1503.5" ></text>
</g>
<g >
<title>`llvm::ValueHandleBase::AddToUseList() (1 samples, 0.02%)</title><rect x="700.5" y="5637" width="0.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="703.49" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4837" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="135.31" y="4847.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="174.9" y="5349" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="177.91" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (21 samples, 0.47%)</title><rect x="152.2" y="5413" width="5.5" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="155.17" y="5423.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (1 samples, 0.02%)</title><rect x="252.5" y="5365" width="0.3" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="255.53" y="5375.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="68.8" y="2149" width="0.3" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="71.80" y="2159.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="675.1" y="5477" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="678.14" y="5487.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="2565" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="72.85" y="2575.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="3045" width="1.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="60.57" y="3055.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="418.8" y="5493" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="421.75" y="5503.5" ></text>
</g>
<g >
<title>`wrapped_gctools__garbage_collect_ (188 samples, 4.16%)</title><rect x="739.7" y="5733" width="49.1" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="742.69" y="5743.5" >`wra..</text>
</g>
<g >
<title>`GC_push_marked (1 samples, 0.02%)</title><rect x="76.1" y="3653" width="0.3" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="79.12" y="3663.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::Value*, std::__1::allocator&lt;llvm::V (1 samples, 0.02%)</title><rect x="399.9" y="5301" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="402.94" y="5311.5" ></text>
</g>
<g >
<title>`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^ (315 samples, 6.98%)</title><rect x="197.9" y="5637" width="82.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="200.91" y="5647.5" >`MY-HIR-T..</text>
</g>
<g >
<title>`GC_mark_from (2 samples, 0.04%)</title><rect x="33.5" y="4181" width="0.5" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="36.52" y="4191.5" ></text>
</g>
<g >
<title>`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std:: (1 samples, 0.02%)</title><rect x="383.2" y="5333" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="386.21" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="57.6" y="1557" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="60.57" y="1567.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="65.1" y="1909" width="0.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="68.15" y="1919.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.04%)</title><rect x="342.2" y="5205" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="345.18" y="5215.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="563.3" y="5557" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="566.28" y="5567.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2453" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="65.27" y="2463.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (7 samples, 0.16%)</title><rect x="17.8" y="2053" width="1.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="20.84" y="2063.5" ></text>
</g>
<g >
<title>`OF-CLASS-P^CORE^FN^^ (2 samples, 0.04%)</title><rect x="105.4" y="5557" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="108.39" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4853" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="100.29" y="4863.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="312.9" y="5445" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="315.91" y="5455.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (6 samples, 0.13%)</title><rect x="181.2" y="5573" width="1.6" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="184.18" y="5583.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="354.5" y="5221" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="357.46" y="5231.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5509" width="0.2" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="123.55" y="5519.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (27 samples, 0.60%)</title><rect x="622.9" y="5605" width="7.0" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="625.87" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (1 samples, 0.02%)</title><rect x="65.9" y="1893" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="68.93" y="1903.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (12 samples, 0.27%)</title><rect x="74.0" y="4149" width="3.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="77.03" y="4159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4309" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="137.93" y="4319.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="46.9" y="4869" width="0.2" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="49.85" y="4879.5" ></text>
</g>
<g >
<title>`ltvc_toplevel_funcall (2,981 samples, 66.02%)</title><rect x="10.0" y="6229" width="779.1" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="13.00" y="6239.5" >`ltvc_toplevel_funcall</text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.3" y="4005" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="100.29" y="4015.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromAssume(llvm::Value const*, llvm::KnownBits&amp; (1 samples, 0.02%)</title><rect x="642.2" y="5541" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="645.21" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="136.2" y="3717" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="139.23" y="3727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (60 samples, 1.33%)</title><rect x="128.1" y="5301" width="15.7" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="131.13" y="5311.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="455.6" y="5637" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="458.60" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="2869" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="73.63" y="2879.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2981" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="66.05" y="2991.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="53.1" y="3237" width="1.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="56.12" y="3247.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (91 samples, 2.02%)</title><rect x="12.4" y="5333" width="23.7" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="15.35" y="5343.5" >`..</text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="697.9" y="5573" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="700.88" y="5583.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="170.7" y="5109" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="173.73" y="5119.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2741" width="3.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="57.17" y="2751.5" ></text>
</g>
<g >
<title>`CONVERT-CONSTANT^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="71.4" y="3461" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="74.42" y="3471.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="174.4" y="5269" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="177.39" y="5279.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (10 samples, 0.22%)</title><rect x="187.5" y="5573" width="2.6" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="190.46" y="5583.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (5 samples, 0.11%)</title><rect x="46.9" y="4949" width="1.3" height="15.0" fill="rgb(224,86,86)" rx="2" ry="2" />
<text  x="49.85" y="4959.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="53.4" y="2837" width="0.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="56.38" y="2847.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="24.6" y="4469" width="1.6" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="27.64" y="4479.5" ></text>
</g>
<g >
<title>`MAKE-TEMPS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="139.6" y="5173" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="142.63" y="5183.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(l (4 samples, 0.09%)</title><rect x="567.2" y="5477" width="1.0" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="570.20" y="5487.5" ></text>
</g>
<g >
<title>0x10d596094 (6 samples, 0.13%)</title><rect x="12.4" y="4821" width="1.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="15.35" y="4831.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="1781" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="65.53" y="1791.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.2" y="2597" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="64.22" y="2607.5" ></text>
</g>
<g >
<title>`llvm::Value::~Value() (1 samples, 0.02%)</title><rect x="448.3" y="5605" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="451.29" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (2 samples, 0.04%)</title><rect x="62.5" y="2997" width="0.6" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="65.53" y="3007.5" ></text>
</g>
<g >
<title>`RUN-CLANG^EXT^FN^^ (1 samples, 0.02%)</title><rect x="721.1" y="5749" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="724.14" y="5759.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="1525" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="60.57" y="1535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.1" y="4597" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="141.06" y="4607.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="366.5" y="5237" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="369.48" y="5247.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1781" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="68.93" y="1791.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="734.2" y="5205" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="737.20" y="5215.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="284.7" y="5621" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="287.68" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="157.9" y="5381" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="160.92" y="5391.5" ></text>
</g>
<g >
<title>0x10d596094 (88 samples, 1.95%)</title><rect x="49.5" y="4629" width="23.0" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="52.46" y="4639.5" >0..</text>
</g>
<g >
<title>`ALLOCA^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="314.0" y="5349" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="316.95" y="5359.5" ></text>
</g>
<g >
<title>`llvm::MemCpyOptPass::iterateOnFunction(llvm::Function&amp;) (2 samples, 0.04%)</title><rect x="449.3" y="5637" width="0.6" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="452.33" y="5647.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getPredicateAt(unsigned int, llvm::Value*, (4 samples, 0.09%)</title><rect x="447.2" y="5621" width="1.1" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="450.24" y="5631.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="686.1" y="5541" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="689.12" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.0" y="1941" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="65.01" y="1951.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="65.1" y="1925" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="68.15" y="1935.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="56.5" y="1109" width="1.1" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="59.52" y="1119.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (14 samples, 0.31%)</title><rect x="73.8" y="4469" width="3.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="76.77" y="4479.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (407 samples, 9.01%)</title><rect x="594.1" y="5701" width="106.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="597.12" y="5711.5" >`llvm::FPPass..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4261" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="138.45" y="4271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="177.3" y="5413" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="180.26" y="5423.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="67.5" y="1333" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="70.50" y="1343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.18%)</title><rect x="148.5" y="5125" width="2.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="151.52" y="5135.5" ></text>
</g>
<g >
<title>0x10d596094 (10 samples, 0.22%)</title><rect x="65.4" y="2805" width="2.6" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="68.41" y="2815.5" ></text>
</g>
<g >
<title>`ASSERT-CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="177.5" y="5221" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="180.53" y="5231.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="3157" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="62.40" y="3167.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="63.3" y="2533" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="66.32" y="2543.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (88 samples, 1.95%)</title><rect x="49.5" y="4693" width="23.0" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="52.46" y="4703.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="3941" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="131.65" y="3951.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="143.8" y="5269" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="146.81" y="5279.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="455.3" y="5605" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="458.34" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="62.0" y="2309" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="65.01" y="2319.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (18 samples, 0.40%)</title><rect x="65.4" y="3397" width="4.7" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="68.41" y="3407.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.04%)</title><rect x="309.2" y="5413" width="0.6" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="312.25" y="5423.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymou (7 samples, 0.16%)</title><rect x="706.5" y="5669" width="1.8" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="709.50" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="64.1" y="1493" width="1.0" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="67.10" y="1503.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="395.2" y="5237" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="398.23" y="5247.5" ></text>
</g>
<g >
<title>`llvm::OptimizationRemarkEmitterWrapperPass::runOnFunction(llvm: (1 samples, 0.02%)</title><rect x="687.4" y="5669" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="690.42" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (15 samples, 0.33%)</title><rect x="73.5" y="4549" width="3.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="76.51" y="4559.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::getModRefBehavior(llvm::ImmutableCallSite) (1 samples, 0.02%)</title><rect x="501.6" y="5525" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="504.60" y="5535.5" ></text>
</g>
<g >
<title>`AUGMENT-ENVIRONMENT-WITH-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="78.5" y="3893" width="0.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="81.47" y="3903.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (26 samples, 0.58%)</title><rect x="16.3" y="3525" width="6.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="19.27" y="3535.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="48.2" y="5013" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="51.16" y="5023.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="59.4" y="2757" width="0.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="62.40" y="2767.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2485" width="3.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="57.17" y="2495.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (23 samples, 0.51%)</title><rect x="610.1" y="5621" width="6.0" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="613.06" y="5631.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="3093" width="3.4" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="57.17" y="3103.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (12 samples, 0.27%)</title><rect x="717.7" y="5749" width="3.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="720.74" y="5759.5" ></text>
</g>
<g >
<title>`GENERATE-CATCH-LANDING-PAD^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="345.6" y="5221" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="348.57" y="5231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="4037" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="131.65" y="4047.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2581" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="73.63" y="2591.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="277" width="1.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="59.52" y="287.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="1621" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="73.63" y="1631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (8 samples, 0.18%)</title><rect x="78.5" y="3941" width="2.1" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="81.47" y="3951.5" ></text>
</g>
<g >
<title>`IRC-BEGIN-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="333.3" y="5061" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="336.29" y="5071.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="2517" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="64.75" y="2527.5" ></text>
</g>
<g >
<title>`CALCULATE-FASTGF-DISPATCH-FUNCTION^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.2" y="5525" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="738.25" y="5535.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="516.5" y="5525" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="519.50" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="725" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="68.93" y="735.5" ></text>
</g>
<g >
<title>`GC_acquire_mark_lock (1 samples, 0.02%)</title><rect x="125.8" y="5589" width="0.2" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="128.78" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1925" width="0.3" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="68.93" y="1935.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="40.6" y="4021" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="43.58" y="4031.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="506.8" y="5477" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="509.83" y="5487.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="53.4" y="3093" width="0.8" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="56.38" y="3103.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="583.9" y="5605" width="0.3" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="586.93" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.04%)</title><rect x="174.4" y="5349" width="0.5" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="177.39" y="5359.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2149" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="65.27" y="2159.5" ></text>
</g>
<g >
<title>`IRC-CREATE-CALL^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="363.9" y="5317" width="0.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="366.87" y="5327.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="71.4" y="3749" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="74.42" y="3759.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="534.3" y="5573" width="0.2" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="537.27" y="5583.5" ></text>
</g>
<g >
<title>`MAKE-RETURN-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="149.6" y="5061" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="152.56" y="5071.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="97.3" y="4277" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="100.29" y="4287.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T GLOBAL-FUNCTION-INFO))^METHOD (1 samples, 0.02%)</title><rect x="34.3" y="4453" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="37.31" y="4463.5" ></text>
</g>
<g >
<title>`llvmo::DILocation_O::make(llvm::LLVMContext&amp;, unsigned int, uns (3 samples, 0.07%)</title><rect x="315.8" y="5253" width="0.8" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="318.78" y="5263.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENCLOSE-INSTRUCTIO (1 samples, 0.02%)</title><rect x="58.1" y="933" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="61.09" y="943.5" ></text>
</g>
<g >
<title>`llvm::APInt::APInt(llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="585.8" y="5525" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="588.76" y="5535.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="419.5" y="5525" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="422.54" y="5535.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (3 samples, 0.07%)</title><rect x="36.7" y="4917" width="0.7" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="39.66" y="4927.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIndexedOffsetInType(llvm::Type*, llvm::Arr (1 samples, 0.02%)</title><rect x="623.1" y="5557" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="626.13" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.5" y="4661" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="139.49" y="4671.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (11 samples, 0.24%)</title><rect x="474.4" y="5557" width="2.9" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="477.42" y="5567.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="400.7" y="5429" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="403.72" y="5439.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="135.4" y="4181" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="138.45" y="4191.5" ></text>
</g>
<g >
<title>`%CLOSURE-WITH-SLOTS%.OFFSET-OF[N]/T*^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="186.7" y="5573" width="0.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="189.67" y="5583.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="16.8" y="2469" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="19.80" y="2479.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.02%)</title><rect x="228.0" y="5589" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="230.97" y="5599.5" ></text>
</g>
<g >
<title>`GC_allocobj (2 samples, 0.04%)</title><rect x="173.1" y="5173" width="0.5" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="176.08" y="5183.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm (1 samples, 0.02%)</title><rect x="314.5" y="5189" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="317.47" y="5199.5" ></text>
</g>
<g >
<title>`wrapped_Create_llvm__LLVMContext_const_llvm__Twine_llvm__Functi (1 samples, 0.02%)</title><rect x="321.0" y="5237" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="324.01" y="5247.5" ></text>
</g>
<g >
<title>`TREAT-AS-SPECIAL-OPERATOR-P^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="97.0" y="5109" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="100.03" y="5119.5" ></text>
</g>
<g >
<title>0x10d596094 (9 samples, 0.20%)</title><rect x="24.6" y="4725" width="2.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="27.64" y="4735.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="62.8" y="1205" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="65.79" y="1215.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (8 samples, 0.18%)</title><rect x="63.3" y="2789" width="2.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="66.32" y="2799.5" ></text>
</g>
<g >
<title>`llvm::PredIteratorCache::GetPreds(llvm::BasicBlock*) (1 samples, 0.02%)</title><rect x="568.5" y="5541" width="0.3" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="571.51" y="5551.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute (1 samples, 0.02%)</title><rect x="699.2" y="5621" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="702.18" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-FUNCTION^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="773" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="61.35" y="783.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="506.3" y="5413" width="0.3" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="509.31" y="5423.5" ></text>
</g>
<g >
<title>`core::core__clock_gettime_nanoseconds() (1 samples, 0.02%)</title><rect x="183.5" y="5605" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="186.54" y="5615.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.02%)</title><rect x="375.1" y="5237" width="0.3" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="378.11" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.8" y="1477" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="65.79" y="1487.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="228.8" y="5589" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="231.75" y="5599.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (2 samples, 0.04%)</title><rect x="224.0" y="5493" width="0.6" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="227.05" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4293" width="0.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="132.96" y="4303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="4965" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="130.35" y="4975.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (25 samples, 0.55%)</title><rect x="16.3" y="3157" width="6.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="19.27" y="3167.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="109.3" y="5541" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="112.31" y="5551.5" ></text>
</g>
<g >
<title>`llvm::CallSiteBase&lt;llvm::Function, llvm::BasicBlock, llvm::Valu (1 samples, 0.02%)</title><rect x="566.4" y="5317" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="569.42" y="5327.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="62.5" y="3077" width="0.6" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="65.53" y="3087.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.9" y="3141" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="73.89" y="3151.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="1333" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="20.58" y="1343.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3253" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="100.29" y="3263.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="19.1" y="1925" width="0.6" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="22.15" y="1935.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (18 samples, 0.40%)</title><rect x="1184.5" y="6309" width="4.7" height="15.0" fill="rgb(235,100,100)" rx="2" ry="2" />
<text  x="1187.51" y="6319.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="117" width="1.1" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="59.52" y="127.5" ></text>
</g>
<g >
<title>`COMPILER-MACRO-FUNCTION^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.8" y="5525" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="100.81" y="5535.5" ></text>
</g>
<g >
<title>`wrapped_APInt_O__makeAPIntWidth_core__Integer_spuintbool (1 samples, 0.02%)</title><rect x="402.5" y="5429" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="405.55" y="5439.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="172.8" y="5285" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="175.82" y="5295.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::MachineInstr const*, llvm::Lex (1 samples, 0.02%)</title><rect x="58.6" y="757" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="61.61" y="767.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="5141" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="100.29" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="70.6" y="3141" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="73.63" y="3151.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.02%)</title><rect x="206.8" y="5557" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="209.80" y="5567.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (6 samples, 0.13%)</title><rect x="57.8" y="1381" width="1.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="60.83" y="1391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="70.9" y="3093" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="73.89" y="3103.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (2 samples, 0.04%)</title><rect x="397.8" y="5317" width="0.6" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="400.84" y="5327.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1829" width="1.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="57.17" y="1839.5" ></text>
</g>
<g >
<title>`FUNCTION-DESCRIPTION-NAME^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="328.6" y="5285" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="331.59" y="5295.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="12.1" y="4469" width="0.3" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="15.09" y="4479.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (3 samples, 0.07%)</title><rect x="208.4" y="5445" width="0.7" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="211.37" y="5455.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="455.1" y="5637" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="458.08" y="5647.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="95.2" y="4389" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="98.20" y="4399.5" ></text>
</g>
<g >
<title>`core::core__vaslist_rewind(gctools::smart_ptr&lt;core::Vaslist&gt;) (1 samples, 0.02%)</title><rect x="195.0" y="5605" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="198.04" y="5615.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (52 samples, 1.15%)</title><rect x="81.3" y="4565" width="13.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="84.35" y="4575.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2773" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="65.27" y="2783.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="1125" width="1.1" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="59.52" y="1135.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="2005" width="1.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="60.57" y="2015.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'FUNCTION) T T T) (13 samples, 0.29%)</title><rect x="54.2" y="2965" width="3.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="57.17" y="2975.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="2789" width="2.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="68.41" y="2799.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="64.4" y="677" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="67.36" y="687.5" ></text>
</g>
<g >
<title>`core::core__make_simple_vector_t(unsigned long, gctools::smart_ (1 samples, 0.02%)</title><rect x="370.4" y="5285" width="0.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="373.40" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (30 samples, 0.66%)</title><rect x="27.5" y="4869" width="7.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="30.51" y="4879.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((SPECIAL-VARIABLE-INFO T T T (30 samples, 0.66%)</title><rect x="27.5" y="4693" width="7.9" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="30.51" y="4703.5" ></text>
</g>
<g >
<title>`PROCESS-LAMBDA-LIST^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2885" width="3.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="57.17" y="2895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="126.8" y="5525" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="129.82" y="5535.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (1 samples, 0.02%)</title><rect x="586.0" y="5557" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="589.02" y="5567.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="65.1" y="2085" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="68.15" y="2095.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="97.0" y="5061" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="100.03" y="5071.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (57 samples, 1.26%)</title><rect x="545.2" y="5509" width="14.9" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="548.25" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="12.4" y="4597" width="1.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="15.35" y="4607.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (1 samples, 0.02%)</title><rect x="203.1" y="5317" width="0.3" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="206.14" y="5327.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="136.2" y="3669" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="139.23" y="3679.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="61.7" y="1781" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="64.75" y="1791.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="413.3" y="5381" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="416.26" y="5391.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="242.1" y="5541" width="0.2" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="245.08" y="5551.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="437.0" y="5461" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="440.05" y="5471.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4165" width="1.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="26.59" y="4175.5" ></text>
</g>
<g >
<title>`GC_push_marked (5 samples, 0.11%)</title><rect x="787.0" y="5605" width="1.3" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="790.00" y="5615.5" ></text>
</g>
<g >
<title>`clear_marks_for_block (1 samples, 0.02%)</title><rect x="743.9" y="5637" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="746.87" y="5647.5" ></text>
</g>
<g >
<title>`POSITION-IF-NOT^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="12.6" y="4181" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="15.61" y="4191.5" ></text>
</g>
<g >
<title>`llvm::isInstructionTriviallyDead(llvm::Instruction*, llvm::Targ (1 samples, 0.02%)</title><rect x="521.2" y="5637" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="524.20" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (36 samples, 0.80%)</title><rect x="14.2" y="4325" width="9.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="17.18" y="4335.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="366.5" y="5365" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="369.48" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="3061" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="64.22" y="3071.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="94.9" y="4437" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="97.94" y="4447.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.04%)</title><rect x="290.4" y="5461" width="0.6" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="293.43" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="2437" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="65.27" y="2447.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2789" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="73.63" y="2799.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="21.5" y="1349" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="24.50" y="1359.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="713.6" y="5605" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="716.56" y="5615.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_package_T_sp (1 samples, 0.02%)</title><rect x="15.7" y="3381" width="0.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="18.75" y="3391.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="39.5" y="4133" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="42.53" y="4143.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (4 samples, 0.09%)</title><rect x="557.0" y="5397" width="1.1" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="560.01" y="5407.5" ></text>
</g>
<g >
<title>`llvm::PointerType::get(llvm::Type*, unsigned int) (1 samples, 0.02%)</title><rect x="503.2" y="5397" width="0.2" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="506.17" y="5407.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((MULTIPLE-TO-FIXED- (6 samples, 0.13%)</title><rect x="350.0" y="5301" width="1.6" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="353.02" y="5311.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (3 samples, 0.07%)</title><rect x="85.8" y="4421" width="0.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="88.79" y="4431.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (181 samples, 4.01%)</title><rect x="49.5" y="5093" width="47.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="52.46" y="5103.5" >`CON..</text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="54.2" y="869" width="1.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="57.17" y="879.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="100.7" y="5589" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="103.69" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="16.3" y="2181" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="19.27" y="2191.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::reference_raw_(core::Symbol_O*, gcto (1 samples, 0.02%)</title><rect x="97.8" y="5493" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="100.81" y="5503.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="255.9" y="5541" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="258.93" y="5551.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (2 samples, 0.04%)</title><rect x="323.6" y="4997" width="0.5" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="326.62" y="5007.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="22.8" y="3237" width="0.3" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="25.81" y="3247.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.02%)</title><rect x="26.7" y="4581" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="29.73" y="4591.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1381" width="1.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="57.17" y="1391.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="663.9" y="5461" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="666.90" y="5471.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="40.6" y="4037" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="43.58" y="4047.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="677" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="65.53" y="687.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="23.9" y="3765" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="26.85" y="3775.5" ></text>
</g>
<g >
<title>`IRC-BIT-CAST^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="400.5" y="5445" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="403.46" y="5455.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorBase::grow_pod(void*, unsigned long, unsigned  (2 samples, 0.04%)</title><rect x="460.6" y="5605" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="463.57" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (2 samples, 0.04%)</title><rect x="64.4" y="997" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="67.36" y="1007.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (36 samples, 0.80%)</title><rect x="14.2" y="4181" width="9.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="17.18" y="4191.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (4 samples, 0.09%)</title><rect x="372.0" y="5365" width="1.0" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="374.97" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1701" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="24.50" y="1711.5" ></text>
</g>
<g >
<title>`llvm::TrackingMDRef::operator=(llvm::TrackingMDRef&amp;&amp;) (1 samples, 0.02%)</title><rect x="333.0" y="4981" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="336.03" y="4991.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (36 samples, 0.80%)</title><rect x="14.2" y="4037" width="9.4" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="17.18" y="4047.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="3077" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="66.05" y="3087.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="24.6" y="4277" width="1.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="27.64" y="4287.5" ></text>
</g>
<g >
<title>0x10d596094 (25 samples, 0.55%)</title><rect x="16.3" y="3285" width="6.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="19.27" y="3295.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="17.3" y="1797" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="20.32" y="1807.5" ></text>
</g>
<g >
<title>`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std:: (1 samples, 0.02%)</title><rect x="120.6" y="5205" width="0.2" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="123.55" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="64.1" y="1397" width="0.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="67.10" y="1407.5" ></text>
</g>
<g >
<title>`llvm::Instruction::isAtomic() const (1 samples, 0.02%)</title><rect x="514.4" y="5621" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="517.41" y="5631.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (2 samples, 0.04%)</title><rect x="132.6" y="4789" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="135.57" y="4799.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (36 samples, 0.80%)</title><rect x="14.2" y="4085" width="9.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="17.18" y="4095.5" ></text>
</g>
<g >
<title>`GET-DILOCATION^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="291.5" y="5429" width="0.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="294.48" y="5439.5" ></text>
</g>
<g >
<title>`GC_mark_local (2 samples, 0.04%)</title><rect x="283.4" y="5381" width="0.5" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="286.37" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="2101" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="65.27" y="2111.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="660.2" y="5429" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="663.24" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="70.6" y="2805" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="73.63" y="2815.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="622.9" y="5525" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="625.87" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="2437" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="65.53" y="2447.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="40.6" y="4085" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="43.58" y="4095.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="385.0" y="5397" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="388.04" y="5407.5" ></text>
</g>
<g >
<title>`core::load_macho_symbol_table(bool, char const*, unsigned long, (1 samples, 0.02%)</title><rect x="732.4" y="5813" width="0.2" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="735.37" y="5823.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (71 samples, 1.57%)</title><rect x="52.9" y="3717" width="18.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="55.86" y="3727.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="1829" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="65.01" y="1839.5" ></text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="379.8" y="5413" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="382.81" y="5423.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="16.3" y="2069" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="19.27" y="2079.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="11.3" y="4613" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="14.31" y="4623.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_get_ClassHolder_sp (1 samples, 0.02%)</title><rect x="120.3" y="5621" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="123.29" y="5631.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="56.5" y="1477" width="1.1" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="59.52" y="1487.5" ></text>
</g>
<g >
<title>`CONS-LENGTH^CORE^FN^^ (1 samples, 0.02%)</title><rect x="158.4" y="5397" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="161.45" y="5407.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="168.1" y="4965" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="171.12" y="4975.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (2 samples, 0.04%)</title><rect x="68.8" y="2373" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="71.80" y="2383.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="698.1" y="5541" width="0.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="701.14" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2021" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="73.63" y="2031.5" ></text>
</g>
<g >
<title>`%SADD.WITH-OVERFLOW^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="292.5" y="5445" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="295.52" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (71 samples, 1.57%)</title><rect x="52.9" y="3573" width="18.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="55.86" y="3583.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;std::__1::pair&lt;llvm::BasicBlock*, llvm (1 samples, 0.02%)</title><rect x="537.7" y="5557" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="540.67" y="5567.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="131.0" y="4517" width="0.3" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="134.01" y="4527.5" ></text>
</g>
<g >
<title>`llvm::Value::setValueName(llvm::StringMapEntry&lt;llvm::Value*&gt;*) (1 samples, 0.02%)</title><rect x="349.2" y="5125" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="352.23" y="5135.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (30 samples, 0.66%)</title><rect x="27.5" y="4773" width="7.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="30.51" y="4783.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.3" y="5125" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="100.29" y="5135.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignmentInfo(llvm::AlignTypeEnum, unsigne (1 samples, 0.02%)</title><rect x="491.4" y="5605" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="494.41" y="5615.5" ></text>
</g>
<g >
<title>`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="694.5" y="5525" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="697.48" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="70.6" y="2373" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="73.63" y="2383.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="310.3" y="5413" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="313.29" y="5423.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="205.0" y="5573" width="0.2" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="207.97" y="5583.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::BasicBlock const*, std::__1::unique_ptr&lt;ll (1 samples, 0.02%)</title><rect x="534.5" y="5605" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="537.53" y="5615.5" ></text>
</g>
<g >
<title>`llvm::AliasSetTracker::addPointer(llvm::Value*, unsigned long l (2 samples, 0.04%)</title><rect x="522.8" y="5589" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="525.77" y="5599.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.02%)</title><rect x="548.6" y="5301" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="551.64" y="5311.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="69" width="1.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="57.17" y="79.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="3845" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="131.65" y="3855.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="66.2" y="2181" width="1.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="69.19" y="2191.5" ></text>
</g>
<g >
<title>`llvm::isMathLibCallNoop(llvm::CallSite, llvm::TargetLibraryInfo (1 samples, 0.02%)</title><rect x="679.8" y="5605" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="682.84" y="5615.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2869" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="63.18" y="2879.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="67.0" y="1509" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="69.97" y="1519.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm: (2 samples, 0.04%)</title><rect x="568.8" y="5525" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="571.77" y="5535.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (3 samples, 0.07%)</title><rect x="557.3" y="5365" width="0.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="560.27" y="5375.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2917" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="65.79" y="2927.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4245" width="23.0" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="52.46" y="4255.5" >`..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (1 samples, 0.02%)</title><rect x="17.6" y="1269" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="20.58" y="1279.5" ></text>
</g>
<g >
<title>`ltvc_toplevel_funcall (214 samples, 4.74%)</title><rect x="732.9" y="5749" width="55.9" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="735.90" y="5759.5" >`ltvc..</text>
</g>
<g >
<title>`GC_malloc_kind (5 samples, 0.11%)</title><rect x="422.9" y="5669" width="1.3" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="425.93" y="5679.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="338.8" y="5125" width="0.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="341.78" y="5135.5" ></text>
</g>
<g >
<title>`IRC-GEP-VARIABLE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="334.3" y="5109" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="337.34" y="5119.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="61.7" y="3269" width="0.8" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="64.75" y="3279.5" ></text>
</g>
<g >
<title>`COMPILER-MACRO-FUNCTION^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="12.9" y="4213" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="15.87" y="4223.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="12.4" y="4965" width="1.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="15.35" y="4975.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="338.8" y="5189" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="341.78" y="5199.5" ></text>
</g>
<g >
<title>`SAFE-CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1285" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="69.19" y="1295.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="67.5" y="1893" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="70.50" y="1903.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="23.1" y="3877" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="26.07" y="3887.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (91 samples, 2.02%)</title><rect x="12.4" y="5141" width="23.7" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="15.35" y="5151.5" >`..</text>
</g>
<g >
<title>`INSERT-INSTRUCTION-BETWEEN^CLEAVIR-IR^FN^^ (2 samples, 0.04%)</title><rect x="203.7" y="5605" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="206.66" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1493" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="65.53" y="1503.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (3 samples, 0.07%)</title><rect x="677.5" y="5605" width="0.8" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="680.49" y="5615.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="467.4" y="5509" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="470.36" y="5519.5" ></text>
</g>
<g >
<title>`llvm::Type::getPrimitiveSizeInBits() const (1 samples, 0.02%)</title><rect x="653.7" y="5573" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="656.71" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="63.6" y="2389" width="1.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="66.58" y="2399.5" ></text>
</g>
<g >
<title>`CONSP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="13.4" y="4469" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="16.40" y="4479.5" ></text>
</g>
<g >
<title>`SPECIALIZE^CLEAVIR-HIR-TO-MIR^((WRITE-CELL-INSTRUCTION CLASP T  (7 samples, 0.16%)</title><rect x="193.2" y="5589" width="1.8" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="196.21" y="5599.5" ></text>
</g>
<g >
<title>`COMPUTE-INSTRUCTION-OWNERS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (11 samples, 0.24%)</title><rect x="233.5" y="5605" width="2.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="236.46" y="5615.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="14.7" y="2773" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="17.70" y="2783.5" ></text>
</g>
<g >
<title>`GC_mark_some (3 samples, 0.07%)</title><rect x="323.4" y="5077" width="0.7" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="326.36" y="5087.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="3125" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="66.05" y="3135.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::visitPHINode(llvm::PHINode&amp;) (1 samples, 0.02%)</title><rect x="582.9" y="5637" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="585.88" y="5647.5" ></text>
</g>
<g >
<title>`core::cl__gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="101.0" y="5573" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="103.95" y="5583.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (109 samples, 2.41%)</title><rect x="49.5" y="4949" width="28.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="52.46" y="4959.5" >`F..</text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="170.2" y="5029" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="173.21" y="5039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (11 samples, 0.24%)</title><rect x="144.3" y="5461" width="2.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="147.33" y="5471.5" ></text>
</g>
<g >
<title>`llvm::DebugLoc::get() const (1 samples, 0.02%)</title><rect x="728.7" y="5653" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="731.72" y="5663.5" ></text>
</g>
<g >
<title>`OPTIMIZED-LEXICAL-LOCATION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="138.6" y="4741" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="141.58" y="4751.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="322.8" y="5237" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="325.84" y="5247.5" ></text>
</g>
<g >
<title>`llvm::Module::getDataLayout() const (1 samples, 0.02%)</title><rect x="508.9" y="5589" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="511.92" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4101" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="138.19" y="4111.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1669" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="65.53" y="1679.5" ></text>
</g>
<g >
<title>`analyzeGlobalAux(llvm::Value const*, llvm::GlobalStatus&amp;, llvm: (2 samples, 0.04%)</title><rect x="592.0" y="5621" width="0.6" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="595.03" y="5631.5" ></text>
</g>
<g >
<title>`GC_allocobj (2 samples, 0.04%)</title><rect x="171.8" y="5205" width="0.5" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="174.78" y="5215.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="376.9" y="5381" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="379.94" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="70.6" y="2469" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="73.63" y="2479.5" ></text>
</g>
<g >
<title>`IN^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="307.2" y="5461" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="310.16" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="55.5" y="1829" width="2.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="58.48" y="1839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4469" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="139.23" y="4479.5" ></text>
</g>
<g >
<title>`dlopen_internal (1 samples, 0.02%)</title><rect x="788.8" y="5813" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="791.83" y="5823.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoBase&lt;llvm::BasicBlock, llvm::Loop&gt;::analyze(llvm: (8 samples, 0.18%)</title><rect x="685.1" y="5653" width="2.1" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="688.07" y="5663.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="77.2" y="4213" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="80.17" y="4223.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::alias(llvm::MemoryLocation const&amp;, llvm: (5 samples, 0.11%)</title><rect x="558.8" y="5493" width="1.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="561.84" y="5503.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="77.2" y="4245" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="80.17" y="4255.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2949" width="1.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="60.57" y="2959.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.02%)</title><rect x="281.5" y="5557" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="284.54" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.5" y="2021" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="65.53" y="2031.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="420.6" y="5557" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="423.58" y="5567.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1333" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="68.93" y="1343.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="14.7" y="2341" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="17.70" y="2351.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="733.2" y="5669" width="0.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="736.16" y="5679.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2549" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="65.53" y="2559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (46 samples, 1.02%)</title><rect x="159.5" y="5237" width="12.0" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="162.49" y="5247.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="11.3" y="4565" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="14.31" y="4575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4085" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="137.93" y="4095.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="186.2" y="5429" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="189.15" y="5439.5" ></text>
</g>
<g >
<title>`core::parse_ltvc_toplevel_funcall(gctools::GCRootsInModule*, gc (2,981 samples, 66.02%)</title><rect x="10.0" y="6245" width="779.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="13.00" y="6255.5" >`core::parse_ltvc_toplevel_funcall(gctools::GCRootsInModule*, gc</text>
</g>
<g >
<title>`llvm::IntegerType::get(llvm::LLVMContext&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="611.1" y="5573" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="614.11" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="64.1" y="1797" width="1.0" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="67.10" y="1807.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (461 samples, 10.21%)</title><rect x="295.7" y="5509" width="120.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="298.66" y="5519.5" >`TRANSLATE-SIMP..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="3061" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="64.75" y="3071.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1429" width="1.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="57.17" y="1439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (75 samples, 1.66%)</title><rect x="127.6" y="5541" width="19.6" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="130.61" y="5551.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="965" width="1.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="58.48" y="975.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="151.7" y="5333" width="0.2" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="154.65" y="5343.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="142.8" y="4997" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="145.77" y="5007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (11 samples, 0.24%)</title><rect x="144.3" y="5429" width="2.9" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="147.33" y="5439.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4213" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="100.29" y="4223.5" ></text>
</g>
<g >
<title>`IRC-TMV-NRET^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="344.3" y="5237" width="0.5" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="347.27" y="5247.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.02%)</title><rect x="297.7" y="5429" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="300.75" y="5439.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (34 samples, 0.75%)</title><rect x="36.7" y="5013" width="8.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="39.66" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (43 samples, 0.95%)</title><rect x="128.4" y="5157" width="11.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="131.39" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4613" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="135.31" y="4623.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.07%)</title><rect x="65.4" y="2389" width="0.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="68.41" y="2399.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const (1 samples, 0.02%)</title><rect x="705.7" y="5605" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="708.72" y="5615.5" ></text>
</g>
<g >
<title>`EXPANDER^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="69" width="1.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="58.48" y="79.5" ></text>
</g>
<g >
<title>`core::cl__load(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (217 samples, 4.81%)</title><rect x="732.4" y="5877" width="56.7" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="735.37" y="5887.5" >`core:..</text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="52.6" y="3669" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="55.60" y="3679.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.6" y="5045" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="100.55" y="5055.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="345.6" y="5157" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="348.57" y="5167.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (18 samples, 0.40%)</title><rect x="17.3" y="2277" width="4.7" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="20.32" y="2287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4453" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="136.62" y="4463.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.02%)</title><rect x="313.7" y="5413" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="316.69" y="5423.5" ></text>
</g>
<g >
<title>`llvm::GlobalValue::getGlobalIdentifier() const (1 samples, 0.02%)</title><rect x="731.1" y="5669" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="734.07" y="5679.5" ></text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::isFnAttrDi (1 samples, 0.02%)</title><rect x="543.4" y="5509" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="546.42" y="5519.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="117.9" y="5589" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="120.94" y="5599.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="419.3" y="5493" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="422.28" y="5503.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="136.0" y="4565" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="138.97" y="4575.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::ModuleHandle (2 samples, 0.04%)</title><rect x="58.6" y="965" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="61.61" y="975.5" ></text>
</g>
<g >
<title>`MAKE-SETQ-AST^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="78.0" y="4597" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="80.95" y="4607.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm:: (1 samples, 0.02%)</title><rect x="530.3" y="5605" width="0.3" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="533.35" y="5615.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="49.2" y="5013" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="52.20" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4597" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="139.23" y="4607.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.9" y="933" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="67.88" y="943.5" ></text>
</g>
<g >
<title>`wrapped_cl__make_list_Fixnum_spT_sp (2 samples, 0.04%)</title><rect x="389.7" y="5397" width="0.6" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="392.74" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.0" y="2869" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="65.01" y="2879.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(long long) (1 samples, 0.02%)</title><rect x="152.2" y="5301" width="0.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="155.17" y="5311.5" ></text>
</g>
<g >
<title>`void llvm::BitstreamWriter::EmitRecord&lt;llvm::SmallVector&lt;unsign (1 samples, 0.02%)</title><rect x="723.0" y="5637" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="725.97" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="2085" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="64.22" y="2095.5" ></text>
</g>
<g >
<title>`FIND-SIMILAR^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="336.2" y="5141" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="339.17" y="5151.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="34.0" y="4325" width="0.3" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="37.04" y="4335.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::Argument_O&gt; gctools::GCObjectAppropri (1 samples, 0.02%)</title><rect x="367.3" y="5333" width="0.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="370.27" y="5343.5" ></text>
</g>
<g >
<title>`client_validate (1 samples, 0.02%)</title><rect x="284.4" y="5573" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="287.42" y="5583.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::Instruction&gt;, llvm:: (7 samples, 0.16%)</title><rect x="717.7" y="5621" width="1.9" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="720.74" y="5631.5" ></text>
</g>
<g >
<title>`VALID-KEYWORDS-FROM-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="93.6" y="4453" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="96.63" y="4463.5" ></text>
</g>
<g >
<title>`client_validate (1 samples, 0.02%)</title><rect x="733.4" y="3989" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="736.42" y="3999.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (7 samples, 0.16%)</title><rect x="551.3" y="5365" width="1.8" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="554.26" y="5375.5" ></text>
</g>
<g >
<title>`llvm::GVN::ValueTable::phiTranslate(llvm::BasicBlock const*, ll (1 samples, 0.02%)</title><rect x="577.9" y="5589" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="580.92" y="5599.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (3 samples, 0.07%)</title><rect x="510.5" y="5509" width="0.8" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="513.49" y="5519.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="338.8" y="5141" width="0.2" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="341.78" y="5151.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(l (1 samples, 0.02%)</title><rect x="451.9" y="5605" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="454.94" y="5615.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (2 samples, 0.04%)</title><rect x="182.0" y="5429" width="0.5" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="184.97" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="68.0" y="2613" width="0.5" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="71.02" y="2623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (11 samples, 0.24%)</title><rect x="148.3" y="5221" width="2.8" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="151.25" y="5231.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="346.9" y="5269" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="349.88" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((LEXICAL-VARIABLE-INFO T T T (2 samples, 0.04%)</title><rect x="67.5" y="1925" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="70.50" y="1935.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="629.9" y="5605" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="632.92" y="5615.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="53.9" y="2773" width="0.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="56.91" y="2783.5" ></text>
</g>
<g >
<title>`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="401.0" y="5253" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="403.98" y="5263.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="333.0" y="5029" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="336.03" y="5039.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (6 samples, 0.13%)</title><rect x="230.3" y="5557" width="1.6" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="233.32" y="5567.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="321.0" y="5205" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="324.01" y="5215.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="52.9" y="3285" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="55.86" y="3295.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="60.4" y="2997" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="63.44" y="3007.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2533" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="17.70" y="2543.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="400.5" y="5397" width="0.2" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="403.46" y="5407.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="74.6" y="3829" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="77.55" y="3839.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="56.5" y="1269" width="1.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="59.52" y="1279.5" ></text>
</g>
<g >
<title>`COMPUTE-APPLICABLE-METHODS^COMMON-LISP^FN^^ (11 samples, 0.24%)</title><rect x="104.3" y="5605" width="2.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="107.35" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="1861" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="73.63" y="1871.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.02%)</title><rect x="38.0" y="4597" width="0.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="40.96" y="4607.5" ></text>
</g>
<g >
<title>`PRIMITIVE-PROPERTIES^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="351.3" y="5237" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="354.32" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT-FUNCTION^CLEAVIR-GENERATE-AST^((GLOBAL-FUNCTION-INFO T  (1 samples, 0.02%)</title><rect x="96.2" y="4853" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="99.25" y="4863.5" ></text>
</g>
<g >
<title>`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^ (3 samples, 0.07%)</title><rect x="734.2" y="5701" width="0.8" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="737.20" y="5711.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (2 samples, 0.04%)</title><rect x="789.3" y="6341" width="0.6" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="792.35" y="6351.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (10 samples, 0.22%)</title><rect x="571.6" y="5541" width="2.7" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="574.64" y="5551.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="136.2" y="3589" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="139.23" y="3599.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (3 samples, 0.07%)</title><rect x="327.3" y="5253" width="0.8" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="330.28" y="5263.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (3 samples, 0.07%)</title><rect x="557.3" y="5381" width="0.8" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="560.27" y="5391.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::GetNonLocalInfoForBlock(llvm::In (8 samples, 0.18%)</title><rect x="565.1" y="5541" width="2.1" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="568.11" y="5551.5" ></text>
</g>
<g >
<title>`core::LambdaListHandler_O::createBindingsInScopeVaList(unsigned (1 samples, 0.02%)</title><rect x="393.7" y="5317" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="396.66" y="5327.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="67.2" y="1221" width="0.3" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="70.24" y="1231.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="901" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="20.58" y="911.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4181" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="736.42" y="4191.5" ></text>
</g>
<g >
<title>`TREAT-AS-SPECIAL-OPERATOR-P^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="15.5" y="3381" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="18.49" y="3391.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2645" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="65.27" y="2655.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute (1 samples, 0.02%)</title><rect x="683.0" y="5589" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="685.98" y="5599.5" ></text>
</g>
<g >
<title>`COMPUTE-APPLICABLE-METHODS^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="31.4" y="4357" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="34.43" y="4367.5" ></text>
</g>
<g >
<title>`llvm::SmallVector&lt;unsigned int, 4u&gt;::SmallVector(llvm::SmallVec (1 samples, 0.02%)</title><rect x="542.1" y="5525" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="545.11" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4581" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="137.14" y="4591.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.02%)</title><rect x="62.0" y="341" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="65.01" y="351.5" ></text>
</g>
<g >
<title>`core::cl__make_list(gctools::smart_ptr&lt;core::Fixnum_I&gt;, gctools (2 samples, 0.04%)</title><rect x="389.7" y="5381" width="0.6" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="392.74" y="5391.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="68.0" y="2677" width="0.5" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="71.02" y="2687.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="66.2" y="1717" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="69.19" y="1727.5" ></text>
</g>
<g >
<title>`core::Function_O::functionName() const (1 samples, 0.02%)</title><rect x="292.8" y="5413" width="0.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="295.78" y="5423.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="255.9" y="5557" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="258.93" y="5567.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIntPtrType(llvm::Type*) const (1 samples, 0.02%)</title><rect x="559.1" y="5381" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="562.10" y="5391.5" ></text>
</g>
<g >
<title>`llvm::LibCallSimplifier::optimizeCall(llvm::CallInst*) (10 samples, 0.22%)</title><rect x="484.6" y="5573" width="2.6" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="487.61" y="5583.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (1 samples, 0.02%)</title><rect x="398.4" y="5333" width="0.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="401.37" y="5343.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="145.6" y="5077" width="0.3" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="148.64" y="5087.5" ></text>
</g>
<g >
<title>`client_validate (1 samples, 0.02%)</title><rect x="206.5" y="5541" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="209.54" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="65.9" y="1669" width="0.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="68.93" y="1679.5" ></text>
</g>
<g >
<title>`wrapped_cl__last_List_spInteger_sp (1 samples, 0.02%)</title><rect x="735.2" y="5733" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="738.25" y="5743.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2981" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="64.75" y="2991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4069" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="139.76" y="4079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="131.8" y="4629" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="134.79" y="4639.5" ></text>
</g>
<g >
<title>`IRC-CALCULATE-REAL-ARGS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="343.0" y="5253" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="345.96" y="5263.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="324.4" y="5237" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="327.41" y="5247.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::untrack(void*, llvm::Metadata&amp;) (1 samples, 0.02%)</title><rect x="632.5" y="5605" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="635.54" y="5615.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2965" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="17.70" y="2975.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.04%)</title><rect x="236.6" y="5573" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="239.59" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="60.2" y="2677" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="63.18" y="2687.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="292.5" y="5333" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="295.52" y="5343.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="629.4" y="5589" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="632.40" y="5599.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="189.0" y="5541" width="0.5" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="192.03" y="5551.5" ></text>
</g>
<g >
<title>`FAST-SUBTYPEP^CORE^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1301" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="69.19" y="1311.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (133 samples, 2.95%)</title><rect x="749.6" y="5589" width="34.8" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="752.62" y="5599.5" >`G..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="565" width="1.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="58.48" y="575.5" ></text>
</g>
<g >
<title>`REGISTER-FUNCTION^LITERAL^FN^^ (2 samples, 0.04%)</title><rect x="98.1" y="5685" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="101.08" y="5695.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="60.4" y="3029" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="63.44" y="3039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="151.4" y="5317" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="154.39" y="5327.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="458.7" y="5589" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="461.74" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (1 samples, 0.02%)</title><rect x="69.8" y="3285" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="72.85" y="3295.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPreferredAlignment(llvm::GlobalVariable co (1 samples, 0.02%)</title><rect x="585.5" y="5525" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="588.50" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4501" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="141.85" y="4511.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="23.6" y="4357" width="1.0" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="26.59" y="4367.5" ></text>
</g>
<g >
<title>`IN^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="328.3" y="5285" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="331.33" y="5295.5" ></text>
</g>
<g >
<title>`llvm::scc_iterator&lt;llvm::Function const*, llvm::GraphTraits&lt;llv (1 samples, 0.02%)</title><rect x="603.3" y="5589" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="606.27" y="5599.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="390.3" y="5397" width="0.2" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="393.27" y="5407.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="131.0" y="4533" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="134.01" y="4543.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (5 samples, 0.11%)</title><rect x="54.2" y="1237" width="1.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="57.17" y="1247.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="3141" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="62.40" y="3151.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (2 samples, 0.04%)</title><rect x="146.2" y="5013" width="0.5" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="149.16" y="5023.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="626.8" y="5573" width="0.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="629.79" y="5583.5" ></text>
</g>
<g >
<title>0x10d596094 (26 samples, 0.58%)</title><rect x="16.3" y="3685" width="6.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="19.27" y="3695.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (3 samples, 0.07%)</title><rect x="210.5" y="5429" width="0.7" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="213.46" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'CLEAVIR-PRIMOP:M (1 samples, 0.02%)</title><rect x="62.3" y="3013" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="65.27" y="3023.5" ></text>
</g>
<g >
<title>`sprintf (1 samples, 0.02%)</title><rect x="139.4" y="5013" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="142.37" y="5023.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="97.3" y="4405" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="100.29" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.04%)</title><rect x="131.3" y="4501" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="134.27" y="4511.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (1 samples, 0.02%)</title><rect x="460.0" y="5605" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="463.05" y="5615.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="441.2" y="5589" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="444.23" y="5599.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (1 samples, 0.02%)</title><rect x="120.6" y="5301" width="0.2" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="123.55" y="5311.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="2949" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="65.01" y="2959.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="351.1" y="5205" width="0.2" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="354.06" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="181" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="61.35" y="191.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="461.6" y="5525" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="464.61" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4357" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="138.71" y="4367.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="366.0" y="5349" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="368.96" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1493" width="1.0" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="58.48" y="1503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4021" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="138.19" y="4031.5" ></text>
</g>
<g >
<title>`llvmo::Pass_O::externalObject() const (1 samples, 0.02%)</title><rect x="85.3" y="4501" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="88.27" y="4511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4357" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="136.36" y="4367.5" ></text>
</g>
<g >
<title>`GET-DILOCATION^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="326.5" y="5269" width="0.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="329.50" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.6" y="5093" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="100.55" y="5103.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((EQ-INSTRUCTION T T (1 samples, 0.02%)</title><rect x="292.3" y="5461" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="295.26" y="5471.5" ></text>
</g>
<g >
<title>`core::Cache_O::vector_hash_key(gctools::Vec0&lt;gctools::smart_ptr (1 samples, 0.02%)</title><rect x="392.9" y="5349" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="395.88" y="5359.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (1 samples, 0.02%)</title><rect x="145.1" y="4901" width="0.3" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="148.12" y="4911.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="67.5" y="1573" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="70.50" y="1583.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="93.9" y="4453" width="0.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="96.89" y="4463.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (1 samples, 0.02%)</title><rect x="403.6" y="5269" width="0.3" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="406.59" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="2741" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="65.53" y="2751.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1301" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="65.79" y="1311.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="400.5" y="5429" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="403.46" y="5439.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="665.7" y="5557" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="668.73" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="137.8" y="4805" width="0.8" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="140.80" y="4815.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1269" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="68.93" y="1279.5" ></text>
</g>
<g >
<title>`runImpl(llvm::Function&amp;, llvm::SimplifyQuery const&amp;, llvm::Opti (13 samples, 0.29%)</title><rect x="594.4" y="5653" width="3.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="597.38" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((RETURN-FROM-AST T))^METHOD^^ (42 samples, 0.93%)</title><rect x="128.4" y="5045" width="11.0" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="131.39" y="5055.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="39.5" y="4149" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="42.53" y="4159.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2757" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="65.53" y="2767.5" ></text>
</g>
<g >
<title>`llvm::canConstantFoldCallTo(llvm::ImmutableCallSite, llvm::Func (1 samples, 0.02%)</title><rect x="616.1" y="5605" width="0.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="619.07" y="5615.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="21.2" y="1861" width="0.6" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="24.24" y="1871.5" ></text>
</g>
<g >
<title>`llvm::Value::deleteValue() (1 samples, 0.02%)</title><rect x="697.1" y="5557" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="700.09" y="5567.5" ></text>
</g>
<g >
<title>`llvm::APInt::APInt(unsigned int, unsigned long long, bool) (1 samples, 0.02%)</title><rect x="675.4" y="5557" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="678.40" y="5567.5" ></text>
</g>
<g >
<title>`std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::basi (1 samples, 0.02%)</title><rect x="40.6" y="3893" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="43.58" y="3903.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="41.1" y="4405" width="2.1" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="44.10" y="4415.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="16.8" y="2437" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="19.80" y="2447.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.1" y="3061" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="56.12" y="3071.5" ></text>
</g>
<g >
<title>0x10d596094 (6 samples, 0.13%)</title><rect x="24.6" y="4421" width="1.6" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="27.64" y="4431.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4485" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="736.42" y="4495.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="4757" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="100.55" y="4767.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::BasicBlock*&gt;::insert(llvm::BasicBlo (1 samples, 0.02%)</title><rect x="520.2" y="5637" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="523.16" y="5647.5" ></text>
</g>
<g >
<title>`void llvm::AAResults::addAAResult&lt;llvm::GlobalsAAResult&gt;(llvm:: (1 samples, 0.02%)</title><rect x="455.6" y="5653" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="458.60" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="52.6" y="3653" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="55.60" y="3663.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="68.5" y="2645" width="1.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="71.54" y="2655.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="734.2" y="5221" width="0.3" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="737.20" y="5231.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="68.5" y="2437" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="71.54" y="2447.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.02%)</title><rect x="473.1" y="5525" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="476.11" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="5413" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="100.29" y="5423.5" ></text>
</g>
<g >
<title>`OPTIMIZED-BASIC-BLOCK-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="281.5" y="5605" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="284.54" y="5615.5" ></text>
</g>
<g >
<title>`SortNonLocalDepInfoCache(std::__1::vector&lt;llvm::NonLocalDepEntr (1 samples, 0.02%)</title><rect x="564.6" y="5541" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="567.59" y="5551.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="733.9" y="5669" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="736.94" y="5679.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="419.3" y="5477" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="422.28" y="5487.5" ></text>
</g>
<g >
<title>`PROCESS-REST^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3781" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="100.29" y="3791.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="63.6" y="2597" width="1.8" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="66.58" y="2607.5" ></text>
</g>
<g >
<title>`RAW^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="13.4" y="4485" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="16.40" y="4495.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2069" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="65.27" y="2079.5" ></text>
</g>
<g >
<title>`GC_allocobj (4 samples, 0.09%)</title><rect x="423.2" y="5621" width="1.0" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="426.20" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (26 samples, 0.58%)</title><rect x="16.3" y="3349" width="6.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="19.27" y="3359.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.04%)</title><rect x="270.0" y="5573" width="0.6" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="273.04" y="5583.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;std::__1::pair&lt;llvm::Val (1 samples, 0.02%)</title><rect x="717.2" y="5669" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="720.22" y="5679.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (5 samples, 0.11%)</title><rect x="557.0" y="5429" width="1.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="560.01" y="5439.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4741" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="736.42" y="4751.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="71.4" y="3781" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="74.42" y="3791.5" ></text>
</g>
<g >
<title>`MAKE-FUNCTION-INFO^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="313.2" y="5413" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="316.17" y="5423.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (1 samples, 0.02%)</title><rect x="77.2" y="4133" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="80.17" y="4143.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="222.5" y="5541" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="225.48" y="5551.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::IntegerType_O&gt; gctools::GCObjectAppro (2 samples, 0.04%)</title><rect x="389.2" y="5397" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="392.22" y="5407.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-SIZE_T^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="334.1" y="5093" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="337.08" y="5103.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="143.0" y="5141" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="146.03" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="23.9" y="3797" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="26.85" y="3807.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (6 samples, 0.13%)</title><rect x="63.8" y="2341" width="1.6" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="66.84" y="2351.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET*) T T T))^ME (1 samples, 0.02%)</title><rect x="61.7" y="2693" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="64.75" y="2703.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (30 samples, 0.66%)</title><rect x="27.5" y="4805" width="7.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="30.51" y="4815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.0" y="4597" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="138.97" y="4607.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="24.6" y="4149" width="1.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="27.64" y="4159.5" ></text>
</g>
<g >
<title>`GC_mark_from (1 samples, 0.02%)</title><rect x="25.4" y="3781" width="0.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="28.42" y="3791.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="365.4" y="5221" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="368.44" y="5231.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2165" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="64.22" y="2175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((THE-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4533" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="137.40" y="4543.5" ></text>
</g>
<g >
<title>`IRC-FDEFINITION^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="339.6" y="5285" width="0.7" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="342.56" y="5295.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="308.2" y="5381" width="0.3" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="311.20" y="5391.5" ></text>
</g>
<g >
<title>`PROCESS-REQUIRED^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4933" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="100.29" y="4943.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldTerminator(llvm::BasicBlock*, bool, llvm::Tar (1 samples, 0.02%)</title><rect x="448.8" y="5621" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="451.81" y="5631.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="61.0" y="2581" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="63.96" y="2591.5" ></text>
</g>
<g >
<title>`WRITE-LITERAL-NODES-BYTE-CODE^LITERAL^FN^^ (14 samples, 0.31%)</title><rect x="421.9" y="5765" width="3.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="424.89" y="5775.5" ></text>
</g>
<g >
<title>`GC_clear_marks (1 samples, 0.02%)</title><rect x="299.3" y="5269" width="0.3" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="302.32" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (109 samples, 2.41%)</title><rect x="49.5" y="4981" width="28.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="52.46" y="4991.5" >`C..</text>
</g>
<g >
<title>`GC_collect_or_expand (4 samples, 0.09%)</title><rect x="234.5" y="5429" width="1.0" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="237.50" y="5439.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.02%)</title><rect x="141.5" y="5045" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="144.46" y="5055.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1813" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="65.01" y="1823.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3717" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="100.29" y="3727.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (17 samples, 0.38%)</title><rect x="198.4" y="5605" width="4.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="201.43" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4341" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="132.70" y="4351.5" ></text>
</g>
<g >
<title>`END-LOGICAL-BLOCK^CORE^FN^^ (1 samples, 0.02%)</title><rect x="735.5" y="5493" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="738.51" y="5503.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="734.2" y="5253" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="737.20" y="5263.5" ></text>
</g>
<g >
<title>`core::LambdaListHandler_O::createBindingsInScopeVaList(unsigned (1 samples, 0.02%)</title><rect x="342.2" y="5173" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="345.18" y="5183.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (10 samples, 0.22%)</title><rect x="369.1" y="5381" width="2.6" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="372.10" y="5391.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="5397" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="100.29" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (4 samples, 0.09%)</title><rect x="56.5" y="133" width="1.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="59.52" y="143.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'RETURN-FROM) T T (26 samples, 0.58%)</title><rect x="16.3" y="3589" width="6.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="19.27" y="3599.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="339.8" y="5237" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="342.83" y="5247.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="388.4" y="5349" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="391.44" y="5359.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="309.2" y="5429" width="0.6" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="312.25" y="5439.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (26 samples, 0.58%)</title><rect x="569.8" y="5589" width="6.8" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="572.81" y="5599.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.02%)</title><rect x="26.7" y="4597" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="29.73" y="4607.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="59.4" y="2949" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="62.40" y="2959.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.4" y="453" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="67.36" y="463.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="378.8" y="5381" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="381.77" y="5391.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="455.3" y="5589" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="458.34" y="5599.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::schedulePass(llvm::Pass*) (1 samples, 0.02%)</title><rect x="425.8" y="5669" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="428.81" y="5679.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm:: (19 samples, 0.42%)</title><rect x="500.8" y="5573" width="5.0" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="503.82" y="5583.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="320.7" y="5189" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="323.75" y="5199.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="397.3" y="5141" width="0.3" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="400.32" y="5151.5" ></text>
</g>
<g >
<title>`std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::basi (1 samples, 0.02%)</title><rect x="289.4" y="5477" width="0.2" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="292.38" y="5487.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="147.2" y="5525" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="150.21" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4549" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="136.62" y="4559.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (1 samples, 0.02%)</title><rect x="58.1" y="789" width="0.2" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="61.09" y="799.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="256.2" y="5509" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="259.19" y="5519.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="3349" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="73.63" y="3359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="64.4" y="1013" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="67.36" y="1023.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="3253" width="2.6" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="68.41" y="3263.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (5 samples, 0.11%)</title><rect x="46.9" y="4901" width="1.3" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="49.85" y="4911.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="293.0" y="5349" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="296.04" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4725" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="142.11" y="4735.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1605" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="65.01" y="1615.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3061" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="100.29" y="3071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4149" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="141.85" y="4159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5141" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="130.35" y="5151.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="409.3" y="5413" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="412.34" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4069" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="138.19" y="4079.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getPredicateAt(unsigned int, llvm::Value*, (16 samples, 0.35%)</title><rect x="434.2" y="5637" width="4.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="437.17" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (26 samples, 0.58%)</title><rect x="16.3" y="3461" width="6.8" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="19.27" y="3471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4229" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="132.96" y="4239.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedBits(llvm::Instruction*, un (2 samples, 0.04%)</title><rect x="635.2" y="5573" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="638.15" y="5583.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="22.3" y="2725" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="25.28" y="2735.5" ></text>
</g>
<g >
<title>`GC_mark_from (3 samples, 0.07%)</title><rect x="396.8" y="5157" width="0.8" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="399.80" y="5167.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="71.2" y="3509" width="0.2" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="74.16" y="3519.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2085" width="3.4" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="57.17" y="2095.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="55.5" y="1781" width="2.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="58.48" y="1791.5" ></text>
</g>
<g >
<title>`MAKE-HASH-TABLE^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="66.5" y="1701" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="69.45" y="1711.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2453" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="65.53" y="2463.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="4789" width="1.1" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="14.31" y="4799.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="1061" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="61.09" y="1071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="143.8" y="5317" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="146.81" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.04%)</title><rect x="131.3" y="4549" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="134.27" y="4559.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hash_combine&lt;bool, unsigned int&gt;(bool con (1 samples, 0.02%)</title><rect x="526.2" y="5589" width="0.2" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="529.17" y="5599.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (30 samples, 0.66%)</title><rect x="27.5" y="4901" width="7.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="30.51" y="4911.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="4469" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="100.55" y="4479.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="172.3" y="5269" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="175.30" y="5279.5" ></text>
</g>
<g >
<title>`INITIALIZE-CALLING-CONVENTION^COMPILER^FN^^ (21 samples, 0.47%)</title><rect x="358.1" y="5381" width="5.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="361.12" y="5391.5" ></text>
</g>
<g >
<title>`WRITE-BITCODE^COMPILER^FN^^ (42 samples, 0.93%)</title><rect x="721.4" y="5765" width="11.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="724.40" y="5775.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.02%)</title><rect x="424.0" y="5477" width="0.2" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="426.98" y="5487.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (9 samples, 0.20%)</title><rect x="404.6" y="5413" width="2.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="407.64" y="5423.5" ></text>
</g>
<g >
<title>`VALID-KEYWORDS-FROM-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="32.7" y="4357" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="35.74" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4645" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="135.31" y="4655.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="380.6" y="5349" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="383.60" y="5359.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4517" width="1.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="26.59" y="4527.5" ></text>
</g>
<g >
<title>`FAST-SUBTYPEP^CORE^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2421" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="17.70" y="2431.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.02%)</title><rect x="523.3" y="5605" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="526.29" y="5615.5" ></text>
</g>
<g >
<title>`ADD-CREATOR^LITERAL^FN^^ (6 samples, 0.13%)</title><rect x="369.4" y="5349" width="1.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="372.36" y="5359.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="11.3" y="5141" width="1.1" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="14.31" y="5151.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="96.2" y="4693" width="0.3" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="99.25" y="4703.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="380.6" y="5413" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="383.60" y="5423.5" ></text>
</g>
<g >
<title>`ELIMINATE-CATCHES^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (13 samples, 0.29%)</title><rect x="203.7" y="5621" width="3.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="206.66" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="60.7" y="2885" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="63.70" y="2895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="3941" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="139.23" y="3951.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4117" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="132.70" y="4127.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.02%)</title><rect x="477.3" y="5541" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="480.30" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="1141" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="65.27" y="1151.5" ></text>
</g>
<g >
<title>`GC_promote_black_lists (1 samples, 0.02%)</title><rect x="748.8" y="5653" width="0.3" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="751.84" y="5663.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="735.0" y="5509" width="0.2" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="737.99" y="5519.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (2 samples, 0.04%)</title><rect x="174.4" y="5301" width="0.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="177.39" y="5311.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.02%)</title><rect x="229.3" y="5541" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="232.27" y="5551.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="94.9" y="4549" width="0.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="97.94" y="4559.5" ></text>
</g>
<g >
<title>`TEST-P^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="735.8" y="5413" width="1.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="738.77" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="139.1" y="4869" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="142.11" y="4879.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="289.1" y="5413" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="292.12" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="97.3" y="3221" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="100.29" y="3231.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="154.0" y="5189" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="157.00" y="5199.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.02%)</title><rect x="557.8" y="5333" width="0.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="560.79" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (2 samples, 0.04%)</title><rect x="65.7" y="2165" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="68.67" y="2175.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="343.2" y="5237" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="346.22" y="5247.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (8 samples, 0.18%)</title><rect x="551.0" y="5397" width="2.1" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="554.00" y="5407.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.02%)</title><rect x="165.8" y="4965" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="168.77" y="4975.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T T))^METHOD^^ (13 samples, 0.29%)</title><rect x="54.2" y="2901" width="3.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="57.17" y="2911.5" ></text>
</g>
<g >
<title>`wrapped_APInt_O__makeAPIntWidth_core__Integer_spuintbool (1 samples, 0.02%)</title><rect x="385.0" y="5365" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="388.04" y="5375.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="69.6" y="2373" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="72.59" y="2383.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="79.5" y="3637" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="82.52" y="3647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="53.1" y="3189" width="1.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="56.12" y="3199.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasGEP(llvm::GEPOperator const*, unsigne (1 samples, 0.02%)</title><rect x="567.7" y="5413" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="570.72" y="5423.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="345.1" y="5157" width="0.2" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="348.05" y="5167.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="60.2" y="3125" width="1.0" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="63.18" y="3135.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.02%)</title><rect x="660.2" y="5397" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="663.24" y="5407.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1429" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="65.27" y="1439.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::BasicBlock const*, std::__1::unique_ptr&lt;ll (1 samples, 0.02%)</title><rect x="525.4" y="5637" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="528.38" y="5647.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (9 samples, 0.20%)</title><rect x="234.0" y="5557" width="2.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="236.98" y="5567.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="189.5" y="5541" width="0.6" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="192.55" y="5551.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="464.5" y="5573" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="467.49" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (61 samples, 1.35%)</title><rect x="128.1" y="5413" width="16.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="131.13" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="138.6" y="4901" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="141.58" y="4911.5" ></text>
</g>
<g >
<title>`PRIMITIVE-RETURN-TYPE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="410.9" y="5381" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="413.91" y="5391.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="53.9" y="2789" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="56.91" y="2799.5" ></text>
</g>
<g >
<title>`core::interpreter_lookup_function_or_error(gctools::smart_ptr&lt;c (1 samples, 0.02%)</title><rect x="94.4" y="4501" width="0.3" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="97.42" y="4511.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="2885" width="1.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="60.57" y="2895.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="597.5" y="5605" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="600.52" y="5615.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="63.8" y="2277" width="1.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="66.84" y="2287.5" ></text>
</g>
<g >
<title>`wrapped_FunctionType_O__get_core__T_spcore__T_spcore__T_sp (1 samples, 0.02%)</title><rect x="98.1" y="5669" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="101.08" y="5679.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="320.5" y="5221" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="323.49" y="5231.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="368.6" y="5269" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="371.57" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="901" width="1.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="58.48" y="911.5" ></text>
</g>
<g >
<title>`IRC-SET-INSERT-POINT-BASIC-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="329.1" y="5141" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="332.11" y="5151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4885" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="142.11" y="4895.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (3 samples, 0.07%)</title><rect x="160.5" y="4949" width="0.8" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="163.54" y="4959.5" ></text>
</g>
<g >
<title>`IRC-INT-TO-PTR^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="307.7" y="5461" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="310.68" y="5471.5" ></text>
</g>
<g >
<title>`GC_mark_local (1 samples, 0.02%)</title><rect x="69.1" y="2133" width="0.2" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="72.07" y="2143.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (4 samples, 0.09%)</title><rect x="327.3" y="5269" width="1.0" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="330.28" y="5279.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="70.6" y="2757" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="73.63" y="2767.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (11 samples, 0.24%)</title><rect x="148.3" y="5269" width="2.8" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="151.25" y="5279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="128.7" y="4277" width="1.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="131.65" y="4287.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (29 samples, 0.64%)</title><rect x="86.8" y="4501" width="7.6" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="89.84" y="4511.5" ></text>
</g>
<g >
<title>`DATUM-VARIABLE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="408.0" y="5429" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="411.04" y="5439.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4261" width="9.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="17.18" y="4271.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="14.2" y="3477" width="1.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="17.18" y="3487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (6 samples, 0.13%)</title><rect x="24.6" y="4437" width="1.6" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="27.64" y="4447.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="294.3" y="5365" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="297.35" y="5375.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="330.9" y="5029" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="333.94" y="5039.5" ></text>
</g>
<g >
<title>`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="719.3" y="5525" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="722.31" y="5535.5" ></text>
</g>
<g >
<title>`llvm::APInt::compare(llvm::APInt const&amp;) const (1 samples, 0.02%)</title><rect x="565.6" y="5397" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="568.63" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (51 samples, 1.13%)</title><rect x="159.5" y="5333" width="13.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="162.49" y="5343.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2021" width="1.8" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="60.57" y="2031.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="664.4" y="5541" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="667.42" y="5551.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="40.6" y="4069" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="43.58" y="4079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="137.0" y="4533" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="140.02" y="4543.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.04%)</title><rect x="397.8" y="5333" width="0.6" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="400.84" y="5343.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.02%)</title><rect x="249.9" y="5557" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="252.92" y="5567.5" ></text>
</g>
<g >
<title>`PROCESS-CAPTURED-VARIABLES^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (106 samples, 2.35%)</title><rect x="229.8" y="5621" width="27.7" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="232.80" y="5631.5" >`..</text>
</g>
<g >
<title>`GC_mark_some (3 samples, 0.07%)</title><rect x="164.5" y="4885" width="0.7" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="167.46" y="4895.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="293.0" y="5413" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="296.04" y="5423.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4773" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="736.42" y="4783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4853" width="0.5" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="137.66" y="4863.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (5 samples, 0.11%)</title><rect x="565.4" y="5477" width="1.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="568.37" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (71 samples, 1.57%)</title><rect x="52.9" y="3653" width="18.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="55.86" y="3663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="128.7" y="4293" width="1.0" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="131.65" y="4303.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (1 samples, 0.02%)</title><rect x="12.9" y="4229" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="15.87" y="4239.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (22 samples, 0.49%)</title><rect x="16.3" y="2645" width="5.7" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="19.27" y="2655.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (25 samples, 0.55%)</title><rect x="329.1" y="5205" width="6.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="332.11" y="5215.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="965" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="61.35" y="975.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4661" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="736.42" y="4671.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="68.0" y="2581" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="71.02" y="2591.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (11 samples, 0.24%)</title><rect x="62.5" y="3253" width="2.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="65.53" y="3263.5" ></text>
</g>
<g >
<title>`SPECIALIZE^CLEAVIR-HIR-TO-MIR^((BOX-INSTRUCTION CLASP T T))^MET (2 samples, 0.04%)</title><rect x="186.2" y="5589" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="189.15" y="5599.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1077" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="65.53" y="1087.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (2 samples, 0.04%)</title><rect x="51.8" y="3573" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="54.82" y="3583.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="501.9" y="5509" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="504.86" y="5519.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="67.5" y="1397" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="70.50" y="1407.5" ></text>
</g>
<g >
<title>`OF-CLASS-P^CORE^FN^^ (1 samples, 0.02%)</title><rect x="186.2" y="5413" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="189.15" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((LEXICAL-VARIABLE-INFO T T T (1 samples, 0.02%)</title><rect x="66.2" y="1669" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="69.19" y="1679.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="355.8" y="5141" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="358.77" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="885" width="1.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="57.17" y="895.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="138.8" y="4053" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="141.85" y="4063.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="97.6" y="5365" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="100.55" y="5375.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (3 samples, 0.07%)</title><rect x="323.4" y="5109" width="0.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="326.36" y="5119.5" ></text>
</g>
<g >
<title>`PARSE-DIRECTIVE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="48.4" y="5061" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="51.42" y="5071.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.20%)</title><rect x="24.6" y="4757" width="2.4" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="27.64" y="4767.5" ></text>
</g>
<g >
<title>`IRC-GEP-VARIABLE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="346.4" y="5269" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="349.36" y="5279.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIndexedOffsetInType(llvm::Type*, llvm::Arr (1 samples, 0.02%)</title><rect x="494.0" y="5477" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="497.02" y="5487.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T GLOBAL-FUNCTION-INFO))^METHOD (1 samples, 0.02%)</title><rect x="39.5" y="4117" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="42.53" y="4127.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (13 samples, 0.29%)</title><rect x="54.2" y="2517" width="3.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="57.17" y="2527.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="241.0" y="5445" width="0.3" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="244.03" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4581" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="141.85" y="4591.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="107.2" y="5589" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="110.22" y="5599.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (14 samples, 0.31%)</title><rect x="236.3" y="5589" width="3.7" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="239.33" y="5599.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2437" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="17.70" y="2447.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="56.5" y="1429" width="1.1" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="59.52" y="1439.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="59.9" y="3125" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="62.92" y="3135.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="322.8" y="5205" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="325.84" y="5215.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="16.8" y="2341" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="19.80" y="2351.5" ></text>
</g>
<g >
<title>`wrapped_core__load_source_T_spboolboolcore__T_sp (2,981 samples, 66.02%)</title><rect x="10.0" y="6005" width="779.1" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="13.00" y="6015.5" >`wrapped_core__load_source_T_spboolboolcore__T_sp</text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="327.0" y="5253" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="330.02" y="5263.5" ></text>
</g>
<g >
<title>`getFoldedCast(llvm::Instruction::CastOps, llvm::Constant*, llvm (1 samples, 0.02%)</title><rect x="478.6" y="5589" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="481.60" y="5599.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="174.9" y="5333" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="177.91" y="5343.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="277" width="1.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="57.17" y="287.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="67.8" y="1253" width="0.2" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="70.76" y="1263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="163.2" y="5045" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="166.15" y="5055.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4309" width="9.4" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="17.18" y="4319.5" ></text>
</g>
<g >
<title>`llvm::BitstreamWriter::Emit(unsigned int, unsigned int) (1 samples, 0.02%)</title><rect x="721.9" y="5621" width="0.3" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="724.92" y="5631.5" ></text>
</g>
<g >
<title>`llvm::BitstreamWriter::Emit(unsigned int, unsigned int) (1 samples, 0.02%)</title><rect x="723.0" y="5605" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="725.97" y="5615.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="39.3" y="4197" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="42.27" y="4207.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1205" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="65.27" y="1215.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="537.7" y="5541" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="540.67" y="5551.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="47.1" y="4869" width="0.3" height="15.0" fill="rgb(239,108,108)" rx="2" ry="2" />
<text  x="50.11" y="4879.5" ></text>
</g>
<g >
<title>`core::Lisp_O::specialFormOrNil(gctools::smart_ptr&lt;core::Symbol_ (1 samples, 0.02%)</title><rect x="97.0" y="5077" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="100.03" y="5087.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="276.8" y="5509" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="279.84" y="5519.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="157.1" y="5237" width="0.3" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="160.14" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="3781" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="139.23" y="3791.5" ></text>
</g>
<g >
<title>`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^ (1,128 samples, 24.98%)</title><rect x="126.6" y="5669" width="294.8" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="129.56" y="5679.5" >`TRANSLATE-HOISTED-AST^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomT (1 samples, 0.02%)</title><rect x="459.8" y="5621" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="462.79" y="5631.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="75.9" y="3605" width="0.2" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="78.86" y="3615.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="40.6" y="4005" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="43.58" y="4015.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (2 samples, 0.04%)</title><rect x="171.8" y="5157" width="0.5" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="174.78" y="5167.5" ></text>
</g>
<g >
<title>`getFoldedCast(llvm::Instruction::CastOps, llvm::Constant*, llvm (1 samples, 0.02%)</title><rect x="321.3" y="5157" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="324.27" y="5167.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="734.5" y="5493" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="737.47" y="5503.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseSetPair&lt;llvm::DILocalVariable*&gt;* llvm::Dense (1 samples, 0.02%)</title><rect x="359.7" y="5157" width="0.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="362.69" y="5167.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="126.0" y="5605" width="0.3" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="129.04" y="5615.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="57.6" y="1237" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="60.57" y="1247.5" ></text>
</g>
<g >
<title>`IRC-CREATE-INVOKE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="391.0" y="5429" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="394.05" y="5439.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="335.4" y="5093" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="338.38" y="5103.5" ></text>
</g>
<g >
<title>`llvm::ValueHandleBase::AddToUseList() (1 samples, 0.02%)</title><rect x="522.8" y="5541" width="0.2" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="525.77" y="5551.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="4949" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="100.55" y="4959.5" ></text>
</g>
<g >
<title>`SET-DIFFERENCE^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="109.6" y="5605" width="1.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="112.57" y="5615.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::__1:: (1 samples, 0.02%)</title><rect x="534.0" y="5605" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="537.01" y="5615.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (2 samples, 0.04%)</title><rect x="174.4" y="5317" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="177.39" y="5327.5" ></text>
</g>
<g >
<title>`UNIVERSAL-ERROR-HANDLER^CORE^FN^^ (1 samples, 0.02%)</title><rect x="735.2" y="5621" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="738.25" y="5631.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="114.8" y="5509" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="117.80" y="5519.5" ></text>
</g>
<g >
<title>`PROCESS-REQUIRED^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3813" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="100.29" y="3823.5" ></text>
</g>
<g >
<title>`default_zone_malloc (1 samples, 0.02%)</title><rect x="572.7" y="5413" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="575.69" y="5423.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="710.2" y="5653" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="713.16" y="5663.5" ></text>
</g>
<g >
<title>`std::__1::basic_streambuf&lt;char, std::__1::char_traits&lt;char&gt; &gt;:: (1 samples, 0.02%)</title><rect x="120.6" y="5237" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="123.55" y="5247.5" ></text>
</g>
<g >
<title>`core::core__class_stamp_for_instances(gctools::smart_ptr&lt;core:: (1 samples, 0.02%)</title><rect x="733.4" y="4021" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="736.42" y="4031.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="420.8" y="5493" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="423.84" y="5503.5" ></text>
</g>
<g >
<title>`INTERPRET-DTREE-PROGRAM^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="401.2" y="5429" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="404.24" y="5439.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm: (1 samples, 0.02%)</title><rect x="606.1" y="5621" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="609.14" y="5631.5" ></text>
</g>
<g >
<title>`PROCESS-REST^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2805" width="3.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="57.17" y="2815.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (4 samples, 0.09%)</title><rect x="55.5" y="693" width="1.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="58.48" y="703.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="61.7" y="2261" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="64.75" y="2271.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (4 samples, 0.09%)</title><rect x="11.3" y="5573" width="1.1" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="14.31" y="5583.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="549" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="65.53" y="559.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="390.5" y="5413" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="393.53" y="5423.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="419.5" y="5509" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="422.54" y="5519.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (2 samples, 0.04%)</title><rect x="660.2" y="5445" width="0.6" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="663.24" y="5455.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="634.9" y="5525" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="637.89" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="732.9" y="5621" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="735.90" y="5631.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="77.7" y="4901" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="80.69" y="4911.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="16.5" y="2309" width="0.3" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="19.53" y="2319.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1637" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="68.93" y="1647.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="390.8" y="5333" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="393.79" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="177.3" y="5509" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="180.26" y="5519.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (2 samples, 0.04%)</title><rect x="68.8" y="2197" width="0.5" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="71.80" y="2207.5" ></text>
</g>
<g >
<title>`CONVERT-GLOBAL-FUNCTION^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="39.8" y="4069" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="42.79" y="4079.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (3 samples, 0.07%)</title><rect x="217.5" y="5573" width="0.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="220.51" y="5583.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="410.7" y="5349" width="0.2" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="413.65" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="21.2" y="1829" width="0.6" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="24.24" y="1839.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1589" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="65.27" y="1599.5" ></text>
</g>
<g >
<title>`void llvm::AAResults::addAAResult&lt;llvm::ScopedNoAliasAAResult&gt;( (2 samples, 0.04%)</title><rect x="455.9" y="5653" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="458.86" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="62.8" y="2021" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="65.79" y="2031.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (6 samples, 0.13%)</title><rect x="57.8" y="1541" width="1.6" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="60.83" y="1551.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="12.1" y="4485" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="15.09" y="4495.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.02%)</title><rect x="660.2" y="5381" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="663.24" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="145.1" y="5237" width="1.6" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="148.12" y="5247.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5141" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="736.42" y="5151.5" ></text>
</g>
<g >
<title>`llvm::scc_iterator&lt;llvm::Function const*, llvm::GraphTraits&lt;llv (1 samples, 0.02%)</title><rect x="603.3" y="5637" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="606.27" y="5647.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="13.7" y="4613" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="16.66" y="4623.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="335.4" y="5109" width="0.2" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="338.38" y="5119.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (3 samples, 0.07%)</title><rect x="36.7" y="4869" width="0.7" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="39.66" y="4879.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="147.7" y="5413" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="150.73" y="5423.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="461.6" y="5541" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="464.61" y="5551.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="149.8" y="4997" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="152.82" y="5007.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4005" width="9.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="17.18" y="4015.5" ></text>
</g>
<g >
<title>`COERCE-TO-CONDITION^CORE^FN^^ (1 samples, 0.02%)</title><rect x="735.2" y="5605" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="738.25" y="5615.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="66.5" y="1941" width="1.0" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="69.45" y="1951.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="71.9" y="3813" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="74.94" y="3823.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (3 samples, 0.07%)</title><rect x="351.8" y="5189" width="0.8" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="354.85" y="5199.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="252.0" y="5381" width="0.3" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="255.01" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="68.0" y="2853" width="1.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="71.02" y="2863.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::getLatticeValueFor(llvm::Val (3 samples, 0.07%)</title><rect x="716.4" y="5669" width="0.8" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="719.43" y="5679.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="176.0" y="5269" width="0.2" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="178.96" y="5279.5" ></text>
</g>
<g >
<title>`PROCESS-REST^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="661" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="61.35" y="671.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="265.3" y="5541" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="268.34" y="5551.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm (1 samples, 0.02%)</title><rect x="521.7" y="5541" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="524.73" y="5551.5" ></text>
</g>
<g >
<title>`llvm::MDNode::classof(llvm::Metadata const*) (1 samples, 0.02%)</title><rect x="720.4" y="5573" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="723.35" y="5583.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="82.9" y="4469" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="85.92" y="4479.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;std::__1::__tree_iterator&lt;std::__1::__value_type (1 samples, 0.02%)</title><rect x="731.3" y="5669" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="734.33" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (9 samples, 0.20%)</title><rect x="134.7" y="4933" width="2.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="137.66" y="4943.5" ></text>
</g>
<g >
<title>`llvmo::Type_O::getPointerTo(int) (1 samples, 0.02%)</title><rect x="337.5" y="5189" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="340.47" y="5199.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (4 samples, 0.09%)</title><rect x="559.1" y="5477" width="1.0" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="562.10" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4453" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="136.36" y="4463.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="1749" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="65.01" y="1759.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (2 samples, 0.04%)</title><rect x="390.5" y="5365" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="393.53" y="5375.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (1 samples, 0.02%)</title><rect x="30.4" y="4293" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="33.39" y="4303.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.5" y="1813" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="65.53" y="1823.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (2 samples, 0.04%)</title><rect x="132.6" y="4853" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="135.57" y="4863.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="238.2" y="5493" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="241.16" y="5503.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (22 samples, 0.49%)</title><rect x="16.3" y="2661" width="5.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="19.27" y="2671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="3749" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="139.23" y="3759.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Pass*, llvm::Pass*, llv (1 samples, 0.02%)</title><rect x="425.8" y="5605" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="428.81" y="5615.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="71.4" y="3701" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="74.42" y="3711.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.27%)</title><rect x="74.0" y="4261" width="3.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="77.03" y="4271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4421" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="138.71" y="4431.5" ></text>
</g>
<g >
<title>`IRC-AND^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="320.7" y="5237" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="323.75" y="5247.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="96.0" y="4837" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="98.98" y="4847.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="3205" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="62.40" y="3215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.22%)</title><rect x="144.3" y="5397" width="2.6" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="147.33" y="5407.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (2 samples, 0.04%)</title><rect x="27.5" y="4373" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="30.51" y="4383.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5301" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="736.42" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="159.5" y="5157" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="162.49" y="5167.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="346.4" y="5173" width="0.2" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="349.36" y="5183.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (16 samples, 0.35%)</title><rect x="73.5" y="4773" width="4.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="76.51" y="4783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.1" y="4805" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="136.10" y="4815.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^ (1 samples, 0.02%)</title><rect x="62.5" y="629" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="65.53" y="639.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="63.8" y="1893" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="66.84" y="1903.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENCLOSE-INSTRUCTIO (1 samples, 0.02%)</title><rect x="58.1" y="757" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="61.09" y="767.5" ></text>
</g>
<g >
<title>`llvm::JumpThreadingPass::ProcessBlock(llvm::BasicBlock*) (7 samples, 0.16%)</title><rect x="446.5" y="5637" width="1.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="449.46" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="56.5" y="469" width="1.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="59.52" y="479.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="24.6" y="3733" width="0.6" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="27.64" y="3743.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (2 samples, 0.04%)</title><rect x="477.3" y="5557" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="480.30" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (86 samples, 1.90%)</title><rect x="49.7" y="4085" width="22.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="52.73" y="4095.5" >`..</text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (5 samples, 0.11%)</title><rect x="54.2" y="1445" width="1.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="57.17" y="1455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FLOAT-ADD-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4181" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="138.71" y="4191.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="534.3" y="5589" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="537.27" y="5599.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (3 samples, 0.07%)</title><rect x="201.0" y="5445" width="0.8" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="204.05" y="5455.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="155.8" y="5141" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="158.83" y="5151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4389" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="141.85" y="4399.5" ></text>
</g>
<g >
<title>`llvm::canConstantFoldCallTo(llvm::ImmutableCallSite, llvm::Func (1 samples, 0.02%)</title><rect x="505.8" y="5445" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="508.78" y="5455.5" ></text>
</g>
<g >
<title>`addArgumentReturnedAttrs(llvm::SmallSetVector&lt;llvm::Function*,  (1 samples, 0.02%)</title><rect x="426.9" y="5669" width="0.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="429.85" y="5679.5" ></text>
</g>
<g >
<title>`core::write_object(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smar (1 samples, 0.02%)</title><rect x="735.5" y="5637" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="738.51" y="5647.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="63.6" y="2613" width="1.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="66.58" y="2623.5" ></text>
</g>
<g >
<title>`llvm::BinaryOperator::isFNeg(llvm::Value const*, bool) (1 samples, 0.02%)</title><rect x="496.4" y="5605" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="499.37" y="5615.5" ></text>
</g>
<g >
<title>`core::SimpleCharacterString_O::get_std_string() const (1 samples, 0.02%)</title><rect x="356.6" y="5285" width="0.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="359.55" y="5295.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LoopVectorize::runOnFunction(llvm::Funct (2 samples, 0.04%)</title><rect x="598.3" y="5669" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="601.30" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="148.5" y="5013" width="0.8" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="151.52" y="5023.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1189.7" y="6325" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1192.74" y="6335.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="589.7" y="5557" width="0.2" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="592.68" y="5567.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="527.5" y="5381" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="530.48" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4757" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="140.02" y="4767.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((SPECIAL-VARIABLE-INFO T T T (4 samples, 0.09%)</title><rect x="11.3" y="4853" width="1.1" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="14.31" y="4863.5" ></text>
</g>
<g >
<title>`core::Instance_O::isSubClassOf(gctools::smart_ptr&lt;core::Instanc (1 samples, 0.02%)</title><rect x="733.4" y="4005" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="736.42" y="4015.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="148.8" y="4949" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="151.78" y="4959.5" ></text>
</g>
<g >
<title>`wrapped_core__member1_T_spList_spT_spT_spT_sp (2 samples, 0.04%)</title><rect x="110.1" y="5573" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="113.10" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.8" y="4677" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="140.80" y="4687.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="71.4" y="3509" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="74.42" y="3519.5" ></text>
</g>
<g >
<title>`llvm::Instruction::getMetadataImpl(unsigned int) const (1 samples, 0.02%)</title><rect x="635.2" y="5461" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="638.15" y="5471.5" ></text>
</g>
<g >
<title>`wrapped_core__ltvc_write_string_T_spT_spsize_t (1 samples, 0.02%)</title><rect x="425.3" y="5717" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="428.29" y="5727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="142.5" y="4933" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="145.50" y="4943.5" ></text>
</g>
<g >
<title>`IRC-RET^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="322.3" y="5269" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="325.31" y="5279.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="308.7" y="5365" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="311.72" y="5375.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="16.5" y="2325" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="19.53" y="2335.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::BasicBlock*&gt;::insert(llvm::BasicBlo (1 samples, 0.02%)</title><rect x="458.7" y="5605" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="461.74" y="5615.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="359.7" y="5045" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="362.69" y="5055.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIntPtrType(llvm::Type*) const (1 samples, 0.02%)</title><rect x="574.0" y="5525" width="0.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="577.00" y="5535.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (3 samples, 0.07%)</title><rect x="353.4" y="5237" width="0.8" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="356.42" y="5247.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="60.7" y="2933" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="63.70" y="2943.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (1 samples, 0.02%)</title><rect x="576.1" y="5557" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="579.09" y="5567.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.02%)</title><rect x="205.8" y="5509" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="208.75" y="5519.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="165.2" y="5029" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="168.24" y="5039.5" ></text>
</g>
<g >
<title>`llvm::Value::getValueName() const (1 samples, 0.02%)</title><rect x="681.9" y="5557" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="684.93" y="5567.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1173" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="69.19" y="1183.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (6 samples, 0.13%)</title><rect x="12.4" y="4805" width="1.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="15.35" y="4815.5" ></text>
</g>
<g >
<title>`SPECIALIZE^CLEAVIR-HIR-TO-MIR^((:AROUND) (T T T T))^METHOD^^ (34 samples, 0.75%)</title><rect x="186.2" y="5605" width="8.8" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="189.15" y="5615.5" ></text>
</g>
<g >
<title>`GC_mark_local (2 samples, 0.04%)</title><rect x="208.6" y="5333" width="0.5" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="211.63" y="5343.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (6 samples, 0.13%)</title><rect x="57.8" y="1461" width="1.6" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="60.83" y="1471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4277" width="0.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="132.70" y="4287.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="24.6" y="4117" width="1.1" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="27.64" y="4127.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="45.8" y="5029" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="48.81" y="5039.5" ></text>
</g>
<g >
<title>`llvm::SSAUpdater::RewriteUse(llvm::Use&amp;) (1 samples, 0.02%)</title><rect x="598.0" y="5605" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="601.04" y="5615.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;(anonymous namespace)::M (2 samples, 0.04%)</title><rect x="525.9" y="5605" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="528.91" y="5615.5" ></text>
</g>
<g >
<title>`MAKE-TEMPS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.04%)</title><rect x="155.8" y="5205" width="0.6" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="158.83" y="5215.5" ></text>
</g>
<g >
<title>`IRC-BIT-CAST^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="380.6" y="5429" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="383.60" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((RETURN-FROM-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4581" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="142.11" y="4591.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (1 samples, 0.02%)</title><rect x="70.6" y="3125" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="73.63" y="3135.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="26.5" y="4597" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="29.47" y="4607.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceSet(unsigned long, gctools::smart_ptr (2 samples, 0.04%)</title><rect x="275.0" y="5573" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="278.01" y="5583.5" ></text>
</g>
<g >
<title>`core::SimpleCharacterString_O::get_std_string() const (1 samples, 0.02%)</title><rect x="289.6" y="5477" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="292.65" y="5487.5" ></text>
</g>
<g >
<title>`IRC-GEP^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="340.1" y="5253" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="343.09" y="5263.5" ></text>
</g>
<g >
<title>`llvm::GVN::Expression::operator==(llvm::GVN::Expression const&amp;) (2 samples, 0.04%)</title><rect x="541.6" y="5525" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="544.59" y="5535.5" ></text>
</g>
<g >
<title>`llvm::GetElementPtrInst::Create(llvm::Type*, llvm::Value*, llvm (1 samples, 0.02%)</title><rect x="381.6" y="5317" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="384.64" y="5327.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="60.7" y="2741" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="63.70" y="2751.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (1 samples, 0.02%)</title><rect x="555.7" y="5333" width="0.3" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="558.70" y="5343.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.02%)</title><rect x="301.9" y="5413" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="304.93" y="5423.5" ></text>
</g>
<g >
<title>`llvm::GEPOperator::hasAllZeroIndices() const (1 samples, 0.02%)</title><rect x="555.7" y="5317" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="558.70" y="5327.5" ></text>
</g>
<g >
<title>`llvm::DIBasicType::getImpl(llvm::LLVMContext&amp;, unsigned int, ll (1 samples, 0.02%)</title><rect x="366.0" y="5301" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="368.96" y="5311.5" ></text>
</g>
<g >
<title>`llvm::IRBuilderBase::SetInstDebugLocation(llvm::Instruction*) c (1 samples, 0.02%)</title><rect x="398.1" y="5301" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="401.11" y="5311.5" ></text>
</g>
<g >
<title>`EXPANDER^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="57.8" y="1733" width="1.6" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="60.83" y="1743.5" ></text>
</g>
<g >
<title>`GC_mark_from (3 samples, 0.07%)</title><rect x="36.7" y="4709" width="0.7" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="39.66" y="4719.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="19.9" y="1861" width="0.3" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="22.93" y="1871.5" ></text>
</g>
<g >
<title>`llvm::ObjectSizeOffsetVisitor::compute(llvm::Value*) (2 samples, 0.04%)</title><rect x="545.5" y="5429" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="548.51" y="5439.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2885" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="73.63" y="2895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (56 samples, 1.24%)</title><rect x="159.0" y="5397" width="14.6" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="161.97" y="5407.5" ></text>
</g>
<g >
<title>`stripAndComputeConstantOffsets(llvm::DataLayout const&amp;, llvm::V (1 samples, 0.02%)</title><rect x="652.9" y="5573" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="655.92" y="5583.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.3" y="1173" width="0.2" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="65.27" y="1183.5" ></text>
</g>
<g >
<title>`OPTIMIZED-SINGLE-FLOAT-P-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="258.8" y="5509" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="261.81" y="5519.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="78.7" y="3813" width="1.1" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="81.74" y="3823.5" ></text>
</g>
<g >
<title>0x10d596094 (91 samples, 2.02%)</title><rect x="12.4" y="5125" width="23.7" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="15.35" y="5135.5" >0..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2149" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="64.75" y="2159.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (181 samples, 4.01%)</title><rect x="49.5" y="5141" width="47.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="52.46" y="5151.5" >`CON..</text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (3 samples, 0.07%)</title><rect x="351.8" y="5157" width="0.8" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="354.85" y="5167.5" ></text>
</g>
<g >
<title>`llvmo::convert_sequence_types_to_vector(gctools::smart_ptr&lt;core (1 samples, 0.02%)</title><rect x="337.0" y="5189" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="339.95" y="5199.5" ></text>
</g>
<g >
<title>`LTV/CONS^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="336.4" y="5141" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="339.43" y="5151.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.04%)</title><rect x="171.8" y="5237" width="0.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="174.78" y="5247.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (3 samples, 0.07%)</title><rect x="190.1" y="5541" width="0.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="193.07" y="5551.5" ></text>
</g>
<g >
<title>`FIND-BUILT-IN-TAG^CORE^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2421" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="71.28" y="2431.5" ></text>
</g>
<g >
<title>`STANDARD-INSTANCE-ACCESS^CLOS^SETF^^ (1 samples, 0.02%)</title><rect x="32.5" y="4341" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="35.48" y="4351.5" ></text>
</g>
<g >
<title>`translate::from_object&lt;llvm::ArrayRef&lt;llvm::Constant*&gt;, std::__ (1 samples, 0.02%)</title><rect x="420.3" y="5557" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="423.32" y="5567.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4421" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="736.42" y="4431.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="3061" width="2.6" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="68.41" y="3071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4501" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="136.36" y="4511.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="694.5" y="5541" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="697.48" y="5551.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (6 samples, 0.13%)</title><rect x="57.8" y="1445" width="1.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="60.83" y="1455.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="285.5" y="5493" width="0.2" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="288.46" y="5503.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (70 samples, 1.55%)</title><rect x="52.9" y="3461" width="18.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="55.86" y="3471.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="363.1" y="5349" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="366.09" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (2 samples, 0.04%)</title><rect x="24.6" y="3669" width="0.6" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="27.64" y="3679.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="338.8" y="5173" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="341.78" y="5183.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="134.7" y="4277" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="137.66" y="4287.5" ></text>
</g>
<g >
<title>`MAKE-TYPEQ-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="162.1" y="5077" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="165.11" y="5087.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="311.9" y="5285" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="314.86" y="5295.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="155.3" y="5093" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="158.31" y="5103.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="39.3" y="4165" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="42.27" y="4175.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="19.7" y="1925" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="22.67" y="1935.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="58.3" y="725" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="61.35" y="735.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="60.2" y="2709" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="63.18" y="2719.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="172.3" y="5301" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="175.30" y="5311.5" ></text>
</g>
<g >
<title>`llvm::GVN::runImpl(llvm::Function&amp;, llvm::AssumptionCache&amp;, llv (166 samples, 3.68%)</title><rect x="537.7" y="5653" width="43.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="540.67" y="5663.5" >`llv..</text>
</g>
<g >
<title>`llvm::PostDominatorTreeWrapperPass::runOnFunction(llvm::Functio (1 samples, 0.02%)</title><rect x="536.9" y="5669" width="0.2" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="539.88" y="5679.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp_big(void const*) (1 samples, 0.02%)</title><rect x="713.6" y="5589" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="716.56" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="39.0" y="4389" width="2.1" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="42.01" y="4399.5" ></text>
</g>
<g >
<title>`SUCCESSORS^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="247.8" y="5573" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="250.83" y="5583.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4517" width="9.4" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="17.18" y="4527.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (15 samples, 0.33%)</title><rect x="73.5" y="4565" width="3.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="76.51" y="4575.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAWrapperPass::runOnModule(llvm::Module&amp;) (1 samples, 0.02%)</title><rect x="700.5" y="5701" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="703.49" y="5711.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getValueOnEdge(llvm:: (1 samples, 0.02%)</title><rect x="433.9" y="5621" width="0.3" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="436.91" y="5631.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (1 samples, 0.02%)</title><rect x="171.0" y="5013" width="0.3" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="173.99" y="5023.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="340.9" y="5093" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="343.87" y="5103.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="320.5" y="5189" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="323.49" y="5199.5" ></text>
</g>
<g >
<title>`llvm::CallInst::isNoBuiltin() const (1 samples, 0.02%)</title><rect x="505.8" y="5429" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="508.78" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.5" y="4405" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="134.53" y="4415.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="15.7" y="3317" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="18.75" y="3327.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="24.6" y="4037" width="0.6" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="27.64" y="4047.5" ></text>
</g>
<g >
<title>`llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo  (8 samples, 0.18%)</title><rect x="585.0" y="5637" width="2.1" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="587.97" y="5647.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="741" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="61.09" y="751.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (2 samples, 0.04%)</title><rect x="340.9" y="5221" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="343.87" y="5231.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="356.0" y="5237" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="359.03" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="23.6" y="4149" width="1.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="26.59" y="4159.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (1 samples, 0.02%)</title><rect x="58.6" y="869" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="61.61" y="879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="130.7" y="4725" width="1.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="133.74" y="4735.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1605" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="20.58" y="1615.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (2 samples, 0.04%)</title><rect x="67.5" y="1589" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="70.50" y="1599.5" ></text>
</g>
<g >
<title>`CHECK-SPECIAL-FORM-SYNTAX^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2437" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="66.05" y="2447.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (7 samples, 0.16%)</title><rect x="57.6" y="2965" width="1.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="60.57" y="2975.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::X86DAGToDAGISel::runOnMachineFunction(ll (1 samples, 0.02%)</title><rect x="57.8" y="885" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="60.83" y="895.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="130.5" y="4693" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="133.48" y="4703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.8" y="4741" width="0.3" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="134.79" y="4751.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuil (1 samples, 0.02%)</title><rect x="459.8" y="5605" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="462.79" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1285" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="65.27" y="1295.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="517" width="1.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="59.52" y="527.5" ></text>
</g>
<g >
<title>`IRC-LOAD^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="343.5" y="5253" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="346.48" y="5263.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.02%)</title><rect x="197.7" y="5525" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="200.65" y="5535.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="57.6" y="725" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="60.57" y="735.5" ></text>
</g>
<g >
<title>`GET-DILOCATION^LLVM-SYS^FN^^ (2 samples, 0.04%)</title><rect x="326.5" y="5253" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="329.50" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="2485" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="64.22" y="2495.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (2 samples, 0.04%)</title><rect x="132.6" y="4805" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="135.57" y="4815.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (3 samples, 0.07%)</title><rect x="252.5" y="5397" width="0.8" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="255.53" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4533" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="135.31" y="4543.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="70.6" y="2981" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="73.63" y="2991.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="401.0" y="5285" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="403.98" y="5295.5" ></text>
</g>
<g >
<title>`GC_allocobj (3 samples, 0.07%)</title><rect x="238.7" y="5429" width="0.8" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="241.68" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4229" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="138.45" y="4239.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="734.2" y="5669" width="0.8" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="737.20" y="5679.5" ></text>
</g>
<g >
<title>`llvm::User::operator delete(void*) (1 samples, 0.02%)</title><rect x="719.0" y="5605" width="0.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="722.05" y="5615.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (2 samples, 0.04%)</title><rect x="467.6" y="5525" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="470.63" y="5535.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="169.2" y="4853" width="0.2" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="172.16" y="4863.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="73.8" y="4389" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="76.77" y="4399.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="735.0" y="5477" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="737.99" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (21 samples, 0.47%)</title><rect x="59.9" y="3365" width="5.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="62.92" y="3375.5" ></text>
</g>
<g >
<title>`llvm::orc::IRCompileLayer&lt;llvm::orc::RTDyldObjectLinkingLayer,  (1 samples, 0.02%)</title><rect x="734.7" y="5397" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="737.73" y="5407.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="64.1" y="1269" width="0.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="67.10" y="1279.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="16.3" y="2037" width="0.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="19.27" y="2047.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="837" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="65.53" y="847.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (17 samples, 0.38%)</title><rect x="17.3" y="2101" width="4.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="20.32" y="2111.5" ></text>
</g>
<g >
<title>`TYPE-GET-INT64-TY^LLVM-SYS^FN^^ (1 samples, 0.02%)</title><rect x="294.9" y="5429" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="297.87" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="853" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="65.01" y="863.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (2 samples, 0.04%)</title><rect x="21.2" y="1781" width="0.6" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="24.24" y="1791.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="292.3" y="5381" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="295.26" y="5391.5" ></text>
</g>
<g >
<title>`llvmo::APInt_O::makeAPIntWidth(gctools::smart_ptr&lt;core::Integer (1 samples, 0.02%)</title><rect x="368.8" y="5349" width="0.3" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="371.83" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.04%)</title><rect x="132.6" y="4885" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="135.57" y="4895.5" ></text>
</g>
<g >
<title>`COMPILE-RANGES^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.2" y="5397" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="738.25" y="5407.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="378.2" y="5381" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="381.24" y="5391.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoCache::insertResult(llvm::V (3 samples, 0.07%)</title><rect x="431.0" y="5589" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="434.04" y="5599.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="234.0" y="5509" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="236.98" y="5519.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="65.4" y="2245" width="0.8" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="68.41" y="2255.5" ></text>
</g>
<g >
<title>`GC_get_first_part (1 samples, 0.02%)</title><rect x="205.8" y="5413" width="0.2" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="208.75" y="5423.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldTerminator(llvm::BasicBlock*, bool, llvm::Tar (1 samples, 0.02%)</title><rect x="587.3" y="5637" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="590.32" y="5647.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="2053" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="68.93" y="2063.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="14.2" y="3205" width="1.0" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="17.18" y="3215.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (509 samples, 11.27%)</title><rect x="285.5" y="5573" width="133.0" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="288.46" y="5583.5" >`LAYOUT-PROCEDUR..</text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.0" y="2901" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="65.01" y="2911.5" ></text>
</g>
<g >
<title>`llvm::ReassociatePass::run(llvm::Function&amp;, llvm::AnalysisManag (1 samples, 0.02%)</title><rect x="449.9" y="5653" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="452.85" y="5663.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="64.6" y="133" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="67.62" y="143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="147.7" y="5493" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="150.73" y="5503.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="379.0" y="5381" width="0.3" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="382.03" y="5391.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="65.1" y="2005" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="68.15" y="2015.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="4133" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="131.91" y="4143.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="69.8" y="2757" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="72.85" y="2767.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.02%)</title><rect x="86.3" y="4309" width="0.3" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="89.31" y="4319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="177.5" y="5301" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="180.53" y="5311.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="61.2" y="1893" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="64.22" y="1903.5" ></text>
</g>
<g >
<title>`COMPILE-ONLY-REG-AND-OPT-ARGUMENTS^COMPILER^FN^^ (7 samples, 0.16%)</title><rect x="337.7" y="5269" width="1.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="340.73" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="1733" width="1.0" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="58.48" y="1743.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*, (1 samples, 0.02%)</title><rect x="589.9" y="5637" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="592.94" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4149" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="132.96" y="4159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="131.0" y="4613" width="0.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="134.01" y="4623.5" ></text>
</g>
<g >
<title>`llvm::SplitCriticalEdge(llvm::TerminatorInst*, unsigned int, ll (3 samples, 0.07%)</title><rect x="562.5" y="5541" width="0.8" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="565.50" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((LEXICAL-VARIABLE-INFO T T T (2 samples, 0.04%)</title><rect x="51.0" y="2741" width="0.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="54.03" y="2751.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="285.7" y="5493" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="288.73" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="3893" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="135.31" y="3903.5" ></text>
</g>
<g >
<title>`LTV/CONS^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="419.5" y="5541" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="422.54" y="5551.5" ></text>
</g>
<g >
<title>`llvm::APInt::APInt(llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="657.4" y="5461" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="660.37" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="1717" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="73.63" y="1727.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (30 samples, 0.66%)</title><rect x="27.5" y="4837" width="7.9" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="30.51" y="4847.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (6 samples, 0.13%)</title><rect x="57.8" y="1653" width="1.6" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="60.83" y="1663.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="356.0" y="5253" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="359.03" y="5263.5" ></text>
</g>
<g >
<title>`core::Instance_O::copyInstance() const (3 samples, 0.07%)</title><rect x="208.4" y="5525" width="0.7" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="211.37" y="5535.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.04%)</title><rect x="380.6" y="5381" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="383.60" y="5391.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.02%)</title><rect x="677.2" y="5621" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="680.23" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (114 samples, 2.52%)</title><rect x="147.5" y="5557" width="29.8" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="150.47" y="5567.5" >`C..</text>
</g>
<g >
<title>`cc_invoke_byte_code_interpreter (215 samples, 4.76%)</title><rect x="732.6" y="5797" width="56.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="735.64" y="5807.5" >`cc_i..</text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="12.4" y="4869" width="1.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="15.35" y="4879.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (1 samples, 0.02%)</title><rect x="84.2" y="4453" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="87.22" y="4463.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2453" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="64.22" y="2463.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="60.4" y="2869" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="63.44" y="2879.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^LITERAL^FN^^ (2 samples, 0.04%)</title><rect x="124.2" y="5573" width="0.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="127.21" y="5583.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="75.3" y="3845" width="1.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="78.34" y="3855.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="17.6" y="1061" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="20.58" y="1071.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="14.7" y="2789" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="17.70" y="2799.5" ></text>
</g>
<g >
<title>`getAllocationData(llvm::Value const*, AllocType, llvm::TargetLi (1 samples, 0.02%)</title><rect x="568.0" y="5445" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="570.98" y="5455.5" ></text>
</g>
<g >
<title>`core::core__hash_table_setf_gethash(gctools::smart_ptr&lt;core::Ha (1 samples, 0.02%)</title><rect x="408.3" y="5429" width="0.3" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="411.30" y="5439.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="321.0" y="5157" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="324.01" y="5167.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="78.2" y="4581" width="2.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="81.21" y="4591.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="399.7" y="5429" width="0.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="402.67" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (27 samples, 0.60%)</title><rect x="27.5" y="4565" width="7.1" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="30.51" y="4575.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldCastInstruction(unsigned int, llvm::Constant* (1 samples, 0.02%)</title><rect x="629.1" y="5573" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="632.14" y="5583.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (6 samples, 0.13%)</title><rect x="351.8" y="5237" width="1.6" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="354.85" y="5247.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_byte8_t_O, unsig (1 samples, 0.02%)</title><rect x="739.2" y="5717" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="742.17" y="5727.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.3" y="1829" width="0.3" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="20.32" y="1839.5" ></text>
</g>
<g >
<title>`GC_mark_from (2 samples, 0.04%)</title><rect x="268.7" y="5333" width="0.6" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="271.74" y="5343.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="733.7" y="5029" width="0.2" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="736.68" y="5039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="171.5" y="5285" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="174.51" y="5295.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisPassInfo(void const*) cons (1 samples, 0.02%)</title><rect x="532.4" y="5653" width="0.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="535.44" y="5663.5" ></text>
</g>
<g >
<title>`SLOT-EXISTS-P^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="188.0" y="5557" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="190.98" y="5567.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (8 samples, 0.18%)</title><rect x="63.3" y="3093" width="2.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="66.32" y="3103.5" ></text>
</g>
<g >
<title>`boost::basic_format&lt;char, std::__1::char_traits&lt;char&gt;, std::__1 (2 samples, 0.04%)</title><rect x="382.9" y="5349" width="0.6" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="385.95" y="5359.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="168.1" y="4949" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="171.12" y="4959.5" ></text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE T (1 samples, 0.02%)</title><rect x="24.1" y="3733" width="0.3" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="27.11" y="3743.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="355.8" y="5125" width="0.2" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="358.77" y="5135.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (2 samples, 0.04%)</title><rect x="595.7" y="5589" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="598.69" y="5599.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5445" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="736.42" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4357" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="137.40" y="4367.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="349.2" y="5141" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="352.23" y="5151.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (2 samples, 0.04%)</title><rect x="423.7" y="5509" width="0.5" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="426.72" y="5519.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="5061" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="100.55" y="5071.5" ></text>
</g>
<g >
<title>`PROCESS-AUX^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="629" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="61.35" y="639.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="381.6" y="5237" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="384.64" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (36 samples, 0.80%)</title><rect x="14.2" y="4693" width="9.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="17.18" y="4703.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (18 samples, 0.40%)</title><rect x="65.4" y="3365" width="4.7" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="68.41" y="3375.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (5 samples, 0.11%)</title><rect x="54.2" y="485" width="1.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="57.17" y="495.5" ></text>
</g>
<g >
<title>`llvm::AttrBuilder::AttrBuilder(llvm::AttributeSet) (1 samples, 0.02%)</title><rect x="734.2" y="5317" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="737.20" y="5327.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="376.4" y="5253" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="379.41" y="5263.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="365.4" y="5253" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="368.44" y="5263.5" ></text>
</g>
<g >
<title>`FIND-SLOT-DEFINITION^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="191.6" y="5541" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="194.64" y="5551.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (2 samples, 0.04%)</title><rect x="677.8" y="5573" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="680.75" y="5583.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="61.7" y="1749" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="64.75" y="1759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="151.9" y="5413" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="154.91" y="5423.5" ></text>
</g>
<g >
<title>`boost::io::basic_oaltstringstream&lt;char, std::__1::char_traits&lt;c (1 samples, 0.02%)</title><rect x="368.6" y="5301" width="0.2" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="371.57" y="5311.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (1 samples, 0.02%)</title><rect x="536.9" y="5653" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="539.88" y="5663.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&amp;,  (4 samples, 0.09%)</title><rect x="484.9" y="5541" width="1.0" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="487.87" y="5551.5" ></text>
</g>
<g >
<title>`OPTIMIZED-SYMBOL-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="177.0" y="5445" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="180.00" y="5455.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.02%)</title><rect x="506.8" y="5461" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="509.83" y="5471.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (16 samples, 0.35%)</title><rect x="73.5" y="4821" width="4.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="76.51" y="4831.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (3 samples, 0.07%)</title><rect x="250.4" y="5557" width="0.8" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="253.44" y="5567.5" ></text>
</g>
<g >
<title>`core::cl__values(gctools::smart_ptr&lt;core::Vaslist&gt;) (1 samples, 0.02%)</title><rect x="409.6" y="5349" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="412.61" y="5359.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (2 samples, 0.04%)</title><rect x="527.2" y="5477" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="530.21" y="5487.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (2 samples, 0.04%)</title><rect x="388.7" y="5317" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="391.70" y="5327.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="172.3" y="5253" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="175.30" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (10 samples, 0.22%)</title><rect x="65.4" y="3141" width="2.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="68.41" y="3151.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="1349" width="1.3" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="57.17" y="1359.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3669" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="100.29" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="136.2" y="4757" width="0.6" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="139.23" y="4767.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2501" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="73.63" y="2511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.4" y="4085" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="132.44" y="4095.5" ></text>
</g>
<g >
<title>`core::core__get_sysprop(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.02%)</title><rect x="259.3" y="5525" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="262.33" y="5535.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.02%)</title><rect x="76.1" y="3669" width="0.3" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="79.12" y="3679.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (48 samples, 1.06%)</title><rect x="52.9" y="3429" width="12.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="55.86" y="3439.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="330.7" y="4997" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="333.68" y="5007.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="324.4" y="5173" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="327.41" y="5183.5" ></text>
</g>
<g >
<title>`MULTIPLE-VALUE-ARRAY-ADDRESS^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="351.3" y="5269" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="354.32" y="5279.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="821" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="20.58" y="831.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (1 samples, 0.02%)</title><rect x="150.1" y="5013" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="153.08" y="5023.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="66.2" y="2437" width="1.8" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="69.19" y="2447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="135.2" y="4629" width="0.8" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="138.19" y="4639.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (4 samples, 0.09%)</title><rect x="704.4" y="5589" width="1.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="707.41" y="5599.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const (1 samples, 0.02%)</title><rect x="686.6" y="5605" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="689.64" y="5615.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="595.7" y="5429" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="598.69" y="5439.5" ></text>
</g>
<g >
<title>`IRC-BIT-CAST^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="321.3" y="5253" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="324.27" y="5263.5" ></text>
</g>
<g >
<title>`wrapped_getInt8Ty_llvm__LLVMContext_ (1 samples, 0.02%)</title><rect x="345.1" y="5205" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="348.05" y="5215.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (12 samples, 0.27%)</title><rect x="139.9" y="5141" width="3.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="142.89" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1765" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="65.27" y="1775.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="14.2" y="3125" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="17.18" y="3135.5" ></text>
</g>
<g >
<title>`COMPUTE-APPLICABLE-METHODS^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="115.3" y="5541" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="118.32" y="5551.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (6 samples, 0.13%)</title><rect x="57.8" y="1269" width="1.6" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="60.83" y="1279.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1861" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="65.79" y="1871.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.02%)</title><rect x="242.3" y="5541" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="245.34" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="2005" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="68.93" y="2015.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (5 samples, 0.11%)</title><rect x="63.8" y="2197" width="1.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="66.84" y="2207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.20%)</title><rect x="144.3" y="5333" width="2.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="147.33" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="16.3" y="2405" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="19.27" y="2415.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="821" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="62.13" y="831.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="131.0" y="4485" width="0.3" height="15.0" fill="rgb(213,68,68)" rx="2" ry="2" />
<text  x="134.01" y="4495.5" ></text>
</g>
<g >
<title>`void boost::io::detail::put&lt;char, std::__1::char_traits&lt;char&gt;,  (1 samples, 0.02%)</title><rect x="420.8" y="5525" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="423.84" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="130.7" y="4597" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="133.74" y="4607.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="26.5" y="4661" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="29.47" y="4671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((VALUES-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4645" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="137.66" y="4655.5" ></text>
</g>
<g >
<title>`core::LambdaListHandler_O::createBindingsInScopeVaList(unsigned (1 samples, 0.02%)</title><rect x="186.9" y="5493" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="189.93" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (20 samples, 0.44%)</title><rect x="54.2" y="3141" width="5.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="57.17" y="3151.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="70.9" y="3205" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="73.89" y="3215.5" ></text>
</g>
<g >
<title>`wrapped_cl__load_T_spT_spT_spT_spT_spT_sp (217 samples, 4.81%)</title><rect x="732.4" y="5893" width="56.7" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="735.37" y="5903.5" >`wrapp..</text>
</g>
<g >
<title>`bool llvm::PatternMatch::BinaryOp_match&lt;llvm::PatternMatch::bin (1 samples, 0.02%)</title><rect x="495.1" y="5605" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="498.07" y="5615.5" ></text>
</g>
<g >
<title>`DISPATCH-MISS^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="58.3" y="1205" width="1.1" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="61.35" y="1215.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.02%)</title><rect x="148.8" y="4885" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="151.78" y="4895.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&amp;,  (1 samples, 0.02%)</title><rect x="519.1" y="5589" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="522.11" y="5599.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.02%)</title><rect x="549.7" y="5317" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="552.69" y="5327.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="51.0" y="2677" width="0.6" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="54.03" y="2687.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="397.6" y="5349" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="400.58" y="5359.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::BasicBlock*, llvm::SmallPtrSet&lt;llvm::Ba (1 samples, 0.02%)</title><rect x="524.9" y="5621" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="527.86" y="5631.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="158.7" y="5397" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="161.71" y="5407.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="731.6" y="5669" width="0.3" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="734.59" y="5679.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.02%)</title><rect x="559.9" y="5397" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="562.88" y="5407.5" ></text>
</g>
<g >
<title>`core::Lisp_O::specialFormOrNil(gctools::smart_ptr&lt;core::Symbol_ (1 samples, 0.02%)</title><rect x="15.5" y="3349" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="18.49" y="3359.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="222.0" y="5525" width="0.2" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="224.96" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (2 samples, 0.04%)</title><rect x="64.4" y="725" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="67.36" y="735.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="333.8" y="5045" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="336.81" y="5055.5" ></text>
</g>
<g >
<title>`llvm::TrackingMDRef::~TrackingMDRef() (1 samples, 0.02%)</title><rect x="591.5" y="5637" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="594.51" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (8 samples, 0.18%)</title><rect x="174.4" y="5429" width="2.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="177.39" y="5439.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="370.4" y="5269" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="373.40" y="5279.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="308.5" y="5381" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="311.46" y="5391.5" ></text>
</g>
<g >
<title>`llvm::df_iterator&lt;llvm::BasicBlock*, llvm::df_iterator_default_ (2 samples, 0.04%)</title><rect x="580.0" y="5621" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="583.01" y="5631.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="138.1" y="4469" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="141.06" y="4479.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::StringMapIterator&lt;llvm::Value*&gt;, bool&gt; llv (1 samples, 0.02%)</title><rect x="341.7" y="5093" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="344.65" y="5103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5077" width="0.2" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="180.26" y="5087.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (5 samples, 0.11%)</title><rect x="118.7" y="5541" width="1.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="121.72" y="5551.5" ></text>
</g>
<g >
<title>`TREAT-AS-SPECIAL-OPERATOR-P^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="44.2" y="4469" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="47.24" y="4479.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (7 samples, 0.16%)</title><rect x="57.6" y="1909" width="1.8" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="60.57" y="1919.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2661" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="17.70" y="2671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (15 samples, 0.33%)</title><rect x="128.4" y="4805" width="3.9" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="131.39" y="4815.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="593.1" y="5589" width="0.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="596.07" y="5599.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="330.2" y="5093" width="0.2" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="333.16" y="5103.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL-BINDING^CLEAVIR-GENERATE-AST^((T T T T T))^METH (72 samples, 1.59%)</title><rect x="52.6" y="3861" width="18.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="55.60" y="3871.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (13 samples, 0.29%)</title><rect x="54.2" y="2117" width="3.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="57.17" y="2127.5" ></text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::getNumOper (1 samples, 0.02%)</title><rect x="526.7" y="5477" width="0.3" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="529.69" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="78.5" y="4037" width="2.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="81.47" y="4047.5" ></text>
</g>
<g >
<title>`llvm::AliasSetTracker::getAliasSetForPointer(llvm::Value*, unsi (2 samples, 0.04%)</title><rect x="522.8" y="5573" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="525.77" y="5583.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="395.2" y="5253" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="398.23" y="5263.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.20%)</title><rect x="50.0" y="3669" width="2.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="52.99" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4725" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="140.02" y="4735.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.04%)</title><rect x="14.7" y="2389" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="17.70" y="2399.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (16 samples, 0.35%)</title><rect x="73.5" y="4837" width="4.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="76.51" y="4847.5" ></text>
</g>
<g >
<title>`BOUNDP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="161.3" y="4981" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="164.32" y="4991.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="13.7" y="4677" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="16.66" y="4687.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="567.5" y="5381" width="0.2" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="570.46" y="5391.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="16.3" y="2421" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="19.27" y="2431.5" ></text>
</g>
<g >
<title>`llvm::BranchProbabilityInfo::calculate(llvm::Function const&amp;, l (4 samples, 0.09%)</title><rect x="602.5" y="5653" width="1.0" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="605.48" y="5663.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="410.7" y="5317" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="413.65" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="140.7" y="5045" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="143.68" y="5055.5" ></text>
</g>
<g >
<title>`llvm::Value::getValueName() const (1 samples, 0.02%)</title><rect x="692.9" y="5653" width="0.3" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="695.91" y="5663.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="359.7" y="5029" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="362.69" y="5039.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (9 samples, 0.20%)</title><rect x="78.2" y="4245" width="2.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="81.21" y="4255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4325" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="139.23" y="4335.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.02%)</title><rect x="311.3" y="5381" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="314.34" y="5391.5" ></text>
</g>
<g >
<title>`isObjectDereferencedInBlock(llvm::Value*, llvm::BasicBlock*) (1 samples, 0.02%)</title><rect x="432.3" y="5573" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="435.34" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4693" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="137.14" y="4703.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="171.0" y="5125" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="173.99" y="5135.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (21 samples, 0.47%)</title><rect x="38.7" y="4549" width="5.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="41.75" y="4559.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="159.0" y="5317" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="161.97" y="5327.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1429" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="68.93" y="1439.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="56.5" y="309" width="1.1" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="59.52" y="319.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.04%)</title><rect x="319.2" y="5317" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="322.18" y="5327.5" ></text>
</g>
<g >
<title>`GC_mark_some (3 samples, 0.07%)</title><rect x="736.0" y="5253" width="0.8" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="739.03" y="5263.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ReassociateLegacyPass::runOnFunction(llv (1 samples, 0.02%)</title><rect x="449.9" y="5669" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="452.85" y="5679.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="633.8" y="5573" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="636.84" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (21 samples, 0.47%)</title><rect x="38.7" y="4533" width="5.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="41.75" y="4543.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1269" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="65.53" y="1279.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="334.3" y="5013" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="337.34" y="5023.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="52.6" y="3573" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="55.60" y="3583.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (233 samples, 5.16%)</title><rect x="36.4" y="5333" width="60.9" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="39.40" y="5343.5" >`CONVE..</text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="36.1" y="5429" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="39.14" y="5439.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2597" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="65.01" y="2607.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CVPLatticeVal::operator=((anonymous name (1 samples, 0.02%)</title><rect x="708.3" y="5653" width="0.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="711.33" y="5663.5" ></text>
</g>
<g >
<title>`wrapped_cl__error_T_spList_sp (1 samples, 0.02%)</title><rect x="735.0" y="5589" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="737.99" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (13 samples, 0.29%)</title><rect x="139.9" y="5189" width="3.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="142.89" y="5199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="138.6" y="4837" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="141.58" y="4847.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="1573" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="65.53" y="1583.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="709" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="65.53" y="719.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (1 samples, 0.02%)</title><rect x="449.6" y="5525" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="452.59" y="5535.5" ></text>
</g>
<g >
<title>`FIND-OR-CREATE-LOCATION^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="129.2" y="3541" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="132.18" y="3551.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="645" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="65.01" y="655.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS^CLEAVIR-IR^FN^^ (8 samples, 0.18%)</title><rect x="183.8" y="5621" width="2.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="186.80" y="5631.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1557" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="69.19" y="1567.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="578.2" y="5525" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="581.18" y="5535.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5493" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="713.94" y="5503.5" ></text>
</g>
<g >
<title>`COMPUTE-APPLICABLE-METHODS^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="21.0" y="1845" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="23.98" y="1855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4053" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="139.23" y="4063.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (1 samples, 0.02%)</title><rect x="186.4" y="5445" width="0.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="189.41" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4869" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="136.62" y="4879.5" ></text>
</g>
<g >
<title>`szone_malloc (1 samples, 0.02%)</title><rect x="687.4" y="5621" width="0.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="690.42" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="3381" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="100.29" y="3391.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (4 samples, 0.09%)</title><rect x="735.8" y="5365" width="1.0" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="738.77" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="156.4" y="5221" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="159.36" y="5231.5" ></text>
</g>
<g >
<title>`CONVERT-FUNCTION^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="39.8" y="4101" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="42.79" y="4111.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2325" width="3.4" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="57.17" y="2335.5" ></text>
</g>
<g >
<title>`llvmo::DILocation_O::make(llvm::LLVMContext&amp;, unsigned int, uns (1 samples, 0.02%)</title><rect x="291.7" y="5381" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="294.74" y="5391.5" ></text>
</g>
<g >
<title>`GC_mark_local (1,529 samples, 33.86%)</title><rect x="789.9" y="6341" width="399.6" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="792.87" y="6351.5" >`GC_mark_local</text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="62.8" y="1285" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="65.79" y="1295.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::Valu (1 samples, 0.02%)</title><rect x="715.1" y="5653" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="718.13" y="5663.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (2 samples, 0.04%)</title><rect x="171.8" y="5221" width="0.5" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="174.78" y="5231.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="1797" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="20.58" y="1807.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="1861" width="1.8" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="60.57" y="1871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (58 samples, 1.28%)</title><rect x="128.4" y="5221" width="15.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="131.39" y="5231.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="413.0" y="5365" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="416.00" y="5375.5" ></text>
</g>
<g >
<title>`analyzeGlobalAux(llvm::Value const*, llvm::GlobalStatus&amp;, llvm: (2 samples, 0.04%)</title><rect x="592.0" y="5637" width="0.6" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="595.03" y="5647.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="576.3" y="5541" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="579.35" y="5551.5" ></text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="336.4" y="5093" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="339.43" y="5103.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::schedulePass(llvm::Pass*) (1 samples, 0.02%)</title><rect x="425.8" y="5685" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="428.81" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4565" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="138.71" y="4575.5" ></text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="311.1" y="5365" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="314.08" y="5375.5" ></text>
</g>
<g >
<title>`llvm::isGEPBasedOnPointerToString(llvm::GEPOperator const*, uns (1 samples, 0.02%)</title><rect x="529.3" y="5477" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="532.30" y="5487.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2661" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="65.27" y="2671.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="148.3" y="5173" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="151.25" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4597" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="139.76" y="4607.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="548.6" y="5333" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="551.64" y="5343.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="139.9" y="4997" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="142.89" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="69.8" y="3013" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="72.85" y="3023.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="693" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="65.01" y="703.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="245" width="1.1" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="59.52" y="255.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="62.5" y="3045" width="0.6" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="65.53" y="3055.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (3 samples, 0.07%)</title><rect x="340.6" y="5237" width="0.8" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="343.61" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="65.9" y="709" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="68.93" y="719.5" ></text>
</g>
<g >
<title>`llvm::Value::getValueName() const (2 samples, 0.04%)</title><rect x="719.8" y="5605" width="0.6" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="722.83" y="5615.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="64.1" y="1125" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="67.10" y="1135.5" ></text>
</g>
<g >
<title>`malloc (2 samples, 0.04%)</title><rect x="460.6" y="5589" width="0.5" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="463.57" y="5599.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (2 samples, 0.04%)</title><rect x="460.6" y="5573" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="463.57" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="56.5" y="805" width="1.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="59.52" y="815.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="53.1" y="3093" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="56.12" y="3103.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (1 samples, 0.02%)</title><rect x="25.4" y="3829" width="0.3" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="28.42" y="3839.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="169.4" y="4901" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="172.42" y="4911.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (12 samples, 0.27%)</title><rect x="717.7" y="5781" width="3.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="720.74" y="5791.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="71.4" y="3861" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="74.42" y="3871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="3957" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="139.23" y="3967.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="346.4" y="5221" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="349.36" y="5231.5" ></text>
</g>
<g >
<title>`core::cl__prin1(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.02%)</title><rect x="735.5" y="5701" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="738.51" y="5711.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (2 samples, 0.04%)</title><rect x="14.7" y="2853" width="0.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="17.70" y="2863.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (11 samples, 0.24%)</title><rect x="404.1" y="5445" width="2.9" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="407.12" y="5455.5" ></text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="313.2" y="5381" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="316.17" y="5391.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2533" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="65.53" y="2543.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (1 samples, 0.02%)</title><rect x="26.5" y="4549" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="29.47" y="4559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="144.6" y="5317" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="147.60" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="2917" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="65.01" y="2927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4021" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="135.31" y="4031.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4613" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="736.42" y="4623.5" ></text>
</g>
<g >
<title>`wrapped_core__vaslist_rewind_VaList_sp (1 samples, 0.02%)</title><rect x="65.4" y="2101" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="68.41" y="2111.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (1 samples, 0.02%)</title><rect x="328.6" y="5269" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="331.59" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="4965" width="0.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="100.55" y="4975.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="68.0" y="3013" width="1.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="71.02" y="3023.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (3 samples, 0.07%)</title><rect x="264.8" y="5557" width="0.8" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="267.82" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (8 samples, 0.18%)</title><rect x="63.3" y="2917" width="2.1" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="66.32" y="2927.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="513.6" y="5605" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="516.62" y="5615.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="409.9" y="5381" width="0.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="412.87" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="62.5" y="3013" width="0.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="65.53" y="3023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="142.5" y="4949" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="145.50" y="4959.5" ></text>
</g>
<g >
<title>0x10d596094 (36 samples, 0.80%)</title><rect x="14.2" y="4021" width="9.4" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="17.18" y="4031.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="202.9" y="5605" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="205.88" y="5615.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="169.2" y="4805" width="0.2" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="172.16" y="4815.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="60.4" y="3061" width="0.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="63.44" y="3071.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm: (1 samples, 0.02%)</title><rect x="604.3" y="5621" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="607.31" y="5631.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (4 samples, 0.09%)</title><rect x="232.4" y="5541" width="1.1" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="235.41" y="5551.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (2 samples, 0.04%)</title><rect x="43.7" y="4389" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="46.71" y="4399.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="637.2" y="5477" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="640.24" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (82 samples, 1.82%)</title><rect x="14.2" y="4997" width="21.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="17.18" y="5007.5" >`..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="23.9" y="3989" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="26.85" y="3999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (3 samples, 0.07%)</title><rect x="167.9" y="5029" width="0.7" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="170.86" y="5039.5" ></text>
</g>
<g >
<title>`wrapped_get_llvm__LLVMContext_const_llvm__APInt_ (1 samples, 0.02%)</title><rect x="334.1" y="5061" width="0.2" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="337.08" y="5071.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::MPPassManager::~MPPassManager() (1 samples, 0.02%)</title><rect x="58.9" y="837" width="0.2" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="61.87" y="847.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="184.1" y="5589" width="0.2" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="187.06" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (12 samples, 0.27%)</title><rect x="78.0" y="4789" width="3.1" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="80.95" y="4799.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.3" y="4645" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="100.29" y="4655.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="68.0" y="3205" width="1.8" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="71.02" y="3215.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="207.8" y="5509" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="210.84" y="5519.5" ></text>
</g>
<g >
<title>`GC_allocobj (3 samples, 0.07%)</title><rect x="374.6" y="5317" width="0.8" height="15.0" fill="rgb(248,121,121)" rx="2" ry="2" />
<text  x="377.58" y="5327.5" ></text>
</g>
<g >
<title>`llvm::ScopedHashTable&lt;(anonymous namespace)::SimpleValue, llvm: (3 samples, 0.07%)</title><rect x="440.7" y="5637" width="0.8" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="443.71" y="5647.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="73.8" y="4405" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="76.77" y="4415.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (3 samples, 0.07%)</title><rect x="53.4" y="3061" width="0.8" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="56.38" y="3071.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="337.7" y="5205" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="340.73" y="5215.5" ></text>
</g>
<g >
<title>0x10d596094 (10 samples, 0.22%)</title><rect x="65.4" y="3221" width="2.6" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="68.41" y="3231.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (181 samples, 4.01%)</title><rect x="49.5" y="5157" width="47.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="52.46" y="5167.5" >`COM..</text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="330.9" y="5013" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="333.94" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4149" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="139.23" y="4159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="127.1" y="5461" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="130.09" y="5471.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (35 samples, 0.78%)</title><rect x="36.4" y="5157" width="9.1" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="39.40" y="5167.5" ></text>
</g>
<g >
<title>`core::cl__gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="158.2" y="5381" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="161.19" y="5391.5" ></text>
</g>
<g >
<title>`IRC-EXTRACT-VALUE^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="392.1" y="5397" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="395.10" y="5407.5" ></text>
</g>
<g >
<title>`VARIABLE-TYPE^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="42.9" y="4245" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="45.93" y="4255.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="597" width="1.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="57.17" y="607.5" ></text>
</g>
<g >
<title>`CONVERT-GLOBAL-FUNCTION^CLEAVIR-GENERATE-AST^((T T CLASP))^METH (1 samples, 0.02%)</title><rect x="96.2" y="4821" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="99.25" y="4831.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (3 samples, 0.07%)</title><rect x="18.4" y="1941" width="0.7" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="21.36" y="1951.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="147.7" y="5429" width="0.3" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="150.73" y="5439.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="64.6" y="485" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="67.62" y="495.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="265.1" y="5541" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="268.08" y="5551.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="200.8" y="5509" width="0.2" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="203.79" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (14 samples, 0.31%)</title><rect x="73.8" y="4533" width="3.6" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="76.77" y="4543.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.07%)</title><rect x="416.9" y="5493" width="0.8" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="419.92" y="5503.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="160.3" y="4901" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="163.28" y="4911.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.20%)</title><rect x="78.2" y="4533" width="2.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="81.21" y="4543.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="146.9" y="5333" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="149.95" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (15 samples, 0.33%)</title><rect x="148.3" y="5509" width="3.9" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="151.25" y="5519.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="76.9" y="3941" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="79.91" y="3951.5" ></text>
</g>
<g >
<title>`llvm::Function::allocHungoffUselist() (1 samples, 0.02%)</title><rect x="367.0" y="5317" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="370.01" y="5327.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="79.5" y="3717" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="82.52" y="3727.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.1" y="2117" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="68.15" y="2127.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (30 samples, 0.66%)</title><rect x="27.5" y="4629" width="7.9" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="30.51" y="4639.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::reference_raw_(core::Symbol_O*, gcto (1 samples, 0.02%)</title><rect x="336.7" y="5205" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="339.69" y="5215.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2373" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="71.28" y="2383.5" ></text>
</g>
<g >
<title>`llvm::MemorySSAWrapperPass::releaseMemory() (1 samples, 0.02%)</title><rect x="534.5" y="5637" width="0.3" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="537.53" y="5647.5" ></text>
</g>
<g >
<title>`unw_init_local (1 samples, 0.02%)</title><rect x="49.5" y="4101" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="52.46" y="4111.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(l (8 samples, 0.18%)</title><rect x="565.1" y="5509" width="2.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="568.11" y="5519.5" ></text>
</g>
<g >
<title>`llvm::isAllocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo (1 samples, 0.02%)</title><rect x="520.9" y="5637" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="523.94" y="5647.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="1013" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="62.13" y="1023.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (9 samples, 0.20%)</title><rect x="50.0" y="3685" width="2.3" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="52.99" y="3695.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="321.8" y="5189" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="324.79" y="5199.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.02%)</title><rect x="528.5" y="5413" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="531.52" y="5423.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2261" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="71.28" y="2271.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeWrapperPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.04%)</title><rect x="590.5" y="5605" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="593.46" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="24.6" y="3941" width="0.6" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="27.64" y="3951.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (10 samples, 0.22%)</title><rect x="78.0" y="4757" width="2.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="80.95" y="4767.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="173.9" y="5349" width="0.2" height="15.0" fill="rgb(219,79,79)" rx="2" ry="2" />
<text  x="176.87" y="5359.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Metadata*, llvm::Metada (1 samples, 0.02%)</title><rect x="360.5" y="5317" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="363.47" y="5327.5" ></text>
</g>
<g >
<title>`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^ (6 samples, 0.13%)</title><rect x="57.8" y="1237" width="1.6" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="60.83" y="1247.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (31 samples, 0.69%)</title><rect x="37.4" y="4997" width="8.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="40.44" y="5007.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.02%)</title><rect x="22.0" y="2469" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="25.02" y="2479.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="109.3" y="5605" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="112.31" y="5615.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="917" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="62.13" y="927.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="24.6" y="3925" width="0.6" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="27.64" y="3935.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="40.1" y="4085" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="43.06" y="4095.5" ></text>
</g>
<g >
<title>`llvmo::Type_O::getPointerTo(int) (2 samples, 0.04%)</title><rect x="372.5" y="5333" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="375.49" y="5343.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;std::__1::pair&lt;llvm::Mem (1 samples, 0.02%)</title><rect x="546.0" y="5429" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="549.03" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="2101" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="73.63" y="2111.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (3 samples, 0.07%)</title><rect x="283.4" y="5541" width="0.8" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="286.37" y="5551.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2629" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="64.22" y="2639.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="59.7" y="3397" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="62.66" y="3407.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.5" y="1909" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="65.53" y="1919.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.04%)</title><rect x="260.9" y="5573" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="263.90" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4357" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="132.96" y="4367.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="410.7" y="5381" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="413.65" y="5391.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="376.4" y="5237" width="0.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="379.41" y="5247.5" ></text>
</g>
<g >
<title>`llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm (1 samples, 0.02%)</title><rect x="320.7" y="5141" width="0.3" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="323.75" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (21 samples, 0.47%)</title><rect x="38.7" y="4565" width="5.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="41.75" y="4575.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (8 samples, 0.18%)</title><rect x="466.3" y="5589" width="2.1" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="469.32" y="5599.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction*, unsigned  (2 samples, 0.04%)</title><rect x="617.1" y="5637" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="620.12" y="5647.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const (1 samples, 0.02%)</title><rect x="686.9" y="5637" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="689.90" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="64.4" y="821" width="0.5" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="67.36" y="831.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="210.5" y="5397" width="0.2" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="213.46" y="5407.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (33 samples, 0.73%)</title><rect x="329.1" y="5269" width="8.6" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="332.11" y="5279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.04%)</title><rect x="139.9" y="5109" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="142.89" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4453" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="138.19" y="4463.5" ></text>
</g>
<g >
<title>`FIND-IF^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="733.2" y="5605" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="736.16" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="2325" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="65.27" y="2335.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="341.7" y="5189" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="344.65" y="5199.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="55.5" y="1093" width="1.0" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="58.48" y="1103.5" ></text>
</g>
<g >
<title>0x10d597104 (2,981 samples, 66.02%)</title><rect x="10.0" y="6085" width="779.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="13.00" y="6095.5" >0x10d597104</text>
</g>
<g >
<title>`OPTIMIZED-SYMBOL-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (2 samples, 0.04%)</title><rect x="173.1" y="5285" width="0.5" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="176.08" y="5295.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2821" width="0.2" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="65.27" y="2831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="135.2" y="4501" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="138.19" y="4511.5" ></text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="24.4" y="3893" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="27.37" y="3903.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="560.9" y="5413" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="563.93" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="1397" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="65.53" y="1407.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="356.8" y="5285" width="0.3" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="359.81" y="5295.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="697.9" y="5557" width="0.2" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="700.88" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (4 samples, 0.09%)</title><rect x="23.6" y="4581" width="1.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="26.59" y="4591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="3797" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="135.31" y="3807.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="2485" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="73.63" y="2495.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="734.2" y="5493" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="737.20" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="58.3" y="533" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="61.35" y="543.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (1 samples, 0.02%)</title><rect x="147.7" y="5397" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="150.73" y="5407.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (2,981 samples, 66.02%)</title><rect x="10.0" y="6197" width="779.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="13.00" y="6207.5" >`CATCH-LAMBDA^CC-GENERATE-AST^FN^^</text>
</g>
<g >
<title>`thread_start (1,533 samples, 33.95%)</title><rect x="789.3" y="6421" width="400.7" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="792.35" y="6431.5" >`thread_start</text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="89.5" y="4453" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="92.45" y="4463.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="168.4" y="5013" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="171.38" y="5023.5" ></text>
</g>
<g >
<title>`llvm::GEPOperator::hasAllZeroIndices() const (1 samples, 0.02%)</title><rect x="508.1" y="5557" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="511.14" y="5567.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getEdgeValue(llvm::Va (1 samples, 0.02%)</title><rect x="436.5" y="5557" width="0.3" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="439.52" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="68.0" y="3237" width="1.8" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="71.02" y="3247.5" ></text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (2 samples, 0.04%)</title><rect x="624.7" y="5477" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="627.70" y="5487.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.9" y="2853" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="73.89" y="2863.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="330.7" y="4965" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="333.68" y="4975.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="38.0" y="4613" width="0.2" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="40.96" y="4623.5" ></text>
</g>
<g >
<title>`DATUM-KIND^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="122.9" y="5589" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="125.90" y="5599.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5477" width="1.1" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="14.31" y="5487.5" ></text>
</g>
<g >
<title>`translate::from_object&lt;llvm::ArrayRef&lt;llvm::Value*&gt;, std::__1:: (1 samples, 0.02%)</title><rect x="332.0" y="4965" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="334.98" y="4975.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.04%)</title><rect x="181.4" y="5525" width="0.6" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="184.45" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4821" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="136.36" y="4831.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.5" y="2069" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="65.53" y="2079.5" ></text>
</g>
<g >
<title>`CALCULATE-FUNCTION-INFO^CLASP-CLEAVIR^FN^^ (3 samples, 0.07%)</title><rect x="313.2" y="5429" width="0.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="316.17" y="5439.5" ></text>
</g>
<g >
<title>`core::core__vset(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ (1 samples, 0.02%)</title><rect x="73.8" y="4357" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="76.77" y="4367.5" ></text>
</g>
<g >
<title>`llvm::CallSiteBase&lt;llvm::Function, llvm::BasicBlock, llvm::Valu (1 samples, 0.02%)</title><rect x="517.5" y="5605" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="520.54" y="5615.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (8 samples, 0.18%)</title><rect x="63.3" y="3189" width="2.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="66.32" y="3199.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2005" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="65.79" y="2015.5" ></text>
</g>
<g >
<title>`STORE-TMV^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="333.6" y="5077" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="336.55" y="5087.5" ></text>
</g>
<g >
<title>`core::LambdaListHandler_O::createBindingsInScopeVaList(unsigned (2 samples, 0.04%)</title><rect x="419.8" y="5509" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="422.80" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4773" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="135.31" y="4783.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (6 samples, 0.13%)</title><rect x="12.4" y="5045" width="1.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="15.35" y="5055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5317" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="180.26" y="5327.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="5013" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="736.42" y="5023.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;(anonymous namespace)::Simple (1 samples, 0.02%)</title><rect x="441.2" y="5605" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="444.23" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (7 samples, 0.16%)</title><rect x="50.0" y="3589" width="1.8" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="52.99" y="3599.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eql(core::Hash1Generator&amp;, gctools::s (1 samples, 0.02%)</title><rect x="32.2" y="4309" width="0.3" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="35.21" y="4319.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="95.2" y="4437" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="98.20" y="4447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (18 samples, 0.40%)</title><rect x="152.4" y="5285" width="4.7" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="155.44" y="5295.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="1045" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="65.01" y="1055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4277" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="139.76" y="4287.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (1 samples, 0.02%)</title><rect x="67.2" y="1589" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="70.24" y="1599.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (1 samples, 0.02%)</title><rect x="203.1" y="5349" width="0.3" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="206.14" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="69.8" y="3205" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="72.85" y="3215.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (3 samples, 0.07%)</title><rect x="293.3" y="5397" width="0.8" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="296.30" y="5407.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="5493" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="100.55" y="5503.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="145.4" y="5061" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="148.38" y="5071.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (5 samples, 0.11%)</title><rect x="54.2" y="1861" width="1.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="57.17" y="1871.5" ></text>
</g>
<g >
<title>`DO-LTV^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5621" width="0.2" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="123.55" y="5631.5" ></text>
</g>
<g >
<title>`core::clasp_to_fixnum(gctools::smart_ptr&lt;core::Integer_O&gt;) (1 samples, 0.02%)</title><rect x="160.0" y="4885" width="0.3" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="163.02" y="4895.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (2 samples, 0.04%)</title><rect x="258.3" y="5493" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="261.28" y="5503.5" ></text>
</g>
<g >
<title>`llvm::AliasSetTracker::add(llvm::LoadInst*) (2 samples, 0.04%)</title><rect x="522.8" y="5605" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="525.77" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3685" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="132.96" y="3695.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.02%)</title><rect x="600.9" y="5637" width="0.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="603.91" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="65.7" y="2197" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="68.67" y="2207.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.02%)</title><rect x="677.2" y="5605" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="680.23" y="5615.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::BasicBlock*, std::__1::allocator&lt;ll (1 samples, 0.02%)</title><rect x="606.9" y="5621" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="609.93" y="5631.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.02%)</title><rect x="44.5" y="4485" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="47.50" y="4495.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.02%)</title><rect x="175.4" y="5317" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="178.44" y="5327.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, void (llvmo::IRBuilderBase_O::*)()&gt;::m (1 samples, 0.02%)</title><rect x="326.2" y="5221" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="329.23" y="5231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4581" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="140.02" y="4591.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldGetElementPtr(llvm::Type*, llvm::Constant*, b (1 samples, 0.02%)</title><rect x="624.4" y="5541" width="0.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="627.44" y="5551.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((BOX-INSTRUCTION T  (6 samples, 0.13%)</title><rect x="308.2" y="5477" width="1.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="311.20" y="5487.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (5 samples, 0.11%)</title><rect x="223.8" y="5509" width="1.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="226.79" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="143.6" y="5205" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="146.55" y="5215.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(l (1 samples, 0.02%)</title><rect x="449.6" y="5557" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="452.59" y="5567.5" ></text>
</g>
<g >
<title>0x10d596094 (88 samples, 1.95%)</title><rect x="49.5" y="4469" width="23.0" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="52.46" y="4479.5" >0..</text>
</g>
<g >
<title>`core::SimpleCharacterString_O::equal(gctools::smart_ptr&lt;core::T (1 samples, 0.02%)</title><rect x="364.9" y="5285" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="367.91" y="5295.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="385.8" y="5317" width="0.3" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="388.82" y="5327.5" ></text>
</g>
<g >
<title>`core::startup_functions_invoke() (215 samples, 4.76%)</title><rect x="732.6" y="5829" width="56.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="735.64" y="5839.5" >`core..</text>
</g>
<g >
<title>`FIXNUMP^CORE^FN^^ (1 samples, 0.02%)</title><rect x="100.7" y="5573" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="103.69" y="5583.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="679.1" y="5589" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="682.06" y="5599.5" ></text>
</g>
<g >
<title>`unsigned int llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorT (5 samples, 0.11%)</title><rect x="605.9" y="5637" width="1.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="608.88" y="5647.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1861" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="65.01" y="1871.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (1 samples, 0.02%)</title><rect x="57.8" y="917" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="60.83" y="927.5" ></text>
</g>
<g >
<title>`INPUTS^CLEAVIR-IR^FN^^ (2 samples, 0.04%)</title><rect x="247.0" y="5573" width="0.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="250.05" y="5583.5" ></text>
</g>
<g >
<title>`MAKE-LET-INIT-ASTS^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="3109" width="3.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="57.17" y="3119.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="64.1" y="1221" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="67.10" y="1231.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.02%)</title><rect x="550.2" y="5317" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="553.21" y="5327.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm: (2 samples, 0.04%)</title><rect x="590.5" y="5525" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="593.46" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4709" width="0.2" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="139.76" y="4719.5" ></text>
</g>
<g >
<title>`unw_init_local (1 samples, 0.02%)</title><rect x="26.7" y="4565" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="29.73" y="4575.5" ></text>
</g>
<g >
<title>`ENSURE-ORIGIN^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="332.5" y="5125" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="335.51" y="5135.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (2 samples, 0.04%)</title><rect x="85.8" y="4309" width="0.5" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="88.79" y="4319.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="411.7" y="5381" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="414.70" y="5391.5" ></text>
</g>
<g >
<title>`llvm::ScopedNoAliasAAResult::mayAliasInScopes(llvm::MDNode cons (1 samples, 0.02%)</title><rect x="553.1" y="5397" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="556.09" y="5407.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="56.5" y="181" width="1.1" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="59.52" y="191.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (23 samples, 0.51%)</title><rect x="38.7" y="4757" width="6.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="41.75" y="4767.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.6" y="197" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="67.62" y="207.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="757" width="1.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="57.17" y="767.5" ></text>
</g>
<g >
<title>`llvm::LibCallSimplifier::LibCallSimplifier(llvm::DataLayout con (1 samples, 0.02%)</title><rect x="638.8" y="5589" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="641.81" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="135.2" y="4789" width="1.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="138.19" y="4799.5" ></text>
</g>
<g >
<title>`llvm::BasicAAWrapperPass::runOnFunction(llvm::Function&amp;) (2 samples, 0.04%)</title><rect x="600.9" y="5669" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="603.91" y="5679.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolutionWrapperPass::releaseMemory() (2 samples, 0.04%)</title><rect x="691.1" y="5637" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="694.08" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4277" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="135.31" y="4287.5" ></text>
</g>
<g >
<title>`core::lisp_object_query(gctools::smart_ptr&lt;core::T_O&gt;, bool, gc (2 samples, 0.04%)</title><rect x="421.4" y="5637" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="424.37" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="136.2" y="4693" width="0.6" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="139.23" y="4703.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="24.6" y="4053" width="0.6" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="27.64" y="4063.5" ></text>
</g>
<g >
<title>`CHILDREN^CLEAVIR-AST^((TYPEQ-AST))^METHOD^^ (4 samples, 0.09%)</title><rect x="114.8" y="5621" width="1.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="117.80" y="5631.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (57 samples, 1.26%)</title><rect x="81.3" y="4997" width="14.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="84.35" y="5007.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5109" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="736.42" y="5119.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="53.4" y="2981" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="56.38" y="2991.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="65.9" y="1653" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="68.93" y="1663.5" ></text>
</g>
<g >
<title>`IRC-TMV-NRET^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="333.6" y="5061" width="0.2" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="336.55" y="5071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (59 samples, 1.31%)</title><rect x="128.4" y="5237" width="15.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="131.39" y="5247.5" ></text>
</g>
<g >
<title>`gctools::multiple_values&lt;core::T_O&gt; core::eval::applyLastArgsPL (1 samples, 0.02%)</title><rect x="735.2" y="5685" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="738.25" y="5695.5" ></text>
</g>
<g >
<title>`IRC-BASIC-BLOCK-CREATE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="391.0" y="5413" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="394.05" y="5423.5" ></text>
</g>
<g >
<title>`LITERAL-NODE-INDEX^LITERAL^FN^^ (3 samples, 0.07%)</title><rect x="121.6" y="5605" width="0.8" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="124.60" y="5615.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Type*, llvm::PointerTyp (1 samples, 0.02%)</title><rect x="523.0" y="5333" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="526.03" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="3957" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="131.91" y="3967.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (7 samples, 0.16%)</title><rect x="268.0" y="5589" width="1.8" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="270.95" y="5599.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2197" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="65.53" y="2207.5" ></text>
</g>
<g >
<title>`IRC-FUNCTION-CREATE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="337.2" y="5237" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="340.21" y="5247.5" ></text>
</g>
<g >
<title>`llvm::JumpThreadingPass::runImpl(llvm::Function&amp;, llvm::TargetL (10 samples, 0.22%)</title><rect x="446.5" y="5653" width="2.6" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="449.46" y="5663.5" ></text>
</g>
<g >
<title>`TEMP-ASTS-FROM-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="44.8" y="4805" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="47.76" y="4815.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="137.8" y="4773" width="0.5" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="140.80" y="4783.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="593.9" y="5541" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="596.86" y="5551.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="22.8" y="3221" width="0.3" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="25.81" y="3231.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="3141" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="64.22" y="3151.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_combine_recursive_helper::combine(u (1 samples, 0.02%)</title><rect x="572.4" y="5413" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="575.43" y="5423.5" ></text>
</g>
<g >
<title>`_platform_memchr$VARIANT$Base (1 samples, 0.02%)</title><rect x="638.0" y="5509" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="641.03" y="5519.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.02%)</title><rect x="91.8" y="4389" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="94.80" y="4399.5" ></text>
</g>
<g >
<title>`PROCESS-REQUIRED^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5301" width="1.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="14.31" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (11 samples, 0.24%)</title><rect x="148.3" y="5285" width="2.8" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="151.25" y="5295.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::BranchProbabilityInfo::BasicBlockCallbackV (1 samples, 0.02%)</title><rect x="533.5" y="5637" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="536.49" y="5647.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="53.9" y="2917" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="56.91" y="2927.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="57.6" y="1109" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="60.57" y="1119.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="55.5" y="1349" width="1.0" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="58.48" y="1359.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (2 samples, 0.04%)</title><rect x="419.8" y="5525" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="422.80" y="5535.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;boost::io::detail::format_item&lt;char, std::__1: (1 samples, 0.02%)</title><rect x="340.9" y="5141" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="343.87" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="69.8" y="3061" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="72.85" y="3071.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.02%)</title><rect x="352.4" y="5141" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="355.37" y="5151.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::Instruction&gt;, llvm:: (1 samples, 0.02%)</title><rect x="589.7" y="5573" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="592.68" y="5583.5" ></text>
</g>
<g >
<title>`llvm::Value::~Value() (1 samples, 0.02%)</title><rect x="445.7" y="5605" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="448.67" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="128.7" y="4597" width="1.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="131.65" y="4607.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (1 samples, 0.02%)</title><rect x="552.8" y="5301" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="555.83" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (73 samples, 1.62%)</title><rect x="128.1" y="5509" width="19.1" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="131.13" y="5519.5" ></text>
</g>
<g >
<title>`GC_mark_from (1 samples, 0.02%)</title><rect x="403.6" y="5189" width="0.3" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="406.59" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="2277" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="64.75" y="2287.5" ></text>
</g>
<g >
<title>`GC_mark_local (2 samples, 0.04%)</title><rect x="164.5" y="4853" width="0.5" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="167.46" y="4863.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'TAGBODY) T T T)) (1 samples, 0.02%)</title><rect x="57.6" y="1445" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="60.57" y="1455.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="395.2" y="5317" width="0.6" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="398.23" y="5327.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="163.7" y="5045" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="166.67" y="5055.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="122.1" y="5573" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="125.12" y="5583.5" ></text>
</g>
<g >
<title>`void boost::io::detail::put&lt;char, std::__1::char_traits&lt;char&gt;,  (1 samples, 0.02%)</title><rect x="368.6" y="5317" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="371.57" y="5327.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (3 samples, 0.07%)</title><rect x="661.5" y="5477" width="0.8" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="664.55" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (18 samples, 0.40%)</title><rect x="65.4" y="3429" width="4.7" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="68.41" y="3439.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="506.8" y="5397" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="509.83" y="5407.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (11 samples, 0.24%)</title><rect x="611.4" y="5573" width="2.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="614.37" y="5583.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatt (3 samples, 0.07%)</title><rect x="435.5" y="5541" width="0.8" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="438.48" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="63.1" y="2885" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="66.05" y="2895.5" ></text>
</g>
<g >
<title>`COMPILER-TIMER-ELAPSED^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="197.9" y="5621" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="200.91" y="5631.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm::Str (1 samples, 0.02%)</title><rect x="349.2" y="5109" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="352.23" y="5119.5" ></text>
</g>
<g >
<title>`GC_alloc_large (4 samples, 0.09%)</title><rect x="234.5" y="5445" width="1.0" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="237.50" y="5455.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="16.3" y="2293" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="19.27" y="2303.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::Value*, std::__1::allocator&lt;llvm::V (1 samples, 0.02%)</title><rect x="361.5" y="5253" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="364.52" y="5263.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="24.4" y="3877" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="27.37" y="3887.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="341" width="1.0" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="58.48" y="351.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="164.2" y="4901" width="0.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="167.20" y="4911.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (4 samples, 0.09%)</title><rect x="372.0" y="5381" width="1.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="374.97" y="5391.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="126.8" y="5301" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="129.82" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (2 samples, 0.04%)</title><rect x="62.5" y="3125" width="0.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="65.53" y="3135.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="421" width="0.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="65.01" y="431.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="12.4" y="4405" width="0.7" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="15.35" y="4415.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::IntegerType_O&gt; gctools::GCObjectAppro (1 samples, 0.02%)</title><rect x="345.1" y="5189" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="348.05" y="5199.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignmentInfo(llvm::AlignTypeEnum, unsigne (1 samples, 0.02%)</title><rect x="575.8" y="5557" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="578.83" y="5567.5" ></text>
</g>
<g >
<title>`GC_alloc_large (1 samples, 0.02%)</title><rect x="225.1" y="5445" width="0.3" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="228.09" y="5455.5" ></text>
</g>
<g >
<title>`FUNCTION-DESCRIPTION-NAME^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="419.3" y="5573" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="422.28" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4245" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="137.14" y="4255.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.02%)</title><rect x="419.5" y="5493" width="0.3" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="422.54" y="5503.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="408.0" y="5413" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="411.04" y="5423.5" ></text>
</g>
<g >
<title>`llvm::GVN::cleanupGlobalSets() (1 samples, 0.02%)</title><rect x="537.9" y="5621" width="0.3" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="540.93" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="1285" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="65.01" y="1295.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1637" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="65.27" y="1647.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="91.8" y="4437" width="1.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="94.80" y="4447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4389" width="0.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="136.36" y="4399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4197" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="138.19" y="4207.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="66.2" y="2357" width="1.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="69.19" y="2367.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.02%)</title><rect x="418.2" y="5541" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="421.23" y="5551.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.02%)</title><rect x="572.7" y="5477" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="575.69" y="5487.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1125" width="1.0" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="58.48" y="1135.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="67.0" y="1685" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="69.97" y="1695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4773" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="137.40" y="4783.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.9" y="3189" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="73.89" y="3199.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="68.0" y="2821" width="1.8" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="71.02" y="2831.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1557" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="20.58" y="1567.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="14.2" y="3525" width="1.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="17.18" y="3535.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&amp;,  (1 samples, 0.02%)</title><rect x="638.0" y="5541" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="641.03" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.9" y="1333" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="67.88" y="1343.5" ></text>
</g>
<g >
<title>`SUCCESSORS^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="227.7" y="5589" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="230.71" y="5599.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (4 samples, 0.09%)</title><rect x="153.0" y="5125" width="1.0" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="155.96" y="5135.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (91 samples, 2.02%)</title><rect x="12.4" y="5205" width="23.7" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="15.35" y="5215.5" >`..</text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="116.4" y="5621" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="119.37" y="5631.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (3 samples, 0.07%)</title><rect x="260.1" y="5557" width="0.8" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="263.11" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4917" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="140.02" y="4927.5" ></text>
</g>
<g >
<title>`COMPILE-ONLY-REG-AND-OPT-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="333.3" y="5093" width="0.3" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="336.29" y="5103.5" ></text>
</g>
<g >
<title>`ALLOCA-REGISTER-SAVE-AREA^COMPILER^FN^^ (7 samples, 0.16%)</title><rect x="363.6" y="5365" width="1.8" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="366.61" y="5375.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="393.9" y="5237" width="0.3" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="396.92" y="5247.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="53.1" y="3029" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="56.12" y="3039.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="331.2" y="4981" width="0.3" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="334.20" y="4991.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Symbol_O&gt; gctools::GCObjectAllocator&lt;c (1 samples, 0.02%)</title><rect x="163.7" y="4981" width="0.2" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="166.67" y="4991.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (5 samples, 0.11%)</title><rect x="226.4" y="5573" width="1.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="229.40" y="5583.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (11 samples, 0.24%)</title><rect x="667.8" y="5525" width="2.9" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="670.82" y="5535.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::markEdgeExecutable(llvm::Bas (4 samples, 0.09%)</title><rect x="713.6" y="5653" width="1.0" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="716.56" y="5663.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.02%)</title><rect x="49.2" y="4965" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="52.20" y="4975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.1" y="4677" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="141.06" y="4687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4453" width="0.5" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="137.66" y="4463.5" ></text>
</g>
<g >
<title>`llvm::Pass::getAdjustedAnalysisPointer(void const*) (2 samples, 0.04%)</title><rect x="536.4" y="5669" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="539.36" y="5679.5" ></text>
</g>
<g >
<title>`STRINGP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="377.2" y="5429" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="380.20" y="5439.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2517" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="65.79" y="2527.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="63.1" y="3157" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="66.05" y="3167.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4357" width="9.4" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="17.18" y="4367.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T LEXICAL-VARIABLE-INFO T T (1 samples, 0.02%)</title><rect x="94.9" y="4469" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="97.94" y="4479.5" ></text>
</g>
<g >
<title>`ALLOCA^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="311.6" y="5445" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="314.60" y="5455.5" ></text>
</g>
<g >
<title>`llvm::InstVisitor&lt;llvm::InstCombiner, llvm::Instruction*&gt;::dele (1 samples, 0.02%)</title><rect x="680.1" y="5637" width="0.3" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="683.10" y="5647.5" ></text>
</g>
<g >
<title>`core::cl__string_upcase(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="720.9" y="5637" width="0.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="723.87" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="70.6" y="3269" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="73.63" y="3279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (13 samples, 0.29%)</title><rect x="54.2" y="2261" width="3.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="57.17" y="2271.5" ></text>
</g>
<g >
<title>`wrapped_contagen_div_Number_spNumber_sp (1 samples, 0.02%)</title><rect x="365.2" y="5349" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="368.18" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.11%)</title><rect x="152.7" y="5221" width="1.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="155.70" y="5231.5" ></text>
</g>
<g >
<title>`llvm::ScopedNoAliasAAResult::getModRefInfo(llvm::ImmutableCallS (1 samples, 0.02%)</title><rect x="505.5" y="5525" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="508.52" y="5535.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="357.3" y="5317" width="0.3" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="360.34" y="5327.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="89.5" y="4469" width="0.2" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="92.45" y="4479.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="2229" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="65.27" y="2239.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5589" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="736.42" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4181" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="135.31" y="4191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (17 samples, 0.38%)</title><rect x="162.6" y="5093" width="4.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="165.63" y="5103.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="2021" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="68.93" y="2031.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (30 samples, 0.66%)</title><rect x="27.5" y="4789" width="7.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="30.51" y="4799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.4" y="4069" width="0.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="132.44" y="4079.5" ></text>
</g>
<g >
<title>`llvmo::Module_O::getFunction(gctools::smart_ptr&lt;core::Array_O&gt;) (1 samples, 0.02%)</title><rect x="410.4" y="5317" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="413.39" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="129.4" y="3941" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="132.44" y="3951.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="24.6" y="3573" width="0.6" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="27.64" y="3583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'MULTIPLE-VALUE-C (2 samples, 0.04%)</title><rect x="67.5" y="1685" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="70.50" y="1695.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilderBase_O::ClearCurrentDebugLocation() (1 samples, 0.02%)</title><rect x="357.9" y="5301" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="360.86" y="5311.5" ></text>
</g>
<g >
<title>`PROCESS-KEYS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="645" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="61.35" y="655.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2709" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="65.01" y="2719.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="690.3" y="5589" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="693.30" y="5599.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="107.0" y="5541" width="0.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="109.96" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="65.9" y="1797" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="68.93" y="1807.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="322.3" y="5205" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="325.31" y="5215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4757" width="0.3" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="141.85" y="4767.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5461" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="713.94" y="5471.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="44.2" y="4581" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="47.24" y="4591.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="419.8" y="5573" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="422.80" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="4117" width="0.2" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="131.65" y="4127.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;std::__1::pair&lt;llvm::DomTreeNodeBase&lt;llvm::Bas (1 samples, 0.02%)</title><rect x="429.5" y="5637" width="0.2" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="432.47" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (1 samples, 0.02%)</title><rect x="97.6" y="4725" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="100.55" y="4735.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="79.8" y="3845" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="82.78" y="3855.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.3" y="1957" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="20.32" y="1967.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (25 samples, 0.55%)</title><rect x="16.3" y="3045" width="6.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="19.27" y="3055.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="68.0" y="3221" width="1.8" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="71.02" y="3231.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (7 samples, 0.16%)</title><rect x="487.7" y="5589" width="1.9" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="490.75" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="59.9" y="3221" width="1.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="62.92" y="3231.5" ></text>
</g>
<g >
<title>`CCLASP-COMPILE-IN-ENV^CLASP-CLEAVIR^FN^^ (3 samples, 0.07%)</title><rect x="734.2" y="5621" width="0.8" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="737.20" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="1669" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="65.27" y="1679.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="1045" width="0.2" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="67.88" y="1055.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (5 samples, 0.11%)</title><rect x="475.2" y="5525" width="1.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="478.20" y="5535.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="5157" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="100.29" y="5167.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (2 samples, 0.04%)</title><rect x="105.4" y="5525" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="108.39" y="5535.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (3 samples, 0.07%)</title><rect x="391.3" y="5397" width="0.8" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="394.31" y="5407.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::Instruction&gt;, llvm:: (1 samples, 0.02%)</title><rect x="698.1" y="5557" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="701.14" y="5567.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AssumptionCache::A (1 samples, 0.02%)</title><rect x="667.8" y="5493" width="0.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="670.82" y="5503.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="117.7" y="5541" width="0.2" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="120.68" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="78.7" y="3653" width="0.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="81.74" y="3663.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2613" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="73.63" y="2623.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="58.3" y="517" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="61.35" y="527.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.02%)</title><rect x="275.3" y="5557" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="278.27" y="5567.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="164.2" y="4885" width="0.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="167.20" y="4895.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.0" y="2549" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="63.96" y="2559.5" ></text>
</g>
<g >
<title>`isIndexInRangeOfArrayType(unsigned long long, llvm::ConstantInt (1 samples, 0.02%)</title><rect x="611.9" y="5541" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="614.89" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="1413" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="68.93" y="1423.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="274.5" y="5557" width="0.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="277.49" y="5567.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="127.1" y="5333" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="130.09" y="5343.5" ></text>
</g>
<g >
<title>`llvm::FunctionTypeKeyInfo::getHashValue(llvm::FunctionTypeKeyIn (1 samples, 0.02%)</title><rect x="98.1" y="5621" width="0.2" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="101.08" y="5631.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="637.2" y="5509" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="640.24" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="127.1" y="5477" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="130.09" y="5487.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (3 samples, 0.07%)</title><rect x="208.4" y="5509" width="0.7" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="211.37" y="5519.5" ></text>
</g>
<g >
<title>`localeconv_l (1 samples, 0.02%)</title><rect x="139.4" y="4949" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="142.37" y="4959.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="395.8" y="5365" width="0.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="398.75" y="5375.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (1 samples, 0.02%)</title><rect x="528.0" y="5493" width="0.3" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="531.00" y="5503.5" ></text>
</g>
<g >
<title>`%INTRINSIC-CALL^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="292.5" y="5413" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="295.52" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="61.7" y="3189" width="0.8" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="64.75" y="3199.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="23.1" y="3653" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="26.07" y="3663.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.8" y="2197" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="65.79" y="2207.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="62.8" y="1253" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="65.79" y="1263.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="17.3" y="1845" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="20.32" y="1855.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="543.7" y="5509" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="546.68" y="5519.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="997" width="1.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="59.52" y="1007.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.02%)</title><rect x="77.7" y="4757" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="80.69" y="4767.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.04%)</title><rect x="390.5" y="5381" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="393.53" y="5391.5" ></text>
</g>
<g >
<title>`%MAKE-FUNCTION-INFO^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="313.2" y="5397" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="316.17" y="5407.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (1 samples, 0.02%)</title><rect x="595.9" y="5477" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="598.95" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="2101" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="65.01" y="2111.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL-BINDING^CLEAVIR-GENERATE-AST^FN^^ (20 samples, 0.44%)</title><rect x="16.8" y="2533" width="5.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="19.80" y="2543.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="50.0" y="3317" width="1.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="52.99" y="3327.5" ></text>
</g>
<g >
<title>`core::cl__make_hash_table(gctools::smart_ptr&lt;core::T_O&gt;, gctool (2 samples, 0.04%)</title><rect x="66.5" y="1669" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="69.45" y="1679.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2645" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="66.05" y="2655.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="1813" width="1.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="57.17" y="1823.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2613" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="65.53" y="2623.5" ></text>
</g>
<g >
<title>`llvm::APInt::sdiv_ov(llvm::APInt const&amp;, bool&amp;) const (1 samples, 0.02%)</title><rect x="560.9" y="5397" width="0.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="563.93" y="5407.5" ></text>
</g>
<g >
<title>`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="694.2" y="5589" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="697.22" y="5599.5" ></text>
</g>
<g >
<title>`llvm::APInt::sdiv(llvm::APInt const&amp;) const (1 samples, 0.02%)</title><rect x="662.6" y="5413" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="665.59" y="5423.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="229.0" y="5573" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="232.01" y="5583.5" ></text>
</g>
<g >
<title>`llvm::Value::getValueName() const (1 samples, 0.02%)</title><rect x="502.1" y="5461" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="505.12" y="5471.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.02%)</title><rect x="312.9" y="5349" width="0.3" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="315.91" y="5359.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="319.4" y="5301" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="322.44" y="5311.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (2 samples, 0.04%)</title><rect x="33.5" y="4261" width="0.5" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="36.52" y="4271.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm::Str (1 samples, 0.02%)</title><rect x="337.2" y="5109" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="340.21" y="5119.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (6 samples, 0.13%)</title><rect x="251.7" y="5541" width="1.6" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="254.75" y="5551.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="4901" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="100.55" y="4911.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="310.8" y="5397" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="313.82" y="5407.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="60.4" y="2661" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="63.44" y="2671.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.3" y="2085" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="65.27" y="2095.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((FDEFINITION-INSTRU (3 samples, 0.07%)</title><rect x="339.6" y="5301" width="0.7" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="342.56" y="5311.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="505.0" y="5413" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="508.00" y="5423.5" ></text>
</g>
<g >
<title>0x10d596094 (21 samples, 0.47%)</title><rect x="38.7" y="4517" width="5.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="41.75" y="4527.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="123.7" y="5573" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="126.69" y="5583.5" ></text>
</g>
<g >
<title>`IRC-GEP^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="341.4" y="5237" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="344.39" y="5247.5" ></text>
</g>
<g >
<title>`llvm::irsymtab::build(llvm::ArrayRef&lt;llvm::Module*&gt;, llvm::Smal (1 samples, 0.02%)</title><rect x="729.2" y="5685" width="0.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="732.24" y="5695.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getSinglePredecessor() const (1 samples, 0.02%)</title><rect x="585.0" y="5589" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="587.97" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4069" width="1.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="26.59" y="4079.5" ></text>
</g>
<g >
<title>`core::CxxObject_O::~CxxObject_O() (1 samples, 0.02%)</title><rect x="357.6" y="5365" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="360.60" y="5375.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getSinglePredecessor() const (1 samples, 0.02%)</title><rect x="446.7" y="5605" width="0.3" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="449.72" y="5615.5" ></text>
</g>
<g >
<title>`HOIST-LOAD-TIME-VALUE^CLASP-CLEAVIR-AST^FN^^ (107 samples, 2.37%)</title><rect x="98.6" y="5653" width="28.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="101.60" y="5663.5" >`..</text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="180.9" y="5573" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="183.92" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="1781" width="1.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="60.57" y="1791.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (3 samples, 0.07%)</title><rect x="305.8" y="5429" width="0.8" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="308.85" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="16.8" y="2485" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="19.80" y="2495.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="357.3" y="5333" width="0.3" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="360.34" y="5343.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="58.3" y="981" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="61.35" y="991.5" ></text>
</g>
<g >
<title>`FUNCTION-INLINE^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="52.3" y="3669" width="0.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="55.34" y="3679.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.04%)</title><rect x="380.6" y="5397" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="383.60" y="5407.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4757" width="23.0" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="52.46" y="4767.5" >`..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (6 samples, 0.13%)</title><rect x="12.4" y="4837" width="1.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="15.35" y="4847.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpAndConstConst(llvm::ICmpInst&amp;, llvm (1 samples, 0.02%)</title><rect x="656.6" y="5573" width="0.2" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="659.58" y="5583.5" ></text>
</g>
<g >
<title>`void boost::io::detail::distribute&lt;char, std::__1::char_traits&lt; (2 samples, 0.04%)</title><rect x="376.2" y="5349" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="379.15" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="136.0" y="4613" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="138.97" y="4623.5" ></text>
</g>
<g >
<title>`llvm::IRBuilderBase::SetInsertPoint(llvm::Instruction*) (6 samples, 0.13%)</title><rect x="480.2" y="5621" width="1.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="483.17" y="5631.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpInstWithConstantNotInt(llvm::ICmpIn (1 samples, 0.02%)</title><rect x="497.7" y="5605" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="500.68" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="65.9" y="1909" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="68.93" y="1919.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="570.3" y="5509" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="573.34" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (14 samples, 0.31%)</title><rect x="148.3" y="5365" width="3.6" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="151.25" y="5375.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoWrapperPass* llvm::Pass::getAnalysisIfAvailable&lt;l (1 samples, 0.02%)</title><rect x="600.9" y="5653" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="603.91" y="5663.5" ></text>
</g>
<g >
<title>`TEMP-ASTS-FROM-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="25.9" y="4309" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="28.94" y="4319.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (4 samples, 0.09%)</title><rect x="230.3" y="5365" width="1.1" height="15.0" fill="rgb(217,76,76)" rx="2" ry="2" />
<text  x="233.32" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="135.2" y="4757" width="1.0" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="138.19" y="4767.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (233 samples, 5.16%)</title><rect x="36.4" y="5349" width="60.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="39.40" y="5359.5" >`CONVE..</text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="917" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="65.01" y="927.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="259.1" y="5509" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="262.07" y="5519.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.02%)</title><rect x="281.0" y="5589" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="284.02" y="5599.5" ></text>
</g>
<g >
<title>`core::core__make_vector(gctools::smart_ptr&lt;core::T_O&gt;, unsigned (1 samples, 0.02%)</title><rect x="130.5" y="4629" width="0.2" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="133.48" y="4639.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="357.9" y="5365" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="360.86" y="5375.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="65.7" y="1877" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="68.67" y="1887.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (6 samples, 0.13%)</title><rect x="277.6" y="5573" width="1.6" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="280.62" y="5583.5" ></text>
</g>
<g >
<title>`MAKE-INITIALIZE-CLOSURE-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="241.8" y="5557" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="244.82" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (13 samples, 0.29%)</title><rect x="74.0" y="4405" width="3.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="77.03" y="4415.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T CLASP))^METHOD^^ (1 samples, 0.02%)</title><rect x="58.3" y="741" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="61.35" y="751.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.02%)</title><rect x="437.0" y="5429" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="440.05" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="2645" width="2.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="68.41" y="2655.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::T_O&gt; (core::S (1 samples, 0.02%)</title><rect x="327.0" y="5205" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="330.02" y="5215.5" ></text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE T (1 samples, 0.02%)</title><rect x="64.9" y="725" width="0.2" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="67.88" y="735.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (1 samples, 0.02%)</title><rect x="449.6" y="5509" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="452.59" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="58.3" y="1125" width="1.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="61.35" y="1135.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (2 samples, 0.04%)</title><rect x="595.7" y="5605" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="598.69" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="50.8" y="2965" width="0.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="53.77" y="2975.5" ></text>
</g>
<g >
<title>`GET-DILOCATION^LLVM-SYS^FN^^ (3 samples, 0.07%)</title><rect x="315.8" y="5285" width="0.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="318.78" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (10 samples, 0.22%)</title><rect x="65.4" y="2725" width="2.6" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="68.41" y="2735.5" ></text>
</g>
<g >
<title>`llvm::AliasSetTracker::add(llvm::BasicBlock&amp;) (2 samples, 0.04%)</title><rect x="522.8" y="5621" width="0.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="525.77" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="3093" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="100.29" y="3103.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (1 samples, 0.02%)</title><rect x="438.1" y="5605" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="441.09" y="5615.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::BinaryOp_match&lt;llvm::PatternMatch::bin (1 samples, 0.02%)</title><rect x="432.6" y="5557" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="435.60" y="5567.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="169.2" y="4901" width="0.2" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="172.16" y="4911.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (20 samples, 0.44%)</title><rect x="54.2" y="3173" width="5.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="57.17" y="3183.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="298.5" y="5381" width="0.3" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="301.53" y="5391.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="24.6" y="4165" width="1.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="27.64" y="4175.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (16 samples, 0.35%)</title><rect x="73.5" y="4693" width="4.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="76.51" y="4703.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (1 samples, 0.02%)</title><rect x="451.9" y="5573" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="454.94" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (1 samples, 0.02%)</title><rect x="62.3" y="1989" width="0.2" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="65.27" y="1999.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Function* (llvmo::Module_O::*)(g (1 samples, 0.02%)</title><rect x="324.4" y="5141" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="327.41" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="2181" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="65.27" y="2191.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (2 samples, 0.04%)</title><rect x="736.3" y="5173" width="0.5" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="739.29" y="5183.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="331.7" y="5029" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="334.72" y="5039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3797" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="132.96" y="3807.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1957" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="65.79" y="1967.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="3973" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="100.29" y="3983.5" ></text>
</g>
<g >
<title>`FUNCTION-INLINE^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="52.3" y="3717" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="55.34" y="3727.5" ></text>
</g>
<g >
<title>`core::bind_optional_va_list(gctools::Vec0&lt;core::OptionalArgumen (1 samples, 0.02%)</title><rect x="186.9" y="5477" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="189.93" y="5487.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.04%)</title><rect x="25.2" y="3957" width="0.5" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="28.16" y="3967.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm (1 samples, 0.02%)</title><rect x="485.7" y="5493" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="488.66" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (60 samples, 1.33%)</title><rect x="128.1" y="5285" width="15.7" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="131.13" y="5295.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="580.0" y="5589" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="583.01" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.02%)</title><rect x="167.3" y="4981" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="170.33" y="4991.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="518.6" y="5557" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="521.59" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="126.8" y="5477" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="129.82" y="5487.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="268.5" y="5365" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="271.48" y="5375.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.02%)</title><rect x="478.6" y="5573" width="0.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="481.60" y="5583.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.3" y="2965" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="65.27" y="2975.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="53.9" y="2677" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="56.91" y="2687.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="437.0" y="5445" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="440.05" y="5455.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="43.2" y="4309" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="46.19" y="4319.5" ></text>
</g>
<g >
<title>0x10d596094 (9 samples, 0.20%)</title><rect x="78.2" y="4277" width="2.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="81.21" y="4287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.02%)</title><rect x="148.8" y="4901" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="151.78" y="4911.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="12.9" y="4277" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="15.87" y="4287.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="37" width="0.3" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="61.35" y="47.5" ></text>
</g>
<g >
<title>`IN^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="394.7" y="5445" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="397.71" y="5455.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4085" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="100.29" y="4095.5" ></text>
</g>
<g >
<title>`GC_alloc_large (3 samples, 0.07%)</title><rect x="85.8" y="4389" width="0.8" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="88.79" y="4399.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="64.4" y="1109" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="67.36" y="1119.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (2 samples, 0.04%)</title><rect x="29.1" y="4373" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="32.08" y="4383.5" ></text>
</g>
<g >
<title>`core::ext__class_unboundp(gctools::smart_ptr&lt;core::ClassHolder_ (1 samples, 0.02%)</title><rect x="264.0" y="5573" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="267.03" y="5583.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="524.6" y="5509" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="527.60" y="5519.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="24.6" y="3813" width="0.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="27.64" y="3823.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL-BINDING^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="39.3" y="4277" width="1.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="42.27" y="4287.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (3 samples, 0.07%)</title><rect x="160.5" y="4917" width="0.8" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="163.54" y="4927.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="65.7" y="1973" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="68.67" y="1983.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="506.8" y="5445" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="509.83" y="5455.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::SCEV const*, llvm::SmallVector&lt;llvm::Point (1 samples, 0.02%)</title><rect x="537.1" y="5653" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="540.15" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="63.1" y="2677" width="0.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="66.05" y="2687.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="516.2" y="5541" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="519.24" y="5551.5" ></text>
</g>
<g >
<title>`llvmo::Type_O::getPointerTo(int) (1 samples, 0.02%)</title><rect x="390.3" y="5333" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="393.27" y="5343.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (3 samples, 0.07%)</title><rect x="386.6" y="5397" width="0.8" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="389.61" y="5407.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitStoreInst(llvm::StoreInst&amp;) (6 samples, 0.13%)</title><rect x="674.1" y="5621" width="1.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="677.09" y="5631.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (18 samples, 0.40%)</title><rect x="17.3" y="2165" width="4.7" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="20.32" y="2175.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="401.0" y="5301" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="403.98" y="5311.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (2 samples, 0.04%)</title><rect x="684.5" y="5637" width="0.6" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="687.55" y="5647.5" ></text>
</g>
<g >
<title>`llvm::CallSiteBase&lt;llvm::Function, llvm::BasicBlock, llvm::Valu (1 samples, 0.02%)</title><rect x="430.5" y="5637" width="0.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="433.51" y="5647.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::retrack(void*, llvm::Metadata&amp;, void*) (1 samples, 0.02%)</title><rect x="337.7" y="5125" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="340.73" y="5135.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (4 samples, 0.09%)</title><rect x="551.8" y="5317" width="1.0" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="554.78" y="5327.5" ></text>
</g>
<g >
<title>`small_malloc_should_clear (4 samples, 0.09%)</title><rect x="704.4" y="5557" width="1.1" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="707.41" y="5567.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (1 samples, 0.02%)</title><rect x="673.6" y="5573" width="0.2" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="676.57" y="5583.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="78.7" y="3669" width="0.6" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="81.74" y="3679.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (2 samples, 0.04%)</title><rect x="43.7" y="4421" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="46.71" y="4431.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="1125" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="67.88" y="1135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="135.2" y="4549" width="0.5" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="138.19" y="4559.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (7 samples, 0.16%)</title><rect x="466.6" y="5573" width="1.8" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="469.58" y="5583.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (4 samples, 0.09%)</title><rect x="407.0" y="5445" width="1.0" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="409.99" y="5455.5" ></text>
</g>
<g >
<title>`llvm::InstVisitor&lt;llvm::InstCombiner, llvm::Instruction*&gt;::visi (1 samples, 0.02%)</title><rect x="519.4" y="5637" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="522.37" y="5647.5" ></text>
</g>
<g >
<title>`IRC-FDEFINITION^COMPILER^FN^^ (11 samples, 0.24%)</title><rect x="379.6" y="5461" width="2.8" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="382.55" y="5471.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="339.8" y="5221" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="342.83" y="5231.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="57.6" y="1717" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="60.57" y="1727.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="61.7" y="2997" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="64.75" y="3007.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="2085" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="65.53" y="2095.5" ></text>
</g>
<g >
<title>`llvm::CallSiteBase&lt;llvm::Function const, llvm::BasicBlock const (3 samples, 0.07%)</title><rect x="503.7" y="5525" width="0.8" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="506.69" y="5535.5" ></text>
</g>
<g >
<title>`%GEP^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="351.1" y="5269" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="354.06" y="5279.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="194.5" y="5493" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="197.51" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (3 samples, 0.07%)</title><rect x="50.8" y="2789" width="0.8" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="53.77" y="2799.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1317" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="68.93" y="1327.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="381.6" y="5269" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="384.64" y="5279.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1189" width="1.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="59.52" y="1199.5" ></text>
</g>
<g >
<title>`COMPUTE-DYNENV-DESTINATIONS^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="398.6" y="5365" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="401.63" y="5375.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4501" width="23.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="52.46" y="4511.5" >`..</text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="56.5" y="645" width="1.1" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="59.52" y="655.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="3157" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="64.22" y="3167.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2277" width="3.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="57.17" y="2287.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="2981" width="1.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="60.57" y="2991.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="2949" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="100.29" y="2959.5" ></text>
</g>
<g >
<title>`core::Rational_O::create(__gmp_expr&lt;__mpz_struct [1], __mpz_str (5 samples, 0.11%)</title><rect x="735.8" y="5701" width="1.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="738.77" y="5711.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="70.1" y="2741" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="73.11" y="2751.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="286.5" y="5461" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="289.51" y="5471.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2325" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="71.28" y="2335.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="96.2" y="4949" width="0.6" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="99.25" y="4959.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="64.4" y="1125" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="67.36" y="1135.5" ></text>
</g>
<g >
<title>`llvm::APInt::udiv(llvm::APInt const&amp;) const (1 samples, 0.02%)</title><rect x="661.5" y="5413" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="664.55" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-TAG-CHECK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="320.7" y="5253" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="323.75" y="5263.5" ></text>
</g>
<g >
<title>`SLOT-DEFINITION-INITARGS^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="103.8" y="5589" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="106.83" y="5599.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="148.8" y="4869" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="151.78" y="4879.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="68.0" y="2501" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="71.02" y="2511.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::Instruction*, unsigned long&gt;*  (2 samples, 0.04%)</title><rect x="452.5" y="5637" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="455.47" y="5647.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="439.1" y="5621" width="0.3" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="442.14" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4709" width="0.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="136.62" y="4719.5" ></text>
</g>
<g >
<title>`llvm::Value* SimplifyCall&lt;llvm::Use*&gt;(llvm::ImmutableCallSite,  (1 samples, 0.02%)</title><rect x="506.6" y="5413" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="509.57" y="5423.5" ></text>
</g>
<g >
<title>`unw_set_reg (1 samples, 0.02%)</title><rect x="48.2" y="5029" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="51.16" y="5039.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyMultipleUseDemandedBits(llvm::Instr (1 samples, 0.02%)</title><rect x="498.5" y="5541" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="501.47" y="5551.5" ></text>
</g>
<g >
<title>`wrapped_FunctionType_O__get_core__T_spcore__T_spcore__T_sp (1 samples, 0.02%)</title><rect x="337.0" y="5221" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="339.95" y="5231.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="378.8" y="5397" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="381.77" y="5407.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.07%)</title><rect x="64.1" y="1413" width="0.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="67.10" y="1423.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T LEXICAL-VARIABLE-INFO T T (4 samples, 0.09%)</title><rect x="41.1" y="4341" width="1.0" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="44.10" y="4351.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::FoldReinterpretLoadFromConstPtr(llvm::Co (1 samples, 0.02%)</title><rect x="479.6" y="5589" width="0.3" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="482.65" y="5599.5" ></text>
</g>
<g >
<title>`INPUTS^CLEAVIR-IR^FN^^ (2 samples, 0.04%)</title><rect x="216.7" y="5573" width="0.6" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="219.73" y="5583.5" ></text>
</g>
<g >
<title>`core::clasp_parseNamestring(gctools::smart_ptr&lt;core::T_O&gt;, unsi (1 samples, 0.02%)</title><rect x="721.1" y="5621" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="724.14" y="5631.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;llvm::Instruction*, unsig (2 samples, 0.04%)</title><rect x="618.4" y="5621" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="621.43" y="5631.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="410.7" y="5301" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="413.65" y="5311.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (6 samples, 0.13%)</title><rect x="230.3" y="5429" width="1.6" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="233.32" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4165" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="141.85" y="4175.5" ></text>
</g>
<g >
<title>`core::cl__append(gctools::smart_ptr&lt;core::Vaslist&gt;) (1 samples, 0.02%)</title><rect x="87.1" y="4453" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="90.10" y="4463.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.02%)</title><rect x="197.7" y="5509" width="0.2" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="200.65" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="12.4" y="4341" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="15.35" y="4351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4261" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="137.40" y="4271.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="24.9" y="3445" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="27.90" y="3455.5" ></text>
</g>
<g >
<title>`core::eformat_read_char(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="421.4" y="5605" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="424.37" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (6 samples, 0.13%)</title><rect x="24.6" y="4549" width="1.6" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="27.64" y="4559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="148.3" y="5157" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="151.25" y="5167.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="354.7" y="5253" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="357.72" y="5263.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="419.5" y="5557" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="422.54" y="5567.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="169.2" y="4821" width="0.2" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="172.16" y="4831.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (57 samples, 1.26%)</title><rect x="81.3" y="4981" width="14.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="84.35" y="4991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="155.0" y="5109" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="158.05" y="5119.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="125.8" y="5621" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="128.78" y="5631.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="381.1" y="5413" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="384.12" y="5423.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.04%)</title><rect x="29.1" y="4341" width="0.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="32.08" y="4351.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="229.5" y="5573" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="232.53" y="5583.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="77.7" y="4773" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="80.69" y="4783.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="605.1" y="5573" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="608.10" y="5583.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.02%)</title><rect x="597.0" y="5541" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="599.99" y="5551.5" ></text>
</g>
<g >
<title>`llvm::Twine::toStringRef(llvm::SmallVectorImpl&lt;char&gt;&amp;) const (1 samples, 0.02%)</title><rect x="353.9" y="5157" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="356.94" y="5167.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm (1 samples, 0.02%)</title><rect x="349.2" y="5093" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="352.23" y="5103.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="59.4" y="2997" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="62.40" y="3007.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="320.7" y="5157" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="323.75" y="5167.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.02%)</title><rect x="493.2" y="5413" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="496.24" y="5423.5" ></text>
</g>
<g >
<title>`MEMBER1^CORE^FN^^ (1 samples, 0.02%)</title><rect x="194.8" y="5525" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="197.78" y="5535.5" ></text>
</g>
<g >
<title>`small_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="459.8" y="5493" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="462.79" y="5503.5" ></text>
</g>
<g >
<title>`core::HashTableEqual_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt; (2 samples, 0.04%)</title><rect x="370.9" y="5301" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="373.93" y="5311.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="837" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="20.58" y="847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.4" y="4181" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="132.44" y="4191.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="329.9" y="5109" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="332.89" y="5119.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="3029" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="66.05" y="3039.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="308.7" y="5349" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="311.72" y="5359.5" ></text>
</g>
<g >
<title>`llvm::SHA1::writebyte(unsigned char) (2 samples, 0.04%)</title><rect x="727.1" y="5653" width="0.6" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="730.15" y="5663.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::getModRefInfo(llvm::ImmutableCallSite, llv (1 samples, 0.02%)</title><rect x="527.0" y="5541" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="529.95" y="5551.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="5029" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="736.42" y="5039.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, bool (llvmo::Type_O::*)(gctools::smart (1 samples, 0.02%)</title><rect x="10.5" y="5621" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="13.52" y="5631.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="2853" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="73.11" y="2863.5" ></text>
</g>
<g >
<title>`GC_allocobj (3 samples, 0.07%)</title><rect x="33.3" y="4309" width="0.7" height="15.0" fill="rgb(217,76,76)" rx="2" ry="2" />
<text  x="36.26" y="4319.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="376.9" y="5349" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="379.94" y="5359.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.1" y="2197" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="20.06" y="2207.5" ></text>
</g>
<g >
<title>`GET-DILOCATION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="329.4" y="5125" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="332.37" y="5135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (17 samples, 0.38%)</title><rect x="152.4" y="5269" width="4.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="155.44" y="5279.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (2 samples, 0.04%)</title><rect x="33.5" y="4229" width="0.5" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="36.52" y="4239.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (3 samples, 0.07%)</title><rect x="85.8" y="4341" width="0.8" height="15.0" fill="rgb(248,121,121)" rx="2" ry="2" />
<text  x="88.79" y="4351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="150.3" y="5093" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="153.35" y="5103.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="805" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="65.01" y="815.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (5 samples, 0.11%)</title><rect x="54.2" y="821" width="1.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="57.17" y="831.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (25 samples, 0.55%)</title><rect x="16.3" y="2965" width="6.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="19.27" y="2975.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="27.5" y="4341" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="30.51" y="4351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5189" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="130.35" y="5199.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="64.6" y="261" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="67.62" y="271.5" ></text>
</g>
<g >
<title>`llvm::GVN::performScalarPRE(llvm::Instruction*) (10 samples, 0.22%)</title><rect x="577.4" y="5621" width="2.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="580.39" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.2" y="3781" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="132.18" y="3791.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="292.5" y="5381" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="295.52" y="5391.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4213" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="736.42" y="4223.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="403.6" y="5349" width="0.3" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="406.59" y="5359.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="19.1" y="1845" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="22.15" y="1855.5" ></text>
</g>
<g >
<title>`core::write_ugly_object(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.02%)</title><rect x="11.0" y="5605" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="14.05" y="5615.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="739.4" y="5621" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="742.43" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="1749" width="0.2" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="20.58" y="1759.5" ></text>
</g>
<g >
<title>`CALL-WITH-COMPILATION-RESULTS^COMPILER^FN^^ (2,764 samples, 61.22%)</title><rect x="10.0" y="5829" width="722.4" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="13.00" y="5839.5" >`CALL-WITH-COMPILATION-RESULTS^COMPILER^FN^^</text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="61.7" y="3045" width="0.3" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="64.75" y="3055.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (40 samples, 0.89%)</title><rect x="14.2" y="4885" width="10.4" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="17.18" y="4895.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.02%)</title><rect x="229.3" y="5589" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="232.27" y="5599.5" ></text>
</g>
<g >
<title>`llvm::computeOverflowForSignedAdd(llvm::Value const*, llvm::Val (1 samples, 0.02%)</title><rect x="637.2" y="5589" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="640.24" y="5599.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="366.7" y="5413" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="369.74" y="5423.5" ></text>
</g>
<g >
<title>`llvm::User::operator new(unsigned long, unsigned int) (1 samples, 0.02%)</title><rect x="312.9" y="5333" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="315.91" y="5343.5" ></text>
</g>
<g >
<title>`std::__1::__function::__func&lt;llvm::TargetTransformInfo (*)(llvm (1 samples, 0.02%)</title><rect x="429.7" y="5621" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="432.73" y="5631.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="24.4" y="3989" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="27.37" y="3999.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="180.9" y="5525" width="0.3" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="183.92" y="5535.5" ></text>
</g>
<g >
<title>`computeKnownBitsAddSub(bool, llvm::Value const*, llvm::Value co (1 samples, 0.02%)</title><rect x="642.7" y="5493" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="645.73" y="5503.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (7 samples, 0.16%)</title><rect x="237.6" y="5557" width="1.9" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="240.64" y="5567.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.02%)</title><rect x="149.3" y="4997" width="0.3" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="152.30" y="5007.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="10.5" y="5685" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="13.52" y="5695.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENCLOSE-INSTRUCTIO (260 samples, 5.76%)</title><rect x="310.3" y="5477" width="67.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="313.29" y="5487.5" >`TRANSL..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (88 samples, 1.95%)</title><rect x="49.5" y="4485" width="23.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="52.46" y="4495.5" >`..</text>
</g>
<g >
<title>`core::core__cons_length(gctools::smart_ptr&lt;core::Cons_O&gt;) (1 samples, 0.02%)</title><rect x="240.8" y="5525" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="243.77" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="63.6" y="2581" width="1.8" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="66.58" y="2591.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1,117 samples, 24.74%)</title><rect x="425.8" y="5733" width="291.9" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="428.81" y="5743.5" >`core::IndirectVariadicMethoid&lt;core::po..</text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="19.4" y="1909" width="0.3" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="22.41" y="1919.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getNonLocalPointerDepFromBB(llvm (23 samples, 0.51%)</title><rect x="563.5" y="5557" width="6.1" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="566.54" y="5567.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldTerminator(llvm::BasicBlock*, bool, llvm::Tar (1 samples, 0.02%)</title><rect x="699.4" y="5637" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="702.44" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (12 samples, 0.27%)</title><rect x="139.9" y="5125" width="3.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="142.89" y="5135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="143.6" y="5141" width="0.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="146.55" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="1269" width="1.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="58.48" y="1279.5" ></text>
</g>
<g >
<title>`core::clos__classp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="41.6" y="4197" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="44.62" y="4207.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (18 samples, 0.40%)</title><rect x="17.3" y="2357" width="4.7" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="20.32" y="2367.5" ></text>
</g>
<g >
<title>`boost::io::basic_oaltstringstream&lt;char, std::__1::char_traits&lt;c (1 samples, 0.02%)</title><rect x="376.2" y="5317" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="379.15" y="5327.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1461" width="1.1" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="59.52" y="1471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="2085" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="65.79" y="2095.5" ></text>
</g>
<g >
<title>`core::cl__probe_file(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="721.1" y="5701" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="724.14" y="5711.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="97.3" y="4053" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="100.29" y="4063.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="684.5" y="5573" width="0.6" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="687.55" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.5" y="4821" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="140.54" y="4831.5" ></text>
</g>
<g >
<title>`llvmo::Value_O::create(llvm::Value*) (1 samples, 0.02%)</title><rect x="362.0" y="5269" width="0.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="365.04" y="5279.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="63.1" y="2773" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="66.05" y="2783.5" ></text>
</g>
<g >
<title>`isObjectSmallerThan(llvm::Value const*, unsigned long long, llv (1 samples, 0.02%)</title><rect x="527.7" y="5509" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="530.74" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.5" y="1125" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="65.53" y="1135.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="12.4" y="4565" width="1.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="15.35" y="4575.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="19.9" y="2053" width="1.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="22.93" y="2063.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (1 samples, 0.02%)</title><rect x="194.5" y="5525" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="197.51" y="5535.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="40.8" y="4181" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="43.84" y="4191.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1365" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="24.50" y="1375.5" ></text>
</g>
<g >
<title>`SEPARATE-ORDINARY-BODY^CLEAVIR-CODE-UTILITIES^FN^^ (1 samples, 0.02%)</title><rect x="23.3" y="3781" width="0.3" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="26.33" y="3791.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (609 samples, 13.49%)</title><rect x="428.4" y="5685" width="159.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="431.42" y="5695.5" >`llvm::FPPassManager..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4581" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="139.23" y="4591.5" ></text>
</g>
<g >
<title>`wrapped_Create_llvm__LLVMContext_const_llvm__Twine_llvm__Functi (1 samples, 0.02%)</title><rect x="338.0" y="5221" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="341.00" y="5231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4837" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="140.28" y="4847.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="332.0" y="5061" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="334.98" y="5071.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (3 samples, 0.07%)</title><rect x="11.6" y="4613" width="0.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="14.57" y="4623.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="381.6" y="5397" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="384.64" y="5407.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="327.8" y="5237" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="330.80" y="5247.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpInstWithConstant(llvm::ICmpInst&amp;) (1 samples, 0.02%)</title><rect x="497.4" y="5605" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="500.42" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="64.9" y="1013" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="67.88" y="1023.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (15 samples, 0.33%)</title><rect x="291.5" y="5477" width="3.9" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="294.48" y="5487.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="65.7" y="2149" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="68.67" y="2159.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="194.0" y="5541" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="196.99" y="5551.5" ></text>
</g>
<g >
<title>`llvm::APInt::operator*(llvm::APInt const&amp;) const (1 samples, 0.02%)</title><rect x="615.8" y="5605" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="618.81" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="3013" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="62.40" y="3023.5" ></text>
</g>
<g >
<title>`instructionClobbersQuery(llvm::MemoryDef*, llvm::MemoryLocation (9 samples, 0.20%)</title><rect x="526.4" y="5589" width="2.4" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="529.43" y="5599.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="354.2" y="5141" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="357.20" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="21.5" y="1397" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="24.50" y="1407.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1413" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="65.79" y="1423.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="395.8" y="5317" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="398.75" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (55 samples, 1.22%)</title><rect x="81.3" y="4661" width="14.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="84.35" y="4671.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="453" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="65.01" y="463.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="78.0" y="4661" width="2.6" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="80.95" y="4671.5" ></text>
</g>
<g >
<title>`GC_clear_marks (1 samples, 0.02%)</title><rect x="423.2" y="5573" width="0.3" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="426.20" y="5583.5" ></text>
</g>
<g >
<title>`OPTIMIZED-INITIALIZE-CLOSURE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN (1 samples, 0.02%)</title><rect x="241.8" y="5541" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="244.82" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="2837" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="65.53" y="2847.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (3 samples, 0.07%)</title><rect x="71.4" y="3893" width="0.8" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="74.42" y="3903.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="126.8" y="5365" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="129.82" y="5375.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="473.1" y="5557" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="476.11" y="5567.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="653.4" y="5541" width="0.3" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="656.45" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (4 samples, 0.09%)</title><rect x="23.6" y="4773" width="1.0" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="26.59" y="4783.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.02%)</title><rect x="22.3" y="2709" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="25.28" y="2719.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1253" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="69.19" y="1263.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4725" width="1.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="26.59" y="4735.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CALL-AST-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="39.3" y="4117" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="42.27" y="4127.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="321.8" y="5237" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="324.79" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="126.8" y="5589" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="129.82" y="5599.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (1 samples, 0.02%)</title><rect x="420.8" y="5589" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="423.84" y="5599.5" ></text>
</g>
<g >
<title>`GC_allocobj (2 samples, 0.04%)</title><rect x="25.2" y="3909" width="0.5" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="28.16" y="3919.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="300.1" y="5173" width="0.3" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="303.10" y="5183.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="228.8" y="5573" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="231.75" y="5583.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.04%)</title><rect x="189.0" y="5509" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="192.03" y="5519.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="123.2" y="5557" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="126.17" y="5567.5" ></text>
</g>
<g >
<title>`LITERAL-NODE-INDEX^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="207.6" y="5541" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="210.58" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="58.3" y="197" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="61.35" y="207.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="705.7" y="5637" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="708.72" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="56.5" y="1397" width="1.1" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="59.52" y="1407.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="53.6" y="2629" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="56.65" y="2639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TYPEQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="4997" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="180.26" y="5007.5" ></text>
</g>
<g >
<title>0x10d596094 (18 samples, 0.40%)</title><rect x="17.3" y="2293" width="4.7" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="20.32" y="2303.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (22 samples, 0.49%)</title><rect x="59.7" y="3413" width="5.7" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="62.66" y="3423.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="151.9" y="5365" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="154.91" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4581" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="137.40" y="4591.5" ></text>
</g>
<g >
<title>`llvm::getConstantDataArrayInfo(llvm::Value const*, llvm::Consta (1 samples, 0.02%)</title><rect x="444.1" y="5573" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="447.10" y="5583.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="309.8" y="5381" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="312.77" y="5391.5" ></text>
</g>
<g >
<title>`llvm::BitstreamWriter::EmitVBR(unsigned int, unsigned int) (1 samples, 0.02%)</title><rect x="726.6" y="5637" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="729.62" y="5647.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Instruction*&gt;::insert(llvm::Instruc (1 samples, 0.02%)</title><rect x="705.7" y="5653" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="708.72" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="965" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="68.93" y="975.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="662.6" y="5493" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="665.59" y="5503.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="45.3" y="4981" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="48.28" y="4991.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="378.2" y="5349" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="381.24" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="145.1" y="5317" width="1.6" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="148.12" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (4 samples, 0.09%)</title><rect x="56.5" y="757" width="1.1" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="59.52" y="767.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="346.1" y="5253" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="349.10" y="5263.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::freePass(llvm::Pass*, llvm::StringRef, llv (13 samples, 0.29%)</title><rect x="688.2" y="5653" width="3.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="691.21" y="5663.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.02%)</title><rect x="22.3" y="2581" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="25.28" y="2591.5" ></text>
</g>
<g >
<title>`llvm::getConstantStringInfo(llvm::Value const*, llvm::StringRef (1 samples, 0.02%)</title><rect x="444.1" y="5589" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="447.10" y="5599.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="678.0" y="5541" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="681.01" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4629" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="136.36" y="4639.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2341" width="0.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="65.01" y="2351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4549" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="139.76" y="4559.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T CLASP))^METHOD^^ (1 samples, 0.02%)</title><rect x="58.3" y="101" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="61.35" y="111.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.02%)</title><rect x="292.0" y="5397" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="295.00" y="5407.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.02%)</title><rect x="25.7" y="4245" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="28.68" y="4255.5" ></text>
</g>
<g >
<title>`CHECK-SPECIAL-FORM-SYNTAX^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T (1 samples, 0.02%)</title><rect x="63.1" y="2421" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="66.05" y="2431.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="613" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="65.53" y="623.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="68.5" y="2485" width="1.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="71.54" y="2495.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1653" width="1.1" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="59.52" y="1663.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1029" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="68.93" y="1039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4533" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="137.66" y="4543.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.5" y="917" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="65.53" y="927.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="138.6" y="4725" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="141.58" y="4735.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.02%)</title><rect x="595.7" y="5461" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="598.69" y="5471.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (23 samples, 0.51%)</title><rect x="38.7" y="4709" width="6.1" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="41.75" y="4719.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.02%)</title><rect x="150.3" y="5077" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="153.35" y="5087.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="60.4" y="2757" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="63.44" y="2767.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5285" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="736.42" y="5295.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (5 samples, 0.11%)</title><rect x="210.2" y="5573" width="1.3" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="213.19" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="1893" width="0.3" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="73.63" y="1903.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="613" width="1.1" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="59.52" y="623.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="341" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="61.35" y="351.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (25 samples, 0.55%)</title><rect x="16.3" y="3029" width="6.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="19.27" y="3039.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="127.3" y="4821" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="130.35" y="4831.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::make(unsigned long, int, bool, gctools::smart_p (1 samples, 0.02%)</title><rect x="130.5" y="4613" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="133.48" y="4623.5" ></text>
</g>
<g >
<title>`IRC-CREATE-CALL^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="308.2" y="5397" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="311.20" y="5407.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="461.6" y="5509" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="464.61" y="5519.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="403.1" y="5381" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="406.07" y="5391.5" ></text>
</g>
<g >
<title>`core::cl__nthcdr(gctools::smart_ptr&lt;core::Integer_O&gt;, gctools:: (1 samples, 0.02%)</title><rect x="177.8" y="5205" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="180.79" y="5215.5" ></text>
</g>
<g >
<title>`MAKE-TEMPS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="130.5" y="4709" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="133.48" y="4719.5" ></text>
</g>
<g >
<title>`NEW-DATUM-ALLOCA^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="354.2" y="5253" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="357.20" y="5263.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="2645" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="72.85" y="2655.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="50.8" y="2917" width="0.8" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="53.77" y="2927.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.6" y="5189" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="100.55" y="5199.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (3 samples, 0.07%)</title><rect x="627.0" y="5557" width="0.8" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="630.05" y="5567.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (2 samples, 0.04%)</title><rect x="613.7" y="5557" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="616.72" y="5567.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENCLOSE-INSTRUCTIO (1 samples, 0.02%)</title><rect x="59.1" y="869" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="62.13" y="879.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (4 samples, 0.09%)</title><rect x="299.3" y="5349" width="1.1" height="15.0" fill="rgb(213,68,68)" rx="2" ry="2" />
<text  x="302.32" y="5359.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.3" y="1349" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="65.27" y="1359.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Instruction*&gt;::find(llvm::Instructi (1 samples, 0.02%)</title><rect x="450.6" y="5621" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="453.64" y="5631.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (2 samples, 0.04%)</title><rect x="373.8" y="5333" width="0.5" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="376.80" y="5343.5" ></text>
</g>
<g >
<title>`llvm::MDNodeInfo&lt;llvm::DILocalVariable&gt;::getHashValue(llvm::DIL (1 samples, 0.02%)</title><rect x="359.7" y="5093" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="362.69" y="5103.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="605.1" y="5557" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="608.10" y="5567.5" ></text>
</g>
<g >
<title>`%INTRINSIC-CALL^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="332.0" y="5077" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="334.98" y="5087.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="37.2" y="4693" width="0.2" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="40.18" y="4703.5" ></text>
</g>
<g >
<title>`core::clos__classp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="49.2" y="4981" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="52.20" y="4991.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.3" y="1925" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="20.32" y="1935.5" ></text>
</g>
<g >
<title>`wrapped_cl__values_VaList_sp (1 samples, 0.02%)</title><rect x="380.3" y="5413" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="383.33" y="5423.5" ></text>
</g>
<g >
<title>0x10d596094 (9 samples, 0.20%)</title><rect x="74.6" y="3925" width="2.3" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="77.55" y="3935.5" ></text>
</g>
<g >
<title>`core::core__hash_table_setf_gethash(gctools::smart_ptr&lt;core::Ha (1 samples, 0.02%)</title><rect x="226.1" y="5557" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="229.14" y="5567.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="314.0" y="5301" width="0.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="316.95" y="5311.5" ></text>
</g>
<g >
<title>`llvm::SmallVector&lt;llvm::Value*, 8u&gt;::SmallVector&lt;llvm::Use*, vo (1 samples, 0.02%)</title><rect x="514.9" y="5621" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="517.93" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="60.2" y="3173" width="1.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="63.18" y="3183.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (2 samples, 0.04%)</title><rect x="260.9" y="5557" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="263.90" y="5567.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (8 samples, 0.18%)</title><rect x="218.3" y="5573" width="2.1" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="221.30" y="5583.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="474.2" y="5557" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="477.16" y="5567.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="629.7" y="5589" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="632.66" y="5599.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="318.7" y="5301" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="321.66" y="5311.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="2661" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="62.40" y="2671.5" ></text>
</g>
<g >
<title>`llvm::GVN::AnalyzeLoadAvailability(llvm::LoadInst*, llvm::MemDe (1 samples, 0.02%)</title><rect x="540.5" y="5589" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="543.54" y="5599.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="506.3" y="5381" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="509.31" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.5" y="4773" width="0.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="140.54" y="4783.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::~BasicBlock() (1 samples, 0.02%)</title><rect x="589.7" y="5589" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="592.68" y="5599.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.02%)</title><rect x="225.1" y="5477" width="0.3" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="228.09" y="5487.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="47.9" y="4789" width="0.3" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="50.90" y="4799.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.9" y="2901" width="0.3" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="73.89" y="2911.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="97.6" y="5141" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="100.55" y="5151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4821" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="140.02" y="4831.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.3" y="1749" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="20.32" y="1759.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="409.6" y="5397" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="412.61" y="5407.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="141.2" y="5045" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="144.20" y="5055.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="2997" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="73.11" y="3007.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2165" width="1.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="60.57" y="2175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4021" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="139.23" y="4031.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="69.8" y="2741" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="72.85" y="2751.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::BasicBlock*, llvm::SmallPtrSet&lt;llvm::Ba (1 samples, 0.02%)</title><rect x="576.9" y="5589" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="579.87" y="5599.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (6 samples, 0.13%)</title><rect x="230.3" y="5413" width="1.6" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="233.32" y="5423.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="53.6" y="2645" width="0.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="56.65" y="2655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4613" width="0.3" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="142.11" y="4623.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, unsigned int, l (3 samples, 0.07%)</title><rect x="540.8" y="5573" width="0.8" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="543.80" y="5583.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.5" y="1205" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="65.53" y="1215.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (1 samples, 0.02%)</title><rect x="24.4" y="3861" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="27.37" y="3871.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (2 samples, 0.04%)</title><rect x="25.2" y="3925" width="0.5" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="28.16" y="3935.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="97.3" y="3013" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="100.29" y="3023.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.6" y="5333" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="100.55" y="5343.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="337.7" y="5157" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="340.73" y="5167.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="397.8" y="5269" width="0.3" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="400.84" y="5279.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Function* (llvmo::Module_O::*)(g (1 samples, 0.02%)</title><rect x="410.4" y="5333" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="413.39" y="5343.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (6 samples, 0.13%)</title><rect x="230.3" y="5525" width="1.6" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="233.32" y="5535.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="78.2" y="4405" width="2.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="81.21" y="4415.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="697.1" y="5509" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="700.09" y="5519.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="67.8" y="1397" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="70.76" y="1407.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="16.5" y="2341" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="19.53" y="2351.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="315.5" y="5317" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="318.52" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4149" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="136.36" y="4159.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="675.1" y="5493" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="678.14" y="5503.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;(anonymous namespace)::S (4 samples, 0.09%)</title><rect x="439.4" y="5637" width="1.0" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="442.40" y="5647.5" ></text>
</g>
<g >
<title>`_platform_memcmp (1 samples, 0.02%)</title><rect x="375.4" y="5301" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="378.37" y="5311.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="14.2" y="3637" width="1.8" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="17.18" y="3647.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="328.8" y="5237" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="331.85" y="5247.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_package_T_sp (1 samples, 0.02%)</title><rect x="17.1" y="2021" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="20.06" y="2031.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="57.8" y="1061" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="60.83" y="1071.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (2 samples, 0.04%)</title><rect x="66.5" y="1509" width="0.5" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="69.45" y="1519.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1013" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="20.58" y="1023.5" ></text>
</g>
<g >
<title>`LTV/CONS^LITERAL^FN^^ (8 samples, 0.18%)</title><rect x="369.4" y="5365" width="2.0" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="372.36" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4373" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="141.85" y="4383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4421" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="137.40" y="4431.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="126.8" y="5317" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="129.82" y="5327.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="159.5" y="5109" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="162.49" y="5119.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (3 samples, 0.07%)</title><rect x="160.5" y="4853" width="0.8" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="163.54" y="4863.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="80.6" y="4597" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="83.56" y="4607.5" ></text>
</g>
<g >
<title>0x10d596094 (71 samples, 1.57%)</title><rect x="52.9" y="3637" width="18.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="55.86" y="3647.5" ></text>
</g>
<g >
<title>`llvm::Type::isSized(llvm::SmallPtrSetImpl&lt;llvm::Type*&gt;*) const (1 samples, 0.02%)</title><rect x="505.0" y="5381" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="508.00" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.3" y="3029" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="65.27" y="3039.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="207.8" y="5477" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="210.84" y="5487.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (1 samples, 0.02%)</title><rect x="188.2" y="5557" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="191.24" y="5567.5" ></text>
</g>
<g >
<title>0x10d596094 (35 samples, 0.78%)</title><rect x="36.4" y="5125" width="9.1" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="39.40" y="5135.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getABITypeAlignment(llvm::Type*) const (1 samples, 0.02%)</title><rect x="614.5" y="5573" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="617.50" y="5583.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (25 samples, 0.55%)</title><rect x="329.1" y="5189" width="6.5" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="332.11" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (4 samples, 0.09%)</title><rect x="56.5" y="597" width="1.1" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="59.52" y="607.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SET-SYMBOL-VALUE-AST T))^METHO (5 samples, 0.11%)</title><rect x="157.7" y="5413" width="1.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="160.66" y="5423.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="3125" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="65.01" y="3135.5" ></text>
</g>
<g >
<title>`ADD-SIDE-EFFECT-CALL-ARGLIST^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="336.4" y="5125" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="339.43" y="5135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4533" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="141.85" y="4543.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2677" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="65.01" y="2687.5" ></text>
</g>
<g >
<title>`COMPILE-TEST^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.2" y="5461" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="738.25" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (18 samples, 0.40%)</title><rect x="17.3" y="2309" width="4.7" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="20.32" y="2319.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENTER-INSTRUCTION  (4 samples, 0.09%)</title><rect x="378.2" y="5477" width="1.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="381.24" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T CLASP))^METHOD^^ (4 samples, 0.09%)</title><rect x="11.3" y="5349" width="1.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="14.31" y="5359.5" ></text>
</g>
<g >
<title>`IRC-BASIC-BLOCK-CREATE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="294.1" y="5429" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="297.09" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4245" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="138.19" y="4255.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (6 samples, 0.13%)</title><rect x="12.4" y="4773" width="1.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="15.35" y="4783.5" ></text>
</g>
<g >
<title>`llvm::SSAUpdaterImpl&lt;llvm::SSAUpdater&gt;::BuildBlockList(llvm::Ba (1 samples, 0.02%)</title><rect x="562.2" y="5493" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="565.23" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4485" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="138.19" y="4495.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (3 samples, 0.07%)</title><rect x="238.7" y="5445" width="0.8" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="241.68" y="5455.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="365.4" y="5269" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="368.44" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="14.2" y="3557" width="1.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="17.18" y="3567.5" ></text>
</g>
<g >
<title>`IRC-CALCULATE-ENTRY^COMPILER^FN^^ (9 samples, 0.20%)</title><rect x="340.6" y="5253" width="2.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="343.61" y="5263.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="143.3" y="5157" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="146.29" y="5167.5" ></text>
</g>
<g >
<title>`%INTRINSIC-CALL^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="395.0" y="5381" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="397.97" y="5391.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (4 samples, 0.09%)</title><rect x="88.1" y="4405" width="1.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="91.14" y="4415.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="352.9" y="5125" width="0.3" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="355.89" y="5135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4277" width="0.3" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="137.93" y="4287.5" ></text>
</g>
<g >
<title>0x10d596094 (233 samples, 5.16%)</title><rect x="36.4" y="5381" width="60.9" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="39.40" y="5391.5" >0x10d5..</text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="131.0" y="4549" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="134.01" y="4559.5" ></text>
</g>
<g >
<title>`core::Str8Ns_O::make(unsigned long, unsigned char, bool, gctool (1 samples, 0.02%)</title><rect x="312.1" y="5381" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="315.12" y="5391.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="145.1" y="4965" width="0.3" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="148.12" y="4975.5" ></text>
</g>
<g >
<title>0x10d596094 (12 samples, 0.27%)</title><rect x="78.0" y="4981" width="3.1" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="80.95" y="4991.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="22.0" y="2453" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="25.02" y="2463.5" ></text>
</g>
<g >
<title>`_pthread_cond_updateval (1 samples, 0.02%)</title><rect x="1189.2" y="6309" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1192.22" y="6319.5" ></text>
</g>
<g >
<title>`llvm::SimplifyGEPInst(llvm::Type*, llvm::ArrayRef&lt;llvm::Value*&gt; (9 samples, 0.20%)</title><rect x="648.0" y="5605" width="2.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="650.96" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="62.0" y="1637" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="65.01" y="1647.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.02%)</title><rect x="75.6" y="3605" width="0.3" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="78.60" y="3615.5" ></text>
</g>
<g >
<title>`FORMAT^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="13.9" y="5045" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="16.92" y="5055.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (2 samples, 0.04%)</title><rect x="225.1" y="5509" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="228.09" y="5519.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (4 samples, 0.09%)</title><rect x="33.3" y="4357" width="1.0" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="36.26" y="4367.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="66.5" y="1797" width="0.7" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="69.45" y="1807.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3733" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="100.29" y="3743.5" ></text>
</g>
<g >
<title>`SPECIALIZE^CLEAVIR-HIR-TO-MIR^((FLOAT-ADD-INSTRUCTION CLASP T T (3 samples, 0.07%)</title><rect x="190.1" y="5589" width="0.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="193.07" y="5599.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="357.9" y="5333" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="360.86" y="5343.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="293.8" y="5381" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="296.83" y="5391.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="678.0" y="5557" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="681.01" y="5567.5" ></text>
</g>
<g >
<title>`CALCULATE-DTREE^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.2" y="5493" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="738.25" y="5503.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="200.8" y="5525" width="0.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="203.79" y="5535.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="694.5" y="5557" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="697.48" y="5567.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2053" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="64.22" y="2063.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="349.5" y="5237" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="352.50" y="5247.5" ></text>
</g>
<g >
<title>`IRC-LOAD^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="322.6" y="5253" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="325.58" y="5263.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="139.9" y="4949" width="0.3" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="142.89" y="4959.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (3 samples, 0.07%)</title><rect x="36.7" y="4933" width="0.7" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="39.66" y="4943.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::untrack(void*, llvm::Metadata&amp;) (1 samples, 0.02%)</title><rect x="591.5" y="5621" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="594.51" y="5631.5" ></text>
</g>
<g >
<title>`gctools::GCRootsInModule::getTaggedIndex(char, unsigned long) (1 samples, 0.02%)</title><rect x="361.8" y="5317" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="364.78" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5365" width="1.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="14.31" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2373" width="0.3" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="65.79" y="2383.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (15 samples, 0.33%)</title><rect x="458.5" y="5653" width="3.9" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="461.48" y="5663.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="645" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="61.09" y="655.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="528.5" y="5445" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="531.52" y="5455.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="653.4" y="5509" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="656.45" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4085" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="132.96" y="4095.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (3 samples, 0.07%)</title><rect x="42.4" y="4325" width="0.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="45.41" y="4335.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4709" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="736.42" y="4719.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4229" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="135.31" y="4239.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="184.6" y="5541" width="0.2" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="187.58" y="5551.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::PointerType_O&gt; gctools::GCObjectAppro (1 samples, 0.02%)</title><rect x="393.9" y="5301" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="396.92" y="5311.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="54.2" y="1029" width="1.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="57.17" y="1039.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="933" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="20.58" y="943.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="259.1" y="5525" width="0.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="262.07" y="5535.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.02%)</title><rect x="85.3" y="4517" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="88.27" y="4527.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (35 samples, 0.78%)</title><rect x="36.4" y="5093" width="9.1" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="39.40" y="5103.5" ></text>
</g>
<g >
<title>`core::read_list(gctools::smart_ptr&lt;core::T_O&gt;, int, bool) (2 samples, 0.04%)</title><rect x="421.4" y="5653" width="0.5" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="424.37" y="5663.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (2 samples, 0.04%)</title><rect x="132.6" y="4709" width="0.5" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="135.57" y="4719.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedUseBits(llvm::Value*, llvm: (2 samples, 0.04%)</title><rect x="657.1" y="5573" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="660.11" y="5583.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="69.8" y="3141" width="0.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="72.85" y="3151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4853" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="136.62" y="4863.5" ></text>
</g>
<g >
<title>`llvm::MemorySSA::OptimizeUses::optimizeUses() (17 samples, 0.38%)</title><rect x="525.6" y="5621" width="4.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="528.65" y="5631.5" ></text>
</g>
<g >
<title>`DECLARED-TYPE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="73.2" y="4837" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="76.25" y="4847.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="326.0" y="5269" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="328.97" y="5279.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (2 samples, 0.04%)</title><rect x="380.6" y="5365" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="383.60" y="5375.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (5 samples, 0.11%)</title><rect x="118.7" y="5461" width="1.3" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="121.72" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4741" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="140.02" y="4751.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (26 samples, 0.58%)</title><rect x="52.9" y="3365" width="6.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="55.86" y="3375.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (6 samples, 0.13%)</title><rect x="50.0" y="3493" width="1.6" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="52.99" y="3503.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="392.6" y="5397" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="395.62" y="5407.5" ></text>
</g>
<g >
<title>`isDereferenceableAndAlignedPointer(llvm::Value const*, unsigned (1 samples, 0.02%)</title><rect x="585.5" y="5541" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="588.50" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="1669" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="73.63" y="1679.5" ></text>
</g>
<g >
<title>`GC_mark_from (3 samples, 0.07%)</title><rect x="238.7" y="5301" width="0.8" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="241.68" y="5311.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="140.2" y="5029" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="143.15" y="5039.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="933" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="65.27" y="943.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2453" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="71.28" y="2463.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (2 samples, 0.04%)</title><rect x="278.7" y="5477" width="0.5" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="281.67" y="5487.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="734.2" y="5429" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="737.20" y="5439.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="127.3" y="4789" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="130.35" y="4799.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.0" y="2661" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="63.96" y="2671.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::ConstantExpr*, llv (1 samples, 0.02%)</title><rect x="612.2" y="5541" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="615.15" y="5551.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1797" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="65.53" y="1807.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="11.3" y="5461" width="1.1" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="14.31" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="981" width="1.1" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="59.52" y="991.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (6 samples, 0.13%)</title><rect x="505.8" y="5557" width="1.6" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="508.78" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (56 samples, 1.24%)</title><rect x="81.3" y="4821" width="14.7" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="84.35" y="4831.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="1109" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="65.01" y="1119.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Value const*, llvm::StringMapEntry&lt;llvm::V (1 samples, 0.02%)</title><rect x="337.2" y="5077" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="340.21" y="5087.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="634.9" y="5541" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="637.89" y="5551.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::make(unsigned long, int, bool, gctools::smart_p (1 samples, 0.02%)</title><rect x="172.8" y="5205" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="175.82" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (1 samples, 0.02%)</title><rect x="97.3" y="4709" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="100.29" y="4719.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="79.3" y="3669" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="82.26" y="3679.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (27 samples, 0.60%)</title><rect x="16.0" y="3797" width="7.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="19.01" y="3807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="133.1" y="4837" width="0.3" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="136.10" y="4847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (61 samples, 1.35%)</title><rect x="128.1" y="5381" width="16.0" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="131.13" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="39.0" y="4437" width="2.1" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="42.01" y="4447.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="57.6" y="965" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="60.57" y="975.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (16 samples, 0.35%)</title><rect x="73.5" y="4597" width="4.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="76.51" y="4607.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="412.7" y="5381" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="415.74" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (2 samples, 0.04%)</title><rect x="21.2" y="2085" width="0.6" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="24.24" y="2095.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="162.1" y="4997" width="0.3" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="165.11" y="5007.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="165" width="1.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="59.52" y="175.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.3" y="2565" width="0.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="65.27" y="2575.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="381.1" y="5397" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="384.12" y="5407.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="286.5" y="5397" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="289.51" y="5407.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;llvm::Instruction*, unsig (3 samples, 0.07%)</title><rect x="471.3" y="5621" width="0.8" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="474.28" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="24.6" y="4821" width="2.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="27.64" y="4831.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="1685" width="1.1" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="59.52" y="1695.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="61.2" y="1989" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="64.22" y="1999.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;unsigned int, llvm::GVN::Lead (1 samples, 0.02%)</title><rect x="543.9" y="5573" width="0.3" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="546.94" y="5583.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (54 samples, 1.20%)</title><rect x="770.3" y="5557" width="14.1" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="773.27" y="5567.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.02%)</title><rect x="399.2" y="5349" width="0.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="402.15" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="16.3" y="2053" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="19.27" y="2063.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="25.9" y="4293" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="28.94" y="4303.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (5 samples, 0.11%)</title><rect x="63.8" y="2325" width="1.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="66.84" y="2335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4485" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="139.76" y="4495.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.04%)</title><rect x="146.2" y="5029" width="0.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="149.16" y="5039.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (14 samples, 0.31%)</title><rect x="784.6" y="5621" width="3.7" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="787.64" y="5631.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIndexedOffsetInType(llvm::Type*, llvm::Arr (1 samples, 0.02%)</title><rect x="614.5" y="5589" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="617.50" y="5599.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="3029" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="72.85" y="3039.5" ></text>
</g>
<g >
<title>`MAKE-PROGN-AST^CLEAVIR-AST^FN^^ (2 samples, 0.04%)</title><rect x="25.2" y="4053" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="28.16" y="4063.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (9 samples, 0.20%)</title><rect x="24.6" y="4693" width="2.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="27.64" y="4703.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (3 samples, 0.07%)</title><rect x="260.1" y="5573" width="0.8" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="263.11" y="5583.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="141.2" y="5013" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="144.20" y="5023.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="411.7" y="5301" width="0.3" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="414.70" y="5311.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="384.3" y="5285" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="387.25" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="61.7" y="2405" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="64.75" y="2415.5" ></text>
</g>
<g >
<title>`client_validate (1 samples, 0.02%)</title><rect x="226.4" y="5541" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="229.40" y="5551.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.6" y="5413" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="100.55" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4789" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="141.32" y="4799.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1301" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="20.58" y="1311.5" ></text>
</g>
<g >
<title>0x10d596076 (1 samples, 0.02%)</title><rect x="63.6" y="2373" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="66.58" y="2383.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="68.0" y="2757" width="1.8" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="71.02" y="2767.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2661" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="65.53" y="2671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.5" y="4421" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="134.53" y="4431.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="37" width="1.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="57.17" y="47.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="285.7" y="5509" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="288.73" y="5519.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (22 samples, 0.49%)</title><rect x="464.2" y="5637" width="5.8" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="467.23" y="5647.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="17.6" y="1205" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="20.58" y="1215.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3205" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="100.29" y="3215.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="531.1" y="5573" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="534.13" y="5583.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="653.4" y="5557" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="656.45" y="5567.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SimplifyCFGOpt::FoldValueComparisonIntoP (1 samples, 0.02%)</title><rect x="695.5" y="5589" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="698.52" y="5599.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2101" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="65.53" y="2111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="177.3" y="5429" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="180.26" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'CLEAVIR-PRIMOP:L (109 samples, 2.41%)</title><rect x="49.5" y="5029" width="28.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="52.46" y="5039.5" >`C..</text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((LEXICAL-VARIABLE-INFO T T T (1 samples, 0.02%)</title><rect x="65.1" y="2245" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="68.15" y="2255.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;std::__1::pair&lt;unsigned i (1 samples, 0.02%)</title><rect x="579.0" y="5589" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="581.96" y="5599.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1237" width="1.0" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="58.48" y="1247.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2901" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="73.63" y="2911.5" ></text>
</g>
<g >
<title>`wrapped_get_llvm__LLVMContext_const_llvm__APInt_ (1 samples, 0.02%)</title><rect x="331.5" y="5045" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="334.46" y="5055.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="376.2" y="5285" width="0.2" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="379.15" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (57 samples, 1.26%)</title><rect x="81.3" y="4965" width="14.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="84.35" y="4975.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1701" width="1.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="59.52" y="1711.5" ></text>
</g>
<g >
<title>`llvm::Function::doesNotReadMemory() const (1 samples, 0.02%)</title><rect x="659.7" y="5477" width="0.3" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="662.72" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.18%)</title><rect x="160.0" y="5077" width="2.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="163.02" y="5087.5" ></text>
</g>
<g >
<title>`realloc (1 samples, 0.02%)</title><rect x="183.5" y="5573" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="186.54" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="3541" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="100.29" y="3551.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.04%)</title><rect x="132.6" y="4773" width="0.5" height="15.0" fill="rgb(208,63,63)" rx="2" ry="2" />
<text  x="135.57" y="4783.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="52.6" y="3829" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="55.60" y="3839.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (13 samples, 0.29%)</title><rect x="54.2" y="2501" width="3.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="57.17" y="2511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (18 samples, 0.40%)</title><rect x="152.4" y="5301" width="4.7" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="155.44" y="5311.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Value const*&gt;::insert(llvm::Value c (1 samples, 0.02%)</title><rect x="433.7" y="5605" width="0.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="436.65" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="1317" width="1.0" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="58.48" y="1327.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="527.2" y="5413" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="530.21" y="5423.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5365" width="0.5" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="736.42" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="63.1" y="3013" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="66.05" y="3023.5" ></text>
</g>
<g >
<title>`llvm::Constant::isNullValue() const (1 samples, 0.02%)</title><rect x="629.1" y="5557" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="632.14" y="5567.5" ></text>
</g>
<g >
<title>`core::parse_ltvc_fill_list(gctools::GCRootsInModule*, gctools:: (1 samples, 0.02%)</title><rect x="732.6" y="5765" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="735.64" y="5775.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (108 samples, 2.39%)</title><rect x="49.5" y="4917" width="28.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="52.46" y="4927.5" >`..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4741" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="100.29" y="4751.5" ></text>
</g>
<g >
<title>`runSCCP(llvm::Function&amp;, llvm::DataLayout const&amp;, llvm::TargetL (11 samples, 0.24%)</title><rect x="581.8" y="5669" width="2.9" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="584.84" y="5679.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.02%)</title><rect x="94.7" y="4501" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="97.68" y="4511.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="203.7" y="5573" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="206.66" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4085" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="136.36" y="4095.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="30.9" y="4325" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="33.91" y="4335.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="67.2" y="1333" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="70.24" y="1343.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (11 samples, 0.24%)</title><rect x="553.3" y="5429" width="2.9" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="556.35" y="5439.5" ></text>
</g>
<g >
<title>`wrapped_cl__error_T_spList_sp (1 samples, 0.02%)</title><rect x="735.2" y="5653" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="738.25" y="5663.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="62.5" y="3157" width="0.6" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="65.53" y="3167.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="21.5" y="1173" width="0.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="24.50" y="1183.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.02%)</title><rect x="396.3" y="5333" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="399.28" y="5343.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="1941" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="64.22" y="1951.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="60.7" y="2725" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="63.70" y="2735.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="19.7" y="1781" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="22.67" y="1791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.0" y="5509" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="180.00" y="5519.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="735.5" y="5573" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="738.51" y="5583.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="635.2" y="5525" width="0.2" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="638.15" y="5535.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="59.4" y="3077" width="0.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="62.40" y="3087.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="330.7" y="4949" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="333.68" y="4959.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="71.4" y="3605" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="74.42" y="3615.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="508.7" y="5541" width="0.2" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="511.66" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="16.3" y="2309" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="19.27" y="2319.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1157" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="69.19" y="1167.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="69.8" y="2661" width="0.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="72.85" y="2671.5" ></text>
</g>
<g >
<title>`core::cl__read(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.04%)</title><rect x="421.4" y="5717" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="424.37" y="5727.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="612.4" y="5509" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="615.41" y="5519.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="373.5" y="5365" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="376.54" y="5375.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (3 samples, 0.07%)</title><rect x="363.9" y="5301" width="0.8" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="366.87" y="5311.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (1 samples, 0.02%)</title><rect x="567.7" y="5381" width="0.3" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="570.72" y="5391.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.02%)</title><rect x="149.0" y="4869" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="152.04" y="4879.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="3125" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="64.22" y="3135.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.02%)</title><rect x="205.8" y="5493" width="0.2" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="208.75" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="65.1" y="2053" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="68.15" y="2063.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4645" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="141.32" y="4655.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="62.8" y="1189" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="65.79" y="1199.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::pointsToConstantMemory(llvm::MemoryLocatio (1 samples, 0.02%)</title><rect x="560.4" y="5477" width="0.3" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="563.41" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="155.0" y="5157" width="0.6" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="158.05" y="5167.5" ></text>
</g>
<g >
<title>`IRC-GEP-VARIABLE^COMPILER^FN^^ (12 samples, 0.27%)</title><rect x="403.9" y="5461" width="3.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="406.86" y="5471.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCA (1 samples, 0.02%)</title><rect x="459.8" y="5589" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="462.79" y="5599.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (2 samples, 0.04%)</title><rect x="164.5" y="4837" width="0.5" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="167.46" y="4847.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="65.9" y="1989" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="68.93" y="1999.5" ></text>
</g>
<g >
<title>0x10d596094 (13 samples, 0.29%)</title><rect x="54.2" y="2709" width="3.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="57.17" y="2719.5" ></text>
</g>
<g >
<title>`core::SourcePosInfo_O::__class() const (1 samples, 0.02%)</title><rect x="418.0" y="5493" width="0.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="420.97" y="5503.5" ></text>
</g>
<g >
<title>`MAKE-LITERAL-NODE-SIDE-EFFECT^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="336.4" y="5109" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="339.43" y="5119.5" ></text>
</g>
<g >
<title>`llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl&lt;llvm::Type (1 samples, 0.02%)</title><rect x="406.2" y="5317" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="409.21" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="197" width="1.0" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="58.48" y="207.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.02%)</title><rect x="527.0" y="5493" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="529.95" y="5503.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (2 samples, 0.04%)</title><rect x="153.2" y="4933" width="0.5" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="156.22" y="4943.5" ></text>
</g>
<g >
<title>`MAKE-LET-INIT-ASTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="23.1" y="3765" width="0.2" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="26.07" y="3775.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1477" width="1.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="57.17" y="1487.5" ></text>
</g>
<g >
<title>`SET-PREDECESSORS^CLEAVIR-IR^FN^^ (18 samples, 0.40%)</title><rect x="178.8" y="5621" width="4.7" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="181.83" y="5631.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="349.2" y="5173" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="352.23" y="5183.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="14.2" y="3701" width="1.8" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="17.18" y="3711.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.02%)</title><rect x="269.8" y="5573" width="0.2" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="272.78" y="5583.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (6 samples, 0.13%)</title><rect x="57.8" y="1413" width="1.6" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="60.83" y="1423.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::FindKey(llvm::StringRef) const (1 samples, 0.02%)</title><rect x="410.4" y="5269" width="0.3" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="413.39" y="5279.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="70.4" y="2549" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="73.37" y="2559.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::pointsToConstantMemory(llvm::MemoryLocatio (4 samples, 0.09%)</title><rect x="661.3" y="5525" width="1.0" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="664.29" y="5535.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="15.5" y="3589" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="18.49" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4437" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="138.45" y="4447.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (26 samples, 0.58%)</title><rect x="16.3" y="3477" width="6.8" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="19.27" y="3487.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="410.7" y="5333" width="0.2" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="413.65" y="5343.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="41.4" y="4309" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="44.36" y="4319.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="425.5" y="5733" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="428.55" y="5743.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (1 samples, 0.02%)</title><rect x="120.6" y="5285" width="0.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="123.55" y="5295.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.02%)</title><rect x="256.2" y="5573" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="259.19" y="5583.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::ExceptionEntry, gctools::GCContainerAll (1 samples, 0.02%)</title><rect x="15.0" y="2373" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="17.97" y="2383.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="965" width="1.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="57.17" y="975.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="116.1" y="5621" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="119.11" y="5631.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="422.4" y="5701" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="425.41" y="5711.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="68.0" y="3061" width="1.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="71.02" y="3071.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (7 samples, 0.16%)</title><rect x="57.6" y="2821" width="1.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="60.57" y="2831.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="380.1" y="5413" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="383.07" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="144.6" y="5285" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="147.60" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (46 samples, 1.02%)</title><rect x="159.5" y="5189" width="12.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="162.49" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2597" width="3.4" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="57.17" y="2607.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="212.3" y="5589" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="215.29" y="5599.5" ></text>
</g>
<g >
<title>`PROCESS-AUX^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3749" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="100.29" y="3759.5" ></text>
</g>
<g >
<title>0x10d596094 (21 samples, 0.47%)</title><rect x="59.9" y="3349" width="5.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="62.92" y="3359.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="309.8" y="5365" width="0.2" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="312.77" y="5375.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.3" y="1925" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="65.27" y="1935.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (18 samples, 0.40%)</title><rect x="17.3" y="2373" width="4.7" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="20.32" y="2383.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="66.2" y="1573" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="69.19" y="1583.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="102.5" y="5605" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="105.52" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (2 samples, 0.04%)</title><rect x="60.7" y="2901" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="63.70" y="2911.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="717.5" y="5621" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="720.48" y="5631.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::PassI (1 samples, 0.02%)</title><rect x="534.8" y="5605" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="537.79" y="5615.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="180.9" y="5589" width="0.3" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="183.92" y="5599.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="407.3" y="5365" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="410.25" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="177.0" y="5477" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="180.00" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (71 samples, 1.57%)</title><rect x="52.9" y="3589" width="18.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="55.86" y="3599.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="63.8" y="2165" width="1.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="66.84" y="2175.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (18 samples, 0.40%)</title><rect x="17.3" y="2229" width="4.7" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="20.32" y="2239.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (11 samples, 0.24%)</title><rect x="49.7" y="3845" width="2.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="52.73" y="3855.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.3" y="3061" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="65.27" y="3071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4709" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="137.66" y="4719.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="1541" width="1.1" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="59.52" y="1551.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.04%)</title><rect x="173.1" y="5205" width="0.5" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="176.08" y="5215.5" ></text>
</g>
<g >
<title>`IRC-BIT-CAST^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="346.1" y="5269" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="349.10" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (1 samples, 0.02%)</title><rect x="61.7" y="2117" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="64.75" y="2127.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="77.7" y="4869" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="80.69" y="4879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="3957" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="135.31" y="3967.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (16 samples, 0.35%)</title><rect x="73.5" y="4709" width="4.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="76.51" y="4719.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1813" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="65.27" y="1823.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="63.1" y="3109" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="66.05" y="3119.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.04%)</title><rect x="160.0" y="4965" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="163.02" y="4975.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="10.3" y="5733" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="13.26" y="5743.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="24.6" y="4357" width="1.6" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="27.64" y="4367.5" ></text>
</g>
<g >
<title>`%INTRINSIC-CALL^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="331.7" y="5093" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="334.72" y="5103.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="67.8" y="1301" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="70.76" y="1311.5" ></text>
</g>
<g >
<title>`free_small (1 samples, 0.02%)</title><rect x="445.9" y="5621" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="448.93" y="5631.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="1957" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="73.63" y="1967.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="70.6" y="3061" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="73.63" y="3071.5" ></text>
</g>
<g >
<title>`llvm::iterator_range&lt;llvm::po_iterator&lt;llvm::DomTreeNodeBase&lt;ll (1 samples, 0.02%)</title><rect x="525.1" y="5637" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="528.12" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="1605" width="1.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="57.17" y="1615.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (206 samples, 4.56%)</title><rect x="314.0" y="5429" width="53.8" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="316.95" y="5439.5" >`DO-D..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="143.8" y="5333" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="146.81" y="5343.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::OptimizeOverflowCheck(llvm::OverflowCheckFl (1 samples, 0.02%)</title><rect x="633.1" y="5621" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="636.06" y="5631.5" ></text>
</g>
<g >
<title>`OPTIMIZED-LEXICAL-AST-CONSTRUCTOR^KEYWORD^FN^^ (3 samples, 0.07%)</title><rect x="36.7" y="4965" width="0.7" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="39.66" y="4975.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="821" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="61.35" y="831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="3925" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="136.36" y="3935.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="10.3" y="5669" width="0.2" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="13.26" y="5679.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2757" width="0.2" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="66.05" y="2767.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="1381" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="60.57" y="1391.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="517" width="1.0" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="58.48" y="527.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-FUNCTION^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2949" width="3.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="57.17" y="2959.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="130.5" y="4645" width="0.2" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="133.48" y="4655.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoCache::hasCachedValueInfo(l (2 samples, 0.04%)</title><rect x="434.7" y="5573" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="437.70" y="5583.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (83 samples, 1.84%)</title><rect x="49.7" y="4053" width="21.7" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="52.73" y="4063.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.8" y="5349" width="0.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="180.79" y="5359.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="208.1" y="5493" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="211.10" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.8" y="5317" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="180.79" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-FUNCTION^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="5013" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="100.29" y="5023.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (7 samples, 0.16%)</title><rect x="83.2" y="4485" width="1.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="86.18" y="4495.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute (1 samples, 0.02%)</title><rect x="681.7" y="5589" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="684.67" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (2 samples, 0.04%)</title><rect x="65.7" y="2181" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="68.67" y="2191.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="231.1" y="5301" width="0.3" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="234.10" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5349" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="180.26" y="5359.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (2 samples, 0.04%)</title><rect x="512.8" y="5557" width="0.6" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="515.84" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (12 samples, 0.27%)</title><rect x="78.0" y="4933" width="3.1" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="80.95" y="4943.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="64.1" y="1877" width="1.0" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="67.10" y="1887.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3557" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="100.29" y="3567.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="66.2" y="2373" width="1.8" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="69.19" y="2383.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="355.5" y="5221" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="358.51" y="5231.5" ></text>
</g>
<g >
<title>`POSITION^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="49.2" y="5045" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="52.20" y="5055.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::Type_O&gt; gctools::GCObjectAppropriateP (1 samples, 0.02%)</title><rect x="308.7" y="5301" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="311.72" y="5311.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (3 samples, 0.07%)</title><rect x="651.4" y="5557" width="0.7" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="654.36" y="5567.5" ></text>
</g>
<g >
<title>`getAllocationData(llvm::Value const*, AllocType, llvm::TargetLi (2 samples, 0.04%)</title><rect x="681.9" y="5605" width="0.6" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="684.93" y="5615.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (6 samples, 0.13%)</title><rect x="181.2" y="5557" width="1.6" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="184.18" y="5567.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="595.7" y="5525" width="0.2" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="598.69" y="5535.5" ></text>
</g>
<g >
<title>`GET-OR-DECLARE-FUNCTION-OR-ERROR^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="324.4" y="5205" width="0.3" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="327.41" y="5215.5" ></text>
</g>
<g >
<title>`DBG-CREATE-PARAMETER-VARIABLE^COMPILER^FN^^ (8 samples, 0.18%)</title><rect x="358.4" y="5333" width="2.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="361.38" y="5343.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (4 samples, 0.09%)</title><rect x="201.0" y="5509" width="1.1" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="204.05" y="5519.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::DAE::runOnModule(llvm::Module&amp;) (1 samples, 0.02%)</title><rect x="587.6" y="5701" width="0.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="590.59" y="5711.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (5 samples, 0.11%)</title><rect x="717.7" y="5589" width="1.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="720.74" y="5599.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="519.1" y="5573" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="522.11" y="5583.5" ></text>
</g>
<g >
<title>`llvm::SmallDenseMap&lt;std::__1::pair&lt;llvm::BasicBlock*, llvm::Bas (1 samples, 0.02%)</title><rect x="563.0" y="5493" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="566.02" y="5503.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="1269" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="67.88" y="1279.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2677" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="65.79" y="2687.5" ></text>
</g>
<g >
<title>`llvm::CallInst::getReturnedArgOperand() const (1 samples, 0.02%)</title><rect x="567.7" y="5333" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="570.72" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (26 samples, 0.58%)</title><rect x="16.3" y="3509" width="6.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="19.27" y="3519.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="293.0" y="5381" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="296.04" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4357" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="132.70" y="4367.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-I64^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="334.1" y="5077" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="337.08" y="5087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4165" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="139.23" y="4175.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="123.4" y="5477" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="126.43" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4501" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="139.23" y="4511.5" ></text>
</g>
<g >
<title>`findRefEdges(llvm::ModuleSummaryIndex&amp;, llvm::User const*, llvm (6 samples, 0.13%)</title><rect x="730.3" y="5701" width="1.6" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="733.28" y="5711.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="356.0" y="5205" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="359.03" y="5215.5" ></text>
</g>
<g >
<title>`GC_notify_all_marker (1 samples, 0.02%)</title><rect x="1184.3" y="6309" width="0.2" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="1187.25" y="6319.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="2901" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="73.11" y="2911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3877" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="132.96" y="3887.5" ></text>
</g>
<g >
<title>`wrapped_core__cons_length_Cons_sp (1 samples, 0.02%)</title><rect x="240.8" y="5541" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="243.77" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (10 samples, 0.22%)</title><rect x="65.4" y="3125" width="2.6" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="68.41" y="3135.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.02%)</title><rect x="79.8" y="3557" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="82.78" y="3567.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="503.2" y="5413" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="506.17" y="5423.5" ></text>
</g>
<g >
<title>`llvm::InstCombineWorklist::AddInitialGroup(llvm::ArrayRef&lt;llvm: (4 samples, 0.09%)</title><rect x="617.9" y="5637" width="1.0" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="620.90" y="5647.5" ></text>
</g>
<g >
<title>`wrapped_cl__make_hash_table_T_spFixnum_spNumber_spReal_spSymbol (1 samples, 0.02%)</title><rect x="115.8" y="5605" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="118.85" y="5615.5" ></text>
</g>
<g >
<title>`llvm::isIdentifiedObject(llvm::Value const*) (1 samples, 0.02%)</title><rect x="556.2" y="5429" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="559.22" y="5439.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="70.9" y="3029" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="73.89" y="3039.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (5 samples, 0.11%)</title><rect x="221.4" y="5557" width="1.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="224.43" y="5567.5" ></text>
</g>
<g >
<title>`ENSURE-ORIGIN^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="325.2" y="5301" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="328.19" y="5311.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="64.4" y="645" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="67.36" y="655.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="36.1" y="5413" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="39.14" y="5423.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4885" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="736.42" y="4895.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="46.1" y="4981" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="49.07" y="4991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.11%)</title><rect x="160.0" y="5013" width="1.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="163.02" y="5023.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (2 samples, 0.04%)</title><rect x="200.3" y="5541" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="203.26" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T CLASP))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="4981" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="100.29" y="4991.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="39.8" y="4117" width="0.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="42.79" y="4127.5" ></text>
</g>
<g >
<title>`GC_clear_hdr_marks (1 samples, 0.02%)</title><rect x="268.5" y="5381" width="0.2" height="15.0" fill="rgb(224,84,84)" rx="2" ry="2" />
<text  x="271.48" y="5391.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2101" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="64.22" y="2111.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="285.7" y="5461" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="288.73" y="5471.5" ></text>
</g>
<g >
<title>`std::__1::enable_if&lt;is_hashable_data&lt;unsigned int const&gt;::value (1 samples, 0.02%)</title><rect x="613.2" y="5525" width="0.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="616.20" y="5535.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="156.9" y="5269" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="159.88" y="5279.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.04%)</title><rect x="397.8" y="5349" width="0.6" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="400.84" y="5359.5" ></text>
</g>
<g >
<title>`core::Lisp_O::findPackage_no_lock(std::__1::basic_string&lt;char,  (1 samples, 0.02%)</title><rect x="96.5" y="4789" width="0.3" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="99.51" y="4799.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="43.2" y="4389" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="46.19" y="4399.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="435.2" y="5493" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="438.22" y="5503.5" ></text>
</g>
<g >
<title>`llvmo::Value_O::create(llvm::Value*) (1 samples, 0.02%)</title><rect x="400.5" y="5365" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="403.46" y="5375.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="14.2" y="3285" width="1.0" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="17.18" y="3295.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="263.8" y="5557" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="266.77" y="5567.5" ></text>
</g>
<g >
<title>`wrapped_StructType_O__get_LLVMContext_spcore__T_spbool (1 samples, 0.02%)</title><rect x="373.5" y="5397" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="376.54" y="5407.5" ></text>
</g>
<g >
<title>`core::cl__write(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.02%)</title><rect x="11.0" y="5685" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="14.05" y="5695.5" ></text>
</g>
<g >
<title>`EXPAND-NEXT-ARG^CORE^FN^^ (1 samples, 0.02%)</title><rect x="46.1" y="5013" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="49.07" y="5023.5" ></text>
</g>
<g >
<title>`MAKE-TEMPS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="169.4" y="5013" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="172.42" y="5023.5" ></text>
</g>
<g >
<title>`IRC-CREATE-FUNCTION-DESCRIPTION^COMPILER^FN^^ (5 samples, 0.11%)</title><rect x="419.3" y="5589" width="1.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="422.28" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="62.3" y="2165" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="65.27" y="2175.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (3 samples, 0.07%)</title><rect x="528.8" y="5557" width="0.8" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="531.78" y="5567.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="12.4" y="4453" width="1.0" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="15.35" y="4463.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="71.4" y="3941" width="0.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="74.42" y="3951.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="68.5" y="2661" width="1.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="71.54" y="2671.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.02%)</title><rect x="669.9" y="5493" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="672.91" y="5503.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="685.9" y="5557" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="688.85" y="5567.5" ></text>
</g>
<g >
<title>`core::Lisp_O::getOrRegisterFileScope(std::__1::basic_string&lt;cha (2 samples, 0.04%)</title><rect x="413.5" y="5461" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="416.53" y="5471.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="176.0" y="5301" width="0.2" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="178.96" y="5311.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorImpl&lt;llvm::MDGlobalAttachmentMap::Attachment&gt;: (1 samples, 0.02%)</title><rect x="720.4" y="5637" width="0.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="723.35" y="5647.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="63.1" y="3221" width="2.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="66.05" y="3231.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="63.3" y="2517" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="66.32" y="2527.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="176.0" y="5253" width="0.2" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="178.96" y="5263.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="737.1" y="5685" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="740.08" y="5695.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="401.0" y="5429" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="403.98" y="5439.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (1 samples, 0.02%)</title><rect x="173.1" y="5093" width="0.2" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="176.08" y="5103.5" ></text>
</g>
<g >
<title>`SUCCESSORS^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="324.9" y="5269" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="327.93" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1669" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="65.01" y="1679.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (20 samples, 0.44%)</title><rect x="54.2" y="3125" width="5.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="57.17" y="3135.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="70.6" y="1557" width="0.3" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="73.63" y="1567.5" ></text>
</g>
<g >
<title>`getValueFromCondition(llvm::Value*, llvm::Value*, bool, llvm::D (1 samples, 0.02%)</title><rect x="447.8" y="5509" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="450.76" y="5519.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (1 samples, 0.02%)</title><rect x="58.1" y="613" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="61.09" y="623.5" ></text>
</g>
<g >
<title>`GC_mark_local (1 samples, 0.02%)</title><rect x="25.4" y="3813" width="0.3" height="15.0" fill="rgb(254,128,128)" rx="2" ry="2" />
<text  x="28.42" y="3823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4693" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="137.40" y="4703.5" ></text>
</g>
<g >
<title>`default_zone_malloc (1 samples, 0.02%)</title><rect x="456.6" y="5557" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="459.65" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.1" y="4565" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="141.06" y="4575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3925" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="132.96" y="3935.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4805" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="736.42" y="4815.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="738.4" y="5701" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="741.39" y="5711.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="394.4" y="5413" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="397.45" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.5" y="4805" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="140.54" y="4815.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4229" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="736.42" y="4239.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (2 samples, 0.04%)</title><rect x="505.0" y="5445" width="0.5" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="508.00" y="5455.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (2 samples, 0.04%)</title><rect x="197.4" y="5605" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="200.39" y="5615.5" ></text>
</g>
<g >
<title>`IRC-CREATE-CALL^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="332.0" y="5029" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="334.98" y="5039.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1525" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="68.93" y="1535.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="52.6" y="3845" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="55.60" y="3855.5" ></text>
</g>
<g >
<title>`GC_mark_from (3 samples, 0.07%)</title><rect x="234.5" y="5317" width="0.8" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="237.50" y="5327.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2101" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="64.75" y="2111.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (3 samples, 0.07%)</title><rect x="652.4" y="5589" width="0.8" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="655.40" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="136.2" y="4789" width="0.8" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="139.23" y="4799.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((MEMREF2-INSTRUCTIO (1 samples, 0.02%)</title><rect x="333.8" y="5125" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="336.81" y="5135.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (1 samples, 0.02%)</title><rect x="150.6" y="5125" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="153.61" y="5135.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="190.9" y="5557" width="0.5" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="193.85" y="5567.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getSinglePredecessor() const (1 samples, 0.02%)</title><rect x="586.8" y="5589" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="589.80" y="5599.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2565" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="63.18" y="2575.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2645" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="64.22" y="2655.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="61.7" y="2709" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="64.75" y="2719.5" ></text>
</g>
<g >
<title>`llvm::DeadArgumentEliminationPass::MarkLive(llvm::Function cons (1 samples, 0.02%)</title><rect x="587.6" y="5653" width="0.2" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="590.59" y="5663.5" ></text>
</g>
<g >
<title>`llvm::ValueHandleBase::RemoveFromUseList() (1 samples, 0.02%)</title><rect x="700.8" y="5477" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="703.75" y="5487.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (11 samples, 0.24%)</title><rect x="553.3" y="5413" width="2.9" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="556.35" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (61 samples, 1.35%)</title><rect x="128.1" y="5365" width="16.0" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="131.13" y="5375.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1013" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="65.27" y="1023.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="821" width="1.1" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="59.52" y="831.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((MULTIPLE-VALUE-CALL-AST T))^ME (2 samples, 0.04%)</title><rect x="134.1" y="4933" width="0.6" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="137.14" y="4943.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (1 samples, 0.02%)</title><rect x="21.5" y="1557" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="24.50" y="1567.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="50.0" y="3173" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="52.99" y="3183.5" ></text>
</g>
<g >
<title>`FORMAT^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="80.6" y="4741" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="83.56" y="4751.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="129.4" y="3893" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="132.44" y="3903.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2533" width="3.4" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="57.17" y="2543.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="432.9" y="5525" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="435.87" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (13 samples, 0.29%)</title><rect x="74.0" y="4437" width="3.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="77.03" y="4447.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="56.5" y="933" width="1.1" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="59.52" y="943.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="60.2" y="2661" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="63.18" y="2671.5" ></text>
</g>
<g >
<title>`llvm::FunctionTypeKeyInfo::getHashValue(llvm::FunctionTypeKeyIn (1 samples, 0.02%)</title><rect x="387.9" y="5349" width="0.3" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="390.91" y="5359.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="69.8" y="2885" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="72.85" y="2895.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="62.5" y="1381" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="65.53" y="1391.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.02%)</title><rect x="507.4" y="5509" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="510.35" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="24.6" y="4565" width="1.6" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="27.64" y="4575.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="61.7" y="1733" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="64.75" y="1743.5" ></text>
</g>
<g >
<title>`FUDGE-VALUES-TYPE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2501" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="17.70" y="2511.5" ></text>
</g>
<g >
<title>`COMPUTE-APPLICABLE-METHODS^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="186.2" y="5461" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="189.15" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="143.6" y="5157" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="146.55" y="5167.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (1 samples, 0.02%)</title><rect x="565.9" y="5413" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="568.89" y="5423.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (11 samples, 0.24%)</title><rect x="510.0" y="5541" width="2.8" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="512.96" y="5551.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (1 samples, 0.02%)</title><rect x="173.1" y="5061" width="0.2" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="176.08" y="5071.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2565" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="65.79" y="2575.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-INTPTR_T^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="385.0" y="5381" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="388.04" y="5391.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (3 samples, 0.07%)</title><rect x="570.1" y="5573" width="0.8" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="573.08" y="5583.5" ></text>
</g>
<g >
<title>`CCLASP-EVAL-WITH-ENV^CLASP-CLEAVIR^((T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="58.3" y="1157" width="1.1" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="61.35" y="1167.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="35.1" y="4533" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="38.09" y="4543.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;std::__1::pair&lt;llvm::Mem (1 samples, 0.02%)</title><rect x="529.8" y="5525" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="532.83" y="5535.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="59.4" y="2789" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="62.40" y="2799.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T LOCAL-MACRO-INFO T T))^ME (1 samples, 0.02%)</title><rect x="57.6" y="1189" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="60.57" y="1199.5" ></text>
</g>
<g >
<title>`llvmo::Type_O::getPointerTo(int) (1 samples, 0.02%)</title><rect x="342.4" y="5173" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="345.44" y="5183.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInBoundsGEP(llvm::Value*, gctools::sm (1 samples, 0.02%)</title><rect x="346.4" y="5189" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="349.36" y="5199.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::StrWNs_O&gt; gctools::GCObjectAppropriate (1 samples, 0.02%)</title><rect x="139.6" y="5061" width="0.3" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="142.63" y="5071.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (3 samples, 0.07%)</title><rect x="192.2" y="5381" width="0.7" height="15.0" fill="rgb(237,105,105)" rx="2" ry="2" />
<text  x="195.16" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (13 samples, 0.29%)</title><rect x="54.2" y="2629" width="3.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="57.17" y="2639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.1" y="4645" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="141.06" y="4655.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (1 samples, 0.02%)</title><rect x="749.1" y="5605" width="0.3" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="752.10" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (22 samples, 0.49%)</title><rect x="16.3" y="2725" width="5.7" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="19.27" y="2735.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="23.6" y="4533" width="1.0" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="26.59" y="4543.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^ (1 samples, 0.02%)</title><rect x="16.5" y="2261" width="0.3" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="19.53" y="2271.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="412.7" y="5349" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="415.74" y="5359.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (6 samples, 0.13%)</title><rect x="57.8" y="1669" width="1.6" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="60.83" y="1679.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (3 samples, 0.07%)</title><rect x="50.8" y="2949" width="0.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="53.77" y="2959.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="2053" width="1.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="60.57" y="2063.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="3221" width="0.3" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="72.85" y="3231.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (1 samples, 0.02%)</title><rect x="397.6" y="5301" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="400.58" y="5311.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="537.7" y="5509" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="540.67" y="5519.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="350.8" y="5173" width="0.3" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="353.80" y="5183.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.02%)</title><rect x="585.0" y="5557" width="0.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="587.97" y="5567.5" ></text>
</g>
<g >
<title>`GC_mark_local (3 samples, 0.07%)</title><rect x="323.4" y="5045" width="0.7" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="326.36" y="5055.5" ></text>
</g>
<g >
<title>`core::core__make_vector(gctools::smart_ptr&lt;core::T_O&gt;, unsigned (1 samples, 0.02%)</title><rect x="140.2" y="5013" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="143.15" y="5023.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="292.8" y="5429" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="295.78" y="5439.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.02%)</title><rect x="506.8" y="5381" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="509.83" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'CLEAVIR-PRIMOP:F (1 samples, 0.02%)</title><rect x="97.3" y="5173" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="100.29" y="5183.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="28.3" y="4341" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="31.29" y="4351.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="158.7" y="5333" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="161.71" y="5343.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.02%)</title><rect x="19.9" y="1909" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="22.93" y="1919.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="407.3" y="5381" width="0.2" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="410.25" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="981" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="60.57" y="991.5" ></text>
</g>
<g >
<title>`llvm::TerminatorInst::getSuccessor(unsigned int) const (1 samples, 0.02%)</title><rect x="606.7" y="5557" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="609.66" y="5567.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeWrapperPass::runOnFunction(llvm::Function&amp;) (12 samples, 0.27%)</title><rect x="604.1" y="5669" width="3.1" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="607.05" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((VALUES-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4805" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="137.40" y="4815.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="380.9" y="5317" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="383.86" y="5327.5" ></text>
</g>
<g >
<title>`llvm::BranchProbabilityInfo::updatePostDominatedByColdCall(llvm (2 samples, 0.04%)</title><rect x="602.7" y="5637" width="0.6" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="605.74" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4661" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="142.11" y="4671.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="299.3" y="5253" width="0.3" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="302.32" y="5263.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="635.2" y="5493" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="638.15" y="5503.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="503.2" y="5429" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="506.17" y="5439.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (3 samples, 0.07%)</title><rect x="36.7" y="4853" width="0.7" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="39.66" y="4863.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL-BINDING^CLEAVIR-GENERATE-AST^((T T T T T))^METH (7 samples, 0.16%)</title><rect x="39.3" y="4261" width="1.8" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="42.27" y="4271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.1" y="4821" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="136.10" y="4831.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (4 samples, 0.09%)</title><rect x="299.3" y="5333" width="1.1" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="302.32" y="5343.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.02%)</title><rect x="19.7" y="1717" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="22.67" y="1727.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="51.0" y="2453" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="54.03" y="2463.5" ></text>
</g>
<g >
<title>`removeDeadUsersOfConstant(llvm::Constant const*) (1 samples, 0.02%)</title><rect x="720.6" y="5637" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="723.61" y="5647.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Value const*, llvm::StringMapEntry&lt;llvm::V (1 samples, 0.02%)</title><rect x="330.7" y="4885" width="0.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="333.68" y="4895.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="2965" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="65.01" y="2975.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::IntegerType_O&gt; gctools::GCObjectAppro (2 samples, 0.04%)</title><rect x="373.8" y="5381" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="376.80" y="5391.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="206.0" y="5557" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="209.01" y="5567.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="420.6" y="5573" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="423.58" y="5583.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="44.2" y="4565" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="47.24" y="4575.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::BasicBlock*, std::__1::unique_ptr&lt;llvm::Do (3 samples, 0.07%)</title><rect x="689.0" y="5621" width="0.8" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="691.99" y="5631.5" ></text>
</g>
<g >
<title>`__v2printf (1 samples, 0.02%)</title><rect x="243.6" y="5477" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="246.65" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="63.6" y="2661" width="1.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="66.58" y="2671.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1653" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="65.53" y="1663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="4773" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="100.29" y="4783.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="63.8" y="1973" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="66.84" y="1983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4661" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="140.02" y="4671.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="53.9" y="2981" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="56.91" y="2991.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1525" width="1.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="57.17" y="1535.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="314.5" y="5285" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="317.47" y="5295.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="1077" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="60.57" y="1087.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.6" y="2725" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="56.65" y="2735.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (26 samples, 0.58%)</title><rect x="16.3" y="3429" width="6.8" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="19.27" y="3439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="3861" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="139.23" y="3871.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.04%)</title><rect x="260.9" y="5589" width="0.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="263.90" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4549" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="137.66" y="4559.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm (1 samples, 0.02%)</title><rect x="438.6" y="5589" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="441.62" y="5599.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(l (1 samples, 0.02%)</title><rect x="451.9" y="5621" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="454.94" y="5631.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2165" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="65.79" y="2175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="153.0" y="5189" width="1.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="155.96" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3941" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="100.29" y="3951.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (40 samples, 0.89%)</title><rect x="14.2" y="4853" width="10.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="17.18" y="4863.5" ></text>
</g>
<g >
<title>`CONVERT-TO-TLL^CC-HIR-TO-MIR^FN^^ (3 samples, 0.07%)</title><rect x="190.1" y="5509" width="0.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="193.07" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.8" y="2229" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="65.79" y="2239.5" ></text>
</g>
<g >
<title>`llvm::sinkRegion(llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*, llvm (1 samples, 0.02%)</title><rect x="684.0" y="5621" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="687.02" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'CLEAVIR-PRIMOP:L (40 samples, 0.89%)</title><rect x="14.2" y="4933" width="10.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="17.18" y="4943.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (181 samples, 4.01%)</title><rect x="49.5" y="5045" width="47.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="52.46" y="5055.5" >`CON..</text>
</g>
<g >
<title>`llvm::InstCombiner::visitGetElementPtrInst(llvm::GetElementPtrI (10 samples, 0.22%)</title><rect x="490.4" y="5621" width="2.6" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="493.36" y="5631.5" ></text>
</g>
<g >
<title>`llvm::Value::deleteValue() (1 samples, 0.02%)</title><rect x="445.7" y="5621" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="448.67" y="5631.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="60.2" y="2533" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="63.18" y="2543.5" ></text>
</g>
<g >
<title>`OPTIMIZED-LEXICAL-LOCATION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="138.8" y="4021" width="0.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="141.85" y="4031.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.02%)</title><rect x="139.9" y="4965" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="142.89" y="4975.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (2 samples, 0.04%)</title><rect x="596.7" y="5589" width="0.6" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="599.73" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4805" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="140.28" y="4815.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="78.2" y="4597" width="2.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="81.21" y="4607.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T GLOBAL-FUNCTION-INFO))^METHOD (1 samples, 0.02%)</title><rect x="62.5" y="757" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="65.53" y="767.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="53.4" y="3077" width="0.8" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="56.38" y="3087.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="4853" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="100.55" y="4863.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENCLOSE-INSTRUCTIO (35 samples, 0.78%)</title><rect x="328.6" y="5301" width="9.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="331.59" y="5311.5" ></text>
</g>
<g >
<title>`llvm::APInt::operator-=(llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="596.7" y="5573" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="599.73" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4501" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="136.62" y="4511.5" ></text>
</g>
<g >
<title>`FUNWIND-PROTECT^CORE^FN^^ (1 samples, 0.02%)</title><rect x="415.1" y="5493" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="418.09" y="5503.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ADCELegacyPass::runOnFunction(llvm::Func (4 samples, 0.09%)</title><rect x="428.7" y="5669" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="431.68" y="5679.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (2 samples, 0.04%)</title><rect x="76.4" y="3861" width="0.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="79.38" y="3871.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (4 samples, 0.09%)</title><rect x="64.1" y="1589" width="1.0" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="67.10" y="1599.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="19.9" y="1877" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="22.93" y="1887.5" ></text>
</g>
<g >
<title>`small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="601.2" y="5653" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="604.18" y="5663.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2805" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="65.53" y="2815.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="385.8" y="5285" width="0.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="388.82" y="5295.5" ></text>
</g>
<g >
<title>`std::__1::__tree_node_base&lt;void*&gt;*&amp; std::__1::__tree&lt;std::__1:: (1 samples, 0.02%)</title><rect x="710.4" y="5653" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="713.42" y="5663.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="117" width="1.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="57.17" y="127.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="174.4" y="5253" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="177.39" y="5263.5" ></text>
</g>
<g >
<title>`ALLOCA-RETURN^CLASP-CLEAVIR^FN^^ (3 samples, 0.07%)</title><rect x="314.0" y="5381" width="0.7" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="316.95" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="1221" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="20.58" y="1231.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolutionWrapperPass::runOnFunction(llvm::Function&amp; (1 samples, 0.02%)</title><rect x="537.1" y="5669" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="540.15" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1893" width="1.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="57.17" y="1903.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.02%)</title><rect x="161.1" y="4805" width="0.2" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="164.06" y="4815.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (233 samples, 5.16%)</title><rect x="36.4" y="5253" width="60.9" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="39.40" y="5263.5" >`COMBI..</text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpWithConstant(llvm::ICmpInst&amp;) (1 samples, 0.02%)</title><rect x="499.5" y="5605" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="502.51" y="5615.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="329.9" y="5141" width="0.3" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="332.89" y="5151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4149" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="137.93" y="4159.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="59.1" y="677" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="62.13" y="687.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^FN^^ (17 samples, 0.38%)</title><rect x="291.2" y="5509" width="4.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="294.21" y="5519.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="63.8" y="1845" width="0.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="66.84" y="1855.5" ></text>
</g>
<g >
<title>`llvm::SHA1::hashBlock() (2 samples, 0.04%)</title><rect x="727.1" y="5637" width="0.6" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="730.15" y="5647.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PointerIntPair&lt;llvm::Va (1 samples, 0.02%)</title><rect x="564.8" y="5541" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="567.85" y="5551.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="352.9" y="5141" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="355.89" y="5151.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.02%)</title><rect x="402.8" y="5397" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="405.81" y="5407.5" ></text>
</g>
<g >
<title>`eliminateTailRecursion(llvm::Function&amp;, llvm::TargetTransformIn (1 samples, 0.02%)</title><rect x="453.0" y="5669" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="455.99" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="4981" width="0.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="180.26" y="4991.5" ></text>
</g>
<g >
<title>`MAKE-FDEFINITION-AST^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="96.2" y="4805" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="99.25" y="4815.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="63.6" y="2485" width="1.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="66.58" y="2495.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="63.1" y="2741" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="66.05" y="2751.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.04%)</title><rect x="108.0" y="5573" width="0.5" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="111.01" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="68.0" y="3189" width="1.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="71.02" y="3199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4837" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="140.02" y="4847.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.5" y="2213" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="65.53" y="2223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="160.0" y="5061" width="1.6" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="163.02" y="5071.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (234 samples, 5.18%)</title><rect x="36.4" y="5477" width="61.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="39.40" y="5487.5" >`CONVE..</text>
</g>
<g >
<title>`PROCESS-REQUIRED^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="14.4" y="3093" width="0.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="17.44" y="3103.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;std::__1::pair&lt;llvm::BasicBlock*, llvm::O (1 samples, 0.02%)</title><rect x="580.3" y="5605" width="0.2" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="583.27" y="5615.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="72.5" y="4837" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="75.46" y="4847.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (3 samples, 0.07%)</title><rect x="71.4" y="4037" width="0.8" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="74.42" y="4047.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="67.5" y="1605" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="70.50" y="1615.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4149" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="100.29" y="4159.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="229.5" y="5557" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="232.53" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="2565" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="64.75" y="2575.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitStoreInst(llvm::StoreInst&amp;) (2 samples, 0.04%)</title><rect x="513.9" y="5621" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="516.88" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="3973" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="139.23" y="3983.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (35 samples, 0.78%)</title><rect x="36.4" y="5061" width="9.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="39.40" y="5071.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (20 samples, 0.44%)</title><rect x="54.2" y="3189" width="5.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="57.17" y="3199.5" ></text>
</g>
<g >
<title>`SPECIALIZE^CLEAVIR-HIR-TO-MIR^((FLOAT-EQUAL-INSTRUCTION CLASP T (2 samples, 0.04%)</title><rect x="190.9" y="5589" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="193.85" y="5599.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::AllocaInst_O&gt; gctools::GCObjectApprop (1 samples, 0.02%)</title><rect x="285.7" y="5445" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="288.73" y="5455.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="12.4" y="4677" width="1.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="15.35" y="4687.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.02%)</title><rect x="145.1" y="5061" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="148.12" y="5071.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (4 samples, 0.09%)</title><rect x="407.0" y="5429" width="1.0" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="409.99" y="5439.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Type*, llvm::Point (1 samples, 0.02%)</title><rect x="503.2" y="5381" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="506.17" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4373" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="138.45" y="4383.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="3093" width="1.8" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="60.57" y="3103.5" ></text>
</g>
<g >
<title>`llvm::hash_value(llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="331.5" y="4981" width="0.2" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="334.46" y="4991.5" ></text>
</g>
<g >
<title>`llvm::APInt::APInt(unsigned int, unsigned long long, bool) (1 samples, 0.02%)</title><rect x="449.1" y="5589" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="452.07" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="3285" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="100.29" y="3295.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="473.1" y="5541" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="476.11" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4021" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="132.96" y="4031.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="933" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="60.57" y="943.5" ></text>
</g>
<g >
<title>`llvm::CallGraphNode::addCalledFunction(llvm::CallSite, llvm::Ca (3 samples, 0.07%)</title><rect x="593.3" y="5653" width="0.8" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="596.34" y="5663.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4693" width="1.0" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="26.59" y="4703.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="129.4" y="3989" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="132.44" y="3999.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (2 samples, 0.04%)</title><rect x="266.1" y="5493" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="269.12" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (26 samples, 0.58%)</title><rect x="52.9" y="3397" width="6.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="55.86" y="3407.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (6 samples, 0.13%)</title><rect x="24.6" y="4373" width="1.6" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="27.64" y="4383.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="5461" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="100.55" y="5471.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Type*, unsigned in (1 samples, 0.02%)</title><rect x="729.0" y="5621" width="0.2" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="731.98" y="5631.5" ></text>
</g>
<g >
<title>`POSITION-IF-NOT^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="23.1" y="3605" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="26.07" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4629" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="137.14" y="4639.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5461" width="0.2" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="123.55" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4213" width="9.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="17.18" y="4223.5" ></text>
</g>
<g >
<title>`llvm::Value::destroyValueName() (1 samples, 0.02%)</title><rect x="697.1" y="5525" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="700.09" y="5535.5" ></text>
</g>
<g >
<title>0x10d596094 (36 samples, 0.80%)</title><rect x="14.2" y="4373" width="9.4" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="17.18" y="4383.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.3" y="2469" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="65.27" y="2479.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="64.1" y="1701" width="1.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="67.10" y="1711.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="2149" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="73.63" y="2159.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::Basi (1 samples, 0.02%)</title><rect x="568.5" y="5525" width="0.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="571.51" y="5535.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="278.7" y="5413" width="0.2" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="281.67" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4501" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="141.32" y="4511.5" ></text>
</g>
<g >
<title>`OPTIMIZED-EQ-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="147.2" y="5541" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="150.21" y="5551.5" ></text>
</g>
<g >
<title>`llvm::formLCSSARecursively(llvm::Loop&amp;, llvm::DominatorTree&amp;, l (1 samples, 0.02%)</title><rect x="598.0" y="5653" width="0.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="601.04" y="5663.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (6 samples, 0.13%)</title><rect x="57.8" y="1685" width="1.6" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="60.83" y="1695.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="63.3" y="2869" width="2.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="66.32" y="2879.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="163.9" y="5029" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="166.94" y="5039.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (1 samples, 0.02%)</title><rect x="58.1" y="965" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="61.09" y="975.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (16 samples, 0.35%)</title><rect x="611.1" y="5605" width="4.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="614.11" y="5615.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.6" y="4517" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="100.55" y="4527.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="70.6" y="1701" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="73.63" y="1711.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="58.3" y="1109" width="1.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="61.35" y="1119.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="335.4" y="5141" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="338.38" y="5151.5" ></text>
</g>
<g >
<title>`PARSE-ORDINARY-LAMBDA-LIST^CLEAVIR-CODE-UTILITIES^FN^^ (1 samples, 0.02%)</title><rect x="50.2" y="3205" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="53.25" y="3215.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1973" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="68.93" y="1983.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (3 samples, 0.07%)</title><rect x="34.6" y="4581" width="0.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="37.57" y="4591.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1317" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="65.79" y="1327.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::BasicBlock*, llvm::SmallPtrSet&lt;llvm::Ba (2 samples, 0.04%)</title><rect x="524.3" y="5589" width="0.6" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="527.34" y="5599.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (3 samples, 0.07%)</title><rect x="651.4" y="5573" width="0.7" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="654.36" y="5583.5" ></text>
</g>
<g >
<title>`getAllocationDataForFunction(llvm::Function const*, AllocType,  (1 samples, 0.02%)</title><rect x="679.3" y="5573" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="682.32" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="2741" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="64.22" y="2751.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="78.7" y="3845" width="1.1" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="81.74" y="3855.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="67.2" y="1365" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="70.24" y="1375.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (3 samples, 0.07%)</title><rect x="160.5" y="4837" width="0.8" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="163.54" y="4847.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="71.4" y="3797" width="0.5" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="74.42" y="3807.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="2981" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="65.27" y="2991.5" ></text>
</g>
<g >
<title>`COMPILE-AND-UNBOX-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="138.3" y="4453" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="141.32" y="4463.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.04%)</title><rect x="309.2" y="5397" width="0.6" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="312.25" y="5407.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="60.2" y="2757" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="63.18" y="2767.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (3 samples, 0.07%)</title><rect x="71.4" y="3877" width="0.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="74.42" y="3887.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2677" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="65.27" y="2687.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="14.2" y="3653" width="1.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="17.18" y="3663.5" ></text>
</g>
<g >
<title>`wrapped_cl__special_operator_p_Symbol_sp (1 samples, 0.02%)</title><rect x="15.5" y="3365" width="0.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="18.49" y="3375.5" ></text>
</g>
<g >
<title>`mergeConditionalStores(llvm::BranchInst*, llvm::BranchInst*, ll (1 samples, 0.02%)</title><rect x="696.3" y="5589" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="699.31" y="5599.5" ></text>
</g>
<g >
<title>`llvm::JumpThreadingPass::ProcessThreadableEdges(llvm::Value*, l (1 samples, 0.02%)</title><rect x="447.0" y="5621" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="449.98" y="5631.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="241.3" y="5525" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="244.30" y="5535.5" ></text>
</g>
<g >
<title>`llvm::gvn::GVNLegacyPass::runOnFunction(llvm::Function&amp;) (166 samples, 3.68%)</title><rect x="537.7" y="5669" width="43.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="540.67" y="5679.5" >`llv..</text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="393.4" y="5333" width="0.3" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="396.40" y="5343.5" ></text>
</g>
<g >
<title>`getAllocationData(llvm::Value const*, AllocType, llvm::TargetLi (1 samples, 0.02%)</title><rect x="639.6" y="5573" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="642.59" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.4" y="3957" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="132.44" y="3967.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefBehavior(llvm::ImmutableCallSite) (1 samples, 0.02%)</title><rect x="451.7" y="5653" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="454.68" y="5663.5" ></text>
</g>
<g >
<title>`CLOSURE-CALL-OR-INVOKE^CLASP-CLEAVIR^FN^^ (46 samples, 1.02%)</title><rect x="382.7" y="5445" width="12.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="385.69" y="5455.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.8" y="1973" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="65.79" y="1983.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="338.3" y="5189" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="341.26" y="5199.5" ></text>
</g>
<g >
<title>`core::bind_optional_va_list(gctools::Vec0&lt;core::OptionalArgumen (1 samples, 0.02%)</title><rect x="363.3" y="5269" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="366.35" y="5279.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.02%)</title><rect x="27.5" y="4325" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="30.51" y="4335.5" ></text>
</g>
<g >
<title>`FUNCTION-INLINE^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="52.3" y="3749" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="55.34" y="3759.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="281.8" y="5605" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="284.81" y="5615.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="3109" width="2.6" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="68.41" y="3119.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (2 samples, 0.04%)</title><rect x="336.2" y="5157" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="339.17" y="5167.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (88 samples, 1.95%)</title><rect x="49.5" y="4677" width="23.0" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="52.46" y="4687.5" >`..</text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;llvm::Instruction*, unsig (3 samples, 0.07%)</title><rect x="452.2" y="5653" width="0.8" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="455.21" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4053" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="138.19" y="4063.5" ></text>
</g>
<g >
<title>`llvm::SimplifyGEPInst(llvm::Type*, llvm::ArrayRef&lt;llvm::Value*&gt; (4 samples, 0.09%)</title><rect x="575.3" y="5573" width="1.0" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="578.30" y="5583.5" ></text>
</g>
<g >
<title>`INTERPRET-DTREE-PROGRAM^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="272.9" y="5573" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="275.92" y="5583.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::makeUniqueName(llvm::Value*, llvm::Smal (1 samples, 0.02%)</title><rect x="586.3" y="5477" width="0.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="589.28" y="5487.5" ></text>
</g>
<g >
<title>`AUGMENT-ENVIRONMENT-WITH-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="38.2" y="4789" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="41.23" y="4799.5" ></text>
</g>
<g >
<title>`IRC-STORE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="349.8" y="5285" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="352.76" y="5295.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="67.5" y="1381" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="70.50" y="1391.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (71 samples, 1.57%)</title><rect x="52.9" y="3765" width="18.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="55.86" y="3775.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="53.4" y="3013" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="56.38" y="3023.5" ></text>
</g>
<g >
<title>`GC_allocobj (2 samples, 0.04%)</title><rect x="68.8" y="2229" width="0.5" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="71.80" y="2239.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="53.9" y="2741" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="56.91" y="2751.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="168.4" y="4981" width="0.2" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="171.38" y="4991.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.02%)</title><rect x="143.3" y="5125" width="0.3" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="146.29" y="5135.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="605.4" y="5541" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="608.36" y="5551.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="732.9" y="5509" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="735.90" y="5519.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="3205" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="73.63" y="3215.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="41.6" y="4229" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="44.62" y="4239.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="62.0" y="2037" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="65.01" y="2047.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1237" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="65.53" y="1247.5" ></text>
</g>
<g >
<title>`UPDATE-CONSTRUCTOR-CELL^STATIC-GFS^FN^^ (1 samples, 0.02%)</title><rect x="732.9" y="5717" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="735.90" y="5727.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="277.4" y="5557" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="280.36" y="5567.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomT (1 samples, 0.02%)</title><rect x="604.1" y="5621" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="607.05" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="61.2" y="2197" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="64.22" y="2207.5" ></text>
</g>
<g >
<title>`REGISTER-INTERVAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1141" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="69.19" y="1151.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="853" width="1.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="57.17" y="863.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="67.2" y="1797" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="70.24" y="1807.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="67.0" y="1589" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="69.97" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4389" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="138.19" y="4399.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="53.9" y="2725" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="56.91" y="2735.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::getLatticeValueFor(llvm::Val (1 samples, 0.02%)</title><rect x="715.1" y="5685" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="718.13" y="5695.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.7" y="2069" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="64.75" y="2079.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="64.4" y="981" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="67.36" y="991.5" ></text>
</g>
<g >
<title>`int boost::io::detail::upper_bound_from_fstring&lt;std::__1::basic (1 samples, 0.02%)</title><rect x="341.1" y="5157" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="344.13" y="5167.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPreferredAlignment(llvm::GlobalVariable co (2 samples, 0.04%)</title><rect x="511.3" y="5509" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="514.27" y="5519.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4677" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="736.42" y="4687.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (4 samples, 0.09%)</title><rect x="75.3" y="3781" width="1.1" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="78.34" y="3791.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (18 samples, 0.40%)</title><rect x="17.3" y="2149" width="4.7" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="20.32" y="2159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.02%)</title><rect x="127.3" y="4853" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="130.35" y="4863.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="329.1" y="5173" width="0.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="332.11" y="5183.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="662.6" y="5461" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="665.59" y="5471.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="331.2" y="5013" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="334.20" y="5023.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2517" width="0.3" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="65.53" y="2527.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="662.6" y="5445" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="665.59" y="5455.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="51.0" y="2613" width="0.6" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="54.03" y="2623.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((MEMSET2-INSTRUCTIO (7 samples, 0.16%)</title><rect x="348.2" y="5301" width="1.8" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="351.19" y="5311.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (56 samples, 1.24%)</title><rect x="81.3" y="4773" width="14.7" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="84.35" y="4783.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="97.3" y="3925" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="100.29" y="3935.5" ></text>
</g>
<g >
<title>0x10d596094 (13 samples, 0.29%)</title><rect x="54.2" y="2053" width="3.4" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="57.17" y="2063.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (16 samples, 0.35%)</title><rect x="73.5" y="4741" width="4.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="76.51" y="4751.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4645" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="736.42" y="4655.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.8" y="2069" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="65.79" y="2079.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2437" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="71.28" y="2447.5" ></text>
</g>
<g >
<title>`llvm::Value::~Value() (1 samples, 0.02%)</title><rect x="719.3" y="5589" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="722.31" y="5599.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="60.4" y="2821" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="63.44" y="2831.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="91.8" y="4373" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="94.80" y="4383.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="48.4" y="5109" width="0.3" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="51.42" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((RETURN-FROM-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4181" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="141.85" y="4191.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="16.8" y="2373" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="19.80" y="2383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4149" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="138.19" y="4159.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="23.9" y="3957" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="26.85" y="3967.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (91 samples, 2.02%)</title><rect x="12.4" y="5109" width="23.7" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="15.35" y="5119.5" >`..</text>
</g>
<g >
<title>`llvm::Module::getFunction(llvm::StringRef) const (1 samples, 0.02%)</title><rect x="410.4" y="5301" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="413.39" y="5311.5" ></text>
</g>
<g >
<title>`llvm::IRBuilderBase::SetInstDebugLocation(llvm::Instruction*) c (1 samples, 0.02%)</title><rect x="332.2" y="4949" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="335.25" y="4959.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.02%)</title><rect x="109.3" y="5573" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="112.31" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="65.9" y="1189" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="68.93" y="1199.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::Value*, std::__1::allocator&lt;llvm::V (1 samples, 0.02%)</title><rect x="352.9" y="5189" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="355.89" y="5199.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (4 samples, 0.09%)</title><rect x="68.8" y="2405" width="1.0" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="71.80" y="2415.5" ></text>
</g>
<g >
<title>`llvm::isAllocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo (1 samples, 0.02%)</title><rect x="594.9" y="5605" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="597.90" y="5615.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5445" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="123.55" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="57.6" y="1253" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="60.57" y="1263.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="425.5" y="5765" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="428.55" y="5775.5" ></text>
</g>
<g >
<title>`IRC-LOAD^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="347.4" y="5285" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="350.40" y="5295.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="66.2" y="1269" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="69.19" y="1279.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (1 samples, 0.02%)</title><rect x="205.8" y="5477" width="0.2" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="208.75" y="5487.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="393.9" y="5285" width="0.3" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="396.92" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="128.7" y="4213" width="1.0" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="131.65" y="4223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4661" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="137.40" y="4671.5" ></text>
</g>
<g >
<title>`ENSURE-ORIGIN^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="356.3" y="5317" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="359.29" y="5327.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4261" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="100.29" y="4271.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::untrack(void*, llvm::Metadata&amp;) (1 samples, 0.02%)</title><rect x="487.0" y="5541" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="489.97" y="5551.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::removeDeadPasses(llvm::Pass*, llvm::String (1 samples, 0.02%)</title><rect x="700.8" y="5701" width="0.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="703.75" y="5711.5" ></text>
</g>
<g >
<title>`GC_mark_some (3 samples, 0.07%)</title><rect x="374.6" y="5253" width="0.8" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="377.58" y="5263.5" ></text>
</g>
<g >
<title>`llvm::ConstantRange::ConstantRange(unsigned int, bool) (1 samples, 0.02%)</title><rect x="431.3" y="5557" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="434.30" y="5567.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="485" width="1.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="58.48" y="495.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (4 samples, 0.09%)</title><rect x="27.5" y="4453" width="1.1" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="30.51" y="4463.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-SIZE_T^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="403.3" y="5445" width="0.6" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="406.33" y="5455.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="12.4" y="4661" width="1.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="15.35" y="4671.5" ></text>
</g>
<g >
<title>`MAKE-LET-INIT-ASTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="38.0" y="4805" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="40.96" y="4815.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="62.5" y="3061" width="0.6" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="65.53" y="3071.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::asMinimalSimpleString() const (1 samples, 0.02%)</title><rect x="45.0" y="4757" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="48.02" y="4767.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAGISel::CodeGenAndEmitDAG() (1 samples, 0.02%)</title><rect x="57.8" y="837" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="60.83" y="847.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="138.3" y="4373" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="141.32" y="4383.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="166.8" y="5061" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="169.81" y="5071.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="202.4" y="5557" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="205.35" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4325" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="132.96" y="4335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4309" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="136.36" y="4319.5" ></text>
</g>
<g >
<title>`llvm::User::operator new(unsigned long, unsigned int) (1 samples, 0.02%)</title><rect x="401.0" y="5349" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="403.98" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4325" width="0.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="138.19" y="4335.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.04%)</title><rect x="29.1" y="4357" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="32.08" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.8" y="5493" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="180.79" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-FUNCTION^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="96.2" y="4869" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="99.25" y="4879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (14 samples, 0.31%)</title><rect x="148.3" y="5349" width="3.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="151.25" y="5359.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::FoldPHIArgZextsIntoPHI(llvm::PHINode&amp;) (1 samples, 0.02%)</title><rect x="632.8" y="5621" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="635.80" y="5631.5" ></text>
</g>
<g >
<title>`llvm::Instruction::mayWriteToMemory() const (3 samples, 0.07%)</title><rect x="517.8" y="5605" width="0.8" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="520.81" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4757" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="141.32" y="4767.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (9 samples, 0.20%)</title><rect x="82.7" y="4517" width="2.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="85.66" y="4527.5" ></text>
</g>
<g >
<title>0x10d596094 (13 samples, 0.29%)</title><rect x="54.2" y="3061" width="3.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="57.17" y="3071.5" ></text>
</g>
<g >
<title>`llvmo::Module_O::getFunction(gctools::smart_ptr&lt;core::Array_O&gt;) (1 samples, 0.02%)</title><rect x="292.5" y="5285" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="295.52" y="5295.5" ></text>
</g>
<g >
<title>`llvm::SSAUpdaterImpl&lt;llvm::SSAUpdater&gt;::GetValue(llvm::BasicBlo (1 samples, 0.02%)</title><rect x="562.2" y="5509" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="565.23" y="5519.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="581" width="1.1" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="59.52" y="591.5" ></text>
</g>
<g >
<title>`llvmo::Value_O::create(llvm::Value*) (1 samples, 0.02%)</title><rect x="384.5" y="5333" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="387.52" y="5343.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="136.2" y="3653" width="0.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="139.23" y="3663.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="88.4" y="4389" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="91.41" y="4399.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (3 samples, 0.07%)</title><rect x="85.8" y="4373" width="0.8" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="88.79" y="4383.5" ></text>
</g>
<g >
<title>`core::MDArray_O::MDArray_O(core::Rank1, unsigned long, gctools: (1 samples, 0.02%)</title><rect x="312.1" y="5365" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="315.12" y="5375.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="309.8" y="5445" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="312.77" y="5455.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1893" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="20.58" y="1903.5" ></text>
</g>
<g >
<title>`AUGMENT-ENVIRONMENT-WITH-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="36.7" y="4997" width="0.7" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="39.66" y="5007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (9 samples, 0.20%)</title><rect x="144.3" y="5349" width="2.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="147.33" y="5359.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4565" width="9.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="17.18" y="4575.5" ></text>
</g>
<g >
<title>`SIMPLE-PROGRAM-ERROR^CORE^FN^^ (1 samples, 0.02%)</title><rect x="735.0" y="5637" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="737.99" y="5647.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (3 samples, 0.07%)</title><rect x="190.1" y="5477" width="0.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="193.07" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (7 samples, 0.16%)</title><rect x="74.6" y="3877" width="1.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="77.55" y="3887.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="252.3" y="5365" width="0.2" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="255.27" y="5375.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeWrapperPass::releaseMemory() (2 samples, 0.04%)</title><rect x="533.7" y="5637" width="0.6" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="536.75" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4773" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="136.62" y="4783.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (23 samples, 0.51%)</title><rect x="38.7" y="4789" width="6.1" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="41.75" y="4799.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1397" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="20.58" y="1407.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="61.7" y="1861" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="64.75" y="1871.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="94.9" y="4501" width="0.6" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="97.94" y="4511.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="379.6" y="5397" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="382.55" y="5407.5" ></text>
</g>
<g >
<title>`IRC-CREATE-CALL^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="390.5" y="5429" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="393.53" y="5439.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="286.8" y="5493" width="0.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="289.77" y="5503.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1237" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="20.58" y="1247.5" ></text>
</g>
<g >
<title>`tlv_get_addr (4 samples, 0.09%)</title><rect x="219.3" y="5541" width="1.1" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="222.34" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5029" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="180.26" y="5039.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="162.1" y="4981" width="0.3" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="165.11" y="4991.5" ></text>
</g>
<g >
<title>`HAS-POLICY-P^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="196.1" y="5605" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="199.08" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2661" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="65.01" y="2671.5" ></text>
</g>
<g >
<title>`LOAD-RETURN-VALUE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="332.2" y="5077" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="335.25" y="5087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="126.8" y="5429" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="129.82" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-HEADER-CHECK^COMPILER^FN^^ (6 samples, 0.13%)</title><rect x="320.7" y="5269" width="1.6" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="323.75" y="5279.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="52.6" y="3637" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="55.60" y="3647.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="65.9" y="1237" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="68.93" y="1247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (76 samples, 1.68%)</title><rect x="127.6" y="5573" width="19.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="130.61" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="869" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="65.53" y="879.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (55 samples, 1.22%)</title><rect x="81.3" y="4597" width="14.4" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="84.35" y="4607.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="168.6" y="4869" width="0.3" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="171.64" y="4879.5" ></text>
</g>
<g >
<title>`GC_clear_marks (1 samples, 0.02%)</title><rect x="46.9" y="4885" width="0.2" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="49.85" y="4895.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (3 samples, 0.07%)</title><rect x="508.1" y="5573" width="0.8" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="511.14" y="5583.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (58 samples, 1.28%)</title><rect x="212.5" y="5589" width="15.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="215.55" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4581" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="136.62" y="4591.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5525" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="123.55" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="55.5" y="1045" width="1.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="58.48" y="1055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4229" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="138.19" y="4239.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="97.3" y="4757" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="100.29" y="4767.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4181" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="138.19" y="4191.5" ></text>
</g>
<g >
<title>`core::MDArray_O::MDArray_O(core::Rank1, unsigned long, gctools: (1 samples, 0.02%)</title><rect x="240.3" y="5493" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="243.25" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="57.6" y="853" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="60.57" y="863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="3829" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="139.23" y="3839.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.1" y="2805" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="56.12" y="2815.5" ></text>
</g>
<g >
<title>`void llvm::SmallVectorImpl&lt;char&gt;::append&lt;char const*, void&gt;(cha (1 samples, 0.02%)</title><rect x="375.9" y="5333" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="378.89" y="5343.5" ></text>
</g>
<g >
<title>`VARIABLE-IS-SPECIAL-P^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="81.1" y="4981" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="84.09" y="4991.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="837" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="65.01" y="847.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="52.9" y="3189" width="0.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="55.86" y="3199.5" ></text>
</g>
<g >
<title>`wrapped_core__sl_boundp_T_sp (1 samples, 0.02%)</title><rect x="100.2" y="5605" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="103.17" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.8" y="5397" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="180.79" y="5407.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="62.3" y="965" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="65.27" y="975.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (3 samples, 0.07%)</title><rect x="407.0" y="5397" width="0.8" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="409.99" y="5407.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignment(llvm::Type*, bool) const (1 samples, 0.02%)</title><rect x="491.9" y="5589" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="494.93" y="5599.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (4 samples, 0.09%)</title><rect x="704.4" y="5621" width="1.1" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="707.41" y="5631.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitICmpInst(llvm::ICmpInst&amp;) (26 samples, 0.58%)</title><rect x="493.0" y="5621" width="6.8" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="495.98" y="5631.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::addAttributes(llvm::LLVMContext&amp;, unsigned (2 samples, 0.04%)</title><rect x="426.1" y="5621" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="429.07" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="1285" width="1.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="59.52" y="1295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.5" y="4373" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="134.53" y="4383.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (3 samples, 0.07%)</title><rect x="393.7" y="5333" width="0.7" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="396.66" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3941" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="132.96" y="3951.5" ></text>
</g>
<g >
<title>0x10d596094 (13 samples, 0.29%)</title><rect x="54.2" y="2453" width="3.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="57.17" y="2463.5" ></text>
</g>
<g >
<title>`core::string_get_std_string(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="356.6" y="5301" width="0.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="359.55" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SYMBOL-VALUE-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.0" y="5461" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="180.00" y="5471.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="63.6" y="2677" width="1.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="66.58" y="2687.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="997" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="65.27" y="1007.5" ></text>
</g>
<g >
<title>`TPL^CORE^FN^^ (2,981 samples, 66.02%)</title><rect x="10.0" y="6181" width="779.1" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="13.00" y="6191.5" >`TPL^CORE^FN^^</text>
</g>
<g >
<title>`IRC-STORE^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="343.7" y="5237" width="0.6" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="346.75" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="23.6" y="4485" width="1.0" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="26.59" y="4495.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="50.8" y="2885" width="0.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="53.77" y="2895.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="324.1" y="5189" width="0.3" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="327.14" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2613" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="65.27" y="2623.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::make(unsigned long, int, bool, gctools::smart_p (1 samples, 0.02%)</title><rect x="139.6" y="5077" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="142.63" y="5087.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (7 samples, 0.16%)</title><rect x="17.8" y="1989" width="1.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="20.84" y="1999.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="3813" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="131.91" y="3823.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="53.1" y="3221" width="1.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="56.12" y="3231.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="62.0" y="1093" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="65.01" y="1103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4277" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="132.96" y="4287.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4837" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="736.42" y="4847.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="563.0" y="5429" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="566.02" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (19 samples, 0.42%)</title><rect x="72.7" y="4869" width="5.0" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="75.72" y="4879.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (8 samples, 0.18%)</title><rect x="63.3" y="2773" width="2.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="66.32" y="2783.5" ></text>
</g>
<g >
<title>`core::cl__class_of(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="50.0" y="3141" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="52.99" y="3151.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (1 samples, 0.02%)</title><rect x="62.3" y="1733" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="65.27" y="1743.5" ></text>
</g>
<g >
<title>`IRC-BASIC-BLOCK-CREATE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="321.0" y="5253" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="324.01" y="5263.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="14.2" y="3445" width="1.0" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="17.18" y="3455.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="406.5" y="5301" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="409.47" y="5311.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="159.5" y="5093" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="162.49" y="5103.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoBase&lt;llvm::BasicBlock, llvm::Loop&gt;::analyze(llvm: (6 samples, 0.13%)</title><rect x="523.8" y="5653" width="1.6" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="526.82" y="5663.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="696.8" y="5557" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="699.83" y="5567.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="168.4" y="4965" width="0.2" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="171.38" y="4975.5" ></text>
</g>
<g >
<title>`llvm::GEPOperator::accumulateConstantOffset(llvm::DataLayout co (1 samples, 0.02%)</title><rect x="585.8" y="5541" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="588.76" y="5551.5" ></text>
</g>
<g >
<title>`IRC-LOAD^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="400.7" y="5461" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="403.72" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="62.3" y="2517" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="65.27" y="2527.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (9 samples, 0.20%)</title><rect x="78.2" y="4485" width="2.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="81.21" y="4495.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="3973" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="131.91" y="3983.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="65.1" y="2021" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="68.15" y="2031.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="642.7" y="5509" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="645.73" y="5519.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (11 samples, 0.24%)</title><rect x="204.2" y="5605" width="2.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="207.18" y="5615.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::shrink_and_clear() (1 samples, 0.02%)</title><rect x="534.3" y="5605" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="537.27" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="1941" width="0.3" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="73.63" y="1951.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4309" width="0.2" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="139.76" y="4319.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="61.2" y="2917" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="64.22" y="2927.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="322.6" y="5221" width="0.2" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="325.58" y="5231.5" ></text>
</g>
<g >
<title>`gctools::GCRootsInModule::getTaggedIndex(char, unsigned long) (2 samples, 0.04%)</title><rect x="404.1" y="5413" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="407.12" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'CLEAVIR-PRIMOP:L (1 samples, 0.02%)</title><rect x="62.0" y="3157" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="65.01" y="3167.5" ></text>
</g>
<g >
<title>`llvm::JumpThreadingPass::ComputeValueKnownInPredecessors(llvm:: (1 samples, 0.02%)</title><rect x="447.0" y="5605" width="0.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="449.98" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (6 samples, 0.13%)</title><rect x="66.5" y="1973" width="1.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="69.45" y="1983.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (2 samples, 0.04%)</title><rect x="207.8" y="5541" width="0.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="210.84" y="5551.5" ></text>
</g>
<g >
<title>`GC_allocobj (3 samples, 0.07%)</title><rect x="323.4" y="5141" width="0.7" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="326.36" y="5151.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getValueInBlock(llvm: (11 samples, 0.24%)</title><rect x="430.8" y="5621" width="2.9" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="433.78" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="59.4" y="2901" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="62.40" y="2911.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (1 samples, 0.02%)</title><rect x="509.2" y="5589" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="512.18" y="5599.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="154.0" y="5157" width="0.3" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="157.00" y="5167.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="176.0" y="5333" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="178.96" y="5343.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (8 samples, 0.18%)</title><rect x="668.3" y="5509" width="2.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="671.34" y="5519.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="413.0" y="5333" width="0.3" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="416.00" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="1493" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="65.79" y="1503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4037" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="139.76" y="4047.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((RETURN-FROM-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3717" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="132.96" y="3727.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="528.3" y="5429" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="531.26" y="5439.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (2 samples, 0.04%)</title><rect x="186.2" y="5493" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="189.15" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4069" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="136.36" y="4079.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::GlobalVariab (1 samples, 0.02%)</title><rect x="376.9" y="5365" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="379.94" y="5375.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (5 samples, 0.11%)</title><rect x="371.7" y="5397" width="1.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="374.71" y="5407.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="321.0" y="5189" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="324.01" y="5199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="175.4" y="5365" width="0.6" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="178.44" y="5375.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="377.7" y="5429" width="0.3" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="380.72" y="5439.5" ></text>
</g>
<g >
<title>`core::LambdaListHandler_O::createBindingsInScopeVaList(unsigned (1 samples, 0.02%)</title><rect x="345.6" y="5125" width="0.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="348.57" y="5135.5" ></text>
</g>
<g >
<title>0x10d596094 (13 samples, 0.29%)</title><rect x="54.2" y="2293" width="3.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="57.17" y="2303.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (26 samples, 0.58%)</title><rect x="27.5" y="4501" width="6.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="30.51" y="4511.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="79.8" y="3813" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="82.78" y="3823.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (9 samples, 0.20%)</title><rect x="595.2" y="5637" width="2.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="598.17" y="5647.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.04%)</title><rect x="342.2" y="5221" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="345.18" y="5231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4405" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="141.32" y="4415.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (34 samples, 0.75%)</title><rect x="14.2" y="3957" width="8.9" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="17.18" y="3967.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="68.0" y="3269" width="1.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="71.02" y="3279.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.5" y="1557" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="65.53" y="1567.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="13.9" y="5061" width="0.3" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="16.92" y="5071.5" ></text>
</g>
<g >
<title>`IRC-GEP^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="381.1" y="5429" width="1.1" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="384.12" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4421" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="138.45" y="4431.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="45.8" y="4997" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="48.81" y="5007.5" ></text>
</g>
<g >
<title>`GC_mark_some (2 samples, 0.04%)</title><rect x="268.7" y="5397" width="0.6" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="271.74" y="5407.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (32 samples, 0.71%)</title><rect x="86.6" y="4549" width="8.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="89.58" y="4559.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="451.9" y="5557" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="454.94" y="5567.5" ></text>
</g>
<g >
<title>`MAKE-FIXNUMP-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.04%)</title><rect x="258.3" y="5525" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="261.28" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-CONSTANT^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="581" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="68.93" y="591.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (26 samples, 0.58%)</title><rect x="16.3" y="3637" width="6.8" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="19.27" y="3647.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="429.7" y="5557" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="432.73" y="5567.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="293.8" y="5349" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="296.83" y="5359.5" ></text>
</g>
<g >
<title>`GC_mark_some (4 samples, 0.09%)</title><rect x="153.0" y="5013" width="1.0" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="155.96" y="5023.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (5 samples, 0.11%)</title><rect x="382.9" y="5381" width="1.4" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="385.95" y="5391.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1589" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="65.53" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4757" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="136.36" y="4767.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="154.0" y="5173" width="0.3" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="157.00" y="5183.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="158.7" y="5365" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="161.71" y="5375.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (2 samples, 0.04%)</title><rect x="663.6" y="5557" width="0.6" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="666.64" y="5567.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIntPtrType(llvm::Type*) const (1 samples, 0.02%)</title><rect x="627.8" y="5573" width="0.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="630.83" y="5583.5" ></text>
</g>
<g >
<title>`llvm::wouldInstructionBeTriviallyDead(llvm::Instruction*, llvm: (2 samples, 0.04%)</title><rect x="599.1" y="5653" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="602.09" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4645" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="142.11" y="4655.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="145.4" y="5013" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="148.38" y="5023.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (2 samples, 0.04%)</title><rect x="67.5" y="1445" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="70.50" y="1455.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.02%)</title><rect x="141.7" y="4933" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="144.72" y="4943.5" ></text>
</g>
<g >
<title>`SET-PREDECESSORS^CLEAVIR-IR^FN^^ (23 samples, 0.51%)</title><rect x="261.4" y="5605" width="6.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="264.42" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.5" y="4437" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="134.53" y="4447.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.02%)</title><rect x="165.0" y="4869" width="0.2" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="167.98" y="4879.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LoopInvariantCodeMotion::runOnLoop(llvm: (1 samples, 0.02%)</title><rect x="684.0" y="5637" width="0.3" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="687.02" y="5647.5" ></text>
</g>
<g >
<title>`PROCESS-LTV^CLASP-CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="207.6" y="5573" width="0.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="210.58" y="5583.5" ></text>
</g>
<g >
<title>0x10d596094 (3 samples, 0.07%)</title><rect x="65.4" y="2261" width="0.8" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="68.41" y="2271.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.02%)</title><rect x="197.7" y="5541" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="200.65" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (13 samples, 0.29%)</title><rect x="54.2" y="3077" width="3.4" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="57.17" y="3087.5" ></text>
</g>
<g >
<title>`OPTIMIZED-FDEFINITION-AST-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="96.2" y="4789" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="99.25" y="4799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="135.2" y="4517" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="138.19" y="4527.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="734.2" y="5397" width="0.3" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="737.20" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="16.8" y="2309" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="19.80" y="2319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (46 samples, 1.02%)</title><rect x="159.5" y="5269" width="12.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="162.49" y="5279.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (16 samples, 0.35%)</title><rect x="73.5" y="4613" width="4.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="76.51" y="4623.5" ></text>
</g>
<g >
<title>`wrapped_cl__print_T_spT_sp (1 samples, 0.02%)</title><rect x="735.5" y="5733" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="738.51" y="5743.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="16.0" y="3573" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="19.01" y="3583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4165" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="137.14" y="4175.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="349.2" y="5157" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="352.23" y="5167.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="39.3" y="4309" width="1.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="42.27" y="4319.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="981" width="1.0" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="58.48" y="991.5" ></text>
</g>
<g >
<title>`llvm::PointerType::get(llvm::Type*, unsigned int) (1 samples, 0.02%)</title><rect x="342.4" y="5157" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="345.44" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4293" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="139.23" y="4303.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (3 samples, 0.07%)</title><rect x="528.8" y="5541" width="0.8" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="531.78" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="127.3" y="4949" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="130.35" y="4959.5" ></text>
</g>
<g >
<title>`PRIMITIVE-RETURN-TYPE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="340.3" y="5189" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="343.35" y="5199.5" ></text>
</g>
<g >
<title>`llvm::SymbolTableListTraits&lt;llvm::Instruction&gt;::addNodeToList(l (1 samples, 0.02%)</title><rect x="343.2" y="5141" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="346.22" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="4917" width="1.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="14.31" y="4927.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2453" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="65.01" y="2463.5" ></text>
</g>
<g >
<title>`llvm::Module::getNamedValue(llvm::StringRef) const (1 samples, 0.02%)</title><rect x="430.8" y="5573" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="433.78" y="5583.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (1 samples, 0.02%)</title><rect x="81.1" y="4965" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="84.09" y="4975.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (2 samples, 0.04%)</title><rect x="167.9" y="4997" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="170.86" y="5007.5" ></text>
</g>
<g >
<title>`AUGMENT-ENVIRONMENT-WITH-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="27.2" y="4901" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="30.25" y="4911.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="53.4" y="2789" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="56.38" y="2799.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="3845" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="100.29" y="3855.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="169.9" y="4965" width="0.3" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="172.95" y="4975.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (36 samples, 0.80%)</title><rect x="14.2" y="4437" width="9.4" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="17.18" y="4447.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="576.3" y="5525" width="0.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="579.35" y="5535.5" ></text>
</g>
<g >
<title>`simplifyFunctionCFG(llvm::Function&amp;, llvm::TargetTransformInfo  (20 samples, 0.44%)</title><rect x="694.7" y="5669" width="5.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="697.74" y="5679.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::BasicBlock*, llvm::SmallPtrSet&lt;llvm::Ba (1 samples, 0.02%)</title><rect x="537.7" y="5589" width="0.2" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="540.67" y="5599.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="698.1" y="5525" width="0.3" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="701.14" y="5535.5" ></text>
</g>
<g >
<title>`llvm::Value::getValueName() const (1 samples, 0.02%)</title><rect x="726.9" y="5637" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="729.89" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="3829" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="131.91" y="3839.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.04%)</title><rect x="68.8" y="2309" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="71.80" y="2319.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="241.0" y="5493" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="244.03" y="5503.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::getModRefBehavior(llvm::ImmutableCallSite) (4 samples, 0.09%)</title><rect x="542.9" y="5541" width="1.0" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="545.89" y="5551.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (405 samples, 8.97%)</title><rect x="594.1" y="5685" width="105.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="597.12" y="5695.5" >`llvm::FPPas..</text>
</g>
<g >
<title>`tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="388.7" y="5285" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="391.70" y="5295.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitAllocaInst(llvm::AllocaInst&amp;) (2 samples, 0.04%)</title><rect x="482.3" y="5621" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="485.26" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="48.9" y="5141" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="51.94" y="5151.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.04%)</title><rect x="44.8" y="4773" width="0.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="47.76" y="4783.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (1 samples, 0.02%)</title><rect x="628.6" y="5557" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="631.62" y="5567.5" ></text>
</g>
<g >
<title>`RUN-ALL-ADD-NODE^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="370.7" y="5317" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="373.66" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4245" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="137.93" y="4255.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="60.2" y="2437" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="63.18" y="2447.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (83 samples, 1.84%)</title><rect x="49.7" y="3941" width="21.7" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="52.73" y="3951.5" >`..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="65.4" y="2373" width="0.8" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="68.41" y="2383.5" ></text>
</g>
<g >
<title>`llvm::sroa::AllocaSlices::AllocaSlices(llvm::DataLayout const&amp;, (1 samples, 0.02%)</title><rect x="581.3" y="5621" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="584.31" y="5631.5" ></text>
</g>
<g >
<title>`RETURN-VALUE-ELT^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="351.1" y="5285" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="354.06" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (1 samples, 0.02%)</title><rect x="97.3" y="3429" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="100.29" y="3439.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::ConstantExpr*, llv (1 samples, 0.02%)</title><rect x="554.9" y="5317" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="557.92" y="5327.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Pass*, llvm::Analy (1 samples, 0.02%)</title><rect x="531.7" y="5653" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="534.66" y="5663.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1237" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="69.19" y="1247.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (82 samples, 1.82%)</title><rect x="14.2" y="4981" width="21.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="17.18" y="4991.5" >`..</text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4373" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="100.29" y="4383.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (9 samples, 0.20%)</title><rect x="546.8" y="5381" width="2.4" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="549.82" y="5391.5" ></text>
</g>
<g >
<title>`llvm::hash_value(llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="449.9" y="5525" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="452.85" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="127.1" y="5605" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="130.09" y="5615.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock (2 samples, 0.04%)</title><rect x="605.4" y="5605" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="608.36" y="5615.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (1 samples, 0.02%)</title><rect x="559.1" y="5365" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="562.10" y="5375.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="54.2" y="1125" width="1.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="57.17" y="1135.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.5" y="997" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="65.53" y="1007.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="115.8" y="5509" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="118.85" y="5519.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (1 samples, 0.02%)</title><rect x="449.6" y="5541" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="452.59" y="5551.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="660.8" y="5461" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="663.76" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (8 samples, 0.18%)</title><rect x="63.3" y="2933" width="2.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="66.32" y="2943.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="324.4" y="5157" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="327.41" y="5167.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="67.5" y="1861" width="0.5" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="70.50" y="1871.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="93.1" y="4453" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="96.11" y="4463.5" ></text>
</g>
<g >
<title>`VALID-KEYWORDS-FROM-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="111.4" y="5605" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="114.40" y="5615.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4933" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="736.42" y="4943.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2341" width="0.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="65.27" y="2351.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (26 samples, 0.58%)</title><rect x="16.3" y="3749" width="6.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="19.27" y="3759.5" ></text>
</g>
<g >
<title>`MAKE-TOP-LEVEL-ENTER-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="124.5" y="5477" width="0.2" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="127.47" y="5487.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (9 samples, 0.20%)</title><rect x="50.0" y="3621" width="2.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="52.99" y="3631.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (5 samples, 0.11%)</title><rect x="547.3" y="5333" width="1.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="550.34" y="5343.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorTemplateBase&lt;llvm::Constant*, true&gt;::push_back (1 samples, 0.02%)</title><rect x="555.4" y="5349" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="558.44" y="5359.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="309.5" y="5365" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="312.51" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4389" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="135.31" y="4399.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="192.9" y="5477" width="0.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="195.95" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4757" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="135.31" y="4767.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.4" y="4037" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="132.44" y="4047.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="2357" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="65.01" y="2367.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="67.2" y="1573" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="70.24" y="1583.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="329.1" y="5077" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="332.11" y="5087.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (6 samples, 0.13%)</title><rect x="351.8" y="5253" width="1.6" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="354.85" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="65.4" y="2469" width="0.8" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="68.41" y="2479.5" ></text>
</g>
<g >
<title>`wrapped_APInt_O__makeAPIntWidth_core__Integer_spuintbool (1 samples, 0.02%)</title><rect x="368.8" y="5365" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="371.83" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.18%)</title><rect x="137.3" y="4981" width="2.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="140.28" y="4991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="4149" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="131.91" y="4159.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Value const*&gt;::insert(llvm::Value c (1 samples, 0.02%)</title><rect x="492.5" y="5573" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="495.45" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-ERROR-IF-TOO-MANY-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="378.2" y="5429" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="381.24" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4709" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="140.02" y="4719.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="176.0" y="5317" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="178.96" y="5327.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="44.2" y="4613" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="47.24" y="4623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TYPEQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.0" y="4645" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="138.97" y="4655.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomT (2 samples, 0.04%)</title><rect x="604.6" y="5621" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="607.57" y="5631.5" ></text>
</g>
<g >
<title>`core::Cache_O::vector_hash_key(gctools::Vec0&lt;gctools::smart_ptr (1 samples, 0.02%)</title><rect x="297.7" y="5413" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="300.75" y="5423.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^ (1 samples, 0.02%)</title><rect x="16.5" y="2229" width="0.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="19.53" y="2239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4277" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="136.36" y="4287.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5605" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="713.94" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (8 samples, 0.18%)</title><rect x="55.5" y="1893" width="2.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="58.48" y="1903.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="629" width="1.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="59.52" y="639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="142.2" y="4997" width="0.6" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="145.24" y="5007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4597" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="140.02" y="4607.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="45.8" y="5093" width="2.6" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="48.81" y="5103.5" ></text>
</g>
<g >
<title>`OPTIMIZED-RETURN-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="178.0" y="5605" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="181.05" y="5615.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="138.6" y="4757" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="141.58" y="4767.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="381.4" y="5413" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="384.38" y="5423.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ASSIGNMENT-INSTRUC (1 samples, 0.02%)</title><rect x="328.3" y="5301" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="331.33" y="5311.5" ></text>
</g>
<g >
<title>`GET-OR-DECLARE-FUNCTION-OR-ERROR^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="292.5" y="5365" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="295.52" y="5375.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="295.1" y="5349" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="298.13" y="5359.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="145.9" y="5141" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="148.90" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (18 samples, 0.40%)</title><rect x="65.4" y="3333" width="4.7" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="68.41" y="3343.5" ></text>
</g>
<g >
<title>`llvm::APInt::udiv(llvm::APInt const&amp;) const (1 samples, 0.02%)</title><rect x="662.6" y="5397" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="665.59" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4165" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="132.70" y="4175.5" ></text>
</g>
<g >
<title>`llvm::ReversePostOrderTraversal&lt;llvm::Function*, llvm::GraphTra (1 samples, 0.02%)</title><rect x="576.9" y="5605" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="579.87" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((LEXICAL-VARIABLE-INFO T T T (1 samples, 0.02%)</title><rect x="62.0" y="709" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="65.01" y="719.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (1 samples, 0.02%)</title><rect x="465.8" y="5557" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="468.80" y="5567.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="21.8" y="2133" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="24.76" y="2143.5" ></text>
</g>
<g >
<title>`llvm::APInt::isMinSignedValue() const (1 samples, 0.02%)</title><rect x="560.9" y="5381" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="563.93" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (10 samples, 0.22%)</title><rect x="74.6" y="4133" width="2.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="77.55" y="4143.5" ></text>
</g>
<g >
<title>`llvm::MemCpyOptPass::processStore(llvm::StoreInst*, llvm::ilist (2 samples, 0.04%)</title><rect x="449.3" y="5621" width="0.6" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="452.33" y="5631.5" ></text>
</g>
<g >
<title>`llvm::scc_iterator&lt;llvm::Function const*, llvm::GraphTraits&lt;llv (1 samples, 0.02%)</title><rect x="603.3" y="5621" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="606.27" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (5 samples, 0.11%)</title><rect x="68.5" y="2597" width="1.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="71.54" y="2607.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="48.9" y="5125" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="51.94" y="5135.5" ></text>
</g>
<g >
<title>`void llvm::AAResults::addAAResult&lt;llvm::TypeBasedAAResult&gt;(llvm (2 samples, 0.04%)</title><rect x="456.4" y="5653" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="459.39" y="5663.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (27 samples, 0.60%)</title><rect x="27.5" y="4581" width="7.1" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="30.51" y="4591.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2277" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="64.22" y="2287.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (5 samples, 0.11%)</title><rect x="29.9" y="4357" width="1.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="32.86" y="4367.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="505.0" y="5429" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="508.00" y="5439.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (4 samples, 0.09%)</title><rect x="206.0" y="5573" width="1.1" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="209.01" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (11 samples, 0.24%)</title><rect x="62.5" y="3301" width="2.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="65.53" y="3311.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (2 samples, 0.04%)</title><rect x="374.6" y="5205" width="0.5" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="377.58" y="5215.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="364.9" y="5301" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="367.91" y="5311.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (3 samples, 0.07%)</title><rect x="493.5" y="5573" width="0.8" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="496.50" y="5583.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="725" width="1.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="59.52" y="735.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="157.4" y="5333" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="160.40" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="61.7" y="1925" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="64.75" y="1935.5" ></text>
</g>
<g >
<title>`FUNCTION-TYPE^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="51.8" y="3413" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="54.82" y="3423.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="421.9" y="5653" width="0.3" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="424.89" y="5663.5" ></text>
</g>
<g >
<title>`__gmpn_copyi (1 samples, 0.02%)</title><rect x="737.6" y="5701" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="740.60" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.8" y="5477" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="180.79" y="5487.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2053" width="0.3" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="64.75" y="2063.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::alias(llvm::MemoryLocation const&amp;, llvm: (1 samples, 0.02%)</title><rect x="567.7" y="5365" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="570.72" y="5375.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="39.3" y="4085" width="0.2" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="42.27" y="4095.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET*) T T T))^ME (1 samples, 0.02%)</title><rect x="62.5" y="2677" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="65.53" y="2687.5" ></text>
</g>
<g >
<title>`llvm::Module::dropAllReferences() (11 samples, 0.24%)</title><rect x="717.7" y="5685" width="2.9" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="720.74" y="5695.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.6" y="245" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="67.62" y="255.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="21.5" y="1381" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="24.50" y="1391.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="70.9" y="2965" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="73.89" y="2975.5" ></text>
</g>
<g >
<title>`IRC-BEGIN-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="350.8" y="5285" width="0.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="353.80" y="5295.5" ></text>
</g>
<g >
<title>`FUDGE-VALUES-TYPE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1285" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="24.50" y="1295.5" ></text>
</g>
<g >
<title>`llvm::TargetTransformInfoWrapperPass::getTTI(llvm::Function con (1 samples, 0.02%)</title><rect x="429.7" y="5653" width="0.3" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="432.73" y="5663.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (3 samples, 0.07%)</title><rect x="502.9" y="5477" width="0.8" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="505.91" y="5487.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="148.8" y="4853" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="151.78" y="4863.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (2 samples, 0.04%)</title><rect x="11.6" y="4533" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="14.57" y="4543.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2629" width="1.8" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="60.57" y="2639.5" ></text>
</g>
<g >
<title>`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="738.1" y="5669" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="741.12" y="5679.5" ></text>
</g>
<g >
<title>`core::Function_O::functionName() const (1 samples, 0.02%)</title><rect x="412.7" y="5317" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="415.74" y="5327.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (3 samples, 0.07%)</title><rect x="651.4" y="5493" width="0.7" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="654.36" y="5503.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (9 samples, 0.20%)</title><rect x="74.6" y="3957" width="2.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="77.55" y="3967.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.02%)</title><rect x="137.3" y="4485" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="140.28" y="4495.5" ></text>
</g>
<g >
<title>`INPUTS^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="297.0" y="5477" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="299.96" y="5487.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1941" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="69.19" y="1951.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.11%)</title><rect x="128.7" y="4405" width="1.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="131.65" y="4415.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="78.5" y="3861" width="0.2" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="81.47" y="3871.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="70.1" y="3141" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="73.11" y="3151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (14 samples, 0.31%)</title><rect x="148.3" y="5397" width="3.6" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="151.25" y="5407.5" ></text>
</g>
<g >
<title>`llvm::FindAvailableLoadedValue(llvm::LoadInst*, llvm::BasicBloc (27 samples, 0.60%)</title><rect x="658.7" y="5605" width="7.0" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="661.67" y="5615.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="593.9" y="5573" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="596.86" y="5583.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::BinaryOp_match&lt;llvm::PatternMatch::mat (1 samples, 0.02%)</title><rect x="655.5" y="5605" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="658.54" y="5615.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="144.1" y="5461" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="147.07" y="5471.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2037" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="64.22" y="2047.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorTemplateBase&lt;llvm::BasicBlock*, true&gt;::push_ba (3 samples, 0.07%)</title><rect x="460.3" y="5621" width="0.8" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="463.31" y="5631.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="476.3" y="5509" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="479.25" y="5519.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="645.1" y="5589" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="648.08" y="5599.5" ></text>
</g>
<g >
<title>`llvm::APInt::compare(llvm::APInt const&amp;) const (1 samples, 0.02%)</title><rect x="654.5" y="5557" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="657.49" y="5567.5" ></text>
</g>
<g >
<title>`core::LambdaListHandler_O::createBindingsInScopeVaList(unsigned (1 samples, 0.02%)</title><rect x="321.8" y="5173" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="324.79" y="5183.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (1 samples, 0.02%)</title><rect x="62.8" y="2341" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="65.79" y="2351.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="23.9" y="3973" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="26.85" y="3983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (12 samples, 0.27%)</title><rect x="139.9" y="5173" width="3.1" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="142.89" y="5183.5" ></text>
</g>
<g >
<title>`GC_mark_from (1,438 samples, 31.85%)</title><rect x="808.4" y="6309" width="375.9" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="811.43" y="6319.5" >`GC_mark_from</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="3957" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="131.65" y="3967.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="652.4" y="5461" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="655.40" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="2885" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="65.53" y="2895.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="684.5" y="5589" width="0.6" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="687.55" y="5599.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;std::__1::__value_type&lt;llvm::Function const*,  (1 samples, 0.02%)</title><rect x="700.8" y="5653" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="703.75" y="5663.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::UAddWithOverflow_match&lt;llvm::PatternMa (1 samples, 0.02%)</title><rect x="495.9" y="5605" width="0.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="498.85" y="5615.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="51.0" y="2629" width="0.6" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="54.03" y="2639.5" ></text>
</g>
<g >
<title>`LTV/CONS^LITERAL^FN^^ (3 samples, 0.07%)</title><rect x="335.9" y="5189" width="0.8" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="338.90" y="5199.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::StoreInst const*, llvm::Me (1 samples, 0.02%)</title><rect x="560.9" y="5509" width="0.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="563.93" y="5519.5" ></text>
</g>
<g >
<title>`core::cl__parse_namestring(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="721.1" y="5637" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="724.14" y="5647.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="94.9" y="4357" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="97.94" y="4367.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::StringMapIterator&lt;llvm::MDString&gt;, bool&gt; l (1 samples, 0.02%)</title><rect x="360.2" y="5205" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="363.21" y="5215.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (2 samples, 0.04%)</title><rect x="171.8" y="5125" width="0.5" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="174.78" y="5135.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="117.2" y="5605" width="0.2" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="120.15" y="5615.5" ></text>
</g>
<g >
<title>`llvm::AAResults::Model&lt;llvm::BasicAAResult&gt;::alias(llvm::Memory (1 samples, 0.02%)</title><rect x="526.4" y="5557" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="529.43" y="5567.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="633.8" y="5557" width="0.3" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="636.84" y="5567.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4469" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="736.42" y="4479.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (6 samples, 0.13%)</title><rect x="181.2" y="5589" width="1.6" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="184.18" y="5599.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.02%)</title><rect x="45.8" y="5045" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="48.81" y="5055.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="60.4" y="2917" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="63.44" y="2927.5" ></text>
</g>
<g >
<title>`IRC-COND-BR^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="330.9" y="5061" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="333.94" y="5071.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5557" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="123.55" y="5567.5" ></text>
</g>
<g >
<title>`SAFE-CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="67.8" y="1269" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="70.76" y="1279.5" ></text>
</g>
<g >
<title>`GC_release_mark_lock (1 samples, 0.02%)</title><rect x="175.7" y="5269" width="0.3" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="178.70" y="5279.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (1 samples, 0.02%)</title><rect x="726.4" y="5589" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="729.36" y="5599.5" ></text>
</g>
<g >
<title>`GC_clear_marks (1 samples, 0.02%)</title><rect x="396.5" y="5237" width="0.3" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="399.54" y="5247.5" ></text>
</g>
<g >
<title>`GC_mark_some (1 samples, 0.02%)</title><rect x="25.4" y="3845" width="0.3" height="15.0" fill="rgb(254,128,128)" rx="2" ry="2" />
<text  x="28.42" y="3855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4821" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="142.11" y="4831.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="60.7" y="2789" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="63.70" y="2799.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="719.3" y="5557" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="722.31" y="5567.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1157" width="0.2" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="65.27" y="1167.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="2773" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="72.85" y="2783.5" ></text>
</g>
<g >
<title>`llvm::APInt::clearUnusedBits() (1 samples, 0.02%)</title><rect x="433.1" y="5525" width="0.3" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="436.13" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="24.6" y="3605" width="0.6" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="27.64" y="3615.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (7 samples, 0.16%)</title><rect x="17.8" y="2021" width="1.9" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="20.84" y="2031.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.9" y="3717" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="131.91" y="3727.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="652.4" y="5477" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="655.40" y="5487.5" ></text>
</g>
<g >
<title>`GC_mark_some (3 samples, 0.07%)</title><rect x="252.5" y="5381" width="0.8" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="255.53" y="5391.5" ></text>
</g>
<g >
<title>`llvm::CallSiteBase&lt;llvm::Function const, llvm::BasicBlock const (1 samples, 0.02%)</title><rect x="639.6" y="5557" width="0.3" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="642.59" y="5567.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1477" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="68.93" y="1487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="1173" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="65.53" y="1183.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass* (1 samples, 0.02%)</title><rect x="458.2" y="5589" width="0.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="461.22" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4581" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="135.31" y="4591.5" ></text>
</g>
<g >
<title>`COMPILE-TREE^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5493" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="736.42" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (2 samples, 0.04%)</title><rect x="65.7" y="2069" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="68.67" y="2079.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.04%)</title><rect x="321.3" y="5221" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="324.27" y="5231.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="311.3" y="5397" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="314.34" y="5407.5" ></text>
</g>
<g >
<title>`SEQ-ITERATOR-ENDP^CORE^FN^^ (1 samples, 0.02%)</title><rect x="147.2" y="5509" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="150.21" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5029" width="1.1" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="14.31" y="5039.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="412.0" y="5317" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="414.96" y="5327.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitPHINode(llvm::PHINode&amp;) (1 samples, 0.02%)</title><rect x="513.6" y="5621" width="0.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="516.62" y="5631.5" ></text>
</g>
<g >
<title>`GEN-MEMREF-ADDRESS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="400.5" y="5461" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="403.46" y="5471.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::ModuleHandle (1 samples, 0.02%)</title><rect x="734.7" y="5445" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="737.73" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="2325" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="64.75" y="2335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5381" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="180.26" y="5391.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="16.3" y="2101" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="19.27" y="2111.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="134.7" y="4293" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="137.66" y="4303.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1333" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="65.27" y="1343.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::hasParamAttribute(unsigned int, llvm::Attr (1 samples, 0.02%)</title><rect x="645.6" y="5605" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="648.61" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FIXNUM-ADD-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="169.7" y="5029" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="172.69" y="5039.5" ></text>
</g>
<g >
<title>`llvm::formLCSSAForInstructions(llvm::SmallVectorImpl&lt;llvm::Inst (1 samples, 0.02%)</title><rect x="598.0" y="5621" width="0.3" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="601.04" y="5631.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC^COMPILER^FN^^ (5 samples, 0.11%)</title><rect x="363.9" y="5349" width="1.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="366.87" y="5359.5" ></text>
</g>
<g >
<title>`realloc (1 samples, 0.02%)</title><rect x="737.3" y="5685" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="740.34" y="5695.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="355.0" y="5269" width="1.0" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="357.98" y="5279.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="588.4" y="5637" width="0.2" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="591.37" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="14.2" y="3509" width="1.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="17.18" y="3519.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="312.9" y="5381" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="315.91" y="5391.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="22.3" y="2629" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="25.28" y="2639.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="448.3" y="5573" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="451.29" y="5583.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.2" y="2117" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="64.22" y="2127.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="65.9" y="757" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="68.93" y="767.5" ></text>
</g>
<g >
<title>`llvmo::DILocation_O::make(llvm::LLVMContext&amp;, unsigned int, uns (11 samples, 0.24%)</title><rect x="298.5" y="5397" width="2.9" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="301.53" y="5407.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (13 samples, 0.29%)</title><rect x="74.0" y="4309" width="3.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="77.03" y="4319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="131.0" y="4645" width="0.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="134.01" y="4655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4325" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="137.14" y="4335.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="169.7" y="5013" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="172.69" y="5023.5" ></text>
</g>
<g >
<title>`GET-DILOCATION^LLVM-SYS^FN^^ (1 samples, 0.02%)</title><rect x="304.3" y="5445" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="307.28" y="5455.5" ></text>
</g>
<g >
<title>`isObjectDereferencedInBlock(llvm::Value*, llvm::BasicBlock*) (2 samples, 0.04%)</title><rect x="436.8" y="5557" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="439.79" y="5567.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::find_imp(void const*) const (1 samples, 0.02%)</title><rect x="449.6" y="5429" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="452.59" y="5439.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (2 samples, 0.04%)</title><rect x="116.6" y="5621" width="0.6" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="119.63" y="5631.5" ></text>
</g>
<g >
<title>`llvm::Instruction::mayWriteToMemory() const (1 samples, 0.02%)</title><rect x="679.1" y="5605" width="0.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="682.06" y="5615.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.02%)</title><rect x="334.3" y="4981" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="337.34" y="4991.5" ></text>
</g>
<g >
<title>`GC_mark_local (4 samples, 0.09%)</title><rect x="119.0" y="5397" width="1.0" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="121.98" y="5407.5" ></text>
</g>
<g >
<title>`llvm::ModuleSymbolTable::addModule(llvm::Module*) (1 samples, 0.02%)</title><rect x="729.2" y="5669" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="732.24" y="5679.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::reference_raw_(core::Symbol_O*, gcto (1 samples, 0.02%)</title><rect x="341.9" y="5221" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="344.92" y="5231.5" ></text>
</g>
<g >
<title>`GC_mark_some (2 samples, 0.04%)</title><rect x="146.2" y="4933" width="0.5" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="149.16" y="4943.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1429" width="1.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="58.48" y="1439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="101" width="1.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="59.52" y="111.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.02%)</title><rect x="274.7" y="5557" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="277.75" y="5567.5" ></text>
</g>
<g >
<title>`core::HashTableEqual_O::keyTest(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.02%)</title><rect x="12.9" y="4181" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="15.87" y="4191.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitBitCast(llvm::BitCastInst&amp;) (3 samples, 0.07%)</title><rect x="635.7" y="5621" width="0.8" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="638.67" y="5631.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2501" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="65.53" y="2511.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="274.5" y="5541" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="277.49" y="5551.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::find_imp(void const*) const (1 samples, 0.02%)</title><rect x="712.5" y="5653" width="0.3" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="715.51" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="1093" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="65.27" y="1103.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::visitTerminatorInst(llvm::Te (5 samples, 0.11%)</title><rect x="713.3" y="5669" width="1.3" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="716.30" y="5679.5" ></text>
</g>
<g >
<title>`VARIABLE-IS-SPECIAL-P^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="27.2" y="4885" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="30.25" y="4895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="3893" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="136.36" y="3903.5" ></text>
</g>
<g >
<title>`MAKE-CONDITION^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="735.2" y="5589" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="738.25" y="5599.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="67.2" y="1285" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="70.24" y="1295.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.02%)</title><rect x="102.5" y="5589" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="105.52" y="5599.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="426.6" y="5605" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="429.59" y="5615.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T LEXICAL-VARIABLE-INFO))^METHO (1 samples, 0.02%)</title><rect x="73.0" y="4709" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="75.99" y="4719.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="346.1" y="5237" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="349.10" y="5247.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;std::__1::pair&lt;llvm::BasicBlock*, llvm::T (1 samples, 0.02%)</title><rect x="524.6" y="5573" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="527.60" y="5583.5" ></text>
</g>
<g >
<title>`cc_enclose (2 samples, 0.04%)</title><rect x="171.8" y="5285" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="174.78" y="5295.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="194.5" y="5445" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="197.51" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="1845" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="65.79" y="1855.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="336.7" y="5221" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="339.69" y="5231.5" ></text>
</g>
<g >
<title>`wrapped_clos__classp_T_sp (1 samples, 0.02%)</title><rect x="41.6" y="4213" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="44.62" y="4223.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIntPtrType(llvm::Type*) const (1 samples, 0.02%)</title><rect x="550.7" y="5365" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="553.74" y="5375.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="2725" width="0.3" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="62.40" y="2735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="168.6" y="4997" width="0.8" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="171.64" y="5007.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="456.1" y="5605" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="459.13" y="5615.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.02%)</title><rect x="589.4" y="5621" width="0.3" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="592.42" y="5631.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="673.6" y="5557" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="676.57" y="5567.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (16 samples, 0.35%)</title><rect x="73.5" y="4661" width="4.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="76.51" y="4671.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="141.2" y="5029" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="144.20" y="5039.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1413" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="24.50" y="1423.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="566.4" y="5365" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="569.42" y="5375.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="139.4" y="5061" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="142.37" y="5071.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="57.6" y="1541" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="60.57" y="1551.5" ></text>
</g>
<g >
<title>`IRC-BEGIN-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="329.1" y="5157" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="332.11" y="5167.5" ></text>
</g>
<g >
<title>`llvmo::ClaspJIT_O::addModule(gctools::smart_ptr&lt;llvmo::Module_O (2 samples, 0.04%)</title><rect x="58.6" y="949" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="61.61" y="959.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="1845" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="20.58" y="1855.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="2629" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="72.85" y="2639.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="64.9" y="1141" width="0.2" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="67.88" y="1151.5" ></text>
</g>
<g >
<title>`gctools::multiple_values&lt;core::T_O&gt;::multiple_values() (2 samples, 0.04%)</title><rect x="372.0" y="5301" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="374.97" y="5311.5" ></text>
</g>
<g >
<title>`llvmo::Type_O::Type_equal(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="391.8" y="5333" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="394.83" y="5343.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="608.8" y="5573" width="0.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="611.76" y="5583.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="63.3" y="2677" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="66.32" y="2687.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="249.4" y="5557" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="252.40" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.7" y="4613" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="133.74" y="4623.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="16.3" y="2197" width="0.2" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="19.27" y="2207.5" ></text>
</g>
<g >
<title>`llvmo::APInt_O::makeAPIntWidth(gctools::smart_ptr&lt;core::Integer (1 samples, 0.02%)</title><rect x="402.5" y="5413" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="405.55" y="5423.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="735.5" y="5525" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="738.51" y="5535.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="318.9" y="5269" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="321.92" y="5279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3813" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="132.96" y="3823.5" ></text>
</g>
<g >
<title>`core::cl__zerop(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="23.1" y="3525" width="0.2" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="26.07" y="3535.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="287.0" y="5493" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="290.03" y="5503.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="10.5" y="5637" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="13.52" y="5647.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2565" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="65.53" y="2575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.11%)</title><rect x="137.3" y="4917" width="1.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="140.28" y="4927.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (4 samples, 0.09%)</title><rect x="201.0" y="5493" width="1.1" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="204.05" y="5503.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="69.8" y="2789" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="72.85" y="2799.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="51.8" y="3301" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="54.82" y="3311.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="63.1" y="2789" width="0.2" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="66.05" y="2799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4437" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="138.19" y="4447.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (1 samples, 0.02%)</title><rect x="403.6" y="5237" width="0.3" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="406.59" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.04%)</title><rect x="127.6" y="5493" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="130.61" y="5503.5" ></text>
</g>
<g >
<title>`MY-HIR-TRANSFORMATIONS^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="734.5" y="5509" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="737.47" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="126.8" y="5573" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="129.82" y="5583.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (26 samples, 0.58%)</title><rect x="16.3" y="3669" width="6.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="19.27" y="3679.5" ></text>
</g>
<g >
<title>`IRC-EXTRACT-VALUE^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="344.8" y="5221" width="0.5" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="347.79" y="5231.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (2 samples, 0.04%)</title><rect x="268.7" y="5413" width="0.6" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="271.74" y="5423.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="64.1" y="1637" width="1.0" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="67.10" y="1647.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (2 samples, 0.04%)</title><rect x="610.3" y="5573" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="613.32" y="5583.5" ></text>
</g>
<g >
<title>`llvm::wouldInstructionBeTriviallyDead(llvm::Instruction*, llvm: (9 samples, 0.20%)</title><rect x="517.0" y="5621" width="2.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="520.02" y="5631.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.02%)</title><rect x="748.6" y="5589" width="0.2" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="751.58" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4453" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="138.71" y="4463.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2549" width="0.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="71.28" y="2559.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="292.3" y="5429" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="295.26" y="5439.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="255.1" y="5573" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="258.15" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="64.1" y="1653" width="1.0" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="67.10" y="1663.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1637" width="1.3" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="57.17" y="1647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4245" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="135.31" y="4255.5" ></text>
</g>
<g >
<title>`llvm::AssumptionCache::assumptionsFor(llvm::Value const*) (1 samples, 0.02%)</title><rect x="499.0" y="5525" width="0.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="501.99" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="3845" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="131.91" y="3855.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="56.5" y="501" width="1.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="59.52" y="511.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (10 samples, 0.22%)</title><rect x="49.7" y="3701" width="2.6" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="52.73" y="3711.5" ></text>
</g>
<g >
<title>`PROCESS-AUX^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5205" width="1.1" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="14.31" y="5215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4485" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="138.71" y="4495.5" ></text>
</g>
<g >
<title>0x10d596094 (36 samples, 0.80%)</title><rect x="14.2" y="4165" width="9.4" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="17.18" y="4175.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="24.4" y="3973" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="27.37" y="3983.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="53.6" y="2533" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="56.65" y="2543.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.07%)</title><rect x="131.0" y="4629" width="0.8" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="134.01" y="4639.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="71.7" y="3701" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="74.68" y="3711.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="68.0" y="2421" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="71.02" y="2431.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="1877" width="1.8" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="60.57" y="1887.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="981" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="61.09" y="991.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1973" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="20.58" y="1983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (12 samples, 0.27%)</title><rect x="128.7" y="4741" width="3.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="131.65" y="4751.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (91 samples, 2.02%)</title><rect x="12.4" y="5349" width="23.7" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="15.35" y="5359.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4693" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="135.31" y="4703.5" ></text>
</g>
<g >
<title>`GC_mark_local (1 samples, 0.02%)</title><rect x="173.1" y="5077" width="0.2" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="176.08" y="5087.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="51.0" y="2485" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="54.03" y="2495.5" ></text>
</g>
<g >
<title>`COMPILE-TOPLEVEL^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="124.5" y="5493" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="127.47" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (26 samples, 0.58%)</title><rect x="52.9" y="3349" width="6.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="55.86" y="3359.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (1 samples, 0.02%)</title><rect x="40.6" y="3989" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="43.58" y="3999.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="386.1" y="5397" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="389.08" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4309" width="0.3" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="135.31" y="4319.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="64.9" y="1061" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="67.88" y="1071.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="642.7" y="5525" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="645.73" y="5535.5" ></text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (1 samples, 0.02%)</title><rect x="366.0" y="5221" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="368.96" y="5231.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (3 samples, 0.07%)</title><rect x="230.6" y="5333" width="0.8" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="233.58" y="5343.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="734.7" y="5477" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="737.73" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (1 samples, 0.02%)</title><rect x="64.6" y="565" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="67.62" y="575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="130.7" y="4693" width="1.1" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="133.74" y="4703.5" ></text>
</g>
<g >
<title>`MAKE-FORMAT-DIRECTIVE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="80.8" y="4645" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="83.83" y="4655.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (8 samples, 0.18%)</title><rect x="63.3" y="2997" width="2.1" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="66.32" y="3007.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="14.2" y="3381" width="1.0" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="17.18" y="3391.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="70.6" y="1493" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="73.63" y="1503.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="593.1" y="5573" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="596.07" y="5583.5" ></text>
</g>
<g >
<title>`%SIZE_T^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="403.3" y="5461" width="0.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="406.33" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="127.1" y="5397" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="130.09" y="5407.5" ></text>
</g>
<g >
<title>`small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="537.9" y="5589" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="540.93" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.04%)</title><rect x="175.4" y="5349" width="0.6" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="178.44" y="5359.5" ></text>
</g>
<g >
<title>`llvm::isAllocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo (3 samples, 0.07%)</title><rect x="681.9" y="5621" width="0.8" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="684.93" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (9 samples, 0.20%)</title><rect x="24.6" y="4853" width="2.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="27.64" y="4863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FLOAT-EQUAL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4469" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="141.32" y="4479.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, ll (2 samples, 0.04%)</title><rect x="498.7" y="5557" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="501.73" y="5567.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.02%)</title><rect x="437.0" y="5413" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="440.05" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="135.4" y="4197" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="138.45" y="4207.5" ></text>
</g>
<g >
<title>0x10d596094 (71 samples, 1.57%)</title><rect x="52.9" y="3781" width="18.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="55.86" y="3791.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (6 samples, 0.13%)</title><rect x="571.9" y="5525" width="1.6" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="574.90" y="5535.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (17 samples, 0.38%)</title><rect x="179.1" y="5605" width="4.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="182.09" y="5615.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (5 samples, 0.11%)</title><rect x="475.2" y="5541" width="1.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="478.20" y="5551.5" ></text>
</g>
<g >
<title>`UNSAFE-FUNCALL1^CORE^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2453" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="17.70" y="2463.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeWrapperPass::runOnFunction(llvm::Function&amp;) (15 samples, 0.33%)</title><rect x="458.5" y="5669" width="3.9" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="461.48" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="53.1" y="2997" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="56.12" y="3007.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::BasicBlock*, std::__1::allocator&lt;ll (4 samples, 0.09%)</title><rect x="461.1" y="5621" width="1.0" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="464.09" y="5631.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="71.4" y="3413" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="74.42" y="3423.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (3 samples, 0.07%)</title><rect x="85.8" y="4453" width="0.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="88.79" y="4463.5" ></text>
</g>
<g >
<title>`FUNCTION-NAME-FROM-SOURCE-INFO^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="376.2" y="5413" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="379.15" y="5423.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (2 samples, 0.04%)</title><rect x="208.6" y="5381" width="0.5" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="211.63" y="5391.5" ></text>
</g>
<g >
<title>`IRC-GEP^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="361.0" y="5349" width="1.0" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="363.99" y="5359.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PROGN-AST-CONSTRUCTOR^KEYWORD^FN^^ (2 samples, 0.04%)</title><rect x="25.2" y="4037" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="28.16" y="4047.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2805" width="1.8" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="60.57" y="2815.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (2 samples, 0.04%)</title><rect x="182.0" y="5461" width="0.5" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="184.97" y="5471.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="397.6" y="5317" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="400.58" y="5327.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (3 samples, 0.07%)</title><rect x="736.0" y="5237" width="0.8" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="739.03" y="5247.5" ></text>
</g>
<g >
<title>`VARIABLE-IGNORE^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="73.0" y="4661" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="75.99" y="4671.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="74.6" y="3717" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="77.55" y="3727.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="320.2" y="5221" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="323.22" y="5231.5" ></text>
</g>
<g >
<title>`llvm::getConstantStringInfo(llvm::Value const*, llvm::StringRef (1 samples, 0.02%)</title><rect x="616.6" y="5605" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="619.60" y="5615.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getEdgeValue(llvm::Va (7 samples, 0.16%)</title><rect x="434.7" y="5589" width="1.8" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="437.70" y="5599.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4725" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="736.42" y="4735.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="63.8" y="1829" width="0.3" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="66.84" y="1839.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (2 samples, 0.04%)</title><rect x="23.1" y="3797" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="26.07" y="3807.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="62.0" y="2853" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="65.01" y="2863.5" ></text>
</g>
<g >
<title>`GC_is_marked (1 samples, 0.02%)</title><rect x="744.4" y="5621" width="0.3" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="747.40" y="5631.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout con (1 samples, 0.02%)</title><rect x="673.6" y="5589" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="676.57" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-TLL-LIST^CC-HIR-TO-MIR^FN^^ (2 samples, 0.04%)</title><rect x="186.2" y="5573" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="189.15" y="5583.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.04%)</title><rect x="284.2" y="5605" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="287.16" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4597" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="141.85" y="4607.5" ></text>
</g>
<g >
<title>`MAKE-LET-INIT-ASTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="78.0" y="4613" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="80.95" y="4623.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4101" width="0.3" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="736.42" y="4111.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T CLASP))^METHOD^^ (1 samples, 0.02%)</title><rect x="16.3" y="1893" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="19.27" y="1903.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="482.5" y="5589" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="485.52" y="5599.5" ></text>
</g>
<g >
<title>`GC_mark_from (1 samples, 0.02%)</title><rect x="182.2" y="5317" width="0.3" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="185.23" y="5327.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.04%)</title><rect x="171.8" y="5301" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="174.78" y="5311.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2549" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="65.01" y="2559.5" ></text>
</g>
<g >
<title>`llvm::Argument::hasNonNullAttr() const (1 samples, 0.02%)</title><rect x="489.3" y="5573" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="492.32" y="5583.5" ></text>
</g>
<g >
<title>`llvm::simplifyLoop(llvm::Loop*, llvm::DominatorTree*, llvm::Loo (1 samples, 0.02%)</title><rect x="449.1" y="5653" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="452.07" y="5663.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.02%)</title><rect x="22.3" y="2613" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="25.28" y="2623.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::getStructValueState(llvm::Va (1 samples, 0.02%)</title><rect x="583.4" y="5621" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="586.40" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (13 samples, 0.29%)</title><rect x="54.2" y="2725" width="3.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="57.17" y="2735.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="466.8" y="5541" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="469.84" y="5551.5" ></text>
</g>
<g >
<title>`GC_mark_some (3 samples, 0.07%)</title><rect x="47.4" y="4869" width="0.8" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="50.37" y="4879.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4405" width="23.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="52.46" y="4415.5" >`..</text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="53.1" y="3205" width="1.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="56.12" y="3215.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="66.2" y="1413" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="69.19" y="1423.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (2 samples, 0.04%)</title><rect x="64.4" y="709" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="67.36" y="719.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="572.7" y="5461" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="575.69" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.11%)</title><rect x="137.3" y="4949" width="1.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="140.28" y="4959.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::getModRefInfo(llvm::ImmutableCallSite, l (1 samples, 0.02%)</title><rect x="662.6" y="5525" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="665.59" y="5535.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.02%)</title><rect x="550.2" y="5333" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="553.21" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="117" width="1.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="58.48" y="127.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="437" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="65.01" y="447.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1205" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="69.19" y="1215.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="364.7" y="5269" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="367.65" y="5279.5" ></text>
</g>
<g >
<title>`GC_allocobj (4 samples, 0.09%)</title><rect x="299.3" y="5317" width="1.1" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="302.32" y="5327.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="3093" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="65.27" y="3103.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5189" width="1.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="14.31" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="58.3" y="165" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="61.35" y="175.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="309.8" y="5349" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="312.77" y="5359.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (7 samples, 0.16%)</title><rect x="234.2" y="5493" width="1.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="237.24" y="5503.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="1013" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="61.09" y="1023.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getValueOnEdge(llvm:: (4 samples, 0.09%)</title><rect x="447.2" y="5589" width="1.1" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="450.24" y="5599.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="26.7" y="4517" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="29.73" y="4527.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="30.9" y="4261" width="0.3" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="33.91" y="4271.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="89.2" y="4373" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="92.19" y="4383.5" ></text>
</g>
<g >
<title>`SAFE-CANONICAL-TYPE^CORE^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2405" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="17.70" y="2415.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Pass*, llvm::Analy (1 samples, 0.02%)</title><rect x="692.1" y="5637" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="695.13" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2229" width="1.8" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="60.57" y="2239.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LoopSimplify::runOnFunction(llvm::Functi (1 samples, 0.02%)</title><rect x="449.1" y="5669" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="452.07" y="5679.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.2" y="3221" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="64.22" y="3231.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="773" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="65.53" y="783.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="70.9" y="2933" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="73.89" y="2943.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (2 samples, 0.04%)</title><rect x="500.3" y="5589" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="503.29" y="5599.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::Function_O&gt; gctools::GCObjectAppropri (1 samples, 0.02%)</title><rect x="331.2" y="4997" width="0.3" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="334.20" y="5007.5" ></text>
</g>
<g >
<title>`CALCULATE-FASTGF-DISPATCH-FUNCTION^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5541" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="736.42" y="5551.5" ></text>
</g>
<g >
<title>`free_tiny (2 samples, 0.04%)</title><rect x="738.6" y="5701" width="0.6" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="741.65" y="5711.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="53.6" y="2757" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="56.65" y="2767.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="60.4" y="2693" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="63.44" y="2703.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="52.6" y="3749" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="55.60" y="3759.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;std::__1::__tree_iterator&lt;std::__1::__value_type (1 samples, 0.02%)</title><rect x="734.2" y="5269" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="737.20" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="65.1" y="2325" width="0.3" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="68.15" y="2335.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (2 samples, 0.04%)</title><rect x="64.4" y="757" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="67.36" y="767.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="121.1" y="5541" width="0.2" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="124.07" y="5551.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4053" width="9.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="17.18" y="4063.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="169.4" y="4933" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="172.42" y="4943.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.4" y="581" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="67.36" y="591.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="71.4" y="3813" width="0.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="74.42" y="3823.5" ></text>
</g>
<g >
<title>`instructionClobbersQuery(llvm::MemoryDef*, llvm::MemoryUseOrDef (9 samples, 0.20%)</title><rect x="526.4" y="5605" width="2.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="529.43" y="5615.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ModuleBitcodeWriter::writeDISubprogram(l (1 samples, 0.02%)</title><rect x="723.5" y="5637" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="726.49" y="5647.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="72.5" y="4821" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="75.46" y="4831.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.02%)</title><rect x="260.6" y="5509" width="0.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="263.64" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (9 samples, 0.20%)</title><rect x="78.2" y="4421" width="2.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="81.21" y="4431.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="78.5" y="4133" width="2.1" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="81.47" y="4143.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (3 samples, 0.07%)</title><rect x="50.8" y="2821" width="0.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="53.77" y="2831.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="24.1" y="3781" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="27.11" y="3791.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (1 samples, 0.02%)</title><rect x="59.4" y="2981" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="62.40" y="2991.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm (1 samples, 0.02%)</title><rect x="726.9" y="5621" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="729.89" y="5631.5" ></text>
</g>
<g >
<title>0x10d596094 (8 samples, 0.18%)</title><rect x="63.3" y="3109" width="2.1" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="66.32" y="3119.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="63.1" y="3093" width="0.2" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="66.05" y="3103.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (233 samples, 5.16%)</title><rect x="36.4" y="5269" width="60.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="39.40" y="5279.5" >`CONVE..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (8 samples, 0.18%)</title><rect x="78.5" y="4053" width="2.1" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="81.47" y="4063.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="233.7" y="5573" width="0.3" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="236.72" y="5583.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="356.8" y="5301" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="359.81" y="5311.5" ></text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="5733" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="13.00" y="5743.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="68.5" y="2581" width="1.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="71.54" y="2591.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.02%)</title><rect x="367.5" y="5397" width="0.3" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="370.53" y="5407.5" ></text>
</g>
<g >
<title>`core::Lisp_O::run() (2,981 samples, 66.02%)</title><rect x="10.0" y="6325" width="779.1" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="13.00" y="6335.5" >`core::Lisp_O::run()</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="145.1" y="5157" width="0.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="148.12" y="5167.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="67.0" y="1525" width="0.2" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="69.97" y="1535.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="66.2" y="2149" width="1.8" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="69.19" y="2159.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="21.2" y="1877" width="0.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="24.24" y="1887.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="288.9" y="5477" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="291.86" y="5487.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="426.6" y="5573" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="429.59" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.5" y="2133" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="65.53" y="2143.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.02%)</title><rect x="251.5" y="5573" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="254.49" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4277" width="1.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="26.59" y="4287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4213" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="138.45" y="4223.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (4 samples, 0.09%)</title><rect x="559.1" y="5461" width="1.0" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="562.10" y="5471.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1381" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="65.27" y="1391.5" ></text>
</g>
<g >
<title>`IRC-FUNCTION-CREATE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="734.2" y="5445" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="737.20" y="5455.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::isCompare() const (1 samples, 0.02%)</title><rect x="478.9" y="5589" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="481.86" y="5599.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (540 samples, 11.96%)</title><rect x="280.2" y="5653" width="141.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="283.24" y="5663.5" >`TRANSLATE^CLASP-..</text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.5" y="2373" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="65.53" y="2383.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (1 samples, 0.02%)</title><rect x="260.6" y="5525" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="263.64" y="5535.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (5 samples, 0.11%)</title><rect x="68.5" y="2469" width="1.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="71.54" y="2479.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (20 samples, 0.44%)</title><rect x="54.2" y="3237" width="5.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="57.17" y="3247.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="64.1" y="1141" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="67.10" y="1151.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="395.5" y="5301" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="398.49" y="5311.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="332.5" y="5077" width="0.3" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="335.51" y="5087.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (2 samples, 0.04%)</title><rect x="399.7" y="5333" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="402.67" y="5343.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (2 samples, 0.04%)</title><rect x="622.9" y="5573" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="625.87" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (8 samples, 0.18%)</title><rect x="174.4" y="5461" width="2.1" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="177.39" y="5471.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4789" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="736.42" y="4799.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1493" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="20.58" y="1503.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="423.5" y="5557" width="0.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="426.46" y="5567.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (3 samples, 0.07%)</title><rect x="36.7" y="4725" width="0.7" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="39.66" y="4735.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (70 samples, 1.55%)</title><rect x="52.9" y="3509" width="18.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="55.86" y="3519.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="64.4" y="1221" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="67.36" y="1231.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::sm (1 samples, 0.02%)</title><rect x="184.8" y="5541" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="187.84" y="5551.5" ></text>
</g>
<g >
<title>`llvm::Value::getName() const (1 samples, 0.02%)</title><rect x="566.9" y="5429" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="569.94" y="5439.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.4" y="2629" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="56.38" y="2639.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="337.5" y="5253" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="340.47" y="5263.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="385.8" y="5349" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="388.82" y="5359.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.0" y="2597" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="63.96" y="2607.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="473.1" y="5589" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="476.11" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4421" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="137.66" y="4431.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="134.4" y="4597" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="137.40" y="4607.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="527.0" y="5477" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="529.95" y="5487.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="4645" width="1.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="14.31" y="4655.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2597" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="65.27" y="2607.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4629" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="136.62" y="4639.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.02%)</title><rect x="22.5" y="2789" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="25.54" y="2799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4229" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="137.40" y="4239.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="5045" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="736.42" y="5055.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="24.6" y="4773" width="2.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="27.64" y="4783.5" ></text>
</g>
<g >
<title>`simplifyICmpWithConstant(llvm::CmpInst::Predicate, llvm::Value* (2 samples, 0.04%)</title><rect x="442.0" y="5605" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="445.01" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4581" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="140.28" y="4591.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'TAGBODY) T T T)) (7 samples, 0.16%)</title><rect x="57.6" y="1893" width="1.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="60.57" y="1903.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4005" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="139.23" y="4015.5" ></text>
</g>
<g >
<title>`llvm::DemandedBits::performAnalysis() (3 samples, 0.07%)</title><rect x="450.4" y="5637" width="0.8" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="453.38" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (88 samples, 1.95%)</title><rect x="49.5" y="4549" width="23.0" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="52.46" y="4559.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4197" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="139.23" y="4207.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="732.9" y="5557" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="735.90" y="5567.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="424.5" y="5701" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="427.50" y="5711.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.02%)</title><rect x="349.2" y="5205" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="352.23" y="5215.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4453" width="23.0" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="52.46" y="4463.5" >`..</text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="4693" width="1.1" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="14.31" y="4703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.5" y="4469" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="134.53" y="4479.5" ></text>
</g>
<g >
<title>`llvm::CFLAndersAAWrapperPass* llvm::Pass::getAnalysisIfAvailabl (1 samples, 0.02%)</title><rect x="603.8" y="5669" width="0.3" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="606.79" y="5679.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="65.9" y="1749" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="68.93" y="1759.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="52.6" y="3781" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="55.60" y="3791.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::recordAvailableAnalysis(llvm::Pass*) (2 samples, 0.04%)</title><rect x="532.2" y="5669" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="535.18" y="5679.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="318.9" y="5285" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="321.92" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="63.3" y="2645" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="66.32" y="2655.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (13 samples, 0.29%)</title><rect x="54.2" y="2149" width="3.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="57.17" y="2159.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="64.1" y="1525" width="1.0" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="67.10" y="1535.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solveBlockValueImpl(l (7 samples, 0.16%)</title><rect x="431.8" y="5589" width="1.9" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="434.82" y="5599.5" ></text>
</g>
<g >
<title>`_platform_memcmp (1 samples, 0.02%)</title><rect x="485.4" y="5509" width="0.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="488.40" y="5519.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4165" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="736.42" y="4175.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="334.3" y="5061" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="337.34" y="5071.5" ></text>
</g>
<g >
<title>`%INTRINSIC-CALL^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="351.3" y="5253" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="354.32" y="5263.5" ></text>
</g>
<g >
<title>`IRC-CREATE-INVOKE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="395.2" y="5301" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="398.23" y="5311.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="333.6" y="5029" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="336.55" y="5039.5" ></text>
</g>
<g >
<title>`HASH-EQL^CORE^FN^^ (1 samples, 0.02%)</title><rect x="75.1" y="3701" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="78.08" y="3711.5" ></text>
</g>
<g >
<title>`llvm::TrackingMDRef::operator=(llvm::TrackingMDRef&amp;&amp;) (1 samples, 0.02%)</title><rect x="309.5" y="5349" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="312.51" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (83 samples, 1.84%)</title><rect x="14.2" y="5077" width="21.7" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="17.18" y="5087.5" >`..</text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="196.3" y="5589" width="0.3" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="199.34" y="5599.5" ></text>
</g>
<g >
<title>`core::contagen_add(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (1 samples, 0.02%)</title><rect x="739.4" y="5701" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="742.43" y="5711.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (14 samples, 0.31%)</title><rect x="73.8" y="4501" width="3.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="76.77" y="4511.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2581" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="65.53" y="2591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="3941" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="135.31" y="3951.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="59.4" y="2885" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="62.40" y="2895.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (1 samples, 0.02%)</title><rect x="97.3" y="4389" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="100.29" y="4399.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="36.1" y="5461" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="39.14" y="5471.5" ></text>
</g>
<g >
<title>`DBG-CLEAR-IRBUILDER-SOURCE-LOCATION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="357.9" y="5381" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="360.86" y="5391.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::LookupBucketFor(llvm::StringRef) (1 samples, 0.02%)</title><rect x="633.8" y="5493" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="636.84" y="5503.5" ></text>
</g>
<g >
<title>`IRC-LOAD^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="407.0" y="5461" width="1.0" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="409.99" y="5471.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="63.3" y="2549" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="66.32" y="2559.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;std::__1::unique_ptr&lt;llvm::AAResults:: (1 samples, 0.02%)</title><rect x="456.6" y="5621" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="459.65" y="5631.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="17.3" y="1909" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="20.32" y="1919.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (3 samples, 0.07%)</title><rect x="260.1" y="5589" width="0.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="263.11" y="5599.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (1 samples, 0.02%)</title><rect x="419.3" y="5541" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="422.28" y="5551.5" ></text>
</g>
<g >
<title>`SETUP-CALLING-CONVENTION^COMPILER^FN^^ (28 samples, 0.62%)</title><rect x="358.1" y="5397" width="7.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="361.12" y="5407.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (42 samples, 0.93%)</title><rect x="721.4" y="5781" width="11.0" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="724.40" y="5791.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (1 samples, 0.02%)</title><rect x="25.4" y="3797" width="0.3" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="28.42" y="3807.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="528.3" y="5509" width="0.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="531.26" y="5519.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="34.3" y="4501" width="0.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="37.31" y="4511.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="25.7" y="4213" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="28.68" y="4223.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (5 samples, 0.11%)</title><rect x="14.2" y="3493" width="1.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="17.18" y="3503.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (2 samples, 0.04%)</title><rect x="373.8" y="5237" width="0.5" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="376.80" y="5247.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.1" y="2613" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="73.11" y="2623.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="22.0" y="2581" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="25.02" y="2591.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (25 samples, 0.55%)</title><rect x="16.3" y="3061" width="6.5" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="19.27" y="3071.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="337.5" y="5221" width="0.2" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="340.47" y="5231.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="997" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="61.09" y="1007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.2" y="3669" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="132.18" y="3679.5" ></text>
</g>
<g >
<title>`core::SimpleCharacterString_O::equal(gctools::smart_ptr&lt;core::T (1 samples, 0.02%)</title><rect x="395.5" y="5253" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="398.49" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="57.6" y="1013" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="60.57" y="1023.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatt (1 samples, 0.02%)</title><rect x="436.3" y="5557" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="439.26" y="5567.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="162.1" y="5029" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="165.11" y="5039.5" ></text>
</g>
<g >
<title>`OPTIMIZED-OPTIMIZE-INFO-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="44.5" y="4533" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="47.50" y="4543.5" ></text>
</g>
<g >
<title>`UNSAFE-FUNCALL1^CORE^FN^^ (1 samples, 0.02%)</title><rect x="49.2" y="5029" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="52.20" y="5039.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="351.1" y="5237" width="0.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="354.06" y="5247.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="501.9" y="5493" width="0.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="504.86" y="5503.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="70.4" y="2581" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="73.37" y="2591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (85 samples, 1.88%)</title><rect x="152.2" y="5461" width="22.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="155.17" y="5471.5" >`..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="1925" width="1.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="57.17" y="1935.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="608.8" y="5557" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="611.76" y="5567.5" ></text>
</g>
<g >
<title>`llvmo::StructType_O::get(gctools::smart_ptr&lt;llvmo::LLVMContext_ (1 samples, 0.02%)</title><rect x="373.5" y="5381" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="376.54" y="5391.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="194.5" y="5477" width="0.3" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="197.51" y="5487.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="114.5" y="5589" width="0.3" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="117.54" y="5599.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="107.2" y="5605" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="110.22" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="168.6" y="4949" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="171.64" y="4959.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="1205" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="68.93" y="1215.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="406.5" y="5285" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="409.47" y="5295.5" ></text>
</g>
<g >
<title>`unsigned int llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorT (1 samples, 0.02%)</title><rect x="562.8" y="5477" width="0.2" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="565.76" y="5487.5" ></text>
</g>
<g >
<title>`small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="563.0" y="5397" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="566.02" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (13 samples, 0.29%)</title><rect x="54.2" y="2309" width="3.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="57.17" y="2319.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.7" y="3093" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="64.75" y="3103.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::hasAttrSomewhere(llvm::Attribute::AttrKind (1 samples, 0.02%)</title><rect x="567.7" y="5317" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="570.72" y="5327.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (2 samples, 0.04%)</title><rect x="27.5" y="4357" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="30.51" y="4367.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::tryOptimizeCall(llvm::CallInst*) (4 samples, 0.09%)</title><rect x="637.8" y="5589" width="1.0" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="640.77" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="2469" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="64.75" y="2479.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.02%)</title><rect x="662.6" y="5477" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="665.59" y="5487.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::alias(llvm::MemoryLocation const&amp;, llvm: (1 samples, 0.02%)</title><rect x="449.6" y="5445" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="452.59" y="5455.5" ></text>
</g>
<g >
<title>`wrapped_core__backquote_append_VaList_sp (1 samples, 0.02%)</title><rect x="129.4" y="3861" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="132.44" y="3871.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="572.7" y="5429" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="575.69" y="5439.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="773" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="61.09" y="783.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="78.5" y="3845" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="81.47" y="3855.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="456.6" y="5589" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="459.65" y="5599.5" ></text>
</g>
<g >
<title>`MAKE-ENTER-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="155.3" y="5125" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="158.31" y="5135.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.04%)</title><rect x="25.2" y="3941" width="0.5" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="28.16" y="3951.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="78.2" y="4325" width="2.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="81.21" y="4335.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="1637" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="73.63" y="1647.5" ></text>
</g>
<g >
<title>`PROCESS-LAMBDA-LIST^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4949" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="100.29" y="4959.5" ></text>
</g>
<g >
<title>`llvm::UnaryInstruction::UnaryInstruction(llvm::Type*, unsigned  (1 samples, 0.02%)</title><rect x="333.6" y="4917" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="336.55" y="4927.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.02%)</title><rect x="531.9" y="5653" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="534.92" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.8" y="5253" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="180.79" y="5263.5" ></text>
</g>
<g >
<title>`llvm::AAResults::pointsToConstantMemory(llvm::MemoryLocation co (3 samples, 0.07%)</title><rect x="528.8" y="5589" width="0.8" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="531.78" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((LEXICAL-VARIABLE-INFO T T T (1 samples, 0.02%)</title><rect x="64.6" y="277" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="67.62" y="287.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4757" width="9.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="17.18" y="4767.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="3077" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="64.22" y="3087.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.04%)</title><rect x="26.5" y="4613" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="29.47" y="4623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4725" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="137.66" y="4735.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="107.0" y="5525" width="0.2" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="109.96" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (3 samples, 0.07%)</title><rect x="65.4" y="2421" width="0.8" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="68.41" y="2431.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (2 samples, 0.04%)</title><rect x="146.2" y="4917" width="0.5" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="149.16" y="4927.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="1701" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="65.01" y="1711.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5557" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="713.94" y="5567.5" ></text>
</g>
<g >
<title>`llvm::ReplaceableMetadataImpl::getOrCreate(llvm::Metadata&amp;) (2 samples, 0.04%)</title><rect x="480.7" y="5589" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="483.69" y="5599.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="24.6" y="3909" width="0.6" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="27.64" y="3919.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2933" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="64.75" y="2943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="151.1" y="5285" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="154.13" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (60 samples, 1.33%)</title><rect x="128.1" y="5269" width="15.7" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="131.13" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (7 samples, 0.16%)</title><rect x="59.9" y="3301" width="1.8" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="62.92" y="3311.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4581" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="736.42" y="4591.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (2 samples, 0.04%)</title><rect x="24.6" y="3509" width="0.6" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="27.64" y="3519.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2581" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="66.05" y="2591.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (5 samples, 0.11%)</title><rect x="46.9" y="4981" width="1.3" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="49.85" y="4991.5" ></text>
</g>
<g >
<title>`core::core__backquote_append(gctools::smart_ptr&lt;core::Vaslist&gt;) (1 samples, 0.02%)</title><rect x="129.4" y="3845" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="132.44" y="3855.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="12.4" y="4229" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="15.35" y="4239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4501" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="138.71" y="4511.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.04%)</title><rect x="189.0" y="5493" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="192.03" y="5503.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="694.5" y="5573" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="697.48" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4373" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="137.93" y="4383.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="1429" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="60.57" y="1439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4725" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="141.32" y="4735.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (4 samples, 0.09%)</title><rect x="20.2" y="1941" width="1.0" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="23.19" y="1951.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="150.1" y="4997" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="153.08" y="5007.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="410.4" y="5445" width="0.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="413.39" y="5455.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="733.7" y="5013" width="0.2" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="736.68" y="5023.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="3189" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="66.05" y="3199.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DIBasicType*, llvm (1 samples, 0.02%)</title><rect x="366.0" y="5269" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="368.96" y="5279.5" ></text>
</g>
<g >
<title>`CHILDREN^CLEAVIR-AST^((FIXNUM-ADD-AST))^METHOD^^ (1 samples, 0.02%)</title><rect x="82.1" y="4517" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="85.13" y="4527.5" ></text>
</g>
<g >
<title>`CONVERT-GLOBAL-FUNCTION^CLEAVIR-GENERATE-AST^((T T CLASP))^METH (1 samples, 0.02%)</title><rect x="39.8" y="4053" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="42.79" y="4063.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.8" y="2757" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="65.79" y="2767.5" ></text>
</g>
<g >
<title>`IRC-CCLASP-FUNCTION-CREATE^COMPILER^FN^^ (6 samples, 0.13%)</title><rect x="419.3" y="5605" width="1.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="422.28" y="5615.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="535.3" y="5621" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="538.32" y="5631.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-I64^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="346.6" y="5269" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="349.62" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="58.3" y="261" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="61.35" y="271.5" ></text>
</g>
<g >
<title>`GC_mark_local (2 samples, 0.04%)</title><rect x="373.8" y="5221" width="0.5" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="376.80" y="5231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (46 samples, 1.02%)</title><rect x="159.5" y="5205" width="12.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="162.49" y="5215.5" ></text>
</g>
<g >
<title>`llvm::MemorySSA::CachingWalker::getClobberingMemoryAccess(llvm: (2 samples, 0.04%)</title><rect x="529.6" y="5573" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="532.57" y="5583.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="421.9" y="5621" width="0.3" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="424.89" y="5631.5" ></text>
</g>
<g >
<title>`llvmo::Pass_O::externalObject() const (1 samples, 0.02%)</title><rect x="191.1" y="5445" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="194.12" y="5455.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="96.2" y="4709" width="0.3" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="99.25" y="4719.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="333.6" y="4949" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="336.55" y="4959.5" ></text>
</g>
<g >
<title>`SAVE-MULTIPLE-VALUE-0^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="324.4" y="5269" width="0.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="327.41" y="5279.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.0" y="2517" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="63.96" y="2527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4389" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="139.23" y="4399.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="837" width="1.1" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="59.52" y="847.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (35 samples, 0.78%)</title><rect x="36.4" y="5077" width="9.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="39.40" y="5087.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="2965" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="64.22" y="2975.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (1 samples, 0.02%)</title><rect x="376.7" y="5413" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="379.68" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4197" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="132.70" y="4207.5" ></text>
</g>
<g >
<title>`llvm::InstructionCombiningPass::runOnFunction(llvm::Function&amp;) (294 samples, 6.51%)</title><rect x="607.2" y="5669" width="76.8" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="610.19" y="5679.5" >`llvm::I..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="63.1" y="3061" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="66.05" y="3071.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;std::__1::__value_type&lt;llvm::Function const*,  (1 samples, 0.02%)</title><rect x="700.8" y="5557" width="0.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="703.75" y="5567.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (6 samples, 0.13%)</title><rect x="57.8" y="1509" width="1.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="60.83" y="1519.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (1 samples, 0.02%)</title><rect x="390.3" y="5349" width="0.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="393.27" y="5359.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomT (2 samples, 0.04%)</title><rect x="590.5" y="5541" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="593.46" y="5551.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldTerminator(llvm::BasicBlock*, bool, llvm::Tar (2 samples, 0.04%)</title><rect x="696.8" y="5605" width="0.6" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="699.83" y="5615.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.02%)</title><rect x="684.3" y="5605" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="687.29" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.0" y="4661" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="138.97" y="4671.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="2581" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="65.27" y="2591.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::tryOptimizeCall(llvm::CallInst*) (11 samples, 0.24%)</title><rect x="484.6" y="5589" width="2.9" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="487.61" y="5599.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.3" y="5269" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="100.29" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (2 samples, 0.04%)</title><rect x="23.1" y="3973" width="0.5" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="26.07" y="3983.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4117" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="137.14" y="4127.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1109" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="65.27" y="1119.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (1 samples, 0.02%)</title><rect x="403.6" y="5205" width="0.3" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="406.59" y="5215.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="136.0" y="4581" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="138.97" y="4591.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::Instruction&gt;, llvm:: (1 samples, 0.02%)</title><rect x="665.7" y="5589" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="668.73" y="5599.5" ></text>
</g>
<g >
<title>`GET-OR-DECLARE-FUNCTION-OR-ERROR^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="365.7" y="5397" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="368.70" y="5407.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="334.6" y="5029" width="0.3" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="337.60" y="5039.5" ></text>
</g>
<g >
<title>`LOAD-RETURN-VALUE^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="322.6" y="5269" width="0.5" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="325.58" y="5279.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="38.0" y="4533" width="0.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="40.96" y="4543.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="78.0" y="4501" width="0.2" height="15.0" fill="rgb(215,73,73)" rx="2" ry="2" />
<text  x="80.95" y="4511.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="343.2" y="5221" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="346.22" y="5231.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpAndShift(llvm::ICmpInst&amp;, llvm::Bin (1 samples, 0.02%)</title><rect x="656.6" y="5557" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="659.58" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5285" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="180.26" y="5295.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="531.1" y="5525" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="534.13" y="5535.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.04%)</title><rect x="58.6" y="997" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="61.61" y="1007.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (3 samples, 0.07%)</title><rect x="211.5" y="5557" width="0.8" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="214.50" y="5567.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (4 samples, 0.09%)</title><rect x="238.4" y="5509" width="1.1" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="241.42" y="5519.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="15.2" y="3445" width="0.3" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="18.23" y="3455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4613" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="140.28" y="4623.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (4 samples, 0.09%)</title><rect x="68.8" y="2453" width="1.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="71.80" y="2463.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.04%)</title><rect x="204.7" y="5589" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="207.71" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.6" y="517" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="67.62" y="527.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="3493" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="100.29" y="3503.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (2 samples, 0.04%)</title><rect x="423.7" y="5541" width="0.5" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="426.72" y="5551.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="419.5" y="5573" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="422.54" y="5583.5" ></text>
</g>
<g >
<title>`SLOT-DEFINITION-INITARGS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="93.4" y="4453" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="96.37" y="4463.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (2 samples, 0.04%)</title><rect x="68.8" y="2325" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="71.80" y="2335.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (30 samples, 0.66%)</title><rect x="37.4" y="4837" width="7.9" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="40.44" y="4847.5" ></text>
</g>
<g >
<title>`COMPILE-FORM^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="124.2" y="5557" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="127.21" y="5567.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1189" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="69.19" y="1199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4693" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="139.76" y="4703.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="208.9" y="5285" width="0.2" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="211.89" y="5295.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="235.5" y="5445" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="238.55" y="5455.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="268.2" y="5525" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="271.21" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4533" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="100.29" y="4543.5" ></text>
</g>
<g >
<title>`GENERATE-MATCH-UNWIND^CLASP-CLEAVIR^FN^^ (4 samples, 0.09%)</title><rect x="395.2" y="5381" width="1.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="398.23" y="5391.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getContext() const (1 samples, 0.02%)</title><rect x="320.2" y="5173" width="0.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="323.22" y="5183.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::BasicBlock*&gt;::insert(llvm::BasicBlo (1 samples, 0.02%)</title><rect x="713.6" y="5621" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="716.56" y="5631.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (4 samples, 0.09%)</title><rect x="243.4" y="5573" width="1.0" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="246.39" y="5583.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (2 samples, 0.04%)</title><rect x="196.6" y="5605" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="199.60" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((LEXICAL-VARIABLE-INFO T T T (1 samples, 0.02%)</title><rect x="62.3" y="1221" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="65.27" y="1231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4149" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="135.31" y="4159.5" ></text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.2" y="5509" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="738.25" y="5519.5" ></text>
</g>
<g >
<title>0x10d596094 (109 samples, 2.41%)</title><rect x="49.5" y="4965" width="28.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="52.46" y="4975.5" >0x..</text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((AST T))^MET (2 samples, 0.04%)</title><rect x="29.1" y="4389" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="32.08" y="4399.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CastGEPIndices(llvm::Type*, llvm::ArrayR (1 samples, 0.02%)</title><rect x="443.1" y="5573" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="446.06" y="5583.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedUseBits(llvm::Value*, llvm: (1 samples, 0.02%)</title><rect x="499.2" y="5589" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="502.25" y="5599.5" ></text>
</g>
<g >
<title>`PROCESS-LAMBDA-LIST^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="50.5" y="3205" width="1.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="53.51" y="3215.5" ></text>
</g>
<g >
<title>`IRC-CREATE-CALL^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="411.7" y="5397" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="414.70" y="5407.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="39.8" y="4213" width="1.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="42.79" y="4223.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1397" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="65.01" y="1407.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="3109" width="1.8" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="60.57" y="3119.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.8" y="5573" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="100.81" y="5583.5" ></text>
</g>
<g >
<title>`GC_allocobj (4 samples, 0.09%)</title><rect x="735.8" y="5317" width="1.0" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="738.77" y="5327.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="404.9" y="5365" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="407.90" y="5375.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="14.2" y="3749" width="1.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="17.18" y="3759.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^ (1 samples, 0.02%)</title><rect x="62.5" y="661" width="0.3" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="65.53" y="671.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="593.1" y="5541" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="596.07" y="5551.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, ll (1 samples, 0.02%)</title><rect x="657.4" y="5525" width="0.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="660.37" y="5535.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="163.4" y="5045" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="166.41" y="5055.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_short(char const*, unsigned long, u (2 samples, 0.04%)</title><rect x="300.9" y="5301" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="303.88" y="5311.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1589" width="1.0" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="58.48" y="1599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="4613" width="0.2" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="100.55" y="4623.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="294.1" y="5381" width="0.2" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="297.09" y="5391.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="523.0" y="5365" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="526.03" y="5375.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4117" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="736.42" y="4127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4501" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="135.31" y="4511.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="314.5" y="5317" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="317.47" y="5327.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getPointerDependencyFrom(llvm::M (1 samples, 0.02%)</title><rect x="451.9" y="5637" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="454.94" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="4149" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="131.65" y="4159.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (2 samples, 0.04%)</title><rect x="185.1" y="5525" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="188.11" y="5535.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="24.6" y="4517" width="1.6" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="27.64" y="4527.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="333.8" y="5029" width="0.3" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="336.81" y="5039.5" ></text>
</g>
<g >
<title>`GC_mark_from (4 samples, 0.09%)</title><rect x="119.0" y="5365" width="1.0" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="121.98" y="5375.5" ></text>
</g>
<g >
<title>`llvm::LiveVariables::runOnInstr(llvm::MachineInstr&amp;, llvm::Smal (1 samples, 0.02%)</title><rect x="732.9" y="5317" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="735.90" y="5327.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="51.6" y="3541" width="0.2" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="54.55" y="3551.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock const*, std: (1 samples, 0.02%)</title><rect x="534.5" y="5589" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="537.53" y="5599.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="15.5" y="3445" width="0.5" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="18.49" y="3455.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-FUNCTION^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="133" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="61.35" y="143.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (82 samples, 1.82%)</title><rect x="14.2" y="5013" width="21.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="17.18" y="5023.5" >`..</text>
</g>
<g >
<title>`GET-OR-DECLARE-FUNCTION-OR-ERROR^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="734.2" y="5477" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="737.20" y="5487.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4853" width="23.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="52.46" y="4863.5" >`..</text>
</g>
<g >
<title>`void llvm::BitstreamWriter::EmitRecord&lt;llvm::SmallVectorImpl&lt;un (1 samples, 0.02%)</title><rect x="726.6" y="5653" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="729.62" y="5663.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.02%)</title><rect x="552.6" y="5285" width="0.2" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="555.56" y="5295.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.2" y="3093" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="64.22" y="3103.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (1 samples, 0.02%)</title><rect x="62.5" y="901" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="65.53" y="911.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="78.7" y="3893" width="1.6" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="81.74" y="3903.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="67.5" y="1621" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="70.50" y="1631.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2,981 samples, 66.02%)</title><rect x="10.0" y="6213" width="779.1" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="13.00" y="6223.5" >`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo</text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="78.0" y="4485" width="0.2" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="80.95" y="4495.5" ></text>
</g>
<g >
<title>`sprintf (1 samples, 0.02%)</title><rect x="161.6" y="4965" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="164.58" y="4975.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (2 samples, 0.04%)</title><rect x="606.4" y="5605" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="609.40" y="5615.5" ></text>
</g>
<g >
<title>`llvm::removeUnreachableBlocks(llvm::Function&amp;, llvm::LazyValueI (2 samples, 0.04%)</title><rect x="448.5" y="5637" width="0.6" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="451.55" y="5647.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.02%)</title><rect x="186.2" y="5397" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="189.15" y="5407.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="126.3" y="5605" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="129.30" y="5615.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="409.6" y="5413" width="0.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="412.61" y="5423.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="154.0" y="5205" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="157.00" y="5215.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (2 samples, 0.04%)</title><rect x="25.2" y="3877" width="0.5" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="28.16" y="3887.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (2 samples, 0.04%)</title><rect x="24.6" y="3845" width="0.6" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="27.64" y="3855.5" ></text>
</g>
<g >
<title>`llvm::scc_iterator&lt;(anonymous namespace)::ArgumentGraph*, llvm: (1 samples, 0.02%)</title><rect x="426.6" y="5653" width="0.3" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="429.59" y="5663.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="51.0" y="2725" width="0.6" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="54.03" y="2735.5" ></text>
</g>
<g >
<title>`llvm::GEPOperator::hasAllZeroIndices() const (1 samples, 0.02%)</title><rect x="558.6" y="5445" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="561.58" y="5455.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.6" y="5317" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="100.55" y="5327.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (72 samples, 1.59%)</title><rect x="52.6" y="3893" width="18.8" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="55.60" y="3903.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Value*, std::__1::allocator&lt;llvm (1 samples, 0.02%)</title><rect x="351.1" y="5141" width="0.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="354.06" y="5151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4373" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="136.36" y="4383.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="40.6" y="4117" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="43.58" y="4127.5" ></text>
</g>
<g >
<title>`combineInstructionsOverFunction(llvm::Function&amp;, llvm::InstComb (230 samples, 5.09%)</title><rect x="462.7" y="5653" width="60.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="465.66" y="5663.5" >`combi..</text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="444.9" y="5573" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="447.89" y="5583.5" ></text>
</g>
<g >
<title>`boost::basic_format&lt;char, std::__1::char_traits&lt;char&gt;, std::__1 (1 samples, 0.02%)</title><rect x="311.9" y="5365" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="314.86" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="64.6" y="581" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="67.62" y="591.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="3333" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="100.29" y="3343.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2709" width="0.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="66.05" y="2719.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="121.6" y="5541" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="124.60" y="5551.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="12.4" y="4293" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="15.35" y="4303.5" ></text>
</g>
<g >
<title>`std::__1::basic_streambuf&lt;char, std::__1::char_traits&lt;char&gt; &gt;:: (1 samples, 0.02%)</title><rect x="383.5" y="5333" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="386.47" y="5343.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="376.2" y="5301" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="379.15" y="5311.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (6 samples, 0.13%)</title><rect x="282.6" y="5573" width="1.6" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="285.59" y="5583.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="19.7" y="1829" width="0.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="22.67" y="1839.5" ></text>
</g>
<g >
<title>`tiny_free_detach_region (1 samples, 0.02%)</title><rect x="589.7" y="5525" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="592.68" y="5535.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (6 samples, 0.13%)</title><rect x="57.8" y="1333" width="1.6" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="60.83" y="1343.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="429.5" y="5557" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="432.47" y="5567.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::MaxMin_match&lt;llvm::ICmpInst, llvm::Pat (1 samples, 0.02%)</title><rect x="495.6" y="5605" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="498.59" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="1813" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="73.63" y="1823.5" ></text>
</g>
<g >
<title>`llvm::ScopedNoAliasAAResult::alias(llvm::MemoryLocation const&amp;, (1 samples, 0.02%)</title><rect x="553.1" y="5413" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="556.09" y="5423.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="146.4" y="4853" width="0.3" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text  x="149.43" y="4863.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::CastClass_match&lt;llvm::PatternMatch::bi (1 samples, 0.02%)</title><rect x="495.3" y="5605" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="498.33" y="5615.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::addAttribute(llvm::LLVMContext&amp;, unsigned  (2 samples, 0.04%)</title><rect x="426.1" y="5637" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="429.07" y="5647.5" ></text>
</g>
<g >
<title>`llvm::LLVMContextImpl::getOptBisect() (1 samples, 0.02%)</title><rect x="430.0" y="5653" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="432.99" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2117" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="65.79" y="2127.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_combine_recursive_helper::combine(u (1 samples, 0.02%)</title><rect x="316.3" y="5157" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="319.30" y="5167.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="593.1" y="5621" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="596.07" y="5631.5" ></text>
</g>
<g >
<title>`CHECK-SPECIAL-FORM-SYNTAX^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="74.3" y="4133" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="77.29" y="4143.5" ></text>
</g>
<g >
<title>`llvm::IDFCalculator&lt;llvm::BasicBlock*, false&gt;::calculate(llvm:: (1 samples, 0.02%)</title><rect x="693.4" y="5637" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="696.43" y="5647.5" ></text>
</g>
<g >
<title>`szone_free_definite_size (1 samples, 0.02%)</title><rect x="687.2" y="5653" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="690.16" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4405" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="138.71" y="4415.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="174.4" y="5221" width="0.3" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="177.39" y="5231.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="116.4" y="5605" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="119.37" y="5615.5" ></text>
</g>
<g >
<title>`DO-PPRINT-LOGICAL-BLOCK^CORE^FN^^ (1 samples, 0.02%)</title><rect x="735.5" y="5557" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="738.51" y="5567.5" ></text>
</g>
<g >
<title>`GC_allocobj (2 samples, 0.04%)</title><rect x="373.8" y="5317" width="0.5" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="376.80" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'FUNCTION) T T T) (1 samples, 0.02%)</title><rect x="97.3" y="3909" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="100.29" y="3919.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="63.1" y="2821" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="66.05" y="2831.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="123.7" y="5493" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="126.69" y="5503.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="175.7" y="5285" width="0.3" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="178.70" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (18 samples, 0.40%)</title><rect x="147.5" y="5525" width="4.7" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="150.47" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="1429" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="67.88" y="1439.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="53.6" y="2885" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="56.65" y="2895.5" ></text>
</g>
<g >
<title>`ERROR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="735.0" y="5605" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="737.99" y="5615.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="330.9" y="5045" width="0.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="333.94" y="5055.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.02%)</title><rect x="595.7" y="5445" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="598.69" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.04%)</title><rect x="127.1" y="5509" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="130.09" y="5519.5" ></text>
</g>
<g >
<title>`%NIL^CLASP-CLEAVIR^FN^^ (3 samples, 0.07%)</title><rect x="350.0" y="5285" width="0.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="353.02" y="5295.5" ></text>
</g>
<g >
<title>`GC_mark_some (4 samples, 0.09%)</title><rect x="119.0" y="5429" width="1.0" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="121.98" y="5439.5" ></text>
</g>
<g >
<title>`wrapped_core__class_stamp_for_instances_Instance_sp (1 samples, 0.02%)</title><rect x="733.4" y="4037" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="736.42" y="4047.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="506.3" y="5365" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="509.31" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (21 samples, 0.47%)</title><rect x="152.2" y="5397" width="5.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="155.17" y="5407.5" ></text>
</g>
<g >
<title>`MAKE-TYPEQ-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="161.3" y="5013" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="164.32" y="5023.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (2 samples, 0.04%)</title><rect x="66.5" y="1605" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="69.45" y="1615.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (7 samples, 0.16%)</title><rect x="63.6" y="2565" width="1.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="66.58" y="2575.5" ></text>
</g>
<g >
<title>`llvm::Value::getName() const (1 samples, 0.02%)</title><rect x="521.7" y="5573" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="524.73" y="5583.5" ></text>
</g>
<g >
<title>`core::core__make_vector(gctools::smart_ptr&lt;core::T_O&gt;, unsigned (1 samples, 0.02%)</title><rect x="13.9" y="4997" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="16.92" y="5007.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::__1:: (1 samples, 0.02%)</title><rect x="688.7" y="5637" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="691.73" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="2053" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="73.63" y="2063.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="2709" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="62.40" y="2719.5" ></text>
</g>
<g >
<title>`llvm::getConstantDataArrayInfo(llvm::Value const*, llvm::Consta (1 samples, 0.02%)</title><rect x="595.9" y="5493" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="598.95" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (181 samples, 4.01%)</title><rect x="49.5" y="5077" width="47.3" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="52.46" y="5087.5" >`CON..</text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (1 samples, 0.02%)</title><rect x="513.4" y="5557" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="516.36" y="5567.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (4 samples, 0.09%)</title><rect x="85.5" y="4517" width="1.1" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="88.53" y="4527.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (18 samples, 0.40%)</title><rect x="17.3" y="2389" width="4.7" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="20.32" y="2399.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (6 samples, 0.13%)</title><rect x="57.8" y="1317" width="1.6" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="60.83" y="1327.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="97.3" y="3445" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="100.29" y="3455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="65.7" y="2133" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="68.67" y="2143.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (1 samples, 0.02%)</title><rect x="62.8" y="1429" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="65.79" y="1439.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="27.2" y="4869" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="30.25" y="4879.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="869" width="0.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="61.09" y="879.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="148.0" y="5461" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="150.99" y="5471.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4357" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="100.29" y="4367.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::~PMDataManager() (1 samples, 0.02%)</title><rect x="58.9" y="821" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="61.87" y="831.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (71 samples, 1.57%)</title><rect x="52.9" y="3733" width="18.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="55.86" y="3743.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_general (188 samples, 4.16%)</title><rect x="739.7" y="5685" width="49.1" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="742.69" y="5695.5" >`GC_..</text>
</g>
<g >
<title>`GC_mark_some (4 samples, 0.09%)</title><rect x="234.5" y="5381" width="1.0" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="237.50" y="5391.5" ></text>
</g>
<g >
<title>`INCF^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="96.8" y="5141" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="99.77" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="19.7" y="1877" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="22.67" y="1887.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (2 samples, 0.04%)</title><rect x="189.0" y="5525" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="192.03" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2901" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="65.27" y="2911.5" ></text>
</g>
<g >
<title>`GC_alloc_large (3 samples, 0.07%)</title><rect x="268.5" y="5461" width="0.8" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="271.48" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="3877" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="135.31" y="3887.5" ></text>
</g>
<g >
<title>0x10d596094 (8 samples, 0.18%)</title><rect x="55.5" y="1957" width="2.1" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="58.48" y="1967.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, unsigned  (2 samples, 0.04%)</title><rect x="725.1" y="5621" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="728.06" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4549" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="140.28" y="4559.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="917" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="61.35" y="927.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="432.9" y="5541" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="435.87" y="5551.5" ></text>
</g>
<g >
<title>`UNSAFE-FUNCALL1^CORE^FN^^ (1 samples, 0.02%)</title><rect x="75.1" y="3733" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="78.08" y="3743.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="737.1" y="5637" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="740.08" y="5647.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eql(core::Hash1Generator&amp;, gctools::s (1 samples, 0.02%)</title><rect x="115.6" y="5525" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="118.59" y="5535.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="315.5" y="5285" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="318.52" y="5295.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.02%)</title><rect x="449.9" y="5557" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="452.85" y="5567.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="52.3" y="3781" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="55.34" y="3791.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.1" y="2965" width="0.3" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="56.12" y="2975.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (5 samples, 0.11%)</title><rect x="549.7" y="5429" width="1.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="552.69" y="5439.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorTemplateBase&lt;llvm::DomTreeNodeBase&lt;llvm::Basic (1 samples, 0.02%)</title><rect x="684.0" y="5589" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="687.02" y="5599.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1909" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="20.58" y="1919.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (3 samples, 0.07%)</title><rect x="396.8" y="5205" width="0.8" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="399.80" y="5215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FUNCTION-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="131.3" y="4533" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="134.27" y="4543.5" ></text>
</g>
<g >
<title>`llvm::LPPassManager::runOnFunction(llvm::Function&amp;) (2 samples, 0.04%)</title><rect x="684.0" y="5669" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="687.02" y="5679.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="366.5" y="5301" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="369.48" y="5311.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="63.6" y="2549" width="1.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="66.58" y="2559.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="177.3" y="5605" width="0.7" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="180.26" y="5615.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="281.5" y="5589" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="284.54" y="5599.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::alias(llvm::MemoryLocation const&amp;, llvm: (8 samples, 0.18%)</title><rect x="551.0" y="5413" width="2.1" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="554.00" y="5423.5" ></text>
</g>
<g >
<title>0x10d596094 (13 samples, 0.29%)</title><rect x="74.0" y="4325" width="3.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="77.03" y="4335.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="55.5" y="741" width="1.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="58.48" y="751.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (1 samples, 0.02%)</title><rect x="156.6" y="5221" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="159.62" y="5231.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (2 samples, 0.04%)</title><rect x="613.7" y="5541" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="616.72" y="5551.5" ></text>
</g>
<g >
<title>`REMOVE-DUPLICATES-LIST^CORE^FN^^ (1 samples, 0.02%)</title><rect x="398.6" y="5333" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="401.63" y="5343.5" ></text>
</g>
<g >
<title>`llvm::AnalysisResolver::addAnalysisImplsPair(void const*, llvm: (1 samples, 0.02%)</title><rect x="600.7" y="5669" width="0.2" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="603.65" y="5679.5" ></text>
</g>
<g >
<title>`void boost::io::detail::put&lt;char, std::__1::char_traits&lt;char&gt;,  (2 samples, 0.04%)</title><rect x="376.2" y="5333" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="379.15" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (1 samples, 0.02%)</title><rect x="61.7" y="3157" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="64.75" y="3167.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::BasicBlock*, llvm::SmallPtrSet&lt;llvm::Ba (2 samples, 0.04%)</title><rect x="524.3" y="5605" width="0.6" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="527.34" y="5615.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="734.7" y="5493" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="737.73" y="5503.5" ></text>
</g>
<g >
<title>`gctools::multiple_values&lt;core::T_O&gt;::multiple_values() (1 samples, 0.02%)</title><rect x="420.1" y="5477" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="423.06" y="5487.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="12.4" y="4213" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="15.35" y="4223.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (26 samples, 0.58%)</title><rect x="16.3" y="3621" width="6.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="19.27" y="3631.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.04%)</title><rect x="19.1" y="1957" width="0.6" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="22.15" y="1967.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;std::__1::pair&lt;llvm::Mem (1 samples, 0.02%)</title><rect x="567.2" y="5381" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="570.20" y="5391.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::BinaryOp_match&lt;llvm::PatternMatch::bin (1 samples, 0.02%)</title><rect x="646.9" y="5605" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="649.91" y="5615.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="65.9" y="1845" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="68.93" y="1855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4677" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="141.32" y="4687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4485" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="137.14" y="4495.5" ></text>
</g>
<g >
<title>`getFoldedCast(llvm::Instruction::CastOps, llvm::Constant*, llvm (1 samples, 0.02%)</title><rect x="312.9" y="5365" width="0.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="315.91" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="2581" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="65.01" y="2591.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (34 samples, 0.75%)</title><rect x="14.2" y="3941" width="8.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="17.18" y="3951.5" ></text>
</g>
<g >
<title>`CHECK-ARGCOUNT^CLEAVIR-CODE-UTILITIES^FN^^ (1 samples, 0.02%)</title><rect x="73.5" y="4501" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="76.51" y="4511.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="1221" width="1.0" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="58.48" y="1231.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (1 samples, 0.02%)</title><rect x="654.0" y="5573" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="656.97" y="5583.5" ></text>
</g>
<g >
<title>`llvm::CallSiteBase&lt;llvm::Function, llvm::BasicBlock, llvm::Valu (2 samples, 0.04%)</title><rect x="636.7" y="5605" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="639.72" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="145.1" y="5189" width="1.6" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="148.12" y="5199.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (1 samples, 0.02%)</title><rect x="419.3" y="5525" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="422.28" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (3 samples, 0.07%)</title><rect x="168.6" y="4981" width="0.8" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="171.64" y="4991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5173" width="0.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="180.26" y="5183.5" ></text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE T (1 samples, 0.02%)</title><rect x="24.1" y="3701" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="27.11" y="3711.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4197" width="23.0" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="52.46" y="4207.5" >`..</text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="292.3" y="5413" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="295.26" y="5423.5" ></text>
</g>
<g >
<title>`isDereferenceableAndAlignedPointer(llvm::Value const*, unsigned (2 samples, 0.04%)</title><rect x="585.5" y="5557" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="588.50" y="5567.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="311.9" y="5301" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="314.86" y="5311.5" ></text>
</g>
<g >
<title>`llvm::IRBuilderBase::SetInsertPoint(llvm::Instruction*) (1 samples, 0.02%)</title><rect x="699.4" y="5605" width="0.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="702.44" y="5615.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="337.5" y="5237" width="0.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="340.47" y="5247.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.02%)</title><rect x="44.0" y="4309" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="46.98" y="4319.5" ></text>
</g>
<g >
<title>`tiny_free_scan_madvise_free (1 samples, 0.02%)</title><rect x="718.8" y="5573" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="721.78" y="5583.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="67.2" y="1845" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="70.24" y="1855.5" ></text>
</g>
<g >
<title>`llvm::GVN::addToLeaderTable(unsigned int, llvm::Value*, llvm::B (1 samples, 0.02%)</title><rect x="543.9" y="5589" width="0.3" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="546.94" y="5599.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="837" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="68.93" y="847.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((AST T))^MET (1 samples, 0.02%)</title><rect x="52.9" y="3221" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="55.86" y="3231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4453" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="135.31" y="4463.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (7 samples, 0.16%)</title><rect x="66.2" y="2213" width="1.8" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="69.19" y="2223.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="320.0" y="5285" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="322.96" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4885" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="135.31" y="4895.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="315.8" y="5333" width="1.0" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="318.78" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="174.4" y="5381" width="1.0" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="177.39" y="5391.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.0" y="2533" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="63.96" y="2543.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;std::__1::unique_ptr&lt;llvm::AAResults:: (1 samples, 0.02%)</title><rect x="455.3" y="5621" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="458.34" y="5631.5" ></text>
</g>
<g >
<title>`OUT^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="334.9" y="5109" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="337.86" y="5119.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="199.0" y="5589" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="201.96" y="5599.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.04%)</title><rect x="146.2" y="5109" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="149.16" y="5119.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION^COMPILER^FN^^ (32 samples, 0.71%)</title><rect x="298.3" y="5461" width="8.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="301.27" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4261" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="137.93" y="4271.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="399.7" y="5381" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="402.67" y="5391.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="390.0" y="5365" width="0.3" height="15.0" fill="rgb(228,92,92)" rx="2" ry="2" />
<text  x="393.00" y="5375.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;llvm::DILocalVariable*, l (1 samples, 0.02%)</title><rect x="359.7" y="5173" width="0.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="362.69" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="3893" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="139.23" y="3903.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="70.9" y="2917" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="73.89" y="2927.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="25.2" y="3845" width="0.2" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="28.16" y="3855.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (10 samples, 0.22%)</title><rect x="122.4" y="5605" width="2.6" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="125.38" y="5615.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (3 samples, 0.07%)</title><rect x="33.3" y="4325" width="0.7" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="36.26" y="4335.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (4 samples, 0.09%)</title><rect x="66.5" y="1861" width="1.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="69.45" y="1871.5" ></text>
</g>
<g >
<title>`llvm::Module::getFunction(llvm::StringRef) const (1 samples, 0.02%)</title><rect x="430.8" y="5589" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="433.78" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="63.3" y="3077" width="2.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="66.32" y="3087.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (3 samples, 0.07%)</title><rect x="85.8" y="4437" width="0.8" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="88.79" y="4447.5" ></text>
</g>
<g >
<title>`llvm::TrackingMDRef::operator=(llvm::TrackingMDRef&amp;&amp;) (4 samples, 0.09%)</title><rect x="676.2" y="5621" width="1.0" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="679.18" y="5631.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="67.2" y="1669" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="70.24" y="1679.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ModuleBitcodeWriter::writeConstants(unsi (3 samples, 0.07%)</title><rect x="721.4" y="5669" width="0.8" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="724.40" y="5679.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="286.5" y="5445" width="0.3" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="289.51" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="3909" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="131.65" y="3919.5" ></text>
</g>
<g >
<title>`_platform_memchr$VARIANT$Base (1 samples, 0.02%)</title><rect x="341.1" y="5141" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="344.13" y="5151.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="60.7" y="2949" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="63.70" y="2959.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (36 samples, 0.80%)</title><rect x="14.2" y="4645" width="9.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="17.18" y="4655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="138.6" y="4949" width="0.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="141.58" y="4959.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::get(unsigned int, llvm::Constant*, llvm::Co (1 samples, 0.02%)</title><rect x="405.9" y="5317" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="408.95" y="5327.5" ></text>
</g>
<g >
<title>`GET-DILOCATION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="320.0" y="5253" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="322.96" y="5263.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (20 samples, 0.44%)</title><rect x="16.8" y="2565" width="5.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="19.80" y="2575.5" ></text>
</g>
<g >
<title>`llvm::KnownBits::zextOrTrunc(unsigned int) (1 samples, 0.02%)</title><rect x="657.4" y="5477" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="660.37" y="5487.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::GVN::Expression, std::__1::allocator&lt;llv (1 samples, 0.02%)</title><rect x="542.1" y="5541" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="545.11" y="5551.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (2 samples, 0.04%)</title><rect x="66.5" y="1525" width="0.5" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="69.45" y="1535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (18 samples, 0.40%)</title><rect x="65.4" y="3349" width="4.7" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="68.41" y="3359.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="65.9" y="1349" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="68.93" y="1359.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.9" y="3365" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="73.89" y="3375.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="149.0" y="4917" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="152.04" y="4927.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="68.0" y="2725" width="1.8" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="71.02" y="2735.5" ></text>
</g>
<g >
<title>`__gmp_default_allocate (1 samples, 0.02%)</title><rect x="737.1" y="5717" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="740.08" y="5727.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (2 samples, 0.04%)</title><rect x="210.7" y="5349" width="0.5" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="213.72" y="5359.5" ></text>
</g>
<g >
<title>`SSABLEP^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="401.2" y="5445" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="404.24" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="129.2" y="3637" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="132.18" y="3647.5" ></text>
</g>
<g >
<title>`OPTIMIZED-FDEFINITION-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="142.0" y="4981" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="144.98" y="4991.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T LEXICAL-VARIABLE-INFO T T (2 samples, 0.04%)</title><rect x="51.0" y="2645" width="0.6" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="54.03" y="2655.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1301" width="1.1" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="59.52" y="1311.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (8 samples, 0.18%)</title><rect x="41.1" y="4437" width="2.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="44.10" y="4447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FIXNUM-SUB-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4485" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="142.11" y="4495.5" ></text>
</g>
<g >
<title>`C+ (3 samples, 0.07%)</title><rect x="339.6" y="5269" width="0.7" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="342.56" y="5279.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="389" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="61.35" y="399.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="149.3" y="4933" width="0.3" height="15.0" fill="rgb(239,108,108)" rx="2" ry="2" />
<text  x="152.30" y="4943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="128.7" y="4341" width="1.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="131.65" y="4351.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="3333" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="73.63" y="3343.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (25 samples, 0.55%)</title><rect x="473.1" y="5605" width="6.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="476.11" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5045" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="130.35" y="5055.5" ></text>
</g>
<g >
<title>`vsprintf_l (1 samples, 0.02%)</title><rect x="243.6" y="5493" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="246.65" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="62.5" y="3221" width="0.6" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="65.53" y="3231.5" ></text>
</g>
<g >
<title>`llvm::DILocalVariable::getImpl(llvm::LLVMContext&amp;, llvm::DIScop (5 samples, 0.11%)</title><rect x="359.2" y="5221" width="1.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="362.17" y="5231.5" ></text>
</g>
<g >
<title>`LTV/ARRAY^LITERAL^FN^^ (2 samples, 0.04%)</title><rect x="123.4" y="5589" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="126.43" y="5599.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="3205" width="2.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="68.41" y="3215.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="24.6" y="3637" width="0.6" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="27.64" y="3647.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (181 samples, 4.01%)</title><rect x="49.5" y="5109" width="47.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="52.46" y="5119.5" >`FUN..</text>
</g>
<g >
<title>`CHECK-BINDING-FORMS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2405" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="66.05" y="2415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.8" y="4757" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="140.80" y="4767.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2293" width="0.3" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="65.01" y="2303.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.02%)</title><rect x="583.9" y="5621" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="586.93" y="5631.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Type*, llvm::PointerTyp (1 samples, 0.02%)</title><rect x="337.5" y="5157" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="340.47" y="5167.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getEdgeValue(llvm::Va (1 samples, 0.02%)</title><rect x="433.9" y="5605" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="436.91" y="5615.5" ></text>
</g>
<g >
<title>`llvmo::ClaspJIT_O::addModule(gctools::smart_ptr&lt;llvmo::Module_O (1 samples, 0.02%)</title><rect x="732.9" y="5477" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="735.90" y="5487.5" ></text>
</g>
<g >
<title>`wrapped_cl__load_T_spT_spT_spT_spT_spT_sp (2,981 samples, 66.02%)</title><rect x="10.0" y="6053" width="779.1" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="13.00" y="6063.5" >`wrapped_cl__load_T_spT_spT_spT_spT_spT_sp</text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="25.7" y="4229" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="28.68" y="4239.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="58.3" y="373" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="61.35" y="383.5" ></text>
</g>
<g >
<title>`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;llvm::Consta (1 samples, 0.02%)</title><rect x="588.4" y="5669" width="0.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="591.37" y="5679.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (8 samples, 0.18%)</title><rect x="55.5" y="1941" width="2.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="58.48" y="1951.5" ></text>
</g>
<g >
<title>`COMPILE-RANGES^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.2" y="5429" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="738.25" y="5439.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (2 samples, 0.04%)</title><rect x="146.2" y="5141" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="149.16" y="5151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4725" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="140.28" y="4735.5" ></text>
</g>
<g >
<title>`OPTIMIZED-GLOBAL-FUNCTION-INFO-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="38.0" y="4645" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="40.96" y="4655.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="138.6" y="4821" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="141.58" y="4831.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2949" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="63.18" y="2959.5" ></text>
</g>
<g >
<title>`WRITE-OBJECT-WITH-CIRCLE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="735.5" y="5541" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="738.51" y="5551.5" ></text>
</g>
<g >
<title>`PRIMITIVE-RETURN-TYPE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="310.6" y="5397" width="0.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="313.55" y="5407.5" ></text>
</g>
<g >
<title>`llvm::DenseMapInfo&lt;std::__1::pair&lt;llvm::Value*, unsigned int&gt; &gt; (1 samples, 0.02%)</title><rect x="712.8" y="5605" width="0.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="715.77" y="5615.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (3 samples, 0.07%)</title><rect x="361.0" y="5301" width="0.8" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="363.99" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4181" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="139.23" y="4191.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="14.2" y="3237" width="1.0" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="17.18" y="3247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4437" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="137.66" y="4447.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (83 samples, 1.84%)</title><rect x="49.7" y="3957" width="21.7" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="52.73" y="3967.5" >`..</text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="67.2" y="1781" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="70.24" y="1791.5" ></text>
</g>
<g >
<title>`llvm::DenseMapInfo&lt;llvm::MemoryLocation&gt;::getHashValue(llvm::Me (1 samples, 0.02%)</title><rect x="529.8" y="5509" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="532.83" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (5 samples, 0.11%)</title><rect x="137.3" y="4901" width="1.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="140.28" y="4911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4261" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="141.85" y="4271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="126.8" y="5461" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="129.82" y="5471.5" ></text>
</g>
<g >
<title>`llvm::CallSiteBase&lt;llvm::Function const, llvm::BasicBlock const (1 samples, 0.02%)</title><rect x="644.6" y="5573" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="647.56" y="5583.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DILocalVariable*,  (1 samples, 0.02%)</title><rect x="359.7" y="5109" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="362.69" y="5119.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (9 samples, 0.20%)</title><rect x="78.2" y="4501" width="2.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="81.21" y="4511.5" ></text>
</g>
<g >
<title>`OPTIMIZED-LEXICAL-LOCATION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="129.2" y="3509" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="132.18" y="3519.5" ></text>
</g>
<g >
<title>`COMPUTE-APPLICABLE-METHODS^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="91.8" y="4453" width="1.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="94.80" y="4463.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="403.6" y="5173" width="0.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="406.59" y="5183.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;std::__1::pair&lt;llvm::Mem (1 samples, 0.02%)</title><rect x="565.9" y="5397" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="568.89" y="5407.5" ></text>
</g>
<g >
<title>`PARSE-SLOTS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.0" y="5653" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="737.99" y="5663.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeAllocSize(llvm::Type*) const (1 samples, 0.02%)</title><rect x="628.4" y="5573" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="631.36" y="5583.5" ></text>
</g>
<g >
<title>`IRC-INT-TO-PTR^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="362.0" y="5349" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="365.04" y="5359.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (2 samples, 0.04%)</title><rect x="661.5" y="5461" width="0.6" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="664.55" y="5471.5" ></text>
</g>
<g >
<title>`llvmo::FunctionType_O::get(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="98.1" y="5653" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="101.08" y="5663.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (6 samples, 0.13%)</title><rect x="221.2" y="5573" width="1.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="224.17" y="5583.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.5" y="3269" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="64.49" y="3279.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (2 samples, 0.04%)</title><rect x="70.1" y="2773" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="73.11" y="2783.5" ></text>
</g>
<g >
<title>`pthread_cond_broadcast (1 samples, 0.02%)</title><rect x="381.1" y="5349" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="384.12" y="5359.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="356.8" y="5317" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="359.81" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="148.5" y="5045" width="0.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="151.52" y="5055.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="245" width="1.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="57.17" y="255.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="79.5" y="3701" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="82.52" y="3711.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (1 samples, 0.02%)</title><rect x="61.5" y="3253" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="64.49" y="3263.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="425.5" y="5717" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="428.55" y="5727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.0" y="4629" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="138.97" y="4639.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="70.9" y="3125" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="73.89" y="3135.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="333.8" y="5061" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="336.81" y="5071.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (1 samples, 0.02%)</title><rect x="350.0" y="5205" width="0.3" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="353.02" y="5215.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::PointerType_O&gt; gctools::GCObjectAppro (1 samples, 0.02%)</title><rect x="347.1" y="5189" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="350.14" y="5199.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="709" width="1.1" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="59.52" y="719.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (2 samples, 0.04%)</title><rect x="96.2" y="5029" width="0.6" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="99.25" y="5039.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (30 samples, 0.66%)</title><rect x="37.4" y="4901" width="7.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="40.44" y="4911.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="322.8" y="5221" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="325.84" y="5231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="3973" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="136.36" y="3983.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="64.4" y="629" width="0.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="67.36" y="639.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="23.9" y="3717" width="0.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="26.85" y="3727.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="61.2" y="2325" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="64.22" y="2335.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (10 samples, 0.22%)</title><rect x="78.0" y="4677" width="2.6" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="80.95" y="4687.5" ></text>
</g>
<g >
<title>`MAYBE-SPILL-TO-REGISTER-SAVE-AREA^COMPILER^FN^^ (20 samples, 0.44%)</title><rect x="358.4" y="5365" width="5.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="361.38" y="5375.5" ></text>
</g>
<g >
<title>`llvm::User::operator new(unsigned long, unsigned int, unsigned  (1 samples, 0.02%)</title><rect x="338.8" y="5109" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="341.78" y="5119.5" ></text>
</g>
<g >
<title>`wrapped_DILocation_O__make_llvm__LLVMContext___________________ (3 samples, 0.07%)</title><rect x="315.8" y="5269" width="0.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="318.78" y="5279.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="157.9" y="5301" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="160.92" y="5311.5" ></text>
</g>
<g >
<title>`llvm::wouldInstructionBeTriviallyDead(llvm::Instruction*, llvm: (8 samples, 0.18%)</title><rect x="681.1" y="5637" width="2.1" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="684.15" y="5647.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (5 samples, 0.11%)</title><rect x="191.9" y="5557" width="1.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="194.90" y="5567.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="423.2" y="5557" width="0.3" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="426.20" y="5567.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.02%)</title><rect x="230.8" y="5301" width="0.3" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="233.84" y="5311.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="397.8" y="5285" width="0.3" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="400.84" y="5295.5" ></text>
</g>
<g >
<title>`wrapped_DILocation_O__make_llvm__LLVMContext___________________ (2 samples, 0.04%)</title><rect x="326.5" y="5237" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="329.50" y="5247.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (2 samples, 0.04%)</title><rect x="411.7" y="5333" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="414.70" y="5343.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="47.1" y="4853" width="0.3" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="50.11" y="4863.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="52.9" y="3253" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="55.86" y="3263.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="60.2" y="3141" width="1.0" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="63.18" y="3151.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (8 samples, 0.18%)</title><rect x="39.0" y="4373" width="2.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="42.01" y="4383.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="77.7" y="4821" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="80.69" y="4831.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1141" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="20.58" y="1151.5" ></text>
</g>
<g >
<title>`wrapped_cl__write_T_spT_spT_spT_sp_______________T_spT_spT_spT_ (1 samples, 0.02%)</title><rect x="11.0" y="5701" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="14.05" y="5711.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.8" y="1829" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="65.79" y="1839.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="148.0" y="5429" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="150.99" y="5439.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="635.4" y="5525" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="638.41" y="5535.5" ></text>
</g>
<g >
<title>`computeKnownBitsAddSub(bool, llvm::Value const*, llvm::Value co (1 samples, 0.02%)</title><rect x="516.5" y="5557" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="519.50" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="11.3" y="4949" width="1.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="14.31" y="4959.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.13%)</title><rect x="24.6" y="4661" width="1.6" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="27.64" y="4671.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="64.1" y="1605" width="1.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="67.10" y="1615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (1 samples, 0.02%)</title><rect x="61.0" y="2709" width="0.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="63.96" y="2719.5" ></text>
</g>
<g >
<title>`llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo  (1 samples, 0.02%)</title><rect x="586.3" y="5589" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="589.28" y="5599.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.5" y="2773" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="65.53" y="2783.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-UINTPTR_T^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="331.5" y="5077" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="334.46" y="5087.5" ></text>
</g>
<g >
<title>`llvm::isMallocOrCallocLikeFn(llvm::Value const*, llvm::TargetLi (2 samples, 0.04%)</title><rect x="660.8" y="5509" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="663.76" y="5519.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.02%)</title><rect x="367.5" y="5333" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="370.53" y="5343.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_combine_recursive_helper::combine(u (1 samples, 0.02%)</title><rect x="331.5" y="4965" width="0.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="334.46" y="4975.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (12 samples, 0.27%)</title><rect x="717.7" y="5797" width="3.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="720.74" y="5807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4661" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="136.62" y="4671.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (1 samples, 0.02%)</title><rect x="403.6" y="5333" width="0.3" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="406.59" y="5343.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2597" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="66.05" y="2607.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (25 samples, 0.55%)</title><rect x="16.3" y="3077" width="6.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="19.27" y="3087.5" ></text>
</g>
<g >
<title>`CONVERT-LAMBDA-FUNCTION^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5381" width="1.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="14.31" y="5391.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseSetPair&lt;std::__1::pair&lt;llvm::MemoryAccess co (1 samples, 0.02%)</title><rect x="529.8" y="5541" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="532.83" y="5551.5" ></text>
</g>
<g >
<title>`core::bind_optional_va_list(gctools::Vec0&lt;core::OptionalArgumen (2 samples, 0.04%)</title><rect x="372.0" y="5317" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="374.97" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="933" width="1.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="58.48" y="943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (10 samples, 0.22%)</title><rect x="148.5" y="5189" width="2.6" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="151.52" y="5199.5" ></text>
</g>
<g >
<title>`start (2,981 samples, 66.02%)</title><rect x="10.0" y="6405" width="779.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="13.00" y="6415.5" >`start</text>
</g>
<g >
<title>`(anonymous namespace)::EarlyCSE::~EarlyCSE() (1 samples, 0.02%)</title><rect x="445.9" y="5653" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="448.93" y="5663.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="60.2" y="3013" width="0.2" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="63.18" y="3023.5" ></text>
</g>
<g >
<title>`llvm::AAResults::Model&lt;llvm::TypeBasedAAResult&gt;::getModRefInfo( (1 samples, 0.02%)</title><rect x="500.8" y="5541" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="503.82" y="5551.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (16 samples, 0.35%)</title><rect x="120.8" y="5621" width="4.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="123.81" y="5631.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="67.5" y="1765" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="70.50" y="1775.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (2 samples, 0.04%)</title><rect x="183.0" y="5557" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="186.01" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="58.3" y="213" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="61.35" y="223.5" ></text>
</g>
<g >
<title>`cc_makeCell (1 samples, 0.02%)</title><rect x="95.7" y="4677" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="98.72" y="4687.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_short(char const*, unsigned long, u (1 samples, 0.02%)</title><rect x="612.9" y="5509" width="0.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="615.94" y="5519.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (35 samples, 0.78%)</title><rect x="622.3" y="5621" width="9.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="625.35" y="5631.5" ></text>
</g>
<g >
<title>`llvmo::Value_O::create(llvm::Value*) (1 samples, 0.02%)</title><rect x="349.0" y="5189" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="351.97" y="5199.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="70.9" y="3269" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="73.89" y="3279.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1941" width="1.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="57.17" y="1951.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'MULTIPLE-VALUE-C (1 samples, 0.02%)</title><rect x="62.3" y="3157" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="65.27" y="3167.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="62.3" y="1605" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="65.27" y="1615.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="404.6" y="5381" width="0.3" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="407.64" y="5391.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="334.1" y="5013" width="0.2" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="337.08" y="5023.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="311.6" y="5429" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="314.60" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="59.9" y="3205" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="62.92" y="3215.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ModuleBitcodeWriter::writeFunction(llvm: (18 samples, 0.40%)</title><rect x="722.2" y="5669" width="4.7" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="725.18" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="4885" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="130.35" y="4895.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="74.6" y="3973" width="2.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="77.55" y="3983.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="39.8" y="4229" width="1.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="42.79" y="4239.5" ></text>
</g>
<g >
<title>`haveSameSpecialState(llvm::Instruction const*, llvm::Instructio (1 samples, 0.02%)</title><rect x="439.9" y="5605" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="442.92" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5269" width="0.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="180.26" y="5279.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (4 samples, 0.09%)</title><rect x="219.3" y="5557" width="1.1" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="222.34" y="5567.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="72.5" y="4853" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="75.46" y="4863.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="260.6" y="5445" width="0.3" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="263.64" y="5455.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="550.2" y="5301" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="553.21" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (30 samples, 0.66%)</title><rect x="27.5" y="4741" width="7.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="30.51" y="4751.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="178.3" y="5605" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="181.31" y="5615.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (3 samples, 0.07%)</title><rect x="323.4" y="5061" width="0.7" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="326.36" y="5071.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (1 samples, 0.02%)</title><rect x="536.9" y="5637" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="539.88" y="5647.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="161.6" y="5029" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="164.58" y="5039.5" ></text>
</g>
<g >
<title>`core::Closure_O::setf_objectFile(gctools::smart_ptr&lt;core::Objec (1 samples, 0.02%)</title><rect x="280.8" y="5605" width="0.2" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="283.76" y="5615.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (5 samples, 0.11%)</title><rect x="557.0" y="5445" width="1.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="560.01" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4373" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="139.76" y="4383.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="49.5" y="4053" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="52.46" y="4063.5" ></text>
</g>
<g >
<title>`isObjectSmallerThan(llvm::Value const*, unsigned long long, llv (1 samples, 0.02%)</title><rect x="565.6" y="5429" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="568.63" y="5439.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="351.3" y="5205" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="354.32" y="5215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.8" y="4661" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="134.79" y="4671.5" ></text>
</g>
<g >
<title>`llvm::SimplifyCall(llvm::ImmutableCallSite, llvm::SimplifyQuery (1 samples, 0.02%)</title><rect x="506.6" y="5429" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="509.57" y="5439.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (1 samples, 0.02%)</title><rect x="345.6" y="5141" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="348.57" y="5151.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="60.2" y="3077" width="1.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="63.18" y="3087.5" ></text>
</g>
<g >
<title>`llvmo::FunctionType_O::get(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="337.0" y="5205" width="0.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="339.95" y="5215.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="59.7" y="3365" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="62.66" y="3375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4693" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="141.32" y="4703.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4293" width="23.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="52.46" y="4303.5" >`..</text>
</g>
<g >
<title>0x10d596094 (30 samples, 0.66%)</title><rect x="37.4" y="4917" width="7.9" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="40.44" y="4927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="134.7" y="4405" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="137.66" y="4415.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.02%)</title><rect x="597.0" y="5525" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="599.99" y="5535.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getEdgeValue(llvm::Va (2 samples, 0.04%)</title><rect x="447.2" y="5573" width="0.6" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="450.24" y="5583.5" ></text>
</g>
<g >
<title>`TRANSLATE-FUNCALL^CLASP-CLEAVIR^FN^^ (65 samples, 1.44%)</title><rect x="382.7" y="5461" width="17.0" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="385.69" y="5471.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LCSSAWrapperPass::runOnFunction(llvm::Fu (2 samples, 0.04%)</title><rect x="597.8" y="5669" width="0.5" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="600.78" y="5679.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getTerminator() const (1 samples, 0.02%)</title><rect x="694.7" y="5621" width="0.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="697.74" y="5631.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1925" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="20.58" y="1935.5" ></text>
</g>
<g >
<title>`CONVERT-TO-TLL^CC-HIR-TO-MIR^FN^^ (2 samples, 0.04%)</title><rect x="190.9" y="5509" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="193.85" y="5519.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1077" width="1.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="58.48" y="1087.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="169.9" y="5013" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="172.95" y="5023.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (2 samples, 0.04%)</title><rect x="68.8" y="2389" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="71.80" y="2399.5" ></text>
</g>
<g >
<title>`llvm::AAResults::Model&lt;llvm::TypeBasedAAResult&gt;::pointsToConsta (1 samples, 0.02%)</title><rect x="501.1" y="5541" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="504.08" y="5551.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="311.9" y="5333" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="314.86" y="5343.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoWrapperPass::runOnFunction(llvm::Function&amp;) (7 samples, 0.16%)</title><rect x="523.6" y="5669" width="1.8" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="526.55" y="5679.5" ></text>
</g>
<g >
<title>`STORE-TMV^CLASP-CLEAVIR^FN^^ (6 samples, 0.13%)</title><rect x="343.7" y="5253" width="1.6" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="346.75" y="5263.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="130.2" y="4661" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="133.22" y="4671.5" ></text>
</g>
<g >
<title>`GC_mark_from (2 samples, 0.04%)</title><rect x="171.8" y="5077" width="0.5" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="174.78" y="5087.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::BasicBlock&gt;, llvm::S (2 samples, 0.04%)</title><rect x="697.9" y="5589" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="700.88" y="5599.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (1 samples, 0.02%)</title><rect x="238.4" y="5413" width="0.3" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="241.42" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="71.4" y="3717" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="74.42" y="3727.5" ></text>
</g>
<g >
<title>`MAKE-LOAD-TIME-VALUE-AST^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="71.4" y="3445" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="74.42" y="3455.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="78.2" y="4389" width="2.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="81.21" y="4399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (15 samples, 0.33%)</title><rect x="128.4" y="4869" width="3.9" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="131.39" y="4879.5" ></text>
</g>
<g >
<title>`core::cl__error(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (2 samples, 0.04%)</title><rect x="733.4" y="5653" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="736.42" y="5663.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1301" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="68.93" y="1311.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.8" y="1381" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="65.79" y="1391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL-BINDING^CLEAVIR-GENERATE-AST^FN^^ (72 samples, 1.59%)</title><rect x="52.6" y="3877" width="18.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="55.60" y="3887.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="65.7" y="2021" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="68.67" y="2031.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="166.8" y="5045" width="0.3" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="169.81" y="5055.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="64.1" y="1941" width="1.0" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="67.10" y="1951.5" ></text>
</g>
<g >
<title>`core::lambdaListHandler_createBindings(gctools::smart_ptr&lt;core: (1 samples, 0.02%)</title><rect x="355.8" y="5093" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="358.77" y="5103.5" ></text>
</g>
<g >
<title>`FUDGE-VALUES-TYPE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="75.1" y="3781" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="78.08" y="3791.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2325" width="1.8" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="60.57" y="2335.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="58.3" y="1093" width="1.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="61.35" y="1103.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomT (1 samples, 0.02%)</title><rect x="590.2" y="5637" width="0.3" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="593.20" y="5647.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.02%)</title><rect x="399.2" y="5381" width="0.2" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="402.15" y="5391.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::FindKey(llvm::StringRef) const (1 samples, 0.02%)</title><rect x="434.4" y="5589" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="437.43" y="5599.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2869" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="64.75" y="2879.5" ></text>
</g>
<g >
<title>`llvm::Instruction::isIdenticalToWhenDefined(llvm::Instruction c (1 samples, 0.02%)</title><rect x="507.9" y="5573" width="0.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="510.87" y="5583.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="80.6" y="4613" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="83.56" y="4623.5" ></text>
</g>
<g >
<title>`__gmpn_mul_1 (1 samples, 0.02%)</title><rect x="789.1" y="6421" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="792.09" y="6431.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="64.1" y="1765" width="1.0" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="67.10" y="1775.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (5 samples, 0.11%)</title><rect x="299.1" y="5365" width="1.3" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="302.05" y="5375.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (2 samples, 0.04%)</title><rect x="15.5" y="3557" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="18.49" y="3567.5" ></text>
</g>
<g >
<title>`GC_push_conditional_with_exclusions (1 samples, 0.02%)</title><rect x="788.6" y="5605" width="0.2" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="791.56" y="5615.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="59.9" y="3285" width="1.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="62.92" y="3295.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (1 samples, 0.02%)</title><rect x="400.7" y="5397" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="403.72" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (71 samples, 1.57%)</title><rect x="52.9" y="3829" width="18.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="55.86" y="3839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="128.7" y="4517" width="1.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="131.65" y="4527.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (2 samples, 0.04%)</title><rect x="353.7" y="5189" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="356.68" y="5199.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="657.4" y="5509" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="660.37" y="5519.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="59.4" y="2645" width="0.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="62.40" y="2655.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (12 samples, 0.27%)</title><rect x="74.0" y="4181" width="3.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="77.03" y="4191.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="506.8" y="5429" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="509.83" y="5439.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="182.2" y="5301" width="0.3" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="185.23" y="5311.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="43.2" y="4437" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="46.19" y="4447.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1749" width="0.3" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="65.53" y="1759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4469" width="0.3" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="137.14" y="4479.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="68.0" y="2773" width="1.8" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="71.02" y="2783.5" ></text>
</g>
<g >
<title>`core::LambdaListHandler_O::createBindingsInScopeVaList(unsigned (1 samples, 0.02%)</title><rect x="363.3" y="5285" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="366.35" y="5295.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (2 samples, 0.04%)</title><rect x="15.5" y="3413" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="18.49" y="3423.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="16.8" y="2325" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="19.80" y="2335.5" ></text>
</g>
<g >
<title>`llvm::CFLSteensAAWrapperPass* llvm::Pass::getAnalysisIfAvailabl (2 samples, 0.04%)</title><rect x="454.0" y="5653" width="0.6" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="457.04" y="5663.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2533" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="64.75" y="2543.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (8 samples, 0.18%)</title><rect x="55.5" y="1845" width="2.1" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="58.48" y="1855.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((FIXNUMP-INSTRUCTIO (1 samples, 0.02%)</title><rect x="320.5" y="5285" width="0.2" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="323.49" y="5295.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitAllocSite(llvm::Instruction&amp;) (3 samples, 0.07%)</title><rect x="634.4" y="5605" width="0.8" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="637.37" y="5615.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="19.1" y="1861" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="22.15" y="1871.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.2" y="3653" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="132.18" y="3663.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="364.7" y="5317" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="367.65" y="5327.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="635.4" y="5477" width="0.3" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="638.41" y="5487.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="354.7" y="5221" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="357.72" y="5231.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2453" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="73.63" y="2463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.0" y="4693" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="138.97" y="4703.5" ></text>
</g>
<g >
<title>`FORMAT^COMMON-LISP^FN^^ (13 samples, 0.29%)</title><rect x="45.5" y="5141" width="3.4" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="48.54" y="5151.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1013" width="1.3" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="57.17" y="1023.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.6" y="149" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="67.62" y="159.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="194.5" y="5541" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="197.51" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (4 samples, 0.09%)</title><rect x="153.0" y="5205" width="1.0" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="155.96" y="5215.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="395.5" y="5269" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="398.49" y="5279.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.02%)</title><rect x="651.6" y="5413" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="654.62" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="57.6" y="1461" width="0.2" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="60.57" y="1471.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="355.8" y="5157" width="0.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="358.77" y="5167.5" ></text>
</g>
<g >
<title>`llvm::ConstantRange::makeExactICmpRegion(llvm::CmpInst::Predica (1 samples, 0.02%)</title><rect x="442.3" y="5589" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="445.27" y="5599.5" ></text>
</g>
<g >
<title>`core::Vaslist::Vaslist(core::Vaslist const&amp;) (1 samples, 0.02%)</title><rect x="407.8" y="5413" width="0.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="410.78" y="5423.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2405" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="73.63" y="2415.5" ></text>
</g>
<g >
<title>`std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp; st (1 samples, 0.02%)</title><rect x="383.5" y="5365" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="386.47" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (7 samples, 0.16%)</title><rect x="66.2" y="2517" width="1.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="69.19" y="2527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="177.3" y="4965" width="0.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="180.26" y="4975.5" ></text>
</g>
<g >
<title>`OPTIMIZED-LOAD-TIME-VALUE-AST-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="114.8" y="5557" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="117.80" y="5567.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::~BasicBlock() (1 samples, 0.02%)</title><rect x="698.1" y="5573" width="0.3" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="701.14" y="5583.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (2 samples, 0.04%)</title><rect x="311.9" y="5413" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="314.86" y="5423.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="339.0" y="5205" width="0.3" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="342.04" y="5215.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((FIXNUM-ADD-INSTRUC (3 samples, 0.07%)</title><rect x="292.5" y="5461" width="0.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="295.52" y="5471.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5269" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="736.42" y="5279.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="518.1" y="5573" width="0.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="521.07" y="5583.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="332.2" y="5013" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="335.25" y="5023.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.02%)</title><rect x="32.0" y="4309" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="34.95" y="4319.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1845" width="1.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="57.17" y="1855.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2389" width="0.2" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="63.18" y="2399.5" ></text>
</g>
<g >
<title>`core::core__instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="188.0" y="5525" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="190.98" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="1077" width="1.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="59.52" y="1087.5" ></text>
</g>
<g >
<title>`COMPUTE-APPLICABLE-METHODS^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="191.9" y="5541" width="1.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="194.90" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="141.7" y="4981" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="144.72" y="4991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.5" y="4677" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="139.49" y="4687.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="16.0" y="3685" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="19.01" y="3695.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (2 samples, 0.04%)</title><rect x="458.7" y="5637" width="0.6" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="461.74" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="981" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="65.01" y="991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4437" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="136.36" y="4447.5" ></text>
</g>
<g >
<title>`llvm::AllocaInst::isArrayAllocation() const (1 samples, 0.02%)</title><rect x="482.3" y="5605" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="485.26" y="5615.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.02%)</title><rect x="567.5" y="5349" width="0.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="570.46" y="5359.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="10.3" y="5701" width="0.2" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="13.26" y="5711.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4277" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="141.85" y="4287.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (4 samples, 0.09%)</title><rect x="504.5" y="5509" width="1.0" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="507.48" y="5519.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="17.3" y="1653" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="20.32" y="1663.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.02%)</title><rect x="130.7" y="4565" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="133.74" y="4575.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="64.1" y="1461" width="1.0" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="67.10" y="1471.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="62.5" y="2421" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="65.53" y="2431.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3461" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="100.29" y="3471.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1445" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="20.58" y="1455.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="2661" width="2.6" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="68.41" y="2671.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="2213" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="64.22" y="2223.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="1589" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="65.79" y="1599.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (31 samples, 0.69%)</title><rect x="27.2" y="4917" width="8.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="30.25" y="4927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4437" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="137.14" y="4447.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="88.4" y="4373" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="91.41" y="4383.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (2 samples, 0.04%)</title><rect x="505.0" y="5477" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="508.00" y="5487.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::Solve() (13 samples, 0.29%)</title><rect x="711.7" y="5685" width="3.4" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="714.73" y="5695.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="67.2" y="1381" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="70.24" y="1391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (4 samples, 0.09%)</title><rect x="11.3" y="4885" width="1.1" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="14.31" y="4895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (12 samples, 0.27%)</title><rect x="128.7" y="4757" width="3.1" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="131.65" y="4767.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5541" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="123.55" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (8 samples, 0.18%)</title><rect x="174.4" y="5397" width="2.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="177.39" y="5407.5" ></text>
</g>
<g >
<title>`llvm::isMallocOrCallocLikeFn(llvm::Value const*, llvm::TargetLi (1 samples, 0.02%)</title><rect x="663.4" y="5525" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="666.38" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5253" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="130.35" y="5263.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="734.2" y="5605" width="0.8" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="737.20" y="5615.5" ></text>
</g>
<g >
<title>`PROCESS-REQUIRED^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="14.4" y="3061" width="0.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="17.44" y="3071.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="606.9" y="5605" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="609.93" y="5615.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::Valu (1 samples, 0.02%)</title><rect x="584.4" y="5605" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="587.45" y="5615.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4613" width="23.0" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="52.46" y="4623.5" >`..</text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (3 samples, 0.07%)</title><rect x="182.8" y="5589" width="0.7" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="185.75" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5301" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="130.35" y="5311.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="149.0" y="4901" width="0.3" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="152.04" y="4911.5" ></text>
</g>
<g >
<title>`szone_realloc (1 samples, 0.02%)</title><rect x="737.3" y="5653" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="740.34" y="5663.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (2 samples, 0.04%)</title><rect x="663.6" y="5541" width="0.6" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="666.64" y="5551.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.02%)</title><rect x="48.2" y="5061" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="51.16" y="5071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4437" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="136.62" y="4447.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.02%)</title><rect x="170.5" y="5077" width="0.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="173.47" y="5087.5" ></text>
</g>
<g >
<title>`llvm::ReassociatePass::OptimizeExpression(llvm::BinaryOperator* (1 samples, 0.02%)</title><rect x="449.9" y="5605" width="0.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="452.85" y="5615.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::schedulePass(llvm::Pass*) (1 samples, 0.02%)</title><rect x="425.8" y="5701" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="428.81" y="5711.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (8 samples, 0.18%)</title><rect x="78.5" y="4101" width="2.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="81.47" y="4111.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (2 samples, 0.04%)</title><rect x="290.4" y="5477" width="0.6" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="293.43" y="5487.5" ></text>
</g>
<g >
<title>`POSITION-IF-NOT^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="43.2" y="4357" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="46.19" y="4367.5" ></text>
</g>
<g >
<title>`AUGMENT-ENVIRONMENT-WITH-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="837" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="67.88" y="847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="133.1" y="4885" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="136.10" y="4895.5" ></text>
</g>
<g >
<title>`SLOT-EXISTS-P^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="191.6" y="5557" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="194.64" y="5567.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;std::__1::pair&lt;llvm::Mem (1 samples, 0.02%)</title><rect x="427.4" y="5637" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="430.38" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1189" width="1.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="58.48" y="1199.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (1 samples, 0.02%)</title><rect x="62.0" y="1477" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="65.01" y="1487.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="70.6" y="1877" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="73.63" y="1887.5" ></text>
</g>
<g >
<title>`GC_mark_from (1 samples, 0.02%)</title><rect x="784.4" y="5589" width="0.2" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="787.38" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL-BINDING^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="24.6" y="3781" width="0.6" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="27.64" y="3791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4981" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="140.02" y="4991.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (5 samples, 0.11%)</title><rect x="54.2" y="1077" width="1.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="57.17" y="1087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4293" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="137.40" y="4303.5" ></text>
</g>
<g >
<title>`default_zone_malloc (1 samples, 0.02%)</title><rect x="524.6" y="5493" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="527.60" y="5503.5" ></text>
</g>
<g >
<title>`setup_header (1 samples, 0.02%)</title><rect x="189.3" y="5429" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="192.29" y="5439.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (9 samples, 0.20%)</title><rect x="551.0" y="5429" width="2.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="554.00" y="5439.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (2 samples, 0.04%)</title><rect x="595.7" y="5557" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="598.69" y="5567.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (2 samples, 0.04%)</title><rect x="190.9" y="5493" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="193.85" y="5503.5" ></text>
</g>
<g >
<title>`OPTIMIZED-TYPEQ-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="161.3" y="4997" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="164.32" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (50 samples, 1.11%)</title><rect x="36.4" y="5173" width="13.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="39.40" y="5183.5" ></text>
</g>
<g >
<title>`TYPE-GET-INT8-TY^LLVM-SYS^FN^^ (1 samples, 0.02%)</title><rect x="362.6" y="5349" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="365.56" y="5359.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PointerIntPair&lt;llvm::Va (6 samples, 0.13%)</title><rect x="703.9" y="5653" width="1.6" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="706.89" y="5663.5" ></text>
</g>
<g >
<title>`IRC-SET-INSERT-POINT-BASIC-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="395.2" y="5269" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="398.23" y="5279.5" ></text>
</g>
<g >
<title>`SLOT-DEFINITION-NAME^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="194.3" y="5525" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="197.25" y="5535.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="225.1" y="5413" width="0.3" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="228.09" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (21 samples, 0.47%)</title><rect x="38.7" y="4597" width="5.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="41.75" y="4607.5" ></text>
</g>
<g >
<title>`llvmo::llvm_sys__llvm_value_p(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="378.8" y="5365" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="381.77" y="5375.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="123.7" y="5509" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="126.69" y="5519.5" ></text>
</g>
<g >
<title>`core::core__integer_to_string(gctools::smart_ptr&lt;core::StrNs_O&gt; (1 samples, 0.02%)</title><rect x="126.8" y="5285" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="129.82" y="5295.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="166.0" y="5045" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="169.03" y="5055.5" ></text>
</g>
<g >
<title>`POSITION-IF-NOT^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="67.8" y="1349" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="70.76" y="1359.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="366.2" y="5413" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="369.22" y="5423.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (2 samples, 0.04%)</title><rect x="554.9" y="5349" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="557.92" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4709" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="141.32" y="4719.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="456.4" y="5589" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="459.39" y="5599.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (13 samples, 0.29%)</title><rect x="281.3" y="5621" width="3.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="284.28" y="5631.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (1 samples, 0.02%)</title><rect x="420.8" y="5573" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="423.84" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="5093" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="100.29" y="5103.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (3 samples, 0.07%)</title><rect x="283.4" y="5429" width="0.8" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="286.37" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4629" width="0.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="139.23" y="4639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="4085" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="131.91" y="4095.5" ></text>
</g>
<g >
<title>`llvm::GVN::processInstruction(llvm::Instruction*) (143 samples, 3.17%)</title><rect x="539.2" y="5605" width="37.4" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="542.24" y="5615.5" >`ll..</text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="71.7" y="3717" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="74.68" y="3727.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="58.9" y="757" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="61.87" y="767.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1237" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="65.79" y="1247.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="2341" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="65.53" y="2351.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="19.9" y="2069" width="1.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="22.93" y="2079.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::retrack(void*, llvm::Metadata&amp;, void*) (1 samples, 0.02%)</title><rect x="412.0" y="5253" width="0.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="414.96" y="5263.5" ></text>
</g>
<g >
<title>`std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::basi (1 samples, 0.02%)</title><rect x="356.3" y="5269" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="359.29" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2773" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="64.22" y="2783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4709" width="0.2" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="136.36" y="4719.5" ></text>
</g>
<g >
<title>`std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt; (1 samples, 0.02%)</title><rect x="383.5" y="5349" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="386.47" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="78.7" y="3781" width="1.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="81.74" y="3791.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="311.1" y="5397" width="0.2" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="314.08" y="5407.5" ></text>
</g>
<g >
<title>`GC_mark_some (1 samples, 0.02%)</title><rect x="66.7" y="1477" width="0.3" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="69.71" y="1487.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="374.8" y="5173" width="0.3" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="377.85" y="5183.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-I64^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="402.5" y="5445" width="0.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="405.55" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4517" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="139.23" y="4527.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction const*, uns (2 samples, 0.04%)</title><rect x="725.6" y="5637" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="728.58" y="5647.5" ></text>
</g>
<g >
<title>`core::contagen_mul(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (7 samples, 0.16%)</title><rect x="737.3" y="5717" width="1.9" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="740.34" y="5727.5" ></text>
</g>
<g >
<title>`GC_mark_local (2 samples, 0.04%)</title><rect x="85.8" y="4293" width="0.5" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="88.79" y="4303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.02%)</title><rect x="134.4" y="4197" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="137.40" y="4207.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (72 samples, 1.59%)</title><rect x="52.6" y="3909" width="18.8" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="55.60" y="3919.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="398.4" y="5349" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="401.37" y="5359.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="70.6" y="3221" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="73.63" y="3231.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (5 samples, 0.11%)</title><rect x="382.9" y="5413" width="1.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="385.95" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'CLEAVIR-PRIMOP:M (1 samples, 0.02%)</title><rect x="62.0" y="2997" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="65.01" y="3007.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Instruction*&gt;::insert(llvm::Instruc (1 samples, 0.02%)</title><rect x="450.9" y="5621" width="0.3" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="453.90" y="5631.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="2693" width="2.6" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="68.41" y="2703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5221" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="180.26" y="5231.5" ></text>
</g>
<g >
<title>`llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock* (1 samples, 0.02%)</title><rect x="448.3" y="5637" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="451.29" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (88 samples, 1.95%)</title><rect x="49.5" y="4837" width="23.0" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="52.46" y="4847.5" >`..</text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="329.1" y="5125" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="332.11" y="5135.5" ></text>
</g>
<g >
<title>`llvm::LiveVariables::runOnBlock(llvm::MachineBasicBlock*, unsig (1 samples, 0.02%)</title><rect x="732.9" y="5333" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="735.90" y="5343.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="78.2" y="4613" width="2.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="81.21" y="4623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="177.5" y="5253" width="0.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="180.53" y="5263.5" ></text>
</g>
<g >
<title>`core::contagen_div(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (1 samples, 0.02%)</title><rect x="365.2" y="5333" width="0.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="368.18" y="5343.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1909" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="65.27" y="1919.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.04%)</title><rect x="148.8" y="4965" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="151.78" y="4975.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="70.6" y="2341" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="73.63" y="2351.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (1 samples, 0.02%)</title><rect x="344.8" y="5157" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="347.79" y="5167.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="39.8" y="4197" width="1.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="42.79" y="4207.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="328.8" y="5269" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="331.85" y="5279.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::~PMTopLevelManager() (1 samples, 0.02%)</title><rect x="58.9" y="869" width="0.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="61.87" y="879.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (23 samples, 0.51%)</title><rect x="38.7" y="4741" width="6.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="41.75" y="4751.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="917" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="61.09" y="927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4485" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="137.66" y="4495.5" ></text>
</g>
<g >
<title>`optimizeGlobalsInModule(llvm::Module&amp;, llvm::DataLayout const&amp;, (15 samples, 0.33%)</title><rect x="588.6" y="5685" width="4.0" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="591.63" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.8" y="4709" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="134.79" y="4719.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4165" width="0.3" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="135.31" y="4175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4789" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="137.66" y="4799.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::makeUniqueName(llvm::Value*, llvm::Smal (1 samples, 0.02%)</title><rect x="375.6" y="5333" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="378.63" y="5343.5" ></text>
</g>
<g >
<title>`LATIN_CAPITAL_LETTER_S-FORMAT-DIRECTIVE-EXPANDER^CORE^FN^^ (2 samples, 0.04%)</title><rect x="46.1" y="5029" width="0.5" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="49.07" y="5039.5" ></text>
</g>
<g >
<title>`operator delete(void*) (1 samples, 0.02%)</title><rect x="446.2" y="5653" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="449.19" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="135.2" y="4741" width="1.0" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="138.19" y="4751.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="365.4" y="5349" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="368.44" y="5359.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CVPLatticeFunc::visitCallSite(llvm::Call (1 samples, 0.02%)</title><rect x="705.7" y="5669" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="708.72" y="5679.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2117" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="73.63" y="2127.5" ></text>
</g>
<g >
<title>`cc_makeCell (1 samples, 0.02%)</title><rect x="242.1" y="5557" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="245.08" y="5567.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="85" width="1.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="57.17" y="95.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (5 samples, 0.11%)</title><rect x="547.3" y="5349" width="1.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="550.34" y="5359.5" ></text>
</g>
<g >
<title>`LOAD-IF-COMPILED-CORRECTLY^CLASP-TESTS^FN^^ (2,981 samples, 66.02%)</title><rect x="10.0" y="5925" width="779.1" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="13.00" y="5935.5" >`LOAD-IF-COMPILED-CORRECTLY^CLASP-TESTS^FN^^</text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="409.6" y="5365" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="412.61" y="5375.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::BasicBlock*&gt;::insert(llvm::BasicBlo (1 samples, 0.02%)</title><rect x="683.5" y="5653" width="0.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="686.50" y="5663.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="606.9" y="5589" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="609.93" y="5599.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Function_O&gt; gctools::As&lt;gctools::smart (1 samples, 0.02%)</title><rect x="347.4" y="5269" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="350.40" y="5279.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5525" width="1.1" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="14.31" y="5535.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="59.9" y="3253" width="1.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="62.92" y="3263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4645" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="140.02" y="4655.5" ></text>
</g>
<g >
<title>`MAKE-ENTER-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="149.3" y="5061" width="0.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="152.30" y="5071.5" ></text>
</g>
<g >
<title>`MAKE-LITERAL-NODE-SIDE-EFFECT^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="123.7" y="5525" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="126.69" y="5535.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="176.0" y="5221" width="0.2" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="178.96" y="5231.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout con (1 samples, 0.02%)</title><rect x="576.3" y="5573" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="579.35" y="5583.5" ></text>
</g>
<g >
<title>`CCLASP-COMPILE-IN-ENV^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="57.8" y="1205" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="60.83" y="1215.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4101" width="9.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="17.18" y="4111.5" ></text>
</g>
<g >
<title>`core::cl__gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="369.1" y="5349" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="372.10" y="5359.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="547.6" y="5301" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="550.60" y="5311.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (3 samples, 0.07%)</title><rect x="208.4" y="5461" width="0.7" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="211.37" y="5471.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="51.8" y="3269" width="0.3" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="54.82" y="3279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="3029" width="0.3" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="73.63" y="3039.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="66.5" y="1477" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="69.45" y="1487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="2181" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="65.53" y="2191.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="789" width="1.1" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="59.52" y="799.5" ></text>
</g>
<g >
<title>`FUNCTION-TYPE^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="51.8" y="3429" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="54.82" y="3439.5" ></text>
</g>
<g >
<title>`llvm::SSAUpdater::GetValueInMiddleOfBlock(llvm::BasicBlock*) (1 samples, 0.02%)</title><rect x="598.0" y="5589" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="601.04" y="5599.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="80.8" y="4629" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="83.83" y="4639.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="197.1" y="5605" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="200.13" y="5615.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="79.8" y="3685" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="82.78" y="3695.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="350.8" y="5237" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="353.80" y="5247.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SimplifyCFGOpt::run(llvm::BasicBlock*) (8 samples, 0.18%)</title><rect x="585.0" y="5621" width="2.1" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="587.97" y="5631.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="350.8" y="5205" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="353.80" y="5215.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="59.9" y="3141" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="62.92" y="3151.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="138.6" y="4709" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="141.58" y="4719.5" ></text>
</g>
<g >
<title>`sprintf (1 samples, 0.02%)</title><rect x="244.2" y="5525" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="247.17" y="5535.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="58.9" y="741" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="61.87" y="751.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.9" y="2997" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="73.89" y="3007.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (1 samples, 0.02%)</title><rect x="367.5" y="5301" width="0.3" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="370.53" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="135.2" y="4661" width="0.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="138.19" y="4671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3781" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="132.96" y="3791.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.4" y="2645" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="56.38" y="2655.5" ></text>
</g>
<g >
<title>`simplifyICmpWithConstant(llvm::CmpInst::Predicate, llvm::Value* (1 samples, 0.02%)</title><rect x="570.6" y="5557" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="573.60" y="5567.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="67.5" y="1285" width="0.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="70.50" y="1295.5" ></text>
</g>
<g >
<title>`llvm::LazyBranchProbabilityInfoPass::runOnFunction(llvm::Functi (2 samples, 0.04%)</title><rect x="684.5" y="5669" width="0.6" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="687.55" y="5679.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="79.5" y="3653" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="82.52" y="3663.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (21 samples, 0.47%)</title><rect x="551.0" y="5445" width="5.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="554.00" y="5455.5" ></text>
</g>
<g >
<title>`ENSURE-CLASS-USING-CLASS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.2" y="5701" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="736.16" y="5711.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1813" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="65.79" y="1823.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1541" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="65.53" y="1551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="70.1" y="2693" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="73.11" y="2703.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="677" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="68.93" y="687.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.04%)</title><rect x="202.9" y="5573" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="205.88" y="5583.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="148.0" y="5445" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="150.99" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4309" width="0.3" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="137.14" y="4319.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (2 samples, 0.04%)</title><rect x="432.9" y="5557" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="435.87" y="5567.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(long long) (1 samples, 0.02%)</title><rect x="176.7" y="5477" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="179.74" y="5487.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="965" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="20.58" y="975.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.8" y="1925" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="65.79" y="1935.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (10 samples, 0.22%)</title><rect x="65.4" y="2613" width="2.6" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="68.41" y="2623.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="79.8" y="3781" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="82.78" y="3791.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="2229" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="64.75" y="2239.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="1013" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="68.93" y="1023.5" ></text>
</g>
<g >
<title>`CHECK-MIN/MAX-FORMAT-ARGUMENTS^CORE^FN^^ (1 samples, 0.02%)</title><rect x="48.4" y="5125" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="51.42" y="5135.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2709" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="65.79" y="2719.5" ></text>
</g>
<g >
<title>`COMPILE-WRONG-NUMBER-ARGUMENTS-BLOCK^COMPILER^FN^^ (6 samples, 0.13%)</title><rect x="338.0" y="5253" width="1.6" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="341.00" y="5263.5" ></text>
</g>
<g >
<title>`llvm::APInt::setBits(unsigned int, unsigned int) (1 samples, 0.02%)</title><rect x="512.6" y="5525" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="515.58" y="5535.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.02%)</title><rect x="473.1" y="5509" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="476.11" y="5519.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefBehavior(llvm::Function const*) (1 samples, 0.02%)</title><rect x="542.9" y="5525" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="545.89" y="5535.5" ></text>
</g>
<g >
<title>`runCVP(llvm::Module&amp;) (39 samples, 0.86%)</title><rect x="701.0" y="5701" width="10.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="704.01" y="5711.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (5 samples, 0.11%)</title><rect x="549.7" y="5381" width="1.3" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="552.69" y="5391.5" ></text>
</g>
<g >
<title>`SLOT-DEFINITION-INITARGS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="178.6" y="5573" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="181.57" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4101" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="135.31" y="4111.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5173" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="736.42" y="5183.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="94.9" y="4453" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="97.94" y="4463.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="67.2" y="1317" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="70.24" y="1327.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="74.6" y="3749" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="77.55" y="3759.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="1765" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="68.93" y="1775.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="269.3" y="5493" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="272.26" y="5503.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="70.9" y="3061" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="73.89" y="3071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TYPEQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="162.1" y="5093" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="165.11" y="5103.5" ></text>
</g>
<g >
<title>`MAKE-CATCH-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="157.1" y="5301" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="160.14" y="5311.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="528.3" y="5445" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="531.26" y="5455.5" ></text>
</g>
<g >
<title>`boost::basic_format&lt;char, std::__1::char_traits&lt;char&gt;, std::__1 (1 samples, 0.02%)</title><rect x="376.7" y="5365" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="379.68" y="5375.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="67.5" y="1813" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="70.50" y="1823.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="634.4" y="5589" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="637.37" y="5599.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1,117 samples, 24.74%)</title><rect x="425.8" y="5749" width="291.9" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="428.81" y="5759.5" >`core::SingleDispatchMethodFunction_O::..</text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="125.8" y="5637" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="128.78" y="5647.5" ></text>
</g>
<g >
<title>`getAllocationData(llvm::Value const*, AllocType, llvm::TargetLi (1 samples, 0.02%)</title><rect x="518.6" y="5589" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="521.59" y="5599.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (3 samples, 0.07%)</title><rect x="190.1" y="5525" width="0.8" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="193.07" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="3157" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="73.63" y="3167.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_combine_recursive_helper::combine(u (1 samples, 0.02%)</title><rect x="468.4" y="5509" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="471.41" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="57.6" y="1093" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="60.57" y="1103.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^ (1 samples, 0.02%)</title><rect x="62.5" y="597" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="65.53" y="607.5" ></text>
</g>
<g >
<title>`cc_enclose (4 samples, 0.09%)</title><rect x="75.3" y="3829" width="1.1" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="78.34" y="3839.5" ></text>
</g>
<g >
<title>`GC_mark_from (3 samples, 0.07%)</title><rect x="299.6" y="5189" width="0.8" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="302.58" y="5199.5" ></text>
</g>
<g >
<title>`gctools::initializeBoehm(int (*)(int, char**, bool&amp;, int&amp;, int&amp; (2,981 samples, 66.02%)</title><rect x="10.0" y="6357" width="779.1" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="13.00" y="6367.5" >`gctools::initializeBoehm(int (*)(int, char**, bool&amp;, int&amp;, int&amp;</text>
</g>
<g >
<title>`CONVERT-SPECIAL-BINDING^CLEAVIR-GENERATE-AST^((T T T T T))^METH (27 samples, 0.60%)</title><rect x="16.0" y="3765" width="7.1" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="19.01" y="3775.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LegacyLICMPass::runOnLoop(llvm::Loop*, l (1 samples, 0.02%)</title><rect x="684.0" y="5653" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="687.02" y="5663.5" ></text>
</g>
<g >
<title>`PARSE-DIRECTIVE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="80.8" y="4661" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="83.83" y="4671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="135.2" y="4709" width="0.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="138.19" y="4719.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="283.1" y="5525" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="286.11" y="5535.5" ></text>
</g>
<g >
<title>`llvm::SSAUpdaterImpl&lt;llvm::SSAUpdater&gt;::GetValue(llvm::BasicBlo (1 samples, 0.02%)</title><rect x="598.0" y="5557" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="601.04" y="5567.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (2 samples, 0.04%)</title><rect x="388.7" y="5349" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="391.70" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (1 samples, 0.02%)</title><rect x="97.3" y="3589" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="100.29" y="3599.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (36 samples, 0.80%)</title><rect x="297.2" y="5477" width="9.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="300.22" y="5487.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.02%)</title><rect x="309.0" y="5381" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="311.99" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4213" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="137.93" y="4223.5" ></text>
</g>
<g >
<title>`LITERAL-DNODE-DATUM^LITERAL^FN^^ (2 samples, 0.04%)</title><rect x="121.9" y="5589" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="124.86" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="64.4" y="773" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="67.36" y="783.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="280.0" y="5573" width="0.2" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="282.98" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.6" y="373" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="67.62" y="383.5" ></text>
</g>
<g >
<title>`wrapped_core__cons_length_Cons_sp (1 samples, 0.02%)</title><rect x="155.0" y="5061" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="158.05" y="5071.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.5" y="1333" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="65.53" y="1343.5" ></text>
</g>
<g >
<title>`llvm::LowerDbgDeclare(llvm::Function&amp;) (1 samples, 0.02%)</title><rect x="680.9" y="5637" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="683.89" y="5647.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (3 samples, 0.07%)</title><rect x="299.6" y="5205" width="0.8" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="302.58" y="5215.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="45.3" y="4965" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="48.28" y="4975.5" ></text>
</g>
<g >
<title>`malloc (4 samples, 0.09%)</title><rect x="704.4" y="5605" width="1.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="707.41" y="5615.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getSingleSuccessor() const (1 samples, 0.02%)</title><rect x="696.3" y="5573" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="699.31" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="16.3" y="2357" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="19.27" y="2367.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (3 samples, 0.07%)</title><rect x="36.7" y="4949" width="0.7" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="39.66" y="4959.5" ></text>
</g>
<g >
<title>`POSITION-IF-NOT^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1269" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="24.50" y="1279.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="66.2" y="1397" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="69.19" y="1407.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.04%)</title><rect x="373.8" y="5365" width="0.5" height="15.0" fill="rgb(217,76,76)" rx="2" ry="2" />
<text  x="376.80" y="5375.5" ></text>
</g>
<g >
<title>`OUTPUT-MODULE^COMPILER^FN^^ (56 samples, 1.24%)</title><rect x="717.7" y="5813" width="14.7" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="720.74" y="5823.5" ></text>
</g>
<g >
<title>`client_validate (1 samples, 0.02%)</title><rect x="417.7" y="5509" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="420.71" y="5519.5" ></text>
</g>
<g >
<title>`CLASS-SLOTS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="83.2" y="4469" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="86.18" y="4479.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="163.7" y="4997" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="166.67" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="65.4" y="2117" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="68.41" y="2127.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2197" width="0.2" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="65.27" y="2207.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="191.6" y="5525" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="194.64" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="67.5" y="1717" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="70.50" y="1727.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="66.2" y="2133" width="1.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="69.19" y="2143.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="376.9" y="5413" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="379.94" y="5423.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="193.7" y="5509" width="0.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="196.73" y="5519.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.04%)</title><rect x="321.3" y="5205" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="324.27" y="5215.5" ></text>
</g>
<g >
<title>`TRANSLATE-FUNCALL^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="333.6" y="5109" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="336.55" y="5119.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="380.9" y="5301" width="0.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="383.86" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T CLASP))^METHOD^^ (13 samples, 0.29%)</title><rect x="54.2" y="2917" width="3.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="57.17" y="2927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((VALUES-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4613" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="137.14" y="4623.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="58.3" y="85" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="61.35" y="95.5" ></text>
</g>
<g >
<title>`llvmo::Type_O::getPointerTo(int) (1 samples, 0.02%)</title><rect x="347.1" y="5205" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="350.14" y="5215.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="347.1" y="5237" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="350.14" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.7" y="4373" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="137.66" y="4383.5" ></text>
</g>
<g >
<title>`getCalledFunction(llvm::Value const*, bool, bool&amp;) (1 samples, 0.02%)</title><rect x="568.0" y="5429" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="570.98" y="5439.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="59.7" y="3381" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="62.66" y="3391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (7 samples, 0.16%)</title><rect x="128.7" y="4693" width="1.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="131.65" y="4703.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="53.6" y="2853" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="56.65" y="2863.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.9" y="3285" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="73.89" y="3295.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="376.2" y="5253" width="0.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="379.15" y="5263.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="388.7" y="5301" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="391.70" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (6 samples, 0.13%)</title><rect x="50.0" y="3397" width="1.6" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="52.99" y="3407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (9 samples, 0.20%)</title><rect x="144.3" y="5381" width="2.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="147.33" y="5391.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="213" width="1.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="58.48" y="223.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (1 samples, 0.02%)</title><rect x="25.4" y="3861" width="0.3" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="28.42" y="3871.5" ></text>
</g>
<g >
<title>`INLINE-AST^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="35.9" y="5029" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="38.87" y="5039.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="309" width="1.0" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="58.48" y="319.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (18 samples, 0.40%)</title><rect x="17.3" y="2261" width="4.7" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="20.32" y="2271.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (5 samples, 0.11%)</title><rect x="54.2" y="949" width="1.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="57.17" y="959.5" ></text>
</g>
<g >
<title>0x10d596094 (91 samples, 2.02%)</title><rect x="12.4" y="5429" width="23.7" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="15.35" y="5439.5" >0..</text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (2 samples, 0.04%)</title><rect x="454.0" y="5605" width="0.6" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="457.04" y="5615.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="62.0" y="389" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="65.01" y="399.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="17.6" y="1733" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="20.58" y="1743.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="351.3" y="5221" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="354.32" y="5231.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (1 samples, 0.02%)</title><rect x="145.1" y="4917" width="0.3" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="148.12" y="4927.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::FindKey(llvm::StringRef) const (1 samples, 0.02%)</title><rect x="719.6" y="5589" width="0.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="722.57" y="5599.5" ></text>
</g>
<g >
<title>`llvm::LoopInfoWrapperPass* llvm::Pass::getAnalysisIfAvailable&lt;l (1 samples, 0.02%)</title><rect x="458.2" y="5653" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="461.22" y="5663.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="997" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="20.58" y="1007.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="720.6" y="5605" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="723.61" y="5615.5" ></text>
</g>
<g >
<title>`wrapped_DILocation_O__make_llvm__LLVMContext___________________ (2 samples, 0.04%)</title><rect x="291.5" y="5397" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="294.48" y="5407.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.04%)</title><rect x="326.0" y="5253" width="0.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="328.97" y="5263.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="981" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="62.13" y="991.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="14.2" y="3573" width="1.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="17.18" y="3583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.1" y="4661" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="141.06" y="4671.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="4117" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="100.29" y="4127.5" ></text>
</g>
<g >
<title>0x10d596094 (55 samples, 1.22%)</title><rect x="81.3" y="4645" width="14.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="84.35" y="4655.5" ></text>
</g>
<g >
<title>`SUCCESSORS^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="180.1" y="5589" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="183.14" y="5599.5" ></text>
</g>
<g >
<title>`__ultoa (1 samples, 0.02%)</title><rect x="96.8" y="5013" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="99.77" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5333" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="130.35" y="5343.5" ></text>
</g>
<g >
<title>`int llvm::ScaledNumbers::compare&lt;unsigned long long&gt;(unsigned l (1 samples, 0.02%)</title><rect x="601.4" y="5637" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="604.44" y="5647.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2101" width="0.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="65.79" y="2111.5" ></text>
</g>
<g >
<title>`llvm::IRBuilderBase::SetInsertPoint(llvm::Instruction*) (2 samples, 0.04%)</title><rect x="632.3" y="5621" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="635.28" y="5631.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (1 samples, 0.02%)</title><rect x="189.8" y="5525" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="192.81" y="5535.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (22 samples, 0.49%)</title><rect x="38.7" y="4661" width="5.8" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="41.75" y="4671.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; c (1 samples, 0.02%)</title><rect x="686.9" y="5621" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="689.90" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (2 samples, 0.04%)</title><rect x="78.7" y="3605" width="0.6" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="81.74" y="3615.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (6 samples, 0.13%)</title><rect x="641.7" y="5557" width="1.6" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="644.69" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="146.9" y="5413" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="149.95" y="5423.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="324.7" y="5205" width="0.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="327.67" y="5215.5" ></text>
</g>
<g >
<title>`free_tiny (2 samples, 0.04%)</title><rect x="593.3" y="5621" width="0.6" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="596.34" y="5631.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (1 samples, 0.02%)</title><rect x="120.6" y="5413" width="0.2" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="123.55" y="5423.5" ></text>
</g>
<g >
<title>`void llvm::SmallVectorImpl&lt;llvm::Value*&gt;::append&lt;llvm::Use*, vo (1 samples, 0.02%)</title><rect x="597.3" y="5605" width="0.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="600.26" y="5615.5" ></text>
</g>
<g >
<title>`wrapped_llvm_sys__FunctionCreate_FunctionType_spllvm__GlobalVal (3 samples, 0.07%)</title><rect x="375.4" y="5397" width="0.8" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="378.37" y="5407.5" ></text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (1 samples, 0.02%)</title><rect x="26.5" y="4517" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="29.47" y="4527.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="24.6" y="3557" width="0.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="27.64" y="3567.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (4 samples, 0.09%)</title><rect x="210.5" y="5477" width="1.0" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="213.46" y="5487.5" ></text>
</g>
<g >
<title>`llvm::Type::isSized(llvm::SmallPtrSetImpl&lt;llvm::Type*&gt;*) const (1 samples, 0.02%)</title><rect x="511.8" y="5509" width="0.3" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="514.79" y="5519.5" ></text>
</g>
<g >
<title>`MAKE-DATUM^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="371.4" y="5333" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="374.45" y="5343.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="288.9" y="5493" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="291.86" y="5503.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInsertValue(llvm::Value*, llvm::Value (1 samples, 0.02%)</title><rect x="332.2" y="4981" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="335.25" y="4991.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (20 samples, 0.44%)</title><rect x="16.8" y="2549" width="5.2" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="19.80" y="2559.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (3 samples, 0.07%)</title><rect x="323.4" y="5125" width="0.7" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="326.36" y="5135.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="314.0" y="5317" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="316.95" y="5327.5" ></text>
</g>
<g >
<title>`core::core__get_sysprop(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.02%)</title><rect x="35.9" y="5013" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="38.87" y="5023.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="66.2" y="2293" width="1.8" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="69.19" y="2303.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (6 samples, 0.13%)</title><rect x="57.8" y="1621" width="1.6" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="60.83" y="1631.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="168.6" y="4901" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="171.64" y="4911.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="17.3" y="1733" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="20.32" y="1743.5" ></text>
</g>
<g >
<title>`core::bind_optional_va_list(gctools::Vec0&lt;core::OptionalArgumen (1 samples, 0.02%)</title><rect x="363.9" y="5237" width="0.2" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="366.87" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.4" y="2181" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="68.41" y="2191.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="58.3" y="949" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="61.35" y="959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4133" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="135.31" y="4143.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="23.1" y="3557" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="26.07" y="3567.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="60.4" y="2709" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="63.44" y="2719.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="1973" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="64.22" y="1983.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="2901" width="2.6" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="68.41" y="2911.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (58 samples, 1.28%)</title><rect x="793.3" y="6309" width="15.1" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="796.27" y="6319.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="102.8" y="5589" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="105.78" y="5599.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.7" y="2789" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="64.75" y="2799.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-SIZE_T^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="368.8" y="5397" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="371.83" y="5407.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (1 samples, 0.02%)</title><rect x="513.9" y="5573" width="0.2" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="516.88" y="5583.5" ></text>
</g>
<g >
<title>`IRC-BEGIN-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="395.2" y="5285" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="398.23" y="5295.5" ></text>
</g>
<g >
<title>`boost::basic_format&lt;char, std::__1::char_traits&lt;char&gt;, std::__1 (2 samples, 0.04%)</title><rect x="382.9" y="5365" width="0.6" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="385.95" y="5375.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="533" width="1.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="59.52" y="543.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (8 samples, 0.18%)</title><rect x="301.9" y="5429" width="2.1" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="304.93" y="5439.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4949" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="736.42" y="4959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4453" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="139.23" y="4463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4613" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="141.85" y="4623.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::isGEPBaseAtNegativeOffset(llvm::GEPOperato (1 samples, 0.02%)</title><rect x="556.5" y="5445" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="559.49" y="5455.5" ></text>
</g>
<g >
<title>`std::__1::enable_if&lt;is_hashable_data&lt;llvm::Metadata* const&gt;::va (1 samples, 0.02%)</title><rect x="352.4" y="5109" width="0.2" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="355.37" y="5119.5" ></text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (1 samples, 0.02%)</title><rect x="476.3" y="5493" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="479.25" y="5503.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="63.8" y="2117" width="1.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="66.84" y="2127.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="1045" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="61.09" y="1055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (85 samples, 1.88%)</title><rect x="152.2" y="5477" width="22.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="155.17" y="5487.5" >`..</text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="38.0" y="4677" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="40.96" y="4687.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (34 samples, 0.75%)</title><rect x="14.2" y="3845" width="8.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="17.18" y="3855.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (2 samples, 0.04%)</title><rect x="132.6" y="4677" width="0.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="135.57" y="4687.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="186.2" y="5557" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="189.15" y="5567.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="23.6" y="4629" width="1.0" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="26.59" y="4639.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (6 samples, 0.13%)</title><rect x="50.0" y="3365" width="1.6" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="52.99" y="3375.5" ></text>
</g>
<g >
<title>`ERROR^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="735.8" y="5653" width="1.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="738.77" y="5663.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="333.3" y="5029" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="336.29" y="5039.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="5381" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="100.29" y="5391.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (4 samples, 0.09%)</title><rect x="234.5" y="5413" width="1.0" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="237.50" y="5423.5" ></text>
</g>
<g >
<title>`core::bind_optional_va_list(gctools::Vec0&lt;core::OptionalArgumen (2 samples, 0.04%)</title><rect x="419.8" y="5493" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="422.80" y="5503.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (2 samples, 0.04%)</title><rect x="626.3" y="5477" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="629.27" y="5487.5" ></text>
</g>
<g >
<title>`get_index (1 samples, 0.02%)</title><rect x="225.1" y="5381" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="228.09" y="5391.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (3 samples, 0.07%)</title><rect x="651.4" y="5525" width="0.7" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="654.36" y="5535.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeAllocSize(llvm::Type*) const (1 samples, 0.02%)</title><rect x="494.0" y="5461" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="497.02" y="5471.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="65.7" y="2005" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="68.67" y="2015.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (2 samples, 0.04%)</title><rect x="15.5" y="3461" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="18.49" y="3471.5" ></text>
</g>
<g >
<title>`%INTRINSIC-CALL^CLASP-CLEAVIR^FN^^ (5 samples, 0.11%)</title><rect x="323.1" y="5269" width="1.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="326.10" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="62.5" y="3093" width="0.6" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="65.53" y="3103.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::intersectAssumeOrGuar (2 samples, 0.04%)</title><rect x="434.2" y="5621" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="437.17" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4021" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="139.76" y="4031.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((HEADERQ-INSTRUCTIO (7 samples, 0.16%)</title><rect x="293.3" y="5461" width="1.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="296.30" y="5471.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::apint_match::match&lt;llvm::Value const&gt;( (1 samples, 0.02%)</title><rect x="509.4" y="5557" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="512.44" y="5567.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldGetElementPtr(llvm::Type*, llvm::Constant*, b (1 samples, 0.02%)</title><rect x="405.9" y="5333" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="408.95" y="5343.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.04%)</title><rect x="197.4" y="5573" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="200.39" y="5583.5" ></text>
</g>
<g >
<title>`POSITION^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2469" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="17.70" y="2479.5" ></text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE T (1 samples, 0.02%)</title><rect x="24.4" y="3941" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="27.37" y="3951.5" ></text>
</g>
<g >
<title>`core::core__cons_length(gctools::smart_ptr&lt;core::Cons_O&gt;) (1 samples, 0.02%)</title><rect x="144.6" y="5253" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="147.60" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="4341" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="100.29" y="4351.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.02%)</title><rect x="227.4" y="5525" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="230.44" y="5535.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::AnalyzeCallGraph(llvm::CallGraph&amp;, llvm: (1 samples, 0.02%)</title><rect x="700.5" y="5669" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="703.49" y="5679.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="341.7" y="5109" width="0.2" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="344.65" y="5119.5" ></text>
</g>
<g >
<title>`llvm::ConstantRange::isEmptySet() const (1 samples, 0.02%)</title><rect x="695.8" y="5573" width="0.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="698.79" y="5583.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1573" width="1.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="57.17" y="1583.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="150.9" y="5125" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="153.87" y="5135.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4309" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="138.19" y="4319.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="58.3" y="997" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="61.35" y="1007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4405" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="137.14" y="4415.5" ></text>
</g>
<g >
<title>`llvm::isAllocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo (2 samples, 0.04%)</title><rect x="599.1" y="5637" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="602.09" y="5647.5" ></text>
</g>
<g >
<title>0x10d596094 (8 samples, 0.18%)</title><rect x="78.5" y="4117" width="2.1" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="81.47" y="4127.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::removeDeadPasses(llvm::Pass*, llvm::String (14 samples, 0.31%)</title><rect x="688.2" y="5669" width="3.7" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="691.21" y="5679.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::EarlyCSELegacyCommonPass&lt;true&gt;::runOnFun (29 samples, 0.64%)</title><rect x="438.9" y="5669" width="7.6" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="441.88" y="5679.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2005" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="64.75" y="2015.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="1781" width="0.3" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="73.63" y="1791.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1141" width="1.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="58.48" y="1151.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (4 samples, 0.09%)</title><rect x="55.5" y="1157" width="1.0" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="58.48" y="1167.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.1" y="1045" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="67.10" y="1055.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="165.2" y="5013" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="168.24" y="5023.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="38.0" y="4741" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="40.96" y="4751.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="735.0" y="5493" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="737.99" y="5503.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-UINTPTR_T^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="295.1" y="5429" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="298.13" y="5439.5" ></text>
</g>
<g >
<title>`llvm::APInt::operator*(llvm::APInt const&amp;) const (1 samples, 0.02%)</title><rect x="554.7" y="5349" width="0.2" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="557.66" y="5359.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="51.8" y="3589" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="54.82" y="3599.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="455.9" y="5605" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="458.86" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4421" width="0.3" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="141.85" y="4431.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::TailCallElim::runOnFunction(llvm::Functi (1 samples, 0.02%)</title><rect x="450.1" y="5669" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="453.12" y="5679.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="41.9" y="4293" width="0.2" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="44.88" y="4303.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (57 samples, 1.26%)</title><rect x="128.4" y="5205" width="14.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="131.39" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1381" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="68.93" y="1391.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="455.6" y="5605" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="458.60" y="5615.5" ></text>
</g>
<g >
<title>`llvm::APInt::clearUnusedBits() (1 samples, 0.02%)</title><rect x="431.3" y="5541" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="434.30" y="5551.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (3 samples, 0.07%)</title><rect x="182.0" y="5525" width="0.8" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="184.97" y="5535.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getTerminator() const (1 samples, 0.02%)</title><rect x="601.7" y="5573" width="0.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="604.70" y="5583.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="44.5" y="4469" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="47.50" y="4479.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::Metadata*, llvm::MetadataAsVal (1 samples, 0.02%)</title><rect x="360.5" y="5301" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="363.47" y="5311.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="901" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="61.09" y="911.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.6" y="5429" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="100.55" y="5439.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="233.7" y="5557" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="236.72" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((RETURN-FROM-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4037" width="0.2" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="138.19" y="4047.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="345.3" y="5269" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="348.31" y="5279.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="23.9" y="3813" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="26.85" y="3823.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="68.8" y="2165" width="0.3" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="71.80" y="2175.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (4 samples, 0.09%)</title><rect x="238.4" y="5477" width="1.1" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="241.42" y="5487.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="143.3" y="5173" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="146.29" y="5183.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;std::__1::pair&lt;llvm::BasicBlock*, llvm (1 samples, 0.02%)</title><rect x="686.1" y="5557" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="689.12" y="5567.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="340.9" y="5061" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="343.87" y="5071.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((SAVE-FRAME-INSTRUC (1 samples, 0.02%)</title><rect x="354.7" y="5301" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="357.72" y="5311.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="409.6" y="5429" width="0.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="412.61" y="5439.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.02%)</title><rect x="630.7" y="5589" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="633.71" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="4069" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="131.65" y="4079.5" ></text>
</g>
<g >
<title>`llvm::Loop::isRecursivelyLCSSAForm(llvm::DominatorTree&amp;, llvm:: (1 samples, 0.02%)</title><rect x="523.3" y="5653" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="526.29" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.04%)</title><rect x="134.7" y="4629" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="137.66" y="4639.5" ></text>
</g>
<g >
<title>`core::LambdaListHandler_O::createBindingsInScopeVaList(unsigned (2 samples, 0.04%)</title><rect x="372.0" y="5333" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="374.97" y="5343.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4869" width="0.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="736.42" y="4879.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="437" width="1.1" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="59.52" y="447.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="425.5" y="5749" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="428.55" y="5759.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1205" width="1.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="59.52" y="1215.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="3045" width="2.6" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="68.41" y="3055.5" ></text>
</g>
<g >
<title>`ASSERT-CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="144.6" y="5269" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="147.60" y="5279.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (6 samples, 0.13%)</title><rect x="282.6" y="5605" width="1.6" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="285.59" y="5615.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (2 samples, 0.04%)</title><rect x="139.9" y="5061" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="142.89" y="5071.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::~PMDataManager() (1 samples, 0.02%)</title><rect x="58.9" y="789" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="61.87" y="799.5" ></text>
</g>
<g >
<title>`OPTIMIZED-LEXICAL-AST-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="21.2" y="1701" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="24.24" y="1711.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((LEXICAL-VARIABLE-INFO T T T (1 samples, 0.02%)</title><rect x="62.5" y="1477" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="65.53" y="1487.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1061" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="65.53" y="1071.5" ></text>
</g>
<g >
<title>`PROCESS-OPTIONALS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="3237" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="73.11" y="3247.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignment(llvm::Type*, bool) const (1 samples, 0.02%)</title><rect x="443.3" y="5573" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="446.32" y="5583.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm::Str (1 samples, 0.02%)</title><rect x="337.2" y="5061" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="340.21" y="5071.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="60.7" y="2917" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="63.70" y="2927.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (9 samples, 0.20%)</title><rect x="195.6" y="5621" width="2.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="198.56" y="5631.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::addAttributes(llvm::LLVMContext&amp;, unsigned (1 samples, 0.02%)</title><rect x="734.2" y="5333" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="737.20" y="5343.5" ></text>
</g>
<g >
<title>`llvm::MemorySSA::createNewAccess(llvm::Instruction*) (5 samples, 0.11%)</title><rect x="530.1" y="5621" width="1.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="533.09" y="5631.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.02%)</title><rect x="445.1" y="5605" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="448.15" y="5615.5" ></text>
</g>
<g >
<title>`EXPAND-CONTROL-STRING^CORE^FN^^ (1 samples, 0.02%)</title><rect x="80.6" y="4677" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="83.56" y="4687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4629" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="139.76" y="4639.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.3" y="1269" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="65.27" y="1279.5" ></text>
</g>
<g >
<title>`llvm::BranchProbabilityInfo::calcZeroHeuristics(llvm::BasicBloc (1 samples, 0.02%)</title><rect x="602.5" y="5637" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="605.48" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="3877" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="131.91" y="3887.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (4 samples, 0.09%)</title><rect x="559.1" y="5429" width="1.0" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="562.10" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4069" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="137.93" y="4079.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="68.0" y="2437" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="71.02" y="2447.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (27 samples, 0.60%)</title><rect x="16.0" y="3813" width="7.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="19.01" y="3823.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (6 samples, 0.13%)</title><rect x="57.8" y="1589" width="1.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="60.83" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4949" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="140.02" y="4959.5" ></text>
</g>
<g >
<title>`llvm::VNCoercion::analyzeLoadFromClobberingWrite(llvm::Type*, l (1 samples, 0.02%)</title><rect x="562.0" y="5541" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="564.97" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.1" y="4533" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="141.06" y="4543.5" ></text>
</g>
<g >
<title>`CALCULATE-FASTGF-DISPATCH-FUNCTION^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="735.8" y="5493" width="1.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="738.77" y="5503.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="11.8" y="4469" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="14.83" y="4479.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="537.7" y="5477" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="540.67" y="5487.5" ></text>
</g>
<g >
<title>`IRC-BIT-CAST^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="328.8" y="5285" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="331.85" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'CLEAVIR-PRIMOP:F (1 samples, 0.02%)</title><rect x="97.3" y="3173" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="100.29" y="3183.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.9" y="3333" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="73.89" y="3343.5" ></text>
</g>
<g >
<title>`void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl&lt;unsigned l (1 samples, 0.02%)</title><rect x="721.9" y="5637" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="724.92" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="61.7" y="2837" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="64.75" y="2847.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="566.4" y="5349" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="569.42" y="5359.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="229" width="1.3" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="57.17" y="239.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (2,764 samples, 61.22%)</title><rect x="10.0" y="5877" width="722.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="13.00" y="5887.5" >`DO-COMPILATION-UNIT^COMPILER^FN^^</text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::Instruction&gt;, llvm:: (1 samples, 0.02%)</title><rect x="445.7" y="5637" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="448.67" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="67.2" y="1653" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="70.24" y="1663.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="18.9" y="1877" width="0.2" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="21.89" y="1887.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.02%)</title><rect x="556.0" y="5397" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="558.96" y="5407.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="351.1" y="5109" width="0.2" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="354.06" y="5119.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="189.3" y="5461" width="0.2" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="192.29" y="5471.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::BasicBlock*&gt;::insert(llvm::BasicBlo (1 samples, 0.02%)</title><rect x="524.9" y="5605" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="527.86" y="5615.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="528.8" y="5493" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="531.78" y="5503.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="60.7" y="2677" width="0.3" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="63.70" y="2687.5" ></text>
</g>
<g >
<title>`runIPSCCP(llvm::Module&amp;, llvm::DataLayout const&amp;, llvm::TargetL (25 samples, 0.55%)</title><rect x="711.2" y="5701" width="6.5" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="714.20" y="5711.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CorrelatedValuePropagation::runOnFunctio (34 samples, 0.75%)</title><rect x="430.0" y="5669" width="8.9" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="432.99" y="5679.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.1" y="2229" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="20.06" y="2239.5" ></text>
</g>
<g >
<title>`SUBSTITUTE-OUTPUT^CLEAVIR-IR^FN^^ (2 samples, 0.04%)</title><rect x="244.7" y="5589" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="247.69" y="5599.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="149.3" y="4949" width="0.3" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="152.30" y="4959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4693" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="136.36" y="4703.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="55.5" y="1557" width="1.0" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="58.48" y="1567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4821" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="136.62" y="4831.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="72.7" y="4757" width="0.5" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="75.72" y="4767.5" ></text>
</g>
<g >
<title>`OPTIMIZED-FIXNUMP-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (2 samples, 0.04%)</title><rect x="258.3" y="5509" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="261.28" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (25 samples, 0.55%)</title><rect x="16.3" y="2869" width="6.5" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="19.27" y="2879.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="75.1" y="3797" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="78.08" y="3807.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::AggressiveDeadCodeElimination::collectLi (1 samples, 0.02%)</title><rect x="428.9" y="5621" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="431.95" y="5631.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (10 samples, 0.22%)</title><rect x="74.6" y="4085" width="2.6" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="77.55" y="4095.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="652.4" y="5541" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="655.40" y="5551.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="264.3" y="5557" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="267.29" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4005" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="137.14" y="4015.5" ></text>
</g>
<g >
<title>`OF-CLASS-P^CORE^FN^^ (1 samples, 0.02%)</title><rect x="65.7" y="1781" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="68.67" y="1791.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::getEdgeValue(llvm::Va (1 samples, 0.02%)</title><rect x="432.1" y="5573" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="435.08" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4597" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="136.36" y="4607.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="463.2" y="5637" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="466.18" y="5647.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (32 samples, 0.71%)</title><rect x="86.6" y="4533" width="8.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="89.58" y="4543.5" ></text>
</g>
<g >
<title>`boost::io::basic_oaltstringstream&lt;char, std::__1::char_traits&lt;c (1 samples, 0.02%)</title><rect x="420.8" y="5509" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="423.84" y="5519.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (3 samples, 0.07%)</title><rect x="299.6" y="5269" width="0.8" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="302.58" y="5279.5" ></text>
</g>
<g >
<title>`PRIMITIVE-VARARGS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="339.3" y="5205" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="342.30" y="5215.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::MemoryLocOrCall::MemoryLocOrCall(llvm::I (1 samples, 0.02%)</title><rect x="525.6" y="5605" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="528.65" y="5615.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="256.2" y="5541" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="259.19" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (3 samples, 0.07%)</title><rect x="50.8" y="2981" width="0.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="53.77" y="2991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (51 samples, 1.13%)</title><rect x="159.5" y="5349" width="13.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="162.49" y="5359.5" ></text>
</g>
<g >
<title>`llvm::BitcodeWriter::writeModule(llvm::Module const*, bool, llv (30 samples, 0.66%)</title><rect x="721.4" y="5701" width="7.8" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="724.40" y="5711.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.8" y="1893" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="65.79" y="1903.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="55.5" y="1637" width="1.0" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="58.48" y="1647.5" ></text>
</g>
<g >
<title>`llvm::Value::getValueName() const (1 samples, 0.02%)</title><rect x="731.1" y="5637" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="734.07" y="5647.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp_big(void const*) (1 samples, 0.02%)</title><rect x="568.2" y="5477" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="571.25" y="5487.5" ></text>
</g>
<g >
<title>`OUT^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="347.7" y="5285" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="350.67" y="5295.5" ></text>
</g>
<g >
<title>`PROCESS-AUX^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4869" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="100.29" y="4879.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="137.3" y="4517" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="140.28" y="4527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="151.4" y="5285" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="154.39" y="5295.5" ></text>
</g>
<g >
<title>`core::core__enum_logical_or(gctools::smart_ptr&lt;core::SymbolToEn (1 samples, 0.02%)</title><rect x="418.5" y="5541" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="421.49" y="5551.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.02%)</title><rect x="469.7" y="5621" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="472.72" y="5631.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2725" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="65.27" y="2735.5" ></text>
</g>
<g >
<title>`core::cl__find_package(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="17.1" y="2005" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="20.06" y="2015.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.02%)</title><rect x="652.7" y="5573" width="0.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="655.66" y="5583.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5413" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="713.94" y="5423.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;std::__1::pair&lt;llvm::BasicBlock*, llvm::T (1 samples, 0.02%)</title><rect x="537.7" y="5573" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="540.67" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="23.6" y="4197" width="1.0" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="26.59" y="4207.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="64.6" y="437" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="67.62" y="447.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="401.0" y="5269" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="403.98" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="64.1" y="1733" width="1.0" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="67.10" y="1743.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::StrWNs_O&gt; gctools::GCObjectAppropriate (1 samples, 0.02%)</title><rect x="13.9" y="4981" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="16.92" y="4991.5" ></text>
</g>
<g >
<title>`llvm::generic_gep_type_iterator&lt;llvm::Use const*&gt;::operator+ (1 samples, 0.02%)</title><rect x="670.2" y="5493" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="673.17" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="168.6" y="4933" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="171.64" y="4943.5" ></text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::getNumTota (1 samples, 0.02%)</title><rect x="566.4" y="5301" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="569.42" y="5311.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.02%)</title><rect x="559.6" y="5365" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="562.62" y="5375.5" ></text>
</g>
<g >
<title>`pthread_cond_broadcast (1 samples, 0.02%)</title><rect x="294.1" y="5349" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="297.09" y="5359.5" ></text>
</g>
<g >
<title>`GC_mark_local (3 samples, 0.07%)</title><rect x="396.8" y="5189" width="0.8" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="399.80" y="5199.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (3 samples, 0.07%)</title><rect x="75.3" y="3669" width="0.8" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="78.34" y="3679.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="218.8" y="5557" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="221.82" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="1061" width="1.0" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="58.48" y="1071.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (3 samples, 0.07%)</title><rect x="36.7" y="4821" width="0.7" height="15.0" fill="rgb(248,121,121)" rx="2" ry="2" />
<text  x="39.66" y="4831.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2917" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="65.53" y="2927.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (83 samples, 1.84%)</title><rect x="49.7" y="4037" width="21.7" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="52.73" y="4047.5" >`..</text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="276.6" y="5493" width="0.2" height="15.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="279.58" y="5503.5" ></text>
</g>
<g >
<title>`GC_mark_local (3 samples, 0.07%)</title><rect x="47.4" y="4837" width="0.8" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="50.37" y="4847.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4645" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="139.23" y="4655.5" ></text>
</g>
<g >
<title>`llvm::PointerType::get(llvm::Type*, unsigned int) (1 samples, 0.02%)</title><rect x="552.0" y="5285" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="555.04" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4565" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="136.62" y="4575.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="141.5" y="5013" width="0.2" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="144.46" y="5023.5" ></text>
</g>
<g >
<title>`llvm::TrackingMDRef::operator=(llvm::TrackingMDRef&amp;&amp;) (1 samples, 0.02%)</title><rect x="412.0" y="5269" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="414.96" y="5279.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.02%)</title><rect x="696.0" y="5589" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="699.05" y="5599.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="154.3" y="5189" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="157.27" y="5199.5" ></text>
</g>
<g >
<title>`llvm::SimplifyCall(llvm::ImmutableCallSite, llvm::SimplifyQuery (2 samples, 0.04%)</title><rect x="644.3" y="5605" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="647.30" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (26 samples, 0.58%)</title><rect x="16.3" y="3445" width="6.8" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="19.27" y="3455.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;clang::ast_matchers::dynamic::ArgKind, std::__ (1 samples, 0.02%)</title><rect x="694.5" y="5621" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="697.48" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="4997" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="130.35" y="5007.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::BasicBlock const*, std::__1::alloca (1 samples, 0.02%)</title><rect x="603.3" y="5573" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="606.27" y="5583.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (1 samples, 0.02%)</title><rect x="182.2" y="5333" width="0.3" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="185.23" y="5343.5" ></text>
</g>
<g >
<title>`PROCESS-AUX^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2997" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="17.70" y="3007.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="3061" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="62.40" y="3071.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (10 samples, 0.22%)</title><rect x="65.4" y="2709" width="2.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="68.41" y="2719.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (9 samples, 0.20%)</title><rect x="546.8" y="5365" width="2.4" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="549.82" y="5375.5" ></text>
</g>
<g >
<title>`ADD-ENTRY^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.0" y="5381" width="0.2" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="737.99" y="5391.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.04%)</title><rect x="184.3" y="5589" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="187.32" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4869" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="140.02" y="4879.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="326.2" y="5237" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="329.23" y="5247.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (11 samples, 0.24%)</title><rect x="611.4" y="5589" width="2.8" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="614.37" y="5599.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (10 samples, 0.22%)</title><rect x="546.6" y="5413" width="2.6" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="549.55" y="5423.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::makeUniqueName(llvm::Value*, llvm::Smal (1 samples, 0.02%)</title><rect x="346.4" y="5109" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="349.36" y="5119.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="39.3" y="4101" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="42.27" y="4111.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2821" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="17.70" y="2831.5" ></text>
</g>
<g >
<title>`CHECK-SPECIAL-FORM-SYNTAX^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T (1 samples, 0.02%)</title><rect x="36.4" y="5029" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="39.40" y="5039.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.02%)</title><rect x="493.8" y="5445" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="496.76" y="5455.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="69.6" y="2389" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="72.59" y="2399.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="59.4" y="2741" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="62.40" y="2751.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4757" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="137.66" y="4767.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2725" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="64.75" y="2735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="4053" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="131.91" y="4063.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="58.3" y="421" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="61.35" y="431.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CFGSimplifyPass::runOnFunction(llvm::Fun (1 samples, 0.02%)</title><rect x="594.1" y="5669" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="597.12" y="5679.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2245" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="65.01" y="2255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4677" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="140.02" y="4687.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="208.4" y="5365" width="0.2" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="211.37" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="24.6" y="4197" width="1.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="27.64" y="4207.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="156.9" y="5221" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="159.88" y="5231.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (4 samples, 0.09%)</title><rect x="164.2" y="5013" width="1.0" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="167.20" y="5023.5" ></text>
</g>
<g >
<title>`core::LambdaListHandler_O::createBindingsInScopeVaList(unsigned (1 samples, 0.02%)</title><rect x="398.4" y="5317" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="401.37" y="5327.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="351.1" y="5093" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="354.06" y="5103.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="530.3" y="5557" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="533.35" y="5567.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="68.0" y="3093" width="1.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="71.02" y="3103.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2693" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="65.27" y="2703.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="69.8" y="2853" width="0.3" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="72.85" y="2863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="127.3" y="4917" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="130.35" y="4927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4277" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="138.45" y="4287.5" ></text>
</g>
<g >
<title>`GC_mark_local (1 samples, 0.02%)</title><rect x="66.7" y="1445" width="0.3" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="69.71" y="1455.5" ></text>
</g>
<g >
<title>`LANDING-PAD^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="345.6" y="5269" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="348.57" y="5279.5" ></text>
</g>
<g >
<title>`cc_makeCell (1 samples, 0.02%)</title><rect x="96.0" y="4853" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="98.98" y="4863.5" ></text>
</g>
<g >
<title>`llvm::FindFunctionBackedges(llvm::Function const&amp;, llvm::SmallV (1 samples, 0.02%)</title><rect x="694.7" y="5637" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="697.74" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.8" y="5429" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="180.79" y="5439.5" ></text>
</g>
<g >
<title>`__v2printf (1 samples, 0.02%)</title><rect x="139.4" y="4981" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="142.37" y="4991.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL-BINDING^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="78.7" y="3877" width="1.6" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="81.74" y="3887.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="129.7" y="4085" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="132.70" y="4095.5" ></text>
</g>
<g >
<title>`IRC-ICMP-EQ^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="292.3" y="5445" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="295.26" y="5455.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (1 samples, 0.02%)</title><rect x="493.2" y="5477" width="0.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="496.24" y="5487.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="67.5" y="1877" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="70.50" y="1887.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (1 samples, 0.02%)</title><rect x="62.5" y="1509" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="65.53" y="1519.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="689.5" y="5573" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="692.51" y="5583.5" ></text>
</g>
<g >
<title>`cc_stack_enclose (1 samples, 0.02%)</title><rect x="13.1" y="4421" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="16.14" y="4431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (17 samples, 0.38%)</title><rect x="132.6" y="4981" width="4.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="135.57" y="4991.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.02%)</title><rect x="266.9" y="5573" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="269.91" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (30 samples, 0.66%)</title><rect x="27.5" y="4661" width="7.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="30.51" y="4671.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (1 samples, 0.02%)</title><rect x="449.6" y="5461" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="452.59" y="5471.5" ></text>
</g>
<g >
<title>`core::Cache_O::vector_hash_key(gctools::Vec0&lt;gctools::smart_ptr (1 samples, 0.02%)</title><rect x="382.2" y="5413" width="0.2" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="385.16" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4661" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="141.85" y="4671.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (7 samples, 0.16%)</title><rect x="66.2" y="2101" width="1.8" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="69.19" y="2111.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="3797" width="0.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="131.65" y="3807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.20%)</title><rect x="144.3" y="5365" width="2.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="147.33" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.5" y="5381" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="180.53" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="70.6" y="1845" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="73.63" y="1855.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="408.8" y="5461" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="411.82" y="5471.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="252.5" y="5301" width="0.3" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="255.53" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (326 samples, 7.22%)</title><rect x="12.4" y="5573" width="85.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="15.35" y="5583.5" >`CONVERT-F..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.6" y="69" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="67.62" y="79.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="33.0" y="4341" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="36.00" y="4351.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="34.3" y="4421" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="37.31" y="4431.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (2 samples, 0.04%)</title><rect x="25.2" y="3989" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="28.16" y="3999.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2629" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="17.70" y="2639.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="192.9" y="5509" width="0.3" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="195.95" y="5519.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="74.6" y="3781" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="77.55" y="3791.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LOCALLY) T T T)) (1 samples, 0.02%)</title><rect x="57.6" y="1605" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="60.57" y="1615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="62.5" y="3189" width="0.6" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="65.53" y="3199.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (16 samples, 0.35%)</title><rect x="128.4" y="4981" width="4.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="131.39" y="4991.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="16.3" y="1973" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="19.27" y="1983.5" ></text>
</g>
<g >
<title>`HASH-EQL^CORE^FN^^ (1 samples, 0.02%)</title><rect x="41.1" y="4309" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="44.10" y="4319.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="55.5" y="245" width="1.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="58.48" y="255.5" ></text>
</g>
<g >
<title>`MAKE-CONDITION^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5605" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="736.42" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (44 samples, 0.97%)</title><rect x="159.8" y="5157" width="11.5" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="162.75" y="5167.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (2 samples, 0.04%)</title><rect x="436.8" y="5541" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="439.79" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2709" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="65.53" y="2719.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="186.4" y="5461" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="189.41" y="5471.5" ></text>
</g>
<g >
<title>`ALLOCA-SIZE_T^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="314.0" y="5365" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="316.95" y="5375.5" ></text>
</g>
<g >
<title>`wrapped_core__bformat_T_spconst_string__List_sp (5 samples, 0.11%)</title><rect x="382.9" y="5397" width="1.4" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="385.95" y="5407.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="623.9" y="5557" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="626.91" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="141.7" y="4965" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="144.72" y="4975.5" ></text>
</g>
<g >
<title>`int boost::io::detail::upper_bound_from_fstring&lt;std::__1::basic (1 samples, 0.02%)</title><rect x="382.9" y="5333" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="385.95" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (21 samples, 0.47%)</title><rect x="38.7" y="4485" width="5.5" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="41.75" y="4495.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="4293" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="100.29" y="4303.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="23.1" y="3861" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="26.07" y="3871.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="869" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="68.93" y="879.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::SCEV const*, llvm::Smal (1 samples, 0.02%)</title><rect x="535.6" y="5589" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="538.58" y="5599.5" ></text>
</g>
<g >
<title>`llvm::wouldInstructionBeTriviallyDead(llvm::Instruction*, llvm: (1 samples, 0.02%)</title><rect x="594.9" y="5621" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="597.90" y="5631.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (2 samples, 0.04%)</title><rect x="273.4" y="5573" width="0.6" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="276.44" y="5583.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (2 samples, 0.04%)</title><rect x="146.2" y="4949" width="0.5" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="149.16" y="4959.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::BasicBlock const*, llvm::SmallPtrSet&lt;ll (1 samples, 0.02%)</title><rect x="601.7" y="5605" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="604.70" y="5615.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="16.3" y="2373" width="0.5" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="19.27" y="2383.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="177.3" y="5477" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="180.26" y="5487.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::alias(llvm::MemoryLocation const&amp;, llvm: (11 samples, 0.24%)</title><rect x="546.3" y="5445" width="2.9" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="549.29" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="4869" width="1.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="14.31" y="4879.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.02%)</title><rect x="227.4" y="5541" width="0.3" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="230.44" y="5551.5" ></text>
</g>
<g >
<title>`llvm::ValueHandleBase::~ValueHandleBase() (1 samples, 0.02%)</title><rect x="700.8" y="5493" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="703.75" y="5503.5" ></text>
</g>
<g >
<title>`__dynamic_cast (1 samples, 0.02%)</title><rect x="41.6" y="4181" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="44.62" y="4191.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="687.4" y="5637" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="690.42" y="5647.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::alias(llvm::MemoryLocation const&amp;, llvm: (2 samples, 0.04%)</title><rect x="506.3" y="5477" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="509.31" y="5487.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="65.9" y="1445" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="68.93" y="1455.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="69.1" y="2085" width="0.2" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="72.07" y="2095.5" ></text>
</g>
<g >
<title>`llvm::getOrEnforceKnownAlignment(llvm::Value*, unsigned int, ll (1 samples, 0.02%)</title><rect x="516.8" y="5621" width="0.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="519.76" y="5631.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::BasicBlock*&gt;::insert(llvm::BasicBlo (1 samples, 0.02%)</title><rect x="699.7" y="5637" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="702.71" y="5647.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="92.8" y="4453" width="0.3" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="95.85" y="4463.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.02%)</title><rect x="589.4" y="5637" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="592.42" y="5647.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="437" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="61.35" y="447.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="53.1" y="3125" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="56.12" y="3135.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (57 samples, 1.26%)</title><rect x="81.3" y="4885" width="14.9" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="84.35" y="4895.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.13%)</title><rect x="12.4" y="4853" width="1.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="15.35" y="4863.5" ></text>
</g>
<g >
<title>`IRC-SET-INSERT-POINT-BASIC-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="333.3" y="5045" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="336.29" y="5055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (8 samples, 0.18%)</title><rect x="174.4" y="5477" width="2.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="177.39" y="5487.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (417 samples, 9.24%)</title><rect x="1075.3" y="6293" width="109.0" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="1078.27" y="6303.5" >`GC_push_cont..</text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="51.0" y="2341" width="0.3" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="54.03" y="2351.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="344.0" y="5189" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="347.01" y="5199.5" ></text>
</g>
<g >
<title>`GC_mark_local (2 samples, 0.04%)</title><rect x="132.6" y="4629" width="0.5" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="135.57" y="4639.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.4" y="533" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="67.36" y="543.5" ></text>
</g>
<g >
<title>`GC_alloc_large (5 samples, 0.11%)</title><rect x="118.7" y="5493" width="1.3" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="121.72" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="78.7" y="3701" width="0.6" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="81.74" y="3711.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.3" y="2421" width="0.2" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="65.27" y="2431.5" ></text>
</g>
<g >
<title>`boost::basic_format&lt;char, std::__1::char_traits&lt;char&gt;, std::__1 (1 samples, 0.02%)</title><rect x="419.3" y="5509" width="0.2" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="422.28" y="5519.5" ></text>
</g>
<g >
<title>`RETURN-VALUE-ELT^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="340.3" y="5285" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="343.35" y="5295.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="885" width="0.2" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="61.09" y="895.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="97.6" y="5029" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="100.55" y="5039.5" ></text>
</g>
<g >
<title>`GC_mark_local (135 samples, 2.99%)</title><rect x="749.4" y="5605" width="35.2" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="752.36" y="5615.5" >`G..</text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.9" y="757" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="67.88" y="767.5" ></text>
</g>
<g >
<title>`default_zone_malloc (1 samples, 0.02%)</title><rect x="612.4" y="5461" width="0.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="615.41" y="5471.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.02%)</title><rect x="506.3" y="5429" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="509.31" y="5439.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::ValueHand (1 samples, 0.02%)</title><rect x="522.8" y="5525" width="0.2" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="525.77" y="5535.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;unsigned int, llvm::GVN::Lead (1 samples, 0.02%)</title><rect x="579.5" y="5589" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="582.48" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="3029" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="65.01" y="3039.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (181 samples, 4.01%)</title><rect x="49.5" y="5061" width="47.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="52.46" y="5071.5" >`CON..</text>
</g>
<g >
<title>0x10d596094 (10 samples, 0.22%)</title><rect x="78.0" y="4725" width="2.6" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="80.95" y="4735.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerSize(unsigned int) const (1 samples, 0.02%)</title><rect x="653.4" y="5493" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="656.45" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4565" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="141.32" y="4575.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2245" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="65.27" y="2255.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="334.6" y="5061" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="337.60" y="5071.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (4 samples, 0.09%)</title><rect x="75.3" y="3733" width="1.1" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="78.34" y="3743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4869" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="135.31" y="4879.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="155.8" y="5189" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="158.83" y="5199.5" ></text>
</g>
<g >
<title>`IRC-COND-BR^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="320.2" y="5269" width="0.3" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="323.22" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (4 samples, 0.09%)</title><rect x="11.3" y="4757" width="1.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="14.31" y="4767.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_combine_recursive_helper::combine(u (1 samples, 0.02%)</title><rect x="437.0" y="5397" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="440.05" y="5407.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (152 samples, 3.37%)</title><rect x="749.1" y="5653" width="39.7" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="752.10" y="5663.5" >`GC..</text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="331.7" y="5061" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="334.72" y="5071.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="349.0" y="5237" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="351.97" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="3989" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="135.31" y="3999.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="2133" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="64.22" y="2143.5" ></text>
</g>
<g >
<title>`llvm::CallSiteBase&lt;llvm::Function, llvm::BasicBlock, llvm::Valu (1 samples, 0.02%)</title><rect x="483.0" y="5605" width="0.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="486.05" y="5615.5" ></text>
</g>
<g >
<title>`core::Lisp_O::getOrRegisterFileScope(std::__1::basic_string&lt;cha (1 samples, 0.02%)</title><rect x="317.1" y="5317" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="320.09" y="5327.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="70.6" y="1477" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="73.63" y="1487.5" ></text>
</g>
<g >
<title>`llvm::InstVisitor&lt;llvm::InstCombiner, llvm::Instruction*&gt;::visi (2 samples, 0.04%)</title><rect x="680.4" y="5637" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="683.37" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4437" width="0.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="138.71" y="4447.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (25 samples, 0.55%)</title><rect x="16.3" y="2837" width="6.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="19.27" y="2847.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="399.4" y="5445" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="402.41" y="5455.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (6 samples, 0.13%)</title><rect x="63.8" y="2357" width="1.6" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="66.84" y="2367.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="885" width="0.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="65.53" y="895.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="63.6" y="2533" width="1.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="66.58" y="2543.5" ></text>
</g>
<g >
<title>`GC_mark_local (1 samples, 0.02%)</title><rect x="252.5" y="5349" width="0.3" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="255.53" y="5359.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="64.6" y="533" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="67.62" y="543.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (6 samples, 0.13%)</title><rect x="24.6" y="4533" width="1.6" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="27.64" y="4543.5" ></text>
</g>
<g >
<title>`llvm::MDNodeKeyImpl&lt;llvm::DILocation&gt;::isKeyOf(llvm::DILocation (1 samples, 0.02%)</title><rect x="300.6" y="5349" width="0.3" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="303.62" y="5359.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2549" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="73.63" y="2559.5" ></text>
</g>
<g >
<title>`DO-TIME^CORE^FN^^ (2,981 samples, 66.02%)</title><rect x="10.0" y="6101" width="779.1" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="13.00" y="6111.5" >`DO-TIME^CORE^FN^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="3989" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="131.91" y="3999.5" ></text>
</g>
<g >
<title>`core::convertClockToNs(timespec&amp;) (1 samples, 0.02%)</title><rect x="198.2" y="5573" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="201.17" y="5583.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="423.2" y="5525" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="426.20" y="5535.5" ></text>
</g>
<g >
<title>`OPTIMIZED-UNBOX-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (5 samples, 0.11%)</title><rect x="163.9" y="5045" width="1.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="166.94" y="5055.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="65.1" y="1973" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="68.15" y="1983.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="1269" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="60.57" y="1279.5" ></text>
</g>
<g >
<title>`getAllocationDataForFunction(llvm::Function const*, AllocType,  (1 samples, 0.02%)</title><rect x="599.1" y="5605" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="602.09" y="5615.5" ></text>
</g>
<g >
<title>`llvm::getConstantStringInfo(llvm::Value const*, llvm::StringRef (1 samples, 0.02%)</title><rect x="574.5" y="5541" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="577.52" y="5551.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2789" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="63.18" y="2799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4517" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="139.76" y="4527.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (2 samples, 0.04%)</title><rect x="454.0" y="5637" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="457.04" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="2037" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="64.75" y="2047.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_uncollectable (1 samples, 0.02%)</title><rect x="163.7" y="4965" width="0.2" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="166.67" y="4975.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.9" y="2997" width="0.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="56.91" y="3007.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="35.6" y="5013" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="38.61" y="5023.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="85.0" y="4485" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="88.01" y="4495.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="334.1" y="4965" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="337.08" y="4975.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="70.6" y="1525" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="73.63" y="1535.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="57.8" y="1093" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="60.83" y="1103.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.1" y="1237" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="67.10" y="1247.5" ></text>
</g>
<g >
<title>`PPRINT-LOGICAL-BLOCK-HELPER^CORE^FN^^ (1 samples, 0.02%)</title><rect x="735.5" y="5605" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="738.51" y="5615.5" ></text>
</g>
<g >
<title>`llvmo::convert_sequence_types_to_vector(gctools::smart_ptr&lt;core (4 samples, 0.09%)</title><rect x="388.2" y="5381" width="1.0" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="391.17" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="169.7" y="4981" width="0.2" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="172.69" y="4991.5" ></text>
</g>
<g >
<title>`core::core__load_binary(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (217 samples, 4.81%)</title><rect x="732.4" y="5845" width="56.7" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="735.37" y="5855.5" >`core:..</text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (91 samples, 2.02%)</title><rect x="12.4" y="5413" width="23.7" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="15.35" y="5423.5" >`..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.0" y="2437" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="65.01" y="2447.5" ></text>
</g>
<g >
<title>`GC_mark_some (1 samples, 0.02%)</title><rect x="69.1" y="2165" width="0.2" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="72.07" y="2175.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ModuleBitcodeWriter::write() (25 samples, 0.55%)</title><rect x="721.4" y="5685" width="6.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="724.40" y="5695.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (21 samples, 0.47%)</title><rect x="59.9" y="3381" width="5.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="62.92" y="3391.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getTerminator() const (1 samples, 0.02%)</title><rect x="524.1" y="5605" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="527.08" y="5615.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="207.8" y="5461" width="0.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="210.84" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT-TLL-LIST^CC-HIR-TO-MIR^FN^^ (3 samples, 0.07%)</title><rect x="190.1" y="5573" width="0.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="193.07" y="5583.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2309" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="65.79" y="2319.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="524.6" y="5525" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="527.60" y="5535.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="127.3" y="4757" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="130.35" y="4767.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="209.9" y="5541" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="212.93" y="5551.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="3253" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="64.22" y="3263.5" ></text>
</g>
<g >
<title>`llvm::isAllocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo (2 samples, 0.04%)</title><rect x="639.3" y="5589" width="0.6" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="642.33" y="5599.5" ></text>
</g>
<g >
<title>`llvm::GEPOperator::getSourceElementType() const (1 samples, 0.02%)</title><rect x="671.7" y="5541" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="674.74" y="5551.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInBoundsGEP(llvm::Value*, gctools::sm (5 samples, 0.11%)</title><rect x="351.8" y="5205" width="1.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="354.85" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (26 samples, 0.58%)</title><rect x="16.3" y="3605" width="6.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="19.27" y="3615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4533" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="138.71" y="4543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4421" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="132.96" y="4431.5" ></text>
</g>
<g >
<title>`std::__1::basic_streambuf&lt;char, std::__1::char_traits&lt;char&gt; &gt;:: (1 samples, 0.02%)</title><rect x="376.4" y="5285" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="379.41" y="5295.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="312.9" y="5429" width="0.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="315.91" y="5439.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="168.9" y="4869" width="0.3" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="171.90" y="4879.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (520 samples, 11.52%)</title><rect x="285.5" y="5637" width="135.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="288.46" y="5647.5" >`MEMOIZED-LAYOUT-..</text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, unsigned i (1 samples, 0.02%)</title><rect x="541.1" y="5557" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="544.07" y="5567.5" ></text>
</g>
<g >
<title>`core::core__load_no_package_set(gctools::smart_ptr&lt;core::T_O&gt;,  (2,981 samples, 66.02%)</title><rect x="10.0" y="6021" width="779.1" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="13.00" y="6031.5" >`core::core__load_no_package_set(gctools::smart_ptr&lt;core::T_O&gt;, </text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="66.2" y="2053" width="1.8" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="69.19" y="2063.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (8 samples, 0.18%)</title><rect x="63.3" y="3061" width="2.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="66.32" y="3071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4469" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="137.66" y="4479.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorTemplateBase&lt;llvm::Instruction*, true&gt;::push_b (1 samples, 0.02%)</title><rect x="634.6" y="5589" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="637.63" y="5599.5" ></text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE T (1 samples, 0.02%)</title><rect x="72.7" y="4709" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="75.72" y="4719.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="133.4" y="3861" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="136.36" y="3871.5" ></text>
</g>
<g >
<title>`COMPUTE-APPLICABLE-METHODS^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="193.7" y="5541" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="196.73" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (2 samples, 0.04%)</title><rect x="70.1" y="2917" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="73.11" y="2927.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.02%)</title><rect x="39.3" y="4053" width="0.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="42.27" y="4063.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="321.0" y="5173" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="324.01" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5093" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="130.35" y="5103.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="1941" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="65.27" y="1951.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="173.9" y="5429" width="0.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="176.87" y="5439.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2709" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="65.27" y="2719.5" ></text>
</g>
<g >
<title>`IN^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="382.4" y="5461" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="385.43" y="5471.5" ></text>
</g>
<g >
<title>`llvm::raw_ostream::SetUnbuffered() (1 samples, 0.02%)</title><rect x="375.6" y="5317" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="378.63" y="5327.5" ></text>
</g>
<g >
<title>`core::cl__values(gctools::smart_ptr&lt;core::Vaslist&gt;) (1 samples, 0.02%)</title><rect x="10.0" y="5717" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="13.00" y="5727.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="55.5" y="181" width="1.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="58.48" y="191.5" ></text>
</g>
<g >
<title>`DBG-CLEAR-IRBUILDER-SOURCE-LOCATION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="296.7" y="5477" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="299.70" y="5487.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisPassInfo(void const*) cons (1 samples, 0.02%)</title><rect x="690.6" y="5637" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="693.56" y="5647.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2693" width="3.4" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="57.17" y="2703.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.02%)</title><rect x="663.9" y="5493" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="666.90" y="5503.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="597" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="61.09" y="607.5" ></text>
</g>
<g >
<title>`void llvm::SymbolTableListTraits&lt;llvm::Instruction&gt;::setSymTabO (1 samples, 0.02%)</title><rect x="391.0" y="5333" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="394.05" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (1 samples, 0.02%)</title><rect x="97.3" y="5429" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="100.29" y="5439.5" ></text>
</g>
<g >
<title>`llvm::LowerDbgDeclare(llvm::Function&amp;) (2 samples, 0.04%)</title><rect x="519.6" y="5637" width="0.6" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="522.63" y="5647.5" ></text>
</g>
<g >
<title>`llvm::Value::Value(llvm::Type*, unsigned int) (1 samples, 0.02%)</title><rect x="333.6" y="4901" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="336.55" y="4911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4565" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="137.66" y="4575.5" ></text>
</g>
<g >
<title>`llvmo::Value_O::create(llvm::Value*) (1 samples, 0.02%)</title><rect x="346.1" y="5189" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="349.10" y="5199.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="146.9" y="5365" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="149.95" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="135.2" y="4565" width="0.5" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="138.19" y="4575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4789" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="142.11" y="4799.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.02%)</title><rect x="256.2" y="5557" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="259.19" y="5567.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="53.9" y="3013" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="56.91" y="3023.5" ></text>
</g>
<g >
<title>`llvm::FoldBranchToCommonDest(llvm::BranchInst*, unsigned int) (1 samples, 0.02%)</title><rect x="586.3" y="5541" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="589.28" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.5" y="949" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="65.53" y="959.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="64.4" y="1077" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="67.36" y="1087.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2485" width="1.8" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="60.57" y="2495.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (2 samples, 0.04%)</title><rect x="132.6" y="4821" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="135.57" y="4831.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="757" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="60.57" y="767.5" ></text>
</g>
<g >
<title>`llvm::iterator_range&lt;llvm::po_iterator&lt;llvm::BasicBlock*, llvm: (3 samples, 0.07%)</title><rect x="524.1" y="5621" width="0.8" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="527.08" y="5631.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="53.6" y="2661" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="56.65" y="2671.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::getHash() const (3 samples, 0.07%)</title><rect x="475.5" y="5509" width="0.8" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="478.47" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="11.3" y="5445" width="1.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="14.31" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (36 samples, 0.80%)</title><rect x="14.2" y="4501" width="9.4" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="17.18" y="4511.5" ></text>
</g>
<g >
<title>`CHECK-MIN/MAX-FORMAT-ARGUMENTS^CORE^FN^^ (1 samples, 0.02%)</title><rect x="80.8" y="4725" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="83.83" y="4735.5" ></text>
</g>
<g >
<title>`llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::Arra (1 samples, 0.02%)</title><rect x="406.2" y="5333" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="409.21" y="5343.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1365" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="65.53" y="1375.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (4 samples, 0.09%)</title><rect x="608.5" y="5621" width="1.0" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="611.49" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.5" y="1733" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="65.53" y="1743.5" ></text>
</g>
<g >
<title>`GC_allocobj (1 samples, 0.02%)</title><rect x="145.1" y="4933" width="0.3" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="148.12" y="4943.5" ></text>
</g>
<g >
<title>`wrapped_DILocation_O__make_llvm__LLVMContext___________________ (1 samples, 0.02%)</title><rect x="288.9" y="5429" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="291.86" y="5439.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_table_setf_gethash_HashTableBase_spT_spT_sp (1 samples, 0.02%)</title><rect x="354.5" y="5253" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="357.46" y="5263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SYMBOL-VALUE-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="172.8" y="5301" width="0.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="175.82" y="5311.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="2581" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="72.85" y="2591.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::asMinimalSimpleString() const (1 samples, 0.02%)</title><rect x="174.9" y="5301" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="177.91" y="5311.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1349" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="65.01" y="1359.5" ></text>
</g>
<g >
<title>`IRC-STORE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="357.6" y="5381" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="360.60" y="5391.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="79.8" y="3573" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="82.78" y="3583.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.02%)</title><rect x="229.5" y="5589" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="232.53" y="5599.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="24.6" y="4293" width="1.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="27.64" y="4303.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="68.5" y="2453" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="71.54" y="2463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4357" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="137.93" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.22%)</title><rect x="140.4" y="5077" width="2.6" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="143.41" y="5087.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (13 samples, 0.29%)</title><rect x="54.2" y="2565" width="3.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="57.17" y="2575.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="426.6" y="5621" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="429.59" y="5631.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1781" width="1.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="57.17" y="1791.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="133.1" y="4933" width="1.0" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="136.10" y="4943.5" ></text>
</g>
<g >
<title>`llvm::Argument::addAttr(llvm::Attribute::AttrKind) (2 samples, 0.04%)</title><rect x="426.1" y="5653" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="429.07" y="5663.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (1 samples, 0.02%)</title><rect x="340.3" y="5173" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="343.35" y="5183.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2949" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="65.27" y="2959.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="2821" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="72.85" y="2831.5" ></text>
</g>
<g >
<title>`COMPILE-WRONG-NUMBER-ARGUMENTS-BLOCK^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="378.5" y="5429" width="0.8" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="381.50" y="5439.5" ></text>
</g>
<g >
<title>`wrapped_cl__gethash_T_spHashTableBase_spT_sp (1 samples, 0.02%)</title><rect x="178.3" y="5589" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="181.31" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (71 samples, 1.57%)</title><rect x="52.9" y="3749" width="18.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="55.86" y="3759.5" ></text>
</g>
<g >
<title>`core::Function_O::functionName() const (1 samples, 0.02%)</title><rect x="338.3" y="5173" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="341.26" y="5183.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="597" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="68.93" y="607.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="340.3" y="5237" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="343.35" y="5247.5" ></text>
</g>
<g >
<title>`%INTRINSIC-CALL^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="324.4" y="5253" width="0.5" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="327.41" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="70.1" y="2933" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="73.11" y="2943.5" ></text>
</g>
<g >
<title>`wrapped_cl__last_List_spInteger_sp (1 samples, 0.02%)</title><rect x="32.7" y="4341" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="35.74" y="4351.5" ></text>
</g>
<g >
<title>`core::interpret_token_or_throw_reader_error(gctools::smart_ptr&lt; (1 samples, 0.02%)</title><rect x="421.6" y="5621" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="424.63" y="5631.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="637.2" y="5525" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="640.24" y="5535.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.02%)</title><rect x="134.7" y="4245" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="137.66" y="4255.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (2 samples, 0.04%)</title><rect x="132.6" y="4613" width="0.5" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="135.57" y="4623.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="11.3" y="4901" width="1.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="14.31" y="4911.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="11.3" y="4997" width="1.1" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="14.31" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (8 samples, 0.18%)</title><rect x="63.3" y="2965" width="2.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="66.32" y="2975.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="70.4" y="2565" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="73.37" y="2575.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="3077" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="65.01" y="3087.5" ></text>
</g>
<g >
<title>`TEMP-ASTS-FROM-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="71.9" y="3861" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="74.94" y="3871.5" ></text>
</g>
<g >
<title>`core::Symbol_O::fmakunbound_setf() (1 samples, 0.02%)</title><rect x="148.3" y="5045" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="151.25" y="5055.5" ></text>
</g>
<g >
<title>`llvm::Value::destroyValueName() (1 samples, 0.02%)</title><rect x="448.3" y="5589" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="451.29" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="64.1" y="1317" width="0.8" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="67.10" y="1327.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.02%)</title><rect x="22.3" y="2645" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="25.28" y="2655.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.02%)</title><rect x="82.9" y="4421" width="0.3" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="85.92" y="4431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4229" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="141.85" y="4239.5" ></text>
</g>
<g >
<title>`vsprintf_l (1 samples, 0.02%)</title><rect x="139.4" y="4997" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="142.37" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'TAGBODY) T T T)) (88 samples, 1.95%)</title><rect x="49.5" y="4165" width="23.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="52.46" y="4175.5" >`..</text>
</g>
<g >
<title>`llvm::InstCombiner::visitBranchInst(llvm::BranchInst&amp;) (1 samples, 0.02%)</title><rect x="636.5" y="5621" width="0.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="639.46" y="5631.5" ></text>
</g>
<g >
<title>`getAllocationData(llvm::Value const*, AllocType, llvm::TargetLi (1 samples, 0.02%)</title><rect x="594.9" y="5589" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="597.90" y="5599.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="166.0" y="5013" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="169.03" y="5023.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (8 samples, 0.18%)</title><rect x="78.5" y="4069" width="2.1" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="81.47" y="4079.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="70.9" y="3013" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="73.89" y="3023.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="149.0" y="4949" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="152.04" y="4959.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="56.5" y="965" width="1.1" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="59.52" y="975.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="331.2" y="4965" width="0.3" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="334.20" y="4975.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="57.6" y="805" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="60.57" y="815.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::collectLastUses(llvm::SmallVectorImpl&lt; (1 samples, 0.02%)</title><rect x="691.6" y="5653" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="694.60" y="5663.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="493.2" y="5509" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="496.24" y="5519.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (55 samples, 1.22%)</title><rect x="81.3" y="4677" width="14.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="84.35" y="4687.5" ></text>
</g>
<g >
<title>`MAKE-TYPEQ-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="134.1" y="3893" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="137.14" y="3903.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="581" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="61.09" y="591.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="366.5" y="5381" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="369.48" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((EQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4597" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="140.28" y="4607.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::PointerType_O&gt; gctools::GCObjectAppro (2 samples, 0.04%)</title><rect x="372.5" y="5317" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="375.49" y="5327.5" ></text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::getNumOper (1 samples, 0.02%)</title><rect x="530.3" y="5525" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="533.35" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="2533" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="73.63" y="2543.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="1797" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="65.27" y="1807.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (2 samples, 0.04%)</title><rect x="559.4" y="5397" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="562.36" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (35 samples, 0.78%)</title><rect x="36.4" y="5045" width="9.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="39.40" y="5055.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="12.4" y="4613" width="1.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="15.35" y="4623.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (6 samples, 0.13%)</title><rect x="251.7" y="5525" width="1.6" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="254.75" y="5535.5" ></text>
</g>
<g >
<title>`PROCESS-OPTIONALS^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="14.4" y="3045" width="0.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="17.44" y="3055.5" ></text>
</g>
<g >
<title>`PROCESS-AUX^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="3189" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="73.11" y="3199.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="70.6" y="3173" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="73.63" y="3183.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4629" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="736.42" y="4639.5" ></text>
</g>
<g >
<title>`OPTIMIZED-SETQ-AST-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="78.0" y="4581" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="80.95" y="4591.5" ></text>
</g>
<g >
<title>`VARIABLE-IS-SPECIAL-P^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="821" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="67.88" y="831.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (3 samples, 0.07%)</title><rect x="238.7" y="5317" width="0.8" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="241.68" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="146.9" y="5381" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="149.95" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="126.8" y="5541" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="129.82" y="5551.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;std::__1::pair&lt;llvm::BasicBlock*, llvm (1 samples, 0.02%)</title><rect x="524.6" y="5557" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="527.60" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="128.7" y="4181" width="0.7" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="131.65" y="4191.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.3" y="1653" width="0.2" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="65.27" y="1663.5" ></text>
</g>
<g >
<title>`clbind::Derivable&lt;clang::ASTFrontendAction&gt;::pointerToAlienWith (1 samples, 0.02%)</title><rect x="310.3" y="5381" width="0.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="313.29" y="5391.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="68.0" y="2405" width="0.3" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="71.02" y="2415.5" ></text>
</g>
<g >
<title>`GC_next_used_block (2 samples, 0.04%)</title><rect x="786.5" y="5605" width="0.5" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="789.47" y="5615.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedBits(llvm::Instruction*, un (4 samples, 0.09%)</title><rect x="498.2" y="5589" width="1.0" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="501.20" y="5599.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="463.7" y="5589" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="466.71" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (2 samples, 0.04%)</title><rect x="65.7" y="2213" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="68.67" y="2223.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="665.5" y="5541" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="668.47" y="5551.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::run() (234 samples, 5.18%)</title><rect x="618.9" y="5637" width="61.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="621.95" y="5647.5" >`llvm:..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (15 samples, 0.33%)</title><rect x="148.3" y="5461" width="3.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="151.25" y="5471.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="124.5" y="5541" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="127.47" y="5551.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::MemCpyOptLegacyPass::runOnFunction(llvm: (2 samples, 0.04%)</title><rect x="449.3" y="5669" width="0.6" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="452.33" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4709" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="135.31" y="4719.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="148.3" y="5077" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="151.25" y="5087.5" ></text>
</g>
<g >
<title>`llvm::CallInst::isNoBuiltin() const (1 samples, 0.02%)</title><rect x="506.6" y="5381" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="509.57" y="5391.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.6" y="5221" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="100.55" y="5231.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2837" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="65.01" y="2847.5" ></text>
</g>
<g >
<title>`cc_enclose (4 samples, 0.09%)</title><rect x="164.2" y="5029" width="1.0" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="167.20" y="5039.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (5 samples, 0.11%)</title><rect x="63.8" y="2229" width="1.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="66.84" y="2239.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'RETURN-FROM) T T (1 samples, 0.02%)</title><rect x="22.0" y="2677" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="25.02" y="2687.5" ></text>
</g>
<g >
<title>`llvm::BlockFrequencyInfoWrapperPass::runOnFunction(llvm::Functi (4 samples, 0.09%)</title><rect x="601.4" y="5669" width="1.1" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="604.44" y="5679.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="739.4" y="5605" width="0.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="742.43" y="5615.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="94.9" y="4389" width="0.3" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="97.94" y="4399.5" ></text>
</g>
<g >
<title>`GC_mark_local (2 samples, 0.04%)</title><rect x="33.5" y="4213" width="0.5" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="36.52" y="4223.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (2 samples, 0.04%)</title><rect x="416.1" y="5509" width="0.6" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="419.14" y="5519.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="41.1" y="4453" width="2.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="44.10" y="4463.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (1 samples, 0.02%)</title><rect x="433.7" y="5621" width="0.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="436.65" y="5631.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (4 samples, 0.09%)</title><rect x="361.0" y="5333" width="1.0" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="363.99" y="5343.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="27.2" y="4853" width="0.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="30.25" y="4863.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="22.0" y="2517" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="25.02" y="2527.5" ></text>
</g>
<g >
<title>`GC_mark_from (1 samples, 0.02%)</title><rect x="66.7" y="1413" width="0.3" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="69.71" y="1423.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET*) T T T))^ME (1 samples, 0.02%)</title><rect x="17.6" y="1637" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="20.58" y="1647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="62.0" y="1893" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="65.01" y="1903.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="88.7" y="4373" width="0.2" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="91.67" y="4383.5" ></text>
</g>
<g >
<title>`REINITIALIZE-DATA^CLEAVIR-IR^FN^^ (61 samples, 1.35%)</title><rect x="212.3" y="5605" width="15.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="215.29" y="5615.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout con (1 samples, 0.02%)</title><rect x="513.9" y="5589" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="516.88" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.4" y="4197" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="132.44" y="4207.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="1333" width="0.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="60.57" y="1343.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (2 samples, 0.04%)</title><rect x="146.2" y="5061" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="149.16" y="5071.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.04%)</title><rect x="386.9" y="5381" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="389.87" y="5391.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="10.5" y="5653" width="0.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="13.52" y="5663.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="59.9" y="3189" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="62.92" y="3199.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInBoundsGEP(llvm::Value*, gctools::sm (1 samples, 0.02%)</title><rect x="334.3" y="5029" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="337.34" y="5039.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1653" width="1.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="58.48" y="1663.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1029" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="65.53" y="1039.5" ></text>
</g>
<g >
<title>`core::input_stream_read_byte8(gctools::smart_ptr&lt;core::T_O&gt;, un (1 samples, 0.02%)</title><rect x="421.4" y="5573" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="424.37" y="5583.5" ></text>
</g>
<g >
<title>`llvm::CallInst::doesNotReadMemory() const (1 samples, 0.02%)</title><rect x="526.7" y="5525" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="529.69" y="5535.5" ></text>
</g>
<g >
<title>`wrapped_get_llvm__LLVMContext_const_llvm__APInt_ (2 samples, 0.04%)</title><rect x="403.3" y="5413" width="0.6" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="406.33" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="2421" width="1.8" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="60.57" y="2431.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="293" width="1.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="57.17" y="303.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="699.4" y="5621" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="702.44" y="5631.5" ></text>
</g>
<g >
<title>`IRC-PERSONALITY-FUNCTION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="365.7" y="5413" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="368.70" y="5423.5" ></text>
</g>
<g >
<title>`IRC-CREATE-CALL^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="338.8" y="5221" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="341.78" y="5231.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="437.0" y="5525" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="440.05" y="5535.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="399.7" y="5445" width="0.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="402.67" y="5455.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (30 samples, 0.66%)</title><rect x="27.5" y="4853" width="7.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="30.51" y="4863.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (3 samples, 0.07%)</title><rect x="323.4" y="5029" width="0.7" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="326.36" y="5039.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (4 samples, 0.09%)</title><rect x="55.5" y="373" width="1.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="58.48" y="383.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="3093" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="65.01" y="3103.5" ></text>
</g>
<g >
<title>`MAKE-BODY^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="16.3" y="1861" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="19.27" y="1871.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="127.3" y="4805" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="130.35" y="4815.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4309" width="23.0" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="52.46" y="4319.5" >`..</text>
</g>
<g >
<title>`sprintf (1 samples, 0.02%)</title><rect x="96.8" y="5061" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="99.77" y="5071.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObjects(llvm::Value*, llvm::SmallVectorImpl&lt; (3 samples, 0.07%)</title><rect x="651.4" y="5541" width="0.7" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="654.36" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4789" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="135.31" y="4799.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="115.3" y="5525" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="118.32" y="5535.5" ></text>
</g>
<g >
<title>`IRC-BEGIN-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="397.6" y="5381" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="400.58" y="5391.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="48.9" y="5077" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="51.94" y="5087.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="459.0" y="5573" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="462.00" y="5583.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.02%)</title><rect x="453.8" y="5605" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="456.77" y="5615.5" ></text>
</g>
<g >
<title>`%INTRINSIC-CALL^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="340.3" y="5253" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="343.35" y="5263.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="405" width="1.0" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="58.48" y="415.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (3 samples, 0.07%)</title><rect x="384.3" y="5397" width="0.7" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="387.25" y="5407.5" ></text>
</g>
<g >
<title>`set_tiny_meta_header_in_use (2 samples, 0.04%)</title><rect x="684.5" y="5557" width="0.6" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="687.55" y="5567.5" ></text>
</g>
<g >
<title>`FUNCTION-TYPE^CLEAVIR-ENVIRONMENT^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="51.8" y="3317" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="54.82" y="3327.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (3 samples, 0.07%)</title><rect x="256.5" y="5557" width="0.7" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="259.45" y="5567.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (24 samples, 0.53%)</title><rect x="16.3" y="2805" width="6.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="19.27" y="2815.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="59.1" y="709" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="62.13" y="719.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="117" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="61.35" y="127.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="61.2" y="2421" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="64.22" y="2431.5" ></text>
</g>
<g >
<title>`IMMEDIATE-DATUM-P^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="424.5" y="5717" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="427.50" y="5727.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="55.5" y="1173" width="1.0" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="58.48" y="1183.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::retrack(void*, llvm::Metadata&amp;, void*) (1 samples, 0.02%)</title><rect x="697.4" y="5589" width="0.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="700.35" y="5599.5" ></text>
</g>
<g >
<title>`COMPUTE-APPLICABLE-METHODS^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="69.6" y="2357" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="72.59" y="2367.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (2 samples, 0.04%)</title><rect x="342.2" y="5189" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="345.18" y="5199.5" ></text>
</g>
<g >
<title>`llvm::MemorySSA::MemorySSA(llvm::Function&amp;, llvm::AAResults*, l (23 samples, 0.51%)</title><rect x="525.4" y="5653" width="6.0" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="528.38" y="5663.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="310.8" y="5413" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="313.82" y="5423.5" ></text>
</g>
<g >
<title>`llvm::detail::DenseMapPair&lt;llvm::Value const*, llvm::StringMapE (1 samples, 0.02%)</title><rect x="330.7" y="4901" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="333.68" y="4911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.1" y="4549" width="0.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="141.06" y="4559.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (12 samples, 0.27%)</title><rect x="78.0" y="4885" width="3.1" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="80.95" y="4895.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (120 samples, 2.66%)</title><rect x="325.7" y="5333" width="31.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="328.71" y="5343.5" >`T..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2245" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="65.53" y="2255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4629" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="137.40" y="4639.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="168.9" y="4901" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="171.90" y="4911.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (71 samples, 1.57%)</title><rect x="52.9" y="3621" width="18.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="55.86" y="3631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4197" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="139.76" y="4207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4101" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="137.14" y="4111.5" ></text>
</g>
<g >
<title>`DO-COMPILER-TIMER^COMPILER^FN^^ (2,764 samples, 61.22%)</title><rect x="10.0" y="5845" width="722.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="13.00" y="5855.5" >`DO-COMPILER-TIMER^COMPILER^FN^^</text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1349" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="20.58" y="1359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="159.0" y="5381" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="161.97" y="5391.5" ></text>
</g>
<g >
<title>`llvm::ValueEnumerator::ValueEnumerator(llvm::Module const&amp;, boo (5 samples, 0.11%)</title><rect x="727.9" y="5669" width="1.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="730.93" y="5679.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="528.3" y="5493" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="531.26" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4261" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="136.36" y="4271.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="134.7" y="4309" width="0.2" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="137.66" y="4319.5" ></text>
</g>
<g >
<title>`CONJOIN-TYPES^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="13.7" y="4629" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="16.66" y="4639.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="138.6" y="4869" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="141.58" y="4879.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="21.5" y="1509" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="24.50" y="1519.5" ></text>
</g>
<g >
<title>`GC_mark_some (3 samples, 0.07%)</title><rect x="160.5" y="4821" width="0.8" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="163.54" y="4831.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="25.9" y="4229" width="0.3" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="28.94" y="4239.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (92 samples, 2.04%)</title><rect x="12.4" y="5477" width="24.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="15.35" y="5487.5" >`..</text>
</g>
<g >
<title>`GC_malloc_kind_global (5 samples, 0.11%)</title><rect x="252.0" y="5477" width="1.3" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="255.01" y="5487.5" ></text>
</g>
<g >
<title>`llvmo::Type_O::getPointerTo(int) (1 samples, 0.02%)</title><rect x="387.1" y="5349" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="390.13" y="5359.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="64.1" y="1205" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="67.10" y="1215.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (1 samples, 0.02%)</title><rect x="62.8" y="1157" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="65.79" y="1167.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedBits(llvm::Instruction*, un (3 samples, 0.07%)</title><rect x="656.8" y="5589" width="0.8" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="659.84" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="1157" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="65.01" y="1167.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (6 samples, 0.13%)</title><rect x="57.8" y="1477" width="1.6" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="60.83" y="1487.5" ></text>
</g>
<g >
<title>`llvm::AAResults::alias(llvm::MemoryLocation const&amp;, llvm::Memor (12 samples, 0.27%)</title><rect x="546.0" y="5461" width="3.2" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="549.03" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (43 samples, 0.95%)</title><rect x="128.4" y="5141" width="11.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="131.39" y="5151.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="917" width="1.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="58.48" y="927.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (3 samples, 0.07%)</title><rect x="78.7" y="3765" width="0.8" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="81.74" y="3775.5" ></text>
</g>
<g >
<title>`IRC-LOAD^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="333.8" y="5109" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="336.81" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="154.8" y="5189" width="0.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="157.79" y="5199.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="395.5" y="5285" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="398.49" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.5" y="4853" width="0.3" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="140.54" y="4863.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;clang::ast_matchers::internal::DynTypedMatcher (1 samples, 0.02%)</title><rect x="429.5" y="5621" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="432.47" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="155.0" y="5125" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="158.05" y="5135.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="47.1" y="4885" width="0.3" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="50.11" y="4895.5" ></text>
</g>
<g >
<title>`FIND-SLOT-DEFINITION^CLOS^FN^^ (6 samples, 0.13%)</title><rect x="100.4" y="5605" width="1.6" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="103.43" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.0" y="5493" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="180.00" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.4" y="4101" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="132.44" y="4111.5" ></text>
</g>
<g >
<title>`core::core__make_vector(gctools::smart_ptr&lt;core::T_O&gt;, unsigned (1 samples, 0.02%)</title><rect x="139.6" y="5093" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="142.63" y="5103.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="53.9" y="2965" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="56.91" y="2975.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="266.6" y="5445" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="269.65" y="5455.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1093" width="1.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="59.52" y="1103.5" ></text>
</g>
<g >
<title>`llvm::GlobalObject::clearMetadata() (1 samples, 0.02%)</title><rect x="720.4" y="5669" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="723.35" y="5679.5" ></text>
</g>
<g >
<title>`llvm::StringMapImpl::FindKey(llvm::StringRef) const (1 samples, 0.02%)</title><rect x="430.8" y="5557" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="433.78" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (7 samples, 0.16%)</title><rect x="57.6" y="2037" width="1.8" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="60.57" y="2047.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="78.7" y="3621" width="0.6" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="81.74" y="3631.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="440.4" y="5621" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="443.45" y="5631.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (3 samples, 0.07%)</title><rect x="651.4" y="5509" width="0.7" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="654.36" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="61.7" y="2501" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="64.75" y="2511.5" ></text>
</g>
<g >
<title>`std::__1::enable_if&lt;!(std::is_array&lt;llvm::LazyBranchProbability (2 samples, 0.04%)</title><rect x="684.5" y="5653" width="0.6" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="687.55" y="5663.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (1 samples, 0.02%)</title><rect x="151.7" y="5317" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="154.65" y="5327.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm:: (19 samples, 0.42%)</title><rect x="500.8" y="5557" width="5.0" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="503.82" y="5567.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (17 samples, 0.38%)</title><rect x="667.0" y="5541" width="4.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="670.04" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.1" y="2309" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="68.15" y="2319.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2229" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="71.28" y="2239.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.02%)</title><rect x="283.9" y="5397" width="0.3" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="286.90" y="5407.5" ></text>
</g>
<g >
<title>0x10d596094 (14 samples, 0.31%)</title><rect x="73.8" y="4485" width="3.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="76.77" y="4495.5" ></text>
</g>
<g >
<title>`core::lambdaListHandler_createBindings(gctools::smart_ptr&lt;core: (1 samples, 0.02%)</title><rect x="322.3" y="5189" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="325.31" y="5199.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="68.3" y="2469" width="0.2" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="71.28" y="2479.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (36 samples, 0.80%)</title><rect x="14.2" y="4549" width="9.4" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="17.18" y="4559.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="133.9" y="4901" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="136.88" y="4911.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="901" width="1.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="57.17" y="911.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="64.6" y="53" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="67.62" y="63.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (4 samples, 0.09%)</title><rect x="55.5" y="1461" width="1.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="58.48" y="1471.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.7" y="1845" width="0.2" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="68.67" y="1855.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1605" width="0.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="68.93" y="1615.5" ></text>
</g>
<g >
<title>`llvm::Type::isSized(llvm::SmallPtrSetImpl&lt;llvm::Type*&gt;*) const (1 samples, 0.02%)</title><rect x="628.9" y="5573" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="631.88" y="5583.5" ></text>
</g>
<g >
<title>`wrapped_cl__error_T_spList_sp (5 samples, 0.11%)</title><rect x="735.8" y="5637" width="1.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="738.77" y="5647.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="572.7" y="5445" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="575.69" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AND-UNBOX-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (11 samples, 0.24%)</title><rect x="162.6" y="5061" width="2.9" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="165.63" y="5071.5" ></text>
</g>
<g >
<title>0x10d596094 (233 samples, 5.16%)</title><rect x="36.4" y="5221" width="60.9" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="39.40" y="5231.5" >0x10d5..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4485" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="140.02" y="4495.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (1 samples, 0.02%)</title><rect x="69.1" y="2149" width="0.2" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="72.07" y="2159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4549" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="138.71" y="4559.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="12.1" y="4501" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="15.09" y="4511.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (3 samples, 0.07%)</title><rect x="65.4" y="2549" width="0.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="68.41" y="2559.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="732.9" y="5637" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="735.90" y="5647.5" ></text>
</g>
<g >
<title>`LITERAL-DATUM-P^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="207.6" y="5525" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="210.58" y="5535.5" ></text>
</g>
<g >
<title>`SLOT-MAKUNBOUND^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="125.3" y="5637" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="128.26" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="12.4" y="4629" width="1.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="15.35" y="4639.5" ></text>
</g>
<g >
<title>`GC_mark_thread_local_fls_for (1 samples, 0.02%)</title><rect x="788.3" y="5589" width="0.3" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="791.30" y="5599.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="114.5" y="5605" width="0.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="117.54" y="5615.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T GLOBAL-FUNCTION-INFO))^METHOD (1 samples, 0.02%)</title><rect x="71.7" y="3669" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="74.68" y="3679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3749" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="132.96" y="3759.5" ></text>
</g>
<g >
<title>`llvmo::Module_O::getFunction(gctools::smart_ptr&lt;core::Array_O&gt;) (1 samples, 0.02%)</title><rect x="324.4" y="5125" width="0.3" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="327.41" y="5135.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="60.2" y="3029" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="63.18" y="3039.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="61.7" y="2165" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="64.75" y="2175.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1461" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="65.53" y="1471.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute (1 samples, 0.02%)</title><rect x="518.3" y="5573" width="0.3" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="521.33" y="5583.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIntPtrType(llvm::Type*) const (1 samples, 0.02%)</title><rect x="477.8" y="5573" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="480.82" y="5583.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Rack_O&gt; gctools::GCObjectAppropriatePo (1 samples, 0.02%)</title><rect x="133.4" y="3813" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="136.36" y="3823.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (86 samples, 1.90%)</title><rect x="49.7" y="4133" width="22.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="52.73" y="4143.5" >`..</text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2293" width="0.2" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="65.27" y="2303.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (57 samples, 1.26%)</title><rect x="81.3" y="4901" width="14.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="84.35" y="4911.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="63.1" y="2501" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="66.05" y="2511.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.02%)</title><rect x="523.0" y="5413" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="526.03" y="5423.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (4 samples, 0.09%)</title><rect x="393.4" y="5365" width="1.0" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="396.40" y="5375.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasGEP(llvm::GEPOperator const*, unsigne (1 samples, 0.02%)</title><rect x="449.6" y="5493" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="452.59" y="5503.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.04%)</title><rect x="399.7" y="5349" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="402.67" y="5359.5" ></text>
</g>
<g >
<title>`llvm::isAllocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo (1 samples, 0.02%)</title><rect x="679.3" y="5605" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="682.32" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (2 samples, 0.04%)</title><rect x="14.7" y="2885" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="17.70" y="2895.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitAllocaInst(llvm::AllocaInst&amp;) (5 samples, 0.11%)</title><rect x="633.8" y="5621" width="1.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="636.84" y="5631.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (1 samples, 0.02%)</title><rect x="574.5" y="5509" width="0.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="577.52" y="5519.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="403.6" y="5365" width="0.3" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="406.59" y="5375.5" ></text>
</g>
<g >
<title>`NEW-DATUM-VARIABLE^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="408.0" y="5445" width="0.6" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="411.04" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4277" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="137.40" y="4287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4389" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="137.93" y="4399.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="127.1" y="5301" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="130.09" y="5311.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::getModRefInfo(llvm::ImmutableCallSite, l (4 samples, 0.09%)</title><rect x="504.5" y="5525" width="1.0" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="507.48" y="5535.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (4 samples, 0.09%)</title><rect x="735.8" y="5333" width="1.0" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="738.77" y="5343.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;llvm::Value*, llvm::Value (1 samples, 0.02%)</title><rect x="584.4" y="5621" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="587.45" y="5631.5" ></text>
</g>
<g >
<title>`tiny_free_detach_region (1 samples, 0.02%)</title><rect x="697.1" y="5477" width="0.3" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="700.09" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="64.6" y="613" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="67.62" y="623.5" ></text>
</g>
<g >
<title>`%INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^CLASP-CLEAVIR^FN^^ (3 samples, 0.07%)</title><rect x="399.7" y="5461" width="0.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="402.67" y="5471.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="16.8" y="2405" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="19.80" y="2415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4725" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="139.76" y="4735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4453" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="138.45" y="4463.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.02%)</title><rect x="529.3" y="5509" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="532.30" y="5519.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="24.6" y="3701" width="0.6" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="27.64" y="3711.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout con (3 samples, 0.07%)</title><rect x="674.9" y="5589" width="0.8" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="677.88" y="5599.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (3 samples, 0.07%)</title><rect x="323.4" y="5157" width="0.7" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="326.36" y="5167.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.02%)</title><rect x="25.4" y="3765" width="0.3" height="15.0" fill="rgb(237,105,105)" rx="2" ry="2" />
<text  x="28.42" y="3775.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (7 samples, 0.16%)</title><rect x="304.8" y="5445" width="1.8" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="307.80" y="5455.5" ></text>
</g>
<g >
<title>`GET-DILOCATION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="318.7" y="5285" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="321.66" y="5295.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="163.4" y="5013" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="166.41" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4501" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="137.66" y="4511.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="56.5" y="853" width="1.1" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="59.52" y="863.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (3 samples, 0.07%)</title><rect x="468.9" y="5589" width="0.8" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="471.93" y="5599.5" ></text>
</g>
<g >
<title>`llvm::getOrEnforceKnownAlignment(llvm::Value*, unsigned int, ll (1 samples, 0.02%)</title><rect x="513.9" y="5605" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="516.88" y="5615.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (2 samples, 0.04%)</title><rect x="511.3" y="5493" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="514.27" y="5503.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpEquality(llvm::ICmpInst&amp;) (2 samples, 0.04%)</title><rect x="496.9" y="5605" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="499.90" y="5615.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (2 samples, 0.04%)</title><rect x="210.7" y="5413" width="0.5" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="213.72" y="5423.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="410.9" y="5365" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="413.91" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (2 samples, 0.04%)</title><rect x="70.1" y="3045" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="73.11" y="3055.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4501" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="736.42" y="4511.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="22.3" y="2565" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="25.28" y="2575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4053" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="137.14" y="4063.5" ></text>
</g>
<g >
<title>`GENERATE-AST^CLEAVIR-GENERATE-AST^FN^^ (332 samples, 7.35%)</title><rect x="11.3" y="5669" width="86.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="14.31" y="5679.5" >`GENERATE-..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="78.2" y="4213" width="2.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="81.21" y="4223.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (2 samples, 0.04%)</title><rect x="171.8" y="5093" width="0.5" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="174.78" y="5103.5" ></text>
</g>
<g >
<title>`llvm::collectChildrenInLoop(llvm::DomTreeNodeBase&lt;llvm::BasicBl (1 samples, 0.02%)</title><rect x="684.0" y="5605" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="687.02" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((LEXICAL-VARIABLE-INFO T T T (2 samples, 0.04%)</title><rect x="14.7" y="2645" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="17.70" y="2655.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="59.4" y="2853" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="62.40" y="2863.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (2 samples, 0.04%)</title><rect x="626.3" y="5509" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="629.27" y="5519.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="15.2" y="3429" width="0.3" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="18.23" y="3439.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="126.3" y="5621" width="0.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="129.30" y="5631.5" ></text>
</g>
<g >
<title>`IRC-BEGIN-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="294.3" y="5429" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="297.35" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.0" y="4709" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="138.97" y="4719.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (20 samples, 0.44%)</title><rect x="473.4" y="5589" width="5.2" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="476.38" y="5599.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;std::__1::pair&lt;llvm::Val (1 samples, 0.02%)</title><rect x="583.4" y="5605" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="586.40" y="5615.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="45.8" y="5013" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="48.81" y="5023.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (1 samples, 0.02%)</title><rect x="347.1" y="5221" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="350.14" y="5231.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="62.5" y="2965" width="0.6" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="65.53" y="2975.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="734.7" y="5461" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="737.73" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (35 samples, 0.78%)</title><rect x="36.4" y="5141" width="9.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="39.40" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((LEXICAL-VARIABLE-INFO T T T (1 samples, 0.02%)</title><rect x="64.9" y="1413" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="67.88" y="1423.5" ></text>
</g>
<g >
<title>`POSITION^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1253" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="24.50" y="1263.5" ></text>
</g>
<g >
<title>`IRC-COND-BR^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="320.5" y="5253" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="323.49" y="5263.5" ></text>
</g>
<g >
<title>`COMPILE-AND-UNBOX-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="135.7" y="4165" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="138.71" y="4175.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (13 samples, 0.29%)</title><rect x="74.0" y="4341" width="3.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="77.03" y="4351.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="15.5" y="3333" width="0.2" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="18.49" y="3343.5" ></text>
</g>
<g >
<title>`HIR-TO-MIR^CLEAVIR-HIR-TO-MIR^FN^^ (45 samples, 1.00%)</title><rect x="183.8" y="5637" width="11.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="186.80" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (6 samples, 0.13%)</title><rect x="24.6" y="4645" width="1.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="27.64" y="4655.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="5349" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="100.55" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="1093" width="1.3" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="57.17" y="1103.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="456.1" y="5621" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="459.13" y="5631.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="268.0" y="5541" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="270.95" y="5551.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="209.9" y="5557" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="212.93" y="5567.5" ></text>
</g>
<g >
<title>`llvmo::Pass_O::externalObject() const (1 samples, 0.02%)</title><rect x="220.9" y="5573" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="223.91" y="5583.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (6 samples, 0.13%)</title><rect x="277.6" y="5557" width="1.6" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="280.62" y="5567.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.02%)</title><rect x="349.5" y="5269" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="352.50" y="5279.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="121.9" y="5541" width="0.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="124.86" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="128.7" y="4261" width="1.0" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="131.65" y="4271.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="395.8" y="5349" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="398.75" y="5359.5" ></text>
</g>
<g >
<title>`tryToReplaceWithConstant((anonymous namespace)::SCCPSolver&amp;, ll (2 samples, 0.04%)</title><rect x="584.2" y="5653" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="587.19" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="145.1" y="5109" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="148.12" y="5119.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (1 samples, 0.02%)</title><rect x="267.2" y="5573" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="270.17" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4469" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="138.19" y="4479.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="149.3" y="5013" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="152.30" y="5023.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="266.9" y="5557" width="0.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="269.91" y="5567.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="599.1" y="5589" width="0.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="602.09" y="5599.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2597" width="0.2" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="63.18" y="2607.5" ></text>
</g>
<g >
<title>`CALL-WITH-COMPILATION-RESULTS^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="734.2" y="5557" width="0.8" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="737.20" y="5567.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="64.1" y="1861" width="1.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="67.10" y="1871.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (2 samples, 0.04%)</title><rect x="590.5" y="5557" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="593.46" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4805" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="135.31" y="4815.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="292.5" y="5317" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="295.52" y="5327.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="524.9" y="5589" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="527.86" y="5599.5" ></text>
</g>
<g >
<title>`IRC-LOAD^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="341.7" y="5237" width="0.2" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="344.65" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4213" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="135.31" y="4223.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="420.8" y="5445" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="423.84" y="5455.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="589.7" y="5541" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="592.68" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.0" y="2213" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="65.01" y="2223.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="338.0" y="5189" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="341.00" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="50.0" y="3253" width="1.6" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="52.99" y="3263.5" ></text>
</g>
<g >
<title>`llvm::LiveVariables::runOnMachineFunction(llvm::MachineFunction (1 samples, 0.02%)</title><rect x="732.9" y="5349" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="735.90" y="5359.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.02%)</title><rect x="528.3" y="5381" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="531.26" y="5391.5" ></text>
</g>
<g >
<title>`IRC-TMV-PRIMARY^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="344.8" y="5237" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="347.79" y="5247.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="69.8" y="2693" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="72.85" y="2703.5" ></text>
</g>
<g >
<title>`GC_mark_local (2 samples, 0.04%)</title><rect x="210.7" y="5365" width="0.5" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="213.72" y="5375.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpBinOp(llvm::ICmpInst&amp;) (1 samples, 0.02%)</title><rect x="496.6" y="5605" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="499.64" y="5615.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="67.2" y="1445" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="70.24" y="1455.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="1829" width="1.8" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="60.57" y="1839.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::foldICmpEquality(llvm::ICmpInst&amp;) (1 samples, 0.02%)</title><rect x="633.3" y="5621" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="636.32" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="97.3" y="3189" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="100.29" y="3199.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="67.0" y="1573" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="69.97" y="1583.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="67.0" y="1717" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="69.97" y="1727.5" ></text>
</g>
<g >
<title>`isObjectSmallerThan(llvm::Value const*, unsigned long long, llv (3 samples, 0.07%)</title><rect x="545.2" y="5461" width="0.8" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="548.25" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="128.7" y="4309" width="1.0" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="131.65" y="4319.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.02%)</title><rect x="573.5" y="5477" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="576.47" y="5487.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;llvm::PointerIntPair&lt;llvm (1 samples, 0.02%)</title><rect x="569.3" y="5541" width="0.3" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="572.29" y="5551.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="1573" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="65.01" y="1583.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="64.4" y="437" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="67.36" y="447.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="62.3" y="2261" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="65.27" y="2271.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (13 samples, 0.29%)</title><rect x="54.2" y="3013" width="3.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="57.17" y="3023.5" ></text>
</g>
<g >
<title>`llvm::SmallVector&lt;char, 256u&gt;::SmallVector(llvm::SmallVector&lt;ch (1 samples, 0.02%)</title><rect x="586.3" y="5461" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="589.28" y="5471.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="94.2" y="4469" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="97.16" y="4479.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.02%)</title><rect x="199.2" y="5589" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="202.22" y="5599.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2821" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="64.22" y="2831.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1717" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="65.79" y="1727.5" ></text>
</g>
<g >
<title>`MAKE-EQ-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="147.2" y="5557" width="0.3" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="150.21" y="5567.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION^COMPILER^FN^^ (7 samples, 0.16%)</title><rect x="326.5" y="5285" width="1.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="329.50" y="5295.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2149" width="1.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="60.57" y="2159.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="460.6" y="5557" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="463.57" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.2" y="3749" width="0.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="132.18" y="3759.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4901" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="736.42" y="4911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4373" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="137.40" y="4383.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="165.8" y="5061" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="168.77" y="5071.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="184.6" y="5557" width="0.2" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="187.58" y="5567.5" ></text>
</g>
<g >
<title>`IRC-CREATE-FUNCTION-DESCRIPTION^COMPILER^FN^^ (6 samples, 0.13%)</title><rect x="335.6" y="5237" width="1.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="338.64" y="5247.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisPassInfo(void const*) cons (1 samples, 0.02%)</title><rect x="534.8" y="5637" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="537.79" y="5647.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="329.4" y="5141" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="332.37" y="5151.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="399.2" y="5301" width="0.2" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="402.15" y="5311.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5573" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="713.94" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4453" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="141.85" y="4463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4741" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="137.14" y="4751.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="68.0" y="2485" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="71.02" y="2495.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (3 samples, 0.07%)</title><rect x="374.6" y="5333" width="0.8" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="377.58" y="5343.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="314.0" y="5333" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="316.95" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="68.0" y="2661" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="71.02" y="2671.5" ></text>
</g>
<g >
<title>`PROCESS-REQUIRED^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="3253" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="73.11" y="3263.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="164.2" y="4869" width="0.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="167.20" y="4879.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="151.4" y="5253" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="154.39" y="5263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4389" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="136.62" y="4399.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (3 samples, 0.07%)</title><rect x="668.9" y="5493" width="0.8" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="671.87" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (21 samples, 0.47%)</title><rect x="54.2" y="3301" width="5.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="57.17" y="3311.5" ></text>
</g>
<g >
<title>`CONJOIN-TYPES^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="74.6" y="3685" width="0.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="77.55" y="3695.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="64.9" y="1157" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="67.88" y="1167.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::getModRefBehavior(llvm::ImmutableCallSite) (2 samples, 0.04%)</title><rect x="659.5" y="5525" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="662.46" y="5535.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="139.4" y="5045" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="142.37" y="5055.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="12.6" y="4133" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="15.61" y="4143.5" ></text>
</g>
<g >
<title>`ORIGIN^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="156.4" y="5205" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="159.36" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="21.2" y="2005" width="0.6" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="24.24" y="2015.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.6" y="421" width="0.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="67.62" y="431.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((THE-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4853" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="140.02" y="4863.5" ></text>
</g>
<g >
<title>`UNIVERSAL-ERROR-HANDLER^CORE^FN^^ (1 samples, 0.02%)</title><rect x="735.0" y="5557" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="737.99" y="5567.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Instruction*&gt;::find(llvm::Instructi (2 samples, 0.04%)</title><rect x="451.2" y="5637" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="454.16" y="5647.5" ></text>
</g>
<g >
<title>`core::CxxObject_O::~CxxObject_O() (1 samples, 0.02%)</title><rect x="386.6" y="5381" width="0.3" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="389.61" y="5391.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5429" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="736.42" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (56 samples, 1.24%)</title><rect x="81.3" y="4757" width="14.7" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="84.35" y="4767.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.02%)</title><rect x="123.7" y="5477" width="0.2" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text  x="126.69" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="60.2" y="2981" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="63.18" y="2991.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (2 samples, 0.04%)</title><rect x="210.7" y="5381" width="0.5" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="213.72" y="5391.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="384.3" y="5301" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="387.25" y="5311.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="400.2" y="5397" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="403.20" y="5407.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="612.4" y="5477" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="615.41" y="5487.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="473.1" y="5477" width="0.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="476.11" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (1 samples, 0.02%)</title><rect x="62.0" y="741" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="65.01" y="751.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="66.5" y="1749" width="0.7" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="69.45" y="1759.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2149" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="65.79" y="2159.5" ></text>
</g>
<g >
<title>`llvm::FindAvailableLoadedValue(llvm::LoadInst*, llvm::BasicBloc (32 samples, 0.71%)</title><rect x="500.8" y="5605" width="8.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="503.82" y="5615.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="309.8" y="5429" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="312.77" y="5439.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="177.3" y="4933" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="180.26" y="4943.5" ></text>
</g>
<g >
<title>`REFERENCE-LITERAL^LITERAL^FN^^ (10 samples, 0.22%)</title><rect x="369.1" y="5397" width="2.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="372.10" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="23.1" y="3845" width="0.5" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="26.07" y="3855.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="410.4" y="5365" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="413.39" y="5375.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="63.8" y="1861" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="66.84" y="1871.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitCallInst(llvm::CallInst&amp;) (34 samples, 0.75%)</title><rect x="636.7" y="5621" width="8.9" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="639.72" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (36 samples, 0.80%)</title><rect x="14.2" y="4389" width="9.4" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="17.18" y="4399.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1317" width="1.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="57.17" y="1327.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="70.9" y="3157" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="73.89" y="3167.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1765" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="65.79" y="1775.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4709" width="1.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="26.59" y="4719.5" ></text>
</g>
<g >
<title>`IRC-STORE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="356.0" y="5269" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="359.03" y="5279.5" ></text>
</g>
<g >
<title>`GEN-MEMREF-ADDRESS^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="348.4" y="5285" width="1.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="351.45" y="5295.5" ></text>
</g>
<g >
<title>`llvm::APInt::sdiv_ov(llvm::APInt const&amp;, bool&amp;) const (1 samples, 0.02%)</title><rect x="507.4" y="5461" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="510.35" y="5471.5" ></text>
</g>
<g >
<title>`ADD-NAMED-CREATOR^LITERAL^FN^^ (6 samples, 0.13%)</title><rect x="369.4" y="5333" width="1.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="372.36" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="64.4" y="1157" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="67.36" y="1167.5" ></text>
</g>
<g >
<title>`MAKE-LET-INIT-ASTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="53.6" y="2901" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="56.65" y="2911.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1333" width="1.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="58.48" y="1343.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1509" width="1.1" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="59.52" y="1519.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4229" width="9.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="17.18" y="4239.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="2853" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="65.79" y="2863.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="171.0" y="5093" width="0.3" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="173.99" y="5103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.4" y="4005" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="132.44" y="4015.5" ></text>
</g>
<g >
<title>`wrapped_cl__write_T_spT_spT_spT_sp_______________T_spT_spT_spT_ (1 samples, 0.02%)</title><rect x="735.5" y="5669" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="738.51" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="70.1" y="2981" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="73.11" y="2991.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="320.2" y="5237" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="323.22" y="5247.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Value*, std::__1::allocator&lt;llvm (1 samples, 0.02%)</title><rect x="352.6" y="5189" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="355.63" y="5199.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="43.2" y="4405" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="46.19" y="4415.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="40.6" y="4101" width="0.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="43.58" y="4111.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.02%)</title><rect x="134.7" y="4325" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="137.66" y="4335.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="66.2" y="2453" width="1.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="69.19" y="2463.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="17.3" y="1941" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="20.32" y="1951.5" ></text>
</g>
<g >
<title>`llvm::ConstantPointerNull::get(llvm::PointerType*) (1 samples, 0.02%)</title><rect x="367.0" y="5301" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="370.01" y="5311.5" ></text>
</g>
<g >
<title>`core::cl__reverse(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="174.1" y="5413" width="0.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="177.13" y="5423.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="5349" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="100.29" y="5359.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (1 samples, 0.02%)</title><rect x="449.1" y="5605" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="452.07" y="5615.5" ></text>
</g>
<g >
<title>`computePointerICmp(llvm::DataLayout const&amp;, llvm::TargetLibrary (6 samples, 0.13%)</title><rect x="493.5" y="5589" width="1.6" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="496.50" y="5599.5" ></text>
</g>
<g >
<title>`GC_find_header (2 samples, 0.04%)</title><rect x="743.4" y="5605" width="0.5" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="746.35" y="5615.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (3 samples, 0.07%)</title><rect x="153.0" y="4997" width="0.7" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="155.96" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (1 samples, 0.02%)</title><rect x="65.1" y="2277" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="68.15" y="2287.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, ll (1 samples, 0.02%)</title><rect x="635.2" y="5541" width="0.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="638.15" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (1 samples, 0.02%)</title><rect x="62.0" y="1221" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="65.01" y="1231.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (4 samples, 0.09%)</title><rect x="405.7" y="5349" width="1.0" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="408.69" y="5359.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (2 samples, 0.04%)</title><rect x="166.3" y="5045" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="169.29" y="5055.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="455.6" y="5589" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="458.60" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="50.8" y="3077" width="0.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="53.77" y="3087.5" ></text>
</g>
<g >
<title>`VARIABLE-TYPE^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE LEXICAL-VA (1 samples, 0.02%)</title><rect x="42.9" y="4229" width="0.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="45.93" y="4239.5" ></text>
</g>
<g >
<title>`core::cl__values(gctools::smart_ptr&lt;core::Vaslist&gt;) (1 samples, 0.02%)</title><rect x="379.8" y="5397" width="0.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="382.81" y="5407.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="67.2" y="1253" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="70.24" y="1263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (16 samples, 0.35%)</title><rect x="128.4" y="4965" width="4.2" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="131.39" y="4975.5" ></text>
</g>
<g >
<title>`llvm::KnownBits::resetAll() (1 samples, 0.02%)</title><rect x="513.9" y="5557" width="0.2" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="516.88" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="97.6" y="5269" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="100.55" y="5279.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2581" width="3.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="57.17" y="2591.5" ></text>
</g>
<g >
<title>`llvm::removeUnreachableBlocks(llvm::Function&amp;, llvm::LazyValueI (4 samples, 0.09%)</title><rect x="591.0" y="5669" width="1.0" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="593.98" y="5679.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="268.5" y="5397" width="0.2" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="271.48" y="5407.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (6 samples, 0.13%)</title><rect x="234.2" y="5461" width="1.6" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="237.24" y="5471.5" ></text>
</g>
<g >
<title>`core::core__integer_to_string(gctools::smart_ptr&lt;core::StrNs_O&gt; (1 samples, 0.02%)</title><rect x="96.8" y="5077" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="99.77" y="5087.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="157.4" y="5349" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="160.40" y="5359.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::removeNotPreservedAnalysis(llvm::Pass*) (1 samples, 0.02%)</title><rect x="734.7" y="5317" width="0.3" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="737.73" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2261" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="65.53" y="2271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4693" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="142.11" y="4703.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedBits(llvm::Instruction*, un (2 samples, 0.04%)</title><rect x="657.1" y="5557" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="660.11" y="5567.5" ></text>
</g>
<g >
<title>`llvm::Value::setValueName(llvm::StringMapEntry&lt;llvm::Value*&gt;*) (1 samples, 0.02%)</title><rect x="330.7" y="4933" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="333.68" y="4943.5" ></text>
</g>
<g >
<title>`GC_notify_or_invoke_finalizers (1 samples, 0.02%)</title><rect x="131.0" y="4469" width="0.3" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="134.01" y="4479.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (4 samples, 0.09%)</title><rect x="423.2" y="5605" width="1.0" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="426.20" y="5615.5" ></text>
</g>
<g >
<title>0x10d596094 (3 samples, 0.07%)</title><rect x="50.8" y="2869" width="0.8" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="53.77" y="2879.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CONTEXT-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="169.9" y="4997" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="172.95" y="5007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4469" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="136.36" y="4479.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="397.8" y="5365" width="0.6" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="400.84" y="5375.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3509" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="100.29" y="3519.5" ></text>
</g>
<g >
<title>`GC_mark_some (2 samples, 0.04%)</title><rect x="132.6" y="4661" width="0.5" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="135.57" y="4671.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="17.6" y="1285" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="20.58" y="1295.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (6 samples, 0.13%)</title><rect x="12.4" y="4741" width="1.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="15.35" y="4751.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="69.8" y="2949" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="72.85" y="2959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((RETURN-FROM-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.8" y="4757" width="0.3" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="134.79" y="4767.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="63.3" y="2821" width="2.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="66.32" y="2831.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (1 samples, 0.02%)</title><rect x="96.5" y="4869" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="99.51" y="4879.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="61.7" y="1765" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="64.75" y="1775.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="437" width="1.0" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="58.48" y="447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.2" y="3717" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="132.18" y="3727.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="159.0" y="5333" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="161.97" y="5343.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (5 samples, 0.11%)</title><rect x="252.0" y="5429" width="1.3" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="255.01" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="2293" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="73.63" y="2303.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="331.7" y="5077" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="334.72" y="5087.5" ></text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="28.0" y="4357" width="0.6" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="31.03" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((RETURN-FROM-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="143.6" y="5221" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="146.55" y="5231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4485" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="141.32" y="4495.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="1013" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="65.53" y="1023.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="61.7" y="2373" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="64.75" y="2383.5" ></text>
</g>
<g >
<title>`llvm::ScopedNoAliasAAResult::mayAliasInScopes(llvm::MDNode cons (1 samples, 0.02%)</title><rect x="662.9" y="5525" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="665.85" y="5535.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="53.9" y="2805" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="56.91" y="2815.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="506.8" y="5493" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="509.83" y="5503.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="105.9" y="5525" width="0.3" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="108.92" y="5535.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="614.0" y="5525" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="616.98" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.0" y="2181" width="0.3" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="65.01" y="2191.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (2 samples, 0.04%)</title><rect x="174.4" y="5333" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="177.39" y="5343.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (1 samples, 0.02%)</title><rect x="341.7" y="5077" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="344.65" y="5087.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (10 samples, 0.22%)</title><rect x="49.7" y="3749" width="2.6" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="52.73" y="3759.5" ></text>
</g>
<g >
<title>`FUNCTION-TYPE^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="51.8" y="3445" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="54.82" y="3455.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (3 samples, 0.07%)</title><rect x="65.4" y="2309" width="0.8" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="68.41" y="2319.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="33.3" y="4245" width="0.2" height="15.0" fill="rgb(215,73,73)" rx="2" ry="2" />
<text  x="36.26" y="4255.5" ></text>
</g>
<g >
<title>`OPTIMIZED-PRECALC-VALUE-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="130.7" y="4549" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="133.74" y="4559.5" ></text>
</g>
<g >
<title>`llvm::removeUnreachableBlocks(llvm::Function&amp;, llvm::LazyValueI (2 samples, 0.04%)</title><rect x="587.1" y="5653" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="590.06" y="5663.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="17.3" y="2037" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="20.32" y="2047.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (71 samples, 1.57%)</title><rect x="52.9" y="3669" width="18.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="55.86" y="3679.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="94.9" y="4517" width="0.6" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="97.94" y="4527.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="68.5" y="2629" width="1.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="71.54" y="2639.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="117.7" y="5557" width="0.2" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="120.68" y="5567.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm (1 samples, 0.02%)</title><rect x="731.1" y="5621" width="0.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="734.07" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="23.6" y="4597" width="1.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="26.59" y="4607.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (30 samples, 0.66%)</title><rect x="27.5" y="4613" width="7.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="30.51" y="4623.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (15 samples, 0.33%)</title><rect x="148.3" y="5477" width="3.9" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="151.25" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (55 samples, 1.22%)</title><rect x="81.3" y="4693" width="14.4" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="84.35" y="4703.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="5477" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="100.55" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="70.6" y="2965" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="73.63" y="2975.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="12.6" y="4213" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="15.61" y="4223.5" ></text>
</g>
<g >
<title>`wrapped_core__copy_instance_T_sp (1 samples, 0.02%)</title><rect x="112.4" y="5621" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="115.45" y="5631.5" ></text>
</g>
<g >
<title>`FIND-OR-CREATE-LOCATION^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="138.6" y="4773" width="0.2" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="141.58" y="4783.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="194.5" y="5509" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="197.51" y="5519.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="321.3" y="5173" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="324.27" y="5183.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="243.4" y="5557" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="246.39" y="5567.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::BasicBlock&gt;, llvm::S (1 samples, 0.02%)</title><rect x="589.7" y="5605" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="592.68" y="5615.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.02%)</title><rect x="386.3" y="5397" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="389.35" y="5407.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (8 samples, 0.18%)</title><rect x="63.3" y="2885" width="2.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="66.32" y="2895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4821" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="140.28" y="4831.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.1" y="2261" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="68.15" y="2271.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="329.9" y="5125" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="332.89" y="5135.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CVPLatticeFunc::ComputeInstructionState( (8 samples, 0.18%)</title><rect x="703.6" y="5669" width="2.1" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="706.63" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="23.9" y="4021" width="0.7" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="26.85" y="4031.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="1317" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="65.01" y="1327.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (1 samples, 0.02%)</title><rect x="458.7" y="5621" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="461.74" y="5631.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="3157" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="73.11" y="3167.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.02%)</title><rect x="220.4" y="5557" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="223.39" y="5567.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="92.8" y="4437" width="0.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="95.85" y="4447.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (18 samples, 0.40%)</title><rect x="17.3" y="2325" width="4.7" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="20.32" y="2335.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (3 samples, 0.07%)</title><rect x="441.8" y="5621" width="0.7" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="444.75" y="5631.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2789" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="65.27" y="2799.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (6 samples, 0.13%)</title><rect x="50.0" y="3413" width="1.6" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="52.99" y="3423.5" ></text>
</g>
<g >
<title>`llvm::APInt::APInt(llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="516.2" y="5509" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="519.24" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.04%)</title><rect x="127.1" y="5589" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="130.09" y="5599.5" ></text>
</g>
<g >
<title>`llvm::isFreeCall(llvm::Value const*, llvm::TargetLibraryInfo co (1 samples, 0.02%)</title><rect x="645.1" y="5605" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="648.08" y="5615.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::make(unsigned long, int, bool, gctools::smart_p (1 samples, 0.02%)</title><rect x="46.1" y="4949" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="49.07" y="4959.5" ></text>
</g>
<g >
<title>`REPLACE-TYPEQ^CC-HIR-TO-MIR^FN^^ (6 samples, 0.13%)</title><rect x="258.0" y="5589" width="1.6" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="261.02" y="5599.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (6 samples, 0.13%)</title><rect x="57.8" y="1605" width="1.6" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="60.83" y="1615.5" ></text>
</g>
<g >
<title>`COMPILE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="732.9" y="5669" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="735.90" y="5679.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.02%)</title><rect x="150.3" y="5061" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="153.35" y="5071.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (1 samples, 0.02%)</title><rect x="79.5" y="3621" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="82.52" y="3631.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="229" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="61.35" y="239.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="21.2" y="1957" width="0.6" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="24.24" y="1967.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="349.0" y="5253" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="351.97" y="5263.5" ></text>
</g>
<g >
<title>`VALID-KEYWORDS-FROM-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="14.2" y="3093" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="17.18" y="3103.5" ></text>
</g>
<g >
<title>`core::cl__eval(gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.09%)</title><rect x="734.2" y="5733" width="1.0" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="737.20" y="5743.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="732.9" y="5541" width="0.3" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="735.90" y="5551.5" ></text>
</g>
<g >
<title>`IRC-CCLASP-FUNCTION-CREATE^COMPILER^FN^^ (7 samples, 0.16%)</title><rect x="335.6" y="5253" width="1.9" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="338.64" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="57.6" y="917" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="60.57" y="927.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="261" width="1.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="59.52" y="271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4149" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="132.70" y="4159.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::Instruction&gt;, llvm:: (1 samples, 0.02%)</title><rect x="438.6" y="5637" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="441.62" y="5647.5" ></text>
</g>
<g >
<title>`MAKE-LET-INIT-ASTS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="72.7" y="4853" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="75.72" y="4863.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5317" width="0.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="123.55" y="5327.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="1957" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="64.22" y="1967.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasGEP(llvm::GEPOperator const*, unsigne (1 samples, 0.02%)</title><rect x="523.0" y="5477" width="0.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="526.03" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3989" width="0.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="132.96" y="3999.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((FIXNUM-EQUAL-INSTR (1 samples, 0.02%)</title><rect x="320.2" y="5285" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="323.22" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="148.8" y="4933" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="151.78" y="4943.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="2037" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="65.79" y="2047.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="21.5" y="1157" width="0.3" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="24.50" y="1167.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (4 samples, 0.09%)</title><rect x="153.0" y="5045" width="1.0" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="155.96" y="5055.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="1445" width="1.1" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="59.52" y="1455.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="344.3" y="5205" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="347.27" y="5215.5" ></text>
</g>
<g >
<title>`DBG-SET-IRBUILDER-SOURCE-LOCATION^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="291.5" y="5445" width="0.8" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="294.48" y="5455.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="59.9" y="3173" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="62.92" y="3183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (14 samples, 0.31%)</title><rect x="148.3" y="5429" width="3.6" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="151.25" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4469" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="137.40" y="4479.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (1 samples, 0.02%)</title><rect x="523.0" y="5509" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="526.03" y="5519.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (14 samples, 0.31%)</title><rect x="253.6" y="5589" width="3.6" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="256.58" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="1765" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="73.63" y="1775.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="1493" width="1.1" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="59.52" y="1503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4677" width="0.2" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="136.36" y="4687.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="146.7" y="5365" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="149.69" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:BEFORE) (NO-VALUE-AST-MIXIN T (1 samples, 0.02%)</title><rect x="152.2" y="5349" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="155.17" y="5359.5" ></text>
</g>
<g >
<title>`llvm::AssumptionCacheTracker::getAssumptionCache(llvm::Function (1 samples, 0.02%)</title><rect x="457.4" y="5669" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="460.43" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="66.2" y="1637" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="69.19" y="1647.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (2 samples, 0.04%)</title><rect x="505.0" y="5493" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="508.00" y="5503.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (1 samples, 0.02%)</title><rect x="203.1" y="5397" width="0.3" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="206.14" y="5407.5" ></text>
</g>
<g >
<title>`FUDGE-VALUES-TYPE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="43.2" y="4373" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="46.19" y="4383.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="65.9" y="1941" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="68.93" y="1951.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="160.3" y="4917" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="163.28" y="4927.5" ></text>
</g>
<g >
<title>`0x1065e7efb (1 samples, 0.02%)</title><rect x="45.8" y="5077" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="48.81" y="5087.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2645" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="64.75" y="2655.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4661" width="1.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="26.59" y="4671.5" ></text>
</g>
<g >
<title>`APPEND^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="254.4" y="5573" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="257.36" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="24.6" y="4229" width="1.1" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="27.64" y="4239.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="739.4" y="5653" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="742.43" y="5663.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="24.9" y="3461" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="27.90" y="3471.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;std::__1::unique_ptr&lt;llvm::AAResults::Con (1 samples, 0.02%)</title><rect x="456.6" y="5637" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="459.65" y="5647.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="418.8" y="5525" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="421.75" y="5535.5" ></text>
</g>
<g >
<title>`DATUM-INDEX^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="121.6" y="5589" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="124.60" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4293" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="139.76" y="4303.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (1 samples, 0.02%)</title><rect x="441.8" y="5589" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="444.75" y="5599.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (58 samples, 1.28%)</title><rect x="81.1" y="5013" width="15.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="84.09" y="5023.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="148.3" y="5061" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="151.25" y="5071.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="389" width="1.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="57.17" y="399.5" ></text>
</g>
<g >
<title>`wrapped_cl__append_VaList_sp (1 samples, 0.02%)</title><rect x="236.3" y="5557" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="239.33" y="5567.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="85.5" y="4453" width="0.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="88.53" y="4463.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="313.7" y="5397" width="0.3" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="316.69" y="5407.5" ></text>
</g>
<g >
<title>`llvm::SimplifyGEPInst(llvm::Type*, llvm::ArrayRef&lt;llvm::Value*&gt; (4 samples, 0.09%)</title><rect x="491.7" y="5605" width="1.0" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="494.67" y="5615.5" ></text>
</g>
<g >
<title>`GC_mark_from (3 samples, 0.07%)</title><rect x="47.4" y="4805" width="0.8" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="50.37" y="4815.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="343.2" y="5205" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="346.22" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (11 samples, 0.24%)</title><rect x="62.5" y="3269" width="2.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="65.53" y="3279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="96.2" y="4917" width="0.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="99.25" y="4927.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (4 samples, 0.09%)</title><rect x="595.4" y="5621" width="1.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="598.43" y="5631.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="24.6" y="3541" width="0.6" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="27.64" y="3551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="12.4" y="4757" width="1.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="15.35" y="4767.5" ></text>
</g>
<g >
<title>`llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock* (2 samples, 0.04%)</title><rect x="697.9" y="5605" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="700.88" y="5615.5" ></text>
</g>
<g >
<title>`LOAD-TIME-REFERENCE-LITERAL^LITERAL^FN^^ (3 samples, 0.07%)</title><rect x="335.9" y="5205" width="0.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="338.90" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="63.6" y="2453" width="1.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="66.58" y="2463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.2" y="3557" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="132.18" y="3567.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="687.4" y="5653" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="690.42" y="5663.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (3 samples, 0.07%)</title><rect x="185.1" y="5541" width="0.8" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="188.11" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'QUOTE) T T T))^M (1 samples, 0.02%)</title><rect x="79.0" y="3589" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="82.00" y="3599.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (7 samples, 0.16%)</title><rect x="302.2" y="5413" width="1.8" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="305.19" y="5423.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1317" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="24.50" y="1327.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="54.2" y="1333" width="1.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="57.17" y="1343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="1989" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="65.79" y="1999.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (19 samples, 0.42%)</title><rect x="207.3" y="5605" width="5.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="210.32" y="5615.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.1" y="2213" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="20.06" y="2223.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="429.5" y="5573" width="0.2" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="432.47" y="5583.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1973" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="65.01" y="1983.5" ></text>
</g>
<g >
<title>`std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt; (1 samples, 0.02%)</title><rect x="376.4" y="5301" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="379.41" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4725" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="136.62" y="4735.5" ></text>
</g>
<g >
<title>0x10d596094 (18 samples, 0.40%)</title><rect x="65.4" y="3381" width="4.7" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="68.41" y="3391.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (6 samples, 0.13%)</title><rect x="57.8" y="1637" width="1.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="60.83" y="1647.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (2 samples, 0.04%)</title><rect x="105.4" y="5541" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="108.39" y="5551.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (25 samples, 0.55%)</title><rect x="16.3" y="2949" width="6.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="19.27" y="2959.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (1 samples, 0.02%)</title><rect x="61.2" y="1909" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="64.22" y="1919.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="66.5" y="1925" width="1.0" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="69.45" y="1935.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="14.7" y="2597" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="17.70" y="2607.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="1109" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="68.93" y="1119.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (1 samples, 0.02%)</title><rect x="460.0" y="5621" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="463.05" y="5631.5" ></text>
</g>
<g >
<title>`ADVANCE-HASH-TABLE-ITERATOR^CORE^FN^^ (2 samples, 0.04%)</title><rect x="280.8" y="5621" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="283.76" y="5631.5" ></text>
</g>
<g >
<title>`llvm::hash_value(llvm::GVN::Expression const&amp;) (1 samples, 0.02%)</title><rect x="578.2" y="5541" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="581.18" y="5551.5" ></text>
</g>
<g >
<title>`INTERPRET-DTREE-PROGRAM^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="242.9" y="5573" width="0.2" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="245.86" y="5583.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="455.6" y="5573" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="458.60" y="5583.5" ></text>
</g>
<g >
<title>`core::cl__macroexpand(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="735.0" y="5717" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="737.99" y="5727.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="316.6" y="5285" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="319.56" y="5295.5" ></text>
</g>
<g >
<title>`PROCESS-KEYS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5221" width="1.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="14.31" y="5231.5" ></text>
</g>
<g >
<title>`llvm::DeadArgumentEliminationPass::SurveyFunction(llvm::Functio (1 samples, 0.02%)</title><rect x="587.6" y="5669" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="590.59" y="5679.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="16.5" y="2245" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="19.53" y="2255.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2581" width="1.8" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="60.57" y="2591.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (234 samples, 5.18%)</title><rect x="36.4" y="5445" width="61.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="39.40" y="5455.5" >`CONVE..</text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="21.5" y="1189" width="0.3" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="24.50" y="1199.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="333.8" y="5093" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="336.81" y="5103.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (1 samples, 0.02%)</title><rect x="167.3" y="4933" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="170.33" y="4943.5" ></text>
</g>
<g >
<title>`CONVERT-TO-TLL^CC-HIR-TO-MIR^FN^^ (2 samples, 0.04%)</title><rect x="186.2" y="5509" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="189.15" y="5519.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (3 samples, 0.07%)</title><rect x="243.6" y="5557" width="0.8" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="246.65" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4565" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="135.31" y="4575.5" ></text>
</g>
<g >
<title>`getAllocationData(llvm::Value const*, AllocType, llvm::TargetLi (2 samples, 0.04%)</title><rect x="599.1" y="5621" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="602.09" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="66.2" y="2405" width="1.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="69.19" y="2415.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="53.1" y="3157" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="56.12" y="3167.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="661" width="1.1" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="59.52" y="671.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="149.8" y="5013" width="0.3" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="152.82" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="4101" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="131.65" y="4111.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="40.1" y="4101" width="0.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="43.06" y="4111.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (1 samples, 0.02%)</title><rect x="44.2" y="4501" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="47.24" y="4511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="4021" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="131.65" y="4031.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (36 samples, 0.80%)</title><rect x="14.2" y="4485" width="9.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="17.18" y="4495.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (3 samples, 0.07%)</title><rect x="463.4" y="5605" width="0.8" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="466.44" y="5615.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::reference_raw_(core::Symbol_O*, gcto (1 samples, 0.02%)</title><rect x="366.7" y="5397" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="369.74" y="5407.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CATCH-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="157.1" y="5285" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="160.14" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (23 samples, 0.51%)</title><rect x="38.7" y="4725" width="6.1" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="41.75" y="4735.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="10.5" y="5733" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="13.52" y="5743.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (188 samples, 4.16%)</title><rect x="739.7" y="5669" width="49.1" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="742.69" y="5679.5" >`GC_..</text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.02%)</title><rect x="566.7" y="5461" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="569.68" y="5471.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4341" width="23.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="52.46" y="4351.5" >`..</text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="63.6" y="2725" width="1.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="66.58" y="2735.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="213" width="1.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="57.17" y="223.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5093" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="180.26" y="5103.5" ></text>
</g>
<g >
<title>`llvm::BlockFrequencyInfo::calculate(llvm::Function const&amp;, llvm (4 samples, 0.09%)</title><rect x="601.4" y="5653" width="1.1" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="604.44" y="5663.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.04%)</title><rect x="105.4" y="5509" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="108.39" y="5519.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm (1 samples, 0.02%)</title><rect x="361.3" y="5173" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="364.26" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4549" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="135.31" y="4559.5" ></text>
</g>
<g >
<title>`PROCESS-KEYS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4885" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="100.29" y="4895.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (2 samples, 0.04%)</title><rect x="160.0" y="4933" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="163.02" y="4943.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$llvm::SymbolTableListTraits&lt;llvm::Instruction&gt;::addN (1 samples, 0.02%)</title><rect x="378.2" y="5333" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="381.24" y="5343.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (2 samples, 0.04%)</title><rect x="476.8" y="5541" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="479.77" y="5551.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (26 samples, 0.58%)</title><rect x="16.3" y="3717" width="6.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="19.27" y="3727.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (6 samples, 0.13%)</title><rect x="351.8" y="5269" width="1.6" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="354.85" y="5279.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="62.5" y="3173" width="0.6" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="65.53" y="3183.5" ></text>
</g>
<g >
<title>`cc_makeCell (1 samples, 0.02%)</title><rect x="126.0" y="5637" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="129.04" y="5647.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.1" y="1077" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="67.10" y="1087.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="21.2" y="1893" width="0.6" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="24.24" y="1903.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (12 samples, 0.27%)</title><rect x="78.0" y="4837" width="3.1" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="80.95" y="4847.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.02%)</title><rect x="266.6" y="5493" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="269.65" y="5503.5" ></text>
</g>
<g >
<title>`bitTrackingDCE(llvm::Function&amp;, llvm::DemandedBits&amp;) (5 samples, 0.11%)</title><rect x="450.4" y="5669" width="1.3" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="453.38" y="5679.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="31.4" y="4325" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="34.43" y="4335.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (10 samples, 0.22%)</title><rect x="546.6" y="5397" width="2.6" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="549.55" y="5407.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="328.8" y="5253" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="331.85" y="5263.5" ></text>
</g>
<g >
<title>`MAKE-CONDITION^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="735.0" y="5525" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="737.99" y="5535.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1813" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="20.58" y="1823.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::initializeAnalysisImpl(llvm::Pass*) (2 samples, 0.04%)</title><rect x="687.7" y="5669" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="690.68" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4293" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="132.70" y="4303.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="177.3" y="4869" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="180.26" y="4879.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="142.8" y="4965" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="145.77" y="4975.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (16 samples, 0.35%)</title><rect x="509.4" y="5573" width="4.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="512.44" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (7 samples, 0.16%)</title><rect x="135.2" y="4869" width="1.8" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="138.19" y="4879.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hash_combine&lt;unsigned int, unsigned int,  (2 samples, 0.04%)</title><rect x="300.9" y="5349" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="303.88" y="5359.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.02%)</title><rect x="645.3" y="5605" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="648.34" y="5615.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (10 samples, 0.22%)</title><rect x="74.6" y="4037" width="2.6" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="77.55" y="4047.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="133.9" y="4869" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="136.88" y="4879.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (109 samples, 2.41%)</title><rect x="49.5" y="5013" width="28.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="52.46" y="5023.5" >`C..</text>
</g>
<g >
<title>`llvm::GVN::assignBlockRPONumber(llvm::Function&amp;) (1 samples, 0.02%)</title><rect x="537.7" y="5637" width="0.2" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="540.67" y="5647.5" ></text>
</g>
<g >
<title>`llvm::User::operator new(unsigned long, unsigned int) (2 samples, 0.04%)</title><rect x="530.9" y="5605" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="533.87" y="5615.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2581" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="64.75" y="2591.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="80.8" y="4709" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="83.83" y="4719.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (2 samples, 0.04%)</title><rect x="283.4" y="5365" width="0.5" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="286.37" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="148.8" y="4917" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="151.78" y="4927.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.02%)</title><rect x="468.4" y="5557" width="0.3" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="471.41" y="5567.5" ></text>
</g>
<g >
<title>`llvm::TrackingMDRef::~TrackingMDRef() (1 samples, 0.02%)</title><rect x="487.0" y="5557" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="489.97" y="5567.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="570.3" y="5525" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="573.34" y="5535.5" ></text>
</g>
<g >
<title>`llvm::Type::getPrimitiveSizeInBits() const (1 samples, 0.02%)</title><rect x="515.5" y="5621" width="0.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="518.45" y="5631.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="53.4" y="2661" width="0.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="56.38" y="2671.5" ></text>
</g>
<g >
<title>`core::core__integer_to_string(gctools::smart_ptr&lt;core::StrNs_O&gt; (1 samples, 0.02%)</title><rect x="133.9" y="4853" width="0.2" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="136.88" y="4863.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (2 samples, 0.04%)</title><rect x="386.9" y="5365" width="0.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="389.87" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4357" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="138.19" y="4367.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="2757" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="64.75" y="2767.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4421" width="1.0" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="26.59" y="4431.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1269" width="1.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="57.17" y="1279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="57.6" y="1413" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="60.57" y="1423.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="429.7" y="5541" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="432.73" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="67.2" y="1637" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="70.24" y="1647.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyDemandedInstructionBits(llvm::Instr (2 samples, 0.04%)</title><rect x="635.2" y="5605" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="638.15" y="5615.5" ></text>
</g>
<g >
<title>`core::string_get_std_string(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.04%)</title><rect x="113.2" y="5621" width="0.6" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="116.23" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="136.8" y="3957" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="139.76" y="3967.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (1 samples, 0.02%)</title><rect x="58.3" y="469" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="61.35" y="479.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="543.2" y="5509" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="546.16" y="5519.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="66.2" y="2325" width="1.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="69.19" y="2335.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="51.0" y="2661" width="0.6" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="54.03" y="2671.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::untrack(void*, llvm::Metadata&amp;) (1 samples, 0.02%)</title><rect x="720.4" y="5605" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="723.35" y="5615.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="141.5" y="5029" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="144.46" y="5039.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="64.1" y="1781" width="1.0" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="67.10" y="1791.5" ></text>
</g>
<g >
<title>`VARIABLE-TYPE^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="42.9" y="4213" width="0.3" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="45.93" y="4223.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="38.0" y="4709" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="40.96" y="4719.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (2 samples, 0.04%)</title><rect x="660.2" y="5509" width="0.6" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="663.24" y="5519.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="562.5" y="5461" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="565.50" y="5471.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="139.6" y="5125" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="142.63" y="5135.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (10 samples, 0.22%)</title><rect x="74.6" y="4021" width="2.6" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="77.55" y="4031.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="95.2" y="4453" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="98.20" y="4463.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="651.6" y="5349" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="654.62" y="5359.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2341" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="71.28" y="2351.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="710.2" y="5589" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="713.16" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="64.1" y="1845" width="1.0" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="67.10" y="1855.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="735.5" y="5589" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="738.51" y="5599.5" ></text>
</g>
<g >
<title>`FUNCTION-INLINE^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="76.6" y="3765" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="79.64" y="3775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4245" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="139.76" y="4255.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="156.9" y="5237" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="159.88" y="5247.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^ (1 samples, 0.02%)</title><rect x="62.5" y="565" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="65.53" y="575.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="1909" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="73.63" y="1919.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'TAGBODY) T T T)) (1 samples, 0.02%)</title><rect x="62.8" y="1877" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="65.79" y="1887.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (22 samples, 0.49%)</title><rect x="38.7" y="4645" width="5.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="41.75" y="4655.5" ></text>
</g>
<g >
<title>`llvm::Value::~Value() (1 samples, 0.02%)</title><rect x="697.1" y="5541" width="0.3" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="700.09" y="5551.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1333" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="69.19" y="1343.5" ></text>
</g>
<g >
<title>`GC_mark_local (3 samples, 0.07%)</title><rect x="153.0" y="4981" width="0.7" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="155.96" y="4991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (12 samples, 0.27%)</title><rect x="139.9" y="5157" width="3.1" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="142.89" y="5167.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="23.9" y="3669" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="26.85" y="3679.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.7" y="2885" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="64.75" y="2895.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2693" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="65.01" y="2703.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="593.9" y="5557" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="596.86" y="5567.5" ></text>
</g>
<g >
<title>`host_get_clock_service (1 samples, 0.02%)</title><rect x="285.2" y="5589" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="288.20" y="5599.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (8 samples, 0.18%)</title><rect x="78.5" y="4005" width="2.1" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="81.47" y="4015.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (30 samples, 0.66%)</title><rect x="37.4" y="4981" width="7.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="40.44" y="4991.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (2 samples, 0.04%)</title><rect x="14.7" y="2725" width="0.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="17.70" y="2735.5" ></text>
</g>
<g >
<title>`FUDGE-VALUES-TYPE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="51.0" y="2597" width="0.6" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="54.03" y="2607.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="280.0" y="5589" width="0.2" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="282.98" y="5599.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="333.6" y="5013" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="336.55" y="5023.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.02%)</title><rect x="66.7" y="1397" width="0.3" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="69.71" y="1407.5" ></text>
</g>
<g >
<title>`LOAD^COMMON-LISP^FN^^ (217 samples, 4.81%)</title><rect x="732.4" y="5909" width="56.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="735.37" y="5919.5" >`LOAD^..</text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="245.0" y="5557" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="247.95" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((THE-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4917" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="142.11" y="4927.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1765" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="65.01" y="1775.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIndexedOffsetInType(llvm::Type*, llvm::Arr (1 samples, 0.02%)</title><rect x="529.0" y="5493" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="532.04" y="5503.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, void (llvmo::IRBuilderBase_O::*)()&gt;::m (1 samples, 0.02%)</title><rect x="357.9" y="5317" width="0.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="360.86" y="5327.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1653" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="65.79" y="1663.5" ></text>
</g>
<g >
<title>0x10d596094 (3 samples, 0.07%)</title><rect x="61.7" y="3253" width="0.8" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="64.75" y="3263.5" ></text>
</g>
<g >
<title>`vsprintf_l (1 samples, 0.02%)</title><rect x="96.8" y="5045" width="0.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="99.77" y="5055.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.02%)</title><rect x="580.8" y="5605" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="583.79" y="5615.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIntPtrType(llvm::Type*) const (1 samples, 0.02%)</title><rect x="647.7" y="5605" width="0.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="650.70" y="5615.5" ></text>
</g>
<g >
<title>`char* llvm::hashing::detail::hash_combine_recursive_helper::com (1 samples, 0.02%)</title><rect x="493.8" y="5397" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="496.76" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (109 samples, 2.41%)</title><rect x="49.5" y="4933" width="28.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="52.46" y="4943.5" >`C..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="67.2" y="1557" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="70.24" y="1567.5" ></text>
</g>
<g >
<title>0x10d596094 (3 samples, 0.07%)</title><rect x="66.5" y="1813" width="0.7" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="69.45" y="1823.5" ></text>
</g>
<g >
<title>`FUNCTION-TYPE^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="51.8" y="3509" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="54.82" y="3519.5" ></text>
</g>
<g >
<title>`core::ext__class_unboundp(gctools::smart_ptr&lt;core::ClassHolder_ (1 samples, 0.02%)</title><rect x="282.3" y="5605" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="285.33" y="5615.5" ></text>
</g>
<g >
<title>`FUNCTION-INLINE^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="76.6" y="3781" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="79.64" y="3791.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="238.4" y="5365" width="0.3" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="241.42" y="5375.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="333.0" y="5077" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="336.03" y="5087.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="805" width="1.0" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="58.48" y="815.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="64.4" y="485" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="67.36" y="495.5" ></text>
</g>
<g >
<title>`core::HashTableEqual_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt; (1 samples, 0.02%)</title><rect x="379.0" y="5365" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="382.03" y="5375.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="3045" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="73.63" y="3055.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="60.2" y="3093" width="1.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="63.18" y="3103.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="2053" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="65.01" y="2063.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SimplifyCFGOpt::SimplifyCondBranch(llvm: (5 samples, 0.11%)</title><rect x="695.3" y="5605" width="1.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="698.26" y="5615.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="145.1" y="4997" width="0.3" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="148.12" y="5007.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="463.7" y="5573" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="466.71" y="5583.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (52 samples, 1.15%)</title><rect x="545.2" y="5493" width="13.6" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="548.25" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="4069" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="100.29" y="4079.5" ></text>
</g>
<g >
<title>`llvm::isAllocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo (1 samples, 0.02%)</title><rect x="521.7" y="5621" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="524.73" y="5631.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="53.9" y="2821" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="56.91" y="2831.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="71.9" y="3765" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="74.94" y="3775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (17 samples, 0.38%)</title><rect x="132.6" y="4949" width="4.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="135.57" y="4959.5" ></text>
</g>
<g >
<title>`llvm::APInt::sdiv(llvm::APInt const&amp;) const (1 samples, 0.02%)</title><rect x="466.1" y="5573" width="0.2" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="469.06" y="5583.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="399.9" y="5285" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="402.94" y="5295.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (71 samples, 1.57%)</title><rect x="52.9" y="3845" width="18.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="55.86" y="3855.5" ></text>
</g>
<g >
<title>0x10d596094 (6 samples, 0.13%)</title><rect x="50.0" y="3509" width="1.6" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="52.99" y="3519.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (3 samples, 0.07%)</title><rect x="234.5" y="5365" width="0.8" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="237.50" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (46 samples, 1.02%)</title><rect x="159.5" y="5173" width="12.0" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="162.49" y="5183.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (2 samples, 0.04%)</title><rect x="661.5" y="5445" width="0.6" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="664.55" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (82 samples, 1.82%)</title><rect x="14.2" y="4949" width="21.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="17.18" y="4959.5" >`..</text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5221" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="736.42" y="5231.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="59.9" y="3269" width="1.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="62.92" y="3279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.1" y="4901" width="0.6" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="137.14" y="4911.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2261" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="65.79" y="2271.5" ></text>
</g>
<g >
<title>`llvm::GetElementPtrInst::hasAllZeroIndices() const (1 samples, 0.02%)</title><rect x="636.2" y="5589" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="639.20" y="5599.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="364.4" y="5205" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="367.39" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="64.9" y="1317" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="67.88" y="1327.5" ></text>
</g>
<g >
<title>`TREAT-AS-SPECIAL-OPERATOR-P^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="44.2" y="4485" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="47.24" y="4495.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="21.0" y="1813" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="23.98" y="1823.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="321.0" y="5221" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="324.01" y="5231.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="39.3" y="4245" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="42.27" y="4255.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (7 samples, 0.16%)</title><rect x="315.3" y="5349" width="1.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="318.26" y="5359.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromAssume(llvm::Value const*, llvm::KnownBits&amp; (1 samples, 0.02%)</title><rect x="677.5" y="5573" width="0.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="680.49" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.0" y="3045" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="65.01" y="3055.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (2 samples, 0.04%)</title><rect x="660.2" y="5493" width="0.6" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="663.24" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (11 samples, 0.24%)</title><rect x="49.7" y="3877" width="2.9" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="52.73" y="3887.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="160.0" y="5045" width="1.6" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="163.02" y="5055.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.2" y="2469" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="64.22" y="2479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="169.7" y="4997" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="172.69" y="5007.5" ></text>
</g>
<g >
<title>`vsprintf_l (1 samples, 0.02%)</title><rect x="161.6" y="4949" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="164.58" y="4959.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (6 samples, 0.13%)</title><rect x="505.8" y="5541" width="1.6" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="508.78" y="5551.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="309.8" y="5333" width="0.2" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="312.77" y="5343.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.2" y="2245" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="64.22" y="2255.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;(anonymous namespace)::S (1 samples, 0.02%)</title><rect x="441.0" y="5605" width="0.2" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="443.97" y="5615.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2,981 samples, 66.02%)</title><rect x="10.0" y="6165" width="779.1" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="13.00" y="6175.5" >`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (7 samples, 0.16%)</title><rect x="57.6" y="2677" width="1.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="60.57" y="2687.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="62.3" y="2869" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="65.27" y="2879.5" ></text>
</g>
<g >
<title>`REDUCE-TYPEQS^CC-HIR-TO-MIR^FN^^ (38 samples, 0.84%)</title><rect x="257.5" y="5621" width="9.9" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="260.50" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4293" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="138.45" y="4303.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="70.1" y="3317" width="0.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="73.11" y="3327.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="295.4" y="5477" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="298.40" y="5487.5" ></text>
</g>
<g >
<title>`VARIABLE-IS-SPECIAL-P^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="78.5" y="3877" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="81.47" y="3887.5" ></text>
</g>
<g >
<title>`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="595.7" y="5349" width="0.2" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="598.69" y="5359.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="710.2" y="5637" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="713.16" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="53.6" y="2917" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="56.65" y="2927.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="169.4" y="4965" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="172.42" y="4975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4309" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="141.85" y="4319.5" ></text>
</g>
<g >
<title>`wrapped_llvm_sys__writeBitcodeToFile_Module_spcore__String_spbo (42 samples, 0.93%)</title><rect x="721.4" y="5749" width="11.0" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="724.40" y="5759.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="34.0" y="4309" width="0.3" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="37.04" y="4319.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="2005" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="65.01" y="2015.5" ></text>
</g>
<g >
<title>`llvm::Type::getPrimitiveSizeInBits() const (1 samples, 0.02%)</title><rect x="644.0" y="5573" width="0.3" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="647.04" y="5583.5" ></text>
</g>
<g >
<title>`llvm::TrackingMDRef::operator=(llvm::TrackingMDRef&amp;&amp;) (1 samples, 0.02%)</title><rect x="520.4" y="5637" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="523.42" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.2" y="3621" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="132.18" y="3631.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1733" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="68.93" y="1743.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="53.6" y="2709" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="56.65" y="2719.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.1" y="2261" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="20.06" y="2271.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="157.9" y="5365" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="160.92" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-HEADER-CHECK^COMPILER^FN^^ (7 samples, 0.16%)</title><rect x="293.3" y="5445" width="1.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="296.30" y="5455.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (2 samples, 0.04%)</title><rect x="528.8" y="5509" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="531.78" y="5519.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;std::__1::pair&lt;llvm::WeakTrackingVH, llvm (3 samples, 0.07%)</title><rect x="593.3" y="5637" width="0.8" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="596.34" y="5647.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="63.1" y="2613" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="66.05" y="2623.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (4 samples, 0.09%)</title><rect x="608.5" y="5605" width="1.0" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="611.49" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4069" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="132.96" y="4079.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="38.0" y="4789" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="40.96" y="4799.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (3 samples, 0.07%)</title><rect x="18.4" y="1925" width="0.7" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="21.36" y="1935.5" ></text>
</g>
<g >
<title>`llvm::IRBuilderBase::SetInsertPoint(llvm::Instruction*) (1 samples, 0.02%)</title><rect x="485.9" y="5541" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="488.92" y="5551.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (3 samples, 0.07%)</title><rect x="201.0" y="5349" width="0.8" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="204.05" y="5359.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.04%)</title><rect x="390.5" y="5397" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="393.53" y="5407.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="263.8" y="5541" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="266.77" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="66.2" y="1765" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="69.19" y="1775.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="70.6" y="1653" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="73.63" y="1663.5" ></text>
</g>
<g >
<title>`core::core__convert_overflow_result_to_bignum(gctools::smart_pt (1 samples, 0.02%)</title><rect x="739.4" y="5717" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="742.43" y="5727.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="130.7" y="4645" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="133.74" y="4655.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4325" width="23.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="52.46" y="4335.5" >`..</text>
</g>
<g >
<title>`llvm::ReversePostOrderTraversal&lt;llvm::Function*, llvm::GraphTra (1 samples, 0.02%)</title><rect x="537.7" y="5605" width="0.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="540.67" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (55 samples, 1.22%)</title><rect x="159.2" y="5381" width="14.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="162.23" y="5391.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (1,518 samples, 33.62%)</title><rect x="792.5" y="6325" width="396.7" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="795.49" y="6335.5" >`GC_do_local_mark</text>
</g>
<g >
<title>`core::HashTableEql_O::keyTest(gctools::smart_ptr&lt;core::T_O&gt;, gc (1 samples, 0.02%)</title><rect x="35.9" y="4981" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="38.87" y="4991.5" ></text>
</g>
<g >
<title>`bool llvm::InvokeInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt; (1 samples, 0.02%)</title><rect x="428.2" y="5653" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="431.16" y="5663.5" ></text>
</g>
<g >
<title>`tiny_free_detach_region (1 samples, 0.02%)</title><rect x="665.7" y="5541" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="668.73" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="3077" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="65.27" y="3087.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="95.5" y="4565" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="98.46" y="4575.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="60.7" y="2709" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="63.70" y="2719.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="314.5" y="5301" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="317.47" y="5311.5" ></text>
</g>
<g >
<title>`DBG-CREATE-FUNCTION-TYPE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="366.0" y="5397" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="368.96" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="60.2" y="2485" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="63.18" y="2495.5" ></text>
</g>
<g >
<title>`PROCESS-KEYS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="3013" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="17.70" y="3023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4613" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="139.76" y="4623.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1221" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="24.50" y="1231.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="2549" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="65.79" y="2559.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1557" width="1.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="59.52" y="1567.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="97.6" y="5573" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="100.55" y="5583.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="344.8" y="5173" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="347.79" y="5183.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="322.8" y="5157" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="325.84" y="5167.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1301" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="65.01" y="1311.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (21 samples, 0.47%)</title><rect x="38.7" y="4613" width="5.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="41.75" y="4623.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (4 samples, 0.09%)</title><rect x="735.8" y="5285" width="1.0" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="738.77" y="5295.5" ></text>
</g>
<g >
<title>`GC_mark_some (3 samples, 0.07%)</title><rect x="85.8" y="4325" width="0.8" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="88.79" y="4335.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1445" width="1.0" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="58.48" y="1455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="1445" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="65.53" y="1455.5" ></text>
</g>
<g >
<title>`GC_alloc_large (3 samples, 0.07%)</title><rect x="210.5" y="5461" width="0.7" height="15.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="213.46" y="5471.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="4709" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="100.55" y="4719.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.02%)</title><rect x="102.8" y="5605" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="105.78" y="5615.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="49.7" y="3797" width="2.6" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="52.73" y="3807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (75 samples, 1.66%)</title><rect x="127.6" y="5557" width="19.6" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="130.61" y="5567.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="399.7" y="5317" width="0.2" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="402.67" y="5327.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT))^ (1 samples, 0.02%)</title><rect x="79.8" y="3493" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="82.78" y="3503.5" ></text>
</g>
<g >
<title>`_pthread_mutex_lock_init_slow (1 samples, 0.02%)</title><rect x="732.4" y="5765" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="735.37" y="5775.5" ></text>
</g>
<g >
<title>`core::write_ugly_object(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.02%)</title><rect x="11.0" y="5653" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="14.05" y="5663.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (4 samples, 0.09%)</title><rect x="164.2" y="4917" width="1.0" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="167.20" y="4927.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Metadata const*&gt;::insert(llvm::Meta (1 samples, 0.02%)</title><rect x="428.9" y="5605" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="431.95" y="5615.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="26.7" y="4549" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="29.73" y="4559.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.02%)</title><rect x="397.1" y="5141" width="0.2" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="400.06" y="5151.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="14.2" y="3733" width="1.8" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="17.18" y="3743.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="17.3" y="1621" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="20.32" y="1631.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::BasicBlock*, llvm::SmallPtrSet&lt;llvm::Ba (2 samples, 0.04%)</title><rect x="685.9" y="5605" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="688.85" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4437" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="141.32" y="4447.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="137.3" y="4533" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="140.28" y="4543.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (5 samples, 0.11%)</title><rect x="54.2" y="933" width="1.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="57.17" y="943.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="254.9" y="5573" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="257.89" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="3893" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="131.65" y="3903.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="349.8" y="5253" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="352.76" y="5263.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="66.5" y="1893" width="1.0" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="69.45" y="1903.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-WITH-OWNER^CLEAVIR-IR^FN^^ (14 samples, 0.31%)</title><rect x="229.8" y="5589" width="3.7" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="232.80" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1509" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="65.01" y="1519.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="68.0" y="2389" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="71.02" y="2399.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.04%)</title><rect x="58.6" y="981" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="61.61" y="991.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="5013" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="100.55" y="5023.5" ></text>
</g>
<g >
<title>0x10d596094 (91 samples, 2.02%)</title><rect x="12.4" y="5285" width="23.7" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="15.35" y="5295.5" >0..</text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (164 samples, 3.63%)</title><rect x="314.7" y="5381" width="42.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="317.74" y="5391.5" >`DO-..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (10 samples, 0.22%)</title><rect x="65.4" y="3189" width="2.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="68.41" y="3199.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (3 samples, 0.07%)</title><rect x="274.0" y="5573" width="0.7" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="276.96" y="5583.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (5 samples, 0.11%)</title><rect x="557.0" y="5461" width="1.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="560.01" y="5471.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CONTEXT-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="173.9" y="5413" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="176.87" y="5423.5" ></text>
</g>
<g >
<title>0x10d596094 (8 samples, 0.18%)</title><rect x="55.5" y="1813" width="2.1" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="58.48" y="1823.5" ></text>
</g>
<g >
<title>`llvm::PointerType::get(llvm::Type*, unsigned int) (1 samples, 0.02%)</title><rect x="337.5" y="5173" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="340.47" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.5" y="5349" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="180.53" y="5359.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="158.7" y="5349" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="161.71" y="5359.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.02%)</title><rect x="488.8" y="5557" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="491.80" y="5567.5" ></text>
</g>
<g >
<title>`CONS-LENGTH^CORE^FN^^ (1 samples, 0.02%)</title><rect x="398.9" y="5397" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="401.89" y="5407.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (9 samples, 0.20%)</title><rect x="404.6" y="5397" width="2.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="407.64" y="5407.5" ></text>
</g>
<g >
<title>`doCallSiteSplitting(llvm::Function&amp;, llvm::TargetLibraryInfo&amp;) (3 samples, 0.07%)</title><rect x="598.8" y="5669" width="0.8" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="601.82" y="5679.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2117" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="65.27" y="2127.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="173.9" y="5397" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="176.87" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="23.1" y="3781" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="26.07" y="3791.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PointerIntPair&lt;llvm::Va (4 samples, 0.09%)</title><rect x="704.4" y="5637" width="1.1" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="707.41" y="5647.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5173" width="1.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="14.31" y="5183.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.02%)</title><rect x="491.1" y="5589" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="494.15" y="5599.5" ></text>
</g>
<g >
<title>`llvm::GVN::AnalyzeLoadAvailability(llvm::LoadInst*, llvm::MemDe (1 samples, 0.02%)</title><rect x="562.0" y="5557" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="564.97" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (5 samples, 0.11%)</title><rect x="54.2" y="789" width="1.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="57.17" y="799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="147.5" y="5509" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="150.47" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (46 samples, 1.02%)</title><rect x="159.5" y="5221" width="12.0" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="162.49" y="5231.5" ></text>
</g>
<g >
<title>`LDIFF^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="76.9" y="3909" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="79.91" y="3919.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="301.4" y="5429" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="304.41" y="5439.5" ></text>
</g>
<g >
<title>`core::make_unbound_setf_symbol_function(gctools::smart_ptr&lt;core (2 samples, 0.04%)</title><rect x="146.2" y="5077" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="149.16" y="5087.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (1 samples, 0.02%)</title><rect x="66.7" y="1493" width="0.3" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="69.71" y="1503.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.02%)</title><rect x="202.6" y="5557" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="205.62" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4341" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="137.40" y="4351.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="209.7" y="5557" width="0.2" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="212.67" y="5567.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (3 samples, 0.07%)</title><rect x="290.4" y="5493" width="0.8" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="293.43" y="5503.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2261" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="73.63" y="2271.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1509" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="69.19" y="1519.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="62.3" y="917" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="65.27" y="927.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1589" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="24.50" y="1599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4661" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="137.14" y="4671.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (3 samples, 0.07%)</title><rect x="182.0" y="5509" width="0.8" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="184.97" y="5519.5" ></text>
</g>
<g >
<title>`SUBSTITUTE-INPUT^CLEAVIR-IR^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="244.4" y="5573" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="247.43" y="5583.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::reference_raw_(core::Symbol_O*, gcto (1 samples, 0.02%)</title><rect x="301.4" y="5413" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="304.41" y="5423.5" ></text>
</g>
<g >
<title>`CLOSURE-CALL-OR-INVOKE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="333.6" y="5093" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="336.55" y="5103.5" ></text>
</g>
<g >
<title>`llvm::KnownBits::zextOrTrunc(unsigned int) (1 samples, 0.02%)</title><rect x="576.3" y="5509" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="579.35" y="5519.5" ></text>
</g>
<g >
<title>`CALL-WITH-COMPILATION-RESULTS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="732.9" y="5605" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="735.90" y="5615.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="308.2" y="5365" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="311.20" y="5375.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignment(llvm::Type*, bool) const (1 samples, 0.02%)</title><rect x="468.7" y="5589" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="471.67" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T CLASP))^METHOD^^ (2 samples, 0.04%)</title><rect x="70.1" y="3333" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="73.11" y="3343.5" ></text>
</g>
<g >
<title>`wrapped_cl__vector_push_extend_T_spVector_spsize_t (1 samples, 0.02%)</title><rect x="98.3" y="5669" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="101.34" y="5679.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (509 samples, 11.27%)</title><rect x="285.5" y="5589" width="133.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="288.46" y="5599.5" >`DO-DEBUG-INFO-S..</text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.02%)</title><rect x="159.5" y="5125" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="162.49" y="5135.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::intersectAssumeOrGuar (1 samples, 0.02%)</title><rect x="430.8" y="5605" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="433.78" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (91 samples, 2.02%)</title><rect x="12.4" y="5237" width="23.7" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="15.35" y="5247.5" >`..</text>
</g>
<g >
<title>`llvm::DeadArgumentEliminationPass::run(llvm::Module&amp;, llvm::Ana (1 samples, 0.02%)</title><rect x="587.6" y="5685" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="590.59" y="5695.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatticeElement, llvm::D (3 samples, 0.07%)</title><rect x="435.5" y="5557" width="0.8" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="438.48" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="4965" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="100.29" y="4975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (96 samples, 2.13%)</title><rect x="152.2" y="5525" width="25.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="155.17" y="5535.5" >`..</text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="595.7" y="5509" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="598.69" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="141.7" y="4997" width="0.5" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="144.72" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="97.3" y="3637" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="100.29" y="3647.5" ></text>
</g>
<g >
<title>`llvm::BumpPtrAllocatorImpl&lt;llvm::MallocAllocator, 4096ul, 4096u (1 samples, 0.02%)</title><rect x="569.6" y="5573" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="572.55" y="5583.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (3 samples, 0.07%)</title><rect x="33.3" y="4277" width="0.7" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="36.26" y="4287.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (3 samples, 0.07%)</title><rect x="516.0" y="5589" width="0.8" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="518.98" y="5599.5" ></text>
</g>
<g >
<title>`TREAT-AS-SPECIAL-OPERATOR-P^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="24.9" y="3381" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="27.90" y="3391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4517" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="136.62" y="4527.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.02%)</title><rect x="666.0" y="5605" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="668.99" y="5615.5" ></text>
</g>
<g >
<title>`llvm::Instruction::mayWriteToMemory() const (2 samples, 0.04%)</title><rect x="664.2" y="5573" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="667.16" y="5583.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="24.9" y="3429" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="27.90" y="3439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="64.4" y="1061" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="67.36" y="1071.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (20 samples, 0.44%)</title><rect x="464.5" y="5621" width="5.2" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="467.49" y="5631.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="309.8" y="5317" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="312.77" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.5" y="4757" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="140.54" y="4767.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="559.4" y="5365" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="562.36" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="57.6" y="869" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="60.57" y="879.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="188.2" y="5525" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="191.24" y="5535.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="308.2" y="5445" width="1.0" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="311.20" y="5455.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="136.0" y="4517" width="0.2" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="138.97" y="4527.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.04%)</title><rect x="189.0" y="5477" width="0.5" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="192.03" y="5487.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="56.5" y="389" width="1.1" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="59.52" y="399.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="429.7" y="5589" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="432.73" y="5599.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.1" y="2037" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="68.15" y="2047.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::Value_O&gt; gctools::GCObjectAppropriate (1 samples, 0.02%)</title><rect x="353.2" y="5189" width="0.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="356.15" y="5199.5" ></text>
</g>
<g >
<title>`PRIMITIVE-RETURN-TYPE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="311.1" y="5381" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="314.08" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.5" y="2293" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="65.53" y="2303.5" ></text>
</g>
<g >
<title>`OPTIMIZED-BOX-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="166.0" y="5061" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="169.03" y="5071.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="14.7" y="2933" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="17.70" y="2943.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::StringMapIterator&lt;llvm::Value*&gt;, bool&gt; llv (1 samples, 0.02%)</title><rect x="365.4" y="5301" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="368.44" y="5311.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="4741" width="1.1" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="14.31" y="4751.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (3 samples, 0.07%)</title><rect x="226.7" y="5541" width="0.7" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="229.66" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4789" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="136.36" y="4799.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (3 samples, 0.07%)</title><rect x="36.7" y="4901" width="0.7" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="39.66" y="4911.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="1141" width="0.3" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="65.01" y="1151.5" ></text>
</g>
<g >
<title>`core::SimpleCharacterString_O::get_std_string() const (1 samples, 0.02%)</title><rect x="292.5" y="5269" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="295.52" y="5279.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="53.1" y="2837" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="56.12" y="2847.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="197" width="1.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="59.52" y="207.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.3" y="4229" width="0.3" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="100.29" y="4239.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'MACROLET) T T T) (5 samples, 0.11%)</title><rect x="54.2" y="325" width="1.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="57.17" y="335.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::Instruction&gt;, llvm:: (1 samples, 0.02%)</title><rect x="697.6" y="5589" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="700.61" y="5599.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="53.1" y="2885" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="56.12" y="2895.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (3 samples, 0.07%)</title><rect x="736.0" y="5269" width="0.8" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="739.03" y="5279.5" ></text>
</g>
<g >
<title>`_pthread_cond_wait (1 samples, 0.02%)</title><rect x="1189.5" y="6325" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1192.48" y="6335.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;boost::io::detail::format_item&lt;char, std::__1: (1 samples, 0.02%)</title><rect x="311.9" y="5349" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="314.86" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4405" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="135.31" y="4415.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="441.2" y="5573" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="444.23" y="5583.5" ></text>
</g>
<g >
<title>`MAKE-FUNCTION-METADATA^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="418.5" y="5589" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="421.49" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="56.5" y="1669" width="1.1" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="59.52" y="1679.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (56 samples, 1.24%)</title><rect x="81.3" y="4869" width="14.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="84.35" y="4879.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, (anonymous (1 samples, 0.02%)</title><rect x="713.0" y="5621" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="716.03" y="5631.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (2 samples, 0.04%)</title><rect x="282.9" y="5541" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="285.85" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="97.6" y="4629" width="0.2" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="100.55" y="4639.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (9 samples, 0.20%)</title><rect x="24.6" y="4677" width="2.4" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="27.64" y="4687.5" ></text>
</g>
<g >
<title>`SIGNAL-SIMPLE-ERROR^CORE^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5701" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="736.42" y="5711.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (2 samples, 0.04%)</title><rect x="622.9" y="5589" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="625.87" y="5599.5" ></text>
</g>
<g >
<title>`UNSAFE-FUNCALL1^CORE^FN^^ (1 samples, 0.02%)</title><rect x="67.8" y="1317" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="70.76" y="1327.5" ></text>
</g>
<g >
<title>`TOKENIZE-CONTROL-STRING^CORE^FN^^ (1 samples, 0.02%)</title><rect x="80.8" y="4677" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="83.83" y="4687.5" ></text>
</g>
<g >
<title>`llvm::Value::doRAUW(llvm::Value*, bool) (1 samples, 0.02%)</title><rect x="425.5" y="5669" width="0.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="428.55" y="5679.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="316.6" y="5301" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="319.56" y="5311.5" ></text>
</g>
<g >
<title>`IRC-BIT-CAST^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="348.7" y="5269" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="351.71" y="5279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="137.8" y="4709" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="140.80" y="4719.5" ></text>
</g>
<g >
<title>`IRC-CALCULATE-ENTRY^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5333" width="0.2" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="123.55" y="5343.5" ></text>
</g>
<g >
<title>`POSITION^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="12.6" y="4165" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="15.61" y="4175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4773" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="136.36" y="4783.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="12.9" y="4373" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="15.87" y="4383.5" ></text>
</g>
<g >
<title>`llvm::DenseMapIterator&lt;llvm::Value*, std::__1::unique_ptr&lt;(anon (1 samples, 0.02%)</title><rect x="435.0" y="5557" width="0.2" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="437.96" y="5567.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::getHash() const (1 samples, 0.02%)</title><rect x="557.8" y="5317" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="560.79" y="5327.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="651.6" y="5445" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="654.62" y="5455.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (1 samples, 0.02%)</title><rect x="96.2" y="4725" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="99.25" y="4735.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="12.4" y="4389" width="0.7" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="15.35" y="4399.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="725" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="65.01" y="735.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1317" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="69.19" y="1327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4837" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="137.66" y="4847.5" ></text>
</g>
<g >
<title>`llvm::AnalysisResolver::addAnalysisImplsPair(void const*, llvm: (2 samples, 0.04%)</title><rect x="456.9" y="5669" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="459.91" y="5679.5" ></text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::getNumOper (1 samples, 0.02%)</title><rect x="501.6" y="5493" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="504.60" y="5503.5" ></text>
</g>
<g >
<title>`llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="366.5" y="5269" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="369.48" y="5279.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="66.2" y="2485" width="1.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="69.19" y="2495.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="53.9" y="2869" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="56.91" y="2879.5" ></text>
</g>
<g >
<title>`PROCESS-LAMBDA-LIST^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3829" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="100.29" y="3839.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4005" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="136.36" y="4015.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="661" width="1.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="58.48" y="671.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="130.5" y="4677" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="133.48" y="4687.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefBehavior(llvm::Function const*) (1 samples, 0.02%)</title><rect x="659.7" y="5509" width="0.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="662.72" y="5519.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T GLOBAL-FUNCTION-INFO))^METHOD (1 samples, 0.02%)</title><rect x="16.5" y="2293" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="19.53" y="2303.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="1957" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="68.93" y="1967.5" ></text>
</g>
<g >
<title>`llvm::GVN::ValueTable::phiTranslateImpl(llvm::BasicBlock const* (3 samples, 0.07%)</title><rect x="578.2" y="5589" width="0.8" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="581.18" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="22.0" y="2533" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="25.02" y="2543.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (233 samples, 5.16%)</title><rect x="36.4" y="5397" width="60.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="39.40" y="5407.5" >`CONVE..</text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="16.8" y="2293" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="19.80" y="2303.5" ></text>
</g>
<g >
<title>`llvm::ValueEnumerator::incorporateFunction(llvm::Function const (4 samples, 0.09%)</title><rect x="724.5" y="5653" width="1.1" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="727.53" y="5663.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.07%)</title><rect x="36.7" y="4885" width="0.7" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="39.66" y="4895.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="63.8" y="2213" width="1.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="66.84" y="2223.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (88 samples, 1.95%)</title><rect x="49.5" y="4645" width="23.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="52.46" y="4655.5" >`..</text>
</g>
<g >
<title>`DATUM-VARIABLE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="379.3" y="5461" width="0.3" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="382.29" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (114 samples, 2.52%)</title><rect x="147.5" y="5573" width="29.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="150.47" y="5583.5" >`C..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2405" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="65.53" y="2415.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="3109" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="64.75" y="3119.5" ></text>
</g>
<g >
<title>`llvmo::ClaspJIT_O::addModule(gctools::smart_ptr&lt;llvmo::Module_O (1 samples, 0.02%)</title><rect x="734.7" y="5429" width="0.3" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="737.73" y="5439.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="65.1" y="2229" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="68.15" y="2239.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="53.1" y="3077" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="56.12" y="3087.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="651.6" y="5333" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="654.62" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="64.1" y="1925" width="1.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="67.10" y="1935.5" ></text>
</g>
<g >
<title>`__v2printf (1 samples, 0.02%)</title><rect x="161.6" y="4933" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="164.58" y="4943.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (7 samples, 0.16%)</title><rect x="68.0" y="3173" width="1.8" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="71.02" y="3183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4901" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="142.11" y="4911.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="53.6" y="2789" width="0.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="56.65" y="2799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4725" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="135.31" y="4735.5" ></text>
</g>
<g >
<title>`llvm::SHA1::update(llvm::ArrayRef&lt;unsigned char&gt;) (2 samples, 0.04%)</title><rect x="727.1" y="5669" width="0.6" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="730.15" y="5679.5" ></text>
</g>
<g >
<title>`IN^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="332.8" y="5109" width="0.2" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="335.77" y="5119.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="161.6" y="5013" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="164.58" y="5023.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="132.6" y="4901" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="135.57" y="4911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4325" width="0.2" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="136.36" y="4335.5" ></text>
</g>
<g >
<title>`dyld::link(ImageLoader*, bool, bool, ImageLoader::RPathChain co (1 samples, 0.02%)</title><rect x="788.8" y="5797" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="791.83" y="5807.5" ></text>
</g>
<g >
<title>`llvm::LazyValueInfo::getConstantOnEdge(llvm::Value*, llvm::Basi (1 samples, 0.02%)</title><rect x="433.9" y="5637" width="0.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="436.91" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="57.6" y="1061" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="60.57" y="1071.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="459.8" y="5541" width="0.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="462.79" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="63.3" y="3125" width="2.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="66.32" y="3135.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="171.0" y="5109" width="0.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="173.99" y="5119.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="57.6" y="1669" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="60.57" y="1679.5" ></text>
</g>
<g >
<title>`llvm::Type::getPointerTo(unsigned int) const (1 samples, 0.02%)</title><rect x="406.7" y="5349" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="409.73" y="5359.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="332.0" y="4997" width="0.2" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="334.98" y="5007.5" ></text>
</g>
<g >
<title>`std::__1::__vector_base&lt;std::__1::unique_ptr&lt;clang::ast_matcher (1 samples, 0.02%)</title><rect x="455.1" y="5653" width="0.2" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="458.08" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (5 samples, 0.11%)</title><rect x="63.8" y="2037" width="1.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="66.84" y="2047.5" ></text>
</g>
<g >
<title>`__psynch_cvbroad (1 samples, 0.02%)</title><rect x="1184.3" y="6293" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1187.25" y="6303.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="66.2" y="1477" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="69.19" y="1487.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="85.5" y="4437" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="88.53" y="4447.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (3 samples, 0.07%)</title><rect x="222.7" y="5573" width="0.8" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="225.74" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.3" y="2885" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="65.27" y="2895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (5 samples, 0.11%)</title><rect x="141.7" y="5061" width="1.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="144.72" y="5071.5" ></text>
</g>
<g >
<title>`IRC-CREATE-CALL^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="309.8" y="5397" width="0.2" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="312.77" y="5407.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="63.3" y="2613" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="66.32" y="2623.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((UNWIND-INSTRUCTION (3 samples, 0.07%)</title><rect x="331.7" y="5109" width="0.8" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="334.72" y="5119.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.02%)</title><rect x="570.3" y="5493" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="573.34" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FLOAT-ADD-AST T))^METHOD^^ (17 samples, 0.38%)</title><rect x="162.6" y="5077" width="4.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="165.63" y="5087.5" ></text>
</g>
<g >
<title>`OPTIMIZED-FDEFINITION-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="127.6" y="5429" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="130.61" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="1925" width="1.8" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="60.57" y="1935.5" ></text>
</g>
<g >
<title>`FUNCTION-BASIC-BLOCKS^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="419.0" y="5605" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="422.01" y="5615.5" ></text>
</g>
<g >
<title>`GC_allocobj (3 samples, 0.07%)</title><rect x="36.7" y="4837" width="0.7" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="39.66" y="4847.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2469" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="65.79" y="2479.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerABIAlignment(unsigned int) const (1 samples, 0.02%)</title><rect x="628.1" y="5573" width="0.3" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="631.10" y="5583.5" ></text>
</g>
<g >
<title>`core::cl__print(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_p (1 samples, 0.02%)</title><rect x="735.5" y="5717" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="738.51" y="5727.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="28.0" y="4373" width="0.6" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="31.03" y="4383.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1621" width="1.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="57.17" y="1631.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="316.6" y="5269" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="319.56" y="5279.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1445" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="24.50" y="1455.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.02%)</title><rect x="490.1" y="5605" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="493.10" y="5615.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (21 samples, 0.47%)</title><rect x="330.2" y="5173" width="5.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="333.16" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (60 samples, 1.33%)</title><rect x="128.1" y="5317" width="15.7" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="131.13" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (8 samples, 0.18%)</title><rect x="63.3" y="2949" width="2.1" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="66.32" y="2959.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4373" width="1.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="26.59" y="4383.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="418.8" y="5557" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="421.75" y="5567.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="67.8" y="1221" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="70.76" y="1231.5" ></text>
</g>
<g >
<title>`core::clasp_to_fixnum(gctools::smart_ptr&lt;core::Integer_O&gt;) (1 samples, 0.02%)</title><rect x="32.7" y="4325" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="35.74" y="4335.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.6" y="37" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="67.62" y="47.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Type*, llvm::PointerTyp (1 samples, 0.02%)</title><rect x="613.5" y="5541" width="0.2" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="616.46" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="3861" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="131.65" y="3871.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="805" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="61.09" y="815.5" ></text>
</g>
<g >
<title>`tryToReplaceWithConstant((anonymous namespace)::SCCPSolver&amp;, ll (7 samples, 0.16%)</title><rect x="715.9" y="5685" width="1.8" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="718.91" y="5695.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="381.1" y="5365" width="0.3" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="384.12" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4661" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="141.32" y="4671.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="94.2" y="4485" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="97.16" y="4495.5" ></text>
</g>
<g >
<title>`COMPILE-FILE-TO-MODULE^COMPILER^FN^^ (2,708 samples, 59.98%)</title><rect x="10.0" y="5813" width="707.7" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="13.00" y="5823.5" >`COMPILE-FILE-TO-MODULE^COMPILER^FN^^</text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1893" width="0.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="65.53" y="1903.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="2805" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="73.11" y="2815.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="574.5" y="5477" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="577.52" y="5487.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleBaseString_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="25.9" y="4245" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="28.94" y="4255.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="172.3" y="5285" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="175.30" y="5295.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.02%)</title><rect x="145.1" y="4853" width="0.3" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="148.12" y="4863.5" ></text>
</g>
<g >
<title>`VARIABLE-IGNORE^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE LEXICAL- (1 samples, 0.02%)</title><rect x="73.0" y="4677" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="75.99" y="4687.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="23.6" y="4309" width="1.0" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="26.59" y="4319.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="64.1" y="1813" width="1.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="67.10" y="1823.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="400.2" y="5381" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="403.20" y="5391.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.02%)</title><rect x="274.7" y="5573" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="277.75" y="5583.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.04%)</title><rect x="117.4" y="5589" width="0.5" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="120.42" y="5599.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::alias(llvm::MemoryLocation const&amp;, llvm: (2 samples, 0.04%)</title><rect x="566.2" y="5381" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="569.16" y="5391.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (4 samples, 0.09%)</title><rect x="68.8" y="2437" width="1.0" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="71.80" y="2447.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="432.3" y="5541" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="435.34" y="5551.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::MemoryAccess, llvm:: (1 samples, 0.02%)</title><rect x="534.5" y="5573" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="537.53" y="5583.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="19.9" y="1925" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="22.93" y="1935.5" ></text>
</g>
<g >
<title>`llvm::IntegerType::get(llvm::LLVMContext&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="647.7" y="5589" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="650.70" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (2 samples, 0.04%)</title><rect x="67.5" y="1829" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="70.50" y="1839.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (1 samples, 0.02%)</title><rect x="64.1" y="1029" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="67.10" y="1039.5" ></text>
</g>
<g >
<title>`core::core__integer_to_string(gctools::smart_ptr&lt;core::StrNs_O&gt; (1 samples, 0.02%)</title><rect x="243.6" y="5525" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="246.65" y="5535.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="80.6" y="4565" width="0.2" height="15.0" fill="rgb(217,76,76)" rx="2" ry="2" />
<text  x="83.56" y="4575.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="23.1" y="3893" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="26.07" y="3903.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="63.8" y="1877" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="66.84" y="1887.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (56 samples, 1.24%)</title><rect x="81.3" y="4725" width="14.7" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="84.35" y="4735.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="689.5" y="5589" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="692.51" y="5599.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="24.6" y="4501" width="1.6" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="27.64" y="4511.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (25 samples, 0.55%)</title><rect x="16.3" y="3093" width="6.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="19.27" y="3103.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="102.5" y="5621" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="105.52" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (4 samples, 0.09%)</title><rect x="55.5" y="533" width="1.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="58.48" y="543.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="349.0" y="5221" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="351.97" y="5231.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="757" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="61.35" y="767.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2885" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="64.22" y="2895.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (1 samples, 0.02%)</title><rect x="567.7" y="5445" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="570.72" y="5455.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock** std::__1::uninitialized_copy&lt;std::__1::rever (1 samples, 0.02%)</title><rect x="460.0" y="5573" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="463.05" y="5583.5" ></text>
</g>
<g >
<title>`GC_malloc (2 samples, 0.04%)</title><rect x="275.8" y="5557" width="0.5" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text  x="278.79" y="5567.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2917" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="17.70" y="2927.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5061" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="736.42" y="5071.5" ></text>
</g>
<g >
<title>`FINALIZE-TRANSIENT-DATUM-INDICES^LITERAL^FN^^ (2 samples, 0.04%)</title><rect x="10.0" y="5765" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="13.00" y="5775.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getPointerDependencyFrom(llvm::M (8 samples, 0.18%)</title><rect x="565.1" y="5525" width="2.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="568.11" y="5535.5" ></text>
</g>
<g >
<title>`llvm::SCEVAAWrapperPass* llvm::Pass::getAnalysisIfAvailable&lt;llv (1 samples, 0.02%)</title><rect x="599.9" y="5653" width="0.2" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="602.87" y="5663.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="88.9" y="4357" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="91.93" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-TAG-CHECK^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="330.7" y="5077" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="333.68" y="5087.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Value const*&gt;::insert(llvm::Value c (1 samples, 0.02%)</title><rect x="595.9" y="5461" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="598.95" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="172.3" y="5317" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="175.30" y="5327.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (326 samples, 7.22%)</title><rect x="12.4" y="5509" width="85.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="15.35" y="5519.5" >`FUNCALL^C..</text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="278.7" y="5429" width="0.2" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="281.67" y="5439.5" ></text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (1 samples, 0.02%)</title><rect x="254.6" y="5573" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="257.62" y="5583.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.02%)</title><rect x="322.8" y="5189" width="0.3" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="325.84" y="5199.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInBoundsGEP(llvm::Value*, gctools::sm (1 samples, 0.02%)</title><rect x="349.2" y="5189" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="352.23" y="5199.5" ></text>
</g>
<g >
<title>`llvm::ValueEnumerator::setInstructionID(llvm::Instruction const (2 samples, 0.04%)</title><rect x="725.6" y="5653" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="728.58" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4341" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="138.71" y="4351.5" ></text>
</g>
<g >
<title>`IRC-LOAD^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="322.1" y="5253" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="325.05" y="5263.5" ></text>
</g>
<g >
<title>`GC_mark_local (1 samples, 0.02%)</title><rect x="171.0" y="4949" width="0.3" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="173.99" y="4959.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (21 samples, 0.47%)</title><rect x="54.2" y="3333" width="5.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="57.17" y="3343.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.4" y="501" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="67.36" y="511.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="67.2" y="1477" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="70.24" y="1487.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (30 samples, 0.66%)</title><rect x="37.4" y="4965" width="7.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="40.44" y="4975.5" ></text>
</g>
<g >
<title>`startup(int, char**, bool&amp;, int&amp;, int&amp;) (2,981 samples, 66.02%)</title><rect x="10.0" y="6341" width="779.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="13.00" y="6351.5" >`startup(int, char**, bool&amp;, int&amp;, int&amp;)</text>
</g>
<g >
<title>`llvm::BumpPtrAllocatorImpl&lt;llvm::MallocAllocator, 4096ul, 4096u (1 samples, 0.02%)</title><rect x="445.9" y="5637" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="448.93" y="5647.5" ></text>
</g>
<g >
<title>`llvm::BumpPtrAllocatorImpl&lt;llvm::MallocAllocator, 4096ul, 4096u (1 samples, 0.02%)</title><rect x="537.9" y="5605" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="540.93" y="5615.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENTER-INSTRUCTION  (7 samples, 0.16%)</title><rect x="337.7" y="5301" width="1.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="340.73" y="5311.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.3" y="1829" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="65.27" y="1839.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, unsigned  (1 samples, 0.02%)</title><rect x="724.5" y="5637" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="727.53" y="5647.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="384.5" y="5301" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="387.52" y="5311.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (2 samples, 0.04%)</title><rect x="68.8" y="2341" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="71.80" y="2351.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="398.4" y="5381" width="0.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="401.37" y="5391.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="3045" width="3.4" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="57.17" y="3055.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;std::__1::pair&lt;llvm::WeakTrackingVH, l (1 samples, 0.02%)</title><rect x="593.9" y="5621" width="0.2" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="596.86" y="5631.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (2 samples, 0.04%)</title><rect x="684.5" y="5605" width="0.6" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="687.55" y="5615.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::Grow(unsigned int) (1 samples, 0.02%)</title><rect x="699.7" y="5605" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="702.71" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="62.0" y="517" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="65.01" y="527.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.9" y="2853" width="0.3" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="56.91" y="2863.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="359.7" y="5061" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="362.69" y="5071.5" ></text>
</g>
<g >
<title>`llvm::AAResults::Model&lt;llvm::BasicAAResult&gt;::alias(llvm::Memory (1 samples, 0.02%)</title><rect x="506.0" y="5493" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="509.04" y="5503.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="57.6" y="2293" width="1.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="60.57" y="2303.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (86 samples, 1.90%)</title><rect x="49.7" y="4101" width="22.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="52.73" y="4111.5" >`..</text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="172.3" y="5237" width="0.3" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="175.30" y="5247.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1,117 samples, 24.74%)</title><rect x="425.8" y="5765" width="291.9" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="428.81" y="5775.5" >`core::SingleDispatchCxxEffectiveMethod..</text>
</g>
<g >
<title>`SAFE-SYSTEM^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="721.1" y="5733" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="724.14" y="5743.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="412.7" y="5333" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="415.74" y="5343.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="308.2" y="5333" width="0.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="311.20" y="5343.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getABITypeAlignment(llvm::Type*) const (1 samples, 0.02%)</title><rect x="478.1" y="5557" width="0.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="481.08" y="5567.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="225.1" y="5429" width="0.3" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="228.09" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1733" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="69.19" y="1743.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="66.2" y="2469" width="1.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="69.19" y="2479.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (1 samples, 0.02%)</title><rect x="132.3" y="4821" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="135.31" y="4831.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eql(core::Hash1Generator&amp;, gctools::s (1 samples, 0.02%)</title><rect x="419.5" y="5477" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="422.54" y="5487.5" ></text>
</g>
<g >
<title>`llvmo::Pass_O::externalObject() const (1 samples, 0.02%)</title><rect x="264.6" y="5557" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="267.56" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (2 samples, 0.04%)</title><rect x="16.3" y="2469" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="19.27" y="2479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="137.3" y="4565" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="140.28" y="4575.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="660.2" y="5413" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="663.24" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="70.1" y="2837" width="0.5" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="73.11" y="2847.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="27.5" y="4421" width="1.1" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="30.51" y="4431.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="96.2" y="4933" width="0.6" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="99.25" y="4943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (61 samples, 1.35%)</title><rect x="128.1" y="5397" width="16.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="131.13" y="5407.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="560.9" y="5461" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="563.93" y="5471.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="136.8" y="3893" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="139.76" y="3903.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="440.4" y="5637" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="443.45" y="5647.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="44.5" y="4597" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="47.50" y="4607.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.04%)</title><rect x="127.1" y="5557" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="130.09" y="5567.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="616.1" y="5573" width="0.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="619.07" y="5583.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="725" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="61.09" y="735.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.02%)</title><rect x="48.2" y="5045" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="51.16" y="5055.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="949" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="20.58" y="959.5" ></text>
</g>
<g >
<title>`OPTIMIZED-UNBOX-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="135.7" y="4149" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="138.71" y="4159.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.22%)</title><rect x="167.9" y="5077" width="2.6" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="170.86" y="5087.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="314.0" y="5285" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="316.95" y="5295.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::Hash1Generator&amp;, gctools::sm (1 samples, 0.02%)</title><rect x="225.6" y="5525" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="228.61" y="5535.5" ></text>
</g>
<g >
<title>`EXPAND-DIRECTIVE-LIST^CORE^FN^^ (2 samples, 0.04%)</title><rect x="46.1" y="5061" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="49.07" y="5071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="126.8" y="5509" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="129.82" y="5519.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (2 samples, 0.04%)</title><rect x="554.9" y="5333" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="557.92" y="5343.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.04%)</title><rect x="92.3" y="4405" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="95.33" y="4415.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="60.2" y="3205" width="1.0" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="63.18" y="3215.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="332.0" y="5013" width="0.2" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="334.98" y="5023.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="949" width="1.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="58.48" y="959.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="60.2" y="2901" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="63.18" y="2911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4037" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="135.31" y="4047.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="174.1" y="5381" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="177.13" y="5391.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MachineInstr const*, ll (1 samples, 0.02%)</title><rect x="58.6" y="773" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="61.61" y="783.5" ></text>
</g>
<g >
<title>`llvm::Function::Function(llvm::FunctionType*, llvm::GlobalValue (1 samples, 0.02%)</title><rect x="337.2" y="5189" width="0.3" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="340.21" y="5199.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (3 samples, 0.07%)</title><rect x="202.1" y="5589" width="0.8" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="205.09" y="5599.5" ></text>
</g>
<g >
<title>`%FORMATTER-GUTS^CORE^FN^^ (10 samples, 0.22%)</title><rect x="45.8" y="5125" width="2.6" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="48.81" y="5135.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (88 samples, 1.95%)</title><rect x="49.5" y="4229" width="23.0" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="52.46" y="4239.5" >`..</text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock (1 samples, 0.02%)</title><rect x="589.9" y="5621" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="592.94" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4117" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="139.76" y="4127.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="23.6" y="4245" width="1.0" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="26.59" y="4255.5" ></text>
</g>
<g >
<title>`llvm::Value* SimplifyCall&lt;llvm::Use*&gt;(llvm::ImmutableCallSite,  (1 samples, 0.02%)</title><rect x="575.0" y="5557" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="578.04" y="5567.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::BasicBlock*&gt;::find(llvm::BasicBlock (1 samples, 0.02%)</title><rect x="693.7" y="5637" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="696.69" y="5647.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (9 samples, 0.20%)</title><rect x="82.7" y="4501" width="2.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="85.66" y="4511.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.02%)</title><rect x="551.8" y="5285" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="554.78" y="5295.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.02%)</title><rect x="477.6" y="5525" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="480.56" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="130.7" y="4709" width="1.1" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="133.74" y="4719.5" ></text>
</g>
<g >
<title>`GC_mark_local (2 samples, 0.04%)</title><rect x="146.2" y="4901" width="0.5" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="149.16" y="4911.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="58.3" y="565" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="61.35" y="575.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2309" width="0.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="73.63" y="2319.5" ></text>
</g>
<g >
<title>`llvm::Value::stripAndAccumulateInBoundsConstantOffsets(llvm::Da (1 samples, 0.02%)</title><rect x="492.5" y="5589" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="495.45" y="5599.5" ></text>
</g>
<g >
<title>`OPTIMIZED-CONTEXT-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="138.1" y="4501" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="141.06" y="4511.5" ></text>
</g>
<g >
<title>`wrapped_cl__mapc_T_spList_sp (1 samples, 0.02%)</title><rect x="400.2" y="5365" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="403.20" y="5375.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (4 samples, 0.09%)</title><rect x="184.8" y="5573" width="1.1" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="187.84" y="5583.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="23.6" y="4229" width="1.0" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="26.59" y="4239.5" ></text>
</g>
<g >
<title>`FUNCTION-INLINE^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="76.6" y="3813" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="79.64" y="3823.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2117" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="65.01" y="2127.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="24.6" y="4021" width="0.6" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="27.64" y="4031.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (23 samples, 0.51%)</title><rect x="16.3" y="2741" width="6.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="19.27" y="2751.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="68.0" y="2869" width="1.8" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="71.02" y="2879.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.02%)</title><rect x="437.6" y="5621" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="440.57" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="2197" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="73.63" y="2207.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="316.3" y="5189" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="319.30" y="5199.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="277.1" y="5541" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="280.10" y="5551.5" ></text>
</g>
<g >
<title>`TRANSLATE-AST^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5589" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="123.55" y="5599.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="281.5" y="5573" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="284.54" y="5583.5" ></text>
</g>
<g >
<title>`llvm::ReversePostOrderTraversal&lt;llvm::Function*, llvm::GraphTra (1 samples, 0.02%)</title><rect x="537.7" y="5621" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="540.67" y="5631.5" ></text>
</g>
<g >
<title>`llvm::FindAvailablePtrLoadStore(llvm::Value*, llvm::Type*, bool (27 samples, 0.60%)</title><rect x="658.7" y="5589" width="7.0" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="661.67" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="2437" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="64.22" y="2447.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (12 samples, 0.27%)</title><rect x="78.0" y="4997" width="3.1" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="80.95" y="5007.5" ></text>
</g>
<g >
<title>0x10d596094 (11 samples, 0.24%)</title><rect x="49.7" y="3861" width="2.9" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="52.73" y="3871.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="1573" width="1.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="58.48" y="1583.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.7" y="1973" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="64.75" y="1983.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="2245" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="65.79" y="2255.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1253" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="65.53" y="1263.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitGetElementPtrInst(llvm::GetElementPtrI (18 samples, 0.40%)</title><rect x="646.1" y="5621" width="4.7" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="649.13" y="5631.5" ></text>
</g>
<g >
<title>`llvm::raw_ostream::operator&lt;&lt;(unsigned long) (1 samples, 0.02%)</title><rect x="346.4" y="5093" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="349.36" y="5103.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="3349" width="0.5" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="73.11" y="3359.5" ></text>
</g>
<g >
<title>`TEST^CLASP-TESTS^FN^^ (1 samples, 0.02%)</title><rect x="36.1" y="5445" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="39.14" y="5455.5" ></text>
</g>
<g >
<title>`llvm::BlockFrequencyInfo::releaseMemory() (1 samples, 0.02%)</title><rect x="533.2" y="5637" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="536.22" y="5647.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (4 samples, 0.09%)</title><rect x="735.8" y="5349" width="1.0" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="738.77" y="5359.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="12.9" y="4293" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="15.87" y="4303.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="96.5" y="4741" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="99.51" y="4751.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (4 samples, 0.09%)</title><rect x="153.0" y="5141" width="1.0" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="155.96" y="5151.5" ></text>
</g>
<g >
<title>`TOKENIZE-CONTROL-STRING^CORE^FN^^ (1 samples, 0.02%)</title><rect x="48.4" y="5077" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="51.42" y="5087.5" ></text>
</g>
<g >
<title>`free_tiny (5 samples, 0.11%)</title><rect x="717.7" y="5605" width="1.3" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="720.74" y="5615.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="253.1" y="5349" width="0.2" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="256.06" y="5359.5" ></text>
</g>
<g >
<title>`wrapped_core__coerce_to_filename_T_sp (1 samples, 0.02%)</title><rect x="720.9" y="5733" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="723.87" y="5743.5" ></text>
</g>
<g >
<title>`small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="533.7" y="5589" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="536.75" y="5599.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (4 samples, 0.09%)</title><rect x="393.4" y="5349" width="1.0" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="396.40" y="5359.5" ></text>
</g>
<g >
<title>`MAKE-SEQ-ITERATOR^CORE^FN^^ (1 samples, 0.02%)</title><rect x="160.0" y="4917" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="163.02" y="4927.5" ></text>
</g>
<g >
<title>`OPTIMIZED-BLOCK-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="78.2" y="4133" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="81.21" y="4143.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (2 samples, 0.04%)</title><rect x="149.8" y="5045" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="152.82" y="5055.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="149.3" y="4981" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="152.30" y="4991.5" ></text>
</g>
<g >
<title>`core::write_symbol_string(gctools::smart_ptr&lt;core::SimpleString (1 samples, 0.02%)</title><rect x="11.0" y="5573" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="14.05" y="5583.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="362.0" y="5317" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="365.04" y="5327.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (3 samples, 0.07%)</title><rect x="407.0" y="5413" width="0.8" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="409.99" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((:AROUND) (NAMED-FUNCTION- (2 samples, 0.04%)</title><rect x="142.2" y="4981" width="0.6" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="145.24" y="4991.5" ></text>
</g>
<g >
<title>`llvm::Pass::getAsImmutablePass() (1 samples, 0.02%)</title><rect x="692.4" y="5669" width="0.2" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="695.39" y="5679.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (1 samples, 0.02%)</title><rect x="94.7" y="4485" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="97.68" y="4495.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="773" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="65.01" y="783.5" ></text>
</g>
<g >
<title>`llvm::ConstantRange::makeExactICmpRegion(llvm::CmpInst::Predica (1 samples, 0.02%)</title><rect x="655.0" y="5573" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="658.01" y="5583.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (1 samples, 0.02%)</title><rect x="14.2" y="3109" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="17.18" y="3119.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="177.3" y="4901" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="180.26" y="4911.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (12 samples, 0.27%)</title><rect x="78.0" y="4965" width="3.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="80.95" y="4975.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.04%)</title><rect x="419.8" y="5557" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="422.80" y="5567.5" ></text>
</g>
<g >
<title>`wrapped_core__vref_AbstractSimpleVector_spsize_t (1 samples, 0.02%)</title><rect x="121.3" y="5589" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="124.34" y="5599.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="456.6" y="5605" width="0.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="459.65" y="5615.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="55.5" y="325" width="1.0" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="58.48" y="335.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (1 samples, 0.02%)</title><rect x="350.0" y="5237" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="353.02" y="5247.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="128.7" y="4197" width="0.7" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="131.65" y="4207.5" ></text>
</g>
<g >
<title>`llvm::PopulateLoopsDFS&lt;llvm::BasicBlock, llvm::Loop&gt;::traverse( (5 samples, 0.11%)</title><rect x="523.8" y="5637" width="1.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="526.82" y="5647.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="586.3" y="5525" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="589.28" y="5535.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.02%)</title><rect x="253.3" y="5573" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="256.32" y="5583.5" ></text>
</g>
<g >
<title>`MAKE-LET-INIT-ASTS^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="14.2" y="3813" width="1.8" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="17.18" y="3823.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="130.5" y="4581" width="0.2" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="133.48" y="4591.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (2 samples, 0.04%)</title><rect x="522.0" y="5605" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="524.99" y="5615.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="310.8" y="5429" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="313.82" y="5439.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="68.0" y="3253" width="1.8" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="71.02" y="3263.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="357" width="1.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="58.48" y="367.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2469" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="63.18" y="2479.5" ></text>
</g>
<g >
<title>0x10d596094 (88 samples, 1.95%)</title><rect x="49.5" y="4261" width="23.0" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="52.46" y="4271.5" >0..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4053" width="0.3" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="135.31" y="4063.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::BasicBlock const*, llvm::SmallPtrSet&lt;ll (1 samples, 0.02%)</title><rect x="601.7" y="5589" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="604.70" y="5599.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.07%)</title><rect x="11.6" y="4581" width="0.8" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="14.57" y="4591.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (8 samples, 0.18%)</title><rect x="78.5" y="3957" width="2.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="81.47" y="3967.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::~BasicBlock() (7 samples, 0.16%)</title><rect x="717.7" y="5637" width="1.9" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="720.74" y="5647.5" ></text>
</g>
<g >
<title>`GETF^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="412.5" y="5381" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="415.48" y="5391.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^COMPILER^FN^^ (8 samples, 0.18%)</title><rect x="411.4" y="5445" width="2.1" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="414.44" y="5455.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="1733" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="60.57" y="1743.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="195.3" y="5589" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="198.30" y="5599.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="587.8" y="5637" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="590.85" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="3173" width="0.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="73.11" y="3183.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="171.0" y="5141" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="173.99" y="5151.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::Instruction&gt;, llvm:: (1 samples, 0.02%)</title><rect x="715.6" y="5669" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="718.65" y="5679.5" ></text>
</g>
<g >
<title>`llvm::buildModuleSummaryIndex(llvm::Module const&amp;, std::__1::fu (11 samples, 0.24%)</title><rect x="729.5" y="5717" width="2.9" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="732.50" y="5727.5" ></text>
</g>
<g >
<title>`llvm::GVN::performPRE(llvm::Function&amp;) (13 samples, 0.29%)</title><rect x="577.4" y="5637" width="3.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="580.39" y="5647.5" ></text>
</g>
<g >
<title>`core::byte_code_interpreter(gctools::GCRootsInModule*, gctools: (2,981 samples, 66.02%)</title><rect x="10.0" y="6261" width="779.1" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="13.00" y="6271.5" >`core::byte_code_interpreter(gctools::GCRootsInModule*, gctools:</text>
</g>
<g >
<title>`std::__1::__tree&lt;std::__1::__value_type&lt;llvm::Function const*,  (1 samples, 0.02%)</title><rect x="700.8" y="5637" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="703.75" y="5647.5" ></text>
</g>
<g >
<title>`POSITION-IF-NOT^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="49.2" y="5061" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="52.20" y="5071.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="333.0" y="5061" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="336.03" y="5071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TYPEQ-AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="160.0" y="5029" width="1.6" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="163.02" y="5039.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="121.1" y="5557" width="0.2" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="124.07" y="5567.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="2517" width="0.3" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="65.01" y="2527.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="70.6" y="1925" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="73.63" y="1935.5" ></text>
</g>
<g >
<title>`iterativelySimplifyCFG(llvm::Function&amp;, llvm::TargetTransformIn (15 samples, 0.33%)</title><rect x="694.7" y="5653" width="4.0" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="697.74" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2805" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="63.18" y="2815.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="420.8" y="5477" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="423.84" y="5487.5" ></text>
</g>
<g >
<title>`OPTIMIZED-LEXICAL-AST-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="71.9" y="3829" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="74.94" y="3839.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="63.3" y="2693" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="66.32" y="2703.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="64.4" y="469" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="67.36" y="479.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="65.9" y="949" width="0.3" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="68.93" y="959.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="72.2" y="4101" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="75.20" y="4111.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="16.3" y="2501" width="0.5" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="19.27" y="2511.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="97.3" y="4565" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="100.29" y="4575.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4357" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="135.31" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4869" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="137.66" y="4879.5" ></text>
</g>
<g >
<title>`IRC-CCLASP-FUNCTION-CREATE^COMPILER^FN^^ (30 samples, 0.66%)</title><rect x="368.3" y="5429" width="7.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="371.31" y="5439.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2149" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="64.22" y="2159.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::SimplifyMultipleUseDemandedBits(llvm::Instr (1 samples, 0.02%)</title><rect x="635.4" y="5557" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="638.41" y="5567.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="387.7" y="5381" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="390.65" y="5391.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;std::__1::__value_type&lt;llvm::Function const*,  (1 samples, 0.02%)</title><rect x="700.8" y="5605" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="703.75" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4677" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="136.62" y="4687.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="2709" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="72.85" y="2719.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="3173" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="62.40" y="3183.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.02%)</title><rect x="241.6" y="5493" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="244.56" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.8" y="5509" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="180.79" y="5519.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="312.4" y="5381" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="315.38" y="5391.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="805" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="65.53" y="815.5" ></text>
</g>
<g >
<title>`checkFunctionMemoryAccess(llvm::Function&amp;, bool, llvm::AAResult (1 samples, 0.02%)</title><rect x="427.1" y="5669" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="430.12" y="5679.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="65.9" y="629" width="0.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="68.93" y="639.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.02%)</title><rect x="22.3" y="2741" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="25.28" y="2751.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="334.3" y="5093" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="337.34" y="5103.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (30 samples, 0.66%)</title><rect x="37.4" y="4853" width="7.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="40.44" y="4863.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (326 samples, 7.22%)</title><rect x="12.4" y="5557" width="85.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="15.35" y="5567.5" >`COMBINE-M..</text>
</g>
<g >
<title>`llvm::iterator_range&lt;llvm::df_iterator&lt;llvm::BasicBlock*, llvm: (1 samples, 0.02%)</title><rect x="597.5" y="5621" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="600.52" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="1061" width="0.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="68.93" y="1071.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="53.4" y="2741" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="56.38" y="2751.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (3 samples, 0.07%)</title><rect x="283.4" y="5525" width="0.8" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="286.37" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="133.4" y="4661" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="136.36" y="4671.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="67.2" y="1349" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="70.24" y="1359.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (1 samples, 0.02%)</title><rect x="35.9" y="5045" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="38.87" y="5055.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (3 samples, 0.07%)</title><rect x="201.0" y="5413" width="0.8" height="15.0" fill="rgb(208,61,61)" rx="2" ry="2" />
<text  x="204.05" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4741" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="141.85" y="4751.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="146.9" y="5349" width="0.3" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="149.95" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (9 samples, 0.20%)</title><rect x="74.6" y="3941" width="2.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="77.55" y="3951.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (12 samples, 0.27%)</title><rect x="78.0" y="4949" width="3.1" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="80.95" y="4959.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="17.3" y="2021" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="20.32" y="2031.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.04%)</title><rect x="133.1" y="4869" width="0.5" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="136.10" y="4879.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="526.7" y="5509" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="529.69" y="5519.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="22.0" y="2629" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="25.02" y="2639.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorImpl&lt;llvm::OperandBundleDefT&lt;llvm::Value*&gt; &gt;:: (1 samples, 0.02%)</title><rect x="487.2" y="5573" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="490.23" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'TAGBODY) T T T)) (1 samples, 0.02%)</title><rect x="61.7" y="2357" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="64.75" y="2367.5" ></text>
</g>
<g >
<title>`llvm::AliasSetTracker::getEntryFor(llvm::Value*) (1 samples, 0.02%)</title><rect x="522.8" y="5557" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="525.77" y="5567.5" ></text>
</g>
<g >
<title>`llvm::AssumptionCache::assumptionsFor(llvm::Value const*) (1 samples, 0.02%)</title><rect x="441.8" y="5541" width="0.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="444.75" y="5551.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="67.2" y="1541" width="0.3" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="70.24" y="1551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="3925" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="131.65" y="3935.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="60.4" y="2901" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="63.44" y="2911.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="69.8" y="2965" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="72.85" y="2975.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.4" y="2805" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="56.38" y="2815.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.07%)</title><rect x="66.5" y="1845" width="0.7" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="69.45" y="1855.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="241.0" y="5509" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="244.03" y="5519.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="997" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="62.13" y="1007.5" ></text>
</g>
<g >
<title>`REMOVE-LIST^CORE^FN^^ (1 samples, 0.02%)</title><rect x="208.1" y="5509" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="211.10" y="5519.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="68.5" y="2549" width="1.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="71.54" y="2559.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::PostOrderFunctionAttrsLegacyPass::runOnS (6 samples, 0.13%)</title><rect x="426.1" y="5685" width="1.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="429.07" y="5695.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; c (1 samples, 0.02%)</title><rect x="686.6" y="5589" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="689.64" y="5599.5" ></text>
</g>
<g >
<title>`llvm::po_iterator&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; const (1 samples, 0.02%)</title><rect x="686.6" y="5621" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="689.64" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (56 samples, 1.24%)</title><rect x="81.3" y="4805" width="14.7" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="84.35" y="4815.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&amp;,  (1 samples, 0.02%)</title><rect x="486.7" y="5557" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="489.70" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="148.5" y="5029" width="0.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="151.52" y="5039.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (5 samples, 0.11%)</title><rect x="624.7" y="5525" width="1.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="627.70" y="5535.5" ></text>
</g>
<g >
<title>`llvm::SSAUpdaterImpl&lt;llvm::SSAUpdater&gt;::BuildBlockList(llvm::Ba (1 samples, 0.02%)</title><rect x="598.0" y="5541" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="601.04" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="51.0" y="2709" width="0.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="54.03" y="2719.5" ></text>
</g>
<g >
<title>`llvm::isGuaranteedToTransferExecutionToSuccessor(llvm::Instruct (2 samples, 0.04%)</title><rect x="538.2" y="5605" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="541.19" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (44 samples, 0.97%)</title><rect x="128.4" y="5189" width="11.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="131.39" y="5199.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="686.1" y="5525" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="689.12" y="5535.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.6" y="2581" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="56.65" y="2591.5" ></text>
</g>
<g >
<title>`getAllocationData(llvm::Value const*, AllocType, llvm::TargetLi (1 samples, 0.02%)</title><rect x="679.3" y="5589" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="682.32" y="5599.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="644.8" y="5605" width="0.3" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="647.82" y="5615.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="354.7" y="5237" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="357.72" y="5247.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="329.6" y="5157" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="332.63" y="5167.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (3 samples, 0.07%)</title><rect x="374.6" y="5301" width="0.8" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="377.58" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.07%)</title><rect x="133.1" y="4917" width="0.8" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="136.10" y="4927.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="1301" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="65.53" y="1311.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (29 samples, 0.64%)</title><rect x="609.5" y="5637" width="7.6" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="612.54" y="5647.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="82.9" y="4437" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="85.92" y="4447.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (4 samples, 0.09%)</title><rect x="423.2" y="5637" width="1.0" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="426.20" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (326 samples, 7.22%)</title><rect x="12.4" y="5541" width="85.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="15.35" y="5551.5" >`CONVERT^C..</text>
</g>
<g >
<title>`llvm::ConstantFoldCastInstruction(unsigned int, llvm::Constant* (1 samples, 0.02%)</title><rect x="615.6" y="5589" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="618.55" y="5599.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="53.4" y="3045" width="0.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="56.38" y="3055.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.02%)</title><rect x="145.1" y="5077" width="0.3" height="15.0" fill="rgb(84,197,197)" rx="2" ry="2" />
<text  x="148.12" y="5087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (10 samples, 0.22%)</title><rect x="148.5" y="5173" width="2.6" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="151.52" y="5183.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="70.9" y="3221" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="73.89" y="3231.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="663.9" y="5509" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="666.90" y="5519.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="59.9" y="3237" width="1.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="62.92" y="3247.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="23.6" y="4085" width="1.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="26.59" y="4095.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4005" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="138.19" y="4015.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1653" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="69.19" y="1663.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="61.7" y="2741" width="0.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="64.75" y="2751.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="14.2" y="3541" width="1.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="17.18" y="3551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.0" y="965" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="65.01" y="975.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solve() (1 samples, 0.02%)</title><rect x="447.0" y="5557" width="0.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="449.98" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="177.3" y="5589" width="0.7" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="180.26" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (6 samples, 0.13%)</title><rect x="12.4" y="4981" width="1.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="15.35" y="4991.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.07%)</title><rect x="323.4" y="5189" width="0.7" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="326.36" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET*) T T T))^ME (1 samples, 0.02%)</title><rect x="62.0" y="949" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="65.01" y="959.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.02%)</title><rect x="588.1" y="5621" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="591.11" y="5631.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="67.8" y="1413" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="70.76" y="1423.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (71 samples, 1.57%)</title><rect x="52.9" y="3701" width="18.5" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="55.86" y="3711.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (7 samples, 0.16%)</title><rect x="14.2" y="3717" width="1.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="17.18" y="3727.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="65.4" y="2437" width="0.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="68.41" y="2447.5" ></text>
</g>
<g >
<title>`llvm::AllocaInst* llvm::IRBuilder&lt;llvm::TargetFolder, llvm::IRB (1 samples, 0.02%)</title><rect x="633.8" y="5589" width="0.3" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="636.84" y="5599.5" ></text>
</g>
<g >
<title>`SLOT-DEFINITION-NAME^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="84.0" y="4453" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="86.96" y="4463.5" ></text>
</g>
<g >
<title>`TYPE-SPECIFIER-AST^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.1" y="2581" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="73.11" y="2591.5" ></text>
</g>
<g >
<title>`llvm::SimplifyCall(llvm::ImmutableCallSite, llvm::SimplifyQuery (3 samples, 0.07%)</title><rect x="444.4" y="5621" width="0.7" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="447.37" y="5631.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="3093" width="2.6" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="68.41" y="3103.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="697.6" y="5573" width="0.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="700.61" y="5583.5" ></text>
</g>
<g >
<title>`MAYBE-ALLOC-CC-SETUP^COMPILER^FN^^ (7 samples, 0.16%)</title><rect x="363.6" y="5381" width="1.8" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="366.61" y="5391.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="395.2" y="5205" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="398.23" y="5215.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction*, unsigned  (5 samples, 0.11%)</title><rect x="470.0" y="5637" width="1.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="472.98" y="5647.5" ></text>
</g>
<g >
<title>`llvm::SmallVectorImpl&lt;llvm::OperandBundleDefT&lt;llvm::Value*&gt; &gt;:: (1 samples, 0.02%)</title><rect x="486.4" y="5557" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="489.44" y="5567.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="67.5" y="1317" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="70.50" y="1327.5" ></text>
</g>
<g >
<title>`DISPATCH-MISS-VA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="58.3" y="1221" width="1.1" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="61.35" y="1231.5" ></text>
</g>
<g >
<title>`llvm::Value::setValueName(llvm::StringMapEntry&lt;llvm::Value*&gt;*) (1 samples, 0.02%)</title><rect x="337.2" y="5125" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="340.21" y="5135.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2997" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="65.27" y="3007.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2373" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="63.18" y="2383.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (22 samples, 0.49%)</title><rect x="16.3" y="2581" width="5.7" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="19.27" y="2591.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="3141" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="65.27" y="3151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.5" y="4389" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="134.53" y="4399.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (2 samples, 0.04%)</title><rect x="33.5" y="4197" width="0.5" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="36.52" y="4207.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4069" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="135.31" y="4079.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'CLEAVIR-PRIMOP:V (1 samples, 0.02%)</title><rect x="62.3" y="2373" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="65.27" y="2383.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="19.9" y="2037" width="1.3" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="22.93" y="2047.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="62.3" y="949" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="65.27" y="959.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.6" y="5285" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="100.55" y="5295.5" ></text>
</g>
<g >
<title>`core::lisp_error(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ (5 samples, 0.11%)</title><rect x="735.8" y="5685" width="1.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="738.77" y="5695.5" ></text>
</g>
<g >
<title>`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="697.9" y="5525" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="700.88" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.7" y="1989" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="68.67" y="1999.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="1285" width="0.2" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="67.88" y="1295.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2805" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="17.70" y="2815.5" ></text>
</g>
<g >
<title>`DATUM-TAG^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="421.9" y="5749" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="424.89" y="5759.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.02%)</title><rect x="683.2" y="5653" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="686.24" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (56 samples, 1.24%)</title><rect x="81.3" y="4853" width="14.7" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="84.35" y="4863.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="64.4" y="885" width="0.5" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="67.36" y="895.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="24.6" y="3653" width="0.6" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="27.64" y="3663.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (5 samples, 0.11%)</title><rect x="54.2" y="517" width="1.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="57.17" y="527.5" ></text>
</g>
<g >
<title>`llvm::APInt::sdiv_ov(llvm::APInt const&amp;, bool&amp;) const (1 samples, 0.02%)</title><rect x="662.6" y="5429" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="665.59" y="5439.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="50.0" y="3157" width="0.2" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="52.99" y="3167.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (21 samples, 0.47%)</title><rect x="59.9" y="3333" width="5.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="62.92" y="3343.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (1 samples, 0.02%)</title><rect x="266.6" y="5461" width="0.3" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="269.65" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.04%)</title><rect x="145.4" y="5093" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="148.38" y="5103.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.02%)</title><rect x="684.3" y="5621" width="0.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="687.29" y="5631.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="79.3" y="3685" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="82.26" y="3695.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2437" width="1.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="60.57" y="2447.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.6" y="5381" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="100.55" y="5391.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (3 samples, 0.07%)</title><rect x="651.4" y="5477" width="0.7" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="654.36" y="5487.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (4 samples, 0.09%)</title><rect x="119.0" y="5413" width="1.0" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="121.98" y="5423.5" ></text>
</g>
<g >
<title>`IRC-CREATE-CALL^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="343.2" y="5253" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="346.22" y="5263.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (25 samples, 0.55%)</title><rect x="329.1" y="5237" width="6.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="332.11" y="5247.5" ></text>
</g>
<g >
<title>0x10d596094 (16 samples, 0.35%)</title><rect x="73.5" y="4725" width="4.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="76.51" y="4735.5" ></text>
</g>
<g >
<title>`llvm::createLegacyPMBasicAAResult(llvm::Pass&amp;, llvm::Function&amp;) (1 samples, 0.02%)</title><rect x="427.4" y="5653" width="0.2" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="430.38" y="5663.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (55 samples, 1.22%)</title><rect x="81.3" y="4629" width="14.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="84.35" y="4639.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (2 samples, 0.04%)</title><rect x="43.7" y="4453" width="0.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="46.71" y="4463.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (3 samples, 0.07%)</title><rect x="596.5" y="5605" width="0.8" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="599.47" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="17.3" y="1861" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="20.32" y="1871.5" ></text>
</g>
<g >
<title>`SEQ-ITERATOR-REF^CORE^FN^^ (1 samples, 0.02%)</title><rect x="368.1" y="5413" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="371.05" y="5423.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.04%)</title><rect x="411.7" y="5349" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="414.70" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4517" width="23.0" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="52.46" y="4527.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="127.6" y="5477" width="0.5" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="130.61" y="5487.5" ></text>
</g>
<g >
<title>`VALUE-AST^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="173.6" y="5413" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="176.61" y="5423.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="166.3" y="4997" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="169.29" y="5007.5" ></text>
</g>
<g >
<title>`LTV/CONS^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="123.7" y="5557" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="126.69" y="5567.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="109.3" y="5557" width="0.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="112.31" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2933" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="63.18" y="2943.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="143.8" y="5349" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="146.81" y="5359.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (4 samples, 0.09%)</title><rect x="33.3" y="4341" width="1.0" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="36.26" y="4351.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2501" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="65.27" y="2511.5" ></text>
</g>
<g >
<title>`GC_reclaim_clear (1 samples, 0.02%)</title><rect x="397.8" y="5237" width="0.3" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="400.84" y="5247.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="255.1" y="5525" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="258.15" y="5535.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="416.7" y="5509" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="419.66" y="5519.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="293.0" y="5365" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="296.04" y="5375.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (6 samples, 0.13%)</title><rect x="57.8" y="1573" width="1.6" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="60.83" y="1583.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="78.5" y="3909" width="1.8" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="81.47" y="3919.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="38.2" y="4741" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="41.23" y="4751.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="60.2" y="2885" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="63.18" y="2895.5" ></text>
</g>
<g >
<title>`wrapped_contagen_div_Number_spNumber_sp (5 samples, 0.11%)</title><rect x="735.8" y="5733" width="1.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="738.77" y="5743.5" ></text>
</g>
<g >
<title>`OPTIMIZED-SPECIAL-OPERATOR-INFO-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="77.7" y="4789" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="80.69" y="4799.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="330.2" y="5125" width="0.2" height="15.0" fill="rgb(208,61,61)" rx="2" ry="2" />
<text  x="333.16" y="5135.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp_big(void const*) (1 samples, 0.02%)</title><rect x="587.8" y="5621" width="0.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="590.85" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.02%)</title><rect x="136.2" y="3701" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="139.23" y="3711.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="169.4" y="4885" width="0.3" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="172.42" y="4895.5" ></text>
</g>
<g >
<title>`llvm::getConstantStringInfo(llvm::Value const*, llvm::StringRef (1 samples, 0.02%)</title><rect x="555.7" y="5365" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="558.70" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (56 samples, 1.24%)</title><rect x="159.0" y="5413" width="14.6" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="161.97" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="26.2" y="4661" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="29.20" y="4671.5" ></text>
</g>
<g >
<title>`llvm::Instruction::mayReadFromMemory() const (1 samples, 0.02%)</title><rect x="579.7" y="5605" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="582.75" y="5615.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (2 samples, 0.04%)</title><rect x="139.9" y="5077" width="0.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="142.89" y="5087.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.6" y="597" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="67.62" y="607.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.0" y="1909" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="65.01" y="1919.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (3 samples, 0.07%)</title><rect x="61.7" y="3205" width="0.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="64.75" y="3215.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="60.2" y="2837" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="63.18" y="2847.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2917" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="73.63" y="2927.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.04%)</title><rect x="32.0" y="4325" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="34.95" y="4335.5" ></text>
</g>
<g >
<title>`promoteMemoryToRegister(llvm::Function&amp;, llvm::DominatorTree&amp;,  (6 samples, 0.13%)</title><rect x="693.2" y="5669" width="1.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="696.17" y="5679.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="23.6" y="4133" width="1.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="26.59" y="4143.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (16 samples, 0.35%)</title><rect x="73.5" y="4789" width="4.2" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="76.51" y="4799.5" ></text>
</g>
<g >
<title>`LITERAL-NODE-INDEX^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="335.6" y="5205" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="338.64" y="5215.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="64.6" y="501" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="67.62" y="511.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="76.9" y="3957" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="79.91" y="3967.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (3 samples, 0.07%)</title><rect x="562.5" y="5525" width="0.8" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="565.50" y="5535.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="414.3" y="5461" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="417.31" y="5471.5" ></text>
</g>
<g >
<title>`CONSP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="314.7" y="5365" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="317.74" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="65.9" y="1493" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="68.93" y="1503.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="94.9" y="4373" width="0.3" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="97.94" y="4383.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="438.4" y="5605" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="441.35" y="5615.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (14 samples, 0.31%)</title><rect x="257.8" y="5605" width="3.6" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="260.76" y="5615.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="138.3" y="4389" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="141.32" y="4399.5" ></text>
</g>
<g >
<title>`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="689.5" y="5557" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="692.51" y="5567.5" ></text>
</g>
<g >
<title>`llvm::GetPointerBaseWithConstantOffset(llvm::Value*, long long&amp; (1 samples, 0.02%)</title><rect x="562.0" y="5525" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="564.97" y="5535.5" ></text>
</g>
<g >
<title>`cc_unwind (1 samples, 0.02%)</title><rect x="26.5" y="4581" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="29.47" y="4591.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.2" y="3685" width="0.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="132.18" y="3695.5" ></text>
</g>
<g >
<title>`llvm::LoopBase&lt;llvm::BasicBlock, llvm::Loop&gt;::~LoopBase() (1 samples, 0.02%)</title><rect x="534.3" y="5621" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="537.27" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="66.2" y="2021" width="1.8" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="69.19" y="2031.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.02%)</title><rect x="322.1" y="5221" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="325.05" y="5231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4437" width="0.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="141.85" y="4447.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (5 samples, 0.11%)</title><rect x="323.1" y="5253" width="1.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="326.10" y="5263.5" ></text>
</g>
<g >
<title>`GC_mark_from (1 samples, 0.02%)</title><rect x="173.1" y="5045" width="0.2" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="176.08" y="5055.5" ></text>
</g>
<g >
<title>`core::core__ltvc_write_string(gctools::smart_ptr&lt;core::T_O&gt;, gc (1 samples, 0.02%)</title><rect x="425.3" y="5701" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="428.29" y="5711.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="295.1" y="5365" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="298.13" y="5375.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::getModRefBehavior(llvm::ImmutableCallSite) (1 samples, 0.02%)</title><rect x="427.1" y="5637" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="430.12" y="5647.5" ></text>
</g>
<g >
<title>`malloc (2 samples, 0.04%)</title><rect x="605.4" y="5573" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="608.36" y="5583.5" ></text>
</g>
<g >
<title>`cc_enclose (2 samples, 0.04%)</title><rect x="173.1" y="5253" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="176.08" y="5263.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="24.1" y="3749" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="27.11" y="3759.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2357" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="71.28" y="2367.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="1365" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="65.27" y="1375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4373" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="138.71" y="4383.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="118.7" y="5429" width="0.3" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="121.72" y="5439.5" ></text>
</g>
<g >
<title>`HASH-EQL^CORE^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1205" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="24.50" y="1215.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (6 samples, 0.13%)</title><rect x="230.3" y="5509" width="1.6" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="233.32" y="5519.5" ></text>
</g>
<g >
<title>0x10d596094 (88 samples, 1.95%)</title><rect x="49.5" y="4725" width="23.0" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="52.46" y="4735.5" >0..</text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (7 samples, 0.16%)</title><rect x="411.7" y="5429" width="1.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="414.70" y="5439.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="394.2" y="5301" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="397.19" y="5311.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitPHINode(llvm::PHINode&amp;) (1 samples, 0.02%)</title><rect x="673.6" y="5621" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="676.57" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (83 samples, 1.84%)</title><rect x="14.2" y="5045" width="21.7" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="17.18" y="5055.5" >`..</text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="354.7" y="5269" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="357.72" y="5279.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (9 samples, 0.20%)</title><rect x="87.4" y="4485" width="2.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="90.36" y="4495.5" ></text>
</g>
<g >
<title>`AST^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="39.5" y="4101" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="42.53" y="4111.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="67.5" y="1477" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="70.50" y="1487.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.02%)</title><rect x="652.4" y="5525" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="655.40" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.7" y="4325" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="132.70" y="4335.5" ></text>
</g>
<g >
<title>`LTV/COMPLEX^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="123.9" y="5589" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="126.95" y="5599.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="168.4" y="4997" width="0.2" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="171.38" y="5007.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (26 samples, 0.58%)</title><rect x="16.3" y="3365" width="6.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="19.27" y="3375.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="333.8" y="5077" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="336.81" y="5087.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (2 samples, 0.04%)</title><rect x="205.5" y="5541" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="208.49" y="5551.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (4 samples, 0.09%)</title><rect x="238.4" y="5493" width="1.1" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="241.42" y="5503.5" ></text>
</g>
<g >
<title>`llvm::TargetTransformInfoWrapperPass::getTTI(llvm::Function con (1 samples, 0.02%)</title><rect x="598.6" y="5653" width="0.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="601.56" y="5663.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="106.2" y="5573" width="0.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="109.18" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4677" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="139.76" y="4687.5" ></text>
</g>
<g >
<title>`SLOT-EXISTS-P^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="142.2" y="4949" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="145.24" y="4959.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="379.6" y="5365" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="382.55" y="5375.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="126.3" y="5637" width="0.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="129.30" y="5647.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="484.1" y="5589" width="0.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="487.09" y="5599.5" ></text>
</g>
<g >
<title>`PROCESS-LAMBDA-LIST^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5317" width="1.1" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="14.31" y="5327.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (4 samples, 0.09%)</title><rect x="191.9" y="5429" width="1.0" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="194.90" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2853" width="1.8" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="60.57" y="2863.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="114.8" y="5541" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="117.80" y="5551.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.8" y="1621" width="0.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="65.79" y="1631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4421" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="139.76" y="4431.5" ></text>
</g>
<g >
<title>`SUBTYPEP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="75.1" y="3717" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="78.08" y="3727.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.02%)</title><rect x="381.6" y="5365" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="384.64" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="16.3" y="1877" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="19.27" y="1887.5" ></text>
</g>
<g >
<title>`STANDARD-INSTANCE-ACCESS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.0" y="2453" width="0.2" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="63.96" y="2463.5" ></text>
</g>
<g >
<title>`MAKE-LEXICAL-LOCATION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="129.2" y="3525" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="132.18" y="3535.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::reference_raw_(core::Symbol_O*, gcto (1 samples, 0.02%)</title><rect x="408.0" y="5397" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="411.04" y="5407.5" ></text>
</g>
<g >
<title>`wrapped_cl__nthcdr_Integer_spList_sp (1 samples, 0.02%)</title><rect x="160.0" y="4901" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="163.02" y="4911.5" ></text>
</g>
<g >
<title>`wrapped_FunctionType_O__get_core__T_spcore__T_spcore__T_sp (7 samples, 0.16%)</title><rect x="387.4" y="5413" width="1.8" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="390.39" y="5423.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1413" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="65.53" y="1423.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="65.1" y="1893" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="68.15" y="1903.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="338.5" y="5173" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="341.52" y="5183.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1461" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="65.01" y="1471.5" ></text>
</g>
<g >
<title>`OPTIMIZED-FDEFINITION-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (4 samples, 0.09%)</title><rect x="153.0" y="5173" width="1.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="155.96" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4773" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="137.66" y="4783.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="251.2" y="5557" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="254.23" y="5567.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (26 samples, 0.58%)</title><rect x="52.9" y="3413" width="6.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="55.86" y="3423.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="520.2" y="5621" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="523.16" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (2 samples, 0.04%)</title><rect x="62.5" y="3029" width="0.6" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="65.53" y="3039.5" ></text>
</g>
<g >
<title>`HOIST-AST^CLASP-CLEAVIR^FN^^ (107 samples, 2.37%)</title><rect x="98.6" y="5669" width="28.0" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="101.60" y="5679.5" >`..</text>
</g>
<g >
<title>`OPTIMIZED-CONTEXT-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="143.3" y="5189" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="146.29" y="5199.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="312.4" y="5413" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="315.38" y="5423.5" ></text>
</g>
<g >
<title>`INTERPRET-DTREE-PROGRAM^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="217.3" y="5573" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="220.25" y="5583.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::Value*, std::__1::allocator&lt;llvm::V (1 samples, 0.02%)</title><rect x="351.1" y="5157" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="354.06" y="5167.5" ></text>
</g>
<g >
<title>`llvm::Constant::removeDeadConstantUsers() const (1 samples, 0.02%)</title><rect x="720.6" y="5653" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="723.61" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="1637" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="65.79" y="1647.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="709" width="1.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="57.17" y="719.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.02%)</title><rect x="478.1" y="5573" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="481.08" y="5583.5" ></text>
</g>
<g >
<title>`llvm::isNoAliasFn(llvm::Value const*, llvm::TargetLibraryInfo c (1 samples, 0.02%)</title><rect x="568.0" y="5461" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="570.98" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (18 samples, 0.40%)</title><rect x="17.3" y="2181" width="4.7" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="20.32" y="2191.5" ></text>
</g>
<g >
<title>`core::getcwd(bool) (1 samples, 0.02%)</title><rect x="721.1" y="5653" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="724.14" y="5663.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (20 samples, 0.44%)</title><rect x="54.2" y="3253" width="5.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="57.17" y="3263.5" ></text>
</g>
<g >
<title>`EXPAND-DIRECTIVE^CORE^FN^^ (2 samples, 0.04%)</title><rect x="46.1" y="5045" width="0.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="49.07" y="5055.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="66.2" y="1973" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="69.19" y="1983.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="357" width="1.1" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="59.52" y="367.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4405" width="9.4" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="17.18" y="4415.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4341" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="139.76" y="4351.5" ></text>
</g>
<g >
<title>`core::StringPushString(gctools::smart_ptr&lt;core::Array_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="127.1" y="5285" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="130.09" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="4053" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="131.65" y="4063.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET*) T T T))^ME (58 samples, 1.28%)</title><rect x="81.1" y="5029" width="15.1" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="84.09" y="5039.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="2933" width="1.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="60.57" y="2943.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="535.8" y="5637" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="538.84" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="23.9" y="3845" width="0.5" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="26.85" y="3855.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="11.3" y="4773" width="1.1" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="14.31" y="4783.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (2 samples, 0.04%)</title><rect x="559.4" y="5381" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="562.36" y="5391.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CastGEPIndices(llvm::Type*, llvm::ArrayR (1 samples, 0.02%)</title><rect x="611.1" y="5589" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="614.11" y="5599.5" ></text>
</g>
<g >
<title>`createLocalVariable(llvm::LLVMContext&amp;, llvm::DenseMap&lt;llvm::MD (5 samples, 0.11%)</title><rect x="359.2" y="5237" width="1.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="362.17" y="5247.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (2 samples, 0.04%)</title><rect x="51.8" y="3557" width="0.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="54.82" y="3567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4341" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="136.36" y="4351.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="3269" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="72.85" y="3279.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="121.1" y="5589" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="124.07" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4997" width="0.3" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="100.29" y="5007.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (2 samples, 0.04%)</title><rect x="15.5" y="3429" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="18.49" y="3439.5" ></text>
</g>
<g >
<title>`llvm::getConstantStringInfo(llvm::Value const*, llvm::StringRef (1 samples, 0.02%)</title><rect x="503.4" y="5445" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="506.43" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="64.9" y="1189" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="67.88" y="1199.5" ></text>
</g>
<g >
<title>`dlopen (1 samples, 0.02%)</title><rect x="788.8" y="5829" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="791.83" y="5839.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="48.7" y="5125" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="51.68" y="5135.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1285" width="1.0" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="58.48" y="1295.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="203.1" y="5285" width="0.3" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="206.14" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4053" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="132.96" y="4063.5" ></text>
</g>
<g >
<title>`GC_alloc_large (5 samples, 0.11%)</title><rect x="252.0" y="5445" width="1.3" height="15.0" fill="rgb(250,124,124)" rx="2" ry="2" />
<text  x="255.01" y="5455.5" ></text>
</g>
<g >
<title>`core::Cons_O::__write__(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="11.0" y="5637" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="14.05" y="5647.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="19.9" y="1973" width="1.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="22.93" y="1983.5" ></text>
</g>
<g >
<title>`llvm::IRBuilderBase::SetInsertPoint(llvm::Instruction*) (1 samples, 0.02%)</title><rect x="617.6" y="5637" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="620.64" y="5647.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="396.3" y="5349" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="399.28" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (7 samples, 0.16%)</title><rect x="57.6" y="2405" width="1.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="60.57" y="2415.5" ></text>
</g>
<g >
<title>`ENSURE-DATUM-ALLOCA^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="354.2" y="5269" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="357.20" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'TAGBODY) T T T)) (7 samples, 0.16%)</title><rect x="66.2" y="2197" width="1.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="69.19" y="2207.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="39.3" y="4181" width="0.5" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="42.27" y="4191.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1397" width="1.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="58.48" y="1407.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (30 samples, 0.66%)</title><rect x="37.4" y="4885" width="7.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="40.44" y="4895.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="77.7" y="4917" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="80.69" y="4927.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (2 samples, 0.04%)</title><rect x="197.4" y="5589" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="200.39" y="5599.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((PRECALC-VALUE-INST (28 samples, 0.62%)</title><rect x="402.0" y="5477" width="7.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="405.03" y="5487.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.02%)</title><rect x="615.0" y="5589" width="0.3" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="618.03" y="5599.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solveBlockValueImpl(l (2 samples, 0.04%)</title><rect x="447.8" y="5557" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="450.76" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.6" y="4645" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="100.55" y="4655.5" ></text>
</g>
<g >
<title>`GLOBAL-ENVIRONMENT^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="549" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="68.93" y="559.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="64.4" y="1237" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="67.36" y="1247.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="732.9" y="5525" width="0.3" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="735.90" y="5535.5" ></text>
</g>
<g >
<title>`llvm::GlobalValue::GlobalValue(llvm::Type*, llvm::Value::ValueT (1 samples, 0.02%)</title><rect x="337.2" y="5173" width="0.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="340.21" y="5183.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (5 samples, 0.11%)</title><rect x="359.2" y="5285" width="1.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="362.17" y="5295.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="138.6" y="4693" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="141.58" y="4703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4117" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="135.31" y="4127.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (4 samples, 0.09%)</title><rect x="27.5" y="4437" width="1.1" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="30.51" y="4447.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="52.6" y="3765" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="55.60" y="3775.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (2 samples, 0.04%)</title><rect x="506.3" y="5461" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="509.31" y="5471.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (2 samples, 0.04%)</title><rect x="454.6" y="5605" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="457.56" y="5615.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeAllocSize(llvm::Type*) const (1 samples, 0.02%)</title><rect x="623.1" y="5541" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="626.13" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (42 samples, 0.93%)</title><rect x="128.4" y="5061" width="11.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="131.39" y="5071.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="17.6" y="1157" width="0.2" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="20.58" y="1167.5" ></text>
</g>
<g >
<title>`llvm::isMathLibCallNoop(llvm::CallSite, llvm::TargetLibraryInfo (2 samples, 0.04%)</title><rect x="518.9" y="5605" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="521.85" y="5615.5" ></text>
</g>
<g >
<title>`void boost::io::detail::distribute&lt;char, std::__1::char_traits&lt; (1 samples, 0.02%)</title><rect x="420.8" y="5541" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="423.84" y="5551.5" ></text>
</g>
<g >
<title>`GEN-MEMREF-ADDRESS^COMPILER^FN^^ (5 samples, 0.11%)</title><rect x="346.1" y="5285" width="1.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="349.10" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="3061" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="63.18" y="3071.5" ></text>
</g>
<g >
<title>`POSITION^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="51.0" y="2565" width="0.6" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="54.03" y="2575.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'CLEAVIR-PRIMOP:V (1 samples, 0.02%)</title><rect x="71.4" y="3573" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="74.42" y="3583.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (3 samples, 0.07%)</title><rect x="516.0" y="5605" width="0.8" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="518.98" y="5615.5" ></text>
</g>
<g >
<title>`llvm::DIBasicType::getImpl(llvm::LLVMContext&amp;, unsigned int, ll (1 samples, 0.02%)</title><rect x="366.0" y="5285" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="368.96" y="5295.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="133.4" y="3877" width="0.2" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="136.36" y="3887.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5157" width="0.5" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="736.42" y="5167.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.04%)</title><rect x="373.8" y="5349" width="0.5" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="376.80" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="1589" width="1.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="59.52" y="1599.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (71 samples, 1.57%)</title><rect x="52.9" y="3813" width="18.5" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="55.86" y="3823.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (5 samples, 0.11%)</title><rect x="54.2" y="981" width="1.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="57.17" y="991.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="309.0" y="5397" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="311.99" y="5407.5" ></text>
</g>
<g >
<title>`boost::basic_format&lt;char, std::__1::char_traits&lt;char&gt;, std::__1 (1 samples, 0.02%)</title><rect x="311.9" y="5397" width="0.2" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="314.86" y="5407.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.02%)</title><rect x="204.4" y="5589" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="207.45" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (7 samples, 0.16%)</title><rect x="68.0" y="3141" width="1.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="71.02" y="3151.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="169.7" y="4965" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="172.69" y="4975.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (26 samples, 0.58%)</title><rect x="16.3" y="3493" width="6.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="19.27" y="3503.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((RETURN-INSTRUCTION (3 samples, 0.07%)</title><rect x="322.3" y="5285" width="0.8" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="325.31" y="5295.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="49.5" y="4037" width="0.2" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="52.46" y="4047.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (2 samples, 0.04%)</title><rect x="493.8" y="5525" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="496.76" y="5535.5" ></text>
</g>
<g >
<title>`llvm::Value::getPointerAlignment(llvm::DataLayout const&amp;) const (1 samples, 0.02%)</title><rect x="516.5" y="5493" width="0.3" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="519.50" y="5503.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (153 samples, 3.39%)</title><rect x="317.3" y="5349" width="40.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="320.35" y="5359.5" >`LA..</text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::__1:: (2 samples, 0.04%)</title><rect x="689.0" y="5605" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="691.99" y="5615.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (6 samples, 0.13%)</title><rect x="230.3" y="5493" width="1.6" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="233.32" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="97.3" y="3317" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="100.29" y="3327.5" ></text>
</g>
<g >
<title>`STD-CLASS-ACCESSORS.WRITER.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="241.6" y="5541" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="244.56" y="5551.5" ></text>
</g>
<g >
<title>`addArgumentAttrs(llvm::SmallSetVector&lt;llvm::Function*, 8u&gt; cons (3 samples, 0.07%)</title><rect x="426.1" y="5669" width="0.8" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="429.07" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2869" width="0.5" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="17.70" y="2879.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (8 samples, 0.18%)</title><rect x="78.5" y="4165" width="2.1" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="81.47" y="4175.5" ></text>
</g>
<g >
<title>`INVALIDATED-CONSTRUCTOR^STATIC-GFS^FN^^ (1 samples, 0.02%)</title><rect x="732.9" y="5733" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="735.90" y="5743.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="61.7" y="1797" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="64.75" y="1807.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="3989" width="0.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="136.36" y="3999.5" ></text>
</g>
<g >
<title>`core::cl__nreverse(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="115.3" y="5493" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="118.32" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="68.5" y="2565" width="1.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="71.54" y="2575.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="652.4" y="5493" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="655.40" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="167.1" y="5061" width="0.8" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="170.07" y="5071.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="12.1" y="4421" width="0.3" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="15.09" y="4431.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^FN^^ (9 samples, 0.20%)</title><rect x="330.4" y="5157" width="2.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="333.42" y="5167.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (13 samples, 0.29%)</title><rect x="54.2" y="2613" width="3.4" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="57.17" y="2623.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::getHash() const (1 samples, 0.02%)</title><rect x="352.4" y="5125" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="355.37" y="5135.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (2 samples, 0.04%)</title><rect x="485.9" y="5557" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="488.92" y="5567.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.07%)</title><rect x="243.6" y="5541" width="0.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="246.65" y="5551.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;core::T_O&gt; (core::S (4 samples, 0.09%)</title><rect x="303.0" y="5381" width="1.0" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="305.97" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4293" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="136.36" y="4303.5" ></text>
</g>
<g >
<title>`llvm::FindFunctionBackedges(llvm::Function const&amp;, llvm::SmallV (1 samples, 0.02%)</title><rect x="584.7" y="5637" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="587.71" y="5647.5" ></text>
</g>
<g >
<title>`free_tiny (2 samples, 0.04%)</title><rect x="461.1" y="5605" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="464.09" y="5615.5" ></text>
</g>
<g >
<title>`llvm::Use::initTags(llvm::Use*, llvm::Use*) (1 samples, 0.02%)</title><rect x="634.1" y="5589" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="637.11" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="3029" width="1.8" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="60.57" y="3039.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="38.2" y="4757" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="41.23" y="4767.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="67.8" y="1237" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="70.76" y="1247.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="14.7" y="2709" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="17.70" y="2719.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (15 samples, 0.33%)</title><rect x="571.1" y="5573" width="3.9" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="574.12" y="5583.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="365.7" y="5381" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="368.70" y="5391.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.02%)</title><rect x="169.9" y="4949" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="172.95" y="4959.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="145.9" y="5125" width="0.3" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="148.90" y="5135.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="70.6" y="3013" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="73.63" y="3023.5" ></text>
</g>
<g >
<title>`RETURN-VALUE-ELT^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="401.5" y="5461" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="404.50" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.9" y="1029" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="67.88" y="1039.5" ></text>
</g>
<g >
<title>`llvm::CallGraph::addToCallGraph(llvm::Function*) (6 samples, 0.13%)</title><rect x="592.6" y="5669" width="1.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="595.55" y="5679.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="477.0" y="5509" width="0.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="480.03" y="5519.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2917" width="0.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="64.75" y="2927.5" ></text>
</g>
<g >
<title>`C+ (1 samples, 0.02%)</title><rect x="339.8" y="5253" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="342.83" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="63.3" y="3029" width="2.1" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="66.32" y="3039.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="148.3" y="5093" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="151.25" y="5103.5" ></text>
</g>
<g >
<title>`GEN-INTERVAL-TYPE-CHECK^CC-HIR-TO-MIR^FN^^ (3 samples, 0.07%)</title><rect x="258.3" y="5557" width="0.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="261.28" y="5567.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="686.1" y="5509" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="689.12" y="5519.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (30 samples, 0.66%)</title><rect x="27.5" y="4885" width="7.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="30.51" y="4895.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'RETURN-FROM) T T (71 samples, 1.57%)</title><rect x="52.9" y="3685" width="18.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="55.86" y="3695.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::GlobalOptLegacyPass::runOnModule(llvm::M (15 samples, 0.33%)</title><rect x="588.6" y="5701" width="4.0" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="591.63" y="5711.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="325" width="1.1" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="59.52" y="335.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="3141" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="65.01" y="3151.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="2885" width="2.6" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="68.41" y="2895.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="177.5" y="5333" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="180.53" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="148.3" y="5125" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="151.25" y="5135.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="717.5" y="5669" width="0.2" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="720.48" y="5679.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="58.3" y="245" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="61.35" y="255.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2389" width="3.4" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="57.17" y="2399.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="68.5" y="2373" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="71.54" y="2383.5" ></text>
</g>
<g >
<title>`llvm::KnownBits::resetAll() (2 samples, 0.04%)</title><rect x="672.0" y="5541" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="675.00" y="5551.5" ></text>
</g>
<g >
<title>0x10d596094 (56 samples, 1.24%)</title><rect x="81.3" y="4741" width="14.7" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="84.35" y="4751.5" ></text>
</g>
<g >
<title>`UNSAFE-FUNCALL1^CORE^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1237" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="24.50" y="1247.5" ></text>
</g>
<g >
<title>`MAKE-LET-INIT-ASTS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="16.3" y="2565" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="19.27" y="2575.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="311.1" y="5445" width="0.5" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="314.08" y="5455.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="44.5" y="4661" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="47.50" y="4671.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4357" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="736.42" y="4367.5" ></text>
</g>
<g >
<title>`GC_mark_some (1 samples, 0.02%)</title><rect x="403.6" y="5253" width="0.3" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="406.59" y="5263.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2229" width="0.3" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="64.22" y="2239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4597" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="136.62" y="4607.5" ></text>
</g>
<g >
<title>0x10d596094 (6 samples, 0.13%)</title><rect x="24.6" y="4629" width="1.6" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="27.64" y="4639.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="60.7" y="2965" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="63.70" y="2975.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (8 samples, 0.18%)</title><rect x="63.3" y="3173" width="2.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="66.32" y="3183.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (1 samples, 0.02%)</title><rect x="554.4" y="5333" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="557.39" y="5343.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="1909" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="64.75" y="1919.5" ></text>
</g>
<g >
<title>`TRANSLATE-FUNCALL^CLASP-CLEAVIR^FN^^ (21 samples, 0.47%)</title><rect x="340.6" y="5285" width="5.5" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="343.61" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4101" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="132.96" y="4111.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.02%)</title><rect x="17.3" y="1637" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="20.32" y="1647.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="404.9" y="5349" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="407.90" y="5359.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="332.0" y="4981" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="334.98" y="4991.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="346.1" y="5205" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="349.10" y="5215.5" ></text>
</g>
<g >
<title>`FUNCTION-TYPE^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="51.8" y="3477" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="54.82" y="3487.5" ></text>
</g>
<g >
<title>`ENVIRONMENT-POLICY^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="35.6" y="5029" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="38.61" y="5039.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2629" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="64.75" y="2639.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (6 samples, 0.13%)</title><rect x="57.8" y="1397" width="1.6" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="60.83" y="1407.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::StripPtrCastKeepAS(llvm::Constant*, llvm (1 samples, 0.02%)</title><rect x="554.4" y="5349" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="557.39" y="5359.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (4 samples, 0.09%)</title><rect x="299.3" y="5285" width="1.1" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="302.32" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.7" y="2037" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="68.67" y="2047.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="330.2" y="5157" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="333.16" y="5167.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1285" width="0.3" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="68.93" y="1295.5" ></text>
</g>
<g >
<title>`COMPILE-ERROR-IF-TOO-MANY-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="337.7" y="5253" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="340.73" y="5263.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="76.4" y="3877" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="79.38" y="3887.5" ></text>
</g>
<g >
<title>`core::core__bformat(gctools::smart_ptr&lt;core::T_O&gt;, std::__1::ba (1 samples, 0.02%)</title><rect x="376.7" y="5381" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="379.68" y="5391.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="74.6" y="3813" width="0.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="77.55" y="3823.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="344.0" y="5205" width="0.3" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="347.01" y="5215.5" ></text>
</g>
<g >
<title>0x10d596094 (25 samples, 0.55%)</title><rect x="16.3" y="2917" width="6.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="19.27" y="2927.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="12.9" y="4245" width="0.2" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="15.87" y="4255.5" ></text>
</g>
<g >
<title>`PROCESS-LOCATION^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (22 samples, 0.49%)</title><rect x="240.0" y="5605" width="5.7" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="242.99" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4661" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="135.31" y="4671.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (4 samples, 0.09%)</title><rect x="268.5" y="5525" width="1.0" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="271.48" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="61.0" y="2613" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="63.96" y="2623.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="64.9" y="869" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="67.88" y="879.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="70.6" y="1605" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="73.63" y="1615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (11 samples, 0.24%)</title><rect x="148.3" y="5205" width="2.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="151.25" y="5215.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.02%)</title><rect x="399.4" y="5413" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="402.41" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4325" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="138.71" y="4335.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="255.1" y="5557" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="258.15" y="5567.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="17.3" y="1893" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="20.32" y="1903.5" ></text>
</g>
<g >
<title>`FUDGE-VALUES-TYPE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="49.2" y="5077" width="0.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="52.20" y="5087.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="1701" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="65.53" y="1711.5" ></text>
</g>
<g >
<title>`void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl&lt;unsigned l (1 samples, 0.02%)</title><rect x="726.4" y="5637" width="0.2" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="729.36" y="5647.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="692.6" y="5653" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="695.65" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2693" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="73.63" y="2703.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="16.8" y="2453" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="19.80" y="2463.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.7" y="3829" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="131.65" y="3839.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (1 samples, 0.02%)</title><rect x="46.1" y="4997" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="49.07" y="5007.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="21.5" y="1637" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="24.50" y="1647.5" ></text>
</g>
<g >
<title>`llvm::SimplifyCall(llvm::ImmutableCallSite, llvm::SimplifyQuery (1 samples, 0.02%)</title><rect x="566.4" y="5333" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="569.42" y="5343.5" ></text>
</g>
<g >
<title>`llvm::LLVMContext::shouldDiscardValueNames() const (1 samples, 0.02%)</title><rect x="399.7" y="5269" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="402.67" y="5279.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::u (1 samples, 0.02%)</title><rect x="468.4" y="5541" width="0.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="471.41" y="5551.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="733.9" y="5637" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="736.94" y="5647.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="622.9" y="5557" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="625.87" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="16.3" y="1909" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="19.27" y="1919.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, llvm::Value* (llvmo::IRBuilder_O::*)(l (1 samples, 0.02%)</title><rect x="346.4" y="5205" width="0.2" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="349.36" y="5215.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (1 samples, 0.02%)</title><rect x="378.0" y="5381" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="380.98" y="5391.5" ></text>
</g>
<g >
<title>`IRC-CREATE-CALL^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="399.7" y="5397" width="0.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="402.67" y="5407.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="65.9" y="1541" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="68.93" y="1551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (7 samples, 0.16%)</title><rect x="68.0" y="2789" width="1.8" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="71.02" y="2799.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;std::__1::unique_ptr&lt;llvm::AAResults::Con (2 samples, 0.04%)</title><rect x="455.9" y="5637" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="458.86" y="5647.5" ></text>
</g>
<g >
<title>`llvm::Function::addFnAttr(llvm::StringRef, llvm::StringRef) (1 samples, 0.02%)</title><rect x="420.6" y="5509" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="423.58" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="2277" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="65.27" y="2287.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="1253" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="68.93" y="1263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="145.4" y="5077" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="148.38" y="5087.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (3 samples, 0.07%)</title><rect x="182.0" y="5477" width="0.8" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="184.97" y="5487.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="169.4" y="4997" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="172.42" y="5007.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="204.7" y="5573" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="207.71" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2565" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="73.63" y="2575.5" ></text>
</g>
<g >
<title>`core::BuiltinClosure_O::closedEnvironment() const (1 samples, 0.02%)</title><rect x="363.3" y="5253" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="366.35" y="5263.5" ></text>
</g>
<g >
<title>`FUNCTION-TYPE^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="51.8" y="3525" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="54.82" y="3535.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="64.1" y="1557" width="1.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="67.10" y="1567.5" ></text>
</g>
<g >
<title>`GC_mark_local (3 samples, 0.07%)</title><rect x="238.7" y="5333" width="0.8" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="241.68" y="5343.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="208.4" y="5349" width="0.2" height="15.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="211.37" y="5359.5" ></text>
</g>
<g >
<title>`GET-DILOCATION^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="315.8" y="5301" width="0.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="318.78" y="5311.5" ></text>
</g>
<g >
<title>`CCLASP-LOOP-READ-AND-COMPILE-FILE-FORMS^CLASP-CLEAVIR^FN^^ (1,572 samples, 34.82%)</title><rect x="11.0" y="5749" width="410.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="14.05" y="5759.5" >`CCLASP-LOOP-READ-AND-COMPILE-FILE-FORMS^CLASP-CLEAVIR^F..</text>
</g>
<g >
<title>`core::cl__gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="284.9" y="5621" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="287.94" y="5631.5" ></text>
</g>
<g >
<title>`void std::__1::list&lt;llvm::GlobalsAAResult::DeletionCallbackHand (1 samples, 0.02%)</title><rect x="700.5" y="5653" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="703.49" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2517" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="64.22" y="2527.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisPass(void const*) (2 samples, 0.04%)</title><rect x="454.6" y="5621" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="457.56" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="1013" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="65.01" y="1023.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="31.7" y="4357" width="1.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="34.69" y="4367.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="400.2" y="5333" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="403.20" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4325" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="137.93" y="4335.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="22.0" y="2725" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="25.02" y="2735.5" ></text>
</g>
<g >
<title>`llvm::IntegerType::get(llvm::LLVMContext&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="477.8" y="5557" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="480.82" y="5567.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="205.5" y="5525" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="208.49" y="5535.5" ></text>
</g>
<g >
<title>`__cxa_throw (1 samples, 0.02%)</title><rect x="733.9" y="5717" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="736.94" y="5727.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="3045" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="63.18" y="3055.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleCharacterString_O&gt; gctools::GCOb (1 samples, 0.02%)</title><rect x="130.5" y="4597" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="133.48" y="4607.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="145.1" y="5093" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="148.12" y="5103.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (1 samples, 0.02%)</title><rect x="142.5" y="4965" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="145.50" y="4975.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="501.9" y="5429" width="0.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="504.86" y="5439.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (2 samples, 0.04%)</title><rect x="132.6" y="4693" width="0.5" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="135.57" y="4703.5" ></text>
</g>
<g >
<title>`OUT^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="309.2" y="5461" width="0.6" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="312.25" y="5471.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (6 samples, 0.13%)</title><rect x="57.8" y="1285" width="1.6" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="60.83" y="1295.5" ></text>
</g>
<g >
<title>`BASIC-BLOCKS^CLEAVIR-BASIC-BLOCKS^FN^^ (19 samples, 0.42%)</title><rect x="280.2" y="5637" width="5.0" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="283.24" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="1989" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="64.75" y="1999.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="399.7" y="5413" width="0.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="402.67" y="5423.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.04%)</title><rect x="68.8" y="2261" width="0.5" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="71.80" y="2271.5" ></text>
</g>
<g >
<title>`SLOT-EXISTS-P^COMMON-LISP^FN^^ (6 samples, 0.13%)</title><rect x="100.4" y="5621" width="1.6" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="103.43" y="5631.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="53.6" y="2837" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="56.65" y="2847.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="3109" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="64.22" y="3119.5" ></text>
</g>
<g >
<title>`OUT^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="401.0" y="5461" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="403.98" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="96.2" y="4965" width="0.6" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="99.25" y="4975.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (4 samples, 0.09%)</title><rect x="661.3" y="5509" width="1.0" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="664.29" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="1525" width="1.0" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="58.48" y="1535.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="2741" width="2.6" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="68.41" y="2751.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (36 samples, 0.80%)</title><rect x="14.2" y="4117" width="9.4" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="17.18" y="4127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (21 samples, 0.47%)</title><rect x="152.2" y="5381" width="5.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="155.17" y="5391.5" ></text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="735.8" y="5477" width="1.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="738.77" y="5487.5" ></text>
</g>
<g >
<title>`GENERATE-CATCH-LANDING-PAD^CLASP-CLEAVIR^FN^^ (13 samples, 0.29%)</title><rect x="395.0" y="5397" width="3.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="397.97" y="5407.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="168.6" y="4917" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="171.64" y="4927.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="717.5" y="5605" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="720.48" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.4" y="3909" width="0.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="132.44" y="3919.5" ></text>
</g>
<g >
<title>`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="459.8" y="5509" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="462.79" y="5519.5" ></text>
</g>
<g >
<title>`core::ClosureWithSlots_O* gctools::untag_general&lt;core::ClosureW (1 samples, 0.02%)</title><rect x="385.3" y="5397" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="388.30" y="5407.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="252.3" y="5381" width="0.2" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="255.27" y="5391.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="80.8" y="4693" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="83.83" y="4703.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="52.6" y="3717" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="55.60" y="3727.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="64.6" y="213" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="67.62" y="223.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="53.6" y="2677" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="56.65" y="2687.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.02%)</title><rect x="127.3" y="4837" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="130.35" y="4847.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="12.4" y="4917" width="1.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="15.35" y="4927.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="173.9" y="5381" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="176.87" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4581" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="141.32" y="4591.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.6" y="549" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="67.62" y="559.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.02%)</title><rect x="123.4" y="5525" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="126.43" y="5535.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="376.4" y="5205" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="379.41" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T LEXICAL-VARIABLE-INFO T T (1 samples, 0.02%)</title><rect x="23.9" y="3653" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="26.85" y="3663.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="277.6" y="5541" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="280.62" y="5551.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (233 samples, 5.16%)</title><rect x="36.4" y="5205" width="60.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="39.40" y="5215.5" >`FUNCA..</text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4549" width="0.3" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="736.42" y="4559.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (9 samples, 0.20%)</title><rect x="24.6" y="4837" width="2.4" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="27.64" y="4847.5" ></text>
</g>
<g >
<title>`CONVERT-BODY^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2757" width="3.4" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="57.17" y="2767.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="1141" width="1.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="57.17" y="1151.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="120.0" y="5573" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="123.03" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (13 samples, 0.29%)</title><rect x="54.2" y="2357" width="3.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="57.17" y="2367.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="133.4" y="3829" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="136.36" y="3839.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (88 samples, 1.95%)</title><rect x="49.5" y="4741" width="23.0" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="52.46" y="4751.5" >`..</text>
</g>
<g >
<title>`std::__1::pair&lt;std::__1::__tree_iterator&lt;std::__1::pair&lt;llvm::M (2 samples, 0.04%)</title><rect x="710.2" y="5669" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="713.16" y="5679.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (22 samples, 0.49%)</title><rect x="16.3" y="2629" width="5.7" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="19.27" y="2639.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="63.8" y="2309" width="1.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="66.84" y="2319.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.02%)</title><rect x="528.5" y="5493" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="531.52" y="5503.5" ></text>
</g>
<g >
<title>`core::core__coerce_to_filename(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="720.9" y="5717" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="723.87" y="5727.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1669" width="1.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="57.17" y="1679.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="2757" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="65.01" y="2767.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3349" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="100.29" y="3359.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::getHash() const (3 samples, 0.07%)</title><rect x="624.7" y="5509" width="0.8" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="627.70" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (2 samples, 0.04%)</title><rect x="21.2" y="1909" width="0.6" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="24.24" y="1919.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4325" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="736.42" y="4335.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.02%)</title><rect x="259.3" y="5493" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="262.33" y="5503.5" ></text>
</g>
<g >
<title>`wrapped_getInt8Ty_llvm__LLVMContext_ (2 samples, 0.04%)</title><rect x="389.2" y="5413" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="392.22" y="5423.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_uncollectable (1 samples, 0.02%)</title><rect x="155.8" y="5109" width="0.3" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="158.83" y="5119.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInBoundsGEP(llvm::Value*, gctools::sm (8 samples, 0.18%)</title><rect x="404.9" y="5381" width="2.1" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="407.90" y="5391.5" ></text>
</g>
<g >
<title>`FUNCTIONS-USING-LOCATION^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="242.9" y="5589" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="245.86" y="5599.5" ></text>
</g>
<g >
<title>`MAYBE-TYPE-WRAP-ARGUMENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="79.3" y="3733" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="82.26" y="3743.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="527.0" y="5509" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="529.95" y="5519.5" ></text>
</g>
<g >
<title>`GC_add_map_entry (1 samples, 0.02%)</title><rect x="422.9" y="5605" width="0.3" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="425.93" y="5615.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="399.7" y="5301" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="402.67" y="5311.5" ></text>
</g>
<g >
<title>`POLICY-VALUE^CLEAVIR-COMPILATION-POLICY^FN^^ (1 samples, 0.02%)</title><rect x="196.1" y="5589" width="0.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="199.08" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="5557" width="0.2" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="100.55" y="5567.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::Metadata*, llvm::MetadataAsValue*, llvm::D (1 samples, 0.02%)</title><rect x="360.5" y="5285" width="0.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="363.47" y="5295.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3701" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="132.96" y="3711.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5429" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="123.55" y="5439.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="5509" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="100.55" y="5519.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1141" width="1.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="59.52" y="1151.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (2 samples, 0.04%)</title><rect x="300.9" y="5333" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="303.88" y="5343.5" ></text>
</g>
<g >
<title>`MAKE-LET-INIT-ASTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1621" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="65.01" y="1631.5" ></text>
</g>
<g >
<title>`llvm::MemorySSA::buildMemorySSA() (22 samples, 0.49%)</title><rect x="525.6" y="5637" width="5.8" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="528.65" y="5647.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="376.4" y="5221" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="379.41" y="5231.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="329.1" y="5093" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="332.11" y="5103.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="155.0" y="5077" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="158.05" y="5087.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4325" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="135.31" y="4335.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="23.1" y="3685" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="26.07" y="3695.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="616.1" y="5621" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="619.07" y="5631.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="123.4" y="5509" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="126.43" y="5519.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="493.8" y="5477" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="496.76" y="5487.5" ></text>
</g>
<g >
<title>`cc_load_values (1 samples, 0.02%)</title><rect x="142.0" y="4965" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="144.98" y="4975.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="165.8" y="4997" width="0.2" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="168.77" y="5007.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4309" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="139.23" y="4319.5" ></text>
</g>
<g >
<title>`GC_clear_hdr_marks (1 samples, 0.02%)</title><rect x="118.7" y="5413" width="0.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="121.72" y="5423.5" ></text>
</g>
<g >
<title>`COERCE-TO-CONDITION^CORE^FN^^ (1 samples, 0.02%)</title><rect x="735.0" y="5541" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="737.99" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1845" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="69.19" y="1855.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (3 samples, 0.07%)</title><rect x="65.4" y="2453" width="0.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="68.41" y="2463.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Function_O&gt; gctools::As&lt;gctools::smart (1 samples, 0.02%)</title><rect x="339.0" y="5189" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="342.04" y="5199.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PoisoningVH&lt;llvm::Basic (1 samples, 0.02%)</title><rect x="447.0" y="5525" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="449.98" y="5535.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1461" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="69.19" y="1471.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="137.3" y="4501" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="140.28" y="4511.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="734.2" y="5413" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="737.20" y="5423.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (1 samples, 0.02%)</title><rect x="260.6" y="5477" width="0.3" height="15.0" fill="rgb(237,105,105)" rx="2" ry="2" />
<text  x="263.64" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="3365" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="73.63" y="3375.5" ></text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::isFnAttrDi (1 samples, 0.02%)</title><rect x="518.9" y="5589" width="0.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="521.85" y="5599.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.02%)</title><rect x="549.7" y="5333" width="0.3" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="552.69" y="5343.5" ></text>
</g>
<g >
<title>`wrapped_cl__find_package_T_sp (1 samples, 0.02%)</title><rect x="96.5" y="4837" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="99.51" y="4847.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="70.4" y="2501" width="0.2" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="73.37" y="2511.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.02%)</title><rect x="548.4" y="5317" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="551.38" y="5327.5" ></text>
</g>
<g >
<title>`COMPUTE-APPLICABLE-METHODS^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="2597" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="72.85" y="2607.5" ></text>
</g>
<g >
<title>`HASH-TABLE-SETF-GETHASH^CORE^FN^^ (1 samples, 0.02%)</title><rect x="312.6" y="5461" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="315.64" y="5471.5" ></text>
</g>
<g >
<title>`core::InstanceCreator_O::creator_allocate() (1 samples, 0.02%)</title><rect x="96.2" y="4741" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="99.25" y="4751.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="120.6" y="5189" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="123.55" y="5199.5" ></text>
</g>
<g >
<title>`llvmo::Type_O::getPointerTo(int) (2 samples, 0.04%)</title><rect x="393.9" y="5317" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="396.92" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2933" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="64.22" y="2943.5" ></text>
</g>
<g >
<title>`core::core__make_vector(gctools::smart_ptr&lt;core::T_O&gt;, unsigned (1 samples, 0.02%)</title><rect x="240.3" y="5525" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="243.25" y="5535.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="563.0" y="5461" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="566.02" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="174.4" y="5365" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="177.39" y="5375.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.2" y="3589" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="132.18" y="3599.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignment(llvm::Type*, bool) const (1 samples, 0.02%)</title><rect x="657.9" y="5605" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="660.89" y="5615.5" ></text>
</g>
<g >
<title>`TREAT-AS-SPECIAL-OPERATOR-P^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="96.5" y="4853" width="0.3" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="99.51" y="4863.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Value*, std::__1::allocator&lt;llvm (1 samples, 0.02%)</title><rect x="352.9" y="5173" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="355.89" y="5183.5" ></text>
</g>
<g >
<title>`core::log_operation_2op(core::boole_ops, gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="68.3" y="2181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="71.28" y="2191.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (4 samples, 0.09%)</title><rect x="238.4" y="5461" width="1.1" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="241.42" y="5471.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="4629" width="1.1" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="14.31" y="4639.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="410.9" y="5397" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="413.91" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2773" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="65.79" y="2783.5" ></text>
</g>
<g >
<title>`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std:: (1 samples, 0.02%)</title><rect x="376.7" y="5333" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="379.68" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (5 samples, 0.11%)</title><rect x="54.2" y="1909" width="1.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="57.17" y="1919.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="395.8" y="5333" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="398.75" y="5343.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="53.9" y="2757" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="56.91" y="2767.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1685" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="65.79" y="1695.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="60.2" y="2549" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="63.18" y="2559.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (56 samples, 1.24%)</title><rect x="81.3" y="4709" width="14.7" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="84.35" y="4719.5" ></text>
</g>
<g >
<title>`MAPC^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="10.5" y="5717" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="13.52" y="5727.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1877" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="68.93" y="1887.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="65.9" y="645" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="68.93" y="655.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, void (llvmo::IRBuilderBase_O::*)(gctoo (1 samples, 0.02%)</title><rect x="327.8" y="5221" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="330.80" y="5231.5" ></text>
</g>
<g >
<title>`SUCCESSORS^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="203.4" y="5605" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="206.40" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (10 samples, 0.22%)</title><rect x="148.5" y="5157" width="2.6" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="151.52" y="5167.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="318.1" y="5333" width="1.1" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="321.13" y="5343.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::visitCallSite(llvm::CallSite (2 samples, 0.04%)</title><rect x="712.8" y="5669" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="715.77" y="5679.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.02%)</title><rect x="134.4" y="4181" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="137.40" y="4191.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="354.2" y="5189" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="357.20" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL-BINDING^CLEAVIR-GENERATE-AST^((T T T T T))^METH (2 samples, 0.04%)</title><rect x="24.6" y="3765" width="0.6" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="27.64" y="3775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4405" width="0.2" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="136.36" y="4415.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="71.4" y="3589" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="74.42" y="3599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4677" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="142.11" y="4687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (16 samples, 0.35%)</title><rect x="128.4" y="4917" width="4.2" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="131.39" y="4927.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (136 samples, 3.01%)</title><rect x="749.1" y="5621" width="35.5" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="752.10" y="5631.5" >`GC..</text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::ModuleHandle_O&gt;::smart_ptr() (1 samples, 0.02%)</title><rect x="381.9" y="5413" width="0.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="384.90" y="5423.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="67.2" y="1237" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="70.24" y="1247.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="21.5" y="1669" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="24.50" y="1679.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.02%)</title><rect x="22.5" y="2805" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="25.54" y="2815.5" ></text>
</g>
<g >
<title>`llvm::GVN::ValueTable::lookupOrAddCall(llvm::CallInst*) (6 samples, 0.13%)</title><rect x="542.4" y="5573" width="1.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="545.37" y="5583.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="64.1" y="1541" width="1.0" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="67.10" y="1551.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="73.0" y="4629" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="75.99" y="4639.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (2 samples, 0.04%)</title><rect x="567.2" y="5429" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="570.20" y="5439.5" ></text>
</g>
<g >
<title>`core::cl__gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (2 samples, 0.04%)</title><rect x="237.1" y="5573" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="240.11" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="69.8" y="3093" width="0.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="72.85" y="3103.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="552.6" y="5253" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="555.56" y="5263.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="459.0" y="5557" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="462.00" y="5567.5" ></text>
</g>
<g >
<title>`llvm::KnownBits::resetAll() (2 samples, 0.04%)</title><rect x="672.8" y="5557" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="675.79" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4117" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="139.23" y="4127.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="677" width="1.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="58.48" y="687.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm:: (1 samples, 0.02%)</title><rect x="449.3" y="5605" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="452.33" y="5615.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::insertInto(llvm::Function*, llvm::BasicBlock* (1 samples, 0.02%)</title><rect x="391.0" y="5365" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="394.05" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (36 samples, 0.80%)</title><rect x="14.2" y="4581" width="9.4" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="17.18" y="4591.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="350.8" y="5253" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="353.80" y="5263.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="145.1" y="5141" width="0.3" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="148.12" y="5151.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (3 samples, 0.07%)</title><rect x="148.5" y="4997" width="0.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="151.52" y="5007.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.02%)</title><rect x="623.1" y="5525" width="0.3" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="626.13" y="5535.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (3 samples, 0.07%)</title><rect x="18.4" y="1957" width="0.7" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="21.36" y="1967.5" ></text>
</g>
<g >
<title>`getAllocationData(llvm::Value const*, AllocType, llvm::TargetLi (2 samples, 0.04%)</title><rect x="502.1" y="5493" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="505.12" y="5503.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (4 samples, 0.09%)</title><rect x="201.0" y="5525" width="1.1" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="204.05" y="5535.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getPointerABIAlignment(unsigned int) const (1 samples, 0.02%)</title><rect x="670.4" y="5461" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="673.43" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4389" width="0.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="137.40" y="4399.5" ></text>
</g>
<g >
<title>`llvm::scc_iterator&lt;llvm::Function const*, llvm::GraphTraits&lt;llv (1 samples, 0.02%)</title><rect x="603.3" y="5605" width="0.2" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="606.27" y="5615.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::Constant*, std::__1::allocator&lt;llvm::Con (1 samples, 0.02%)</title><rect x="406.5" y="5333" width="0.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="409.47" y="5343.5" ></text>
</g>
<g >
<title>`ALLOCA-RETURN^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="285.5" y="5557" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="288.46" y="5567.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="74.6" y="3797" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="77.55" y="3807.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="1589" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="60.57" y="1599.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (40 samples, 0.89%)</title><rect x="14.2" y="4805" width="10.4" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="17.18" y="4815.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="60.4" y="3013" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="63.44" y="3023.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="414.8" y="5477" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="417.83" y="5487.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm::Str (1 samples, 0.02%)</title><rect x="330.7" y="4869" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="333.68" y="4879.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="16.3" y="2341" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="19.27" y="2351.5" ></text>
</g>
<g >
<title>`operator delete(void*) (1 samples, 0.02%)</title><rect x="600.1" y="5653" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="603.13" y="5663.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (4 samples, 0.09%)</title><rect x="164.2" y="4965" width="1.0" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="167.20" y="4975.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="1685" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="73.63" y="1695.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="341.7" y="5221" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="344.65" y="5231.5" ></text>
</g>
<g >
<title>`llvm::PassManagerBuilder::populateModulePassManager(llvm::legac (1 samples, 0.02%)</title><rect x="425.8" y="5717" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="428.81" y="5727.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="4549" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="100.55" y="4559.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="68.0" y="3077" width="1.8" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="71.02" y="3087.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.1" y="2133" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="20.06" y="2143.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (2 samples, 0.04%)</title><rect x="70.1" y="2869" width="0.5" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="73.11" y="2879.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.07%)</title><rect x="208.4" y="5477" width="0.7" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="211.37" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="71.4" y="3685" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="74.42" y="3695.5" ></text>
</g>
<g >
<title>`getAllocationDataForFunction(llvm::Function const*, AllocType,  (1 samples, 0.02%)</title><rect x="521.7" y="5589" width="0.3" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="524.73" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4165" width="0.2" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="138.19" y="4175.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.9" y="4053" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="137.93" y="4063.5" ></text>
</g>
<g >
<title>`llvm::Function::addAttribute(unsigned int, llvm::Attribute::Att (1 samples, 0.02%)</title><rect x="734.2" y="5365" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="737.20" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (27 samples, 0.60%)</title><rect x="27.5" y="4597" width="7.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="30.51" y="4607.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (52 samples, 1.15%)</title><rect x="545.2" y="5477" width="13.6" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="548.25" y="5487.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="622.9" y="5541" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="625.87" y="5551.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::CastGEPIndices(llvm::Type*, llvm::ArrayR (1 samples, 0.02%)</title><rect x="465.8" y="5589" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="468.80" y="5599.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;std::__1::__value_type&lt;llvm::Function const*,  (1 samples, 0.02%)</title><rect x="700.8" y="5525" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="703.75" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1205" width="0.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="65.01" y="1215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4197" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="137.14" y="4207.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (4 samples, 0.09%)</title><rect x="386.3" y="5413" width="1.1" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="389.35" y="5423.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::Instance_O&gt; gctools::GCObjectAppropria (3 samples, 0.07%)</title><rect x="208.4" y="5493" width="0.7" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="211.37" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (23 samples, 0.51%)</title><rect x="38.7" y="4693" width="6.1" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="41.75" y="4703.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (3 samples, 0.07%)</title><rect x="238.7" y="5397" width="0.8" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="241.68" y="5407.5" ></text>
</g>
<g >
<title>`llvm::GlobalDCEPass::UpdateGVDependencies(llvm::GlobalValue&amp;) (1 samples, 0.02%)</title><rect x="588.1" y="5669" width="0.3" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="591.11" y="5679.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="31.4" y="4341" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="34.43" y="4351.5" ></text>
</g>
<g >
<title>`clear_marks_for_block (3 samples, 0.07%)</title><rect x="743.1" y="5621" width="0.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="746.09" y="5631.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="821" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="61.09" y="831.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="652.4" y="5413" width="0.3" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="655.40" y="5423.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm: (1 samples, 0.02%)</title><rect x="590.2" y="5621" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="593.20" y="5631.5" ></text>
</g>
<g >
<title>`core::cl__gensym(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="172.8" y="5237" width="0.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="175.82" y="5247.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="189.3" y="5445" width="0.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="192.29" y="5455.5" ></text>
</g>
<g >
<title>`%LITERAL-VALUE^CLASP-CLEAVIR^FN^^ (3 samples, 0.07%)</title><rect x="350.0" y="5269" width="0.8" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="353.02" y="5279.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="3781" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="135.31" y="3791.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="501" width="1.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="58.48" y="511.5" ></text>
</g>
<g >
<title>`llvm::ObjectSizeOffsetVisitor::visitGlobalVariable(llvm::Global (1 samples, 0.02%)</title><rect x="545.8" y="5413" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="548.77" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="64.4" y="917" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="67.36" y="927.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::freePass(llvm::Pass*, llvm::StringRef, llv (12 samples, 0.27%)</title><rect x="533.0" y="5653" width="3.1" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="535.96" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (15 samples, 0.33%)</title><rect x="128.4" y="4885" width="3.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="131.39" y="4895.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1573" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="68.93" y="1583.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((SINGLE-FLOAT-P-INS (1 samples, 0.02%)</title><rect x="295.1" y="5461" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="298.13" y="5471.5" ></text>
</g>
<g >
<title>`llvm::Value::getName() const (1 samples, 0.02%)</title><rect x="731.1" y="5653" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="734.07" y="5663.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="71.4" y="3557" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="74.42" y="3567.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="136.0" y="4549" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="138.97" y="4559.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (6 samples, 0.13%)</title><rect x="12.4" y="4693" width="1.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="15.35" y="4703.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="21.5" y="1573" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="24.50" y="1583.5" ></text>
</g>
<g >
<title>`GC_mark_from (1 samples, 0.02%)</title><rect x="171.0" y="4917" width="0.3" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="173.99" y="4927.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.9" y="2709" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="56.91" y="2719.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (7 samples, 0.16%)</title><rect x="193.2" y="5573" width="1.8" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="196.21" y="5583.5" ></text>
</g>
<g >
<title>`std::__1::vector&lt;llvm::BlockFrequencyInfoImplBase::WorkingData, (1 samples, 0.02%)</title><rect x="602.0" y="5605" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="604.96" y="5615.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.02%)</title><rect x="170.5" y="5093" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="173.47" y="5103.5" ></text>
</g>
<g >
<title>`BACKQUOTE-APPEND^CORE^FN^^ (1 samples, 0.02%)</title><rect x="129.4" y="3877" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="132.44" y="3887.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::BasicBlock*&gt;::insert(llvm::BasicBlo (1 samples, 0.02%)</title><rect x="580.0" y="5605" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="583.01" y="5615.5" ></text>
</g>
<g >
<title>`GENERATE-AST^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="1045" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="61.35" y="1055.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock (1 samples, 0.02%)</title><rect x="459.0" y="5605" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="462.00" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (12 samples, 0.27%)</title><rect x="74.0" y="4165" width="3.2" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="77.03" y="4175.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2837" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="65.27" y="2847.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="330.2" y="5109" width="0.2" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="333.16" y="5119.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="57.6" y="2757" width="1.8" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="60.57" y="2767.5" ></text>
</g>
<g >
<title>`CODEGEN-DISPATCHER^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.0" y="5429" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="737.99" y="5439.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="66.5" y="1909" width="1.0" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="69.45" y="1919.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="343.2" y="5157" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="346.22" y="5167.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="1573" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="60.57" y="1583.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="44.2" y="4629" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="47.24" y="4639.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (2 samples, 0.04%)</title><rect x="325.2" y="5269" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="328.19" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="437" width="1.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="57.17" y="447.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (2 samples, 0.04%)</title><rect x="557.5" y="5349" width="0.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="560.53" y="5359.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3157" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="100.29" y="3167.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="21.5" y="1461" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="24.50" y="1471.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4693" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="100.29" y="4703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4357" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="139.23" y="4367.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4245" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="132.96" y="4255.5" ></text>
</g>
<g >
<title>`llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::Arra (1 samples, 0.02%)</title><rect x="478.3" y="5573" width="0.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="481.34" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="63.8" y="1909" width="0.3" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="66.84" y="1919.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="97.6" y="5173" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="100.55" y="5183.5" ></text>
</g>
<g >
<title>`CALCULATE-FASTGF-DISPATCH-FUNCTION^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.0" y="5445" width="0.2" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="737.99" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (96 samples, 2.13%)</title><rect x="152.2" y="5541" width="25.1" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="155.17" y="5551.5" >`..</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="2421" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="64.75" y="2431.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (2 samples, 0.04%)</title><rect x="11.6" y="4517" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="14.57" y="4527.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (5 samples, 0.11%)</title><rect x="549.7" y="5413" width="1.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="552.69" y="5423.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="293.0" y="5333" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="296.04" y="5343.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="426.6" y="5637" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="429.59" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="4197" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="100.29" y="4207.5" ></text>
</g>
<g >
<title>`core::interpreter_lookup_function_or_error(gctools::smart_ptr&lt;c (1 samples, 0.02%)</title><rect x="357.1" y="5333" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="360.07" y="5343.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4181" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="132.96" y="4191.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (8 samples, 0.18%)</title><rect x="55.5" y="1925" width="2.1" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="58.48" y="1935.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T GLOBAL-FUNCTION-INFO))^METHOD (2 samples, 0.04%)</title><rect x="51.8" y="3541" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="54.82" y="3551.5" ></text>
</g>
<g >
<title>`FIND^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="733.2" y="5589" width="0.2" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="736.16" y="5599.5" ></text>
</g>
<g >
<title>`llvm::BasicBlock::getTerminator() const (1 samples, 0.02%)</title><rect x="586.5" y="5605" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="589.54" y="5615.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-I32^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="314.2" y="5349" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="317.21" y="5359.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::pointsToConstantMemory(llvm::MemoryLocatio (1 samples, 0.02%)</title><rect x="560.9" y="5493" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="563.93" y="5503.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((SYMBOL-VALUE-INSTR (3 samples, 0.07%)</title><rect x="410.4" y="5477" width="0.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="413.39" y="5487.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (168 samples, 3.72%)</title><rect x="314.0" y="5397" width="43.9" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="316.95" y="5407.5" >`LAY..</text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (7 samples, 0.16%)</title><rect x="411.7" y="5413" width="1.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="414.70" y="5423.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (17 samples, 0.38%)</title><rect x="639.9" y="5589" width="4.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="642.86" y="5599.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="138.3" y="4309" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="141.32" y="4319.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.8" y="5413" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="180.79" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4709" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="140.28" y="4719.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="208.1" y="5525" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="211.10" y="5535.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.6" y="2613" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="56.65" y="2623.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (8 samples, 0.18%)</title><rect x="200.0" y="5573" width="2.1" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="203.00" y="5583.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (1 samples, 0.02%)</title><rect x="444.1" y="5557" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="447.10" y="5567.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_O, gctools::smar (1 samples, 0.02%)</title><rect x="98.3" y="5653" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="101.34" y="5663.5" ></text>
</g>
<g >
<title>`WRITE-ARGUMENT-BYTE-CODE^LITERAL^FN^^ (12 samples, 0.27%)</title><rect x="422.4" y="5733" width="3.1" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="425.41" y="5743.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4613" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="137.66" y="4623.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (25 samples, 0.55%)</title><rect x="16.3" y="3189" width="6.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="19.27" y="3199.5" ></text>
</g>
<g >
<title>`ImageLoader::trieWalk(unsigned char const*, unsigned char const (1 samples, 0.02%)</title><rect x="788.8" y="5717" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="791.83" y="5727.5" ></text>
</g>
<g >
<title>`llvm::Use::getImpliedUser() const (1 samples, 0.02%)</title><rect x="710.7" y="5685" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="713.68" y="5695.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="3029" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="64.22" y="3039.5" ></text>
</g>
<g >
<title>`__gmpz_cmp_si (1 samples, 0.02%)</title><rect x="365.2" y="5301" width="0.2" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="368.18" y="5311.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="737.1" y="5701" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="740.08" y="5711.5" ></text>
</g>
<g >
<title>`llvm::Value* SimplifyCall&lt;llvm::Use*&gt;(llvm::ImmutableCallSite,  (1 samples, 0.02%)</title><rect x="489.6" y="5605" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="492.58" y="5615.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="548.4" y="5285" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="551.38" y="5295.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="16.0" y="3733" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="19.01" y="3743.5" ></text>
</g>
<g >
<title>`wrapped_cl__get_internal_run_time_ (1 samples, 0.02%)</title><rect x="285.2" y="5621" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="288.20" y="5631.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="366.0" y="5365" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="368.96" y="5375.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="70.9" y="2869" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="73.89" y="2879.5" ></text>
</g>
<g >
<title>`malloc (2 samples, 0.04%)</title><rect x="684.5" y="5621" width="0.6" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="687.55" y="5631.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1,117 samples, 24.74%)</title><rect x="425.8" y="5781" width="291.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="428.81" y="5791.5" >`core::SingleDispatchGenericFunctionClo..</text>
</g>
<g >
<title>0x10d596094 (26 samples, 0.58%)</title><rect x="16.3" y="3541" width="6.8" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="19.27" y="3551.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (83 samples, 1.84%)</title><rect x="49.7" y="4005" width="21.7" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="52.73" y="4015.5" >`..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (2 samples, 0.04%)</title><rect x="14.7" y="2693" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="17.70" y="2703.5" ></text>
</g>
<g >
<title>`void llvm::BitstreamWriter::EmitRecord&lt;llvm::SmallVector&lt;unsign (1 samples, 0.02%)</title><rect x="721.9" y="5653" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="724.92" y="5663.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="501.9" y="5445" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="504.86" y="5455.5" ></text>
</g>
<g >
<title>`core::SourcePosInfo_O::make(std::__1::basic_string&lt;char, std::_ (1 samples, 0.02%)</title><rect x="317.1" y="5333" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="320.09" y="5343.5" ></text>
</g>
<g >
<title>`IRC-BEGIN-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="331.2" y="5077" width="0.3" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="334.20" y="5087.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="68.0" y="2741" width="1.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="71.02" y="2751.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="64.4" y="661" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="67.36" y="671.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TYPEQ-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="161.6" y="5061" width="0.5" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="164.58" y="5071.5" ></text>
</g>
<g >
<title>`getCalledFunction(llvm::Value const*, bool, bool&amp;) (1 samples, 0.02%)</title><rect x="599.3" y="5605" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="602.35" y="5615.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::pop_binding() (1 samples, 0.02%)</title><rect x="58.1" y="565" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="61.09" y="575.5" ></text>
</g>
<g >
<title>`llvm::Value::setName(llvm::Twine const&amp;) (1 samples, 0.02%)</title><rect x="380.9" y="5333" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="383.86" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.9" y="981" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="67.88" y="991.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="321.5" y="5189" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="324.53" y="5199.5" ></text>
</g>
<g >
<title>`OPTIMIZED-RETURN-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="149.6" y="5045" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="152.56" y="5055.5" ></text>
</g>
<g >
<title>`core::SourcePosInfo_O::make(std::__1::basic_string&lt;char, std::_ (4 samples, 0.09%)</title><rect x="413.5" y="5477" width="1.1" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="416.53" y="5487.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.02%)</title><rect x="22.8" y="3205" width="0.3" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="25.81" y="3215.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="43.7" y="4469" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="46.71" y="4479.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignment(llvm::Type*, bool) const (2 samples, 0.04%)</title><rect x="490.9" y="5605" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="493.89" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (6 samples, 0.13%)</title><rect x="24.6" y="4341" width="1.6" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="27.64" y="4351.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((LEXICAL-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="4949" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="180.26" y="4959.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="41.9" y="4277" width="0.2" height="15.0" fill="rgb(215,73,73)" rx="2" ry="2" />
<text  x="44.88" y="4287.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (1 samples, 0.02%)</title><rect x="22.0" y="2437" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="25.02" y="2447.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="14.2" y="3221" width="1.0" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="17.18" y="3231.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="169.2" y="4917" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="172.16" y="4927.5" ></text>
</g>
<g >
<title>`isKnownNonZero(llvm::Value const*, unsigned int, (anonymous nam (13 samples, 0.29%)</title><rect x="640.1" y="5573" width="3.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="643.12" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="2053" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="65.27" y="2063.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisPass(void const*) (1 samples, 0.02%)</title><rect x="453.8" y="5621" width="0.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="456.77" y="5631.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldCastInstruction(unsigned int, llvm::Constant* (1 samples, 0.02%)</title><rect x="479.1" y="5589" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="482.13" y="5599.5" ></text>
</g>
<g >
<title>`NEW-TYPE-TAG^CORE^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1109" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="69.19" y="1119.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="60.7" y="2821" width="0.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="63.70" y="2831.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="10.5" y="5669" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="13.52" y="5679.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (5 samples, 0.11%)</title><rect x="207.8" y="5557" width="1.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="210.84" y="5567.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (3 samples, 0.07%)</title><rect x="248.1" y="5573" width="0.8" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="251.09" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (5 samples, 0.11%)</title><rect x="54.2" y="1717" width="1.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="57.17" y="1727.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="65.4" y="2325" width="0.8" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="68.41" y="2335.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::markOverdefined(llvm::Value* (2 samples, 0.04%)</title><rect x="712.8" y="5653" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="715.77" y="5663.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (17 samples, 0.38%)</title><rect x="73.2" y="4853" width="4.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="76.25" y="4863.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (1 samples, 0.02%)</title><rect x="645.9" y="5605" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="648.87" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'TAGBODY) T T T)) (1 samples, 0.02%)</title><rect x="62.5" y="2117" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="65.53" y="2127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4261" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="138.71" y="4271.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4757" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="736.42" y="4767.5" ></text>
</g>
<g >
<title>`llvm::APInt::zextOrTrunc(unsigned int) const (1 samples, 0.02%)</title><rect x="642.7" y="5429" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="645.73" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="1877" width="0.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="65.53" y="1887.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="651.6" y="5381" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="654.62" y="5391.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (1 samples, 0.02%)</title><rect x="203.1" y="5381" width="0.3" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="206.14" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4261" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="132.96" y="4271.5" ></text>
</g>
<g >
<title>`llvm::SimplifyGEPInst(llvm::Type*, llvm::ArrayRef&lt;llvm::Value*&gt; (1 samples, 0.02%)</title><rect x="445.1" y="5621" width="0.3" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="448.15" y="5631.5" ></text>
</g>
<g >
<title>`core::Cache_O::search_cache(core::CacheRecord*&amp;) (1 samples, 0.02%)</title><rect x="293.6" y="5381" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="296.57" y="5391.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (4 samples, 0.09%)</title><rect x="164.2" y="4981" width="1.0" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="167.20" y="4991.5" ></text>
</g>
<g >
<title>`DominatesMergePoint(llvm::Value*, llvm::BasicBlock*, llvm::Smal (1 samples, 0.02%)</title><rect x="696.6" y="5605" width="0.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="699.57" y="5615.5" ></text>
</g>
<g >
<title>`__vfprintf (1 samples, 0.02%)</title><rect x="243.6" y="5461" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="246.65" y="5471.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4517" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="100.29" y="4527.5" ></text>
</g>
<g >
<title>`core::Vaslist::Vaslist(core::Vaslist const&amp;) (1 samples, 0.02%)</title><rect x="306.4" y="5413" width="0.2" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="309.37" y="5423.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.7" y="2309" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="64.75" y="2319.5" ></text>
</g>
<g >
<title>`llvm::TrackingMDRef::operator=(llvm::TrackingMDRef&amp;&amp;) (1 samples, 0.02%)</title><rect x="515.2" y="5621" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="518.19" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="565" width="1.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="59.52" y="575.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2325" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="65.79" y="2335.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="485.4" y="5525" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="488.40" y="5535.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (2 samples, 0.04%)</title><rect x="502.9" y="5461" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="505.91" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (2 samples, 0.04%)</title><rect x="70.1" y="2885" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="73.11" y="2895.5" ></text>
</g>
<g >
<title>`core::lisp_true() (1 samples, 0.02%)</title><rect x="92.1" y="4373" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="95.06" y="4383.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (2 samples, 0.04%)</title><rect x="24.6" y="3525" width="0.6" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="27.64" y="3535.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="62.0" y="613" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="65.01" y="623.5" ></text>
</g>
<g >
<title>`llvm::ModuleSummaryIndex::getOrInsertValuePtr(unsigned long lon (1 samples, 0.02%)</title><rect x="731.3" y="5685" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="734.33" y="5695.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="96.8" y="5157" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="99.77" y="5167.5" ></text>
</g>
<g >
<title>`llvm::Value::isSwiftError() const (1 samples, 0.02%)</title><rect x="515.7" y="5621" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="518.71" y="5631.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="57.6" y="1989" width="1.8" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="60.57" y="1999.5" ></text>
</g>
<g >
<title>`wrapped_DILocation_O__make_llvm__LLVMContext___________________ (1 samples, 0.02%)</title><rect x="304.0" y="5429" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="307.02" y="5439.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (5 samples, 0.11%)</title><rect x="128.7" y="4485" width="1.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="131.65" y="4495.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (6 samples, 0.13%)</title><rect x="50.0" y="3301" width="1.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="52.99" y="3311.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, gctools::smart_ptr&lt;llvmo::PointerType_ (1 samples, 0.02%)</title><rect x="337.5" y="5205" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="340.47" y="5215.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;llvm::DenseMapIterator&lt;llvm::Value*, llvm::Value (1 samples, 0.02%)</title><rect x="717.0" y="5653" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="719.95" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="63.1" y="2725" width="0.2" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="66.05" y="2735.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="137.5" y="4789" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="140.54" y="4799.5" ></text>
</g>
<g >
<title>`CCLASP-EVAL-WITH-ENV^CLASP-CLEAVIR^((T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="57.8" y="1221" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="60.83" y="1231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="135.2" y="4613" width="0.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="138.19" y="4623.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (7 samples, 0.16%)</title><rect x="553.9" y="5365" width="1.8" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="556.87" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (88 samples, 1.95%)</title><rect x="49.5" y="4373" width="23.0" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="52.46" y="4383.5" >`..</text>
</g>
<g >
<title>`llvm::GVN::AnalyzeLoadAvailability(llvm::LoadInst*, llvm::Small (1 samples, 0.02%)</title><rect x="562.0" y="5573" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="564.97" y="5583.5" ></text>
</g>
<g >
<title>`llvm::hash_value(llvm::APInt const&amp;) (1 samples, 0.02%)</title><rect x="468.4" y="5525" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="471.41" y="5535.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="177.3" y="4917" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="180.26" y="4927.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="66.2" y="2421" width="1.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="69.19" y="2431.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (7 samples, 0.16%)</title><rect x="442.5" y="5621" width="1.9" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="445.54" y="5631.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1557" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="65.01" y="1567.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="62.8" y="2485" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="65.79" y="2495.5" ></text>
</g>
<g >
<title>`FUNCTION-DATUM-P^LITERAL^FN^^ (7 samples, 0.16%)</title><rect x="422.7" y="5717" width="1.8" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="425.67" y="5727.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="949" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="62.13" y="959.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="63.8" y="2261" width="1.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="66.84" y="2271.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.5" y="2325" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="65.53" y="2335.5" ></text>
</g>
<g >
<title>`llvmo::llvm_sys__FunctionCreate(gctools::smart_ptr&lt;llvmo::Funct (1 samples, 0.02%)</title><rect x="337.2" y="5205" width="0.3" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="340.21" y="5215.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^FN^^ (22 samples, 0.49%)</title><rect x="320.0" y="5333" width="5.7" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="322.96" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="2533" width="0.2" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="65.27" y="2543.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate(llvm:: (1 samples, 0.02%)</title><rect x="572.4" y="5493" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="575.43" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="2229" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="65.53" y="2239.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PRECALC-VALUE-REFERENCE-AST T) (1 samples, 0.02%)</title><rect x="159.5" y="5141" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="162.49" y="5151.5" ></text>
</g>
<g >
<title>`core::cl__values(gctools::smart_ptr&lt;core::Vaslist&gt;) (1 samples, 0.02%)</title><rect x="121.9" y="5557" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="124.86" y="5567.5" ></text>
</g>
<g >
<title>`UNSAFE-FUNCALL1^CORE^FN^^ (1 samples, 0.02%)</title><rect x="41.6" y="4245" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="44.62" y="4255.5" ></text>
</g>
<g >
<title>`FIND-BUILT-IN-TAG^CORE^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2309" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="71.28" y="2319.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (25 samples, 0.55%)</title><rect x="16.3" y="3205" width="6.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="19.27" y="3215.5" ></text>
</g>
<g >
<title>`core::LambdaListHandler_O::createBindingsInScopeVaList(unsigned (1 samples, 0.02%)</title><rect x="378.0" y="5365" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="380.98" y="5375.5" ></text>
</g>
<g >
<title>`GC_clear_marks (1 samples, 0.02%)</title><rect x="191.9" y="5413" width="0.3" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="194.90" y="5423.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (8 samples, 0.18%)</title><rect x="55.5" y="1797" width="2.1" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="58.48" y="1807.5" ></text>
</g>
<g >
<title>`COMPILE-FILE^COMMON-LISP^FN^^ (2,764 samples, 61.22%)</title><rect x="10.0" y="5909" width="722.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="13.00" y="5919.5" >`COMPILE-FILE^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="67.5" y="1301" width="0.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="70.50" y="1311.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((RETURN-FROM-AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="128.7" y="4581" width="1.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="131.65" y="4591.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="437.8" y="5605" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="440.83" y="5615.5" ></text>
</g>
<g >
<title>`ALLOCATE-INSTANCE^COMMON-LISP^((STANDARD-CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="68.5" y="2389" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="71.54" y="2399.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="23.9" y="3733" width="0.2" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="26.85" y="3743.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="38.0" y="4773" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="40.96" y="4783.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="62.3" y="1877" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="65.27" y="1887.5" ></text>
</g>
<g >
<title>`HASH-EQL^CORE^FN^^ (1 samples, 0.02%)</title><rect x="12.6" y="4117" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="15.61" y="4127.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((CLASS))^METHOD^^ (1 samples, 0.02%)</title><rect x="733.2" y="5637" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="736.16" y="5647.5" ></text>
</g>
<g >
<title>`llvm::Value::getName() const (1 samples, 0.02%)</title><rect x="692.9" y="5669" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="695.91" y="5679.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.2" y="4373" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="138.19" y="4383.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((LEXICAL-VARIABLE-INFO T T T (1 samples, 0.02%)</title><rect x="62.0" y="2133" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="65.01" y="2143.5" ></text>
</g>
<g >
<title>`llvm::SSAUpdaterTraits&lt;llvm::SSAUpdater&gt;::FindPredecessorBlocks (1 samples, 0.02%)</title><rect x="598.0" y="5525" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="601.04" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="1909" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="65.79" y="1919.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="59.1" y="661" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="62.13" y="671.5" ></text>
</g>
<g >
<title>`llvmo::IRBuilder_O::CreateInBoundsGEP(llvm::Value*, gctools::sm (1 samples, 0.02%)</title><rect x="351.1" y="5173" width="0.2" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="354.06" y="5183.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="4821" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="100.29" y="4831.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="260.6" y="5429" width="0.3" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="263.64" y="5439.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (5 samples, 0.11%)</title><rect x="88.1" y="4421" width="1.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="91.14" y="4431.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (3 samples, 0.07%)</title><rect x="210.5" y="5445" width="0.7" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="213.46" y="5455.5" ></text>
</g>
<g >
<title>`core::core__integer_to_string(gctools::smart_ptr&lt;core::StrNs_O&gt; (1 samples, 0.02%)</title><rect x="161.6" y="4981" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="164.58" y="4991.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (2 samples, 0.04%)</title><rect x="155.0" y="5173" width="0.6" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="158.05" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4437" width="0.3" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="139.23" y="4447.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="148.5" y="5061" width="0.8" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="151.52" y="5071.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2213" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="65.79" y="2223.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="66.5" y="1877" width="1.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="69.45" y="1887.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2773" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="64.75" y="2783.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (4 samples, 0.09%)</title><rect x="396.5" y="5301" width="1.1" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="399.54" y="5311.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm (1 samples, 0.02%)</title><rect x="330.7" y="4853" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="333.68" y="4863.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (3 samples, 0.07%)</title><rect x="502.9" y="5493" width="0.8" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="505.91" y="5503.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4069" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="736.42" y="4079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.8" y="5365" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="180.79" y="5375.5" ></text>
</g>
<g >
<title>`szone_realloc (1 samples, 0.02%)</title><rect x="183.5" y="5557" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="186.54" y="5567.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="853" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="67.88" y="863.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="284.4" y="5589" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="287.42" y="5599.5" ></text>
</g>
<g >
<title>`void llvm::Function::setHungoffOperand&lt;0&gt;(llvm::Constant*) (1 samples, 0.02%)</title><rect x="367.0" y="5333" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="370.01" y="5343.5" ></text>
</g>
<g >
<title>`core::lambdaListHandler_createBindings(gctools::smart_ptr&lt;core: (1 samples, 0.02%)</title><rect x="414.6" y="5477" width="0.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="417.57" y="5487.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (1 samples, 0.02%)</title><rect x="60.4" y="2677" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="63.44" y="2687.5" ></text>
</g>
<g >
<title>`THROW-IF-MISMATCHED-ARGUMENTS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="340.3" y="5205" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="343.35" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (8 samples, 0.18%)</title><rect x="78.5" y="3973" width="2.1" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="81.47" y="3983.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (5 samples, 0.11%)</title><rect x="193.7" y="5557" width="1.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="196.73" y="5567.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="1925" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="64.22" y="1935.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="127.6" y="5509" width="0.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="130.61" y="5519.5" ></text>
</g>
<g >
<title>0x10d596094 (16 samples, 0.35%)</title><rect x="73.5" y="4629" width="4.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="76.51" y="4639.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="421.9" y="5669" width="0.3" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="424.89" y="5679.5" ></text>
</g>
<g >
<title>`%INTRINSIC-CALL^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="409.3" y="5461" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="412.34" y="5471.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (2 samples, 0.04%)</title><rect x="573.5" y="5493" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="576.47" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (6 samples, 0.13%)</title><rect x="12.4" y="4949" width="1.5" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="15.35" y="4959.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'CLEAVIR-PRIMOP:M (89 samples, 1.97%)</title><rect x="49.5" y="4869" width="23.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="52.46" y="4879.5" >`..</text>
</g>
<g >
<title>`COMPILER-TIMER-ELAPSED^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="183.5" y="5637" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="186.54" y="5647.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="97.0" y="5045" width="0.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="100.03" y="5055.5" ></text>
</g>
<g >
<title>`SORT-APPLICABLE-METHODS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="107.0" y="5573" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="109.96" y="5583.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="70.6" y="1749" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="73.63" y="1759.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5333" width="0.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="736.42" y="5343.5" ></text>
</g>
<g >
<title>`GC_mark_from (2 samples, 0.04%)</title><rect x="373.8" y="5189" width="0.5" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="376.80" y="5199.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (8 samples, 0.18%)</title><rect x="39.0" y="4405" width="2.1" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="42.01" y="4415.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="16.8" y="2501" width="0.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="19.80" y="2511.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIntPtrType(llvm::Type*) const (1 samples, 0.02%)</title><rect x="652.9" y="5557" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="655.92" y="5567.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (3 samples, 0.07%)</title><rect x="192.2" y="5413" width="0.7" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="195.16" y="5423.5" ></text>
</g>
<g >
<title>`MAKE-PRECALC-VALUE-INSTRUCTION^CLASP-CLEAVIR-HIR^FN^^ (1 samples, 0.02%)</title><rect x="131.0" y="4565" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="134.01" y="4575.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (25 samples, 0.55%)</title><rect x="16.3" y="3013" width="6.5" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="19.27" y="3023.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromOperator(llvm::Operator const*, llvm::Known (1 samples, 0.02%)</title><rect x="675.1" y="5541" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="678.14" y="5551.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="12.1" y="4549" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="15.09" y="4559.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="53.6" y="2549" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="56.65" y="2559.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (2 samples, 0.04%)</title><rect x="369.9" y="5285" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="372.88" y="5295.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4533" width="0.3" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="736.42" y="4543.5" ></text>
</g>
<g >
<title>`free_small (1 samples, 0.02%)</title><rect x="533.7" y="5605" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="536.75" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (10 samples, 0.22%)</title><rect x="65.4" y="2965" width="2.6" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="68.41" y="2975.5" ></text>
</g>
<g >
<title>`boost::basic_format&lt;char, std::__1::char_traits&lt;char&gt;, std::__1 (1 samples, 0.02%)</title><rect x="376.7" y="5349" width="0.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="379.68" y="5359.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="57.6" y="1397" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="60.57" y="1407.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="476.0" y="5477" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="478.99" y="5487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="138.3" y="4421" width="0.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="141.32" y="4431.5" ></text>
</g>
<g >
<title>`PROCESS-REQUIRED^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2869" width="3.4" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="57.17" y="2879.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="57.6" y="1317" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="60.57" y="1327.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::keyTest(gctools::smart_ptr&lt;core::T_O&gt;, gct (1 samples, 0.02%)</title><rect x="228.8" y="5557" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="231.75" y="5567.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::apint_match::match&lt;llvm::Value const&gt;( (1 samples, 0.02%)</title><rect x="641.9" y="5541" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="644.95" y="5551.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1045" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="20.58" y="1055.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (10 samples, 0.22%)</title><rect x="78.0" y="4693" width="2.6" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="80.95" y="4703.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="2837" width="2.6" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="68.41" y="2847.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::InstSimplifier::runOnFunction(llvm::Func (13 samples, 0.29%)</title><rect x="594.4" y="5669" width="3.4" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="597.38" y="5679.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="138.8" y="4005" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="141.85" y="4015.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.5" y="1429" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="65.53" y="1439.5" ></text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::isFnAttrDi (1 samples, 0.02%)</title><rect x="530.3" y="5541" width="0.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="533.35" y="5551.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="350.8" y="5221" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="353.80" y="5231.5" ></text>
</g>
<g >
<title>`LITERAL-NODE-SIDE-EFFECT-NAME^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="422.2" y="5749" width="0.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="425.15" y="5759.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (4 samples, 0.09%)</title><rect x="55.5" y="277" width="1.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="58.48" y="287.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4485" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="139.23" y="4495.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm::Mem (1 samples, 0.02%)</title><rect x="530.6" y="5605" width="0.3" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="533.61" y="5615.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="23.9" y="3637" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="26.85" y="3647.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="191.6" y="5509" width="0.3" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="194.64" y="5519.5" ></text>
</g>
<g >
<title>`CCLASP-COMPILE-IN-ENV^CLASP-CLEAVIR^FN^^ (4 samples, 0.09%)</title><rect x="58.3" y="1141" width="1.1" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="61.35" y="1151.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.6" y="5077" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="100.55" y="5087.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="505.8" y="5493" width="0.2" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="508.78" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4037" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="139.23" y="4047.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (10 samples, 0.22%)</title><rect x="223.5" y="5557" width="2.6" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="226.52" y="5567.5" ></text>
</g>
<g >
<title>`boost::basic_format&lt;char, std::__1::char_traits&lt;char&gt;, std::__1 (2 samples, 0.04%)</title><rect x="340.9" y="5189" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="343.87" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (4 samples, 0.09%)</title><rect x="55.5" y="997" width="1.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="58.48" y="1007.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="473.1" y="5573" width="0.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="476.11" y="5583.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="14.2" y="3797" width="1.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="17.18" y="3807.5" ></text>
</g>
<g >
<title>`OPTIMIZED-ASSIGNMENT-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="157.9" y="5333" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="160.92" y="5343.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="395.2" y="5173" width="0.3" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="398.23" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.5" y="4357" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="134.53" y="4367.5" ></text>
</g>
<g >
<title>`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;llvm::Consta (1 samples, 0.02%)</title><rect x="588.4" y="5653" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="591.37" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (36 samples, 0.80%)</title><rect x="14.2" y="4677" width="9.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="17.18" y="4687.5" ></text>
</g>
<g >
<title>`ThreadCmpOverSelect(llvm::CmpInst::Predicate, llvm::Value*, llv (3 samples, 0.07%)</title><rect x="651.4" y="5589" width="0.7" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="654.36" y="5599.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="523.0" y="5445" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="526.03" y="5455.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="595.7" y="5477" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="598.69" y="5487.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getIntPtrType(llvm::Type*) const (1 samples, 0.02%)</title><rect x="528.8" y="5477" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="531.78" y="5487.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="645" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="65.53" y="655.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="334.3" y="4997" width="0.3" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="337.34" y="5007.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::getModRefBehavior(llvm::ImmutableCallSite) (1 samples, 0.02%)</title><rect x="530.3" y="5573" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="533.35" y="5583.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="63.3" y="2581" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="66.32" y="2591.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="310.3" y="5429" width="0.5" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="313.29" y="5439.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="127.1" y="5317" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="130.09" y="5327.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="1221" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="60.57" y="1231.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="399.4" y="5397" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="402.41" y="5407.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="69.6" y="2293" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="72.59" y="2303.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (8 samples, 0.18%)</title><rect x="63.3" y="2741" width="2.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="66.32" y="2751.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="319.2" y="5333" width="0.8" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="322.18" y="5343.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::Value_O&gt; gctools::GCObjectAppropriate (1 samples, 0.02%)</title><rect x="400.5" y="5349" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="403.46" y="5359.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm (2 samples, 0.04%)</title><rect x="719.8" y="5589" width="0.6" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="722.83" y="5599.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="322.6" y="5237" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="325.58" y="5247.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.02%)</title><rect x="138.3" y="4341" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="141.32" y="4351.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="337.7" y="5189" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="340.73" y="5199.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="65.4" y="2277" width="0.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="68.41" y="2287.5" ></text>
</g>
<g >
<title>`__v2printf (1 samples, 0.02%)</title><rect x="96.8" y="5029" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="99.77" y="5039.5" ></text>
</g>
<g >
<title>`llvm::Constant::getAllOnesValue(llvm::Type*) (1 samples, 0.02%)</title><rect x="449.9" y="5589" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="452.85" y="5599.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.02%)</title><rect x="280.0" y="5541" width="0.2" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="282.98" y="5551.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.3" y="4325" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="100.29" y="4335.5" ></text>
</g>
<g >
<title>`wrapped_contagen_mul_Number_spNumber_sp (9 samples, 0.20%)</title><rect x="737.1" y="5733" width="2.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="740.08" y="5743.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (4 samples, 0.09%)</title><rect x="201.0" y="5477" width="1.1" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="204.05" y="5487.5" ></text>
</g>
<g >
<title>`UNIVERSAL-ERROR-HANDLER^CORE^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5637" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="736.42" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="2309" width="0.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="65.53" y="2319.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.6" y="1077" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="20.58" y="1087.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="65.7" y="1861" width="0.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="68.67" y="1871.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (4 samples, 0.09%)</title><rect x="12.4" y="4485" width="1.0" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="15.35" y="4495.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (6 samples, 0.13%)</title><rect x="107.5" y="5605" width="1.6" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="110.48" y="5615.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="53.1" y="2949" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="56.12" y="2959.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((VECTOR-LENGTH-INST (1 samples, 0.02%)</title><rect x="356.0" y="5301" width="0.3" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="359.03" y="5311.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="16.5" y="2277" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="19.53" y="2287.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="56.5" y="1573" width="1.1" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="59.52" y="1583.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm:: (17 samples, 0.38%)</title><rect x="659.2" y="5557" width="4.4" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="662.20" y="5567.5" ></text>
</g>
<g >
<title>`boost::basic_format&lt;char, std::__1::char_traits&lt;char&gt;, std::__1 (1 samples, 0.02%)</title><rect x="340.9" y="5157" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="343.87" y="5167.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_combine_recursive_helper::combine(u (1 samples, 0.02%)</title><rect x="467.9" y="5509" width="0.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="470.89" y="5519.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="390.3" y="5381" width="0.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="393.27" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4133" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="136.36" y="4143.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="137.8" y="4661" width="0.3" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="140.80" y="4671.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (2 samples, 0.04%)</title><rect x="155.0" y="5141" width="0.6" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="158.05" y="5151.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="334.1" y="4997" width="0.2" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="337.08" y="5007.5" ></text>
</g>
<g >
<title>0x10d596094 (36 samples, 0.80%)</title><rect x="14.2" y="4629" width="9.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="17.18" y="4639.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="56.5" y="1317" width="1.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="59.52" y="1327.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (28 samples, 0.62%)</title><rect x="38.0" y="4821" width="7.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="40.96" y="4831.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4373" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="736.42" y="4383.5" ></text>
</g>
<g >
<title>`OPTIMIZED-FDEFINITION-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="175.2" y="5365" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="178.17" y="5375.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::GVN::Expression, unsign (1 samples, 0.02%)</title><rect x="578.2" y="5573" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="581.18" y="5583.5" ></text>
</g>
<g >
<title>`processGlobal(llvm::GlobalValue&amp;, llvm::TargetLibraryInfo*, llv (2 samples, 0.04%)</title><rect x="592.0" y="5669" width="0.6" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="595.03" y="5679.5" ></text>
</g>
<g >
<title>`llvm::SelectionDAG::Combine(llvm::CombineLevel, llvm::AAResults (1 samples, 0.02%)</title><rect x="57.8" y="821" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="60.83" y="831.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="78.2" y="4453" width="2.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="81.21" y="4463.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="53.1" y="3301" width="1.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="56.12" y="3311.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="293.0" y="5397" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="296.04" y="5407.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="168.9" y="4885" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="171.90" y="4895.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="68.0" y="2533" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="71.02" y="2543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4469" width="0.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="141.85" y="4479.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.1" y="2085" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="20.06" y="2095.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5365" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="180.26" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (5 samples, 0.11%)</title><rect x="14.2" y="3589" width="1.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="17.18" y="3599.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="447.0" y="5445" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="449.98" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4213" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="139.23" y="4223.5" ></text>
</g>
<g >
<title>`llvm::ReplaceableMetadataImpl::getIfExists(llvm::Metadata&amp;) (1 samples, 0.02%)</title><rect x="720.4" y="5589" width="0.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="723.35" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="11.3" y="5509" width="1.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="14.31" y="5519.5" ></text>
</g>
<g >
<title>`_platform_memcmp (2 samples, 0.04%)</title><rect x="484.9" y="5525" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="487.87" y="5535.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (8 samples, 0.18%)</title><rect x="41.1" y="4373" width="2.1" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="44.10" y="4383.5" ></text>
</g>
<g >
<title>`APPEND^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="87.1" y="4485" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="90.10" y="4495.5" ></text>
</g>
<g >
<title>`CALCULATE-DTREE^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="735.8" y="5461" width="1.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="738.77" y="5471.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.02%)</title><rect x="96.2" y="4677" width="0.3" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="99.25" y="4687.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="349.0" y="5205" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="351.97" y="5215.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="16.0" y="3717" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="19.01" y="3727.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.02%)</title><rect x="552.8" y="5317" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="555.83" y="5327.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4661" width="9.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="17.18" y="4671.5" ></text>
</g>
<g >
<title>`IRC-BEGIN-BLOCK^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="286.2" y="5509" width="0.8" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="289.25" y="5519.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="71.9" y="3797" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="74.94" y="3807.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="2517" width="1.8" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="60.57" y="2527.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="17.6" y="1525" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="20.58" y="1535.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (3 samples, 0.07%)</title><rect x="562.5" y="5509" width="0.8" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="565.50" y="5519.5" ></text>
</g>
<g >
<title>`llvm::isFreeCall(llvm::Value const*, llvm::TargetLibraryInfo co (2 samples, 0.04%)</title><rect x="522.0" y="5621" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="524.99" y="5631.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (20 samples, 0.44%)</title><rect x="81.3" y="4533" width="5.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="84.35" y="4543.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="60.2" y="2613" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="63.18" y="2623.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="165.5" y="5061" width="0.3" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="168.50" y="5071.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (7 samples, 0.16%)</title><rect x="223.8" y="5525" width="1.8" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="226.79" y="5535.5" ></text>
</g>
<g >
<title>`llvm::RecursivelyDeleteTriviallyDeadInstructions(llvm::Value*,  (1 samples, 0.02%)</title><rect x="695.5" y="5557" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="698.52" y="5567.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::SCEV const*, llvm::SmallVector&lt;llvm::Point (1 samples, 0.02%)</title><rect x="535.6" y="5605" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="538.58" y="5615.5" ></text>
</g>
<g >
<title>`core::core__integer_to_string(gctools::smart_ptr&lt;core::StrNs_O&gt; (1 samples, 0.02%)</title><rect x="139.4" y="5029" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="142.37" y="5039.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (2 samples, 0.04%)</title><rect x="493.8" y="5557" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="496.76" y="5567.5" ></text>
</g>
<g >
<title>`getAllocationDataForFunction(llvm::Function const*, AllocType,  (1 samples, 0.02%)</title><rect x="566.9" y="5445" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="569.94" y="5455.5" ></text>
</g>
<g >
<title>`llvm::FunctionPass::assignPassManager(llvm::PMStack&amp;, llvm::Pas (1 samples, 0.02%)</title><rect x="425.8" y="5653" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="428.81" y="5663.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (3 samples, 0.07%)</title><rect x="61.7" y="3173" width="0.8" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="64.75" y="3183.5" ></text>
</g>
<g >
<title>`void llvm::SmallVectorImpl&lt;llvm::BasicBlock*&gt;::append&lt;std::__1: (1 samples, 0.02%)</title><rect x="460.0" y="5589" width="0.3" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="463.05" y="5599.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::Value_O&gt; gctools::GCObjectAppropriate (1 samples, 0.02%)</title><rect x="362.0" y="5253" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="365.04" y="5263.5" ></text>
</g>
<g >
<title>`GC_mark_from (2 samples, 0.04%)</title><rect x="146.2" y="4869" width="0.5" height="15.0" fill="rgb(250,124,124)" rx="2" ry="2" />
<text  x="149.16" y="4879.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="3957" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="132.96" y="3967.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (7 samples, 0.16%)</title><rect x="12.4" y="5077" width="1.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="15.35" y="5087.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (1 samples, 0.02%)</title><rect x="653.4" y="5573" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="656.45" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-CODE^CLEAVIR-GENERATE-AST^((T T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="11.3" y="5333" width="1.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="14.31" y="5343.5" ></text>
</g>
<g >
<title>`SEGREGATE-LEXICALS^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (15 samples, 0.33%)</title><rect x="253.6" y="5605" width="3.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="256.58" y="5615.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::ConstantFolder, llvm::IRBuilderDefaultIns (1 samples, 0.02%)</title><rect x="328.8" y="5205" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="331.85" y="5215.5" ></text>
</g>
<g >
<title>`PERFORM-OUTCOME^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="58.3" y="1173" width="1.1" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="61.35" y="1183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4037" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="136.36" y="4047.5" ></text>
</g>
<g >
<title>`fread (1 samples, 0.02%)</title><rect x="421.4" y="5557" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="424.37" y="5567.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="358.4" y="5317" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="361.38" y="5327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="128.7" y="4565" width="1.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="131.65" y="4575.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="67.5" y="1637" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="70.50" y="1647.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="563.0" y="5445" width="0.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="566.02" y="5455.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="138.8" y="4069" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="141.85" y="4079.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SYMBOL-VALUE-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="151.9" y="5397" width="0.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="154.91" y="5407.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4613" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="139.23" y="4623.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SourcePosInfo_O&gt; gctools::GCObjectAppr (1 samples, 0.02%)</title><rect x="414.0" y="5461" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="417.05" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="59.4" y="3093" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="62.40" y="3103.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="385.8" y="5301" width="0.3" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="388.82" y="5311.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="65.1" y="2133" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="68.15" y="2143.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="97.3" y="4453" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="100.29" y="4463.5" ></text>
</g>
<g >
<title>`llvm::Value::getValueName() const (1 samples, 0.02%)</title><rect x="521.7" y="5557" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="524.73" y="5567.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="5301" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="100.29" y="5311.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (16 samples, 0.35%)</title><rect x="73.5" y="4757" width="4.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="76.51" y="4767.5" ></text>
</g>
<g >
<title>`MAKE-INSTANCE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="53.1" y="2821" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="56.12" y="2831.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.8" y="1941" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="65.79" y="1951.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (4 samples, 0.09%)</title><rect x="153.0" y="5109" width="1.0" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="155.96" y="5119.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (5 samples, 0.11%)</title><rect x="265.6" y="5557" width="1.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="268.60" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4517" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="138.71" y="4527.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.4" y="4437" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="137.40" y="4447.5" ></text>
</g>
<g >
<title>`GET-DILOCATION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="418.0" y="5509" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="420.97" y="5519.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="278.4" y="5493" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="281.41" y="5503.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (1 samples, 0.02%)</title><rect x="97.0" y="5141" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="100.03" y="5151.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="3797" width="0.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="131.91" y="3807.5" ></text>
</g>
<g >
<title>`DO-TRACK-LLVM-TIME^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="58.6" y="1029" width="0.5" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="61.61" y="1039.5" ></text>
</g>
<g >
<title>`llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&amp;) (2 samples, 0.04%)</title><rect x="590.5" y="5637" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="593.46" y="5647.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="155.3" y="5109" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="158.31" y="5119.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (16 samples, 0.35%)</title><rect x="73.5" y="4645" width="4.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="76.51" y="4655.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;std::__1::__value_type&lt;llvm::Function const*,  (1 samples, 0.02%)</title><rect x="700.8" y="5573" width="0.2" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="703.75" y="5583.5" ></text>
</g>
<g >
<title>`core::cl__find_package(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="96.5" y="4821" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="99.51" y="4831.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^ (1 samples, 0.02%)</title><rect x="62.5" y="693" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="65.53" y="703.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SimplifyCFGOpt::run(llvm::BasicBlock*) (1 samples, 0.02%)</title><rect x="586.3" y="5573" width="0.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="589.28" y="5583.5" ></text>
</g>
<g >
<title>`GC_allocobj (4 samples, 0.09%)</title><rect x="191.9" y="5461" width="1.0" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="194.90" y="5471.5" ></text>
</g>
<g >
<title>`IRC-GEP-VARIABLE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="351.1" y="5253" width="0.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="354.06" y="5263.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="493.2" y="5461" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="496.24" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="3941" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="136.36" y="3951.5" ></text>
</g>
<g >
<title>`GC_mark_local (1 samples, 0.02%)</title><rect x="203.1" y="5333" width="0.3" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="206.14" y="5343.5" ></text>
</g>
<g >
<title>`SPECIALIZE^CLEAVIR-HIR-TO-MIR^((FETCH-INSTRUCTION CLASP T T))^M (13 samples, 0.29%)</title><rect x="186.7" y="5589" width="3.4" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="189.67" y="5599.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="709" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="61.09" y="719.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="459.8" y="5525" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="462.79" y="5535.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="322.6" y="5205" width="0.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="325.58" y="5215.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="420.6" y="5525" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="423.58" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5077" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="130.35" y="5087.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (7 samples, 0.16%)</title><rect x="493.2" y="5605" width="1.9" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="496.24" y="5615.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="308.2" y="5413" width="1.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="311.20" y="5423.5" ></text>
</g>
<g >
<title>`GC_mark_from (127 samples, 2.81%)</title><rect x="751.2" y="5573" width="33.2" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="754.19" y="5583.5" >`G..</text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::ConstantExpr*, llv (1 samples, 0.02%)</title><rect x="610.6" y="5525" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="613.58" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4549" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="141.32" y="4559.5" ></text>
</g>
<g >
<title>`COMPILE-TEST^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5477" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="736.42" y="5487.5" ></text>
</g>
<g >
<title>`llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout con (1 samples, 0.02%)</title><rect x="637.2" y="5557" width="0.3" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="640.24" y="5567.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;llvm::Function*, (anonymous namespace)::CVPLat (1 samples, 0.02%)</title><rect x="705.5" y="5653" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="708.46" y="5663.5" ></text>
</g>
<g >
<title>`MAYBE-GEN-PRIMITIVE-TYPE-CHECK^CC-HIR-TO-MIR^FN^^ (3 samples, 0.07%)</title><rect x="258.3" y="5541" width="0.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="261.28" y="5551.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="128.7" y="4373" width="1.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="131.65" y="4383.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="693" width="0.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="61.09" y="703.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="625.5" y="5509" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="628.48" y="5519.5" ></text>
</g>
<g >
<title>`getAllocationDataForFunction(llvm::Function const*, AllocType,  (1 samples, 0.02%)</title><rect x="660.8" y="5477" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="663.76" y="5487.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (25 samples, 0.55%)</title><rect x="38.2" y="4805" width="6.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="41.23" y="4815.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="68.0" y="2565" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="71.02" y="2575.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::MaxMin_match&lt;llvm::ICmpInst, llvm::Pat (3 samples, 0.07%)</title><rect x="621.3" y="5621" width="0.8" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="624.30" y="5631.5" ></text>
</g>
<g >
<title>`std::__1::pair&lt;std::__1::__tree_iterator&lt;clang::TypedefNameDecl (1 samples, 0.02%)</title><rect x="587.6" y="5637" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="590.59" y="5647.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="624.2" y="5541" width="0.2" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="627.17" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (91 samples, 2.02%)</title><rect x="12.4" y="5221" width="23.7" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="15.35" y="5231.5" >`..</text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="188.8" y="5541" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="191.76" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="3125" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="62.40" y="3135.5" ></text>
</g>
<g >
<title>`IRC-SET-INSERT-POINT-BASIC-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="397.6" y="5365" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="400.58" y="5375.5" ></text>
</g>
<g >
<title>`REINITIALIZE-INSTANCE^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="19.1" y="1973" width="0.6" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="22.15" y="1983.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="552.6" y="5237" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="555.56" y="5247.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="55.5" y="1013" width="1.0" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="58.48" y="1023.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="597" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="61.35" y="607.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="71.4" y="3397" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="74.42" y="3407.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="138.1" y="4485" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="141.06" y="4495.5" ></text>
</g>
<g >
<title>`getAllocationDataForFunction(llvm::Function const*, AllocType,  (1 samples, 0.02%)</title><rect x="560.1" y="5429" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="563.14" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="96.2" y="5013" width="0.6" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="99.25" y="5023.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="67.2" y="1829" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="70.24" y="1839.5" ></text>
</g>
<g >
<title>`GC_acquire_mark_lock (1 samples, 0.02%)</title><rect x="281.5" y="5525" width="0.3" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="284.54" y="5535.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.02%)</title><rect x="599.9" y="5637" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="602.87" y="5647.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4693" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="137.66" y="4703.5" ></text>
</g>
<g >
<title>`core::VariadicMethoid&lt;0, void (llvmo::IRBuilderBase_O::*)(gctoo (1 samples, 0.02%)</title><rect x="318.9" y="5253" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="321.92" y="5263.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="70.6" y="2517" width="0.3" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="73.63" y="2527.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="77.7" y="4885" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="80.69" y="4895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.3" y="4613" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="141.32" y="4623.5" ></text>
</g>
<g >
<title>`llvmo::APInt_O::makeAPIntWidth(gctools::smart_ptr&lt;core::Integer (1 samples, 0.02%)</title><rect x="295.1" y="5381" width="0.3" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="298.13" y="5391.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="373" width="1.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="59.52" y="383.5" ></text>
</g>
<g >
<title>`JIT-CONSTANT-UI64^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="295.1" y="5413" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="298.13" y="5423.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="53.6" y="2741" width="0.3" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="56.65" y="2751.5" ></text>
</g>
<g >
<title>`sprintf (1 samples, 0.02%)</title><rect x="124.5" y="5381" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="127.47" y="5391.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="53.1" y="2869" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="56.12" y="2879.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (1 samples, 0.02%)</title><rect x="171.0" y="4965" width="0.3" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="173.99" y="4975.5" ></text>
</g>
<g >
<title>`REMOVE^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="190.1" y="5461" width="0.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="193.07" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4341" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="141.85" y="4351.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (1 samples, 0.02%)</title><rect x="197.4" y="5541" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="200.39" y="5551.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="157.9" y="5317" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="160.92" y="5327.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="67.2" y="1717" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="70.24" y="1727.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="69" width="1.1" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="59.52" y="79.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="1925" width="0.3" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="65.53" y="1935.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;std::__1::unique_ptr&lt;llvm::AAResults::Con (1 samples, 0.02%)</title><rect x="455.3" y="5637" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="458.34" y="5647.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="53.4" y="2693" width="0.2" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="56.38" y="2703.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="634.9" y="5573" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="637.89" y="5583.5" ></text>
</g>
<g >
<title>`llvm::orc::IRTransformLayer&lt;llvm::orc::IRCompileLayer&lt;llvm::orc (2 samples, 0.04%)</title><rect x="58.6" y="933" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="61.61" y="943.5" ></text>
</g>
<g >
<title>`OPTIMIZED-SPECIAL-VARIABLE-INFO-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="24.4" y="3845" width="0.2" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="27.37" y="3855.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4581" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="139.76" y="4591.5" ></text>
</g>
<g >
<title>`llvm::SimplifyCall(llvm::ImmutableCallSite, llvm::SimplifyQuery (1 samples, 0.02%)</title><rect x="505.8" y="5477" width="0.2" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="508.78" y="5487.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::retrack(void*, llvm::Metadata&amp;, void*) (1 samples, 0.02%)</title><rect x="480.4" y="5605" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="483.43" y="5615.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1061" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="65.27" y="1071.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4805" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="136.62" y="4815.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2517" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="63.18" y="2527.5" ></text>
</g>
<g >
<title>`VARIABLE-TYPE^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="42.9" y="4261" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="45.93" y="4271.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="389" width="1.0" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="58.48" y="399.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="538.2" y="5589" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="541.19" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="55.5" y="597" width="1.0" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="58.48" y="607.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="57.6" y="1701" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="60.57" y="1711.5" ></text>
</g>
<g >
<title>`COMPUTE-LANDING-PAD^CLASP-CLEAVIR^FN^^ (14 samples, 0.31%)</title><rect x="395.0" y="5413" width="3.6" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="397.97" y="5423.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::getHash() const (1 samples, 0.02%)</title><rect x="551.8" y="5253" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="554.78" y="5263.5" ></text>
</g>
<g >
<title>`GC_wait_marker (2 samples, 0.04%)</title><rect x="1189.5" y="6341" width="0.5" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="1192.48" y="6351.5" ></text>
</g>
<g >
<title>`EraseTerminatorInstAndDCECond(llvm::TerminatorInst*) (1 samples, 0.02%)</title><rect x="695.5" y="5573" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="698.52" y="5583.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="329.4" y="5093" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="332.37" y="5103.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Value const*&gt;::insert(llvm::Value c (1 samples, 0.02%)</title><rect x="509.2" y="5573" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="512.18" y="5583.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="192.9" y="5525" width="0.3" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="195.95" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="17.6" y="1125" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="20.58" y="1135.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="464.5" y="5589" width="0.3" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="467.49" y="5599.5" ></text>
</g>
<g >
<title>`llvmo::DILocation_O::make(llvm::LLVMContext&amp;, unsigned int, uns (1 samples, 0.02%)</title><rect x="288.9" y="5413" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="291.86" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4469" width="9.4" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="17.18" y="4479.5" ></text>
</g>
<g >
<title>`llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::calculate(llvm: (2 samples, 0.04%)</title><rect x="601.7" y="5637" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="604.70" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="63.1" y="2693" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="66.05" y="2703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (20 samples, 0.44%)</title><rect x="152.2" y="5365" width="5.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="155.17" y="5375.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (16 samples, 0.35%)</title><rect x="744.7" y="5637" width="4.1" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text  x="747.66" y="5647.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="21.2" y="2021" width="0.6" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="24.24" y="2031.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.7" y="4277" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="138.71" y="4287.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="965" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="65.53" y="975.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (83 samples, 1.84%)</title><rect x="49.7" y="3925" width="21.7" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="52.73" y="3935.5" >`..</text>
</g>
<g >
<title>`STD-CLASS-ACCESSORS.READER.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="115.6" y="5573" width="0.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="118.59" y="5583.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="64.4" y="1205" width="0.5" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="67.36" y="1215.5" ></text>
</g>
<g >
<title>`wrapped_get_llvm__StructType_llvm__ArrayRef_llvm__Constant__ (1 samples, 0.02%)</title><rect x="420.3" y="5573" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="423.32" y="5583.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1541" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="65.27" y="1551.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="149.6" y="5029" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="152.56" y="5039.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (1 samples, 0.02%)</title><rect x="145.1" y="4885" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="148.12" y="4895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.8" y="4677" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="141.85" y="4687.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5413" width="0.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="736.42" y="5423.5" ></text>
</g>
<g >
<title>`llvm::isIdentifiedObject(llvm::Value const*) (1 samples, 0.02%)</title><rect x="561.2" y="5509" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="564.19" y="5519.5" ></text>
</g>
<g >
<title>`llvm::PMTopLevelManager::findAnalysisPass(void const*) (1 samples, 0.02%)</title><rect x="599.6" y="5621" width="0.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="602.61" y="5631.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignment(llvm::Type*, bool) const (1 samples, 0.02%)</title><rect x="661.8" y="5429" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="664.81" y="5439.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="129.2" y="3493" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="132.18" y="3503.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="67.8" y="1205" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="70.76" y="1215.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="696.8" y="5541" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="699.83" y="5551.5" ></text>
</g>
<g >
<title>`llvm::GetUnderlyingObject(llvm::Value*, llvm::DataLayout const&amp; (1 samples, 0.02%)</title><rect x="493.2" y="5525" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="496.24" y="5535.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (11 samples, 0.24%)</title><rect x="62.5" y="3237" width="2.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="65.53" y="3247.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((FUNCALL-INSTRUCTIO (1 samples, 0.02%)</title><rect x="333.6" y="5125" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="336.55" y="5135.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="136.8" y="3989" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="139.76" y="3999.5" ></text>
</g>
<g >
<title>`isBlockInLCSSAForm(llvm::Loop const&amp;, llvm::BasicBlock const&amp;,  (1 samples, 0.02%)</title><rect x="684.3" y="5637" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="687.29" y="5647.5" ></text>
</g>
<g >
<title>`OPTIMIZED-EQ-INSTRUCTION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="144.9" y="5285" width="0.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="147.86" y="5295.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="614.0" y="5477" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="616.98" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="2437" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="73.63" y="2447.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1253" width="1.1" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="59.52" y="1263.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="67.5" y="1845" width="0.5" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="70.50" y="1855.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::PointerType_O&gt; gctools::GCObjectAppro (1 samples, 0.02%)</title><rect x="344.8" y="5125" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="347.79" y="5135.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (1 samples, 0.02%)</title><rect x="528.5" y="5509" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="531.52" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.4" y="2901" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="56.38" y="2911.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SimplifyCFGOpt::SimplifyCondBranch(llvm: (1 samples, 0.02%)</title><rect x="586.3" y="5557" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="589.28" y="5567.5" ></text>
</g>
<g >
<title>`core::StackFrameDynamicScopeManager::new_binding(core::Argument (1 samples, 0.02%)</title><rect x="414.6" y="5461" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="417.57" y="5471.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (57 samples, 1.26%)</title><rect x="81.3" y="4949" width="14.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="84.35" y="4959.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4805" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="137.14" y="4815.5" ></text>
</g>
<g >
<title>`PROCESS-REST^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="14.4" y="3029" width="0.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="17.44" y="3039.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4197" width="9.4" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="17.18" y="4207.5" ></text>
</g>
<g >
<title>`THE-VALUES-COMPONENTS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="67.8" y="1381" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="70.76" y="1391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="135.2" y="4581" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="138.19" y="4591.5" ></text>
</g>
<g >
<title>`GLOBAL-ENVIRONMENT^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="565" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="68.93" y="575.5" ></text>
</g>
<g >
<title>`INSERT-INSTRUCTION-BETWEEN^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="241.3" y="5557" width="0.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="244.30" y="5567.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (2 samples, 0.04%)</title><rect x="624.7" y="5493" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="627.70" y="5503.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="74.6" y="4117" width="2.6" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="77.55" y="4127.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="329.1" y="5109" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="332.11" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (12 samples, 0.27%)</title><rect x="148.3" y="5317" width="3.1" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="151.25" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (8 samples, 0.18%)</title><rect x="78.5" y="3925" width="2.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="81.47" y="3935.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::findAlignmentLowerBound(llvm::AlignTypeEnum,  (1 samples, 0.02%)</title><rect x="575.8" y="5541" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="578.83" y="5551.5" ></text>
</g>
<g >
<title>`CALCULATE-DTREE^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5509" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="736.42" y="5519.5" ></text>
</g>
<g >
<title>`BUILD-FUNCTION-DAG^CLEAVIR-HIR-TRANSFORMATIONS^FN^^ (14 samples, 0.31%)</title><rect x="229.8" y="5605" width="3.7" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="232.80" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="97.6" y="4869" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="100.55" y="4879.5" ></text>
</g>
<g >
<title>`wrapped_cl__gensym_T_sp (2 samples, 0.04%)</title><rect x="44.8" y="4789" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="47.76" y="4799.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4341" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="132.96" y="4351.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="67.0" y="1605" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="69.97" y="1615.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((:AFTER) (INSTRUCTION))^METHOD (1 samples, 0.02%)</title><rect x="162.1" y="5045" width="0.3" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="165.11" y="5055.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="79.8" y="3461" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="82.78" y="3471.5" ></text>
</g>
<g >
<title>`LITERAL-NODE-CREATOR-P^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="10.8" y="5765" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="13.78" y="5775.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (10 samples, 0.22%)</title><rect x="167.9" y="5061" width="2.6" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="170.86" y="5071.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="597.0" y="5557" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="599.99" y="5567.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.02%)</title><rect x="19.9" y="1893" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="22.93" y="1903.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="626.5" y="5461" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="629.53" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="61.2" y="2069" width="0.3" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="64.22" y="2079.5" ></text>
</g>
<g >
<title>`GC_do_parallel_mark (2 samples, 0.04%)</title><rect x="374.6" y="5237" width="0.5" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="377.58" y="5247.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="138.1" y="4517" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="141.06" y="4527.5" ></text>
</g>
<g >
<title>`COMPILER-MACRO-FUNCTION^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="77.2" y="4117" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="80.17" y="4127.5" ></text>
</g>
<g >
<title>`GC_reclaim_block (8 samples, 0.18%)</title><rect x="746.7" y="5605" width="2.1" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="749.75" y="5615.5" ></text>
</g>
<g >
<title>`llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt;::dominates(llv (1 samples, 0.02%)</title><rect x="685.3" y="5637" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="688.33" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="78.7" y="3829" width="1.1" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="81.74" y="3839.5" ></text>
</g>
<g >
<title>`core::cl__find_package(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="24.9" y="3349" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="27.90" y="3359.5" ></text>
</g>
<g >
<title>`PROCESS-OPTIONALS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="58.3" y="677" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="61.35" y="687.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="135.4" y="4469" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="138.45" y="4479.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4069" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="137.14" y="4079.5" ></text>
</g>
<g >
<title>`GET-PRIMITIVES^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="355.0" y="5205" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="357.98" y="5215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="145.4" y="5141" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="148.38" y="5151.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="255.9" y="5525" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="258.93" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.0" y="4901" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="140.02" y="4911.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (91 samples, 2.02%)</title><rect x="12.4" y="5173" width="23.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="15.35" y="5183.5" >`..</text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCA (1 samples, 0.02%)</title><rect x="604.1" y="5637" width="0.2" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="607.05" y="5647.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="4789" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="100.29" y="4799.5" ></text>
</g>
<g >
<title>`MAKE-LITERAL-NODE-SIDE-EFFECT^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="335.9" y="5157" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="338.90" y="5167.5" ></text>
</g>
<g >
<title>`GC_alloc_large (1 samples, 0.02%)</title><rect x="238.4" y="5445" width="0.3" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="241.42" y="5455.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="308.2" y="5349" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="311.20" y="5359.5" ></text>
</g>
<g >
<title>`llvm::FPPassManager::runOnModule(llvm::Module&amp;) (1 samples, 0.02%)</title><rect x="734.7" y="5349" width="0.3" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="737.73" y="5359.5" ></text>
</g>
<g >
<title>`wrapped_get_llvm__LLVMContext_const_llvm__APInt_ (2 samples, 0.04%)</title><rect x="402.8" y="5429" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="405.81" y="5439.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getSimplePointerDependencyFrom(l (64 samples, 1.42%)</title><rect x="545.0" y="5541" width="16.7" height="15.0" fill="rgb(75,222,75)" rx="2" ry="2" />
<text  x="547.99" y="5551.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::BasicBlock*, std::__1::allocator (2 samples, 0.04%)</title><rect x="461.6" y="5605" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="464.61" y="5615.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="409.3" y="5445" width="0.3" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="412.34" y="5455.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="5301" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="100.55" y="5311.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.02%)</title><rect x="281.8" y="5589" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="284.81" y="5599.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="1397" width="0.2" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="67.88" y="1407.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (3 samples, 0.07%)</title><rect x="238.7" y="5381" width="0.8" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="241.68" y="5391.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.7" y="2213" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="64.75" y="2223.5" ></text>
</g>
<g >
<title>`VARIABLE-TYPE^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE LEXICAL-VA (1 samples, 0.02%)</title><rect x="42.9" y="4197" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="45.93" y="4207.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="67.0" y="1493" width="0.2" height="15.0" fill="rgb(215,73,73)" rx="2" ry="2" />
<text  x="69.97" y="1503.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="61.7" y="1813" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="64.75" y="1823.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (4 samples, 0.09%)</title><rect x="85.5" y="4501" width="1.1" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="88.53" y="4511.5" ></text>
</g>
<g >
<title>`llvm::PMDataManager::recordAvailableAnalysis(llvm::Pass*) (1 samples, 0.02%)</title><rect x="700.0" y="5685" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="702.97" y="5695.5" ></text>
</g>
<g >
<title>`core::core__load_no_package_set(gctools::smart_ptr&lt;core::T_O&gt;,  (217 samples, 4.81%)</title><rect x="732.4" y="5861" width="56.7" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="735.37" y="5871.5" >`core:..</text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="19.7" y="2053" width="0.2" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="22.67" y="2063.5" ></text>
</g>
<g >
<title>`std::__1::enable_if&lt;is_hashable_data&lt;unsigned int const&gt;::value (1 samples, 0.02%)</title><rect x="597.0" y="5509" width="0.3" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="599.99" y="5519.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="156.9" y="5253" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="159.88" y="5263.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="59.1" y="837" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="62.13" y="847.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4997" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="736.42" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (1 samples, 0.02%)</title><rect x="59.4" y="2837" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="62.40" y="2847.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1605" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="69.19" y="1615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.3" y="5109" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="130.35" y="5119.5" ></text>
</g>
<g >
<title>`INPUTS^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="209.1" y="5589" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="212.15" y="5599.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="354.2" y="5173" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="357.20" y="5183.5" ></text>
</g>
<g >
<title>`ENSURE-CLASS^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.2" y="5717" width="0.2" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="736.16" y="5727.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="594.9" y="5557" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="597.90" y="5567.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (4 samples, 0.09%)</title><rect x="164.2" y="4933" width="1.0" height="15.0" fill="rgb(254,128,128)" rx="2" ry="2" />
<text  x="167.20" y="4943.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (2 samples, 0.04%)</title><rect x="68.0" y="2693" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="71.02" y="2703.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="997" width="1.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="57.17" y="1007.5" ></text>
</g>
<g >
<title>`bool llvm::PatternMatch::BinOpPred_match&lt;llvm::PatternMatch::bi (1 samples, 0.02%)</title><rect x="494.8" y="5541" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="497.81" y="5551.5" ></text>
</g>
<g >
<title>`FUNCTION-TYPE^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="51.8" y="3381" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="54.82" y="3391.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (4 samples, 0.09%)</title><rect x="85.5" y="4469" width="1.1" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="88.53" y="4479.5" ></text>
</g>
<g >
<title>`llvm::CallSiteBase&lt;llvm::Function, llvm::BasicBlock, llvm::Valu (1 samples, 0.02%)</title><rect x="678.8" y="5605" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="681.80" y="5615.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="349.2" y="5253" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="352.23" y="5263.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.02%)</title><rect x="126.0" y="5589" width="0.3" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="129.04" y="5599.5" ></text>
</g>
<g >
<title>`bool llvm::CallInst::hasFnAttrImpl&lt;llvm::Attribute::AttrKind&gt;(l (1 samples, 0.02%)</title><rect x="681.4" y="5605" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="684.41" y="5615.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.02%)</title><rect x="437.0" y="5509" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="440.05" y="5519.5" ></text>
</g>
<g >
<title>`COMPILE-FUNCTION^CLEAVIR-AST-TO-HIR^((FUNCTION-AST))^METHOD^^ (43 samples, 0.95%)</title><rect x="128.4" y="5109" width="11.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="131.39" y="5119.5" ></text>
</g>
<g >
<title>`GC_mark_from (2 samples, 0.04%)</title><rect x="374.6" y="5189" width="0.5" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="377.58" y="5199.5" ></text>
</g>
<g >
<title>`core::HashTable_O::maphash(gctools::smart_ptr&lt;core::T_O&gt;) (7 samples, 0.16%)</title><rect x="17.8" y="2005" width="1.9" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="20.84" y="2015.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (1 samples, 0.02%)</title><rect x="69.1" y="2117" width="0.2" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="72.07" y="2127.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4213" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="137.14" y="4223.5" ></text>
</g>
<g >
<title>`llvm::CallGraph::CallGraph(llvm::Module&amp;) (6 samples, 0.13%)</title><rect x="592.6" y="5685" width="1.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="595.55" y="5695.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="127.1" y="5429" width="0.5" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="130.09" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (34 samples, 0.75%)</title><rect x="14.2" y="3877" width="8.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="17.18" y="3887.5" ></text>
</g>
<g >
<title>`__sfvwrite (1 samples, 0.02%)</title><rect x="243.6" y="5445" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="246.65" y="5455.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="338.0" y="5173" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="341.00" y="5183.5" ></text>
</g>
<g >
<title>`llvm::CallGraphWrapperPass::runOnModule(llvm::Module&amp;) (6 samples, 0.13%)</title><rect x="592.6" y="5701" width="1.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="595.55" y="5711.5" ></text>
</g>
<g >
<title>`llvm::GraphTraits&lt;llvm::BasicBlock*&gt;::child_end(llvm::BasicBloc (1 samples, 0.02%)</title><rect x="693.4" y="5621" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="696.43" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (42 samples, 0.93%)</title><rect x="128.4" y="5013" width="11.0" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="131.39" y="5023.5" ></text>
</g>
<g >
<title>`FUNCTION-TYPE^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="51.8" y="3397" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="54.82" y="3407.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (36 samples, 0.80%)</title><rect x="14.2" y="4613" width="9.4" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="17.18" y="4623.5" ></text>
</g>
<g >
<title>`PRIMITIVE-RETURN-TYPE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="409.6" y="5381" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="412.61" y="5391.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (2 samples, 0.04%)</title><rect x="505.0" y="5461" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="508.00" y="5471.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="39.8" y="4165" width="1.0" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="42.79" y="4175.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((SET-SYMBOL-VALUE-I (3 samples, 0.07%)</title><rect x="409.6" y="5477" width="0.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="412.61" y="5487.5" ></text>
</g>
<g >
<title>`FORCE-DISPATCHER^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="735.8" y="5509" width="1.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="738.77" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="97.3" y="5221" width="0.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="100.29" y="5231.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2181" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="64.22" y="2191.5" ></text>
</g>
<g >
<title>`core::CxxObject_O::~CxxObject_O() (1 samples, 0.02%)</title><rect x="327.5" y="5237" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="330.54" y="5247.5" ></text>
</g>
<g >
<title>`llvm::wouldInstructionBeTriviallyDead(llvm::Instruction*, llvm: (5 samples, 0.11%)</title><rect x="521.5" y="5637" width="1.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="524.46" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="2309" width="1.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="60.57" y="2319.5" ></text>
</g>
<g >
<title>`DO-LTV^LITERAL^FN^^ (1,569 samples, 34.75%)</title><rect x="11.3" y="5701" width="410.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="14.31" y="5711.5" >`DO-LTV^LITERAL^FN^^</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="3093" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="73.63" y="3103.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.5" y="853" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="65.53" y="863.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.02%)</title><rect x="229.3" y="5573" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="232.27" y="5583.5" ></text>
</g>
<g >
<title>`getValueFromCondition(llvm::Value*, llvm::Value*, bool) (2 samples, 0.04%)</title><rect x="447.8" y="5525" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="450.76" y="5535.5" ></text>
</g>
<g >
<title>`llvm::MemoryDependenceResults::getInvariantGroupPointerDependen (1 samples, 0.02%)</title><rect x="544.7" y="5541" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="547.72" y="5551.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (26 samples, 0.58%)</title><rect x="16.3" y="3653" width="6.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="19.27" y="3663.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="57.6" y="1685" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="60.57" y="1695.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="421.1" y="5605" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="424.11" y="5615.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_equal(core::HashGenerator&amp;, gctools:: (1 samples, 0.02%)</title><rect x="409.9" y="5365" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="412.87" y="5375.5" ></text>
</g>
<g >
<title>`OUT^CLASP-CLEAVIR^FN^^ (2 samples, 0.04%)</title><rect x="408.0" y="5461" width="0.6" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="411.04" y="5471.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.9" y="1253" width="0.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="67.88" y="1263.5" ></text>
</g>
<g >
<title>`llvm::Attribute::get(llvm::LLVMContext&amp;, llvm::StringRef, llvm: (1 samples, 0.02%)</title><rect x="420.6" y="5493" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="423.58" y="5503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.7" y="4677" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="137.66" y="4687.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="677" width="0.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="61.09" y="687.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (1 samples, 0.02%)</title><rect x="70.9" y="3077" width="0.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="73.89" y="3087.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.3" y="5365" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="100.29" y="5375.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="35.9" y="5077" width="0.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="38.87" y="5087.5" ></text>
</g>
<g >
<title>`UPDATE-INSTANCE-FOR-DIFFERENT-CLASS^COMMON-LISP^((STANDARD-OBJE (6 samples, 0.13%)</title><rect x="188.5" y="5557" width="1.6" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="191.50" y="5567.5" ></text>
</g>
<g >
<title>`FUDGE-VALUES-TYPE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="67.8" y="1365" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="70.76" y="1375.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="332.5" y="5061" width="0.3" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="335.51" y="5071.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (5 samples, 0.11%)</title><rect x="252.0" y="5509" width="1.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="255.01" y="5519.5" ></text>
</g>
<g >
<title>`CCLASP-EVAL^CLASP-CLEAVIR^FN^^ (2,981 samples, 66.02%)</title><rect x="10.0" y="5957" width="779.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="13.00" y="5967.5" >`CCLASP-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="291.5" y="5461" width="0.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="294.48" y="5471.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.02%)</title><rect x="153.7" y="4997" width="0.3" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="156.74" y="5007.5" ></text>
</g>
<g >
<title>`llvm::getConstantStringInfo(llvm::Value const*, llvm::StringRef (1 samples, 0.02%)</title><rect x="595.9" y="5509" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="598.95" y="5519.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(__gmp_expr&lt;__mpz_struct [1], __mpz_stru (2 samples, 0.04%)</title><rect x="737.9" y="5701" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="740.86" y="5711.5" ></text>
</g>
<g >
<title>`MAKE-RETURN-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="178.0" y="5621" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="181.05" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.0" y="997" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="65.01" y="1007.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (1 samples, 0.02%)</title><rect x="97.3" y="4549" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="100.29" y="4559.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="1349" width="0.2" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="67.88" y="1359.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="55.5" y="421" width="1.0" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="58.48" y="431.5" ></text>
</g>
<g >
<title>`SHARED-INITIALIZE^COMMON-LISP^((T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="110.9" y="5605" width="0.5" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="113.88" y="5615.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (4 samples, 0.09%)</title><rect x="286.2" y="5525" width="1.1" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="289.25" y="5535.5" ></text>
</g>
<g >
<title>`STORE-TMV^CLASP-CLEAVIR^FN^^ (13 samples, 0.29%)</title><rect x="391.3" y="5429" width="3.4" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="394.31" y="5439.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="347.9" y="5285" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="350.93" y="5295.5" ></text>
</g>
<g >
<title>`IRC-EXTRACT-VALUE^COMPILER^FN^^ (6 samples, 0.13%)</title><rect x="392.9" y="5397" width="1.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="395.88" y="5407.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (4 samples, 0.09%)</title><rect x="396.5" y="5253" width="1.1" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="399.54" y="5263.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (4 samples, 0.09%)</title><rect x="56.5" y="1621" width="1.1" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="59.52" y="1631.5" ></text>
</g>
<g >
<title>`IN^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="349.5" y="5285" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="352.50" y="5295.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="66.5" y="1493" width="0.2" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="69.45" y="1503.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="11.3" y="5413" width="1.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="14.31" y="5423.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="172.8" y="5333" width="0.8" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="175.82" y="5343.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="17.3" y="1717" width="0.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="20.32" y="1727.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (1 samples, 0.02%)</title><rect x="225.1" y="5461" width="0.3" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="228.09" y="5471.5" ></text>
</g>
<g >
<title>`COMPILE-TAG-CHECK^COMPILER^FN^^ (3 samples, 0.07%)</title><rect x="293.3" y="5429" width="0.8" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="296.30" y="5439.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="79.8" y="3669" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="82.78" y="3679.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.9" y="2901" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="56.91" y="2911.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (7 samples, 0.16%)</title><rect x="128.7" y="4677" width="1.8" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="131.65" y="4687.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="131.0" y="4501" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="134.01" y="4511.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.8" y="4725" width="0.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="134.79" y="4735.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.5" y="4485" width="0.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="134.53" y="4495.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::getModRefInfo(llvm::ImmutableCallSite, llv (1 samples, 0.02%)</title><rect x="560.1" y="5477" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="563.14" y="5487.5" ></text>
</g>
<g >
<title>`llvm::isAllocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo (1 samples, 0.02%)</title><rect x="518.6" y="5605" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="521.59" y="5615.5" ></text>
</g>
<g >
<title>`llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::Arra (1 samples, 0.02%)</title><rect x="505.0" y="5397" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="508.00" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="55.5" y="709" width="1.0" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="58.48" y="719.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="255.4" y="5573" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="258.41" y="5583.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (2 samples, 0.04%)</title><rect x="240.3" y="5573" width="0.5" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="243.25" y="5583.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1157" width="1.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="57.17" y="1167.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (8 samples, 0.18%)</title><rect x="63.3" y="3045" width="2.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="66.32" y="3055.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (3 samples, 0.07%)</title><rect x="50.8" y="2901" width="0.8" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="53.77" y="2911.5" ></text>
</g>
<g >
<title>`llvm::InstCombiner::visitBranchInst(llvm::BranchInst&amp;) (1 samples, 0.02%)</title><rect x="482.8" y="5621" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="485.78" y="5631.5" ></text>
</g>
<g >
<title>`core::HashTableEqual_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt; (1 samples, 0.02%)</title><rect x="365.7" y="5365" width="0.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="368.70" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL-BINDING^CLEAVIR-GENERATE-AST^((T T T T T))^METH (20 samples, 0.44%)</title><rect x="16.8" y="2517" width="5.2" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="19.80" y="2527.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.5" y="981" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="65.53" y="991.5" ></text>
</g>
<g >
<title>`llvm::APInt::sdiv_ov(llvm::APInt const&amp;, bool&amp;) const (1 samples, 0.02%)</title><rect x="466.1" y="5589" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="469.06" y="5599.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (36 samples, 0.80%)</title><rect x="270.6" y="5589" width="9.4" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="273.57" y="5599.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (2 samples, 0.04%)</title><rect x="43.7" y="4325" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="46.71" y="4335.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (233 samples, 5.16%)</title><rect x="36.4" y="5413" width="60.9" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="39.40" y="5423.5" >`COMBI..</text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="39.8" y="4245" width="1.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="42.79" y="4255.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (12 samples, 0.27%)</title><rect x="78.0" y="4917" width="3.1" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="80.95" y="4927.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1989" width="1.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="57.17" y="1999.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (2 samples, 0.04%)</title><rect x="502.9" y="5445" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="505.91" y="5455.5" ></text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE T (1 samples, 0.02%)</title><rect x="24.4" y="3957" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="27.37" y="3967.5" ></text>
</g>
<g >
<title>`core::Function_O::functionName() const (2 samples, 0.04%)</title><rect x="404.1" y="5429" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="407.12" y="5439.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCastsAndBarriers() const (1 samples, 0.02%)</title><rect x="528.0" y="5477" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="531.00" y="5487.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (2 samples, 0.04%)</title><rect x="66.5" y="1557" width="0.5" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="69.45" y="1567.5" ></text>
</g>
<g >
<title>0x10d596094 (4 samples, 0.09%)</title><rect x="56.5" y="1717" width="1.1" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="59.52" y="1727.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (520 samples, 11.52%)</title><rect x="285.5" y="5621" width="135.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="288.46" y="5631.5" >`LAYOUT-PROCEDURE..</text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass* (1 samples, 0.02%)</title><rect x="454.3" y="5589" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="457.30" y="5599.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (2 samples, 0.04%)</title><rect x="590.5" y="5589" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="593.46" y="5599.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DILocation*, llvm: (1 samples, 0.02%)</title><rect x="326.8" y="5189" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="329.76" y="5199.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="67.0" y="1541" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="69.97" y="1551.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="429.7" y="5525" width="0.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="432.73" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (54 samples, 1.20%)</title><rect x="159.5" y="5365" width="14.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="162.49" y="5375.5" ></text>
</g>
<g >
<title>`GC_allocobj (4 samples, 0.09%)</title><rect x="396.5" y="5285" width="1.1" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="399.54" y="5295.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (1 samples, 0.02%)</title><rect x="17.3" y="1669" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="20.32" y="1679.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="65.9" y="853" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="68.93" y="863.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (49 samples, 1.09%)</title><rect x="159.5" y="5317" width="12.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="162.49" y="5327.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="185.6" y="5525" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="188.63" y="5535.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="3925" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="139.23" y="3935.5" ></text>
</g>
<g >
<title>`FUNCTION-DYNAMIC-EXTENT^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^ (1 samples, 0.02%)</title><rect x="62.5" y="533" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="65.53" y="543.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (2 samples, 0.04%)</title><rect x="171.8" y="5269" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="174.78" y="5279.5" ></text>
</g>
<g >
<title>`llvm::BasicAAWrapperPass::runOnFunction(llvm::Function&amp;) (3 samples, 0.07%)</title><rect x="457.7" y="5669" width="0.8" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="460.69" y="5679.5" ></text>
</g>
<g >
<title>`core::SourcePosInfo_O::make(std::__1::basic_string&lt;char, std::_ (1 samples, 0.02%)</title><rect x="289.4" y="5493" width="0.2" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="292.38" y="5503.5" ></text>
</g>
<g >
<title>`llvm::ConstantRange::contains(llvm::ConstantRange const&amp;) const (1 samples, 0.02%)</title><rect x="654.5" y="5573" width="0.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="657.49" y="5583.5" ></text>
</g>
<g >
<title>`MAKE-HASH-TABLE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="273.2" y="5573" width="0.2" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="276.18" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4389" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="132.96" y="4399.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.02%)</title><rect x="548.6" y="5317" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="551.64" y="5327.5" ></text>
</g>
<g >
<title>`llvm::isDereferenceableAndAlignedPointer(llvm::Value const*, un (3 samples, 0.07%)</title><rect x="585.5" y="5573" width="0.8" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="588.50" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="485" width="1.1" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="59.52" y="495.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (10 samples, 0.22%)</title><rect x="140.4" y="5093" width="2.6" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="143.41" y="5103.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::aliasCheck(llvm::Value const*, unsigned lo (3 samples, 0.07%)</title><rect x="527.7" y="5525" width="0.8" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="530.74" y="5535.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (2 samples, 0.04%)</title><rect x="590.5" y="5573" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="593.46" y="5583.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="163.4" y="4965" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="166.41" y="4975.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="335.4" y="5125" width="0.2" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="338.38" y="5135.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (1 samples, 0.02%)</title><rect x="59.4" y="3285" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="62.40" y="3295.5" ></text>
</g>
<g >
<title>`SET-INSTRUCTION-SOURCE-POSITION^COMPILER^FN^^ (9 samples, 0.20%)</title><rect x="326.0" y="5301" width="2.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="328.97" y="5311.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="71.4" y="3365" width="0.3" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="74.42" y="3375.5" ></text>
</g>
<g >
<title>`LISTP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="134.4" y="4133" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="137.40" y="4143.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (511 samples, 11.32%)</title><rect x="285.5" y="5605" width="133.5" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="288.46" y="5615.5" >`DO-DBG-FUNCTION..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2117" width="1.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="60.57" y="2127.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (1 samples, 0.02%)</title><rect x="97.3" y="3077" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="100.29" y="3087.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="65.1" y="2101" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="68.15" y="2111.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="48.9" y="5109" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="51.94" y="5119.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="3909" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="139.23" y="3919.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="24.6" y="4213" width="1.1" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="27.64" y="4223.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (2 samples, 0.04%)</title><rect x="146.2" y="4885" width="0.5" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="149.16" y="4895.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="70.4" y="2629" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="73.37" y="2639.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;std::__1::pair&lt;unsigned  (1 samples, 0.02%)</title><rect x="579.0" y="5573" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="581.96" y="5583.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.8" y="4149" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="139.76" y="4159.5" ></text>
</g>
<g >
<title>`void llvm::SymbolTableListTraits&lt;llvm::Instruction&gt;::setSymTabO (3 samples, 0.07%)</title><rect x="719.6" y="5621" width="0.8" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="722.57" y="5631.5" ></text>
</g>
<g >
<title>`llvm::Twine::toStringRef(llvm::SmallVectorImpl&lt;char&gt;&amp;) const (1 samples, 0.02%)</title><rect x="361.0" y="5205" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="363.99" y="5215.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="382.2" y="5429" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="385.16" y="5439.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4453" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="736.42" y="4463.5" ></text>
</g>
<g >
<title>`MAKE-TEMP^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="139.6" y="5157" width="0.3" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="142.63" y="5167.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5637" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="713.94" y="5647.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.7" y="2677" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="64.75" y="2687.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (4 samples, 0.09%)</title><rect x="268.5" y="5509" width="1.0" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="271.48" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (4 samples, 0.09%)</title><rect x="56.5" y="1381" width="1.1" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="59.52" y="1391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.6" y="4789" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="136.62" y="4799.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="2565" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="64.22" y="2575.5" ></text>
</g>
<g >
<title>`PROCESS-REST^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="3221" width="0.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="73.11" y="3231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="138.1" y="4581" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="141.06" y="4591.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="96.0" y="4869" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="98.98" y="4879.5" ></text>
</g>
<g >
<title>0x10d596094 (5 samples, 0.11%)</title><rect x="54.2" y="565" width="1.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="57.17" y="575.5" ></text>
</g>
<g >
<title>`llvm::Value::getValueName() const (1 samples, 0.02%)</title><rect x="566.9" y="5413" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="569.94" y="5423.5" ></text>
</g>
<g >
<title>`cc_stack_enclose (1 samples, 0.02%)</title><rect x="127.9" y="5461" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="130.87" y="5471.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET*-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="901" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="65.01" y="911.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="381.6" y="5253" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="384.64" y="5263.5" ></text>
</g>
<g >
<title>`CLONE-AST^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2453" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="63.18" y="2463.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="56.5" y="1333" width="1.1" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="59.52" y="1343.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CC-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="735.5" y="5509" width="0.3" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="738.51" y="5519.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.3" y="1845" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="65.27" y="1855.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="64.1" y="1429" width="0.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="67.10" y="1439.5" ></text>
</g>
<g >
<title>`llvm::ScalarEvolutionWrapperPass::runOnFunction(llvm::Function&amp; (1 samples, 0.02%)</title><rect x="692.6" y="5669" width="0.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="695.65" y="5679.5" ></text>
</g>
<g >
<title>`CANONICAL-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="68.3" y="2293" width="0.2" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="71.28" y="2303.5" ></text>
</g>
<g >
<title>`INPUTS^CLEAVIR-IR^FN^^ (2 samples, 0.04%)</title><rect x="272.4" y="5573" width="0.5" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="275.40" y="5583.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (1,591 samples, 35.24%)</title><rect x="10.0" y="5797" width="415.8" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="13.00" y="5807.5" >`DO-DBG-FUNCTION^COMPILER^FN^^</text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (2 samples, 0.04%)</title><rect x="70.1" y="3077" width="0.5" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="73.11" y="3087.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="11.3" y="5285" width="1.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="14.31" y="5295.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="16.3" y="2453" width="0.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="19.27" y="2463.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::retrack(void*, llvm::Metadata&amp;, void*) (1 samples, 0.02%)</title><rect x="486.2" y="5541" width="0.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="489.18" y="5551.5" ></text>
</g>
<g >
<title>`SimplifyICmpInst(unsigned int, llvm::Value*, llvm::Value*, llvm (17 samples, 0.38%)</title><rect x="650.8" y="5605" width="4.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="653.83" y="5615.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.0" y="1429" width="0.3" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="65.01" y="1439.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="1605" width="1.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="58.48" y="1615.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.02%)</title><rect x="477.0" y="5525" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="480.03" y="5535.5" ></text>
</g>
<g >
<title>`APPLICABLE-METHOD-LIST^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="65.7" y="1797" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="68.67" y="1807.5" ></text>
</g>
<g >
<title>`GC_mark_some (4 samples, 0.09%)</title><rect x="75.3" y="3685" width="1.1" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="78.34" y="3695.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (2 samples, 0.04%)</title><rect x="92.3" y="4389" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="95.33" y="4399.5" ></text>
</g>
<g >
<title>`FUNCTION-INLINE^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="52.3" y="3733" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="55.34" y="3743.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="638.3" y="5541" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="641.29" y="5551.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T LEXICAL-VARIABLE-INFO))^METHO (2 samples, 0.04%)</title><rect x="42.7" y="4293" width="0.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="45.67" y="4303.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.02%)</title><rect x="92.1" y="4389" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="95.06" y="4399.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((IF-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4517" width="0.3" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="142.11" y="4527.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T LEXICAL-VARIABLE-INFO T T (2 samples, 0.04%)</title><rect x="14.7" y="2549" width="0.5" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="17.70" y="2559.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^FN^^ (6 samples, 0.13%)</title><rect x="57.8" y="1717" width="1.6" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="60.83" y="1727.5" ></text>
</g>
<g >
<title>`PRIMITIVE-PROPERTIES^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="364.7" y="5285" width="0.2" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="367.65" y="5295.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (2 samples, 0.04%)</title><rect x="419.8" y="5541" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="422.80" y="5551.5" ></text>
</g>
<g >
<title>`BFORMAT^CORE^FN^^ (2 samples, 0.04%)</title><rect x="376.2" y="5397" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="379.15" y="5407.5" ></text>
</g>
<g >
<title>`GENERATE-AST^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="124.2" y="5541" width="0.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="127.21" y="5551.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.3" y="4805" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="100.29" y="4815.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="63.8" y="2101" width="1.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="66.84" y="2111.5" ></text>
</g>
<g >
<title>`llvm::ReplaceableMetadataImpl::getOrCreate(llvm::Metadata&amp;) (1 samples, 0.02%)</title><rect x="332.2" y="4917" width="0.3" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="335.25" y="4927.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.8" y="2389" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="65.79" y="2399.5" ></text>
</g>
<g >
<title>`GC_mark_from (2 samples, 0.04%)</title><rect x="252.8" y="5365" width="0.5" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="255.80" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (4 samples, 0.09%)</title><rect x="11.3" y="4661" width="1.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="14.31" y="4671.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (11 samples, 0.24%)</title><rect x="332.8" y="5157" width="2.8" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="335.77" y="5167.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="22.3" y="2597" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="25.28" y="2607.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type* (1 samples, 0.02%)</title><rect x="662.1" y="5461" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="665.07" y="5471.5" ></text>
</g>
<g >
<title>`llvm::Argument::hasByValOrInAllocaAttr() const (1 samples, 0.02%)</title><rect x="643.5" y="5573" width="0.3" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="646.51" y="5583.5" ></text>
</g>
<g >
<title>`GC_clear_hdr_marks (1 samples, 0.02%)</title><rect x="299.3" y="5237" width="0.3" height="15.0" fill="rgb(213,68,68)" rx="2" ry="2" />
<text  x="302.32" y="5247.5" ></text>
</g>
<g >
<title>`MAKE-FORMAT-DIRECTIVE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="48.4" y="5045" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="51.42" y="5055.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (10 samples, 0.22%)</title><rect x="65.4" y="2917" width="2.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="68.41" y="2927.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::getLatticeValueFor(llvm::Val (2 samples, 0.04%)</title><rect x="584.2" y="5637" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="587.19" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.2" y="2261" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="64.22" y="2271.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::getHash() const (1 samples, 0.02%)</title><rect x="334.3" y="4949" width="0.3" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="337.34" y="4959.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp(void const*) (1 samples, 0.02%)</title><rect x="699.7" y="5621" width="0.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="702.71" y="5631.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.02%)</title><rect x="133.1" y="4773" width="0.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="136.10" y="4783.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="71.4" y="3621" width="0.3" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="74.42" y="3631.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (1 samples, 0.02%)</title><rect x="322.3" y="5237" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="325.31" y="5247.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1077" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="65.01" y="1087.5" ></text>
</g>
<g >
<title>0x10d596094 (12 samples, 0.27%)</title><rect x="74.0" y="4229" width="3.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="77.03" y="4239.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (326 samples, 7.22%)</title><rect x="12.4" y="5493" width="85.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="15.35" y="5503.5" >`CONVERT^C..</text>
</g>
<g >
<title>`GC_clear_marks (1 samples, 0.02%)</title><rect x="25.2" y="3861" width="0.2" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="28.16" y="3871.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'BLOCK) T T T))^M (88 samples, 1.95%)</title><rect x="49.5" y="4533" width="23.0" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="52.46" y="4543.5" >`..</text>
</g>
<g >
<title>`llvm::DataLayout::isNonIntegralPointerType(llvm::Type*) const (1 samples, 0.02%)</title><rect x="479.9" y="5621" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="482.91" y="5631.5" ></text>
</g>
<g >
<title>`%INTRINSIC-INVOKE-IF-LANDING-PAD-OR-CALL^CLASP-CLEAVIR^FN^^ (4 samples, 0.09%)</title><rect x="355.0" y="5285" width="1.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="357.98" y="5295.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="24.6" y="3589" width="0.6" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="27.64" y="3599.5" ></text>
</g>
<g >
<title>`llvm::StringMap&lt;llvm::Value*, llvm::MallocAllocator&gt;::insert(ll (1 samples, 0.02%)</title><rect x="375.4" y="5333" width="0.2" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="378.37" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2133" width="3.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="57.17" y="2143.5" ></text>
</g>
<g >
<title>`TRANSLATE-BRANCH-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T  (22 samples, 0.49%)</title><rect x="320.0" y="5317" width="5.7" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="322.96" y="5327.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T T T))^MET (7 samples, 0.16%)</title><rect x="66.2" y="2501" width="1.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="69.19" y="2511.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (5 samples, 0.11%)</title><rect x="282.9" y="5557" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="285.85" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4389" width="0.3" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="137.14" y="4399.5" ></text>
</g>
<g >
<title>0x10d596094 (2 samples, 0.04%)</title><rect x="51.0" y="2693" width="0.6" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="54.03" y="2703.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setf_gethash_no_write_lock(gctools::smart_pt (5 samples, 0.11%)</title><rect x="277.9" y="5541" width="1.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="280.88" y="5551.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="53.4" y="2613" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="56.38" y="2623.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="68.0" y="2885" width="1.8" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="71.02" y="2895.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (15 samples, 0.33%)</title><rect x="128.4" y="4837" width="3.9" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="131.39" y="4847.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (2 samples, 0.04%)</title><rect x="173.1" y="5125" width="0.5" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="176.08" y="5135.5" ></text>
</g>
<g >
<title>`core::make_absolute_pathname(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="721.1" y="5669" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="724.14" y="5679.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="595.7" y="5493" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="598.69" y="5503.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (1 samples, 0.02%)</title><rect x="11.8" y="4485" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="14.83" y="4495.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="71.4" y="3733" width="0.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="74.42" y="3743.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImplBase::insert_imp_big(void const*) (1 samples, 0.02%)</title><rect x="731.6" y="5653" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="734.59" y="5663.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((TAGBODY-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="3973" width="0.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="135.31" y="3983.5" ></text>
</g>
<g >
<title>`llvm::Value::setNameImpl(llvm::Twine const&amp;) (2 samples, 0.04%)</title><rect x="361.0" y="5221" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="363.99" y="5231.5" ></text>
</g>
<g >
<title>`MAP-AST-DEPTH-FIRST-PREORDER^CLEAVIR-AST^FN^^ (1 samples, 0.02%)</title><rect x="60.4" y="2725" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="63.44" y="2735.5" ></text>
</g>
<g >
<title>`CHANGE-CLASS^COMMON-LISP^((STANDARD-OBJECT STD-CLASS))^METHOD^^ (50 samples, 1.11%)</title><rect x="99.6" y="5637" width="13.1" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="102.64" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1493" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="65.27" y="1503.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((FDEFINITION-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="127.6" y="5445" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="130.61" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="61.7" y="2853" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="64.75" y="2863.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="363.6" y="5349" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="366.61" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (25 samples, 0.55%)</title><rect x="16.3" y="3237" width="6.5" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="19.27" y="3247.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="176.2" y="5381" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="179.22" y="5391.5" ></text>
</g>
<g >
<title>`OUTPUTS^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="247.6" y="5573" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="250.57" y="5583.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.04%)</title><rect x="370.9" y="5317" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="373.93" y="5327.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.1" y="2181" width="0.2" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="20.06" y="2191.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.04%)</title><rect x="742.6" y="5605" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="745.57" y="5615.5" ></text>
</g>
<g >
<title>`PRETTY-SOUT^CORE^FN^^ (1 samples, 0.02%)</title><rect x="735.5" y="5477" width="0.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="738.51" y="5487.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (1 samples, 0.02%)</title><rect x="597.0" y="5573" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="599.99" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="62.8" y="1749" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="65.79" y="1759.5" ></text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (3 samples, 0.07%)</title><rect x="353.4" y="5221" width="0.8" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="356.42" y="5231.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="70.6" y="3077" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="73.63" y="3087.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((FUNCALL-INSTRUCTIO (21 samples, 0.47%)</title><rect x="340.6" y="5301" width="5.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="343.61" y="5311.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (1 samples, 0.02%)</title><rect x="62.5" y="1861" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="65.53" y="1871.5" ></text>
</g>
<g >
<title>`ADD-CREATOR^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="123.4" y="5573" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="126.43" y="5583.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="395.8" y="5285" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="398.75" y="5295.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (1 samples, 0.02%)</title><rect x="552.6" y="5269" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="555.56" y="5279.5" ></text>
</g>
<g >
<title>`llvm::SmallPtrSetImpl&lt;llvm::Value const*&gt;::insert(llvm::Value c (2 samples, 0.04%)</title><rect x="508.4" y="5557" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="511.40" y="5567.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2789" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="64.22" y="2799.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="493.8" y="5413" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="496.76" y="5423.5" ></text>
</g>
<g >
<title>`GC_do_local_mark (1 samples, 0.02%)</title><rect x="160.8" y="4773" width="0.3" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="163.80" y="4783.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (13 samples, 0.29%)</title><rect x="54.2" y="2661" width="3.4" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="57.17" y="2671.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="203.1" y="5461" width="0.3" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="206.14" y="5471.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::LazyValueInfoImpl::solveBlockValueImpl(l (1 samples, 0.02%)</title><rect x="437.3" y="5589" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="440.31" y="5599.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="593.9" y="5589" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="596.86" y="5599.5" ></text>
</g>
<g >
<title>`szone_free_definite_size (1 samples, 0.02%)</title><rect x="603.5" y="5653" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="606.53" y="5663.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="329.9" y="5157" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="332.89" y="5167.5" ></text>
</g>
<g >
<title>0x10d596094 (57 samples, 1.26%)</title><rect x="81.3" y="4917" width="14.9" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="84.35" y="4927.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (11 samples, 0.24%)</title><rect x="49.7" y="3829" width="2.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="52.73" y="3839.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="660.2" y="5333" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="663.24" y="5343.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="1413" width="1.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="59.52" y="1423.5" ></text>
</g>
<g >
<title>`FINALIZE^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="19.7" y="1765" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="22.67" y="1775.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2069" width="1.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="60.57" y="2079.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="199.7" y="5573" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="202.74" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.9" y="1381" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="67.88" y="1391.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="57.6" y="2725" width="1.8" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="60.57" y="2735.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="12.1" y="4453" width="0.3" height="15.0" fill="rgb(206,58,58)" rx="2" ry="2" />
<text  x="15.09" y="4463.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_get_ClassHolder_sp (1 samples, 0.02%)</title><rect x="279.7" y="5573" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="282.71" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="725" width="1.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="58.48" y="735.5" ></text>
</g>
<g >
<title>`llvm::Use::getUser() const (1 samples, 0.02%)</title><rect x="588.1" y="5637" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="591.11" y="5647.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (10 samples, 0.22%)</title><rect x="65.4" y="2933" width="2.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="68.41" y="2943.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="422.4" y="5685" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="425.41" y="5695.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (4 samples, 0.09%)</title><rect x="56.5" y="1061" width="1.1" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="59.52" y="1071.5" ></text>
</g>
<g >
<title>`void boost::io::detail::distribute&lt;char, std::__1::char_traits&lt; (1 samples, 0.02%)</title><rect x="384.0" y="5365" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="386.99" y="5375.5" ></text>
</g>
<g >
<title>`IN^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="399.4" y="5429" width="0.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="402.41" y="5439.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="821" width="1.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="58.48" y="831.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="550.2" y="5285" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="553.21" y="5295.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.02%)</title><rect x="78.7" y="3573" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="81.74" y="3583.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.8" y="2821" width="0.3" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="65.79" y="2831.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="58.3" y="837" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="61.35" y="847.5" ></text>
</g>
<g >
<title>`core::core__copy_instance(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="112.4" y="5605" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="115.45" y="5615.5" ></text>
</g>
<g >
<title>`wrapped_cl__make_hash_table_T_spFixnum_spNumber_spReal_spSymbol (2 samples, 0.04%)</title><rect x="66.5" y="1685" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="69.45" y="1695.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="381.6" y="5381" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="384.64" y="5391.5" ></text>
</g>
<g >
<title>`llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::MapInfo::getHashVa (1 samples, 0.02%)</title><rect x="478.6" y="5557" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="481.60" y="5567.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefInfo(llvm::StoreInst const*, llvm::Me (1 samples, 0.02%)</title><rect x="451.9" y="5589" width="0.3" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="454.94" y="5599.5" ></text>
</g>
<g >
<title>`llvm::ConstantExprKeyType::getHash() const (1 samples, 0.02%)</title><rect x="506.8" y="5349" width="0.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="509.83" y="5359.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((SETQ-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4677" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="135.31" y="4687.5" ></text>
</g>
<g >
<title>`CONVERT-ELEMENTARY-SETQ^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="1237" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="65.27" y="1247.5" ></text>
</g>
<g >
<title>`std::__1::__split_buffer&lt;llvm::Constant*, std::__1::allocator&lt;l (2 samples, 0.04%)</title><rect x="626.3" y="5525" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="629.27" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (7 samples, 0.16%)</title><rect x="63.6" y="2469" width="1.8" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="66.58" y="2479.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (2 samples, 0.04%)</title><rect x="72.7" y="4773" width="0.5" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="75.72" y="4783.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="50.8" y="2837" width="0.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="53.77" y="2847.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="22.3" y="2661" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="25.28" y="2671.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="67.5" y="1525" width="0.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="70.50" y="1535.5" ></text>
</g>
<g >
<title>`cc_makeCell (1 samples, 0.02%)</title><rect x="15.2" y="3461" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="18.23" y="3471.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.3" y="2917" width="0.2" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="65.27" y="2927.5" ></text>
</g>
<g >
<title>`computeKnownBitsFromAssume(llvm::Value const*, llvm::KnownBits&amp; (1 samples, 0.02%)</title><rect x="510.2" y="5509" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="513.23" y="5519.5" ></text>
</g>
<g >
<title>`ConstructSSAForLoadSet(llvm::LoadInst*, llvm::SmallVectorImpl&lt;l (1 samples, 0.02%)</title><rect x="562.2" y="5557" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="565.23" y="5567.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::PassInfo c (1 samples, 0.02%)</title><rect x="534.8" y="5621" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="537.79" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (14 samples, 0.31%)</title><rect x="148.3" y="5413" width="3.6" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="151.25" y="5423.5" ></text>
</g>
<g >
<title>`core::cl__maphash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="57.6" y="789" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="60.57" y="799.5" ></text>
</g>
<g >
<title>`OPTIMIZED-LEXICAL-LOCATION-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="169.4" y="4949" width="0.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="172.42" y="4959.5" ></text>
</g>
<g >
<title>`FUNCTION-TYPE^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="51.8" y="3333" width="0.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="54.82" y="3343.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (17 samples, 0.38%)</title><rect x="17.3" y="2117" width="4.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="20.32" y="2127.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (9 samples, 0.20%)</title><rect x="74.6" y="3893" width="2.3" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="77.55" y="3903.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignment(llvm::Type*, bool) const (1 samples, 0.02%)</title><rect x="651.9" y="5445" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="654.88" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (7 samples, 0.16%)</title><rect x="66.2" y="2165" width="1.8" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="69.19" y="2175.5" ></text>
</g>
<g >
<title>`DBG-REGISTER-PARAMETER^COMPILER^FN^^ (10 samples, 0.22%)</title><rect x="358.4" y="5349" width="2.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="361.38" y="5359.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="3125" width="0.3" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="72.85" y="3135.5" ></text>
</g>
<g >
<title>`llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const (4 samples, 0.09%)</title><rect x="432.6" y="5573" width="1.1" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="435.60" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'SETQ) T T T))^ME (30 samples, 0.66%)</title><rect x="27.5" y="4725" width="7.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="30.51" y="4735.5" ></text>
</g>
<g >
<title>`IRC-STORE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="418.2" y="5557" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="421.23" y="5567.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="324.4" y="5189" width="0.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="327.41" y="5199.5" ></text>
</g>
<g >
<title>`PROCESS-KEYS^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="3205" width="0.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="73.11" y="3215.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4325" width="1.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="26.59" y="4335.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (2 samples, 0.04%)</title><rect x="225.1" y="5493" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="228.09" y="5503.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="61.0" y="2693" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="63.96" y="2703.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="121.6" y="5573" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="124.60" y="5583.5" ></text>
</g>
<g >
<title>`STD-COMPUTE-APPLICABLE-METHODS^CLOS^FN^^ (11 samples, 0.24%)</title><rect x="104.3" y="5589" width="2.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="107.35" y="5599.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.6" y="2949" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="73.63" y="2959.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="697.1" y="5493" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="700.09" y="5503.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="710.9" y="5653" width="0.3" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="713.94" y="5663.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm (1 samples, 0.02%)</title><rect x="337.2" y="5045" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="340.21" y="5055.5" ></text>
</g>
<g >
<title>`llvm::MetadataTracking::track(void*, llvm::Metadata&amp;, llvm::Poi (1 samples, 0.02%)</title><rect x="309.8" y="5285" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="312.77" y="5295.5" ></text>
</g>
<g >
<title>`ENSURE-STRING^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="720.9" y="5749" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="723.87" y="5759.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (12 samples, 0.27%)</title><rect x="509.7" y="5557" width="3.1" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="512.70" y="5567.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="293.8" y="5365" width="0.3" height="15.0" fill="rgb(75,222,75)" rx="2" ry="2" />
<text  x="296.83" y="5375.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (5 samples, 0.11%)</title><rect x="19.9" y="2085" width="1.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="22.93" y="2095.5" ></text>
</g>
<g >
<title>`llvm::CallGraphWrapperPass::releaseMemory() (1 samples, 0.02%)</title><rect x="700.8" y="5669" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="703.75" y="5679.5" ></text>
</g>
<g >
<title>`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm: (1 samples, 0.02%)</title><rect x="562.5" y="5477" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="565.50" y="5487.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (88 samples, 1.95%)</title><rect x="49.5" y="4277" width="23.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="52.46" y="4287.5" >`..</text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (25 samples, 0.55%)</title><rect x="16.3" y="3317" width="6.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="19.27" y="3327.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4837" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="136.36" y="4847.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="70.9" y="3349" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="73.89" y="3359.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'TAGBODY) T T T)) (3 samples, 0.07%)</title><rect x="65.4" y="2405" width="0.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="68.41" y="2415.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (8 samples, 0.18%)</title><rect x="55.5" y="1909" width="2.1" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="58.48" y="1919.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="21.2" y="1797" width="0.6" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="24.24" y="1807.5" ></text>
</g>
<g >
<title>`CHILDREN^CLEAVIR-AST^((FDEFINITION-AST))^METHOD^^ (1 samples, 0.02%)</title><rect x="81.9" y="4517" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="84.87" y="4527.5" ></text>
</g>
<g >
<title>`GC_mark_some (3 samples, 0.07%)</title><rect x="36.7" y="4773" width="0.7" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="39.66" y="4783.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="128.9" y="3925" width="0.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="131.91" y="3935.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="55.5" y="613" width="1.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="58.48" y="623.5" ></text>
</g>
<g >
<title>`llvm::AAResults::getModRefBehavior(llvm::ImmutableCallSite) (5 samples, 0.11%)</title><rect x="542.6" y="5557" width="1.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="545.63" y="5567.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="62.0" y="1125" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="65.01" y="1135.5" ></text>
</g>
<g >
<title>`llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef&lt;llvm::Type* (1 samples, 0.02%)</title><rect x="387.9" y="5381" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="390.91" y="5391.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4213" width="1.0" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="26.59" y="4223.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="366.0" y="5381" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="368.96" y="5391.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (3 samples, 0.07%)</title><rect x="384.3" y="5365" width="0.7" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="387.25" y="5375.5" ></text>
</g>
<g >
<title>`GC_allocobj (5 samples, 0.11%)</title><rect x="46.9" y="4933" width="1.3" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="49.85" y="4943.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::keyTest(gctools::smart_ptr&lt;core::T_O&gt;, gc (1 samples, 0.02%)</title><rect x="191.6" y="5493" width="0.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="194.64" y="5503.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="157.1" y="5221" width="0.3" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="160.14" y="5231.5" ></text>
</g>
<g >
<title>`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^ (2,981 samples, 66.02%)</title><rect x="10.0" y="6117" width="779.1" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="13.00" y="6127.5" >`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="143.6" y="5173" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="146.55" y="5183.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((CALL-AST T))^METHOD^^ (6 samples, 0.13%)</title><rect x="154.8" y="5221" width="1.6" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="157.79" y="5231.5" ></text>
</g>
<g >
<title>`llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm:: (1 samples, 0.02%)</title><rect x="679.6" y="5589" width="0.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="682.58" y="5599.5" ></text>
</g>
<g >
<title>`llvm::DenseMap&lt;llvm::DILocalVariable*, llvm::detail::DenseSetEm (1 samples, 0.02%)</title><rect x="359.7" y="5141" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="362.69" y="5151.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="478.6" y="5541" width="0.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="481.60" y="5551.5" ></text>
</g>
<g >
<title>`core::cl__cons(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (4 samples, 0.09%)</title><rect x="33.3" y="4373" width="1.0" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="36.26" y="4383.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="62.3" y="2133" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="65.27" y="2143.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY))^METHOD^^ (1 samples, 0.02%)</title><rect x="79.8" y="3525" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="82.78" y="3535.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="222.2" y="5541" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="225.22" y="5551.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, llvm::KnownBits&amp;, unsigned (1 samples, 0.02%)</title><rect x="516.2" y="5557" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="519.24" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="133.4" y="4229" width="0.2" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="136.36" y="4239.5" ></text>
</g>
<g >
<title>`core::SingleDispatchCxxEffectiveMethodFunction_O::entry_point(c (2 samples, 0.04%)</title><rect x="391.6" y="5381" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="394.57" y="5391.5" ></text>
</g>
<g >
<title>`NEW-TEMPORARY^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="139.1" y="4453" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="142.11" y="4463.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::EarlyCSE::run() (27 samples, 0.60%)</title><rect x="438.9" y="5653" width="7.0" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="441.88" y="5663.5" ></text>
</g>
<g >
<title>`CHECK-SPECIAL-FORM-SYNTAX^CLEAVIR-GENERATE-AST^(((EQL #:'LET) T (1 samples, 0.02%)</title><rect x="37.7" y="4805" width="0.3" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="40.70" y="4815.5" ></text>
</g>
<g >
<title>`llvm::APInt::clearUnusedBits() (1 samples, 0.02%)</title><rect x="596.7" y="5557" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="599.73" y="5567.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (1 samples, 0.02%)</title><rect x="256.2" y="5525" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="259.19" y="5535.5" ></text>
</g>
<g >
<title>`core::core__reallocate_instance(gctools::smart_ptr&lt;core::Instan (1 samples, 0.02%)</title><rect x="112.2" y="5621" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="115.19" y="5631.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="258.5" y="5477" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="261.54" y="5487.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1829" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="69.19" y="1839.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="62.8" y="2789" width="0.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="65.79" y="2799.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4517" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="736.42" y="4527.5" ></text>
</g>
<g >
<title>`std::__1::__tree&lt;clang::TypedefNameDecl const*, std::__1::less&lt; (1 samples, 0.02%)</title><rect x="732.9" y="5285" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="735.90" y="5295.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="17.1" y="2101" width="0.2" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="20.06" y="2111.5" ></text>
</g>
<g >
<title>`gctools::GCRootsInModule::getTaggedIndex(char, unsigned long) (1 samples, 0.02%)</title><rect x="292.8" y="5397" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="295.78" y="5407.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="219.1" y="5557" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="222.08" y="5567.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="70.1" y="3269" width="0.5" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="73.11" y="3279.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="367.5" y="5285" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="370.53" y="5295.5" ></text>
</g>
<g >
<title>`wrapped_cl__append_VaList_sp (1 samples, 0.02%)</title><rect x="87.1" y="4469" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="90.10" y="4479.5" ></text>
</g>
<g >
<title>`llvm::MDNodeKeyImpl&lt;llvm::DILocalVariable&gt;::isKeyOf(llvm::DILoc (1 samples, 0.02%)</title><rect x="359.4" y="5173" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="362.43" y="5183.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (2 samples, 0.04%)</title><rect x="610.3" y="5557" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="613.32" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="50.8" y="2997" width="0.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="53.77" y="3007.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (2 samples, 0.04%)</title><rect x="64.4" y="1093" width="0.5" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="67.36" y="1103.5" ></text>
</g>
<g >
<title>`llvm::hash_code llvm::hashing::detail::hash_combine_recursive_h (1 samples, 0.02%)</title><rect x="316.3" y="5173" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="319.30" y="5183.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="52.3" y="3813" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="55.34" y="3823.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (9 samples, 0.20%)</title><rect x="134.7" y="4917" width="2.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="137.66" y="4927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (3 samples, 0.07%)</title><rect x="135.2" y="4645" width="0.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="138.19" y="4655.5" ></text>
</g>
<g >
<title>`ERROR^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="733.4" y="5685" width="0.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="736.42" y="5695.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="174.4" y="5237" width="0.3" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="177.39" y="5247.5" ></text>
</g>
<g >
<title>`llvm::GlobalStatus::analyzeGlobal(llvm::Value const*, llvm::Glo (2 samples, 0.04%)</title><rect x="592.0" y="5653" width="0.6" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="595.03" y="5663.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (2 samples, 0.04%)</title><rect x="373.8" y="5301" width="0.5" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="376.80" y="5311.5" ></text>
</g>
<g >
<title>`core::string_get_std_string(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="287.3" y="5509" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="290.29" y="5519.5" ></text>
</g>
<g >
<title>`DEFINING-FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (2 samples, 0.04%)</title><rect x="43.7" y="4405" width="0.5" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="46.71" y="4415.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (5 samples, 0.11%)</title><rect x="549.7" y="5397" width="1.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="552.69" y="5407.5" ></text>
</g>
<g >
<title>`core::HashTable_O::rehash_no_lock(bool, gctools::smart_ptr&lt;core (5 samples, 0.11%)</title><rect x="268.2" y="5541" width="1.3" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="271.21" y="5551.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (88 samples, 1.95%)</title><rect x="49.5" y="4709" width="23.0" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="52.46" y="4719.5" >`..</text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="33.0" y="4325" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="36.00" y="4335.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="64.4" y="1029" width="0.5" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="67.36" y="1039.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((RETURN-FROM-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="130.0" y="4133" width="0.2" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="132.96" y="4143.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (5 samples, 0.11%)</title><rect x="12.4" y="4501" width="1.3" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="15.35" y="4511.5" ></text>
</g>
<g >
<title>`llvm::OperandBundleUser&lt;llvm::CallInst, llvm::Use*&gt;::getNumOper (1 samples, 0.02%)</title><rect x="566.4" y="5285" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="569.42" y="5295.5" ></text>
</g>
<g >
<title>`llvm::UnreachableInst::UnreachableInst(llvm::LLVMContext&amp;, llvm (1 samples, 0.02%)</title><rect x="715.4" y="5685" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="718.39" y="5695.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="97.3" y="3413" width="0.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="100.29" y="3423.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'PROGN) T T T))^M (18 samples, 0.40%)</title><rect x="17.3" y="2197" width="4.7" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="20.32" y="2207.5" ></text>
</g>
<g >
<title>`wrapped_cl__cons_T_spT_sp (2 samples, 0.04%)</title><rect x="199.5" y="5589" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="202.48" y="5599.5" ></text>
</g>
<g >
<title>`llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLay (1 samples, 0.02%)</title><rect x="501.9" y="5477" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="504.86" y="5487.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value (1 samples, 0.02%)</title><rect x="523.0" y="5381" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="526.03" y="5391.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="134.1" y="4501" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="137.14" y="4511.5" ></text>
</g>
<g >
<title>`llvm::MemCpyOptPass::runImpl(llvm::Function&amp;, llvm::MemoryDepen (2 samples, 0.04%)</title><rect x="449.3" y="5653" width="0.6" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="452.33" y="5663.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="34.3" y="4485" width="0.3" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="37.31" y="4495.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (2 samples, 0.04%)</title><rect x="67.5" y="1733" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="70.50" y="1743.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="165.2" y="5045" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="168.24" y="5055.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (3 samples, 0.07%)</title><rect x="238.7" y="5413" width="0.8" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="241.68" y="5423.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (12 samples, 0.27%)</title><rect x="78.0" y="5013" width="3.1" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="80.95" y="5023.5" ></text>
</g>
<g >
<title>`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::BasicBlock&gt;, llvm::S (1 samples, 0.02%)</title><rect x="448.3" y="5621" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="451.29" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.8" y="4677" width="0.3" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="134.79" y="4687.5" ></text>
</g>
<g >
<title>`EVAL^CLEAVIR-ENVIRONMENT^((T T ENTRY))^METHOD^^ (5 samples, 0.11%)</title><rect x="54.2" y="53" width="1.3" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="57.17" y="63.5" ></text>
</g>
<g >
<title>`GET-DILOCATION^LLVM-SYS^FN^^ (2 samples, 0.04%)</title><rect x="291.5" y="5413" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="294.48" y="5423.5" ></text>
</g>
<g >
<title>`IRC-INTRINSIC-CALL-OR-INVOKE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="10.5" y="5749" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="13.52" y="5759.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.8" y="5333" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="180.79" y="5343.5" ></text>
</g>
<g >
<title>`wrapped_core__allocate_new_instance_Instance_spsize_t (1 samples, 0.02%)</title><rect x="44.5" y="4517" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="47.50" y="4527.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="55.5" y="101" width="1.0" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="58.48" y="111.5" ></text>
</g>
<g >
<title>`MAP-INSTRUCTIONS-ARBITRARY-ORDER^CLEAVIR-IR^FN^^ (30 samples, 0.66%)</title><rect x="245.7" y="5589" width="7.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="248.74" y="5599.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="131.5" y="4453" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="134.53" y="4463.5" ></text>
</g>
<g >
<title>`core::cl__mapc(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.02%)</title><rect x="409.3" y="5365" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="412.34" y="5375.5" ></text>
</g>
<g >
<title>`llvm::Value::getName() const (1 samples, 0.02%)</title><rect x="485.7" y="5525" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="488.66" y="5535.5" ></text>
</g>
<g >
<title>`IRC-SET-INSERT-POINT-BASIC-BLOCK^COMPILER^FN^^ (2 samples, 0.04%)</title><rect x="338.3" y="5205" width="0.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="341.26" y="5215.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="253.3" y="5557" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="256.32" y="5567.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="129.4" y="4053" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="132.44" y="4063.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (4 samples, 0.09%)</title><rect x="11.3" y="5061" width="1.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="14.31" y="5071.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="97.6" y="4821" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="100.55" y="4831.5" ></text>
</g>
<g >
<title>`CLONE-CREATE-DICTIONARY^CLEAVIR-AST-TRANSFORMATIONS^FN^^ (1 samples, 0.02%)</title><rect x="59.4" y="2693" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="62.40" y="2703.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.3" y="4773" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="140.28" y="4783.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::findAlignmentLowerBound(llvm::AlignTypeEnum,  (1 samples, 0.02%)</title><rect x="649.8" y="5573" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="652.79" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="23.6" y="4677" width="1.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="26.59" y="4687.5" ></text>
</g>
<g >
<title>`llvm::Value::stripPointerCasts() const (1 samples, 0.02%)</title><rect x="492.7" y="5605" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="495.72" y="5615.5" ></text>
</g>
<g >
<title>`llvm::IRBuilder&lt;llvm::TargetFolder, llvm::IRBuilderCallbackInse (2 samples, 0.04%)</title><rect x="633.8" y="5605" width="0.6" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="636.84" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4469" width="0.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="135.31" y="4479.5" ></text>
</g>
<g >
<title>`llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl&lt;llvm::Type (1 samples, 0.02%)</title><rect x="476.5" y="5525" width="0.3" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="479.51" y="5535.5" ></text>
</g>
<g >
<title>`core::lisp_error(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ (1 samples, 0.02%)</title><rect x="735.2" y="5701" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="738.25" y="5711.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.02%)</title><rect x="63.8" y="1797" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="66.84" y="1807.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="58.1" y="1077" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="61.09" y="1087.5" ></text>
</g>
<g >
<title>`OPTIMIZE-INFO^CLEAVIR-ENVIRONMENT^FN^^ (1 samples, 0.02%)</title><rect x="22.3" y="2693" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="25.28" y="2703.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="364.7" y="5253" width="0.2" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="367.65" y="5263.5" ></text>
</g>
<g >
<title>`llvm::ConstantInt::get(llvm::LLVMContext&amp;, llvm::APInt const&amp;) (2 samples, 0.04%)</title><rect x="573.5" y="5509" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="576.47" y="5519.5" ></text>
</g>
<g >
<title>`MAYBE-WRAP-THE^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="79.3" y="3701" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="82.26" y="3711.5" ></text>
</g>
<g >
<title>`VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((ENTRY T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.9" y="789" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="67.88" y="799.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (1 samples, 0.02%)</title><rect x="203.1" y="5445" width="0.3" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="206.14" y="5455.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="97.3" y="4597" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="100.29" y="4607.5" ></text>
</g>
<g >
<title>`CLOSURE-CALL-OR-INVOKE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="120.6" y="5349" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="123.55" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="53.6" y="2965" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="56.65" y="2975.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.1" y="4885" width="0.6" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="137.14" y="4895.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.04%)</title><rect x="180.4" y="5589" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="183.40" y="5599.5" ></text>
</g>
<g >
<title>`INITIALIZE-INSTANCE^COMMON-LISP^((T))^METHOD^^ (5 samples, 0.11%)</title><rect x="735.8" y="5525" width="1.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="738.77" y="5535.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="16.3" y="2437" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="19.27" y="2447.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="65.1" y="1877" width="0.3" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="68.15" y="1887.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((LEXICAL-VARIABLE-INFO T T T (1 samples, 0.02%)</title><rect x="63.1" y="2917" width="0.2" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="66.05" y="2927.5" ></text>
</g>
<g >
<title>`PROCESS-REQUIRED^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="50.8" y="3157" width="0.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="53.77" y="3167.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.0" y="565" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="65.01" y="575.5" ></text>
</g>
<g >
<title>`wrapped_cl__maphash_T_spHashTableBase_sp (1 samples, 0.02%)</title><rect x="61.7" y="1877" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="64.75" y="1887.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (2 samples, 0.04%)</title><rect x="318.1" y="5285" width="0.6" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="321.13" y="5295.5" ></text>
</g>
<g >
<title>`llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constan (3 samples, 0.07%)</title><rect x="549.7" y="5349" width="0.8" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="552.69" y="5359.5" ></text>
</g>
<g >
<title>`SUCCESSORS^CLEAVIR-IR^FN^^ (2 samples, 0.04%)</title><rect x="262.5" y="5573" width="0.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="265.47" y="5583.5" ></text>
</g>
<g >
<title>`_pthread_start (1,533 samples, 33.95%)</title><rect x="789.3" y="6405" width="400.7" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="792.35" y="6415.5" >`_pthread_start</text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (91 samples, 2.02%)</title><rect x="12.4" y="5301" width="23.7" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="15.35" y="5311.5" >`..</text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (5 samples, 0.11%)</title><rect x="63.8" y="2069" width="1.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="66.84" y="2079.5" ></text>
</g>
<g >
<title>0x10d596094 (332 samples, 7.35%)</title><rect x="11.3" y="5621" width="86.8" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="14.31" y="5631.5" >0x10d596094</text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (7 samples, 0.16%)</title><rect x="57.6" y="2341" width="1.8" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="60.57" y="2351.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (18 samples, 0.40%)</title><rect x="17.3" y="2213" width="4.7" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="20.32" y="2223.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="735.8" y="5269" width="0.2" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="738.77" y="5279.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (83 samples, 1.84%)</title><rect x="49.7" y="4069" width="21.7" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="52.73" y="4079.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.3" y="5157" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="180.26" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4549" width="0.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="139.23" y="4559.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="53.1" y="2917" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="56.12" y="2927.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((BLOCK-AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="177.8" y="5381" width="0.2" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="180.79" y="5391.5" ></text>
</g>
<g >
<title>`llvm::getOrEnforceKnownAlignment(llvm::Value*, unsigned int, ll (3 samples, 0.07%)</title><rect x="674.9" y="5605" width="0.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="677.88" y="5615.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="132.3" y="4373" width="0.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="135.31" y="4383.5" ></text>
</g>
<g >
<title>`GC_mark_some (152 samples, 3.37%)</title><rect x="749.1" y="5637" width="39.7" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="752.10" y="5647.5" >`GC..</text>
</g>
<g >
<title>`core::IndirectVariadicMethoid&lt;core::policies::policies_&lt;&gt;, llvm (1 samples, 0.02%)</title><rect x="362.0" y="5285" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="365.04" y="5295.5" ></text>
</g>
<g >
<title>`MAKE-INFO^CLEAVIR-ENVIRONMENT^((T GLOBAL-FUNCTION-INFO))^METHOD (1 samples, 0.02%)</title><rect x="70.9" y="2837" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="73.89" y="2847.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((FIXED-TO-MULTIPLE- (1 samples, 0.02%)</title><rect x="382.4" y="5477" width="0.3" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="385.43" y="5487.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (10 samples, 0.22%)</title><rect x="65.4" y="2677" width="2.6" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="68.41" y="2687.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (233 samples, 5.16%)</title><rect x="36.4" y="5429" width="60.9" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="39.40" y="5439.5" >`CONVE..</text>
</g>
<g >
<title>`getCalledFunction(llvm::Value const*, bool, bool&amp;) (1 samples, 0.02%)</title><rect x="661.0" y="5477" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="664.03" y="5487.5" ></text>
</g>
<g >
<title>`llvm::CallInst::isNoBuiltin() const (1 samples, 0.02%)</title><rect x="616.1" y="5589" width="0.2" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="619.07" y="5599.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="344.8" y="5205" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="347.79" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (4 samples, 0.09%)</title><rect x="11.3" y="4821" width="1.1" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="14.31" y="4831.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="69.8" y="2917" width="0.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="72.85" y="2927.5" ></text>
</g>
<g >
<title>`PREDECESSORS^CLEAVIR-IR^FN^^ (2 samples, 0.04%)</title><rect x="179.6" y="5589" width="0.5" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="182.62" y="5599.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="71.4" y="3477" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="74.42" y="3487.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="4565" width="0.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="139.23" y="4575.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="50.8" y="2805" width="0.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="53.77" y="2815.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="67.2" y="1765" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="70.24" y="1775.5" ></text>
</g>
<g >
<title>`llvm::MDNode::MDNode(llvm::LLVMContext&amp;, unsigned int, llvm::Me (1 samples, 0.02%)</title><rect x="359.9" y="5189" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="362.95" y="5199.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (4 samples, 0.09%)</title><rect x="396.5" y="5317" width="1.1" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="399.54" y="5327.5" ></text>
</g>
<g >
<title>`core::SingleDispatchGenericFunctionClosure_O::entry_point(core: (1 samples, 0.02%)</title><rect x="362.3" y="5333" width="0.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="365.30" y="5343.5" ></text>
</g>
<g >
<title>`IRC-BASIC-BLOCK-CREATE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="365.4" y="5413" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="368.44" y="5423.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="176.2" y="5349" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="179.22" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (7 samples, 0.16%)</title><rect x="57.6" y="1941" width="1.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="60.57" y="1951.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1429" width="0.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="69.19" y="1439.5" ></text>
</g>
<g >
<title>`core::SingleDispatchMethodFunction_O::entry_point(core::T_O*, u (1 samples, 0.02%)</title><rect x="420.6" y="5541" width="0.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="423.58" y="5551.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="169.2" y="4837" width="0.2" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="172.16" y="4847.5" ></text>
</g>
<g >
<title>`llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute (1 samples, 0.02%)</title><rect x="505.8" y="5397" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="508.78" y="5407.5" ></text>
</g>
<g >
<title>`ADD-CREATOR^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="123.9" y="5573" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="126.95" y="5583.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm: (2 samples, 0.04%)</title><rect x="459.3" y="5621" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="462.26" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SETQ^CLEAVIR-GENERATE-AST^((SPECIAL-VARIABLE-INFO T T T (10 samples, 0.22%)</title><rect x="74.6" y="4101" width="2.6" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="77.55" y="4111.5" ></text>
</g>
<g >
<title>`INSERT-SORTED^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="733.4" y="4341" width="0.3" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="736.42" y="4351.5" ></text>
</g>
<g >
<title>`PRIMITIVE-VARARGS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="364.7" y="5301" width="0.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="367.65" y="5311.5" ></text>
</g>
<g >
<title>`COMPILE-ARGUMENTS^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="133.4" y="4613" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="136.36" y="4623.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.02%)</title><rect x="260.6" y="5493" width="0.3" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="263.64" y="5503.5" ></text>
</g>
<g >
<title>`MAKE-ASSIGNMENT-INSTRUCTION^CLEAVIR-IR^FN^^ (1 samples, 0.02%)</title><rect x="157.9" y="5349" width="0.3" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="160.92" y="5359.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="59.4" y="2805" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="62.40" y="2815.5" ></text>
</g>
<g >
<title>`CONTEXT^CLEAVIR-AST-TO-HIR^FN^^ (1 samples, 0.02%)</title><rect x="145.9" y="5157" width="0.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="148.90" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="139.1" y="4501" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="142.11" y="4511.5" ></text>
</g>
<g >
<title>`llvm::TargetIRAnalysis::getDefaultTTI(llvm::Function const&amp;) (1 samples, 0.02%)</title><rect x="429.7" y="5605" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="432.73" y="5615.5" ></text>
</g>
<g >
<title>all (4,515 samples, 100%)</title><rect x="10.0" y="6437" width="1180.0" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="13.00" y="6447.5" ></text>
</g>
<g >
<title>`CONVERT-SEQUENCE^CLEAVIR-GENERATE-AST^FN^^ (4 samples, 0.09%)</title><rect x="56.5" y="229" width="1.1" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="59.52" y="239.5" ></text>
</g>
<g >
<title>`DEFINING-VARIABLE-INFO^CLEAVIR-ENVIRONMENT^((LEXICAL-VARIABLE T (1 samples, 0.02%)</title><rect x="95.2" y="4421" width="0.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="98.20" y="4431.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="97.6" y="5205" width="0.2" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="100.55" y="5215.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (ONE-VALUE-AST-MIXIN  (1 samples, 0.02%)</title><rect x="167.3" y="4997" width="0.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="170.33" y="5007.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="62.5" y="1349" width="0.3" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="65.53" y="1359.5" ></text>
</g>
<g >
<title>`llvm::GlobalsAAResult::alias(llvm::MemoryLocation const&amp;, llvm: (1 samples, 0.02%)</title><rect x="528.5" y="5541" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="531.52" y="5551.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (9 samples, 0.20%)</title><rect x="78.2" y="4373" width="2.4" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="81.21" y="4383.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="60.2" y="2741" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="63.18" y="2751.5" ></text>
</g>
<g >
<title>`llvm::hashing::detail::hash_short(char const*, unsigned long, u (1 samples, 0.02%)</title><rect x="506.8" y="5333" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="509.83" y="5343.5" ></text>
</g>
<g >
<title>`core::core__allocate_new_instance(gctools::smart_ptr&lt;core::Inst (1 samples, 0.02%)</title><rect x="53.4" y="2597" width="0.2" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="56.38" y="2607.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="60.7" y="2837" width="0.5" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="63.70" y="2847.5" ></text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="23.9" y="3893" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="26.85" y="3903.5" ></text>
</g>
<g >
<title>`bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;unsigned int, llvm::GVN: (1 samples, 0.02%)</title><rect x="579.5" y="5573" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="582.48" y="5583.5" ></text>
</g>
<g >
<title>`FINALIZE-SUBSTRUCTURE^CLEAVIR-AST-TRANSFORMATIONS^((CONS T))^ME (1 samples, 0.02%)</title><rect x="70.4" y="2533" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="73.37" y="2543.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (8 samples, 0.18%)</title><rect x="154.8" y="5253" width="2.1" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="157.79" y="5263.5" ></text>
</g>
<g >
<title>`void std::__1::vector&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;*, (2 samples, 0.04%)</title><rect x="605.4" y="5621" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="608.36" y="5631.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (2 samples, 0.04%)</title><rect x="134.1" y="4869" width="0.6" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="137.14" y="4879.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (13 samples, 0.29%)</title><rect x="54.2" y="2645" width="3.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="57.17" y="2655.5" ></text>
</g>
<g >
<title>0x10d596094 (22 samples, 0.49%)</title><rect x="16.3" y="2677" width="5.7" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="19.27" y="2687.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.7" y="2453" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="64.75" y="2463.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T SPECIAL-OPERATOR-INFO T T (1 samples, 0.02%)</title><rect x="61.0" y="2757" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="63.96" y="2767.5" ></text>
</g>
<g >
<title>`COMPILE-TOPLEVEL^CLEAVIR-AST-TO-HIR^FN^^ (218 samples, 4.83%)</title><rect x="126.6" y="5637" width="56.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="129.56" y="5647.5" >`COMPI..</text>
</g>
<g >
<title>`llvm::APInt::clearUnusedBits() (1 samples, 0.02%)</title><rect x="670.7" y="5525" width="0.3" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="673.70" y="5535.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="441.2" y="5557" width="0.3" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="444.23" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^((:AROUND) (T T T T))^METH (1 samples, 0.02%)</title><rect x="16.3" y="1957" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="19.27" y="1967.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="308.7" y="5285" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="311.72" y="5295.5" ></text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (1 samples, 0.02%)</title><rect x="255.7" y="5573" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="258.67" y="5583.5" ></text>
</g>
<g >
<title>`SLOT-EXISTS-P^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="193.5" y="5557" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="196.47" y="5567.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="64.6" y="405" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="67.62" y="415.5" ></text>
</g>
<g >
<title>`computeKnownBits(llvm::Value const*, unsigned int, (anonymous n (1 samples, 0.02%)</title><rect x="637.2" y="5541" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="640.24" y="5551.5" ></text>
</g>
<g >
<title>`FUNCALL^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="65.9" y="1221" width="0.3" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="68.93" y="1231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((PROGN-AST T))^METHOD^^ (4 samples, 0.09%)</title><rect x="137.5" y="4885" width="1.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="140.54" y="4895.5" ></text>
</g>
<g >
<title>`llvm::APInt::operator*(llvm::APInt const&amp;) const (1 samples, 0.02%)</title><rect x="651.4" y="5445" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="654.36" y="5455.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="137.8" y="4725" width="0.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="140.80" y="4735.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getAlignment(llvm::Type*, bool) const (2 samples, 0.04%)</title><rect x="671.0" y="5525" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="673.96" y="5535.5" ></text>
</g>
<g >
<title>0x10d596094 (7 samples, 0.16%)</title><rect x="57.6" y="2453" width="1.8" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="60.57" y="2463.5" ></text>
</g>
<g >
<title>`core::lisp_true() (1 samples, 0.02%)</title><rect x="69.8" y="2533" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="72.85" y="2543.5" ></text>
</g>
<g >
<title>`llvm::SSAUpdater::GetValueInMiddleOfBlock(llvm::BasicBlock*) (1 samples, 0.02%)</title><rect x="562.2" y="5541" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="565.23" y="5551.5" ></text>
</g>
<g >
<title>`RUN-ALL/Users/karstenpoeck/lisp/compiler/clasp2/src/lisp/regres (215 samples, 4.76%)</title><rect x="732.6" y="5813" width="56.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="735.64" y="5823.5" >`RUN-..</text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (2 samples, 0.04%)</title><rect x="64.4" y="741" width="0.5" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="67.36" y="751.5" ></text>
</g>
<g >
<title>`llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const (1 samples, 0.02%)</title><rect x="670.4" y="5493" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="673.43" y="5503.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="368.6" y="5285" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="371.57" y="5295.5" ></text>
</g>
<g >
<title>`SLOT-BOUNDP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="100.2" y="5621" width="0.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="103.17" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^(((EQL #:'IF) T T T))^METH (12 samples, 0.27%)</title><rect x="78.0" y="5029" width="3.1" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="80.95" y="5039.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt, std::__1::unique (1 samples, 0.02%)</title><rect x="463.7" y="5557" width="0.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="466.71" y="5567.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (3 samples, 0.07%)</title><rect x="53.4" y="3125" width="0.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="56.38" y="3135.5" ></text>
</g>
<g >
<title>`llvm::GlobalDCEPass::run(llvm::Module&amp;, llvm::AnalysisManager&lt;l (3 samples, 0.07%)</title><rect x="587.8" y="5685" width="0.8" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="590.85" y="5695.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (1 samples, 0.02%)</title><rect x="143.0" y="5157" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="146.03" y="5167.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (196 samples, 4.34%)</title><rect x="126.8" y="5621" width="51.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="129.82" y="5631.5" >`COMP..</text>
</g>
<g >
<title>`MAKE-CALL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="61.2" y="2661" width="0.3" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="64.22" y="2671.5" ></text>
</g>
<g >
<title>`FUNCTION-INFO^CLEAVIR-ENVIRONMENT^((CLASP-GLOBAL-ENVIRONMENT T) (1 samples, 0.02%)</title><rect x="97.8" y="5541" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="100.81" y="5551.5" ></text>
</g>
<g >
<title>`PROCESS-REMAINING-LET-BINDINGS^CLEAVIR-GENERATE-AST^FN^^ (5 samples, 0.11%)</title><rect x="54.2" y="1221" width="1.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="57.17" y="1231.5" ></text>
</g>
<g >
<title>`CALCULATE-DTREE^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="735.0" y="5413" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="737.99" y="5423.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-FUNCTION-INFO T T) (6 samples, 0.13%)</title><rect x="50.0" y="3461" width="1.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="52.99" y="3471.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="62.5" y="2469" width="0.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="65.53" y="2479.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant  (9 samples, 0.20%)</title><rect x="553.3" y="5381" width="2.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="556.35" y="5391.5" ></text>
</g>
<g >
<title>`CHECK-FORM-PROPER-LIST^CLEAVIR-CODE-UTILITIES^FN^^ (1 samples, 0.02%)</title><rect x="37.7" y="4789" width="0.3" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="40.70" y="4799.5" ></text>
</g>
<g >
<title>`CONVERT-SPECIAL^CLEAVIR-GENERATE-AST^FN^^ (1 samples, 0.02%)</title><rect x="64.9" y="901" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="67.88" y="911.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hash_table_setf_gethash(gctools::smart_ptr&lt;c (4 samples, 0.09%)</title><rect x="184.8" y="5589" width="1.1" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="187.84" y="5599.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.02%)</title><rect x="101.5" y="5573" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="104.47" y="5583.5" ></text>
</g>
<g >
<title>`llvm::Value::getValueName() const (1 samples, 0.02%)</title><rect x="537.4" y="5653" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="540.41" y="5663.5" ></text>
</g>
<g >
<title>`llvm::LexicalScopes::extractLexicalScopes(llvm::SmallVectorImpl (1 samples, 0.02%)</title><rect x="58.6" y="789" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="61.61" y="799.5" ></text>
</g>
<g >
<title>`llvm::BasicAAResult::alias(llvm::MemoryLocation const&amp;, llvm::M (1 samples, 0.02%)</title><rect x="567.2" y="5397" width="0.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="570.20" y="5407.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="71.4" y="3525" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="74.42" y="3535.5" ></text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="66.2" y="1221" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="69.19" y="1231.5" ></text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="136.2" y="3733" width="0.3" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="139.23" y="3743.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((T T T))^METHOD^^ (21 samples, 0.47%)</title><rect x="59.9" y="3317" width="5.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="62.92" y="3327.5" ></text>
</g>
<g >
<title>`GC_mark_from (1 samples, 0.02%)</title><rect x="69.1" y="2101" width="0.2" height="15.0" fill="rgb(217,74,74)" rx="2" ry="2" />
<text  x="72.07" y="2111.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="533.0" y="5637" width="0.2" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="535.96" y="5647.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="65.4" y="2165" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="68.41" y="2175.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="106.7" y="5557" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="109.70" y="5567.5" ></text>
</g>
<g >
<title>`core::SimpleCharacterString_O::get_std_string() const (1 samples, 0.02%)</title><rect x="113.0" y="5621" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="115.97" y="5631.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="64.6" y="117" width="0.3" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="67.62" y="127.5" ></text>
</g>
<g >
<title>`OPTIMIZED-GLOBAL-FUNCTION-INFO-CONSTRUCTOR^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="34.3" y="4437" width="0.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="37.31" y="4447.5" ></text>
</g>
<g >
<title>`DYNENV-DESTINATIONS^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="345.8" y="5237" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="348.84" y="5247.5" ></text>
</g>
<g >
<title>`(anonymous namespace)::SCCPSolver::OperandChangedState(llvm::In (3 samples, 0.07%)</title><rect x="712.0" y="5669" width="0.8" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="714.99" y="5679.5" ></text>
</g>
<g >
<title>`COMBINE-METHOD-FUNCTIONS.LAMBDA^CLOS^FN^^ (5 samples, 0.11%)</title><rect x="63.8" y="2149" width="1.3" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="66.84" y="2159.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="456.4" y="5605" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="459.39" y="5615.5" ></text>
</g>
<g >
<title>`llvm::APInt::sdiv(llvm::APInt const&amp;) const (1 samples, 0.02%)</title><rect x="623.7" y="5573" width="0.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="626.65" y="5583.5" ></text>
</g>
<g >
<title>`CONVERT-FORM^CLEAVIR-GENERATE-AST^((T GLOBAL-MACRO-INFO T T))^M (5 samples, 0.11%)</title><rect x="54.2" y="613" width="1.3" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="57.17" y="623.5" ></text>
</g>
<g >
<title>`GC_approx_sp (1 samples, 0.02%)</title><rect x="413.0" y="5301" width="0.3" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="416.00" y="5311.5" ></text>
</g>
<g >
<title>`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm::Str (1 samples, 0.02%)</title><rect x="314.5" y="5205" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="317.47" y="5215.5" ></text>
</g>
<g >
<title>`CONVERT^CLEAVIR-GENERATE-AST^((:AROUND) (T T T))^METHOD^^ (91 samples, 2.02%)</title><rect x="12.4" y="5445" width="23.7" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="15.35" y="5455.5" >`..</text>
</g>
<g >
<title>`COMPILE-AST^CLEAVIR-AST-TO-HIR^((:AROUND) (AST T))^METHOD^^ (1 samples, 0.02%)</title><rect x="128.9" y="3765" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="131.91" y="3775.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^SETF^^ (1 samples, 0.02%)</title><rect x="60.4" y="2645" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="63.44" y="2655.5" ></text>
</g>
<g >
<title>`llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQue (2 samples, 0.04%)</title><rect x="527.2" y="5509" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="530.21" y="5519.5" ></text>
</g>
<g >
<title>0x10d596094 (36 samples, 0.80%)</title><rect x="14.2" y="4725" width="9.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="17.18" y="4735.5" ></text>
</g>
<g >
<title>`SET-OR-BIND-VARIABLE^CLEAVIR-GENERATE-AST^FN^^ (3 samples, 0.07%)</title><rect x="14.4" y="3077" width="0.8" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="17.44" y="3087.5" ></text>
</g>
<g >
<title>`core::SourcePosInfo_O::make(std::__1::basic_string&lt;char, std::_ (1 samples, 0.02%)</title><rect x="332.5" y="5109" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="335.51" y="5119.5" ></text>
</g>
<g >
<title>`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="459.8" y="5573" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="462.79" y="5583.5" ></text>
</g>
<g >
<title>0x10d596094 (1 samples, 0.02%)</title><rect x="61.2" y="2997" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="64.22" y="3007.5" ></text>
</g>
</g>
</svg>
