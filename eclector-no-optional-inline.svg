<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1142.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1125" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="1125" > </text>
<g id="frames">
<g >
<title>`start (4,747 samples, 99.92%)</title><rect x="10.0" y="1061" width="1179.0" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" >`start</text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (160 samples, 3.37%)</title><rect x="187.8" y="373" width="39.8" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="190.83" y="383.5" >`co..</text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="102.6" y="389" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="105.64" y="399.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.02%)</title><rect x="401.2" y="341" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="404.18" y="351.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (24 samples, 0.51%)</title><rect x="78.3" y="309" width="6.0" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="81.30" y="319.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (2 samples, 0.04%)</title><rect x="1028.3" y="341" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1031.31" y="351.5" ></text>
</g>
<g >
<title>`GC_reclaim_block (1 samples, 0.02%)</title><rect x="78.5" y="181" width="0.3" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="81.55" y="191.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.06%)</title><rect x="772.2" y="373" width="0.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="775.24" y="383.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="100.4" y="277" width="0.3" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="103.41" y="287.5" ></text>
</g>
<g >
<title>`FIXNUMP^CORE^FN^^ (2 samples, 0.04%)</title><rect x="64.9" y="405" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="67.89" y="415.5" ></text>
</g>
<g >
<title>0x11ad17662 (1 samples, 0.02%)</title><rect x="1187.8" y="613" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1190.76" y="623.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (18 samples, 0.38%)</title><rect x="88.2" y="309" width="4.5" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="91.24" y="319.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.02%)</title><rect x="1088.7" y="437" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1091.67" y="447.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (2 samples, 0.04%)</title><rect x="1014.9" y="325" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1017.90" y="335.5" ></text>
</g>
<g >
<title>`tlv_get_addr (6 samples, 0.13%)</title><rect x="781.2" y="357" width="1.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="784.19" y="367.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (2 samples, 0.04%)</title><rect x="1182.8" y="565" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1185.80" y="575.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_core__logand_2op_Integer_spInteger_sp (2 samples, 0.04%)</title><rect x="371.6" y="389" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="374.62" y="399.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (11 samples, 0.23%)</title><rect x="802.5" y="229" width="2.8" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="805.54" y="239.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (4,361 samples, 91.79%)</title><rect x="29.9" y="485" width="1083.1" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="32.87" y="495.5" >`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^</text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="10.0" y="117" width="0.2" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>`wrapped_core__syntax_type_T_spCharacter_sp (3 samples, 0.06%)</title><rect x="1109.3" y="453" width="0.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1112.28" y="463.5" ></text>
</g>
<g >
<title>`wrapped_core__make_vector_T_sp_________________________________ (2 samples, 0.04%)</title><rect x="95.7" y="405" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="98.69" y="415.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (2 samples, 0.04%)</title><rect x="987.6" y="341" width="0.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="990.58" y="351.5" ></text>
</g>
<g >
<title>`gctools::initializeBoehm(int (*)(int, char**, bool&amp;, int&amp;, int&amp; (4,747 samples, 99.92%)</title><rect x="10.0" y="1013" width="1179.0" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" >`gctools::initializeBoehm(int (*)(int, char**, bool&amp;, int&amp;, int&amp;</text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.04%)</title><rect x="391.5" y="373" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="394.49" y="383.5" ></text>
</g>
<g >
<title>`core::cl__streamp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="43.0" y="389" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="46.03" y="399.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="419.3" y="341" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="422.31" y="351.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="876.6" y="245" width="0.2" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="879.56" y="255.5" ></text>
</g>
<g >
<title>`core::input_stream_read_byte8(gctools::smart_ptr&lt;core::T_O&gt;, un (19 samples, 0.40%)</title><rect x="44.3" y="373" width="4.7" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="47.27" y="383.5" ></text>
</g>
<g >
<title>`GC_malloc (2 samples, 0.04%)</title><rect x="58.7" y="437" width="0.5" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="61.68" y="447.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (2 samples, 0.04%)</title><rect x="974.9" y="309" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="977.91" y="319.5" ></text>
</g>
<g >
<title>`GC_mark_some (66 samples, 1.39%)</title><rect x="1058.1" y="293" width="16.4" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="1061.12" y="303.5" ></text>
</g>
<g >
<title>`GC_reclaim_block (1 samples, 0.02%)</title><rect x="88.7" y="181" width="0.3" height="15.0" fill="rgb(228,92,92)" rx="2" ry="2" />
<text  x="91.73" y="191.5" ></text>
</g>
<g >
<title>`GC_build_fl (4 samples, 0.08%)</title><rect x="794.1" y="341" width="1.0" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="797.10" y="351.5" ></text>
</g>
<g >
<title>`SYNTAX-TYPE^CORE^FN^^ (5 samples, 0.11%)</title><rect x="174.9" y="421" width="1.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="177.92" y="431.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="876.6" y="213" width="0.2" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="879.56" y="223.5" ></text>
</g>
<g >
<title>`GC_mark_from (6 samples, 0.13%)</title><rect x="417.3" y="213" width="1.5" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="420.32" y="223.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::set_thread_local_value(gctools::smar (3 samples, 0.06%)</title><rect x="1179.6" y="549" width="0.7" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1182.57" y="559.5" ></text>
</g>
<g >
<title>`wrapped_cl__expt_Number_spNumber_sp (3 samples, 0.06%)</title><rect x="1037.7" y="421" width="0.8" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="1040.75" y="431.5" ></text>
</g>
<g >
<title>`__gmpn_tdiv_qr (1 samples, 0.02%)</title><rect x="839.6" y="341" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="842.55" y="351.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (7 samples, 0.15%)</title><rect x="1115.7" y="485" width="1.8" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="1118.74" y="495.5" ></text>
</g>
<g >
<title>`GC_finish_collection (3 samples, 0.06%)</title><rect x="731.0" y="261" width="0.8" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="734.01" y="271.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (8 samples, 0.17%)</title><rect x="911.3" y="309" width="2.0" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="914.33" y="319.5" ></text>
</g>
<g >
<title>`__cxa_get_globals_fast (2 samples, 0.04%)</title><rect x="1004.5" y="373" width="0.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="1007.47" y="383.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (3 samples, 0.06%)</title><rect x="847.3" y="341" width="0.7" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="850.25" y="351.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::StrWNs_O&gt; gctools::GCObjectAppropriate (35 samples, 0.74%)</title><rect x="85.8" y="341" width="8.6" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="88.75" y="351.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.02%)</title><rect x="814.2" y="389" width="0.3" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="817.22" y="399.5" ></text>
</g>
<g >
<title>`cc_restoreMultipleValue0 (1 samples, 0.02%)</title><rect x="1100.8" y="453" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1103.84" y="463.5" ></text>
</g>
<g >
<title>`___LAMBDA___epilogue-cclasp.lisp-epilogue-cclasp471^1^2089 (4,747 samples, 99.92%)</title><rect x="10.0" y="821" width="1179.0" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >`___LAMBDA___epilogue-cclasp.lisp-epilogue-cclasp471^1^2089</text>
</g>
<g >
<title>`tiny_size (3 samples, 0.06%)</title><rect x="919.8" y="357" width="0.7" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="922.77" y="367.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="115.3" y="229" width="0.3" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="118.31" y="239.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.02%)</title><rect x="646.6" y="197" width="0.2" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="649.57" y="207.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (2 samples, 0.04%)</title><rect x="401.4" y="357" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="404.43" y="367.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleCharacterString_O&gt; gctools::GCOb (39 samples, 0.82%)</title><rect x="76.1" y="341" width="9.7" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="79.07" y="351.5" ></text>
</g>
<g >
<title>`PUSH-CHAR^ECLECTOR.READER^FN^^ (91 samples, 1.92%)</title><rect x="106.4" y="437" width="22.6" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="109.37" y="447.5" >`..</text>
</g>
<g >
<title>`GC_header_cache_miss (2 samples, 0.04%)</title><rect x="1159.2" y="293" width="0.5" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="1162.20" y="303.5" ></text>
</g>
<g >
<title>`core::cl__vector_push_extend(gctools::smart_ptr&lt;core::T_O&gt;, gct (4 samples, 0.08%)</title><rect x="107.9" y="421" width="1.0" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="110.86" y="431.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((ENCLOSE-INSTRUCTIO (1 samples, 0.02%)</title><rect x="10.0" y="245" width="0.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="711.4" y="373" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="714.39" y="383.5" ></text>
</g>
<g >
<title>`fread (182 samples, 3.83%)</title><rect x="257.9" y="341" width="45.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="260.87" y="351.5" >`fread</text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="474.7" y="325" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="477.70" y="335.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="92.5" y="293" width="0.2" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="95.46" y="303.5" ></text>
</g>
<g >
<title>`unw_set_reg (17 samples, 0.36%)</title><rect x="939.4" y="357" width="4.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="942.40" y="367.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (4 samples, 0.08%)</title><rect x="761.3" y="389" width="1.0" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="764.32" y="399.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="95.4" y="341" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="98.44" y="351.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (58 samples, 1.22%)</title><rect x="792.4" y="373" width="14.4" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="795.36" y="383.5" ></text>
</g>
<g >
<title>`0x1 (4,747 samples, 99.92%)</title><rect x="10.0" y="1077" width="1179.0" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" >`0x1</text>
</g>
<g >
<title>`unw_init_local (15 samples, 0.32%)</title><rect x="984.4" y="373" width="3.7" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="987.35" y="383.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (6 samples, 0.13%)</title><rect x="927.0" y="213" width="1.5" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="929.98" y="223.5" ></text>
</g>
<g >
<title>`GC_allochblk (2 samples, 0.04%)</title><rect x="729.0" y="325" width="0.5" height="15.0" fill="rgb(206,58,58)" rx="2" ry="2" />
<text  x="732.03" y="335.5" ></text>
</g>
<g >
<title>`COERCE-FDESIGNATOR^CORE^FN^^ (19 samples, 0.40%)</title><rect x="427.8" y="389" width="4.7" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="430.76" y="399.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.02%)</title><rect x="1116.5" y="469" width="0.2" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="1119.48" y="479.5" ></text>
</g>
<g >
<title>`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="886.7" y="341" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="889.74" y="351.5" ></text>
</g>
<g >
<title>`GC_is_marked (1 samples, 0.02%)</title><rect x="1057.4" y="277" width="0.2" height="15.0" fill="rgb(248,121,121)" rx="2" ry="2" />
<text  x="1060.37" y="287.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.04%)</title><rect x="49.0" y="373" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="51.99" y="383.5" ></text>
</g>
<g >
<title>`GC_freehblk (1 samples, 0.02%)</title><rect x="88.7" y="165" width="0.3" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="91.73" y="175.5" ></text>
</g>
<g >
<title>`core::Closure_O::describeFunction() const (19 samples, 0.40%)</title><rect x="491.1" y="357" width="4.7" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="494.09" y="367.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$pthread_mutex_lock (1 samples, 0.02%)</title><rect x="400.7" y="357" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="403.68" y="367.5" ></text>
</g>
<g >
<title>`GC_build_fl (15 samples, 0.32%)</title><rect x="536.3" y="309" width="3.7" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="539.29" y="319.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="1091.1" y="437" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1094.15" y="447.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="1101.1" y="453" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1104.08" y="463.5" ></text>
</g>
<g >
<title>`GC_build_fl (4 samples, 0.08%)</title><rect x="1056.1" y="373" width="1.0" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="1059.13" y="383.5" ></text>
</g>
<g >
<title>`wrapped_core__logand_2op_Integer_spInteger_sp (10 samples, 0.21%)</title><rect x="381.8" y="373" width="2.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="384.81" y="383.5" ></text>
</g>
<g >
<title>`GC_malloc_atomic (1 samples, 0.02%)</title><rect x="72.8" y="341" width="0.3" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="75.84" y="351.5" ></text>
</g>
<g >
<title>`GC_install_header (2 samples, 0.04%)</title><rect x="793.4" y="293" width="0.5" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="796.36" y="303.5" ></text>
</g>
<g >
<title>`core::cl__digit_char_p(gctools::smart_ptr&lt;core::Character_I&gt;, g (4 samples, 0.08%)</title><rect x="830.4" y="389" width="1.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="833.36" y="399.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cc_enclose (1 samples, 0.02%)</title><rect x="714.9" y="405" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="717.87" y="415.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="100.4" y="309" width="0.3" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="103.41" y="319.5" ></text>
</g>
<g >
<title>`GC_clear_marks (2 samples, 0.04%)</title><rect x="730.5" y="261" width="0.5" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="733.52" y="271.5" ></text>
</g>
<g >
<title>`core::core__load_no_package_set(gctools::smart_ptr&lt;core::T_O&gt;,  (4,747 samples, 99.92%)</title><rect x="10.0" y="949" width="1179.0" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="13.00" y="959.5" >`core::core__load_no_package_set(gctools::smart_ptr&lt;core::T_O&gt;, </text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="924.7" y="229" width="0.3" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="927.74" y="239.5" ></text>
</g>
<g >
<title>`cm_vref (1 samples, 0.02%)</title><rect x="368.1" y="389" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="371.15" y="399.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (25 samples, 0.53%)</title><rect x="974.9" y="325" width="6.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="977.91" y="335.5" ></text>
</g>
<g >
<title>`startup(int, char**, bool&amp;, int&amp;, int&amp;) (4,747 samples, 99.92%)</title><rect x="10.0" y="997" width="1179.0" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" >`startup(int, char**, bool&amp;, int&amp;, int&amp;)</text>
</g>
<g >
<title>`__fread (23 samples, 0.48%)</title><rect x="267.6" y="325" width="5.7" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="270.56" y="335.5" ></text>
</g>
<g >
<title>`SYMBOLP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="400.2" y="373" width="0.2" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="403.19" y="383.5" ></text>
</g>
<g >
<title>`core::clasp_to_int(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="1164.4" y="469" width="0.3" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="1167.42" y="479.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_contagen_mul_Number_spNumber_sp (1 samples, 0.02%)</title><rect x="346.0" y="421" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="349.04" y="431.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="730.3" y="309" width="0.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="733.27" y="319.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (1 samples, 0.02%)</title><rect x="42.3" y="437" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="45.29" y="447.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="88.2" y="277" width="0.3" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="91.24" y="287.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (1 samples, 0.02%)</title><rect x="72.6" y="357" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="75.59" y="367.5" ></text>
</g>
<g >
<title>`MAKE-INTEGER-ACCUMULATOR^ECLECTOR.READER^FN^^ (2 samples, 0.04%)</title><rect x="929.2" y="421" width="0.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="932.21" y="431.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (31 samples, 0.65%)</title><rect x="115.1" y="277" width="7.7" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="118.06" y="287.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="843.3" y="213" width="0.2" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="846.28" y="223.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.02%)</title><rect x="1115.5" y="485" width="0.2" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="1118.49" y="495.5" ></text>
</g>
<g >
<title>`core::contagen_div(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (1 samples, 0.02%)</title><rect x="826.6" y="405" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="829.64" y="415.5" ></text>
</g>
<g >
<title>`core::contagen_mul(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (132 samples, 2.78%)</title><rect x="895.9" y="389" width="32.8" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="898.93" y="399.5" >`c..</text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.02%)</title><rect x="1105.3" y="405" width="0.3" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="1108.31" y="415.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__bzero (1 samples, 0.02%)</title><rect x="936.9" y="405" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="939.91" y="415.5" ></text>
</g>
<g >
<title>`fread (16 samples, 0.34%)</title><rect x="44.8" y="357" width="3.9" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="47.77" y="367.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="1021.4" y="357" width="0.2" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="1024.36" y="367.5" ></text>
</g>
<g >
<title>`core::Ratio_O::number_type_() const (3 samples, 0.06%)</title><rect x="833.3" y="389" width="0.8" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="836.34" y="399.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (6 samples, 0.13%)</title><rect x="1159.7" y="293" width="1.5" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="1162.70" y="303.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (4 samples, 0.08%)</title><rect x="100.2" y="373" width="1.0" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="103.16" y="383.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (4 samples, 0.08%)</title><rect x="794.1" y="325" width="1.0" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="797.10" y="335.5" ></text>
</g>
<g >
<title>`szone_free_definite_size (1 samples, 0.02%)</title><rect x="861.7" y="373" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="864.66" y="383.5" ></text>
</g>
<g >
<title>`core::Ratio_O::create(gctools::smart_ptr&lt;core::Integer_O&gt;, gcto (42 samples, 0.88%)</title><rect x="874.6" y="357" width="10.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="877.57" y="367.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (22 samples, 0.46%)</title><rect x="78.5" y="245" width="5.5" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="81.55" y="255.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (11 samples, 0.23%)</title><rect x="1027.1" y="357" width="2.7" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1030.07" y="367.5" ></text>
</g>
<g >
<title>`free_tiny (7 samples, 0.15%)</title><rect x="886.2" y="357" width="1.8" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="889.25" y="367.5" ></text>
</g>
<g >
<title>`_pthread_mutex_unlock_init_slow (4 samples, 0.08%)</title><rect x="279.7" y="325" width="1.0" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="282.73" y="335.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="727.0" y="357" width="0.3" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="730.04" y="367.5" ></text>
</g>
<g >
<title>`NUMBERP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="467.7" y="373" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="470.74" y="383.5" ></text>
</g>
<g >
<title>`wrapped_cl__make_hash_table_T_spFixnum_spNumber_spReal_spSymbol (186 samples, 3.91%)</title><rect x="1119.5" y="501" width="46.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1122.46" y="511.5" >`wra..</text>
</g>
<g >
<title>`CHAR-UPCASE^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="426.5" y="389" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="429.51" y="399.5" ></text>
</g>
<g >
<title>`wrapped_cl__zerop_Number_sp (3 samples, 0.06%)</title><rect x="1177.3" y="533" width="0.8" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1180.33" y="543.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_cl__values_VaList_sp (1 samples, 0.02%)</title><rect x="467.0" y="373" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="470.00" y="383.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="766.3" y="373" width="0.2" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="769.28" y="383.5" ></text>
</g>
<g >
<title>`clear_marks_for_block (1 samples, 0.02%)</title><rect x="730.8" y="229" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="733.77" y="239.5" ></text>
</g>
<g >
<title>`core::eformat_unread_char(gctools::smart_ptr&lt;core::T_O&gt;, int) (4 samples, 0.08%)</title><rect x="1107.0" y="437" width="1.0" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="1110.04" y="447.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="100.4" y="181" width="0.3" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="103.41" y="191.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (101 samples, 2.13%)</title><rect x="1125.9" y="405" width="25.1" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="1128.92" y="415.5" >`..</text>
</g>
<g >
<title>`COERCE-FDESIGNATOR^CORE^FN^^ (9 samples, 0.19%)</title><rect x="464.5" y="373" width="2.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="467.51" y="383.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (7 samples, 0.15%)</title><rect x="768.5" y="357" width="1.8" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="771.52" y="367.5" ></text>
</g>
<g >
<title>`VECTOR-PUSH-EXTEND^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="1040.2" y="437" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="1043.23" y="447.5" ></text>
</g>
<g >
<title>`SIMPLE-TYPE-PREDICATE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="411.9" y="373" width="0.2" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="414.86" y="383.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (2 samples, 0.04%)</title><rect x="463.0" y="357" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="466.02" y="367.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__bzero (1 samples, 0.02%)</title><rect x="876.1" y="309" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="879.06" y="319.5" ></text>
</g>
<g >
<title>`GC_add_map_entry (1 samples, 0.02%)</title><rect x="534.6" y="277" width="0.2" height="15.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="537.55" y="287.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (3 samples, 0.06%)</title><rect x="1147.0" y="277" width="0.8" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="1150.03" y="287.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (19 samples, 0.40%)</title><rect x="966.5" y="357" width="4.7" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="969.47" y="367.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (2 samples, 0.04%)</title><rect x="1057.6" y="293" width="0.5" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="1060.62" y="303.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="115.3" y="245" width="0.3" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="118.31" y="255.5" ></text>
</g>
<g >
<title>`gctools::startupGarbageCollectorAndSystem(int (*)(int, char**,  (4,747 samples, 99.92%)</title><rect x="10.0" y="1029" width="1179.0" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" >`gctools::startupGarbageCollectorAndSystem(int (*)(int, char**, </text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="1074.5" y="373" width="0.3" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="1077.51" y="383.5" ></text>
</g>
<g >
<title>`core::utf_8_decoder(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="311.8" y="389" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="314.77" y="399.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__gmpz_cmp_ui (1 samples, 0.02%)</title><rect x="866.9" y="357" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="869.87" y="367.5" ></text>
</g>
<g >
<title>`GC_reclaim_block (10 samples, 0.21%)</title><rect x="543.0" y="197" width="2.5" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="546.00" y="207.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (2 samples, 0.04%)</title><rect x="46.5" y="341" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="49.51" y="351.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="1118.7" y="501" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="1121.72" y="511.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="1161.7" y="437" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1164.69" y="447.5" ></text>
</g>
<g >
<title>`mach_timebase_info (2 samples, 0.04%)</title><rect x="1033.5" y="357" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1036.53" y="367.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (2 samples, 0.04%)</title><rect x="690.0" y="373" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="693.03" y="383.5" ></text>
</g>
<g >
<title>0x11ad1d24a (4,746 samples, 99.89%)</title><rect x="10.2" y="629" width="1178.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="13.25" y="639.5" >0x11ad1d24a</text>
</g>
<g >
<title>`HASH-EQL^CORE^FN^^ (2 samples, 0.04%)</title><rect x="61.9" y="421" width="0.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="64.91" y="431.5" ></text>
</g>
<g >
<title>`wrapped_contagen_mul_Number_spNumber_sp (144 samples, 3.03%)</title><rect x="893.4" y="405" width="35.8" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="896.45" y="415.5" >`wr..</text>
</g>
<g >
<title>`default_zone_malloc (2 samples, 0.04%)</title><rect x="962.7" y="341" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="965.74" y="351.5" ></text>
</g>
<g >
<title>0x11ad171e7 (1 samples, 0.02%)</title><rect x="10.2" y="613" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="13.25" y="623.5" ></text>
</g>
<g >
<title>`core::utf_8_decoder(gctools::smart_ptr&lt;core::T_O&gt;) (240 samples, 5.05%)</title><rect x="251.2" y="373" width="59.6" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="254.17" y="383.5" >`core:..</text>
</g>
<g >
<title>`GC_try_to_collect_inner (15 samples, 0.32%)</title><rect x="924.7" y="277" width="3.8" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="927.74" y="287.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="1163.2" y="437" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1166.18" y="447.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (18 samples, 0.38%)</title><rect x="780.2" y="389" width="4.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="783.19" y="399.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="124.0" y="357" width="0.2" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="127.00" y="367.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="414.3" y="373" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="417.34" y="383.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="816.2" y="325" width="0.3" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="819.21" y="335.5" ></text>
</g>
<g >
<title>`SYNTAX-TYPE^CORE^FN^^ (1 samples, 0.02%)</title><rect x="1093.6" y="453" width="0.3" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="1096.63" y="463.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_eql_List_sp (3 samples, 0.06%)</title><rect x="101.6" y="389" width="0.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="104.65" y="399.5" ></text>
</g>
<g >
<title>`ZEROP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="384.3" y="389" width="0.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="387.29" y="399.5" ></text>
</g>
<g >
<title>`cc_enclose (75 samples, 1.58%)</title><rect x="789.4" y="405" width="18.6" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="792.38" y="415.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (2 samples, 0.04%)</title><rect x="83.5" y="197" width="0.5" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="86.52" y="207.5" ></text>
</g>
<g >
<title>`wrapped_cl__digit_char_p_Character_spFixnum_sp (8 samples, 0.17%)</title><rect x="829.4" y="405" width="2.0" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="832.37" y="415.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (3 samples, 0.06%)</title><rect x="1149.8" y="309" width="0.7" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1152.76" y="319.5" ></text>
</g>
<g >
<title>`GC_clear_marks (1 samples, 0.02%)</title><rect x="1156.0" y="341" width="0.2" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="1158.97" y="351.5" ></text>
</g>
<g >
<title>`core::core__hash_eql(gctools::smart_ptr&lt;core::List_V&gt;) (3 samples, 0.06%)</title><rect x="101.6" y="373" width="0.8" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="104.65" y="383.5" ></text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (2 samples, 0.04%)</title><rect x="991.1" y="325" width="0.5" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="994.06" y="335.5" ></text>
</g>
<g >
<title>`wrapped_cl__char_code_Character_sp (4 samples, 0.08%)</title><rect x="828.4" y="405" width="1.0" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="831.38" y="415.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (15 samples, 0.32%)</title><rect x="88.7" y="245" width="3.8" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="91.73" y="255.5" ></text>
</g>
<g >
<title>`CCLASP-COMPILE-IN-ENV^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="581" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>`__error (22 samples, 0.46%)</title><rect x="262.1" y="325" width="5.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="265.09" y="335.5" ></text>
</g>
<g >
<title>`GC_malloc_atomic (1 samples, 0.02%)</title><rect x="415.8" y="357" width="0.3" height="15.0" fill="rgb(224,86,86)" rx="2" ry="2" />
<text  x="418.83" y="367.5" ></text>
</g>
<g >
<title>`default_zone_realloc (1 samples, 0.02%)</title><rect x="904.6" y="325" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="907.62" y="335.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (1 samples, 0.02%)</title><rect x="910.1" y="357" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="913.09" y="367.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (11 samples, 0.23%)</title><rect x="313.5" y="405" width="2.7" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="316.51" y="415.5" ></text>
</g>
<g >
<title>`free_tiny (17 samples, 0.36%)</title><rect x="857.4" y="373" width="4.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="860.43" y="383.5" ></text>
</g>
<g >
<title>`core::cl__load(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (4,747 samples, 99.92%)</title><rect x="10.0" y="965" width="1179.0" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="13.00" y="975.5" >`core::cl__load(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt</text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="913.6" y="341" width="0.2" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="916.57" y="351.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="28.9" y="501" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="31.88" y="511.5" ></text>
</g>
<g >
<title>`DO-COMPILATION-UNIT^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="549" width="0.2" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="414.3" y="357" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="417.34" y="367.5" ></text>
</g>
<g >
<title>`CHAR-CODE^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="366.2" y="405" width="0.5" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="369.16" y="415.5" ></text>
</g>
<g >
<title>`__cxa_end_catch (1 samples, 0.02%)</title><rect x="1098.6" y="453" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1101.60" y="463.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (4 samples, 0.08%)</title><rect x="819.4" y="405" width="1.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="822.43" y="415.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="227.6" y="373" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="230.57" y="383.5" ></text>
</g>
<g >
<title>`UPGRADED-ARRAY-ELEMENT-TYPE^COMMON-LISP^FN^^ (37 samples, 0.78%)</title><rect x="96.9" y="421" width="9.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="99.93" y="431.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (2 samples, 0.04%)</title><rect x="1161.9" y="437" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1164.93" y="447.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (3 samples, 0.06%)</title><rect x="868.6" y="277" width="0.8" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="871.61" y="287.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CORE^FN^^.14 (4,747 samples, 99.92%)</title><rect x="10.0" y="725" width="1179.0" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >`CATCH-LAMBDA^CORE^FN^^.14</text>
</g>
<g >
<title>`PUSH-CHAR^ECLECTOR.READER^FN^^ (4 samples, 0.08%)</title><rect x="39.8" y="453" width="1.0" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="42.80" y="463.5" ></text>
</g>
<g >
<title>`default_zone_malloc (1 samples, 0.02%)</title><rect x="906.9" y="293" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="909.86" y="303.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (4 samples, 0.08%)</title><rect x="272.3" y="309" width="1.0" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="275.28" y="319.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_byte8_t_O, unsig (1 samples, 0.02%)</title><rect x="368.1" y="373" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="371.15" y="383.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.08%)</title><rect x="310.8" y="389" width="1.0" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="313.77" y="399.5" ></text>
</g>
<g >
<title>`MAKE-VECTOR^CORE^FN^^ (3 samples, 0.06%)</title><rect x="96.2" y="421" width="0.7" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="99.18" y="431.5" ></text>
</g>
<g >
<title>`GC_finish_collection (12 samples, 0.25%)</title><rect x="542.5" y="245" width="3.0" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="545.50" y="255.5" ></text>
</g>
<g >
<title>`tiny_size (4 samples, 0.08%)</title><rect x="856.4" y="357" width="1.0" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="859.44" y="367.5" ></text>
</g>
<g >
<title>`SYMBOLP^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="409.1" y="389" width="0.5" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="412.13" y="399.5" ></text>
</g>
<g >
<title>`CALL-WITH-COMPILATION-RESULTS^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="517" width="0.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_value(core::Symbol_O co (2 samples, 0.04%)</title><rect x="1180.3" y="549" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="1183.31" y="559.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="884.3" y="341" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="887.26" y="351.5" ></text>
</g>
<g >
<title>`GC_allocobj (22 samples, 0.46%)</title><rect x="78.5" y="277" width="5.5" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="81.55" y="287.5" ></text>
</g>
<g >
<title>`core::cl__hash_table_count(gctools::smart_ptr&lt;core::HashTableBa (3 samples, 0.06%)</title><rect x="1169.6" y="517" width="0.8" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1172.63" y="527.5" ></text>
</g>
<g >
<title>`UPGRADED-ARRAY-ELEMENT-TYPE^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="1040.0" y="437" width="0.2" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="1042.99" y="447.5" ></text>
</g>
<g >
<title>`core::startup_functions_invoke(core::T_O*) (4,747 samples, 99.92%)</title><rect x="10.0" y="917" width="1179.0" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="13.00" y="927.5" >`core::startup_functions_invoke(core::T_O*)</text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (1 samples, 0.02%)</title><rect x="1025.8" y="373" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1028.83" y="383.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (158 samples, 3.33%)</title><rect x="965.2" y="389" width="39.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="968.23" y="399.5" >`_U..</text>
</g>
<g >
<title>`pthread_mutex_lock (4 samples, 0.08%)</title><rect x="404.4" y="357" width="1.0" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="407.41" y="367.5" ></text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (8 samples, 0.17%)</title><rect x="968.7" y="341" width="2.0" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="971.70" y="351.5" ></text>
</g>
<g >
<title>`core::input_stream_read_byte8(gctools::smart_ptr&lt;core::T_O&gt;, un (1 samples, 0.02%)</title><rect x="43.8" y="389" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="46.78" y="399.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (1 samples, 0.02%)</title><rect x="968.0" y="325" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="970.96" y="335.5" ></text>
</g>
<g >
<title>`core::Closure_O::describeFunction() const (2 samples, 0.04%)</title><rect x="807.3" y="373" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="810.26" y="383.5" ></text>
</g>
<g >
<title>`__gmp_default_allocate (6 samples, 0.13%)</title><rect x="906.6" y="341" width="1.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="909.61" y="351.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (12 samples, 0.25%)</title><rect x="1001.0" y="309" width="3.0" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1003.99" y="319.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_value(core::Symbol_O co (2 samples, 0.04%)</title><rect x="1089.4" y="421" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="1092.41" y="431.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.02%)</title><rect x="122.3" y="229" width="0.2" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="125.26" y="239.5" ></text>
</g>
<g >
<title>`MAKE-ARRAY^COMMON-LISP^FN^^ (190 samples, 4.00%)</title><rect x="59.2" y="437" width="47.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="62.18" y="447.5" >`MAK..</text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.02%)</title><rect x="993.5" y="309" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="996.54" y="319.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (15 samples, 0.32%)</title><rect x="1021.6" y="357" width="3.7" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="1024.61" y="367.5" ></text>
</g>
<g >
<title>`tlv_get_addr (4 samples, 0.08%)</title><rect x="1076.5" y="405" width="1.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1079.50" y="415.5" ></text>
</g>
<g >
<title>`HASH-TABLE-COUNT^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="15.5" y="533" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="18.46" y="543.5" ></text>
</g>
<g >
<title>`wrapped_cl__vector_push_extend_T_spVector_spsize_t (81 samples, 1.70%)</title><rect x="108.9" y="421" width="20.1" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="111.85" y="431.5" ></text>
</g>
<g >
<title>`cc_makeCell (41 samples, 0.86%)</title><rect x="809.3" y="405" width="10.1" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="812.25" y="415.5" ></text>
</g>
<g >
<title>`VREF^CORE^FN^^ (10 samples, 0.21%)</title><rect x="476.4" y="373" width="2.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="479.44" y="383.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::create(unsigned int, gctools::smart_ptr&lt;c (3 samples, 0.06%)</title><rect x="1119.7" y="485" width="0.8" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="1122.71" y="495.5" ></text>
</g>
<g >
<title>`llvmo::llvm_sys__FunctionCreate(gctools::smart_ptr&lt;llvmo::Funct (1 samples, 0.02%)</title><rect x="10.0" y="149" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (10 samples, 0.21%)</title><rect x="940.1" y="325" width="2.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="943.14" y="335.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (31 samples, 0.65%)</title><rect x="42.5" y="421" width="7.7" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="45.54" y="431.5" ></text>
</g>
<g >
<title>`___LAMBDA___top.lsp-top137^332^63695 (4,747 samples, 99.92%)</title><rect x="10.0" y="805" width="1179.0" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >`___LAMBDA___top.lsp-top137^332^63695</text>
</g>
<g >
<title>`GC_freehblk (1 samples, 0.02%)</title><rect x="924.7" y="197" width="0.3" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="927.74" y="207.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (3 samples, 0.06%)</title><rect x="1099.3" y="453" width="0.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1102.35" y="463.5" ></text>
</g>
<g >
<title>`pthread_getspecific (2 samples, 0.04%)</title><rect x="1075.8" y="405" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1078.75" y="415.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.04%)</title><rect x="1044.0" y="421" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1046.96" y="431.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.06%)</title><rect x="93.7" y="325" width="0.7" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="96.70" y="335.5" ></text>
</g>
<g >
<title>`tlv_get_addr (6 samples, 0.13%)</title><rect x="1087.2" y="421" width="1.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1090.18" y="431.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (33 samples, 0.69%)</title><rect x="747.9" y="213" width="8.2" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="750.90" y="223.5" ></text>
</g>
<g >
<title>`core::cl__zerop(gctools::smart_ptr&lt;core::Number_O&gt;) (1 samples, 0.02%)</title><rect x="377.8" y="373" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="380.83" y="383.5" ></text>
</g>
<g >
<title>`cc_TLSymbolValue (3 samples, 0.06%)</title><rect x="1111.0" y="469" width="0.8" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1114.02" y="479.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (17 samples, 0.36%)</title><rect x="179.9" y="389" width="4.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="182.88" y="399.5" ></text>
</g>
<g >
<title>`gctools::GCObjectDefaultConstructorAllocator&lt;core::DoubleFloat_ (20 samples, 0.42%)</title><rect x="923.7" y="373" width="5.0" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="926.75" y="383.5" ></text>
</g>
<g >
<title>`COMPILE-WITH-HOOK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="533" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="990.6" y="309" width="0.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="993.56" y="319.5" ></text>
</g>
<g >
<title>`core::Ratio_O::setf_numerator_denominator(gctools::smart_ptr&lt;co (13 samples, 0.27%)</title><rect x="848.0" y="341" width="3.2" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="851.00" y="351.5" ></text>
</g>
<g >
<title>`core::eformat_read_char(gctools::smart_ptr&lt;core::T_O&gt;) (26 samples, 0.55%)</title><rect x="43.3" y="405" width="6.4" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="46.28" y="415.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (11 samples, 0.23%)</title><rect x="984.8" y="325" width="2.8" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="987.85" y="335.5" ></text>
</g>
<g >
<title>`wrapped_cl__char_upcase_Character_sp (8 samples, 0.17%)</title><rect x="694.5" y="373" width="2.0" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="697.50" y="383.5" ></text>
</g>
<g >
<title>`GC_allocobj (8 samples, 0.17%)</title><rect x="876.6" y="293" width="1.9" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="879.56" y="303.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.02%)</title><rect x="187.6" y="373" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="190.58" y="383.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$core::Unwind::Unwind(core::T_O*, unsigned long) (1 samples, 0.02%)</title><rect x="345.5" y="421" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="348.55" y="431.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.02%)</title><rect x="1147.5" y="261" width="0.3" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="1150.53" y="271.5" ></text>
</g>
<g >
<title>`wrapped_cl__values_list_List_sp (3 samples, 0.06%)</title><rect x="1176.6" y="533" width="0.7" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1179.59" y="543.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="770.3" y="357" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="773.26" y="367.5" ></text>
</g>
<g >
<title>`LOGAND-2OP^CORE^FN^^ (1 samples, 0.02%)</title><rect x="366.9" y="389" width="0.3" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="369.91" y="399.5" ></text>
</g>
<g >
<title>`mach_absolute_time (3 samples, 0.06%)</title><rect x="1032.8" y="357" width="0.7" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1035.78" y="367.5" ></text>
</g>
<g >
<title>`READ-CHAR^COMMON-LISP^FN^^ (3 samples, 0.06%)</title><rect x="41.3" y="453" width="0.7" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="44.29" y="463.5" ></text>
</g>
<g >
<title>`free (7 samples, 0.15%)</title><rect x="855.7" y="373" width="1.7" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="858.70" y="383.5" ></text>
</g>
<g >
<title>`core::clasp_gcd(gctools::smart_ptr&lt;core::Integer_O&gt;, gctools::s (13 samples, 0.27%)</title><rect x="914.1" y="325" width="3.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="917.06" y="335.5" ></text>
</g>
<g >
<title>`core::cl__fdefinition(gctools::smart_ptr&lt;core::T_O&gt;) (5 samples, 0.11%)</title><rect x="412.9" y="357" width="1.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="415.85" y="367.5" ></text>
</g>
<g >
<title>`wrapped_cl__float_Real_spT_sp (20 samples, 0.42%)</title><rect x="415.1" y="389" width="5.0" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="418.09" y="399.5" ></text>
</g>
<g >
<title>`unw_get_reg (2 samples, 0.04%)</title><rect x="983.9" y="373" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="986.85" y="383.5" ></text>
</g>
<g >
<title>`cm_check_index (16 samples, 0.34%)</title><rect x="821.4" y="405" width="4.0" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="824.42" y="415.5" ></text>
</g>
<g >
<title>`CONVERT-ACCORDING-TO-READTABLE-CASE^ECLECTOR.READER^FN^^ (4 samples, 0.08%)</title><rect x="344.6" y="421" width="0.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="347.55" y="431.5" ></text>
</g>
<g >
<title>`READ^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="1188.5" y="613" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="1191.51" y="623.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (44 samples, 0.93%)</title><rect x="795.1" y="341" width="10.9" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="798.09" y="351.5" ></text>
</g>
<g >
<title>`mach_absolute_time (2 samples, 0.04%)</title><rect x="1080.2" y="373" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1083.22" y="383.5" ></text>
</g>
<g >
<title>`cc_invoke_byte_code_interpreter (4,747 samples, 99.92%)</title><rect x="10.0" y="885" width="1179.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >`cc_invoke_byte_code_interpreter</text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="872.1" y="341" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="875.09" y="351.5" ></text>
</g>
<g >
<title>`wrapped_cl__unread_char_Character_spT_sp (1 samples, 0.02%)</title><rect x="1112.8" y="469" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1115.76" y="479.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (16 samples, 0.34%)</title><rect x="384.5" y="389" width="4.0" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="387.54" y="399.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (21 samples, 0.44%)</title><rect x="78.8" y="229" width="5.2" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="81.80" y="239.5" ></text>
</g>
<g >
<title>`std::get_terminate() (1 samples, 0.02%)</title><rect x="1035.3" y="405" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1038.27" y="415.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (83 samples, 1.75%)</title><rect x="1054.1" y="389" width="20.7" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="1057.14" y="399.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (2 samples, 0.04%)</title><rect x="827.9" y="405" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="830.88" y="415.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="1126.2" y="309" width="0.2" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="1129.17" y="319.5" ></text>
</g>
<g >
<title>`_Unwind_GetIP (2 samples, 0.04%)</title><rect x="990.1" y="325" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="993.06" y="335.5" ></text>
</g>
<g >
<title>`READ-CHAR-HANDLING-EOF^ECLECTOR.READER^FN^^ (2 samples, 0.04%)</title><rect x="40.8" y="453" width="0.5" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="43.80" y="463.5" ></text>
</g>
<g >
<title>`MAKE-VECTOR^CORE^FN^^ (122 samples, 2.57%)</title><rect x="65.4" y="405" width="30.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="68.39" y="415.5" >`M..</text>
</g>
<g >
<title>`GC_get_first_part (1 samples, 0.02%)</title><rect x="10.0" y="53" width="0.2" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="13.00" y="63.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (12 samples, 0.25%)</title><rect x="384.8" y="373" width="3.0" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="387.79" y="383.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (36 samples, 0.76%)</title><rect x="42.5" y="437" width="9.0" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="45.54" y="447.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="851.7" y="341" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="854.72" y="351.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (7 samples, 0.15%)</title><rect x="417.1" y="325" width="1.7" height="15.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="420.08" y="335.5" ></text>
</g>
<g >
<title>`DEFAULT^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="613" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (2 samples, 0.04%)</title><rect x="885.3" y="357" width="0.4" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="888.25" y="367.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (6 samples, 0.13%)</title><rect x="73.1" y="341" width="1.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="76.09" y="351.5" ></text>
</g>
<g >
<title>`__toupper (3 samples, 0.06%)</title><rect x="695.7" y="341" width="0.8" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="698.75" y="351.5" ></text>
</g>
<g >
<title>`GC_add_map_entry (2 samples, 0.04%)</title><rect x="1054.9" y="341" width="0.5" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="1057.89" y="351.5" ></text>
</g>
<g >
<title>0x11ad1724f (4,735 samples, 99.66%)</title><rect x="10.5" y="613" width="1176.0" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="13.50" y="623.5" >0x11ad1724f</text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="1089.9" y="421" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1092.91" y="431.5" ></text>
</g>
<g >
<title>`cc_setTLSymbolValue (1 samples, 0.02%)</title><rect x="1175.8" y="533" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1178.84" y="543.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="239.0" y="421" width="0.2" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="242.00" y="431.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (38 samples, 0.80%)</title><rect x="973.7" y="357" width="9.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="976.67" y="367.5" ></text>
</g>
<g >
<title>`GC_free_block_ending_at (1 samples, 0.02%)</title><rect x="795.1" y="197" width="0.2" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="798.09" y="207.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::make(unsigned long, int, bool, gctools::smart_p (6 samples, 0.13%)</title><rect x="68.9" y="373" width="1.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="71.86" y="383.5" ></text>
</g>
<g >
<title>`core::Ratio_O::create(gctools::smart_ptr&lt;core::Integer_O&gt;, gcto (1 samples, 0.02%)</title><rect x="836.8" y="373" width="0.3" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="839.82" y="383.5" ></text>
</g>
<g >
<title>`cc_landingpadUnwindMatchFrameElseRethrow (15 samples, 0.32%)</title><rect x="1078.5" y="437" width="3.7" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1081.48" y="447.5" ></text>
</g>
<g >
<title>`cc_enclose (139 samples, 2.93%)</title><rect x="1043.2" y="437" width="34.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1046.21" y="447.5" >`c..</text>
</g>
<g >
<title>`GC_reclaim_block (1 samples, 0.02%)</title><rect x="795.1" y="229" width="0.2" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="798.09" y="239.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="851.7" y="357" width="0.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="854.72" y="367.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::keyTest(gctools::smart_ptr&lt;core::T_O&gt;, gc (5 samples, 0.11%)</title><rect x="219.1" y="341" width="1.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="222.13" y="351.5" ></text>
</g>
<g >
<title>`std::__1::chrono::steady_clock::now() (13 samples, 0.27%)</title><rect x="1032.0" y="405" width="3.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1035.04" y="415.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (19 samples, 0.40%)</title><rect x="651.3" y="341" width="4.7" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="654.29" y="351.5" ></text>
</g>
<g >
<title>`__gmp_default_allocate (5 samples, 0.11%)</title><rect x="900.7" y="373" width="1.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="903.65" y="383.5" ></text>
</g>
<g >
<title>`rand (11 samples, 0.23%)</title><rect x="660.5" y="341" width="2.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="663.48" y="351.5" ></text>
</g>
<g >
<title>`core::clasp_to_mpz(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="854.5" y="373" width="0.2" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="857.45" y="383.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (3 samples, 0.06%)</title><rect x="769.0" y="341" width="0.8" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="772.01" y="351.5" ></text>
</g>
<g >
<title>`core::coerce::inputStreamDesignator(gctools::smart_ptr&lt;core::T_ (1 samples, 0.02%)</title><rect x="1184.8" y="581" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1187.78" y="591.5" ></text>
</g>
<g >
<title>`dyld::findImageContainingAddress(void const*) (1 samples, 0.02%)</title><rect x="1028.8" y="341" width="0.3" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="1031.81" y="351.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (426 samples, 8.97%)</title><rect x="541.5" y="277" width="105.8" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="544.51" y="287.5" >`GC_collect_..</text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="876.3" y="245" width="0.3" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="879.31" y="255.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.04%)</title><rect x="463.0" y="325" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="466.02" y="335.5" ></text>
</g>
<g >
<title>`GC_malloc (2 samples, 0.04%)</title><rect x="1114.5" y="501" width="0.5" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="1117.50" y="511.5" ></text>
</g>
<g >
<title>`GC_clear_stack (6 samples, 0.13%)</title><rect x="540.0" y="309" width="1.5" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="543.02" y="319.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (7 samples, 0.15%)</title><rect x="417.1" y="261" width="1.7" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="420.08" y="271.5" ></text>
</g>
<g >
<title>`core::consume_byte_stack(gctools::smart_ptr&lt;core::T_O&gt;, unsigne (2 samples, 0.04%)</title><rect x="247.2" y="373" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="250.19" y="383.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (3 samples, 0.06%)</title><rect x="1178.8" y="533" width="0.8" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1181.82" y="543.5" ></text>
</g>
<g >
<title>`core::cl__lower_case_p(gctools::smart_ptr&lt;core::Character_I&gt;) (7 samples, 0.15%)</title><rect x="697.2" y="357" width="1.8" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="700.24" y="367.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.08%)</title><rect x="304.3" y="357" width="1.0" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="307.32" y="367.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (2 samples, 0.04%)</title><rect x="997.3" y="309" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1000.27" y="319.5" ></text>
</g>
<g >
<title>`core::clasp_to_double(gctools::smart_ptr&lt;core::Number_O&gt;) (1 samples, 0.02%)</title><rect x="419.8" y="373" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="422.81" y="383.5" ></text>
</g>
<g >
<title>`GC_get_first_part (1 samples, 0.02%)</title><rect x="1149.5" y="309" width="0.3" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="1152.52" y="319.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (21 samples, 0.44%)</title><rect x="670.4" y="373" width="5.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="673.41" y="383.5" ></text>
</g>
<g >
<title>`core::cl__char_code(gctools::smart_ptr&lt;core::Character_I&gt;) (6 samples, 0.13%)</title><rect x="395.2" y="373" width="1.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="398.22" y="383.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="213" width="0.2" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="1057.1" y="293" width="0.3" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="1060.12" y="303.5" ></text>
</g>
<g >
<title>`core::input_stream_read_byte8(gctools::smart_ptr&lt;core::T_O&gt;, un (205 samples, 4.31%)</title><rect x="253.4" y="357" width="50.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="256.40" y="367.5" >`core..</text>
</g>
<g >
<title>`rand (4 samples, 0.08%)</title><rect x="94.4" y="341" width="1.0" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="97.45" y="351.5" ></text>
</g>
<g >
<title>`tlv_get_addr (25 samples, 0.53%)</title><rect x="221.1" y="341" width="6.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="224.11" y="351.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (4 samples, 0.08%)</title><rect x="963.2" y="341" width="1.0" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="966.24" y="351.5" ></text>
</g>
<g >
<title>`wrapped_cl__zerop_Number_sp (1 samples, 0.02%)</title><rect x="1173.4" y="517" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1176.36" y="527.5" ></text>
</g>
<g >
<title>0x11ad17666 (1 samples, 0.02%)</title><rect x="1188.0" y="613" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1191.01" y="623.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="816.2" y="245" width="0.3" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="819.21" y="255.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (15 samples, 0.32%)</title><rect x="924.7" y="341" width="3.8" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="927.74" y="351.5" ></text>
</g>
<g >
<title>`wrapped_cl__lower_case_p_Character_sp (1 samples, 0.02%)</title><rect x="712.4" y="389" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="715.39" y="399.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="1126.2" y="293" width="0.2" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="1129.17" y="303.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (5 samples, 0.11%)</title><rect x="540.3" y="293" width="1.2" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="543.27" y="303.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (2 samples, 0.04%)</title><rect x="730.5" y="245" width="0.5" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="733.52" y="255.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_clos__interpret_dtree_program_SimpleVector_s (1 samples, 0.02%)</title><rect x="166.5" y="421" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="169.47" y="431.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (14 samples, 0.29%)</title><rect x="1066.6" y="261" width="3.4" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="1069.56" y="271.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="419.1" y="341" width="0.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="422.06" y="351.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (9 samples, 0.19%)</title><rect x="953.1" y="341" width="2.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="956.06" y="351.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="541.3" y="245" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="544.26" y="255.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (16 samples, 0.34%)</title><rect x="495.8" y="357" width="4.0" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="498.81" y="367.5" ></text>
</g>
<g >
<title>`__gmpn_divrem_1 (1 samples, 0.02%)</title><rect x="840.3" y="325" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="843.30" y="335.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (15 samples, 0.32%)</title><rect x="984.4" y="357" width="3.7" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="987.35" y="367.5" ></text>
</g>
<g >
<title>`core::core__vref(gctools::smart_ptr&lt;core::AbstractSimpleVector_ (2 samples, 0.04%)</title><rect x="687.5" y="373" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="690.55" y="383.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="816.2" y="293" width="0.3" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="819.21" y="303.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.06%)</title><rect x="461.8" y="325" width="0.7" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="464.78" y="335.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="1086.4" y="373" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1089.43" y="383.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__bzero (2 samples, 0.04%)</title><rect x="1043.5" y="421" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1046.46" y="431.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (23 samples, 0.48%)</title><rect x="1015.6" y="325" width="5.8" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1018.65" y="335.5" ></text>
</g>
<g >
<title>`szone_realloc (5 samples, 0.11%)</title><rect x="904.9" y="309" width="1.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="907.87" y="319.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (1 samples, 0.02%)</title><rect x="1090.9" y="437" width="0.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1093.90" y="447.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (31 samples, 0.65%)</title><rect x="115.1" y="293" width="7.7" height="15.0" fill="rgb(217,74,74)" rx="2" ry="2" />
<text  x="118.06" y="303.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (108 samples, 2.27%)</title><rect x="730.5" y="325" width="26.8" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="733.52" y="335.5" >`..</text>
</g>
<g >
<title>`unw_get_reg (1 samples, 0.02%)</title><rect x="937.9" y="325" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="940.91" y="335.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (7 samples, 0.15%)</title><rect x="417.1" y="245" width="1.7" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="420.08" y="255.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.02%)</title><rect x="278.7" y="325" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="281.74" y="335.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (3 samples, 0.06%)</title><rect x="75.3" y="341" width="0.8" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="78.32" y="351.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.04%)</title><rect x="1006.2" y="405" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="1009.21" y="415.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="722.1" y="373" width="0.2" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="725.07" y="383.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="367.4" y="373" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="370.40" y="383.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="820.2" y="389" width="0.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="823.18" y="399.5" ></text>
</g>
<g >
<title>`cc_TLSymbolValue (3 samples, 0.06%)</title><rect x="1178.1" y="549" width="0.7" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1181.08" y="559.5" ></text>
</g>
<g >
<title>`LOGTEST^COMMON-LISP^FN^^ (36 samples, 0.76%)</title><rect x="375.4" y="389" width="8.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="378.35" y="399.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (17 samples, 0.36%)</title><rect x="996.0" y="341" width="4.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="999.02" y="351.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (4 samples, 0.08%)</title><rect x="757.6" y="357" width="1.0" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="760.59" y="367.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (3 samples, 0.06%)</title><rect x="838.8" y="293" width="0.8" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="841.81" y="303.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$_platform_memmove (2 samples, 0.04%)</title><rect x="261.3" y="325" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="264.35" y="335.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="261" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (4,688 samples, 98.67%)</title><rect x="13.7" y="549" width="1164.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="16.73" y="559.5" >`READ^ECLECTOR.READER^FN^^</text>
</g>
<g >
<title>`core::cl__length(gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.06%)</title><rect x="1170.4" y="517" width="0.7" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1173.38" y="527.5" ></text>
</g>
<g >
<title>`__cxxabiv1::set_registers(_Unwind_Exception*, _Unwind_Context*, (3 samples, 0.06%)</title><rect x="991.8" y="341" width="0.7" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="994.80" y="351.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (43 samples, 0.91%)</title><rect x="795.3" y="277" width="10.7" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="798.34" y="287.5" ></text>
</g>
<g >
<title>`core::MDArray_O::MDArray_O(core::Rank1, unsigned long, gctools: (3 samples, 0.06%)</title><rect x="74.6" y="341" width="0.7" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="77.58" y="351.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (4 samples, 0.08%)</title><rect x="942.6" y="325" width="1.0" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="945.62" y="335.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="1118.0" y="469" width="0.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1120.97" y="479.5" ></text>
</g>
<g >
<title>`GC_reclaim_block (1 samples, 0.02%)</title><rect x="1156.2" y="293" width="0.3" height="15.0" fill="rgb(248,121,121)" rx="2" ry="2" />
<text  x="1159.22" y="303.5" ></text>
</g>
<g >
<title>`__gmpz_realloc (2 samples, 0.04%)</title><rect x="909.6" y="357" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="912.59" y="367.5" ></text>
</g>
<g >
<title>`__gmpz_init_set_si (7 samples, 0.15%)</title><rect x="864.4" y="373" width="1.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="867.39" y="383.5" ></text>
</g>
<g >
<title>`clock_gettime_nsec_np (7 samples, 0.15%)</title><rect x="1032.3" y="373" width="1.7" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1035.29" y="383.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="1155.7" y="389" width="0.3" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="1158.73" y="399.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (4 samples, 0.08%)</title><rect x="963.2" y="325" width="1.0" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="966.24" y="335.5" ></text>
</g>
<g >
<title>`core::input_stream_read_byte8(gctools::smart_ptr&lt;core::T_O&gt;, un (11 samples, 0.23%)</title><rect x="247.7" y="373" width="2.7" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="250.69" y="383.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CORE^FN^^ (4,747 samples, 99.92%)</title><rect x="10.0" y="773" width="1179.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >`CATCH-LAMBDA^CORE^FN^^</text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="884.5" y="341" width="0.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="887.51" y="351.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (12 samples, 0.25%)</title><rect x="984.6" y="341" width="3.0" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="987.60" y="351.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.02%)</title><rect x="926.7" y="213" width="0.3" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="929.73" y="223.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="876.3" y="277" width="0.3" height="15.0" fill="rgb(239,106,106)" rx="2" ry="2" />
<text  x="879.31" y="287.5" ></text>
</g>
<g >
<title>`core::eformat_read_char(gctools::smart_ptr&lt;core::T_O&gt;) (5 samples, 0.11%)</title><rect x="312.3" y="405" width="1.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="315.26" y="415.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (15 samples, 0.32%)</title><rect x="924.7" y="293" width="3.8" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="927.74" y="303.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (2 samples, 0.04%)</title><rect x="1181.3" y="565" width="0.5" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="1184.31" y="575.5" ></text>
</g>
<g >
<title>`__gmpz_tdiv_qr (5 samples, 0.11%)</title><rect x="870.8" y="341" width="1.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="873.85" y="351.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::machHeader() const (1 samples, 0.02%)</title><rect x="1028.6" y="325" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1031.56" y="335.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (2 samples, 0.04%)</title><rect x="996.8" y="309" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="999.77" y="319.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (2 samples, 0.04%)</title><rect x="883.8" y="341" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="886.76" y="351.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (11 samples, 0.23%)</title><rect x="542.8" y="229" width="2.7" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="545.75" y="239.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::set_thread_local_value(gctools::smar (1 samples, 0.02%)</title><rect x="1112.3" y="469" width="0.2" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="1115.26" y="479.5" ></text>
</g>
<g >
<title>`GC_approx_sp (1 samples, 0.02%)</title><rect x="1055.9" y="373" width="0.2" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="1058.88" y="383.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (3 samples, 0.06%)</title><rect x="417.6" y="197" width="0.7" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="420.57" y="207.5" ></text>
</g>
<g >
<title>`core::Rational_O::create(__gmp_expr&lt;__mpz_struct [1], __mpz_str (70 samples, 1.47%)</title><rect x="837.1" y="373" width="17.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="840.07" y="383.5" ></text>
</g>
<g >
<title>`fread (1 samples, 0.02%)</title><rect x="49.5" y="373" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="52.49" y="383.5" ></text>
</g>
<g >
<title>`GC_finalize (1 samples, 0.02%)</title><rect x="542.5" y="229" width="0.3" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="545.50" y="239.5" ></text>
</g>
<g >
<title>`szone_realloc (1 samples, 0.02%)</title><rect x="837.8" y="309" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="840.81" y="319.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (15 samples, 0.32%)</title><rect x="1115.0" y="501" width="3.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1117.99" y="511.5" ></text>
</g>
<g >
<title>`_pthread_mutex_unlock_init_slow (6 samples, 0.13%)</title><rect x="300.1" y="309" width="1.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="303.09" y="319.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__toupper (1 samples, 0.02%)</title><rect x="694.5" y="357" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="697.50" y="367.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (4 samples, 0.08%)</title><rect x="887.0" y="341" width="1.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="889.99" y="351.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="103.1" y="389" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="106.14" y="399.5" ></text>
</g>
<g >
<title>all (4,751 samples, 100%)</title><rect x="10.0" y="1093" width="1180.0" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.02%)</title><rect x="711.4" y="389" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="714.39" y="399.5" ></text>
</g>
<g >
<title>`core::core__syntax_type(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (5 samples, 0.11%)</title><rect x="178.4" y="405" width="1.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="181.39" y="415.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="1186.3" y="581" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1189.27" y="591.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cm_check_index (1 samples, 0.02%)</title><rect x="716.1" y="405" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="719.11" y="415.5" ></text>
</g>
<g >
<title>`GC_get_first_part (1 samples, 0.02%)</title><rect x="793.9" y="325" width="0.2" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="796.85" y="335.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (15 samples, 0.32%)</title><rect x="843.3" y="277" width="3.7" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="846.28" y="287.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (116 samples, 2.44%)</title><rect x="1124.4" y="437" width="28.8" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1127.43" y="447.5" >`g..</text>
</g>
<g >
<title>`cc_gatherVaRestArguments (2 samples, 0.04%)</title><rect x="709.9" y="389" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="712.90" y="399.5" ></text>
</g>
<g >
<title>`CCLASP-COMPILE*^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="501" width="0.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="490.8" y="357" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="493.84" y="367.5" ></text>
</g>
<g >
<title>`core::cl__values(gctools::smart_ptr&lt;core::Vaslist&gt;) (2 samples, 0.04%)</title><rect x="687.1" y="373" width="0.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="690.05" y="383.5" ></text>
</g>
<g >
<title>`wrapped_cl__unread_char_Character_spT_sp (19 samples, 0.40%)</title><rect x="1103.3" y="453" width="4.7" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1106.32" y="463.5" ></text>
</g>
<g >
<title>`FDEFINITION^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="399.2" y="389" width="0.2" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="402.19" y="399.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (5 samples, 0.11%)</title><rect x="540.3" y="261" width="1.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="543.27" y="271.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (2 samples, 0.04%)</title><rect x="729.0" y="309" width="0.5" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="732.03" y="319.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="840.5" y="341" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="843.55" y="351.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="1029.8" y="357" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1032.80" y="367.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="261.8" y="325" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="264.85" y="335.5" ></text>
</g>
<g >
<title>`GC_notify_or_invoke_finalizers (1 samples, 0.02%)</title><rect x="806.0" y="341" width="0.3" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="809.02" y="351.5" ></text>
</g>
<g >
<title>`GC_mark_some (14 samples, 0.29%)</title><rect x="925.0" y="245" width="3.5" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="927.99" y="255.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (99 samples, 2.08%)</title><rect x="1126.2" y="389" width="24.6" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="1129.17" y="399.5" >`..</text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="389" width="0.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="407.6" y="373" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="410.64" y="383.5" ></text>
</g>
<g >
<title>`free_tiny (5 samples, 0.11%)</title><rect x="917.8" y="357" width="1.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="920.79" y="367.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (26 samples, 0.55%)</title><rect x="955.8" y="357" width="6.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="958.79" y="367.5" ></text>
</g>
<g >
<title>`unw_get_reg (1 samples, 0.02%)</title><rect x="990.3" y="309" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="993.31" y="319.5" ></text>
</g>
<g >
<title>`_pthread_mutex_lock_init_slow (3 samples, 0.06%)</title><rect x="279.0" y="325" width="0.7" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="281.98" y="335.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (10 samples, 0.21%)</title><rect x="940.1" y="309" width="2.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="943.14" y="319.5" ></text>
</g>
<g >
<title>`_Unwind_GetLanguageSpecificData (2 samples, 0.04%)</title><rect x="965.5" y="357" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="968.47" y="367.5" ></text>
</g>
<g >
<title>`core::Lisp_O::run() (4,747 samples, 99.92%)</title><rect x="10.0" y="981" width="1179.0" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="13.00" y="991.5" >`core::Lisp_O::run()</text>
</g>
<g >
<title>`cc_safe_symbol_value (6 samples, 0.13%)</title><rect x="1089.2" y="437" width="1.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1092.16" y="447.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="10.0" y="85" width="0.2" height="15.0" fill="rgb(248,119,119)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (2 samples, 0.04%)</title><rect x="793.4" y="325" width="0.5" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="796.36" y="335.5" ></text>
</g>
<g >
<title>`READER-FLOAT-FORMAT^ECLECTOR.READER^FN^^ (3 samples, 0.06%)</title><rect x="931.4" y="421" width="0.8" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="934.45" y="431.5" ></text>
</g>
<g >
<title>`core::DoubleFloat_O::number_type_() const (1 samples, 0.02%)</title><rect x="415.1" y="373" width="0.2" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="418.09" y="383.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (13 samples, 0.27%)</title><rect x="875.6" y="341" width="3.2" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="878.57" y="351.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.04%)</title><rect x="124.2" y="357" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="127.25" y="367.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (4 samples, 0.08%)</title><rect x="233.8" y="405" width="1.0" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="236.78" y="415.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="1000.7" y="341" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1003.74" y="351.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__malloc_with_fallback(unsigned long) (1 samples, 0.02%)</title><rect x="1006.0" y="405" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="1008.96" y="415.5" ></text>
</g>
<g >
<title>`realloc (3 samples, 0.06%)</title><rect x="853.5" y="357" width="0.7" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="856.46" y="367.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (114 samples, 2.40%)</title><rect x="1124.9" y="421" width="28.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1127.93" y="431.5" >`..</text>
</g>
<g >
<title>`__toupper (4 samples, 0.08%)</title><rect x="694.8" y="357" width="0.9" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="697.75" y="367.5" ></text>
</g>
<g >
<title>`__cxa_decrement_exception_refcount (8 samples, 0.17%)</title><rect x="1041.0" y="437" width="2.0" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1043.98" y="447.5" ></text>
</g>
<g >
<title>`__gmpn_divrem_1 (1 samples, 0.02%)</title><rect x="1189.0" y="1077" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1192.01" y="1087.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (122 samples, 2.57%)</title><rect x="727.3" y="357" width="30.3" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="730.29" y="367.5" >`G..</text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="1151.8" y="405" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1154.75" y="415.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="100.4" y="229" width="0.3" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="103.41" y="239.5" ></text>
</g>
<g >
<title>`clock_gettime_nsec_np (1 samples, 0.02%)</title><rect x="1035.0" y="389" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1038.02" y="399.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="1167.2" y="501" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1170.15" y="511.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="837.3" y="357" width="0.3" height="15.0" fill="rgb(206,60,60)" rx="2" ry="2" />
<text  x="840.32" y="367.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="992.5" y="341" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="995.55" y="351.5" ></text>
</g>
<g >
<title>`wrapped_cl__lower_case_p_Character_sp (11 samples, 0.23%)</title><rect x="696.5" y="373" width="2.7" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="699.49" y="383.5" ></text>
</g>
<g >
<title>`VECTOR-PUSH-EXTEND^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="106.9" y="421" width="0.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="109.86" y="431.5" ></text>
</g>
<g >
<title>`cc_makeCell (1 samples, 0.02%)</title><rect x="935.2" y="421" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="938.17" y="431.5" ></text>
</g>
<g >
<title>`GC_mark_and_push (2 samples, 0.04%)</title><rect x="646.8" y="181" width="0.5" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="649.82" y="191.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (3 samples, 0.06%)</title><rect x="1151.0" y="405" width="0.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1154.01" y="415.5" ></text>
</g>
<g >
<title>`GC_mark_from (18 samples, 0.38%)</title><rect x="79.0" y="197" width="4.5" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="82.05" y="207.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="817.7" y="341" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="820.70" y="351.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (2 samples, 0.04%)</title><rect x="409.6" y="389" width="0.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="412.63" y="399.5" ></text>
</g>
<g >
<title>`clock_gettime (9 samples, 0.19%)</title><rect x="1079.0" y="405" width="2.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1081.98" y="415.5" ></text>
</g>
<g >
<title>`malloc (5 samples, 0.11%)</title><rect x="868.1" y="325" width="1.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="871.11" y="335.5" ></text>
</g>
<g >
<title>`cm_vref (1 samples, 0.02%)</title><rect x="106.1" y="421" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="109.12" y="431.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (2 samples, 0.04%)</title><rect x="1180.8" y="549" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1183.81" y="559.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_cl__expt_Number_spNumber_sp (1 samples, 0.02%)</title><rect x="345.8" y="421" width="0.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="348.79" y="431.5" ></text>
</g>
<g >
<title>`DO-DEBUG-INFO-SOURCE-POSITION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="357" width="0.2" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="93.5" y="325" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="96.45" y="335.5" ></text>
</g>
<g >
<title>`free_tiny (4 samples, 0.08%)</title><rect x="1041.7" y="421" width="1.0" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1044.72" y="431.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (2 samples, 0.04%)</title><rect x="81.3" y="181" width="0.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="84.28" y="191.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="102.6" y="373" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="105.64" y="383.5" ></text>
</g>
<g >
<title>`core::cl__float(gctools::smart_ptr&lt;core::Real_O&gt;, gctools::smar (18 samples, 0.38%)</title><rect x="415.3" y="373" width="4.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="418.34" y="383.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="88.7" y="197" width="0.3" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="91.73" y="207.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="10.0" y="101" width="0.2" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>`GC_allocobj (22 samples, 0.46%)</title><rect x="1156.0" y="389" width="5.4" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="1158.97" y="399.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (70 samples, 1.47%)</title><rect x="1057.1" y="341" width="17.4" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="1060.12" y="351.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="917.5" y="341" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="920.54" y="351.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (488 samples, 10.27%)</title><rect x="529.6" y="325" width="121.2" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="532.59" y="335.5" >`GC_generic_mal..</text>
</g>
<g >
<title>`GC_finish_collection (3 samples, 0.06%)</title><rect x="1057.4" y="309" width="0.7" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="1060.37" y="319.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (3 samples, 0.06%)</title><rect x="1117.5" y="485" width="0.7" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="1120.48" y="495.5" ></text>
</g>
<g >
<title>`core::apply1_inner_valist(gctools::smart_ptr&lt;core::Function_O&gt;, (4,364 samples, 91.85%)</title><rect x="29.1" y="501" width="1083.9" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="32.12" y="511.5" >`core::apply1_inner_valist(gctools::smart_ptr&lt;core::Function_O&gt;,</text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (33 samples, 0.69%)</title><rect x="947.1" y="357" width="8.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="950.10" y="367.5" ></text>
</g>
<g >
<title>`core::interpreter_lookup_function_or_error(gctools::smart_ptr&lt;c (5 samples, 0.11%)</title><rect x="1185.0" y="581" width="1.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1188.03" y="591.5" ></text>
</g>
<g >
<title>`core::cl__length(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="1166.7" y="501" width="0.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1169.65" y="511.5" ></text>
</g>
<g >
<title>`READ-WITH-READTABLE-SYNCED^ECLECTOR.READTABLE^FN^^ (1 samples, 0.02%)</title><rect x="11.0" y="581" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="13.99" y="591.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (11 samples, 0.23%)</title><rect x="799.8" y="229" width="2.7" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="802.81" y="239.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.04%)</title><rect x="1105.6" y="405" width="0.5" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="1108.55" y="415.5" ></text>
</g>
<g >
<title>`__gmpz_cdiv_qr (18 samples, 0.38%)</title><rect x="867.9" y="357" width="4.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="870.87" y="367.5" ></text>
</g>
<g >
<title>`funlockfile (5 samples, 0.11%)</title><rect x="303.1" y="341" width="1.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="306.08" y="351.5" ></text>
</g>
<g >
<title>`GC_install_header (1 samples, 0.02%)</title><rect x="535.1" y="261" width="0.2" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="538.05" y="271.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="100.4" y="213" width="0.3" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="103.41" y="223.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (4 samples, 0.08%)</title><rect x="540.3" y="197" width="1.0" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="543.27" y="207.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (2 samples, 0.04%)</title><rect x="127.7" y="405" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="130.73" y="415.5" ></text>
</g>
<g >
<title>`__gmpz_add_ui (2 samples, 0.04%)</title><rect x="867.4" y="357" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="870.37" y="367.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_unlock_slow (3 samples, 0.06%)</title><rect x="48.0" y="325" width="0.7" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="51.00" y="335.5" ></text>
</g>
<g >
<title>`core::clasp_to_double(gctools::smart_ptr&lt;core::Number_O&gt;) (1 samples, 0.02%)</title><rect x="1164.9" y="485" width="0.3" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="1167.91" y="495.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (293 samples, 6.17%)</title><rect x="239.2" y="405" width="72.8" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="242.24" y="415.5" >`core::c..</text>
</g>
<g >
<title>`GC_stopped_mark (66 samples, 1.39%)</title><rect x="1058.1" y="309" width="16.4" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="1061.12" y="319.5" ></text>
</g>
<g >
<title>`GC_notify_or_invoke_finalizers (1 samples, 0.02%)</title><rect x="650.8" y="325" width="0.2" height="15.0" fill="rgb(239,106,106)" rx="2" ry="2" />
<text  x="653.79" y="335.5" ></text>
</g>
<g >
<title>`GC_finalize (1 samples, 0.02%)</title><rect x="1057.4" y="293" width="0.2" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="1060.37" y="303.5" ></text>
</g>
<g >
<title>`VALUES-LIST^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="1174.8" y="533" width="0.3" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="1177.85" y="543.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (2 samples, 0.04%)</title><rect x="970.7" y="341" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="973.69" y="351.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::machHeader() const (1 samples, 0.02%)</title><rect x="975.2" y="293" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="978.16" y="303.5" ></text>
</g>
<g >
<title>`GC_free_block_ending_at (1 samples, 0.02%)</title><rect x="1156.2" y="261" width="0.3" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="1159.22" y="271.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="918.8" y="341" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="921.78" y="351.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="772.0" y="373" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="775.00" y="383.5" ></text>
</g>
<g >
<title>`__cxa_allocate_exception (1 samples, 0.02%)</title><rect x="934.7" y="421" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="937.68" y="431.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="541.0" y="165" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="544.01" y="175.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="1126.2" y="277" width="0.2" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="1129.17" y="287.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (8 samples, 0.17%)</title><rect x="981.1" y="341" width="2.0" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="984.12" y="351.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.02%)</title><rect x="88.5" y="293" width="0.2" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="91.48" y="303.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (3 samples, 0.06%)</title><rect x="937.7" y="357" width="0.7" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="940.66" y="367.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.02%)</title><rect x="805.8" y="245" width="0.2" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="808.77" y="255.5" ></text>
</g>
<g >
<title>`free (3 samples, 0.06%)</title><rect x="862.2" y="389" width="0.7" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="865.15" y="399.5" ></text>
</g>
<g >
<title>`%VERIFY-STRING-ARGS^COMMON-LISP^FN^^ (9 samples, 0.19%)</title><rect x="460.3" y="373" width="2.2" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="463.29" y="383.5" ></text>
</g>
<g >
<title>`IRC-FUNCTION-CREATE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="181" width="0.2" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (11 samples, 0.23%)</title><rect x="119.5" y="213" width="2.8" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="122.53" y="223.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (2 samples, 0.04%)</title><rect x="125.5" y="373" width="0.5" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="128.49" y="383.5" ></text>
</g>
<g >
<title>`core::log_operation_2op(core::boole_ops, gctools::smart_ptr&lt;cor (2 samples, 0.04%)</title><rect x="105.6" y="389" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="108.62" y="399.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (4,341 samples, 91.37%)</title><rect x="31.9" y="469" width="1078.1" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="34.86" y="479.5" >`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^</text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="817.9" y="357" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="820.94" y="367.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (5 samples, 0.11%)</title><rect x="993.8" y="309" width="1.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="996.79" y="319.5" ></text>
</g>
<g >
<title>`wrapped_cl__expt_Number_spNumber_sp (1 samples, 0.02%)</title><rect x="831.4" y="405" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="834.36" y="415.5" ></text>
</g>
<g >
<title>`STRINGP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="707.9" y="389" width="0.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="710.92" y="399.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.06%)</title><rect x="1111.0" y="453" width="0.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1114.02" y="463.5" ></text>
</g>
<g >
<title>`mach_timebase_info (1 samples, 0.02%)</title><rect x="1080.7" y="373" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1083.72" y="383.5" ></text>
</g>
<g >
<title>`cc_enclose (771 samples, 16.23%)</title><rect x="478.9" y="373" width="191.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="481.92" y="383.5" >`cc_enclose</text>
</g>
<g >
<title>`GC_generic_malloc_inner (22 samples, 0.46%)</title><rect x="1156.0" y="405" width="5.4" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="1158.97" y="415.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (13 samples, 0.27%)</title><rect x="647.3" y="309" width="3.2" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="650.31" y="319.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (12 samples, 0.25%)</title><rect x="484.4" y="357" width="3.0" height="15.0" fill="rgb(250,122,122)" rx="2" ry="2" />
<text  x="487.38" y="367.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (5 samples, 0.11%)</title><rect x="808.0" y="405" width="1.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="811.01" y="415.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_typ (2 samples, 0.04%)</title><rect x="966.0" y="357" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="968.97" y="367.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (2 samples, 0.04%)</title><rect x="711.6" y="389" width="0.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="714.64" y="399.5" ></text>
</g>
<g >
<title>`core::cl__char_upcase(gctools::smart_ptr&lt;core::Character_I&gt;) (3 samples, 0.06%)</title><rect x="695.7" y="357" width="0.8" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="698.75" y="367.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (426 samples, 8.97%)</title><rect x="541.5" y="261" width="105.8" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="544.51" y="271.5" >`GC_try_to_c..</text>
</g>
<g >
<title>`unw_init_local (15 samples, 0.32%)</title><rect x="1000.7" y="357" width="3.8" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1003.74" y="367.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="924.7" y="261" width="0.3" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="927.74" y="271.5" ></text>
</g>
<g >
<title>`rand (20 samples, 0.42%)</title><rect x="664.9" y="357" width="5.0" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="667.95" y="367.5" ></text>
</g>
<g >
<title>`COERCE^COMMON-LISP^FN^^ (87 samples, 1.83%)</title><rect x="398.4" y="405" width="21.7" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="401.45" y="415.5" >`..</text>
</g>
<g >
<title>`core::cl__zerop(gctools::smart_ptr&lt;core::Number_O&gt;) (2 samples, 0.04%)</title><rect x="1171.1" y="517" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1174.12" y="527.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (22 samples, 0.46%)</title><rect x="956.0" y="341" width="5.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="959.04" y="351.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="1166.9" y="501" width="0.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="1169.90" y="511.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$_dyld_find_unwind_sections (1 samples, 0.02%)</title><rect x="944.9" y="357" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="947.86" y="367.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cc_initialize_closure (2 samples, 0.04%)</title><rect x="715.1" y="405" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="718.12" y="415.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.04%)</title><rect x="111.8" y="373" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="114.83" y="383.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="1155.7" y="357" width="0.3" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="1158.73" y="367.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="1028.3" y="325" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="1031.31" y="335.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (12 samples, 0.25%)</title><rect x="1001.0" y="293" width="3.0" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="1003.99" y="303.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eql(core::HashGenerator&amp;, gctools::sm (1 samples, 0.02%)</title><rect x="1096.6" y="389" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="1099.61" y="399.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (3 samples, 0.06%)</title><rect x="367.4" y="389" width="0.7" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="370.40" y="399.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="406.6" y="373" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="409.64" y="383.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (22 samples, 0.46%)</title><rect x="1156.0" y="373" width="5.4" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="1158.97" y="383.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="405.4" y="357" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="408.40" y="367.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (11 samples, 0.23%)</title><rect x="644.6" y="213" width="2.7" height="15.0" fill="rgb(224,86,86)" rx="2" ry="2" />
<text  x="647.58" y="223.5" ></text>
</g>
<g >
<title>`szone_size (1 samples, 0.02%)</title><rect x="861.9" y="373" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="864.90" y="383.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_lock_slow (1 samples, 0.02%)</title><rect x="278.5" y="325" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="281.49" y="335.5" ></text>
</g>
<g >
<title>`core::clasp_expt(gctools::smart_ptr&lt;core::Number_O&gt;, gctools::s (4 samples, 0.08%)</title><rect x="825.6" y="405" width="1.0" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="828.64" y="415.5" ></text>
</g>
<g >
<title>`GC_allocobj (44 samples, 0.93%)</title><rect x="795.1" y="325" width="10.9" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="798.09" y="335.5" ></text>
</g>
<g >
<title>`core::cl__digit_char_p(gctools::smart_ptr&lt;core::Character_I&gt;, g (1 samples, 0.02%)</title><rect x="825.4" y="405" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="828.39" y="415.5" ></text>
</g>
<g >
<title>`core::lisp_true() (6 samples, 0.13%)</title><rect x="380.3" y="357" width="1.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="383.32" y="367.5" ></text>
</g>
<g >
<title>`READ-CHAR^COMMON-LISP^FN^^ (16 samples, 0.34%)</title><rect x="170.9" y="421" width="4.0" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="173.94" y="431.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.04%)</title><rect x="463.0" y="341" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="466.02" y="351.5" ></text>
</g>
<g >
<title>`core::Closure_O::describeFunction() const (3 samples, 0.06%)</title><rect x="722.3" y="373" width="0.8" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="725.32" y="383.5" ></text>
</g>
<g >
<title>`wrapped_cl__hash_table_count_HashTableBase_sp (1 samples, 0.02%)</title><rect x="1176.3" y="533" width="0.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1179.34" y="543.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (3 samples, 0.06%)</title><rect x="1056.4" y="357" width="0.7" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1059.38" y="367.5" ></text>
</g>
<g >
<title>`core::lisp_true() (2 samples, 0.04%)</title><rect x="379.1" y="373" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="382.08" y="383.5" ></text>
</g>
<g >
<title>`GC_mark_from (370 samples, 7.79%)</title><rect x="551.4" y="213" width="91.9" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="554.44" y="223.5" >`GC_mark_f..</text>
</g>
<g >
<title>`TWO-ARG- (2 samples, 0.04%)</title><rect x="932.2" y="421" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="935.19" y="431.5" ></text>
</g>
<g >
<title>`INTERPRET-DTREE-PROGRAM^CLOS^FN^^ (17 samples, 0.36%)</title><rect x="166.7" y="421" width="4.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="169.72" y="431.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (108 samples, 2.27%)</title><rect x="730.5" y="277" width="26.8" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="733.52" y="287.5" >`..</text>
</g>
<g >
<title>`GC_allocobj (31 samples, 0.65%)</title><rect x="115.1" y="309" width="7.7" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="118.06" y="319.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="100.4" y="261" width="0.3" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="103.41" y="271.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="123.0" y="357" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="126.01" y="367.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (8 samples, 0.17%)</title><rect x="782.7" y="373" width="2.0" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="785.68" y="383.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (3 samples, 0.06%)</title><rect x="540.5" y="181" width="0.8" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="543.52" y="191.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (69 samples, 1.45%)</title><rect x="594.4" y="197" width="17.1" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="597.41" y="207.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (1 samples, 0.02%)</title><rect x="955.5" y="357" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="958.54" y="367.5" ></text>
</g>
<g >
<title>`__gmpz_sub (2 samples, 0.04%)</title><rect x="841.5" y="357" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="844.54" y="367.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (6 samples, 0.13%)</title><rect x="731.8" y="229" width="1.4" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="734.76" y="239.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_T_spT_spT_spT_sp (4,735 samples, 99.66%)</title><rect x="10.5" y="597" width="1176.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="13.50" y="607.5" >`wrapped_cl__read_T_spT_spT_spT_sp</text>
</g>
<g >
<title>`LOGTEST^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="367.2" y="389" width="0.2" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="370.15" y="399.5" ></text>
</g>
<g >
<title>`GC_allocobj (15 samples, 0.32%)</title><rect x="843.3" y="293" width="3.7" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="846.28" y="303.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::create(unsigned int, gctools::smart_ptr&lt;c (169 samples, 3.56%)</title><rect x="1121.9" y="469" width="42.0" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1124.95" y="479.5" >`co..</text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="115.1" y="245" width="0.2" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="118.06" y="255.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="712.1" y="389" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="715.14" y="399.5" ></text>
</g>
<g >
<title>`std::__1::chrono::steady_clock::now() (11 samples, 0.23%)</title><rect x="1079.0" y="421" width="2.7" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="1081.98" y="431.5" ></text>
</g>
<g >
<title>`GC_mark_from (92 samples, 1.94%)</title><rect x="733.2" y="229" width="22.9" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="736.25" y="239.5" >`..</text>
</g>
<g >
<title>`GC_generic_malloc_inner (31 samples, 0.65%)</title><rect x="115.1" y="325" width="7.7" height="15.0" fill="rgb(206,58,58)" rx="2" ry="2" />
<text  x="118.06" y="335.5" ></text>
</g>
<g >
<title>`mach_timebase_info (1 samples, 0.02%)</title><rect x="1081.0" y="389" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1083.97" y="399.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="1118.2" y="485" width="0.3" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="1121.22" y="495.5" ></text>
</g>
<g >
<title>`core::lisp_true() (2 samples, 0.04%)</title><rect x="1171.9" y="517" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1174.87" y="527.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (10 samples, 0.21%)</title><rect x="469.2" y="357" width="2.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="472.23" y="367.5" ></text>
</g>
<g >
<title>`core::log_operation_2op(core::boole_ops, gctools::smart_ptr&lt;cor (9 samples, 0.19%)</title><rect x="382.1" y="357" width="2.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="385.06" y="367.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="878.5" y="309" width="0.3" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="881.55" y="319.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (7 samples, 0.15%)</title><rect x="227.8" y="421" width="1.8" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="230.82" y="431.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="816.2" y="261" width="0.3" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="819.21" y="271.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="88.2" y="293" width="0.3" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="91.24" y="303.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.02%)</title><rect x="730.3" y="325" width="0.2" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="733.27" y="335.5" ></text>
</g>
<g >
<title>`mach_absolute_time (2 samples, 0.04%)</title><rect x="1034.0" y="373" width="0.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1037.02" y="383.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="878.8" y="341" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="881.79" y="351.5" ></text>
</g>
<g >
<title>`GC_mark_from (13 samples, 0.27%)</title><rect x="89.0" y="197" width="3.2" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="91.98" y="207.5" ></text>
</g>
<g >
<title>`READ-CHAR^ECLECTOR.BASE^FN^^ (38 samples, 0.80%)</title><rect x="42.0" y="453" width="9.5" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="45.04" y="463.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.04%)</title><rect x="873.6" y="357" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="876.58" y="367.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (4 samples, 0.08%)</title><rect x="868.4" y="293" width="1.0" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="871.36" y="303.5" ></text>
</g>
<g >
<title>`_Unwind_GetLanguageSpecificData (1 samples, 0.02%)</title><rect x="968.0" y="341" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="970.96" y="351.5" ></text>
</g>
<g >
<title>`ZEROP^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="1175.3" y="533" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="1178.35" y="543.5" ></text>
</g>
<g >
<title>`wrapped_cl__zerop_Number_sp (8 samples, 0.17%)</title><rect x="379.8" y="373" width="2.0" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="382.82" y="383.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (127 samples, 2.67%)</title><rect x="1045.9" y="421" width="31.6" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1048.95" y="431.5" >`g..</text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_byte8_t_O, unsig (6 samples, 0.13%)</title><rect x="393.2" y="389" width="1.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="396.23" y="399.5" ></text>
</g>
<g >
<title>`GC_install_counts (1 samples, 0.02%)</title><rect x="535.3" y="277" width="0.2" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="538.30" y="287.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (11 samples, 0.23%)</title><rect x="876.1" y="325" width="2.7" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="879.06" y="335.5" ></text>
</g>
<g >
<title>`core::maybeFixRehashThreshold(double) (3 samples, 0.06%)</title><rect x="1153.2" y="453" width="0.8" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="1156.24" y="463.5" ></text>
</g>
<g >
<title>`_Unwind_GetIP (1 samples, 0.02%)</title><rect x="937.9" y="341" width="0.3" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="940.91" y="351.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::HashTableEql_O&gt; gctools::GCObjectAppro (1 samples, 0.02%)</title><rect x="1164.7" y="469" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="1167.67" y="479.5" ></text>
</g>
<g >
<title>`core::lisp_true() (1 samples, 0.02%)</title><rect x="1173.4" y="501" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1176.36" y="511.5" ></text>
</g>
<g >
<title>`GC_reclaim_block (1 samples, 0.02%)</title><rect x="924.7" y="213" width="0.3" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="927.74" y="223.5" ></text>
</g>
<g >
<title>`FIXNUMP^CORE^FN^^ (3 samples, 0.06%)</title><rect x="61.2" y="421" width="0.7" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="64.16" y="431.5" ></text>
</g>
<g >
<title>`GC_allocobj (8 samples, 0.17%)</title><rect x="911.3" y="293" width="2.0" height="15.0" fill="rgb(224,86,86)" rx="2" ry="2" />
<text  x="914.33" y="303.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (310 samples, 6.52%)</title><rect x="239.2" y="421" width="77.0" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="242.24" y="431.5" >`wrapped..</text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="1074.5" y="357" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1077.51" y="367.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (29 samples, 0.61%)</title><rect x="115.6" y="261" width="7.2" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="118.56" y="271.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (17 samples, 0.36%)</title><rect x="843.0" y="341" width="4.3" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="846.03" y="351.5" ></text>
</g>
<g >
<title>`GC_freehblk (1 samples, 0.02%)</title><rect x="795.1" y="213" width="0.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="798.09" y="223.5" ></text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (1 samples, 0.02%)</title><rect x="938.2" y="341" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="941.15" y="351.5" ></text>
</g>
<g >
<title>`GC_mark_from (7 samples, 0.15%)</title><rect x="876.8" y="213" width="1.7" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="879.81" y="223.5" ></text>
</g>
<g >
<title>`MAKE-ARRAY^COMMON-LISP^FN^^ (3 samples, 0.06%)</title><rect x="39.1" y="453" width="0.7" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="42.06" y="463.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.02%)</title><rect x="913.1" y="213" width="0.2" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="916.07" y="223.5" ></text>
</g>
<g >
<title>`pthread_once (1 samples, 0.02%)</title><rect x="1004.7" y="357" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1007.72" y="367.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="166.2" y="421" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="169.22" y="431.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="88.7" y="213" width="0.3" height="15.0" fill="rgb(226,87,87)" rx="2" ry="2" />
<text  x="91.73" y="223.5" ></text>
</g>
<g >
<title>`wrapped_cl__readtable_case_T_sp (2 samples, 0.04%)</title><rect x="712.6" y="389" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="715.64" y="399.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.04%)</title><rect x="1184.3" y="565" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1187.29" y="575.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (4 samples, 0.08%)</title><rect x="900.9" y="325" width="1.0" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="903.90" y="335.5" ></text>
</g>
<g >
<title>`GC_mark_from (13 samples, 0.27%)</title><rect x="843.8" y="213" width="3.2" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="846.77" y="223.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (3 samples, 0.06%)</title><rect x="679.1" y="373" width="0.8" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="682.11" y="383.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.02%)</title><rect x="114.3" y="341" width="0.3" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="117.31" y="351.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (15 samples, 0.32%)</title><rect x="843.3" y="261" width="3.7" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="846.28" y="271.5" ></text>
</g>
<g >
<title>`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="963.2" y="309" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="966.24" y="319.5" ></text>
</g>
<g >
<title>`GC_clear_marks (4 samples, 0.08%)</title><rect x="541.5" y="245" width="1.0" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="544.51" y="255.5" ></text>
</g>
<g >
<title>`__gmpz_add_ui (1 samples, 0.02%)</title><rect x="906.1" y="357" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="909.11" y="367.5" ></text>
</g>
<g >
<title>`TERMINATE-TOKEN^ECLECTOR.READER^FN^^ (2,836 samples, 59.69%)</title><rect x="335.6" y="437" width="704.4" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="338.61" y="447.5" >`TERMINATE-TOKEN^ECLECTOR.READER^FN^^</text>
</g>
<g >
<title>`__gmpz_cdiv_qr (12 samples, 0.25%)</title><rect x="906.4" y="357" width="2.9" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="909.36" y="367.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (3 samples, 0.06%)</title><rect x="1116.7" y="469" width="0.8" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="1119.73" y="479.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__bzero (1 samples, 0.02%)</title><rect x="531.1" y="309" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="534.08" y="319.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (25 samples, 0.53%)</title><rect x="400.4" y="373" width="6.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="403.44" y="383.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (4 samples, 0.08%)</title><rect x="785.7" y="389" width="0.9" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="788.66" y="399.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.02%)</title><rect x="821.2" y="389" width="0.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="824.17" y="399.5" ></text>
</g>
<g >
<title>`core::apply1_inner_valist(gctools::smart_ptr&lt;core::Function_O&gt;, (1 samples, 0.02%)</title><rect x="10.0" y="293" width="0.2" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (2 samples, 0.04%)</title><rect x="805.3" y="245" width="0.5" height="15.0" fill="rgb(239,108,108)" rx="2" ry="2" />
<text  x="808.28" y="255.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (2 samples, 0.04%)</title><rect x="773.0" y="389" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="775.99" y="399.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.04%)</title><rect x="1090.2" y="421" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1093.16" y="431.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (3 samples, 0.06%)</title><rect x="1173.6" y="517" width="0.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1176.61" y="527.5" ></text>
</g>
<g >
<title>`flockfile (32 samples, 0.67%)</title><rect x="280.7" y="325" width="8.0" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="283.72" y="335.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="100.7" y="341" width="0.2" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="103.65" y="351.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleCharacterString_O&gt; gctools::GCOb (49 samples, 1.03%)</title><rect x="112.6" y="373" width="12.1" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="115.58" y="383.5" ></text>
</g>
<g >
<title>`__gmpz_realloc (2 samples, 0.04%)</title><rect x="836.3" y="373" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="839.32" y="383.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="867.1" y="357" width="0.3" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="870.12" y="367.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="100.4" y="197" width="0.3" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="103.41" y="207.5" ></text>
</g>
<g >
<title>`NORMALIZE-TYPE^CORE^FN^^ (3 samples, 0.06%)</title><rect x="786.6" y="405" width="0.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="789.65" y="415.5" ></text>
</g>
<g >
<title>`core::Ratio_O::create(gctools::smart_ptr&lt;core::Integer_O&gt;, gcto (37 samples, 0.78%)</title><rect x="842.5" y="357" width="9.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="845.53" y="367.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.02%)</title><rect x="92.2" y="197" width="0.3" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="95.21" y="207.5" ></text>
</g>
<g >
<title>`GC_add_to_black_list_stack (1 samples, 0.02%)</title><rect x="611.3" y="181" width="0.2" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="614.30" y="191.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="816.2" y="341" width="0.3" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="819.21" y="351.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$_platform_memmove (5 samples, 0.11%)</title><rect x="1008.2" y="389" width="1.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1011.19" y="399.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (3 samples, 0.06%)</title><rect x="474.9" y="341" width="0.8" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="477.95" y="351.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="112.3" y="373" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="115.33" y="383.5" ></text>
</g>
<g >
<title>`core::eformat_read_char(gctools::smart_ptr&lt;core::T_O&gt;) (269 samples, 5.66%)</title><rect x="244.0" y="389" width="66.8" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="246.96" y="399.5" >`core::..</text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="123.8" y="357" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="126.75" y="367.5" ></text>
</g>
<g >
<title>`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^ (4,747 samples, 99.92%)</title><rect x="10.0" y="677" width="1179.0" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`_dyld_find_unwind_sections (26 samples, 0.55%)</title><rect x="974.7" y="341" width="6.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="977.66" y="351.5" ></text>
</g>
<g >
<title>`free_tiny (13 samples, 0.27%)</title><rect x="920.5" y="373" width="3.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="923.52" y="383.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="1086.9" y="421" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1089.93" y="431.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1150.8" y="389" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1153.76" y="399.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (5 samples, 0.11%)</title><rect x="834.1" y="341" width="1.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="837.09" y="351.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (26 samples, 0.55%)</title><rect x="988.6" y="357" width="6.4" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="991.57" y="367.5" ></text>
</g>
<g >
<title>`IRC-CCLASP-FUNCTION-CREATE^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="197" width="0.2" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>`wrapped_core__logand_2op_Integer_spInteger_sp (5 samples, 0.11%)</title><rect x="397.2" y="389" width="1.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="400.21" y="399.5" ></text>
</g>
<g >
<title>`core::Symbol_O::fboundp() const (1 samples, 0.02%)</title><rect x="412.6" y="357" width="0.3" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="415.61" y="367.5" ></text>
</g>
<g >
<title>`GC_reclaim_block (1 samples, 0.02%)</title><rect x="1057.9" y="261" width="0.2" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="1060.87" y="271.5" ></text>
</g>
<g >
<title>`wrapped_cl__fdefinition_T_sp (1 samples, 0.02%)</title><rect x="414.8" y="389" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="417.84" y="399.5" ></text>
</g>
<g >
<title>`core::MDArray_O::vectorPushExtend(gctools::smart_ptr&lt;core::T_O&gt; (69 samples, 1.45%)</title><rect x="109.6" y="405" width="17.1" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="112.60" y="415.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (4 samples, 0.08%)</title><rect x="540.3" y="245" width="1.0" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="543.27" y="255.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (3 samples, 0.06%)</title><rect x="912.3" y="197" width="0.8" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="915.32" y="207.5" ></text>
</g>
<g >
<title>`core::Closure_O::describeFunction() const (2 samples, 0.04%)</title><rect x="1075.3" y="405" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="1078.25" y="415.5" ></text>
</g>
<g >
<title>`__gmpn_invert_limb (3 samples, 0.06%)</title><rect x="1189.3" y="1077" width="0.7" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1192.25" y="1087.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="1111.8" y="453" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1114.76" y="463.5" ></text>
</g>
<g >
<title>`READ-CHAR^COMMON-LISP^FN^^ (15 samples, 0.32%)</title><rect x="331.9" y="437" width="3.7" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="334.89" y="447.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (20 samples, 0.42%)</title><rect x="956.5" y="309" width="5.0" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="959.53" y="319.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="1074.8" y="389" width="0.2" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="1077.76" y="399.5" ></text>
</g>
<g >
<title>`__fread (2 samples, 0.04%)</title><rect x="46.0" y="341" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="49.01" y="351.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="788.9" y="405" width="0.5" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="791.88" y="415.5" ></text>
</g>
<g >
<title>`unw_init_local (27 samples, 0.57%)</title><rect x="955.5" y="373" width="6.7" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="958.54" y="383.5" ></text>
</g>
<g >
<title>`GC_approx_sp (1 samples, 0.02%)</title><rect x="100.4" y="165" width="0.3" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="103.41" y="175.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (2 samples, 0.04%)</title><rect x="540.5" y="165" width="0.5" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="543.52" y="175.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cc_enclose (1 samples, 0.02%)</title><rect x="38.6" y="453" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="41.56" y="463.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="884.8" y="341" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="887.75" y="351.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_cl__read_T_spT_spT_spT_sp (1 samples, 0.02%)</title><rect x="1188.3" y="613" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1191.26" y="623.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="651.0" y="325" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="654.04" y="335.5" ></text>
</g>
<g >
<title>`_Unwind_GetLanguageSpecificData (1 samples, 0.02%)</title><rect x="990.6" y="325" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="993.56" y="335.5" ></text>
</g>
<g >
<title>`core::Closure_O::describeFunction() const (8 samples, 0.17%)</title><rect x="657.2" y="341" width="2.0" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="660.25" y="351.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (426 samples, 8.97%)</title><rect x="541.5" y="309" width="105.8" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="544.51" y="319.5" >`GC_generic_..</text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (1 samples, 0.02%)</title><rect x="46.3" y="325" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="49.26" y="335.5" ></text>
</g>
<g >
<title>`__gmpz_mul (3 samples, 0.06%)</title><rect x="835.6" y="373" width="0.7" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="838.58" y="383.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="842.0" y="357" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="845.04" y="367.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (3 samples, 0.06%)</title><rect x="758.6" y="357" width="0.7" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="761.58" y="367.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (27 samples, 0.57%)</title><rect x="1155.0" y="437" width="6.7" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="1157.98" y="447.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (8 samples, 0.17%)</title><rect x="911.3" y="277" width="2.0" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="914.33" y="287.5" ></text>
</g>
<g >
<title>`realloc (1 samples, 0.02%)</title><rect x="919.5" y="357" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="922.53" y="367.5" ></text>
</g>
<g >
<title>`cc_unwind (400 samples, 8.42%)</title><rect x="936.7" y="421" width="99.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="939.66" y="431.5" >`cc_unwind</text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (4,747 samples, 99.92%)</title><rect x="10.0" y="789" width="1179.0" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="13.00" y="799.5" >`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo</text>
</g>
<g >
<title>`GC_header_cache_miss (4 samples, 0.08%)</title><rect x="89.7" y="181" width="1.0" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="92.73" y="191.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (2 samples, 0.04%)</title><rect x="400.9" y="357" width="0.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="403.93" y="367.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (3 samples, 0.06%)</title><rect x="789.6" y="389" width="0.8" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="792.63" y="399.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.02%)</title><rect x="1139.1" y="229" width="0.2" height="15.0" fill="rgb(206,60,60)" rx="2" ry="2" />
<text  x="1142.08" y="239.5" ></text>
</g>
<g >
<title>`__gmpz_mul (3 samples, 0.06%)</title><rect x="832.6" y="389" width="0.7" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="835.60" y="399.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (48 samples, 1.01%)</title><rect x="971.2" y="373" width="11.9" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="974.19" y="383.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (1 samples, 0.02%)</title><rect x="934.4" y="421" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="937.43" y="431.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.04%)</title><rect x="716.6" y="405" width="0.5" height="15.0" fill="rgb(206,58,58)" rx="2" ry="2" />
<text  x="719.61" y="415.5" ></text>
</g>
<g >
<title>`clock_gettime (5 samples, 0.11%)</title><rect x="1006.7" y="405" width="1.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1009.70" y="415.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="759.8" y="357" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="762.83" y="367.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (6 samples, 0.13%)</title><rect x="1148.0" y="309" width="1.5" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="1151.03" y="319.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::set_thread_local_value(gctools::smar (3 samples, 0.06%)</title><rect x="1101.3" y="453" width="0.8" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="1104.33" y="463.5" ></text>
</g>
<g >
<title>`__gmpn_divrem_1 (3 samples, 0.06%)</title><rect x="871.1" y="325" width="0.7" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="874.09" y="335.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (7 samples, 0.15%)</title><rect x="876.8" y="245" width="1.7" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="879.81" y="255.5" ></text>
</g>
<g >
<title>`core::clasp_gcd(gctools::smart_ptr&lt;core::Integer_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="883.5" y="341" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="886.51" y="351.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eql(core::HashGenerator&amp;, gctools::sm (7 samples, 0.15%)</title><rect x="208.4" y="341" width="1.8" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="211.45" y="351.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (2 samples, 0.04%)</title><rect x="418.3" y="197" width="0.5" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="421.32" y="207.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (70 samples, 1.47%)</title><rect x="790.4" y="389" width="17.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="793.37" y="399.5" ></text>
</g>
<g >
<title>`libunwind::Registers_x86_64::jumpto() (1 samples, 0.02%)</title><rect x="1037.0" y="421" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1040.00" y="431.5" ></text>
</g>
<g >
<title>`GC_approx_sp (1 samples, 0.02%)</title><rect x="816.0" y="357" width="0.2" height="15.0" fill="rgb(213,68,68)" rx="2" ry="2" />
<text  x="818.96" y="367.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__error (7 samples, 0.15%)</title><rect x="259.6" y="325" width="1.7" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="262.61" y="335.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (16 samples, 0.34%)</title><rect x="939.6" y="341" width="4.0" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="942.64" y="351.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (8 samples, 0.17%)</title><rect x="688.0" y="373" width="2.0" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="691.05" y="383.5" ></text>
</g>
<g >
<title>`__gmpz_cmp_ui (1 samples, 0.02%)</title><rect x="835.3" y="373" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="838.33" y="383.5" ></text>
</g>
<g >
<title>`SIMPLE-TYPE-PREDICATE^CORE^FN^^ (4 samples, 0.08%)</title><rect x="408.1" y="389" width="1.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="411.14" y="399.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (16 samples, 0.34%)</title><rect x="410.1" y="389" width="4.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="413.12" y="399.5" ></text>
</g>
<g >
<title>`core::core__make_vector(gctools::smart_ptr&lt;core::T_O&gt;, unsigned (6 samples, 0.13%)</title><rect x="67.1" y="389" width="1.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="70.12" y="399.5" ></text>
</g>
<g >
<title>`NSTRING-UPCASE^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="787.4" y="405" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="790.39" y="415.5" ></text>
</g>
<g >
<title>`gctools::GCObjectDefaultConstructorAllocator&lt;core::DoubleFloat_ (14 samples, 0.29%)</title><rect x="416.1" y="357" width="3.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="419.08" y="367.5" ></text>
</g>
<g >
<title>`MAKE-INTEGER-ACCUMULATOR^ECLECTOR.READER^FN^^ (229 samples, 4.82%)</title><rect x="717.4" y="405" width="56.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="720.35" y="415.5" >`MAKE-..</text>
</g>
<g >
<title>`GC_try_to_collect_inner (70 samples, 1.47%)</title><rect x="1057.1" y="325" width="17.4" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="1060.12" y="335.5" ></text>
</g>
<g >
<title>`core::Ratio_O::setf_numerator_denominator(gctools::smart_ptr&lt;co (1 samples, 0.02%)</title><rect x="885.0" y="357" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="888.00" y="367.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (4 samples, 0.08%)</title><rect x="854.7" y="373" width="1.0" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="857.70" y="383.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (13 samples, 0.27%)</title><rect x="536.8" y="293" width="3.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="539.79" y="303.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (3 samples, 0.06%)</title><rect x="1152.2" y="405" width="0.8" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1155.25" y="415.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="1155.7" y="373" width="0.3" height="15.0" fill="rgb(252,127,127)" rx="2" ry="2" />
<text  x="1158.73" y="383.5" ></text>
</g>
<g >
<title>`core::core__hash_eql(gctools::smart_ptr&lt;core::List_V&gt;) (1 samples, 0.02%)</title><rect x="101.4" y="389" width="0.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="104.40" y="399.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="689.3" y="357" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="692.29" y="367.5" ></text>
</g>
<g >
<title>`GC_mark_some (86 samples, 1.81%)</title><rect x="1126.4" y="293" width="21.4" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="1129.42" y="303.5" >`..</text>
</g>
<g >
<title>`LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="421" width="0.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (17 samples, 0.36%)</title><rect x="843.0" y="325" width="4.3" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="846.03" y="335.5" ></text>
</g>
<g >
<title>`core::contagen_add(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (113 samples, 2.38%)</title><rect x="834.1" y="389" width="28.1" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="837.09" y="399.5" >`..</text>
</g>
<g >
<title>`core::cl__float(gctools::smart_ptr&lt;core::Real_O&gt;, gctools::smar (1 samples, 0.02%)</title><rect x="414.6" y="389" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="417.59" y="399.5" ></text>
</g>
<g >
<title>`__cxxabiv1::set_registers(_Unwind_Exception*, _Unwind_Context*, (4 samples, 0.08%)</title><rect x="938.4" y="357" width="1.0" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="941.40" y="367.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="730.3" y="293" width="0.2" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="733.27" y="303.5" ></text>
</g>
<g >
<title>`GC_mark_from (38 samples, 0.80%)</title><rect x="795.8" y="245" width="9.5" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="798.84" y="255.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="1153.0" y="405" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1155.99" y="415.5" ></text>
</g>
<g >
<title>`SYNTAX-TYPE^ECLECTOR.READTABLE^((READTABLE T))^METHOD^^ (208 samples, 4.38%)</title><rect x="176.2" y="421" width="51.6" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="179.16" y="431.5" >`SYNT..</text>
</g>
<g >
<title>`core::core__syntax_type(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (10 samples, 0.21%)</title><rect x="1095.1" y="421" width="2.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1098.12" y="431.5" ></text>
</g>
<g >
<title>`GC_allocobj (426 samples, 8.97%)</title><rect x="541.5" y="293" width="105.8" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="544.51" y="303.5" >`GC_allocobj</text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (20 samples, 0.42%)</title><rect x="1114.0" y="517" width="5.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="1117.00" y="527.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.02%)</title><rect x="1038.5" y="421" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1041.50" y="431.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (3 samples, 0.06%)</title><rect x="461.8" y="341" width="0.7" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="464.78" y="351.5" ></text>
</g>
<g >
<title>`EMF-FROM-CONTF.LAMBDA^CLOS^FN^^ (4,376 samples, 92.11%)</title><rect x="26.1" y="517" width="1086.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="29.14" y="527.5" >`EMF-FROM-CONTF.LAMBDA^CLOS^FN^^</text>
</g>
<g >
<title>`MAPCAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="661" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (2 samples, 0.04%)</title><rect x="756.8" y="229" width="0.5" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="759.84" y="239.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (7 samples, 0.15%)</title><rect x="81.8" y="181" width="1.7" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="84.78" y="191.5" ></text>
</g>
<g >
<title>`TWO-ARG-/^CORE^FN^^ (1 samples, 0.02%)</title><rect x="934.2" y="421" width="0.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="937.18" y="431.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="843.3" y="229" width="0.2" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="846.28" y="239.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.04%)</title><rect x="51.0" y="421" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="53.98" y="431.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="437" width="0.2" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (3 samples, 0.06%)</title><rect x="838.8" y="277" width="0.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="841.81" y="287.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (128 samples, 2.69%)</title><rect x="611.5" y="197" width="31.8" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="614.55" y="207.5" >`G..</text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (665 samples, 14.00%)</title><rect x="499.8" y="357" width="165.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="502.78" y="367.5" >`gctools::smart_ptr&lt;c..</text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.02%)</title><rect x="417.1" y="213" width="0.2" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="420.08" y="223.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (8 samples, 0.17%)</title><rect x="1058.1" y="277" width="2.0" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="1061.12" y="287.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (8 samples, 0.17%)</title><rect x="945.1" y="357" width="2.0" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="948.11" y="367.5" ></text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (1 samples, 0.02%)</title><rect x="937.4" y="357" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="940.41" y="367.5" ></text>
</g>
<g >
<title>`LOGTEST^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="717.1" y="405" width="0.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="720.11" y="415.5" ></text>
</g>
<g >
<title>`GC_mark_some (7 samples, 0.15%)</title><rect x="876.8" y="229" width="1.7" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="879.81" y="239.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.06%)</title><rect x="250.4" y="373" width="0.8" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="253.42" y="383.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (14 samples, 0.29%)</title><rect x="487.4" y="357" width="3.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="490.36" y="367.5" ></text>
</g>
<g >
<title>`unw_get_reg (1 samples, 0.02%)</title><rect x="955.3" y="373" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="958.29" y="383.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (2 samples, 0.04%)</title><rect x="943.6" y="373" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="946.62" y="383.5" ></text>
</g>
<g >
<title>`__gmpz_init_set_si (2 samples, 0.04%)</title><rect x="901.9" y="373" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="904.89" y="383.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (522 samples, 10.99%)</title><rect x="521.6" y="341" width="129.7" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="524.64" y="351.5" >`GC_malloc_kind</text>
</g>
<g >
<title>`GC_mark_some (14 samples, 0.29%)</title><rect x="843.5" y="229" width="3.5" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="846.53" y="239.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="837.8" y="293" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="840.81" y="303.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (4 samples, 0.08%)</title><rect x="540.3" y="213" width="1.0" height="15.0" fill="rgb(237,105,105)" rx="2" ry="2" />
<text  x="543.27" y="223.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cc_rewind_va_list (1 samples, 0.02%)</title><rect x="466.8" y="373" width="0.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="469.75" y="383.5" ></text>
</g>
<g >
<title>`core::coerce::inputStreamDesignator(gctools::smart_ptr&lt;core::T_ (1 samples, 0.02%)</title><rect x="312.0" y="405" width="0.3" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="315.02" y="415.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (101 samples, 2.13%)</title><rect x="937.2" y="405" width="25.0" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="940.16" y="415.5" >`..</text>
</g>
<g >
<title>`core::HashTableEql_O::keyTest(gctools::smart_ptr&lt;core::T_O&gt;, gc (2 samples, 0.04%)</title><rect x="194.3" y="357" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="197.29" y="367.5" ></text>
</g>
<g >
<title>`REP^CORE^FN^^ (4,747 samples, 99.92%)</title><rect x="10.0" y="709" width="1179.0" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >`REP^CORE^FN^^</text>
</g>
<g >
<title>`szone_malloc_should_clear (4 samples, 0.08%)</title><rect x="834.3" y="325" width="1.0" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="837.34" y="335.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (2 samples, 0.04%)</title><rect x="1000.2" y="357" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="1003.25" y="367.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (2 samples, 0.04%)</title><rect x="731.3" y="229" width="0.5" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="734.26" y="239.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="843.3" y="245" width="0.2" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="846.28" y="255.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(long long) (3 samples, 0.06%)</title><rect x="902.9" y="373" width="0.7" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="905.89" y="383.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.02%)</title><rect x="102.6" y="405" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="105.64" y="415.5" ></text>
</g>
<g >
<title>`wrapped_cl__vector_push_extend_T_spVector_spsize_t (6 samples, 0.13%)</title><rect x="1092.1" y="437" width="1.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1095.14" y="447.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (8 samples, 0.17%)</title><rect x="876.6" y="309" width="1.9" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="879.56" y="319.5" ></text>
</g>
<g >
<title>`pthread_getspecific (2 samples, 0.04%)</title><rect x="93.0" y="325" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="95.96" y="335.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.02%)</title><rect x="11.2" y="581" width="0.3" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="14.24" y="591.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (45 samples, 0.95%)</title><rect x="944.1" y="373" width="11.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="947.11" y="383.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="769.5" y="325" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="772.51" y="335.5" ></text>
</g>
<g >
<title>`TWO-ARG-*^CORE^FN^^ (3 samples, 0.06%)</title><rect x="788.1" y="405" width="0.8" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="791.14" y="415.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (2 samples, 0.04%)</title><rect x="731.3" y="245" width="0.5" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="734.26" y="255.5" ></text>
</g>
<g >
<title>`cc_setTLSymbolValue (1 samples, 0.02%)</title><rect x="1112.0" y="469" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1115.01" y="479.5" ></text>
</g>
<g >
<title>`FLOAT^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="716.4" y="405" width="0.2" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="719.36" y="415.5" ></text>
</g>
<g >
<title>`GC_should_collect (1 samples, 0.02%)</title><rect x="650.5" y="309" width="0.3" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="653.54" y="319.5" ></text>
</g>
<g >
<title>`core::eformat_unread_char(gctools::smart_ptr&lt;core::T_O&gt;, int) (11 samples, 0.23%)</title><rect x="1103.8" y="421" width="2.7" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1106.82" y="431.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (9 samples, 0.19%)</title><rect x="416.6" y="341" width="2.2" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="419.58" y="351.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="1031.8" y="405" width="0.2" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="1034.79" y="415.5" ></text>
</g>
<g >
<title>`core::Ratio_O::create(gctools::smart_ptr&lt;core::Integer_O&gt;, gcto (29 samples, 0.61%)</title><rect x="910.3" y="357" width="7.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="913.34" y="367.5" ></text>
</g>
<g >
<title>`__gmpz_add (3 samples, 0.06%)</title><rect x="831.9" y="389" width="0.7" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="834.85" y="399.5" ></text>
</g>
<g >
<title>`wrapped_contagen_div_Number_spNumber_sp (122 samples, 2.57%)</title><rect x="863.1" y="405" width="30.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="866.15" y="415.5" >`w..</text>
</g>
<g >
<title>`GC_generic_malloc_many (11 samples, 0.23%)</title><rect x="815.5" y="373" width="2.7" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="818.46" y="383.5" ></text>
</g>
<g >
<title>`__gmpz_cmp_ui (1 samples, 0.02%)</title><rect x="863.9" y="373" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="866.89" y="383.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="760.1" y="357" width="0.2" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="763.07" y="367.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (10 samples, 0.21%)</title><rect x="997.8" y="325" width="2.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1000.76" y="335.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="816.2" y="229" width="0.3" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="819.21" y="239.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (20 samples, 0.42%)</title><rect x="88.0" y="325" width="5.0" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="90.99" y="335.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (14 samples, 0.29%)</title><rect x="675.6" y="373" width="3.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="678.63" y="383.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (4 samples, 0.08%)</title><rect x="820.4" y="405" width="1.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="823.43" y="415.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (8 samples, 0.17%)</title><rect x="876.6" y="261" width="1.9" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="879.56" y="271.5" ></text>
</g>
<g >
<title>`wrapped_core__syntax_type_T_spCharacter_sp (194 samples, 4.08%)</title><rect x="179.6" y="405" width="48.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="182.64" y="415.5" >`wra..</text>
</g>
<g >
<title>`wrapped_core__syntax_type_T_spCharacter_sp (47 samples, 0.99%)</title><rect x="320.2" y="421" width="11.7" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="323.21" y="431.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (9 samples, 0.19%)</title><rect x="780.4" y="373" width="2.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="783.44" y="383.5" ></text>
</g>
<g >
<title>`GC_get_first_part (1 samples, 0.02%)</title><rect x="1149.3" y="293" width="0.2" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="1152.27" y="303.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="847.0" y="309" width="0.3" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="850.00" y="319.5" ></text>
</g>
<g >
<title>`READTABLE-CASE^COMMON-LISP^FN^^ (4 samples, 0.08%)</title><rect x="706.4" y="389" width="1.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="709.43" y="399.5" ></text>
</g>
<g >
<title>`LAYOUT-PROCEDURE*^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="373" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>`pthread_getspecific (2 samples, 0.04%)</title><rect x="771.5" y="373" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="774.50" y="383.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (17 samples, 0.36%)</title><rect x="1070.0" y="261" width="4.3" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="1073.04" y="271.5" ></text>
</g>
<g >
<title>`GC_mark_some (410 samples, 8.63%)</title><rect x="545.5" y="229" width="101.8" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="548.48" y="239.5" >`GC_mark_some</text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_value(core::Symbol_O co (1 samples, 0.02%)</title><rect x="1112.5" y="469" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1115.51" y="479.5" ></text>
</g>
<g >
<title>`core::clasp_gcd(gctools::smart_ptr&lt;core::Integer_O&gt;, gctools::s (17 samples, 0.36%)</title><rect x="879.0" y="325" width="4.3" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="882.04" y="335.5" ></text>
</g>
<g >
<title>`GC_mark_some (103 samples, 2.17%)</title><rect x="731.8" y="245" width="25.5" height="15.0" fill="rgb(224,86,86)" rx="2" ry="2" />
<text  x="734.76" y="255.5" >`..</text>
</g>
<g >
<title>`rand (5 samples, 0.11%)</title><rect x="888.0" y="357" width="1.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="890.98" y="367.5" ></text>
</g>
<g >
<title>`funlockfile (52 samples, 1.09%)</title><rect x="288.7" y="325" width="12.9" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="291.67" y="335.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (2 samples, 0.04%)</title><rect x="669.9" y="357" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="672.92" y="367.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="924.7" y="245" width="0.3" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="927.74" y="255.5" ></text>
</g>
<g >
<title>`core::cl__read(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (4,724 samples, 99.43%)</title><rect x="11.5" y="581" width="1173.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="14.49" y="591.5" >`core::cl__read(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt</text>
</g>
<g >
<title>`GC_generic_malloc_inner (7 samples, 0.15%)</title><rect x="417.1" y="309" width="1.7" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="420.08" y="319.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (87 samples, 1.83%)</title><rect x="1053.6" y="405" width="21.7" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="1056.65" y="415.5" >`..</text>
</g>
<g >
<title>`cc_setTLSymbolValue (1 samples, 0.02%)</title><rect x="1181.8" y="565" width="0.3" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="1184.80" y="575.5" ></text>
</g>
<g >
<title>`SYMBOLP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="412.1" y="373" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="415.11" y="383.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (16 samples, 0.34%)</title><rect x="924.5" y="357" width="4.0" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="927.49" y="367.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="760.3" y="357" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="763.32" y="367.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="876.3" y="293" width="0.3" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="879.31" y="303.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__gmpz_cmp_ui (1 samples, 0.02%)</title><rect x="863.6" y="373" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="866.64" y="383.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.04%)</title><rect x="679.4" y="341" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="682.35" y="351.5" ></text>
</g>
<g >
<title>`GC_remove_protection (1 samples, 0.02%)</title><rect x="84.0" y="293" width="0.3" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="87.01" y="303.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_lock_slow (3 samples, 0.06%)</title><rect x="47.0" y="325" width="0.8" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="50.01" y="335.5" ></text>
</g>
<g >
<title>`core::cl__gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (3 samples, 0.06%)</title><rect x="406.9" y="373" width="0.7" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="409.89" y="383.5" ></text>
</g>
<g >
<title>`DO-TIME^CORE^FN^^ (4,746 samples, 99.89%)</title><rect x="10.2" y="645" width="1178.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="13.25" y="655.5" >`DO-TIME^CORE^FN^^</text>
</g>
<g >
<title>`GC_stopped_mark (410 samples, 8.63%)</title><rect x="545.5" y="245" width="101.8" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="548.48" y="255.5" >`GC_stopped_..</text>
</g>
<g >
<title>`__gmpz_tdiv_qr (3 samples, 0.06%)</title><rect x="839.8" y="341" width="0.7" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="842.80" y="351.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (6 samples, 0.13%)</title><rect x="649.1" y="293" width="1.4" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="652.05" y="303.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="868.4" y="277" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="871.36" y="287.5" ></text>
</g>
<g >
<title>`free_tiny (4 samples, 0.08%)</title><rect x="852.0" y="357" width="1.0" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="854.97" y="367.5" ></text>
</g>
<g >
<title>`GC_mark_from (25 samples, 0.53%)</title><rect x="116.1" y="229" width="6.2" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="119.05" y="239.5" ></text>
</g>
<g >
<title>0x11ad1765b (3 samples, 0.06%)</title><rect x="1187.0" y="613" width="0.8" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1190.02" y="623.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="816.2" y="213" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="819.21" y="223.5" ></text>
</g>
<g >
<title>`__gmpz_cmp_ui (1 samples, 0.02%)</title><rect x="872.8" y="357" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="875.83" y="367.5" ></text>
</g>
<g >
<title>`GC_reclaim_block (2 samples, 0.04%)</title><rect x="731.3" y="213" width="0.5" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="734.26" y="223.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="928.7" y="389" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="931.72" y="399.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (23 samples, 0.48%)</title><rect x="947.3" y="341" width="5.8" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="950.34" y="351.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="1076.2" y="405" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1079.25" y="415.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::HashTableEql_O&gt; gctools::GCObjectAppro (38 samples, 0.80%)</title><rect x="1154.0" y="453" width="9.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1156.99" y="463.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="1113.0" y="517" width="0.5" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="1116.01" y="527.5" ></text>
</g>
<g >
<title>`GC_get_first_part (1 samples, 0.02%)</title><rect x="1055.4" y="341" width="0.2" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="1058.38" y="351.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (7 samples, 0.15%)</title><rect x="922.0" y="357" width="1.7" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="925.01" y="367.5" ></text>
</g>
<g >
<title>`__gmpz_cmp_si (2 samples, 0.04%)</title><rect x="872.3" y="357" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="875.34" y="367.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (2 samples, 0.04%)</title><rect x="997.3" y="293" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="1000.27" y="303.5" ></text>
</g>
<g >
<title>`malloc_zone_realloc (5 samples, 0.11%)</title><rect x="904.9" y="325" width="1.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="907.87" y="335.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="101.2" y="373" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="104.15" y="383.5" ></text>
</g>
<g >
<title>`TRANSLATE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="453" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (22 samples, 0.46%)</title><rect x="78.5" y="261" width="5.5" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="81.55" y="271.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (23 samples, 0.48%)</title><rect x="975.4" y="309" width="5.7" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="978.41" y="319.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (47 samples, 0.99%)</title><rect x="1013.7" y="373" width="11.6" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="1016.66" y="383.5" ></text>
</g>
<g >
<title>`wrapped_cl__list_T_sp (3 samples, 0.06%)</title><rect x="1172.6" y="517" width="0.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1175.61" y="527.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="795.1" y="261" width="0.2" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="798.09" y="271.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.02%)</title><rect x="1159.5" y="261" width="0.2" height="15.0" fill="rgb(204,55,55)" rx="2" ry="2" />
<text  x="1162.45" y="271.5" ></text>
</g>
<g >
<title>`wrapped_core__syntax_type_T_spCharacter_sp (10 samples, 0.21%)</title><rect x="1095.1" y="437" width="2.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="1098.12" y="447.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.04%)</title><rect x="771.0" y="357" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="774.00" y="367.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (14 samples, 0.29%)</title><rect x="89.0" y="229" width="3.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="91.98" y="239.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (1 samples, 0.02%)</title><rect x="1100.1" y="453" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1103.09" y="463.5" ></text>
</g>
<g >
<title>0x11ad17256 (2 samples, 0.04%)</title><rect x="1186.5" y="613" width="0.5" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="1189.52" y="623.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="770.5" y="357" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="773.51" y="367.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.02%)</title><rect x="392.5" y="389" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="395.49" y="399.5" ></text>
</g>
<g >
<title>`__gmp_default_reallocate (2 samples, 0.04%)</title><rect x="837.6" y="357" width="0.5" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="840.56" y="367.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="394.7" y="389" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="397.72" y="399.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (2 samples, 0.04%)</title><rect x="1057.6" y="277" width="0.5" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="1060.62" y="287.5" ></text>
</g>
<g >
<title>`GC_mark_from (57 samples, 1.20%)</title><rect x="1060.1" y="277" width="14.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1063.10" y="287.5" ></text>
</g>
<g >
<title>`wrapped_cl__zerop_Number_sp (2 samples, 0.04%)</title><rect x="396.7" y="389" width="0.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="399.71" y="399.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="795.1" y="245" width="0.2" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="798.09" y="255.5" ></text>
</g>
<g >
<title>`ltvc_toplevel_funcall (4,747 samples, 99.92%)</title><rect x="10.0" y="837" width="1179.0" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="13.00" y="847.5" >`ltvc_toplevel_funcall</text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (5 samples, 0.11%)</title><rect x="1108.0" y="453" width="1.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1111.04" y="463.5" ></text>
</g>
<g >
<title>`free (2 samples, 0.04%)</title><rect x="885.7" y="357" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="888.75" y="367.5" ></text>
</g>
<g >
<title>`clock_gettime (1 samples, 0.02%)</title><rect x="1078.7" y="421" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1081.73" y="431.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="1000.5" y="341" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="1003.49" y="351.5" ></text>
</g>
<g >
<title>`GC_mark_some (14 samples, 0.29%)</title><rect x="89.0" y="213" width="3.5" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="91.98" y="223.5" ></text>
</g>
<g >
<title>`__gmp_default_allocate (5 samples, 0.11%)</title><rect x="834.1" y="373" width="1.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="837.09" y="383.5" ></text>
</g>
<g >
<title>`tiny_size (3 samples, 0.06%)</title><rect x="891.2" y="357" width="0.8" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="894.21" y="367.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (99 samples, 2.08%)</title><rect x="1126.2" y="373" width="24.6" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="1129.17" y="383.5" >`..</text>
</g>
<g >
<title>`GC_generic_malloc_inner (15 samples, 0.32%)</title><rect x="88.7" y="293" width="3.8" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="91.73" y="303.5" ></text>
</g>
<g >
<title>`clock_gettime_nsec_np (5 samples, 0.11%)</title><rect x="1079.7" y="389" width="1.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1082.72" y="399.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (2 samples, 0.04%)</title><rect x="529.1" y="325" width="0.5" height="15.0" fill="rgb(228,92,92)" rx="2" ry="2" />
<text  x="532.09" y="335.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (5 samples, 0.11%)</title><rect x="996.5" y="325" width="1.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="999.52" y="335.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (15 samples, 0.32%)</title><rect x="924.7" y="325" width="3.8" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="927.74" y="335.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="876.3" y="261" width="0.3" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="879.31" y="271.5" ></text>
</g>
<g >
<title>`GC_add_to_black_list_stack (1 samples, 0.02%)</title><rect x="1139.1" y="245" width="0.2" height="15.0" fill="rgb(239,106,106)" rx="2" ry="2" />
<text  x="1142.08" y="255.5" ></text>
</g>
<g >
<title>`GC_allochblk (19 samples, 0.40%)</title><rect x="531.3" y="309" width="4.7" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="534.33" y="319.5" ></text>
</g>
<g >
<title>`core::utf_8_decoder(gctools::smart_ptr&lt;core::T_O&gt;) (23 samples, 0.48%)</title><rect x="44.0" y="389" width="5.7" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="47.03" y="399.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setup(unsigned int, gctools::smart_ptr&lt;core: (2 samples, 0.04%)</title><rect x="1163.9" y="469" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="1166.92" y="479.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleCharacterString_O&gt; gctools::GCOb (1 samples, 0.02%)</title><rect x="126.5" y="389" width="0.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="129.48" y="399.5" ></text>
</g>
<g >
<title>`DO-RTV^LITERAL^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="469" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>`GC_allocobj (108 samples, 2.27%)</title><rect x="730.5" y="309" width="26.8" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="733.52" y="319.5" >`..</text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (2 samples, 0.04%)</title><rect x="367.7" y="373" width="0.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="370.65" y="383.5" ></text>
</g>
<g >
<title>`cc_restoreMultipleValue0 (1 samples, 0.02%)</title><rect x="1088.9" y="437" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1091.91" y="447.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (2 samples, 0.04%)</title><rect x="1004.0" y="325" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1006.97" y="335.5" ></text>
</g>
<g >
<title>`GC_notify_or_invoke_finalizers (1 samples, 0.02%)</title><rect x="100.9" y="357" width="0.3" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="103.90" y="367.5" ></text>
</g>
<g >
<title>`SYNTAX-TYPE^ECLECTOR.READTABLE^((READTABLE T))^METHOD^^ (15 samples, 0.32%)</title><rect x="1093.9" y="453" width="3.7" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="1096.88" y="463.5" ></text>
</g>
<g >
<title>`GC_is_marked (1 samples, 0.02%)</title><rect x="542.5" y="213" width="0.3" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="545.50" y="223.5" ></text>
</g>
<g >
<title>`GC_add_to_black_list_stack (1 samples, 0.02%)</title><rect x="1159.5" y="277" width="0.2" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="1162.45" y="287.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.02%)</title><rect x="1025.6" y="373" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1028.58" y="383.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (2 samples, 0.04%)</title><rect x="271.8" y="309" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="274.78" y="319.5" ></text>
</g>
<g >
<title>`tlv_get_addr (6 samples, 0.13%)</title><rect x="498.3" y="341" width="1.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="501.29" y="351.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="1037.5" y="421" width="0.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1040.50" y="431.5" ></text>
</g>
<g >
<title>`core::cl__vector_push_extend(gctools::smart_ptr&lt;core::T_O&gt;, gct (4 samples, 0.08%)</title><rect x="126.7" y="405" width="1.0" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="129.73" y="415.5" ></text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (1 samples, 0.02%)</title><rect x="968.5" y="325" width="0.2" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="971.46" y="335.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (3 samples, 0.06%)</title><rect x="773.5" y="389" width="0.7" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="776.49" y="399.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (21 samples, 0.44%)</title><rect x="947.8" y="325" width="5.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="950.84" y="335.5" ></text>
</g>
<g >
<title>`core::cl__streamp(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.04%)</title><rect x="1183.3" y="565" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="1186.29" y="575.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="1172.4" y="517" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1175.37" y="527.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (2 samples, 0.04%)</title><rect x="414.1" y="389" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="417.10" y="399.5" ></text>
</g>
<g >
<title>`GC_free_block_ending_at (1 samples, 0.02%)</title><rect x="876.6" y="165" width="0.2" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="879.56" y="175.5" ></text>
</g>
<g >
<title>`GC_clear_marks (1 samples, 0.02%)</title><rect x="1057.1" y="309" width="0.3" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="1060.12" y="319.5" ></text>
</g>
<g >
<title>`core::contagen_mul(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (3 samples, 0.06%)</title><rect x="826.9" y="405" width="0.7" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="829.88" y="415.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (8 samples, 0.17%)</title><rect x="401.9" y="357" width="2.0" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="404.93" y="367.5" ></text>
</g>
<g >
<title>`core::cl__fdefinition(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="412.4" y="373" width="0.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="415.36" y="383.5" ></text>
</g>
<g >
<title>`wrapped_cl__float_Real_spT_sp (1 samples, 0.02%)</title><rect x="831.6" y="405" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="834.60" y="415.5" ></text>
</g>
<g >
<title>`core::coerce::inputStreamDesignator(gctools::smart_ptr&lt;core::T_ (1 samples, 0.02%)</title><rect x="1183.8" y="565" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1186.79" y="575.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.02%)</title><rect x="78.3" y="293" width="0.2" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="81.30" y="303.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (13 samples, 0.27%)</title><rect x="234.8" y="421" width="3.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="237.77" y="431.5" ></text>
</g>
<g >
<title>`RUN-ALL/Users/karstenpoeck/lisp/compiler/clasp-karsten/src/lisp (4,747 samples, 99.92%)</title><rect x="10.0" y="901" width="1179.0" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="13.00" y="911.5" >`RUN-ALL/Users/karstenpoeck/lisp/compiler/clasp-karsten/src/lisp</text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="1156.2" y="325" width="0.3" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="1159.22" y="335.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__malloc_with_fallback(unsigned long) (10 samples, 0.21%)</title><rect x="962.2" y="389" width="2.5" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="965.25" y="399.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (36 samples, 0.76%)</title><rect x="211.4" y="357" width="9.0" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="214.43" y="367.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="806.5" y="341" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="809.52" y="351.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="1152.0" y="405" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1155.00" y="415.5" ></text>
</g>
<g >
<title>`__gmpz_tdiv_qr (4 samples, 0.08%)</title><rect x="908.1" y="341" width="1.0" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="911.10" y="351.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (24 samples, 0.51%)</title><rect x="1155.7" y="421" width="6.0" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="1158.73" y="431.5" ></text>
</g>
<g >
<title>`tlv_get_addr (7 samples, 0.15%)</title><rect x="663.2" y="341" width="1.7" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="666.21" y="351.5" ></text>
</g>
<g >
<title>`__gmpz_get_si (1 samples, 0.02%)</title><rect x="840.8" y="357" width="0.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="843.79" y="367.5" ></text>
</g>
<g >
<title>`tlv_get_addr (8 samples, 0.17%)</title><rect x="385.8" y="357" width="2.0" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="388.78" y="367.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (17 samples, 0.36%)</title><rect x="766.5" y="373" width="4.3" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="769.53" y="383.5" ></text>
</g>
<g >
<title>`READTABLE-CASE^ECLECTOR.READTABLE^((READTABLE))^METHOD^^ (2 samples, 0.04%)</title><rect x="707.4" y="389" width="0.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="710.42" y="399.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (4 samples, 0.08%)</title><rect x="238.0" y="421" width="1.0" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="241.00" y="431.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (16 samples, 0.34%)</title><rect x="229.8" y="405" width="4.0" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="232.81" y="415.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="928.5" y="341" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="931.47" y="351.5" ></text>
</g>
<g >
<title>`LAYOUT-BASIC-BLOCK^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="325" width="0.2" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>`CHAR-FLOAT-EXPONENT-MARKER-P^ECLECTOR.READER^FN^^ (1 samples, 0.02%)</title><rect x="342.8" y="421" width="0.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="345.81" y="431.5" ></text>
</g>
<g >
<title>`GC_get_first_part (2 samples, 0.04%)</title><rect x="793.4" y="309" width="0.5" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="796.36" y="319.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (11 samples, 0.23%)</title><rect x="989.1" y="341" width="2.7" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="992.07" y="351.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(long long) (4 samples, 0.08%)</title><rect x="894.9" y="389" width="1.0" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="897.94" y="399.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (2 samples, 0.04%)</title><rect x="694.0" y="373" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="697.01" y="383.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.04%)</title><rect x="1106.1" y="405" width="0.4" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="1109.05" y="415.5" ></text>
</g>
<g >
<title>`core::core__make_vector(gctools::smart_ptr&lt;core::T_O&gt;, unsigned (102 samples, 2.15%)</title><rect x="70.4" y="373" width="25.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="73.35" y="383.5" >`..</text>
</g>
<g >
<title>`unwind_phase2 (100 samples, 2.10%)</title><rect x="937.4" y="389" width="24.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="940.41" y="399.5" >`..</text>
</g>
<g >
<title>`pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="302.6" y="325" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="305.58" y="335.5" ></text>
</g>
<g >
<title>`wrapped_cl__char_code_Character_sp (7 samples, 0.15%)</title><rect x="395.0" y="389" width="1.7" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="397.97" y="399.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (4 samples, 0.08%)</title><rect x="907.1" y="277" width="1.0" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="910.11" y="287.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (4 samples, 0.08%)</title><rect x="710.4" y="389" width="1.0" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="713.40" y="399.5" ></text>
</g>
<g >
<title>`MEMOIZED-LAYOUT-PROCEDURE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="229" width="0.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>`unw_set_reg (9 samples, 0.19%)</title><rect x="992.8" y="341" width="2.2" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="995.80" y="351.5" ></text>
</g>
<g >
<title>`core::utf_8_decoder(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.04%)</title><rect x="49.7" y="405" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="52.74" y="415.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (14 samples, 0.29%)</title><rect x="1001.0" y="341" width="3.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1003.99" y="351.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.02%)</title><rect x="936.4" y="405" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="939.42" y="415.5" ></text>
</g>
<g >
<title>`GC_allochblk (3 samples, 0.06%)</title><rect x="793.4" y="341" width="0.7" height="15.0" fill="rgb(237,105,105)" rx="2" ry="2" />
<text  x="796.36" y="351.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (18 samples, 0.38%)</title><rect x="948.6" y="309" width="4.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="951.59" y="319.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.02%)</title><rect x="1124.7" y="421" width="0.2" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="1127.68" y="431.5" ></text>
</g>
<g >
<title>`READ-CHAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="42.0" y="437" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="45.04" y="447.5" ></text>
</g>
<g >
<title>`pthread_getspecific (5 samples, 0.11%)</title><rect x="659.2" y="341" width="1.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="662.24" y="351.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (14 samples, 0.29%)</title><rect x="925.0" y="261" width="3.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="927.99" y="271.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$_dyld_find_unwind_sections (1 samples, 0.02%)</title><rect x="1025.3" y="373" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1028.33" y="383.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (3 samples, 0.06%)</title><rect x="387.8" y="373" width="0.7" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="390.77" y="383.5" ></text>
</g>
<g >
<title>`core::byte_code_interpreter(gctools::GCRootsInModule*, gctools: (4,747 samples, 99.92%)</title><rect x="10.0" y="869" width="1179.0" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="13.00" y="879.5" >`core::byte_code_interpreter(gctools::GCRootsInModule*, gctools:</text>
</g>
<g >
<title>`GC_push_contents_hdr (2 samples, 0.04%)</title><rect x="1146.5" y="277" width="0.5" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="1149.54" y="287.5" ></text>
</g>
<g >
<title>`GC_finalize (1 samples, 0.02%)</title><rect x="731.0" y="245" width="0.3" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="734.01" y="255.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.04%)</title><rect x="689.5" y="357" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="692.54" y="367.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (11 samples, 0.23%)</title><rect x="719.3" y="373" width="2.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="722.34" y="383.5" ></text>
</g>
<g >
<title>`GC_reclaim_block (1 samples, 0.02%)</title><rect x="876.6" y="197" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="879.56" y="207.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="1155.7" y="309" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1158.73" y="319.5" ></text>
</g>
<g >
<title>`core::clasp_to_mpz(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="889.2" y="373" width="0.3" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="892.23" y="383.5" ></text>
</g>
<g >
<title>`_Unwind_GetRegionStart (1 samples, 0.02%)</title><rect x="968.2" y="341" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="971.21" y="351.5" ></text>
</g>
<g >
<title>`unw_init_local (26 samples, 0.55%)</title><rect x="1025.3" y="389" width="6.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1028.33" y="399.5" ></text>
</g>
<g >
<title>`TWO-ARG-*^CORE^FN^^ (6 samples, 0.13%)</title><rect x="932.7" y="421" width="1.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="935.69" y="431.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.02%)</title><rect x="114.8" y="325" width="0.3" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="117.81" y="335.5" ></text>
</g>
<g >
<title>`rand (3 samples, 0.06%)</title><rect x="124.7" y="373" width="0.8" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="127.75" y="383.5" ></text>
</g>
<g >
<title>`malloc (5 samples, 0.11%)</title><rect x="834.1" y="357" width="1.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="837.09" y="367.5" ></text>
</g>
<g >
<title>`core::apply1_inner_valist(gctools::smart_ptr&lt;core::Function_O&gt;, (2 samples, 0.04%)</title><rect x="1169.1" y="517" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1172.14" y="527.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="75.8" y="325" width="0.3" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="78.82" y="335.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.04%)</title><rect x="85.3" y="325" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="88.26" y="335.5" ></text>
</g>
<g >
<title>`MAKE-HASH-TABLE^COMMON-LISP^FN^^ (188 samples, 3.96%)</title><rect x="1119.0" y="517" width="46.7" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="1121.97" y="527.5" >`MAK..</text>
</g>
<g >
<title>`core::DynamicBindingStack::set_thread_local_value(gctools::smar (1 samples, 0.02%)</title><rect x="1176.1" y="533" width="0.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="1179.09" y="543.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (11 samples, 0.23%)</title><rect x="542.8" y="213" width="2.7" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="545.75" y="223.5" ></text>
</g>
<g >
<title>`NEXT^ECLECTOR.READER^FN^^ (7 samples, 0.15%)</title><rect x="929.7" y="421" width="1.7" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="932.71" y="431.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (6 samples, 0.13%)</title><rect x="816.5" y="357" width="1.4" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="819.45" y="367.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (14 samples, 0.29%)</title><rect x="843.5" y="245" width="3.5" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="846.53" y="255.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (8 samples, 0.17%)</title><rect x="876.6" y="277" width="1.9" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="879.56" y="287.5" ></text>
</g>
<g >
<title>`GC_install_header (1 samples, 0.02%)</title><rect x="10.0" y="37" width="0.2" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="13.00" y="47.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (55 samples, 1.16%)</title><rect x="793.1" y="357" width="13.7" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="796.11" y="367.5" ></text>
</g>
<g >
<title>`GC_mark_some (43 samples, 0.91%)</title><rect x="795.3" y="261" width="10.7" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="798.34" y="271.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.02%)</title><rect x="122.5" y="229" width="0.3" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="125.51" y="239.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (2 samples, 0.04%)</title><rect x="126.0" y="389" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="128.99" y="399.5" ></text>
</g>
<g >
<title>`ValuesFromCons(gctools::smart_ptr&lt;core::List_V&gt;) (1 samples, 0.02%)</title><rect x="1175.1" y="533" width="0.2" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="1178.10" y="543.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="723.1" y="373" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="726.07" y="383.5" ></text>
</g>
<g >
<title>`GC_mark_from (7 samples, 0.15%)</title><rect x="911.3" y="213" width="1.8" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="914.33" y="223.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_eql_List_sp (2 samples, 0.04%)</title><rect x="105.1" y="405" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="108.13" y="415.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (15 samples, 0.32%)</title><rect x="744.2" y="213" width="3.7" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="747.18" y="223.5" ></text>
</g>
<g >
<title>`GC_mark_from (73 samples, 1.54%)</title><rect x="1128.4" y="277" width="18.1" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="1131.40" y="287.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.02%)</title><rect x="876.3" y="309" width="0.3" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="879.31" y="319.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="1155.7" y="341" width="0.3" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="1158.73" y="351.5" ></text>
</g>
<g >
<title>`cm_vref (1 samples, 0.02%)</title><rect x="785.4" y="389" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="788.41" y="399.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (2 samples, 0.04%)</title><rect x="111.3" y="389" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="114.33" y="399.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (28 samples, 0.59%)</title><rect x="220.4" y="357" width="6.9" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="223.37" y="367.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1075.0" y="389" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1078.01" y="399.5" ></text>
</g>
<g >
<title>`clock_gettime (12 samples, 0.25%)</title><rect x="1032.0" y="389" width="3.0" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1035.04" y="399.5" ></text>
</g>
<g >
<title>`CHAR-INVALID-P^ECLECTOR.READER^FN^^ (121 samples, 2.55%)</title><rect x="368.4" y="405" width="30.0" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="371.40" y="415.5" >`C..</text>
</g>
<g >
<title>`GC_malloc_kind (9 samples, 0.19%)</title><rect x="911.1" y="341" width="2.2" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="914.08" y="351.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_core__vref_AbstractSimpleVector_spsize_t (2 samples, 0.04%)</title><rect x="467.2" y="373" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="470.25" y="383.5" ></text>
</g>
<g >
<title>`std::__1::chrono::steady_clock::now() (1 samples, 0.02%)</title><rect x="1037.3" y="421" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1040.25" y="431.5" ></text>
</g>
<g >
<title>`core::coerce::inputStreamDesignator(gctools::smart_ptr&lt;core::T_ (3 samples, 0.06%)</title><rect x="42.5" y="405" width="0.8" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="45.54" y="415.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (5 samples, 0.11%)</title><rect x="900.7" y="341" width="1.2" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="903.65" y="351.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (4 samples, 0.08%)</title><rect x="838.6" y="309" width="1.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="841.56" y="319.5" ></text>
</g>
<g >
<title>`cc_TLSymbolValue (1 samples, 0.02%)</title><rect x="1166.9" y="517" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1169.90" y="527.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (22 samples, 0.46%)</title><rect x="1156.0" y="357" width="5.4" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="1158.97" y="367.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (3 samples, 0.06%)</title><rect x="390.7" y="373" width="0.8" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="393.75" y="383.5" ></text>
</g>
<g >
<title>`GC_allocobj (70 samples, 1.47%)</title><rect x="1057.1" y="357" width="17.4" height="15.0" fill="rgb(237,105,105)" rx="2" ry="2" />
<text  x="1060.12" y="367.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="536.0" y="309" width="0.3" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="539.05" y="319.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (25 samples, 0.53%)</title><rect x="937.4" y="373" width="6.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="940.41" y="383.5" ></text>
</g>
<g >
<title>`GC_free_block_ending_at (1 samples, 0.02%)</title><rect x="88.7" y="149" width="0.3" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="91.73" y="159.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="78.5" y="197" width="0.3" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="81.55" y="207.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="1112.0" y="453" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1115.01" y="463.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::set_thread_local_value(gctools::smar (5 samples, 0.11%)</title><rect x="1167.9" y="517" width="1.2" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="1170.90" y="527.5" ></text>
</g>
<g >
<title>`GC_mark_some (29 samples, 0.61%)</title><rect x="115.6" y="245" width="7.2" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="118.56" y="255.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.02%)</title><rect x="993.5" y="277" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="996.54" y="287.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="937.9" y="309" width="0.3" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="940.91" y="319.5" ></text>
</g>
<g >
<title>`__gmpz_init (1 samples, 0.02%)</title><rect x="864.1" y="373" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="867.14" y="383.5" ></text>
</g>
<g >
<title>`core::cl__streamp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="243.7" y="373" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="246.72" y="383.5" ></text>
</g>
<g >
<title>`core::clasp_to_mpz(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="863.1" y="389" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="866.15" y="399.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.04%)</title><rect x="540.5" y="149" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="543.52" y="159.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="100.4" y="325" width="0.3" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="103.41" y="335.5" ></text>
</g>
<g >
<title>`core::HashGenerator::rawhash() const (3 samples, 0.06%)</title><rect x="101.6" y="357" width="0.8" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="104.65" y="367.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="789.4" y="389" width="0.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="792.38" y="399.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (19 samples, 0.40%)</title><rect x="681.1" y="373" width="4.7" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="684.09" y="383.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (4 samples, 0.08%)</title><rect x="1122.2" y="453" width="1.0" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1125.20" y="463.5" ></text>
</g>
<g >
<title>`LOWER-CASE-P^COMMON-LISP^FN^^ (5 samples, 0.11%)</title><rect x="432.5" y="389" width="1.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="435.48" y="399.5" ></text>
</g>
<g >
<title>`GC_should_collect (1 samples, 0.02%)</title><rect x="757.3" y="325" width="0.3" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="760.34" y="335.5" ></text>
</g>
<g >
<title>`rand (2 samples, 0.04%)</title><rect x="919.0" y="357" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="922.03" y="367.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="693.8" y="373" width="0.2" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="696.76" y="383.5" ></text>
</g>
<g >
<title>`__gmpz_tdiv_qr (2 samples, 0.04%)</title><rect x="873.1" y="357" width="0.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="876.08" y="367.5" ></text>
</g>
<g >
<title>`wrapped_contagen_add_Number_spNumber_sp (5 samples, 0.11%)</title><rect x="1038.7" y="421" width="1.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1041.74" y="431.5" ></text>
</g>
<g >
<title>`core::cl__make_hash_table(gctools::smart_ptr&lt;core::T_O&gt;, gctool (179 samples, 3.77%)</title><rect x="1120.5" y="485" width="44.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1123.46" y="495.5" >`cor..</text>
</g>
<g >
<title>`cc_setTLSymbolValue (1 samples, 0.02%)</title><rect x="1167.2" y="517" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1170.15" y="527.5" ></text>
</g>
<g >
<title>`wrapped_cl__fdefinition_T_sp (6 samples, 0.13%)</title><rect x="412.6" y="373" width="1.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="415.61" y="383.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (6 samples, 0.13%)</title><rect x="906.6" y="309" width="1.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="909.61" y="319.5" ></text>
</g>
<g >
<title>`szone_free_definite_size (1 samples, 0.02%)</title><rect x="929.0" y="389" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="931.96" y="399.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="816.2" y="309" width="0.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="819.21" y="319.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (87 samples, 1.83%)</title><rect x="1126.2" y="341" width="21.6" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="1129.17" y="351.5" >`..</text>
</g>
<g >
<title>`core::lisp_true() (1 samples, 0.02%)</title><rect x="699.0" y="357" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="701.97" y="367.5" ></text>
</g>
<g >
<title>`unw_step (1 samples, 0.02%)</title><rect x="988.1" y="373" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="991.08" y="383.5" ></text>
</g>
<g >
<title>`GC_mark_some (20 samples, 0.42%)</title><rect x="1156.5" y="325" width="4.9" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1159.47" y="335.5" ></text>
</g>
<g >
<title>`malloc (6 samples, 0.13%)</title><rect x="906.6" y="325" width="1.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="909.61" y="335.5" ></text>
</g>
<g >
<title>`core::MDArray_O::vectorPushExtend(gctools::smart_ptr&lt;core::T_O&gt; (2 samples, 0.04%)</title><rect x="107.4" y="421" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="110.36" y="431.5" ></text>
</g>
<g >
<title>`core::frame_check(unsigned long) (96 samples, 2.02%)</title><rect x="1007.9" y="405" width="23.9" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1010.95" y="415.5" >`..</text>
</g>
<g >
<title>`TPL^CORE^FN^^ (4,747 samples, 99.92%)</title><rect x="10.0" y="757" width="1179.0" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="13.00" y="767.5" >`TPL^CORE^FN^^</text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.02%)</title><rect x="713.1" y="389" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="716.13" y="399.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (5 samples, 0.11%)</title><rect x="643.3" y="213" width="1.3" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="646.34" y="223.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (2 samples, 0.04%)</title><rect x="1100.3" y="453" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1103.34" y="463.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="418.8" y="341" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="421.81" y="351.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="876.3" y="229" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="879.31" y="239.5" ></text>
</g>
<g >
<title>`GC_get_first_part (1 samples, 0.02%)</title><rect x="1055.6" y="357" width="0.3" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="1058.63" y="367.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (6 samples, 0.13%)</title><rect x="90.7" y="181" width="1.5" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="93.72" y="191.5" ></text>
</g>
<g >
<title>`malloc_zone_realloc (2 samples, 0.04%)</title><rect x="837.6" y="325" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="840.56" y="335.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__free_with_fallback(void*) (1 samples, 0.02%)</title><rect x="1043.0" y="437" width="0.2" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="1045.97" y="447.5" ></text>
</g>
<g >
<title>`RECURSE^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="645" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>`wrapped_core__logand_2op_Integer_spInteger_sp (2 samples, 0.04%)</title><rect x="105.6" y="405" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="108.62" y="415.5" ></text>
</g>
<g >
<title>`__gmp_default_reallocate (8 samples, 0.17%)</title><rect x="904.1" y="357" width="2.0" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="907.13" y="367.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (8 samples, 0.17%)</title><rect x="911.3" y="261" width="2.0" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="914.33" y="271.5" ></text>
</g>
<g >
<title>`GC_allocobj (15 samples, 0.32%)</title><rect x="88.7" y="277" width="3.8" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="91.73" y="287.5" ></text>
</g>
<g >
<title>`__gmpz_realloc (2 samples, 0.04%)</title><rect x="841.0" y="357" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="844.04" y="367.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (15 samples, 0.32%)</title><rect x="843.3" y="309" width="3.7" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="846.28" y="319.5" ></text>
</g>
<g >
<title>`unw_step (1 samples, 0.02%)</title><rect x="1035.8" y="405" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1038.76" y="415.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (4 samples, 0.08%)</title><rect x="1054.6" y="357" width="1.0" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="1057.64" y="367.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (3 samples, 0.06%)</title><rect x="961.5" y="341" width="0.7" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="964.50" y="351.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="1086.7" y="389" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1089.68" y="399.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (9 samples, 0.19%)</title><rect x="859.4" y="357" width="2.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="862.42" y="367.5" ></text>
</g>
<g >
<title>`malloc (5 samples, 0.11%)</title><rect x="900.7" y="357" width="1.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="903.65" y="367.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="990.8" y="293" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="993.81" y="303.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (7 samples, 0.15%)</title><rect x="1085.2" y="405" width="1.7" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="1088.19" y="415.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="903.9" y="357" width="0.2" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="906.88" y="367.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (23 samples, 0.48%)</title><rect x="1026.1" y="373" width="5.7" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1029.08" y="383.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (20 samples, 0.42%)</title><rect x="1156.5" y="341" width="4.9" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="1159.47" y="351.5" ></text>
</g>
<g >
<title>`cm_check_index (3 samples, 0.06%)</title><rect x="784.7" y="389" width="0.7" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="787.66" y="399.5" ></text>
</g>
<g >
<title>`GC_install_header (1 samples, 0.02%)</title><rect x="1149.3" y="277" width="0.2" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="1152.27" y="287.5" ></text>
</g>
<g >
<title>`MAKE-ARRAY-WITH-INITIAL-ELEMENT^CORE^FN^^ (136 samples, 2.86%)</title><rect x="62.4" y="421" width="33.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="65.41" y="431.5" >`M..</text>
</g>
<g >
<title>`NORMALIZE-TYPE^CORE^FN^^ (35 samples, 0.74%)</title><rect x="399.4" y="389" width="8.7" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="402.44" y="399.5" ></text>
</g>
<g >
<title>`core::template_Vector&lt;core::StrWNs_O, core::SimpleCharacterStri (57 samples, 1.20%)</title><rect x="111.8" y="389" width="14.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="114.83" y="399.5" ></text>
</g>
<g >
<title>`core::cl__unread_char(gctools::smart_ptr&lt;core::Character_I&gt;, gc (14 samples, 0.29%)</title><rect x="1103.6" y="437" width="3.4" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1106.57" y="447.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.02%)</title><rect x="1096.4" y="389" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1099.36" y="399.5" ></text>
</g>
<g >
<title>`EMF-FROM-CONTF.LAMBDA^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="309" width="0.2" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>`pthread_once (2 samples, 0.04%)</title><rect x="1005.0" y="373" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1007.97" y="383.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::machHeader() const (1 samples, 0.02%)</title><rect x="1015.4" y="325" width="0.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="1018.40" y="335.5" ></text>
</g>
<g >
<title>`core::cl__values(gctools::smart_ptr&lt;core::Vaslist&gt;) (16 samples, 0.34%)</title><rect x="471.7" y="357" width="4.0" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="474.72" y="367.5" ></text>
</g>
<g >
<title>`malloc (5 samples, 0.11%)</title><rect x="838.3" y="325" width="1.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="841.31" y="335.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.04%)</title><rect x="806.8" y="373" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="809.77" y="383.5" ></text>
</g>
<g >
<title>`szone_size (1 samples, 0.02%)</title><rect x="854.2" y="357" width="0.3" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="857.21" y="367.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (9 samples, 0.19%)</title><rect x="992.8" y="325" width="2.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="995.80" y="335.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="907.9" y="261" width="0.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="910.85" y="271.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.06%)</title><rect x="718.3" y="389" width="0.8" height="15.0" fill="rgb(250,124,124)" rx="2" ry="2" />
<text  x="721.35" y="399.5" ></text>
</g>
<g >
<title>`realloc (8 samples, 0.17%)</title><rect x="904.1" y="341" width="2.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="907.13" y="351.5" ></text>
</g>
<g >
<title>`core::eformat_read_char(gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.06%)</title><rect x="50.2" y="421" width="0.8" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="53.24" y="431.5" ></text>
</g>
<g >
<title>`core::clasp_gcd(gctools::smart_ptr&lt;core::Integer_O&gt;, gctools::s (13 samples, 0.27%)</title><rect x="848.0" y="325" width="3.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="851.00" y="335.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (3 samples, 0.06%)</title><rect x="983.1" y="373" width="0.8" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="986.11" y="383.5" ></text>
</g>
<g >
<title>`TERMINATE-TOKEN^ECLECTOR.READER^FN^^ (1 samples, 0.02%)</title><rect x="1097.6" y="453" width="0.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="1100.61" y="463.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (1 samples, 0.02%)</title><rect x="990.8" y="309" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="993.81" y="319.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.02%)</title><rect x="768.8" y="341" width="0.2" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="771.77" y="351.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (44 samples, 0.93%)</title><rect x="795.1" y="293" width="10.9" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="798.09" y="303.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (4 samples, 0.08%)</title><rect x="834.3" y="309" width="1.0" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="837.34" y="319.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.04%)</title><rect x="84.3" y="325" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="87.26" y="335.5" ></text>
</g>
<g >
<title>`core::cl__streamp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="1183.8" y="549" width="0.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="1186.79" y="559.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (34 samples, 0.72%)</title><rect x="114.6" y="341" width="8.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="117.56" y="351.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (7 samples, 0.15%)</title><rect x="1126.7" y="277" width="1.7" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="1129.67" y="287.5" ></text>
</g>
<g >
<title>`GC_allochblk (8 samples, 0.17%)</title><rect x="1147.8" y="325" width="2.0" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="1150.78" y="335.5" ></text>
</g>
<g >
<title>`core::core__syntax_type(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (2 samples, 0.04%)</title><rect x="1094.6" y="437" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1097.63" y="447.5" ></text>
</g>
<g >
<title>`COMPILE-IN-ENV^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="565" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>`malloc (2 samples, 0.04%)</title><rect x="964.7" y="389" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="967.73" y="399.5" ></text>
</g>
<g >
<title>`INTERPRET-DTREE-PROGRAM^CLOS^FN^^ (2 samples, 0.04%)</title><rect x="1113.5" y="517" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="1116.50" y="527.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_cl__gethash_T_spHashTableBase_spT_sp (1 samples, 0.02%)</title><rect x="399.7" y="373" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="402.69" y="383.5" ></text>
</g>
<g >
<title>`HASH-EQL^CORE^FN^^ (11 samples, 0.23%)</title><rect x="99.7" y="405" width="2.7" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="102.66" y="415.5" ></text>
</g>
<g >
<title>`GC_mark_from (14 samples, 0.29%)</title><rect x="925.0" y="229" width="3.5" height="15.0" fill="rgb(215,73,73)" rx="2" ry="2" />
<text  x="927.99" y="239.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (16 samples, 0.34%)</title><rect x="316.2" y="421" width="4.0" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="319.24" y="431.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (5 samples, 0.11%)</title><rect x="540.3" y="277" width="1.2" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="543.27" y="287.5" ></text>
</g>
<g >
<title>`szone_size (1 samples, 0.02%)</title><rect x="1042.7" y="421" width="0.3" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="1045.72" y="431.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__gmpz_cmp_si (1 samples, 0.02%)</title><rect x="866.6" y="357" width="0.3" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="869.62" y="367.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (2 samples, 0.04%)</title><rect x="1042.2" y="405" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1045.22" y="415.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (2 samples, 0.04%)</title><rect x="995.5" y="341" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="998.53" y="351.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (103 samples, 2.17%)</title><rect x="731.8" y="261" width="25.5" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="734.76" y="271.5" >`..</text>
</g>
<g >
<title>`GC_allocobj (7 samples, 0.15%)</title><rect x="417.1" y="293" width="1.7" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="420.08" y="303.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (150 samples, 3.16%)</title><rect x="723.3" y="373" width="37.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="726.32" y="383.5" >`gc..</text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="909.1" y="341" width="0.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="912.09" y="351.5" ></text>
</g>
<g >
<title>`GC_freehblk (1 samples, 0.02%)</title><rect x="876.6" y="181" width="0.2" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="879.56" y="191.5" ></text>
</g>
<g >
<title>`wrapped_core__vref_AbstractSimpleVector_spsize_t (26 samples, 0.55%)</title><rect x="700.0" y="373" width="6.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="702.97" y="383.5" ></text>
</g>
<g >
<title>`DO-DBG-LEXICAL-BLOCK^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="341" width="0.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_O, gctools::smar (5 samples, 0.11%)</title><rect x="103.9" y="405" width="1.2" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="106.88" y="415.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="795.1" y="277" width="0.2" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="798.09" y="287.5" ></text>
</g>
<g >
<title>`GC_allocobj (99 samples, 2.08%)</title><rect x="1126.2" y="357" width="24.6" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1129.17" y="367.5" >`..</text>
</g>
<g >
<title>`core::DynamicBindingStack::set_thread_local_value(gctools::smar (3 samples, 0.06%)</title><rect x="1182.1" y="565" width="0.7" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="1185.05" y="575.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="934.9" y="421" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="937.93" y="431.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.02%)</title><rect x="122.5" y="213" width="0.3" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="125.51" y="223.5" ></text>
</g>
<g >
<title>`core::cl__streamp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="241.5" y="389" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="244.48" y="399.5" ></text>
</g>
<g >
<title>`cc_resetTLSymbolValue (1 samples, 0.02%)</title><rect x="1111.8" y="469" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1114.76" y="479.5" ></text>
</g>
<g >
<title>`DO-DBG-FUNCTION^COMPILER^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="405" width="0.2" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>`clock_gettime_nsec_np (2 samples, 0.04%)</title><rect x="1081.2" y="405" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1084.21" y="415.5" ></text>
</g>
<g >
<title>`__gmpz_realloc (2 samples, 0.04%)</title><rect x="902.4" y="373" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="905.39" y="383.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="102.4" y="405" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="105.39" y="415.5" ></text>
</g>
<g >
<title>`__gmpz_cdiv_qr (11 samples, 0.23%)</title><rect x="838.1" y="357" width="2.7" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="841.06" y="367.5" ></text>
</g>
<g >
<title>`core::coerce::inputStreamDesignator(gctools::smart_ptr&lt;core::T_ (9 samples, 0.19%)</title><rect x="241.7" y="389" width="2.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="244.73" y="399.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="78.5" y="229" width="0.3" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="81.55" y="239.5" ></text>
</g>
<g >
<title>`GC_freehblk (4 samples, 0.08%)</title><rect x="544.5" y="181" width="1.0" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="547.49" y="191.5" ></text>
</g>
<g >
<title>`STRINGP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="468.0" y="373" width="0.2" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="470.99" y="383.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="1156.2" y="309" width="0.3" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="1159.22" y="319.5" ></text>
</g>
<g >
<title>`wrapped_cl__gethash_T_spHashTableBase_spT_sp (3 samples, 0.06%)</title><rect x="405.9" y="357" width="0.7" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="408.90" y="367.5" ></text>
</g>
<g >
<title>`free_tiny (6 samples, 0.13%)</title><rect x="892.0" y="373" width="1.4" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="894.96" y="383.5" ></text>
</g>
<g >
<title>`unw_getcontext (1 samples, 0.02%)</title><rect x="1035.5" y="405" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1038.51" y="415.5" ></text>
</g>
<g >
<title>`GC_allocobj (15 samples, 0.32%)</title><rect x="924.7" y="309" width="3.8" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="927.74" y="319.5" ></text>
</g>
<g >
<title>`core::core__load_binary(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (4,747 samples, 99.92%)</title><rect x="10.0" y="933" width="1179.0" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="13.00" y="943.5" >`core::core__load_binary(gctools::smart_ptr&lt;core::T_O&gt;, gctools:</text>
</g>
<g >
<title>`pthread_mutex_lock (4 samples, 0.08%)</title><rect x="301.6" y="325" width="1.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="304.58" y="335.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (5 samples, 0.11%)</title><rect x="892.2" y="357" width="1.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="895.21" y="367.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setup(unsigned int, gctools::smart_ptr&lt;core: (119 samples, 2.50%)</title><rect x="1123.7" y="453" width="29.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1126.69" y="463.5" >`c..</text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.02%)</title><rect x="1074.3" y="277" width="0.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1077.26" y="287.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (3 samples, 0.06%)</title><rect x="1085.9" y="389" width="0.8" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="1088.93" y="399.5" ></text>
</g>
<g >
<title>`_pthread_mutex_lock_init_slow (3 samples, 0.06%)</title><rect x="287.9" y="309" width="0.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="290.92" y="319.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(__gmp_expr&lt;__mpz_struct [1], __mpz_stru (1 samples, 0.02%)</title><rect x="842.3" y="357" width="0.2" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="845.28" y="367.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="1028.1" y="341" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1031.06" y="351.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (29 samples, 0.61%)</title><rect x="1014.2" y="357" width="7.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1017.15" y="367.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (1 samples, 0.02%)</title><rect x="991.6" y="325" width="0.2" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="994.55" y="335.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (2 samples, 0.04%)</title><rect x="938.4" y="341" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="941.40" y="351.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (9 samples, 0.19%)</title><rect x="1011.4" y="373" width="2.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1014.42" y="383.5" ></text>
</g>
<g >
<title>`ValuesFromCons(gctools::smart_ptr&lt;core::List_V&gt;) (5 samples, 0.11%)</title><rect x="1165.7" y="517" width="1.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1168.66" y="527.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (22 samples, 0.46%)</title><rect x="78.5" y="293" width="5.5" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="81.55" y="303.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="100.4" y="293" width="0.3" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="103.41" y="303.5" ></text>
</g>
<g >
<title>`free (9 samples, 0.19%)</title><rect x="889.7" y="373" width="2.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="892.72" y="383.5" ></text>
</g>
<g >
<title>`core::consume_byte_stack(gctools::smart_ptr&lt;core::T_O&gt;, unsigne (1 samples, 0.02%)</title><rect x="253.2" y="357" width="0.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="256.15" y="367.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$_platform_memmove (2 samples, 0.04%)</title><rect x="44.8" y="341" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="47.77" y="351.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (116 samples, 2.44%)</title><rect x="728.8" y="341" width="28.8" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="731.78" y="351.5" >`G..</text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="1077.5" y="421" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1080.49" y="431.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__bzero (1 samples, 0.02%)</title><rect x="1085.7" y="389" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1088.69" y="399.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.04%)</title><rect x="100.4" y="357" width="0.5" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="103.41" y="367.5" ></text>
</g>
<g >
<title>`__gmpz_realloc (4 samples, 0.08%)</title><rect x="869.9" y="341" width="0.9" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="872.85" y="351.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_value(core::Symbol_O co (1 samples, 0.02%)</title><rect x="1090.7" y="437" width="0.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="1093.65" y="447.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (14 samples, 0.29%)</title><rect x="388.5" y="389" width="3.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="391.51" y="399.5" ></text>
</g>
<g >
<title>`core::Ratio_O::setf_numerator_denominator(gctools::smart_ptr&lt;co (14 samples, 0.29%)</title><rect x="913.8" y="341" width="3.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="916.81" y="351.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_cl__read_char_T_spT_spT_spT_sp (1 samples, 0.02%)</title><rect x="58.4" y="437" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="61.43" y="447.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (62 samples, 1.30%)</title><rect x="194.8" y="357" width="15.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="197.79" y="367.5" ></text>
</g>
<g >
<title>`TRANSLATE-SIMPLE-INSTRUCTION^CLASP-CLEAVIR^((:AROUND) (T T T T) (1 samples, 0.02%)</title><rect x="10.0" y="277" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="227.3" y="357" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="230.32" y="367.5" ></text>
</g>
<g >
<title>`__cxa_begin_catch (2 samples, 0.04%)</title><rect x="1040.5" y="437" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1043.48" y="447.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (3 samples, 0.06%)</title><rect x="770.8" y="373" width="0.7" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="773.75" y="383.5" ></text>
</g>
<g >
<title>`cc_enclose (2 samples, 0.04%)</title><rect x="1098.8" y="453" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1101.85" y="463.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="411.6" y="373" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="414.61" y="383.5" ></text>
</g>
<g >
<title>`READ-WITH-READTABLE-SYNCED^ECLECTOR.READTABLE^FN^^ (4,704 samples, 99.01%)</title><rect x="13.0" y="565" width="1168.3" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="15.98" y="575.5" >`READ-WITH-READTABLE-SYNCED^ECLECTOR.READTABLE^FN^^</text>
</g>
<g >
<title>`READ-CHAR-HANDLING-EOF^ECLECTOR.READER^FN^^ (817 samples, 17.20%)</title><rect x="129.0" y="437" width="202.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="131.97" y="447.5" >`READ-CHAR-HANDLING-EOF^EC..</text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (21 samples, 0.44%)</title><rect x="995.0" y="357" width="5.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="998.03" y="367.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (2 samples, 0.04%)</title><rect x="1123.2" y="453" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1126.19" y="463.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (21 samples, 0.44%)</title><rect x="956.3" y="325" width="5.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="959.28" y="335.5" ></text>
</g>
<g >
<title>`__gmp_default_allocate (5 samples, 0.11%)</title><rect x="868.1" y="341" width="1.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="871.11" y="351.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (4 samples, 0.08%)</title><rect x="900.9" y="309" width="1.0" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="903.90" y="319.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.02%)</title><rect x="843.5" y="213" width="0.3" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="846.53" y="223.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (2 samples, 0.04%)</title><rect x="983.4" y="357" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="986.36" y="367.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.02%)</title><rect x="816.2" y="357" width="0.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="819.21" y="367.5" ></text>
</g>
<g >
<title>`core::frame_check(unsigned long) (1 samples, 0.02%)</title><rect x="1036.8" y="421" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1039.76" y="431.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="869.1" y="261" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="872.11" y="271.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (3 samples, 0.06%)</title><rect x="1178.8" y="549" width="0.8" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1181.82" y="559.5" ></text>
</g>
<g >
<title>`GC_install_header (1 samples, 0.02%)</title><rect x="1055.4" y="325" width="0.2" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="1058.38" y="335.5" ></text>
</g>
<g >
<title>`tlv_get_addr (12 samples, 0.25%)</title><rect x="230.8" y="389" width="3.0" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="233.80" y="399.5" ></text>
</g>
<g >
<title>`core::Symbol_O::fboundp() const (3 samples, 0.06%)</title><rect x="413.4" y="341" width="0.7" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="416.35" y="351.5" ></text>
</g>
<g >
<title>`cc_enclose (170 samples, 3.58%)</title><rect x="719.1" y="389" width="42.2" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="722.09" y="399.5" >`cc..</text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (5 samples, 0.11%)</title><rect x="656.0" y="341" width="1.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="659.01" y="351.5" ></text>
</g>
<g >
<title>`GC_is_black_listed (2 samples, 0.04%)</title><rect x="535.5" y="293" width="0.5" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="538.55" y="303.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eql(core::HashGenerator&amp;, gctools::sm (5 samples, 0.11%)</title><rect x="210.2" y="357" width="1.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="213.19" y="367.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (3 samples, 0.06%)</title><rect x="1029.1" y="341" width="0.7" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1032.06" y="351.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (21 samples, 0.44%)</title><rect x="229.6" y="421" width="5.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="232.56" y="431.5" ></text>
</g>
<g >
<title>`GC_new_hblk (12 samples, 0.25%)</title><rect x="1147.8" y="341" width="3.0" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="1150.78" y="351.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="75.6" y="325" width="0.2" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="78.57" y="335.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.02%)</title><rect x="102.9" y="389" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="105.89" y="399.5" ></text>
</g>
<g >
<title>`DIGIT-CHAR-P^COMMON-LISP^FN^^ (6 samples, 0.13%)</title><rect x="713.4" y="405" width="1.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="716.38" y="415.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (15 samples, 0.32%)</title><rect x="88.7" y="261" width="3.8" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="91.73" y="271.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (2 samples, 0.04%)</title><rect x="1091.6" y="437" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1094.65" y="447.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (3 samples, 0.06%)</title><rect x="1009.4" y="389" width="0.8" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1012.44" y="399.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (2 samples, 0.04%)</title><rect x="123.3" y="357" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="126.26" y="367.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (5 samples, 0.11%)</title><rect x="845.8" y="197" width="1.2" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="848.76" y="207.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="38.8" y="453" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="41.81" y="463.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (4,747 samples, 99.92%)</title><rect x="10.0" y="741" width="1179.0" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo</text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="1155.7" y="325" width="0.3" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="1158.73" y="335.5" ></text>
</g>
<g >
<title>`core::parse_ltvc_toplevel_funcall(gctools::GCRootsInModule*, gc (4,747 samples, 99.92%)</title><rect x="10.0" y="853" width="1179.0" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >`core::parse_ltvc_toplevel_funcall(gctools::GCRootsInModule*, gc</text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="85.0" y="325" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="88.01" y="335.5" ></text>
</g>
<g >
<title>`tiny_size (2 samples, 0.04%)</title><rect x="905.6" y="293" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="908.62" y="303.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="1041.2" y="421" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1044.23" y="431.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (70 samples, 1.47%)</title><rect x="1057.1" y="373" width="17.4" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="1060.12" y="383.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.02%)</title><rect x="878.3" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="881.30" y="207.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (10 samples, 0.21%)</title><rect x="940.1" y="293" width="2.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="943.14" y="303.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (3 samples, 0.06%)</title><rect x="756.1" y="229" width="0.7" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="759.10" y="239.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(__gmp_expr&lt;__mpz_struct [1], __mpz_stru (2 samples, 0.04%)</title><rect x="874.1" y="357" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="877.07" y="367.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (5 samples, 0.11%)</title><rect x="402.2" y="341" width="1.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="405.17" y="351.5" ></text>
</g>
<g >
<title>`CHAR-FLOAT-EXPONENT-MARKER-P^ECLECTOR.READER^FN^^ (7 samples, 0.15%)</title><rect x="366.7" y="405" width="1.7" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="369.66" y="415.5" ></text>
</g>
<g >
<title>`main (4,747 samples, 99.92%)</title><rect x="10.0" y="1045" width="1179.0" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" >`main</text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.02%)</title><rect x="1083.7" y="421" width="0.2" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1086.70" y="431.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.04%)</title><rect x="851.2" y="341" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="854.23" y="351.5" ></text>
</g>
<g >
<title>`CONVERT-ACCORDING-TO-READTABLE-CASE^ECLECTOR.READER^FN^^ (1,181 samples, 24.86%)</title><rect x="420.1" y="405" width="293.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="423.06" y="415.5" >`CONVERT-ACCORDING-TO-READTABLE-CASE^EC..</text>
</g>
<g >
<title>`__gmpn_tdiv_qr (2 samples, 0.04%)</title><rect x="869.4" y="341" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="872.36" y="351.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (2 samples, 0.04%)</title><rect x="464.0" y="341" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="467.02" y="351.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (8 samples, 0.17%)</title><rect x="911.3" y="245" width="2.0" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="914.33" y="255.5" ></text>
</g>
<g >
<title>`GC_mark_some (21 samples, 0.44%)</title><rect x="78.8" y="213" width="5.2" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="81.80" y="223.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.04%)</title><rect x="679.4" y="357" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="682.35" y="367.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (7 samples, 0.15%)</title><rect x="417.1" y="277" width="1.7" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="420.08" y="287.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="1091.4" y="437" width="0.2" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1094.40" y="447.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (21 samples, 0.44%)</title><rect x="273.3" y="325" width="5.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="276.27" y="335.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="1161.4" y="405" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1164.44" y="415.5" ></text>
</g>
<g >
<title>`GC_install_header (1 samples, 0.02%)</title><rect x="88.2" y="245" width="0.3" height="15.0" fill="rgb(217,74,74)" rx="2" ry="2" />
<text  x="91.24" y="255.5" ></text>
</g>
<g >
<title>`READ-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (4,196 samples, 88.32%)</title><rect x="51.5" y="453" width="1042.1" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="54.48" y="463.5" >`READ-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^</text>
</g>
<g >
<title>`core::log_operation_2op(core::boole_ops, gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="379.6" y="373" width="0.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="382.57" y="383.5" ></text>
</g>
<g >
<title>`wrapped_contagen_add_Number_spNumber_sp (126 samples, 2.65%)</title><rect x="831.9" y="405" width="31.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="834.85" y="415.5" >`w..</text>
</g>
<g >
<title>`core::template_Vector&lt;core::StrWNs_O, core::SimpleCharacterStri (3 samples, 0.06%)</title><rect x="128.2" y="405" width="0.8" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="131.22" y="415.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (3 samples, 0.06%)</title><rect x="474.2" y="341" width="0.7" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="477.20" y="351.5" ></text>
</g>
<g >
<title>`__cxa_begin_catch (2 samples, 0.04%)</title><rect x="1097.9" y="453" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1100.86" y="463.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (24 samples, 0.51%)</title><rect x="545.5" y="213" width="5.9" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="548.48" y="223.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (2 samples, 0.04%)</title><rect x="102.9" y="405" width="0.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="105.89" y="415.5" ></text>
</g>
<g >
<title>`READER-FLOAT-FORMAT^ECLECTOR.READER^FN^^ (1 samples, 0.02%)</title><rect x="787.9" y="405" width="0.2" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="790.89" y="415.5" ></text>
</g>
<g >
<title>`COERCE^COMMON-LISP^FN^^ (3 samples, 0.06%)</title><rect x="343.8" y="421" width="0.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="346.81" y="431.5" ></text>
</g>
<g >
<title>`GC_mark_from (19 samples, 0.40%)</title><rect x="1156.5" y="309" width="4.7" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="1159.47" y="319.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.02%)</title><rect x="806.3" y="341" width="0.2" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="809.27" y="351.5" ></text>
</g>
<g >
<title>`core::Ratio_O::setf_numerator_denominator(gctools::smart_ptr&lt;co (18 samples, 0.38%)</title><rect x="879.0" y="341" width="4.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="882.04" y="351.5" ></text>
</g>
<g >
<title>`GC_get_first_part (1 samples, 0.02%)</title><rect x="88.2" y="261" width="0.3" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="91.24" y="271.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (8 samples, 0.17%)</title><rect x="911.3" y="325" width="2.0" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="914.33" y="335.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (2 samples, 0.04%)</title><rect x="795.3" y="245" width="0.5" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="798.34" y="255.5" ></text>
</g>
<g >
<title>`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="629" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (13 samples, 0.27%)</title><rect x="1136.1" y="261" width="3.2" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="1139.10" y="271.5" ></text>
</g>
<g >
<title>`unw_set_reg (1 samples, 0.02%)</title><rect x="992.3" y="325" width="0.2" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="995.30" y="335.5" ></text>
</g>
<g >
<title>`pthread_getspecific (2 samples, 0.04%)</title><rect x="1162.4" y="437" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1165.43" y="447.5" ></text>
</g>
<g >
<title>`UNREAD-CHAR^COMMON-LISP^FN^^ (4 samples, 0.08%)</title><rect x="1110.0" y="469" width="1.0" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="1113.03" y="479.5" ></text>
</g>
<g >
<title>`core::interpreter_lookup_function_or_error(gctools::smart_ptr&lt;c (1 samples, 0.02%)</title><rect x="1184.0" y="565" width="0.3" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="1187.04" y="575.5" ></text>
</g>
<g >
<title>`LOGAND-2OP^CORE^FN^^ (13 samples, 0.27%)</title><rect x="372.1" y="389" width="3.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="375.12" y="399.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (8 samples, 0.17%)</title><rect x="971.7" y="357" width="2.0" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="974.68" y="367.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (6 samples, 0.13%)</title><rect x="1044.5" y="421" width="1.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1047.46" y="431.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (3 samples, 0.06%)</title><rect x="1010.2" y="389" width="0.7" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1013.18" y="399.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="818.4" y="389" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="821.44" y="399.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.02%)</title><rect x="845.5" y="197" width="0.3" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="848.51" y="207.5" ></text>
</g>
<g >
<title>`core::core__logand_2op(gctools::smart_ptr&lt;core::Integer_O&gt;, gct (4 samples, 0.08%)</title><rect x="378.1" y="373" width="1.0" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="381.08" y="383.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="964.2" y="341" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="967.23" y="351.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (36 samples, 0.76%)</title><rect x="114.1" y="357" width="8.9" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="117.07" y="367.5" ></text>
</g>
<g >
<title>`NSTRING-UPCASE^COMMON-LISP^FN^^ (1,098 samples, 23.11%)</title><rect x="433.7" y="389" width="272.7" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="436.72" y="399.5" >`NSTRING-UPCASE^COMMON-LISP^FN^^</text>
</g>
<g >
<title>`GC_push_contents_hdr (29 samples, 0.61%)</title><rect x="1139.3" y="261" width="7.2" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="1142.33" y="271.5" ></text>
</g>
<g >
<title>`CCLASP-EVAL^CLASP-CLEAVIR^FN^^ (4,747 samples, 99.92%)</title><rect x="10.0" y="693" width="1179.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >`CCLASP-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="913.3" y="341" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="916.32" y="351.5" ></text>
</g>
<g >
<title>`rand (2 samples, 0.04%)</title><rect x="1163.4" y="453" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1166.42" y="463.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (10 samples, 0.21%)</title><rect x="962.2" y="357" width="2.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="965.25" y="367.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (3 samples, 0.06%)</title><rect x="834.6" y="293" width="0.7" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="837.58" y="303.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="917.3" y="341" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="920.29" y="351.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="45.3" y="341" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="48.27" y="351.5" ></text>
</g>
<g >
<title>`wrapped_core__vset_T_spAbstractSimpleVector_spsize_t (4 samples, 0.08%)</title><rect x="463.5" y="357" width="1.0" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="466.52" y="367.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="100.7" y="325" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="103.65" y="335.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (2 samples, 0.04%)</title><rect x="115.6" y="229" width="0.5" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="118.56" y="239.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(unsigned char) (1 samples, 0.02%)</title><rect x="392.7" y="389" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="395.74" y="399.5" ></text>
</g>
<g >
<title>`core::Cons_O::length() const (2 samples, 0.04%)</title><rect x="1166.2" y="501" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="1169.16" y="511.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="889.5" y="373" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="892.47" y="383.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="1150.5" y="325" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1153.51" y="335.5" ></text>
</g>
<g >
<title>`wrapped_cl__values_VaList_sp (3 samples, 0.06%)</title><rect x="699.2" y="373" width="0.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="702.22" y="383.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="968.2" y="325" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="971.21" y="335.5" ></text>
</g>
<g >
<title>`cc_makeCell (43 samples, 0.91%)</title><rect x="762.3" y="389" width="10.7" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="765.31" y="399.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_lock_slow (22 samples, 0.46%)</title><rect x="282.5" y="309" width="5.4" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="285.46" y="319.5" ></text>
</g>
<g >
<title>`G16143^KEYWORD^FN^^ (1 samples, 0.02%)</title><rect x="10.0" y="485" width="0.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (3 samples, 0.06%)</title><rect x="461.8" y="357" width="0.7" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="464.78" y="367.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.02%)</title><rect x="78.8" y="197" width="0.2" height="15.0" fill="rgb(217,74,74)" rx="2" ry="2" />
<text  x="81.80" y="207.5" ></text>
</g>
<g >
<title>`core::Rational_O::create(__gmp_expr&lt;__mpz_struct [1], __mpz_str (65 samples, 1.37%)</title><rect x="903.6" y="373" width="16.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="906.63" y="383.5" ></text>
</g>
<g >
<title>`funlockfile (1 samples, 0.02%)</title><rect x="48.7" y="357" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="51.75" y="367.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.04%)</title><rect x="1178.3" y="533" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1181.33" y="543.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="399.9" y="373" width="0.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="402.94" y="383.5" ></text>
</g>
<g >
<title>`flockfile (2 samples, 0.04%)</title><rect x="44.3" y="357" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="47.27" y="367.5" ></text>
</g>
<g >
<title>`GC_mark_some (8 samples, 0.17%)</title><rect x="911.3" y="229" width="2.0" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="914.33" y="239.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="1040.7" y="421" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1043.73" y="431.5" ></text>
</g>
<g >
<title>`GC_get_first_part (2 samples, 0.04%)</title><rect x="534.8" y="277" width="0.5" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="537.80" y="287.5" ></text>
</g>
<g >
<title>`core::Ratio_O::create(gctools::smart_ptr&lt;core::Integer_O&gt;, gcto (2 samples, 0.04%)</title><rect x="866.1" y="373" width="0.5" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="869.13" y="383.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (1 samples, 0.02%)</title><rect x="706.2" y="357" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="709.18" y="367.5" ></text>
</g>
<g >
<title>`GC_notify_or_invoke_finalizers (1 samples, 0.02%)</title><rect x="92.7" y="309" width="0.3" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="95.71" y="319.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (2 samples, 0.04%)</title><rect x="403.4" y="341" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="406.42" y="351.5" ></text>
</g>
<g >
<title>`wrapped_llvm_sys__FunctionCreate_FunctionType_spllvm__GlobalVal (1 samples, 0.02%)</title><rect x="10.0" y="165" width="0.2" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>`__cxa_allocate_exception (12 samples, 0.25%)</title><rect x="962.2" y="405" width="3.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="965.25" y="415.5" ></text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (7 samples, 0.15%)</title><rect x="708.2" y="389" width="1.7" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="711.16" y="399.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__bzero (1 samples, 0.02%)</title><rect x="815.7" y="357" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="818.71" y="367.5" ></text>
</g>
<g >
<title>`GC_allochblk (5 samples, 0.11%)</title><rect x="1054.6" y="373" width="1.3" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="1057.64" y="383.5" ></text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (33 samples, 0.69%)</title><rect x="468.2" y="373" width="8.2" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="471.24" y="383.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="876.6" y="229" width="0.2" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="879.56" y="239.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="827.6" y="405" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="830.63" y="415.5" ></text>
</g>
<g >
<title>`__cxxabiv1::get_shim_type_info(unsigned long long, unsigned cha (1 samples, 0.02%)</title><rect x="968.5" y="341" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="971.46" y="351.5" ></text>
</g>
<g >
<title>`free (3 samples, 0.06%)</title><rect x="919.8" y="373" width="0.7" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="922.77" y="383.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (3 samples, 0.06%)</title><rect x="1116.7" y="453" width="0.8" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="1119.73" y="463.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="112.3" y="357" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="115.33" y="367.5" ></text>
</g>
<g >
<title>`core::core__apply1(gctools::smart_ptr&lt;core::Function_O&gt;, gctool (1 samples, 0.02%)</title><rect x="1171.6" y="517" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1174.62" y="527.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (3 samples, 0.06%)</title><rect x="963.5" y="309" width="0.7" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="966.49" y="319.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="1041.5" y="421" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1044.48" y="431.5" ></text>
</g>
<g >
<title>`core::clasp_to_int(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.04%)</title><rect x="1165.2" y="485" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1168.16" y="495.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="818.2" y="389" width="0.2" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="821.19" y="399.5" ></text>
</g>
<g >
<title>`wrapped_core__make_vector_T_sp_________________________________ (109 samples, 2.29%)</title><rect x="68.6" y="389" width="27.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="71.62" y="399.5" >`..</text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="984.6" y="325" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="987.60" y="335.5" ></text>
</g>
<g >
<title>`__cxa_throw (164 samples, 3.45%)</title><rect x="965.2" y="405" width="40.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="968.23" y="415.5" >`__..</text>
</g>
<g >
<title>`__gmpz_cmp_si (1 samples, 0.02%)</title><rect x="909.3" y="357" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="912.34" y="367.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_unlock_slow (38 samples, 0.80%)</title><rect x="290.7" y="309" width="9.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="293.66" y="319.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.06%)</title><rect x="818.7" y="389" width="0.7" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="821.69" y="399.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="1118.5" y="485" width="0.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1121.47" y="495.5" ></text>
</g>
<g >
<title>`clear_marks_for_block (1 samples, 0.02%)</title><rect x="1057.1" y="277" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1060.12" y="287.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="862.9" y="389" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="865.90" y="399.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.02%)</title><rect x="78.5" y="213" width="0.3" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="81.55" y="223.5" ></text>
</g>
<g >
<title>`core::apply0_inner_list(gctools::smart_ptr&lt;core::Function_O&gt;, g (4,746 samples, 99.89%)</title><rect x="10.2" y="661" width="1178.8" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="13.25" y="671.5" >`core::apply0_inner_list(gctools::smart_ptr&lt;core::Function_O&gt;, g</text>
</g>
<g >
<title>`CHAR-INVALID-P^ECLECTOR.READER^FN^^ (3 samples, 0.06%)</title><rect x="343.1" y="421" width="0.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="346.06" y="431.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (3 samples, 0.06%)</title><rect x="760.6" y="373" width="0.7" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="763.57" y="383.5" ></text>
</g>
<g >
<title>`__cxa_get_globals (4 samples, 0.08%)</title><rect x="1004.5" y="389" width="1.0" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="1007.47" y="399.5" ></text>
</g>
<g >
<title>`__gmp_default_allocate (5 samples, 0.11%)</title><rect x="838.3" y="341" width="1.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="841.31" y="351.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (4,667 samples, 98.23%)</title><rect x="15.7" y="533" width="1159.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="18.71" y="543.5" >`READ-AUX^ECLECTOR.READER^FN^^</text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="816.2" y="277" width="0.3" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="819.21" y="287.5" ></text>
</g>
<g >
<title>`%VERIFY-STRING-ARGS^COMMON-LISP^FN^^ (2 samples, 0.04%)</title><rect x="426.0" y="389" width="0.5" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="429.02" y="399.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (15 samples, 0.32%)</title><rect x="814.5" y="389" width="3.7" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="817.47" y="399.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (12 samples, 0.25%)</title><rect x="1001.0" y="325" width="3.0" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1003.99" y="335.5" ></text>
</g>
<g >
<title>`unwind_phase2 (65 samples, 1.37%)</title><rect x="988.3" y="373" width="16.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="991.32" y="383.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (4 samples, 0.08%)</title><rect x="907.1" y="293" width="1.0" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="910.11" y="303.5" ></text>
</g>
<g >
<title>`wrapped_cl__gethash_T_spHashTableBase_spT_sp (1 samples, 0.02%)</title><rect x="407.9" y="373" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="410.89" y="383.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="1088.9" y="421" width="0.3" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="1091.91" y="431.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (108 samples, 2.27%)</title><rect x="730.5" y="293" width="26.8" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="733.52" y="303.5" >`..</text>
</g>
<g >
<title>`core::clasp_expt(gctools::smart_ptr&lt;core::Number_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="831.4" y="389" width="0.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="834.36" y="399.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.04%)</title><rect x="769.8" y="341" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="772.76" y="351.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (1 samples, 0.02%)</title><rect x="937.2" y="389" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="940.16" y="399.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (27 samples, 0.57%)</title><rect x="77.6" y="325" width="6.7" height="15.0" fill="rgb(239,108,108)" rx="2" ry="2" />
<text  x="80.56" y="335.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (4 samples, 0.08%)</title><rect x="541.5" y="229" width="1.0" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="544.51" y="239.5" ></text>
</g>
<g >
<title>`core::cl__gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (2 samples, 0.04%)</title><rect x="403.9" y="357" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="406.91" y="367.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="84.8" y="325" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="87.76" y="335.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="88.7" y="229" width="0.3" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="91.73" y="239.5" ></text>
</g>
<g >
<title>`GC_freehblk (1 samples, 0.02%)</title><rect x="1156.2" y="277" width="0.3" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="1159.22" y="287.5" ></text>
</g>
<g >
<title>`INTERPRET-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (2,347 samples, 49.40%)</title><rect x="346.3" y="421" width="582.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="349.29" y="431.5" >`INTERPRET-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^</text>
</g>
<g >
<title>`core::core__vref(gctools::smart_ptr&lt;core::AbstractSimpleVector_ (1 samples, 0.02%)</title><rect x="705.9" y="357" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="708.93" y="367.5" ></text>
</g>
<g >
<title>`CHAR^COMMON-LISP^SETF^^ (3 samples, 0.06%)</title><rect x="427.0" y="389" width="0.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="430.01" y="399.5" ></text>
</g>
<g >
<title>`core::MDArray_O::set_data(gctools::smart_ptr&lt;core::Array_O&gt;) (1 samples, 0.02%)</title><rect x="111.1" y="389" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="114.09" y="399.5" ></text>
</g>
<g >
<title>`core::Unwind::Unwind(core::T_O*, unsigned long) (3 samples, 0.06%)</title><rect x="1036.0" y="421" width="0.8" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="1039.01" y="431.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="100.4" y="245" width="0.3" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="103.41" y="255.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (2 samples, 0.04%)</title><rect x="947.3" y="325" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="950.34" y="335.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;llvmo::Function_O&gt; gctools::GCObjectAppropri (1 samples, 0.02%)</title><rect x="10.0" y="133" width="0.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>`rand (2 samples, 0.04%)</title><rect x="853.0" y="357" width="0.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="855.96" y="367.5" ></text>
</g>
<g >
<title>`__cxa_decrement_exception_refcount (1 samples, 0.02%)</title><rect x="1098.4" y="453" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1101.35" y="463.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="993.5" y="293" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="996.54" y="303.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="10.0" y="69" width="0.2" height="15.0" fill="rgb(248,119,119)" rx="2" ry="2" />
<text  x="13.00" y="79.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (44 samples, 0.93%)</title><rect x="795.1" y="309" width="10.9" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="798.09" y="319.5" ></text>
</g>
<g >
<title>`flockfile (3 samples, 0.06%)</title><rect x="47.0" y="341" width="0.8" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="50.01" y="351.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (27 samples, 0.57%)</title><rect x="1014.7" y="341" width="6.7" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1017.65" y="351.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (58 samples, 1.22%)</title><rect x="1010.9" y="389" width="14.4" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="1013.93" y="399.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (12 samples, 0.25%)</title><rect x="1083.9" y="421" width="3.0" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="1086.95" y="431.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (5 samples, 0.11%)</title><rect x="679.9" y="373" width="1.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="682.85" y="383.5" ></text>
</g>
<g >
<title>`default_zone_malloc (1 samples, 0.02%)</title><rect x="838.6" y="293" width="0.2" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="841.56" y="303.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.02%)</title><rect x="1155.7" y="405" width="0.3" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="1158.73" y="415.5" ></text>
</g>
<g >
<title>`mach_timebase_info (2 samples, 0.04%)</title><rect x="1034.5" y="373" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1037.52" y="383.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (3 samples, 0.06%)</title><rect x="729.5" y="309" width="0.8" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="732.52" y="319.5" ></text>
</g>
<g >
<title>`core::core__logand_2op(gctools::smart_ptr&lt;core::Integer_O&gt;, gct (2 samples, 0.04%)</title><rect x="103.4" y="405" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="106.39" y="415.5" ></text>
</g>
<g >
<title>`tlv_get_addr (4 samples, 0.08%)</title><rect x="1045.0" y="405" width="0.9" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1047.95" y="415.5" ></text>
</g>
<g >
<title>`core::Cons_O::length() const (2 samples, 0.04%)</title><rect x="1167.4" y="517" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="1170.40" y="527.5" ></text>
</g>
<g >
<title>`GC_malloc (14 samples, 0.29%)</title><rect x="480.9" y="357" width="3.5" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="483.91" y="367.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.04%)</title><rect x="1081.7" y="421" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1084.71" y="431.5" ></text>
</g>
<g >
<title>`unw_step (2 samples, 0.04%)</title><rect x="1005.5" y="389" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1008.46" y="399.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (3 samples, 0.06%)</title><rect x="1077.7" y="437" width="0.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1080.74" y="447.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (2 samples, 0.04%)</title><rect x="991.8" y="325" width="0.5" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="994.80" y="335.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="1156.2" y="341" width="0.3" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="1159.22" y="351.5" ></text>
</g>
<g >
<title>`GC_build_fl (3 samples, 0.06%)</title><rect x="1149.8" y="325" width="0.7" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="1152.76" y="335.5" ></text>
</g>
<g >
<title>`wrapped_core__apply1_Function_spT_sp___________________________ (2 samples, 0.04%)</title><rect x="1174.4" y="517" width="0.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1177.35" y="527.5" ></text>
</g>
<g >
<title>`core::core__syntax_type(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (176 samples, 3.70%)</title><rect x="184.1" y="389" width="43.7" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="187.11" y="399.5" >`cor..</text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="28.6" y="501" width="0.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="31.63" y="511.5" ></text>
</g>
<g >
<title>`CCLASP-EVAL-WITH-ENV^CLASP-CLEAVIR^((T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="10.0" y="597" width="0.2" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="711.9" y="373" width="0.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="714.89" y="383.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (7 samples, 0.15%)</title><rect x="1030.1" y="357" width="1.7" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="1033.05" y="367.5" ></text>
</g>
<g >
<title>`core::DoubleFloat_O::as_double_() const (1 samples, 0.02%)</title><rect x="894.7" y="389" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="897.69" y="399.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="948.3" y="309" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="951.34" y="319.5" ></text>
</g>
<g >
<title>`cm_check_index (2 samples, 0.04%)</title><rect x="392.0" y="389" width="0.5" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="394.99" y="399.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="807.8" y="389" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="810.76" y="399.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (24 samples, 0.51%)</title><rect x="965.2" y="373" width="6.0" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="968.23" y="383.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (17 samples, 0.36%)</title><rect x="531.3" y="293" width="4.2" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="534.33" y="303.5" ></text>
</g>
<g >
<title>`GC_mark_some (7 samples, 0.15%)</title><rect x="417.1" y="229" width="1.7" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="420.08" y="239.5" ></text>
</g>
<g >
<title>`NEXT^ECLECTOR.READER^FN^^ (50 samples, 1.05%)</title><rect x="774.2" y="405" width="12.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="777.23" y="415.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (4 samples, 0.08%)</title><rect x="540.3" y="229" width="1.0" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="543.27" y="239.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="1162.9" y="437" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1165.93" y="447.5" ></text>
</g>
<g >
<title>`malloc (10 samples, 0.21%)</title><rect x="962.2" y="373" width="2.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="965.25" y="383.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.02%)</title><rect x="115.3" y="261" width="0.3" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="118.31" y="271.5" ></text>
</g>
<g >
<title>`core::cl__char_code(gctools::smart_ptr&lt;core::Character_I&gt;) (1 samples, 0.02%)</title><rect x="393.0" y="389" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="395.98" y="399.5" ></text>
</g>
<g >
<title>`core::clasp_integer_divide(gctools::smart_ptr&lt;core::Integer_O&gt;, (1 samples, 0.02%)</title><rect x="883.3" y="325" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="886.26" y="335.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (3 samples, 0.06%)</title><rect x="475.7" y="357" width="0.7" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="478.69" y="367.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_clos__interpret_dtree_program_SimpleVector_s (1 samples, 0.02%)</title><rect x="25.9" y="517" width="0.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="28.90" y="527.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cc_multipleValuesArrayAddress (2 samples, 0.04%)</title><rect x="715.6" y="405" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="718.62" y="415.5" ></text>
</g>
<g >
<title>`realloc (2 samples, 0.04%)</title><rect x="837.6" y="341" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="840.56" y="351.5" ></text>
</g>
<g >
<title>`GC_notify_or_invoke_finalizers (1 samples, 0.02%)</title><rect x="122.8" y="325" width="0.2" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="125.76" y="335.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (2 samples, 0.04%)</title><rect x="1106.5" y="421" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1109.55" y="431.5" ></text>
</g>
<g >
<title>`cc_makeCell (26 samples, 0.55%)</title><rect x="1082.2" y="437" width="6.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1085.21" y="447.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (3 samples, 0.06%)</title><rect x="1096.9" y="389" width="0.7" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="1099.86" y="399.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (11 samples, 0.23%)</title><rect x="984.8" y="309" width="2.8" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="987.85" y="319.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.04%)</title><rect x="789.9" y="373" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="792.88" y="383.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (13 samples, 0.27%)</title><rect x="690.5" y="373" width="3.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="693.53" y="383.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (4 samples, 0.08%)</title><rect x="1102.3" y="453" width="1.0" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1105.33" y="463.5" ></text>
</g>
<g >
<title>`GC_free_block_ending_at (2 samples, 0.04%)</title><rect x="545.0" y="165" width="0.5" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="547.99" y="175.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (14 samples, 0.29%)</title><rect x="518.2" y="341" width="3.4" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="521.16" y="351.5" ></text>
</g>
<g >
<title>`GC_clear_marks (1 samples, 0.02%)</title><rect x="115.1" y="261" width="0.2" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="118.06" y="271.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.02%)</title><rect x="1161.2" y="309" width="0.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="1164.19" y="319.5" ></text>
</g>
<g >
<title>`READ-CHAR^ECLECTOR.BASE^FN^^ (2 samples, 0.04%)</title><rect x="31.4" y="469" width="0.5" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="34.36" y="479.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="419.6" y="357" width="0.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="422.56" y="367.5" ></text>
</g>
<g >
<title>`core::Rational_O::create(__gmp_expr&lt;__mpz_struct [1], __mpz_str (91 samples, 1.92%)</title><rect x="866.6" y="373" width="22.6" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="869.62" y="383.5" >`..</text>
</g>
<g >
<title>`GC_try_to_collect_inner (87 samples, 1.83%)</title><rect x="1126.2" y="325" width="21.6" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="1129.17" y="335.5" >`..</text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.02%)</title><rect x="100.4" y="341" width="0.3" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="103.41" y="351.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (86 samples, 1.81%)</title><rect x="1126.4" y="309" width="21.4" height="15.0" fill="rgb(217,74,74)" rx="2" ry="2" />
<text  x="1129.42" y="319.5" >`..</text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="928.5" y="357" width="0.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="931.47" y="367.5" ></text>
</g>
<g >
<title>`fread (22 samples, 0.46%)</title><rect x="305.3" y="357" width="5.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="308.31" y="367.5" ></text>
</g>
<g >
<title>`funlockfile (4 samples, 0.08%)</title><rect x="47.8" y="341" width="0.9" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="50.75" y="351.5" ></text>
</g>
<g >
<title>`core::contagen_div(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (121 samples, 2.55%)</title><rect x="863.4" y="389" width="30.0" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="866.40" y="399.5" >`c..</text>
</g>
<g >
<title>`CHAR^COMMON-LISP^SETF^^ (8 samples, 0.17%)</title><rect x="462.5" y="373" width="2.0" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="465.53" y="383.5" ></text>
</g>
<g >
<title>`unw_set_reg (2 samples, 0.04%)</title><rect x="938.9" y="341" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="941.90" y="351.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="917.5" y="357" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="920.54" y="367.5" ></text>
</g>
<g >
<title>`core::cl__unread_char(gctools::smart_ptr&lt;core::Character_I&gt;, gc (1 samples, 0.02%)</title><rect x="1102.1" y="453" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1105.08" y="463.5" ></text>
</g>
<g >
<title>`__error (1 samples, 0.02%)</title><rect x="45.8" y="341" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="48.77" y="351.5" ></text>
</g>
<g >
<title>`core::cl__lower_case_p(gctools::smart_ptr&lt;core::Character_I&gt;) (5 samples, 0.11%)</title><rect x="685.8" y="373" width="1.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="688.81" y="383.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (9 samples, 0.19%)</title><rect x="1095.4" y="405" width="2.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="1098.37" y="415.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (6 samples, 0.13%)</title><rect x="99.9" y="389" width="1.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="102.91" y="399.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (5 samples, 0.11%)</title><rect x="935.4" y="421" width="1.3" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="938.42" y="431.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::make(unsigned long, int, bool, gctools::smart_p (92 samples, 1.94%)</title><rect x="72.8" y="357" width="22.9" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="75.84" y="367.5" >`..</text>
</g>
<g >
<title>`__gmpn_tdiv_qr (1 samples, 0.02%)</title><rect x="871.8" y="325" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="874.84" y="335.5" ></text>
</g>
<g >
<title>`core::Closure_O::describeFunction() const (2 samples, 0.04%)</title><rect x="759.3" y="357" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="762.33" y="367.5" ></text>
</g>
<g >
<title>`DOUBLE-FLOAT-P^CORE^FN^^ (1 samples, 0.02%)</title><rect x="398.9" y="389" width="0.3" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="401.95" y="399.5" ></text>
</g>
<g >
<title>`_Unwind_GetRegionStart (1 samples, 0.02%)</title><rect x="990.8" y="325" width="0.3" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="993.81" y="335.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="1103.6" y="421" width="0.2" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="1106.57" y="431.5" ></text>
</g>
<g >
<title>`GC_remove_protection (1 samples, 0.02%)</title><rect x="817.4" y="341" width="0.3" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="820.45" y="351.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (4 samples, 0.08%)</title><rect x="868.4" y="309" width="1.0" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="871.36" y="319.5" ></text>
</g>
<g >
<title>`GC_build_fl (3 samples, 0.06%)</title><rect x="729.5" y="325" width="0.8" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="732.52" y="335.5" ></text>
</g>
<g >
<title>`tiny_size (2 samples, 0.04%)</title><rect x="885.7" y="341" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="888.75" y="351.5" ></text>
</g>
<g >
<title>`GC_push_marked2 (2 samples, 0.04%)</title><rect x="646.8" y="197" width="0.5" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="649.82" y="207.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.02%)</title><rect x="1156.0" y="325" width="0.2" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="1158.97" y="335.5" ></text>
</g>
<g >
<title>`wrapped_core__logand_2op_Integer_spInteger_sp (1 samples, 0.02%)</title><rect x="367.2" y="373" width="0.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="370.15" y="383.5" ></text>
</g>
</g>
</svg>
